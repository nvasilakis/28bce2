kind = STUB
major_key = CEntryStub
name = CEntryStub
compiler = unknown
Instructions (size = 392)
0xffff58206060     0  add x11, jssp, x0, lsl #3
0xffff58206064     4  sub x11, x11, #0x8 (8)
0xffff58206068     8  sub csp, jssp, #0x10 (16)
0xffff5820606c    12  stp fp, lr, [jssp, #-16]!
0xffff58206070    16  mov fp, jssp
0xffff58206074    20  movz x10, #0x300000000
0xffff58206078    24  sub csp, jssp, #0x8 (8)
0xffff5820607c    28  str x10, [jssp, #-8]!
0xffff58206080    32  sub csp, jssp, #0x8 (8)
0xffff58206084    36  str xzr, [jssp, #-8]!
0xffff58206088    40  ldr x10, pc+248 (addr 0x0000ffff58206180)    ;; object: 0xffff58206001 <Code: STUB>
0xffff5820608c    44  sub csp, jssp, #0x8 (8)
0xffff58206090    48  str x10, [jssp, #-8]!
0xffff58206094    52  ldr x10, pc+244 (addr 0x0000ffff58206188)    ;; external reference (Isolate::c_entry_fp_address)
0xffff58206098    56  str fp, [x10]
0xffff5820609c    60  ldr x10, pc+244 (addr 0x0000ffff58206190)    ;; external reference (Isolate::context_address)
0xffff582060a0    64  str cp, [x10]
0xffff582060a4    68  sub csp, jssp, #0x20 (32)
0xffff582060a8    72  sub jssp, jssp, #0x20 (32)
0xffff582060ac    76  and csp, jssp, #0xfffffffffffffff0
0xffff582060b0    80  add x10, csp, #0x8 (8)
0xffff582060b4    84  stur x10, [fp, #-16]
0xffff582060b8    88  str x21, [csp, #8]
0xffff582060bc    92  str x22, [csp, #16]
0xffff582060c0    96  str x23, [csp, #24]
0xffff582060c4   100  mov x22, x0
0xffff582060c8   104  mov x23, x1
0xffff582060cc   108  mov x21, x11
0xffff582060d0   112  mov x0, x22
0xffff582060d4   116  mov x1, x21
0xffff582060d8   120  ldr x2, pc+192 (addr 0x0000ffff58206198)    ;; external reference (isolate)
0xffff582060dc   124  adr x12, #+0xc (addr 0xffff582060e8)
0xffff582060e0   128  str x12, [csp]
0xffff582060e4   132  blr x23
0xffff582060e8   136  ldr x16, [x26, #344]
0xffff582060ec   140  cmp x0, x16
0xffff582060f0   144  b.eq #+0x34 (addr 0xffff58206124)
0xffff582060f4   148  mov x11, x22
0xffff582060f8   152  ldr x21, [csp, #8]
0xffff582060fc   156  ldr x22, [csp, #16]
0xffff58206100   160  ldr x23, [csp, #24]
0xffff58206104   164  ldr x10, pc+156 (addr 0x0000ffff582061a0)    ;; external reference (Isolate::context_address)
0xffff58206108   168  ldr cp, [x10]
0xffff5820610c   172  ldr x10, pc+156 (addr 0x0000ffff582061a8)    ;; external reference (Isolate::c_entry_fp_address)
0xffff58206110   176  str xzr, [x10]
0xffff58206114   180  mov jssp, fp
0xffff58206118   184  ldp fp, lr, [jssp], #16
0xffff5820611c   188  add jssp, jssp, x11, lsl #3
0xffff58206120   192  ret
0xffff58206124   196  movz x0, #0x0
0xffff58206128   200  movz x1, #0x0
0xffff5820612c   204  ldr x2, pc+132 (addr 0x0000ffff582061b0)    ;; external reference (isolate)
0xffff58206130   208  ldr x16, pc+136 (addr 0x0000ffff582061b8)    ;; external reference (Runtime::UnwindAndFindExceptionHandler)
0xffff58206134   212  blr x16
0xffff58206138   216  ldr cp, pc+136 (addr 0x0000ffff582061c0)    ;; external reference (Isolate::pending_handler_context_address)
0xffff5820613c   220  ldr cp, [cp]
0xffff58206140   224  ldr jssp, pc+136 (addr 0x0000ffff582061c8)    ;; external reference (Isolate::pending_handler_sp_address)
0xffff58206144   228  ldr jssp, [jssp]
0xffff58206148   232  ldr fp, pc+136 (addr 0x0000ffff582061d0)    ;; external reference (Isolate::pending_handler_fp_address)
0xffff5820614c   236  ldr fp, [fp]
0xffff58206150   240  cbz cp, #+0x8 (addr 0xffff58206158)
0xffff58206154   244  stur cp, [fp, #-8]
0xffff58206158   248  ldr x10, pc+128 (addr 0x0000ffff582061d8)    ;; external reference (Isolate::pending_handler_code_address)
0xffff5820615c   252  ldr x10, [x10]
0xffff58206160   256  ldr x11, pc+128 (addr 0x0000ffff582061e0)    ;; external reference (Isolate::pending_handler_offset_address)
0xffff58206164   260  ldr x11, [x11]
0xffff58206168   264  add x10, x10, #0x5f (95)
0xffff5820616c   268  add x10, x10, x11
0xffff58206170   272  br x10
0xffff58206174   276  5800039f       constant pool begin (num_const = 28)    ;; constant pool
0xffff58206178   280  d63f03e0       constant
0xffff5820617c   284  d503201f       constant
0xffff58206180   288  58206001       constant
0xffff58206184   292  0000ffff       constant
0xffff58206188   296  16e79df8       constant
0xffff5820618c   300  00000000       constant
0xffff58206190   304  16e79d90       constant
0xffff58206194   308  00000000       constant
0xffff58206198   312  16e782d0       constant
0xffff5820619c   316  00000000       constant
0xffff582061a0   320  16e79d90       constant
0xffff582061a4   324  00000000       constant
0xffff582061a8   328  16e79df8       constant
0xffff582061ac   332  00000000       constant
0xffff582061b0   336  16e782d0       constant
0xffff582061b4   340  00000000       constant
0xffff582061b8   344  00e232d8       constant
0xffff582061bc   348  00000000       constant
0xffff582061c0   352  16e79da8       constant
0xffff582061c4   356  00000000       constant
0xffff582061c8   360  16e79dc8       constant
0xffff582061cc   364  00000000       constant
0xffff582061d0   368  16e79dc0       constant
0xffff582061d4   372  00000000       constant
0xffff582061d8   376  16e79db0       constant
0xffff582061dc   380  00000000       constant
0xffff582061e0   384  16e79db8       constant
0xffff582061e4   388  00000000       constant


RelocInfo (size = 31)
0xffff58206088  embedded object  (0xffff58206001 <Code: STUB>)
0xffff58206094  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff5820609c  external reference (Isolate::context_address)  (0x16e79d90)
0xffff582060d8  external reference (isolate)  (0x16e782d0)
0xffff58206104  external reference (Isolate::context_address)  (0x16e79d90)
0xffff5820610c  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff5820612c  external reference (isolate)  (0x16e782d0)
0xffff58206130  external reference (Runtime::UnwindAndFindExceptionHandler)  (0xe232d8)
0xffff58206138  external reference (Isolate::pending_handler_context_address)  (0x16e79da8)
0xffff58206140  external reference (Isolate::pending_handler_sp_address)  (0x16e79dc8)
0xffff58206148  external reference (Isolate::pending_handler_fp_address)  (0x16e79dc0)
0xffff58206158  external reference (Isolate::pending_handler_code_address)  (0x16e79db0)
0xffff58206160  external reference (Isolate::pending_handler_offset_address)  (0x16e79db8)
0xffff58206174  constant pool (size 116)


kind = STUB
major_key = CEntryStub
name = CEntryStub
compiler = unknown
Instructions (size = 488)
0xffff58206260     0  add x11, jssp, x0, lsl #3
0xffff58206264     4  sub x11, x11, #0x8 (8)
0xffff58206268     8  sub csp, jssp, #0x10 (16)
0xffff5820626c    12  stp fp, lr, [jssp, #-16]!
0xffff58206270    16  mov fp, jssp
0xffff58206274    20  movz x10, #0x300000000
0xffff58206278    24  sub csp, jssp, #0x8 (8)
0xffff5820627c    28  str x10, [jssp, #-8]!
0xffff58206280    32  sub csp, jssp, #0x8 (8)
0xffff58206284    36  str xzr, [jssp, #-8]!
0xffff58206288    40  ldr x10, pc+344 (addr 0x0000ffff582063e0)    ;; object: 0xffff58206201 <Code: STUB>
0xffff5820628c    44  sub csp, jssp, #0x8 (8)
0xffff58206290    48  str x10, [jssp, #-8]!
0xffff58206294    52  ldr x10, pc+340 (addr 0x0000ffff582063e8)    ;; external reference (Isolate::c_entry_fp_address)
0xffff58206298    56  str fp, [x10]
0xffff5820629c    60  ldr x10, pc+340 (addr 0x0000ffff582063f0)    ;; external reference (Isolate::context_address)
0xffff582062a0    64  str cp, [x10]
0xffff582062a4    68  sub csp, jssp, #0xc0 (192)
0xffff582062a8    72  stp d28, d29, [jssp, #-32]!
0xffff582062ac    76  stp d30, d31, [jssp, #16]
0xffff582062b0    80  stp d24, d25, [jssp, #-32]!
0xffff582062b4    84  stp d26, d27, [jssp, #16]
0xffff582062b8    88  stp d20, d21, [jssp, #-32]!
0xffff582062bc    92  stp d22, d23, [jssp, #16]
0xffff582062c0    96  stp d16, d17, [jssp, #-32]!
0xffff582062c4   100  stp d18, d19, [jssp, #16]
0xffff582062c8   104  stp d4, d5, [jssp, #-32]!
0xffff582062cc   108  stp d6, d7, [jssp, #16]
0xffff582062d0   112  stp d0, d1, [jssp, #-32]!
0xffff582062d4   116  stp d2, d3, [jssp, #16]
0xffff582062d8   120  sub csp, jssp, #0x20 (32)
0xffff582062dc   124  sub jssp, jssp, #0x20 (32)
0xffff582062e0   128  and csp, jssp, #0xfffffffffffffff0
0xffff582062e4   132  add x10, csp, #0x8 (8)
0xffff582062e8   136  stur x10, [fp, #-16]
0xffff582062ec   140  str x21, [csp, #8]
0xffff582062f0   144  str x22, [csp, #16]
0xffff582062f4   148  str x23, [csp, #24]
0xffff582062f8   152  mov x22, x0
0xffff582062fc   156  mov x23, x1
0xffff58206300   160  mov x21, x11
0xffff58206304   164  mov x0, x22
0xffff58206308   168  mov x1, x21
0xffff5820630c   172  ldr x2, pc+236 (addr 0x0000ffff582063f8)    ;; external reference (isolate)
0xffff58206310   176  adr x12, #+0xc (addr 0xffff5820631c)
0xffff58206314   180  str x12, [csp]
0xffff58206318   184  blr x23
0xffff5820631c   188  ldr x16, [x26, #344]
0xffff58206320   192  cmp x0, x16
0xffff58206324   196  b.eq #+0x64 (addr 0xffff58206388)
0xffff58206328   200  mov x11, x22
0xffff5820632c   204  ldr x21, [csp, #8]
0xffff58206330   208  ldr x22, [csp, #16]
0xffff58206334   212  ldr x23, [csp, #24]
0xffff58206338   216  ldp d30, d31, [fp, #-40]
0xffff5820633c   220  ldp d28, d29, [fp, #-56]
0xffff58206340   224  ldp d26, d27, [fp, #-72]
0xffff58206344   228  ldp d24, d25, [fp, #-88]
0xffff58206348   232  ldp d22, d23, [fp, #-104]
0xffff5820634c   236  ldp d20, d21, [fp, #-120]
0xffff58206350   240  ldp d18, d19, [fp, #-136]
0xffff58206354   244  ldp d16, d17, [fp, #-152]
0xffff58206358   248  ldp d6, d7, [fp, #-168]
0xffff5820635c   252  ldp d4, d5, [fp, #-184]
0xffff58206360   256  ldp d2, d3, [fp, #-200]
0xffff58206364   260  ldp d0, d1, [fp, #-216]
0xffff58206368   264  ldr x10, pc+152 (addr 0x0000ffff58206400)    ;; external reference (Isolate::context_address)
0xffff5820636c   268  ldr cp, [x10]
0xffff58206370   272  ldr x10, pc+152 (addr 0x0000ffff58206408)    ;; external reference (Isolate::c_entry_fp_address)
0xffff58206374   276  str xzr, [x10]
0xffff58206378   280  mov jssp, fp
0xffff5820637c   284  ldp fp, lr, [jssp], #16
0xffff58206380   288  add jssp, jssp, x11, lsl #3
0xffff58206384   292  ret
0xffff58206388   296  movz x0, #0x0
0xffff5820638c   300  movz x1, #0x0
0xffff58206390   304  ldr x2, pc+128 (addr 0x0000ffff58206410)    ;; external reference (isolate)
0xffff58206394   308  ldr x16, pc+132 (addr 0x0000ffff58206418)    ;; external reference (Runtime::UnwindAndFindExceptionHandler)
0xffff58206398   312  blr x16
0xffff5820639c   316  ldr cp, pc+132 (addr 0x0000ffff58206420)    ;; external reference (Isolate::pending_handler_context_address)
0xffff582063a0   320  ldr cp, [cp]
0xffff582063a4   324  ldr jssp, pc+132 (addr 0x0000ffff58206428)    ;; external reference (Isolate::pending_handler_sp_address)
0xffff582063a8   328  ldr jssp, [jssp]
0xffff582063ac   332  ldr fp, pc+132 (addr 0x0000ffff58206430)    ;; external reference (Isolate::pending_handler_fp_address)
0xffff582063b0   336  ldr fp, [fp]
0xffff582063b4   340  cbz cp, #+0x8 (addr 0xffff582063bc)
0xffff582063b8   344  stur cp, [fp, #-8]
0xffff582063bc   348  ldr x10, pc+124 (addr 0x0000ffff58206438)    ;; external reference (Isolate::pending_handler_code_address)
0xffff582063c0   352  ldr x10, [x10]
0xffff582063c4   356  ldr x11, pc+124 (addr 0x0000ffff58206440)    ;; external reference (Isolate::pending_handler_offset_address)
0xffff582063c8   360  ldr x11, [x11]
0xffff582063cc   364  add x10, x10, #0x5f (95)
0xffff582063d0   368  add x10, x10, x11
0xffff582063d4   372  br x10
0xffff582063d8   376  5800037f       constant pool begin (num_const = 27)    ;; constant pool
0xffff582063dc   380  d63f03e0       constant
0xffff582063e0   384  58206201       constant
0xffff582063e4   388  0000ffff       constant
0xffff582063e8   392  16e79df8       constant
0xffff582063ec   396  00000000       constant
0xffff582063f0   400  16e79d90       constant
0xffff582063f4   404  00000000       constant
0xffff582063f8   408  16e782d0       constant
0xffff582063fc   412  00000000       constant
0xffff58206400   416  16e79d90       constant
0xffff58206404   420  00000000       constant
0xffff58206408   424  16e79df8       constant
0xffff5820640c   428  00000000       constant
0xffff58206410   432  16e782d0       constant
0xffff58206414   436  00000000       constant
0xffff58206418   440  00e232d8       constant
0xffff5820641c   444  00000000       constant
0xffff58206420   448  16e79da8       constant
0xffff58206424   452  00000000       constant
0xffff58206428   456  16e79dc8       constant
0xffff5820642c   460  00000000       constant
0xffff58206430   464  16e79dc0       constant
0xffff58206434   468  00000000       constant
0xffff58206438   472  16e79db0       constant
0xffff5820643c   476  00000000       constant
0xffff58206440   480  16e79db8       constant
0xffff58206444   484  00000000       constant


RelocInfo (size = 35)
0xffff58206288  embedded object  (0xffff58206201 <Code: STUB>)
0xffff58206294  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff5820629c  external reference (Isolate::context_address)  (0x16e79d90)
0xffff5820630c  external reference (isolate)  (0x16e782d0)
0xffff58206368  external reference (Isolate::context_address)  (0x16e79d90)
0xffff58206370  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff58206390  external reference (isolate)  (0x16e782d0)
0xffff58206394  external reference (Runtime::UnwindAndFindExceptionHandler)  (0xe232d8)
0xffff5820639c  external reference (Isolate::pending_handler_context_address)  (0x16e79da8)
0xffff582063a4  external reference (Isolate::pending_handler_sp_address)  (0x16e79dc8)
0xffff582063ac  external reference (Isolate::pending_handler_fp_address)  (0x16e79dc0)
0xffff582063bc  external reference (Isolate::pending_handler_code_address)  (0x16e79db0)
0xffff582063c4  external reference (Isolate::pending_handler_offset_address)  (0x16e79db8)
0xffff582063d8  constant pool (size 112)


kind = STUB
major_key = StoreBufferOverflowStub
name = StoreBufferOverflowStub
compiler = unknown
Instructions (size = 120)
0xffff582064c0     0  sub csp, jssp, #0x90 (144)
0xffff582064c4     4  stp x14, x15, [jssp, #-32]!
0xffff582064c8     8  stp x18, lr, [jssp, #16]
0xffff582064cc    12  stp x10, x11, [jssp, #-32]!
0xffff582064d0    16  stp x12, x13, [jssp, #16]
0xffff582064d4    20  stp x6, x7, [jssp, #-32]!
0xffff582064d8    24  stp x8, x9, [jssp, #16]
0xffff582064dc    28  stp x2, x3, [jssp, #-32]!
0xffff582064e0    32  stp x4, x5, [jssp, #16]
0xffff582064e4    36  stp x0, x1, [jssp, #-16]!
0xffff582064e8    40  ldr x0, pc+64 (addr 0x0000ffff58206528)    ;; external reference (isolate)
0xffff582064ec    44  ldr x16, pc+68 (addr 0x0000ffff58206530)    ;; external reference (StoreBuffer::StoreBufferOverflow)
0xffff582064f0    48  and csp, jssp, #0xfffffffffffffff0
0xffff582064f4    52  blr x16
0xffff582064f8    56  ldp x2, x3, [jssp, #16]
0xffff582064fc    60  ldp x0, x1, [jssp], #32
0xffff58206500    64  ldp x6, x7, [jssp, #16]
0xffff58206504    68  ldp x4, x5, [jssp], #32
0xffff58206508    72  ldp x10, x11, [jssp, #16]
0xffff5820650c    76  ldp x8, x9, [jssp], #32
0xffff58206510    80  ldp x14, x15, [jssp, #16]
0xffff58206514    84  ldp x12, x13, [jssp], #32
0xffff58206518    88  ldp x18, lr, [jssp], #16
0xffff5820651c    92  ret
0xffff58206520    96  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff58206524   100  d63f03e0       constant
0xffff58206528   104  16e782d0       constant
0xffff5820652c   108  00000000       constant
0xffff58206530   112  00c716d0       constant
0xffff58206534   116  00000000       constant


RelocInfo (size = 10)
0xffff582064e8  external reference (isolate)  (0x16e782d0)
0xffff582064ec  external reference (StoreBuffer::StoreBufferOverflow)  (0xc716d0)
0xffff58206520  constant pool (size 24)


kind = STUB
major_key = StoreBufferOverflowStub
name = StoreBufferOverflowStub
compiler = unknown
Instructions (size = 216)
0xffff582065a0     0  sub csp, jssp, #0x90 (144)
0xffff582065a4     4  stp x14, x15, [jssp, #-32]!
0xffff582065a8     8  stp x18, lr, [jssp, #16]
0xffff582065ac    12  stp x10, x11, [jssp, #-32]!
0xffff582065b0    16  stp x12, x13, [jssp, #16]
0xffff582065b4    20  stp x6, x7, [jssp, #-32]!
0xffff582065b8    24  stp x8, x9, [jssp, #16]
0xffff582065bc    28  stp x2, x3, [jssp, #-32]!
0xffff582065c0    32  stp x4, x5, [jssp, #16]
0xffff582065c4    36  stp x0, x1, [jssp, #-16]!
0xffff582065c8    40  sub csp, jssp, #0xb0 (176)
0xffff582065cc    44  stp d26, d27, [jssp, #-32]!
0xffff582065d0    48  stp d28, d29, [jssp, #16]
0xffff582065d4    52  stp d22, d23, [jssp, #-32]!
0xffff582065d8    56  stp d24, d25, [jssp, #16]
0xffff582065dc    60  stp d18, d19, [jssp, #-32]!
0xffff582065e0    64  stp d20, d21, [jssp, #16]
0xffff582065e4    68  stp d6, d7, [jssp, #-32]!
0xffff582065e8    72  stp d16, d17, [jssp, #16]
0xffff582065ec    76  stp d2, d3, [jssp, #-32]!
0xffff582065f0    80  stp d4, d5, [jssp, #16]
0xffff582065f4    84  stp d0, d1, [jssp, #-16]!
0xffff582065f8    88  ldr x0, pc+112 (addr 0x0000ffff58206668)    ;; external reference (isolate)
0xffff582065fc    92  ldr x16, pc+116 (addr 0x0000ffff58206670)    ;; external reference (StoreBuffer::StoreBufferOverflow)
0xffff58206600    96  and csp, jssp, #0xfffffffffffffff0
0xffff58206604   100  blr x16
0xffff58206608   104  ldp d2, d3, [jssp, #16]
0xffff5820660c   108  ldp d0, d1, [jssp], #32
0xffff58206610   112  ldp d6, d7, [jssp, #16]
0xffff58206614   116  ldp d4, d5, [jssp], #32
0xffff58206618   120  ldp d18, d19, [jssp, #16]
0xffff5820661c   124  ldp d16, d17, [jssp], #32
0xffff58206620   128  ldp d22, d23, [jssp, #16]
0xffff58206624   132  ldp d20, d21, [jssp], #32
0xffff58206628   136  ldp d26, d27, [jssp, #16]
0xffff5820662c   140  ldp d24, d25, [jssp], #32
0xffff58206630   144  ldp d28, d29, [jssp], #16
0xffff58206634   148  ldp x2, x3, [jssp, #16]
0xffff58206638   152  ldp x0, x1, [jssp], #32
0xffff5820663c   156  ldp x6, x7, [jssp, #16]
0xffff58206640   160  ldp x4, x5, [jssp], #32
0xffff58206644   164  ldp x10, x11, [jssp, #16]
0xffff58206648   168  ldp x8, x9, [jssp], #32
0xffff5820664c   172  ldp x14, x15, [jssp, #16]
0xffff58206650   176  ldp x12, x13, [jssp], #32
0xffff58206654   180  ldp x18, lr, [jssp], #16
0xffff58206658   184  ret
0xffff5820665c   188  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58206660   192  d63f03e0       constant
0xffff58206664   196  d503201f       constant
0xffff58206668   200  16e782d0       constant
0xffff5820666c   204  00000000       constant
0xffff58206670   208  00c716d0       constant
0xffff58206674   212  00000000       constant


RelocInfo (size = 14)
0xffff582065f8  external reference (isolate)  (0x16e782d0)
0xffff582065fc  external reference (StoreBuffer::StoreBufferOverflow)  (0xc716d0)
0xffff5820665c  constant pool (size 28)


kind = STUB
major_key = StubFailureTrampolineStub
name = StubFailureTrampolineStub
compiler = unknown
Instructions (size = 48)
0xffff582066e0     0  ldr x16, pc+40 (addr 0x0000ffff58206708)    ;; code: STUB, CEntryStub, minor: 5
0xffff582066e4     4  blr x16
0xffff582066e8     8  ldur x1, [fp, #-24]
0xffff582066ec    12  mov jssp, fp
0xffff582066f0    16  ldp fp, lr, [jssp], #16
0xffff582066f4    20  add jssp, jssp, x1, lsl #3
0xffff582066f8    24  ret
0xffff582066fc    28  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58206700    32  d63f03e0       constant
0xffff58206704    36  d503201f       constant
0xffff58206708    40  58206260       constant
0xffff5820670c    44  0000ffff       constant


RelocInfo (size = 7)
0xffff582066e0  code target (STUB)  (0xffff58206260)
0xffff582066fc  constant pool (size 20)


kind = STUB
major_key = StubFailureTrampolineStub
name = StubFailureTrampolineStub
compiler = unknown
Instructions (size = 48)
0xffff58206780     0  ldr x16, pc+40 (addr 0x0000ffff582067a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58206784     4  blr x16
0xffff58206788     8  ldur x1, [fp, #-24]
0xffff5820678c    12  add x1, x1, #0x1 (1)
0xffff58206790    16  mov jssp, fp
0xffff58206794    20  ldp fp, lr, [jssp], #16
0xffff58206798    24  add jssp, jssp, x1, lsl #3
0xffff5820679c    28  ret
0xffff582067a0    32  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582067a4    36  d63f03e0       constant
0xffff582067a8    40  58206260       constant
0xffff582067ac    44  0000ffff       constant


RelocInfo (size = 7)
0xffff58206780  code target (STUB)  (0xffff58206260)
0xffff582067a0  constant pool (size 16)


kind = STUB
major_key = StoreRegistersStateStub
name = StoreRegistersStateStub
compiler = unknown
Instructions (size = 80)
0xffff58206820     0  mov x17, lr
0xffff58206824     4  mov lr, x16
0xffff58206828     8  sub csp, jssp, #0x20 (32)
0xffff5820682c    12  sub jssp, jssp, #0x20 (32)
0xffff58206830    16  sub csp, jssp, #0xe0 (224)
0xffff58206834    20  stp x26, cp, [jssp, #-32]!
0xffff58206838    24  stp fp, lr, [jssp, #16]
0xffff5820683c    28  stp x22, x23, [jssp, #-32]!
0xffff58206840    32  stp x24, x25, [jssp, #16]
0xffff58206844    36  stp x18, x19, [jssp, #-32]!
0xffff58206848    40  stp x20, x21, [jssp, #16]
0xffff5820684c    44  stp x12, x13, [jssp, #-32]!
0xffff58206850    48  stp x14, x15, [jssp, #16]
0xffff58206854    52  stp x8, x9, [jssp, #-32]!
0xffff58206858    56  stp x10, x11, [jssp, #16]
0xffff5820685c    60  stp x4, x5, [jssp, #-32]!
0xffff58206860    64  stp x6, x7, [jssp, #16]
0xffff58206864    68  stp x0, x1, [jssp, #-32]!
0xffff58206868    72  stp x2, x3, [jssp, #16]
0xffff5820686c    76  ret x17


RelocInfo (size = 0)


kind = STUB
major_key = RestoreRegistersStateStub
name = RestoreRegistersStateStub
compiler = unknown
Instructions (size = 68)
0xffff582068e0     0  mov x16, lr
0xffff582068e4     4  ldp x2, x3, [jssp, #16]
0xffff582068e8     8  ldp x0, x1, [jssp], #32
0xffff582068ec    12  ldp x6, x7, [jssp, #16]
0xffff582068f0    16  ldp x4, x5, [jssp], #32
0xffff582068f4    20  ldp x10, x11, [jssp, #16]
0xffff582068f8    24  ldp x8, x9, [jssp], #32
0xffff582068fc    28  ldp x14, x15, [jssp, #16]
0xffff58206900    32  ldp x12, x13, [jssp], #32
0xffff58206904    36  ldp x20, x21, [jssp, #16]
0xffff58206908    40  ldp x18, x19, [jssp], #32
0xffff5820690c    44  ldp x24, x25, [jssp, #16]
0xffff58206910    48  ldp x22, x23, [jssp], #32
0xffff58206914    52  ldp fp, lr, [jssp, #16]
0xffff58206918    56  ldp x26, cp, [jssp], #32
0xffff5820691c    60  add jssp, jssp, #0x20 (32)
0xffff58206920    64  ret x16


RelocInfo (size = 0)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 469)
0xffff582069a0     0  movz w0, #0x6000
0xffff582069a4     4  movk w0, #0x9, lsl #16
0xffff582069a8     8  cmp w0, #0x30 (48)
0xffff582069ac    12  b.ls #+0x174 (addr 0xffff58206b20)
0xffff582069b0    16  movz x3, #0x92c0
0xffff582069b4    20  movk x3, #0x16e7, lsl #16
0xffff582069b8    24  ldp x4, x0, [x3]
0xffff582069bc    28  adds x16, x4, #0x60 (96)
0xffff582069c0    32  ccmp x16, x0, #nzCv, lo
0xffff582069c4    36  b.hi #+0x98 (addr 0xffff58206a5c)
0xffff582069c8    40  str x16, [x3]
0xffff582069cc    44  orr x4, x4, #0x1
0xffff582069d0    48  movz w0, #0x0
0xffff582069d4    52  stur x0, [x4, #47]
0xffff582069d8    56  ldur x0, [x1, #23]
0xffff582069dc    60  stur x0, [x4, #-1]
0xffff582069e0    64  ldr x0, pc+232 (addr 0x0000ffff58206ac8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582069e4    68  stur x0, [x4, #7]
0xffff582069e8    72  ldr x0, pc+232 (addr 0x0000ffff58206ad0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582069ec    76  stur x0, [x4, #15]
0xffff582069f0    80  movz x0, #0x0
0xffff582069f4    84  stur x0, [x4, #23]
0xffff582069f8    88  add x0, x4, #0x20 (32)
0xffff582069fc    92  ldr x1, pc+220 (addr 0x0000ffff58206ad8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58206a00    96  stur x1, [x0, #-1]
0xffff58206a04   100  stur x2, [x0, #7]
0xffff58206a08   104  ldur w0, [x2, #35]
0xffff58206a0c   108  add w0, w0, #0x1 (1)
0xffff58206a10   112  lsl x0, x0, #32
0xffff58206a14   116  stur x0, [x2, #31]
0xffff58206a18   120  add x0, x4, #0x30 (48)
0xffff58206a1c   124  ldr x1, pc+196 (addr 0x0000ffff58206ae0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58206a20   128  stur x1, [x0, #-1]
0xffff58206a24   132  movz x1, #0x400000000
0xffff58206a28   136  stur x1, [x0, #7]
0xffff58206a2c   140  stur x0, [x4, #15]
0xffff58206a30   144  ldr x1, pc+184 (addr 0x0000ffff58206ae8)    ;; object: 0x39c04519 <the hole>
0xffff58206a34   148  stur x1, [x0, #15]
0xffff58206a38   152  ldr x1, pc+184 (addr 0x0000ffff58206af0)    ;; object: 0x39c04519 <the hole>
0xffff58206a3c   156  stur x1, [x0, #23]
0xffff58206a40   160  ldr x1, pc+184 (addr 0x0000ffff58206af8)    ;; object: 0x39c04519 <the hole>
0xffff58206a44   164  stur x1, [x0, #31]
0xffff58206a48   168  ldr x1, pc+184 (addr 0x0000ffff58206b00)    ;; object: 0x39c04519 <the hole>
0xffff58206a4c   172  stur x1, [x0, #39]
0xffff58206a50   176  mov x0, x4
0xffff58206a54   180  add jssp, jssp, #0x8 (8)
0xffff58206a58   184  ret
0xffff58206a5c   188  sub csp, jssp, #0x10 (16)
0xffff58206a60   192  stp fp, lr, [jssp, #-16]!
0xffff58206a64   196  movz fp, #0xa00000000
0xffff58206a68   200  sub csp, jssp, #0x8 (8)
0xffff58206a6c   204  str fp, [jssp, #-8]!
0xffff58206a70   208  add fp, jssp, #0x8 (8)
0xffff58206a74   212  movz x4, #0x0
0xffff58206a78   216  mov x16, lr
0xffff58206a7c   220  ldr x17, pc+140 (addr 0x0000ffff58206b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58206a80   224  blr x17
0xffff58206a84   228  movz x0, #0x6000000000
0xffff58206a88   232  movz x10, #0x0
0xffff58206a8c   236  sub csp, jssp, #0x10 (16)
0xffff58206a90   240  stp x10, x0, [jssp, #-16]!
0xffff58206a94   244  movz x0, #0x2
0xffff58206a98   248  movz x1, #0x5b88
0xffff58206a9c   252  movk x1, #0xe2, lsl #16
0xffff58206aa0   256  ldr x16, pc+112 (addr 0x0000ffff58206b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff58206aa4   260  blr x16
0xffff58206aa8   264  str x0, [jssp, #32]
0xffff58206aac   268  ldr x16, pc+108 (addr 0x0000ffff58206b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58206ab0   272  blr x16
0xffff58206ab4   276  ldr lr, [jssp, #16]
0xffff58206ab8   280  ldp xzr, fp, [jssp], #24
0xffff58206abc   284  b #-0xec (addr 0xffff582069d0)
0xffff58206ac0   288  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff58206ac4   292  d63f03e0       constant
0xffff58206ac8   296  39c04201       constant
0xffff58206acc   300  00000000       constant
0xffff58206ad0   304  39c04201       constant
0xffff58206ad4   308  00000000       constant
0xffff58206ad8   312  32b05d81       constant
0xffff58206adc   316  00000000       constant
0xffff58206ae0   320  32b04259       constant
0xffff58206ae4   324  00000000       constant
0xffff58206ae8   328  39c04519       constant
0xffff58206aec   332  00000000       constant
0xffff58206af0   336  39c04519       constant
0xffff58206af4   340  00000000       constant
0xffff58206af8   344  39c04519       constant
0xffff58206afc   348  00000000       constant
0xffff58206b00   352  39c04519       constant
0xffff58206b04   356  00000000       constant
0xffff58206b08   360  58206820       constant
0xffff58206b0c   364  0000ffff       constant
0xffff58206b10   368  58206260       constant
0xffff58206b14   372  0000ffff       constant
0xffff58206b18   376  582068e0       constant
0xffff58206b1c   380  0000ffff       constant
0xffff58206b20   384  movz x16, #0x0
0xffff58206b24   388  sub csp, jssp, #0x10 (16)
0xffff58206b28   392  stp fp, lr, [jssp, #-16]!
0xffff58206b2c   396  bl #+0x4 (addr 0xffff58206b30)
0xffff58206b30   400  movz x17, #0xa00000000
0xffff58206b34   404  sub csp, jssp, #0x10 (16)
0xffff58206b38   408  stp x17, cp, [jssp, #-16]!
0xffff58206b3c   412  add fp, jssp, #0x10 (16)
0xffff58206b40   416  ldr x17, pc+24 (addr 0x0000ffff58206b58)    ;; lazy deoptimization bailout 0
0xffff58206b44   420  add x17, x17, x16
0xffff58206b48   424  br x17
0xffff58206b4c   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58206b50   432  d63f03e0       constant
0xffff58206b54   436  d503201f       constant
0xffff58206b58   440  58006000       constant
0xffff58206b5c   444  0000ffff       constant


Safepoints (size = 21)
0xffff58206aa8   264  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff582069e0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582069e8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582069fc  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58206a1c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58206a30  embedded object  (0x39c04519 <the hole>)
0xffff58206a38  embedded object  (0x39c04519 <the hole>)
0xffff58206a40  embedded object  (0x39c04519 <the hole>)
0xffff58206a48  embedded object  (0x39c04519 <the hole>)
0xffff58206a7c  code target (STUB)  (0xffff58206820)
0xffff58206aa0  code target (STUB)  (0xffff58206260)
0xffff58206aac  code target (STUB)  (0xffff582068e0)
0xffff58206ac0  constant pool (size 96)
0xffff58206b40  runtime entry
0xffff58206b4c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 469)
0xffff582069a0     0  movz w0, #0x6000
0xffff582069a4     4  movk w0, #0x9, lsl #16
0xffff582069a8     8  cmp w0, #0x30 (48)
0xffff582069ac    12  b.ls #+0x174 (addr 0xffff58206b20)
0xffff582069b0    16  movz x3, #0x92c0
0xffff582069b4    20  movk x3, #0x16e7, lsl #16
0xffff582069b8    24  ldp x4, x0, [x3]
0xffff582069bc    28  adds x16, x4, #0x60 (96)
0xffff582069c0    32  ccmp x16, x0, #nzCv, lo
0xffff582069c4    36  b.hi #+0x98 (addr 0xffff58206a5c)
0xffff582069c8    40  str x16, [x3]
0xffff582069cc    44  orr x4, x4, #0x1
0xffff582069d0    48  movz w0, #0x0
0xffff582069d4    52  stur x0, [x4, #47]
0xffff582069d8    56  ldur x0, [x1, #23]
0xffff582069dc    60  stur x0, [x4, #-1]
0xffff582069e0    64  ldr x0, pc+232 (addr 0x0000ffff58206ac8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582069e4    68  stur x0, [x4, #7]
0xffff582069e8    72  ldr x0, pc+232 (addr 0x0000ffff58206ad0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582069ec    76  stur x0, [x4, #15]
0xffff582069f0    80  movz x0, #0x0
0xffff582069f4    84  stur x0, [x4, #23]
0xffff582069f8    88  add x0, x4, #0x20 (32)
0xffff582069fc    92  ldr x1, pc+220 (addr 0x0000ffff58206ad8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58206a00    96  stur x1, [x0, #-1]
0xffff58206a04   100  stur x2, [x0, #7]
0xffff58206a08   104  ldur w0, [x2, #35]
0xffff58206a0c   108  add w0, w0, #0x1 (1)
0xffff58206a10   112  lsl x0, x0, #32
0xffff58206a14   116  stur x0, [x2, #31]
0xffff58206a18   120  add x0, x4, #0x30 (48)
0xffff58206a1c   124  ldr x1, pc+196 (addr 0x0000ffff58206ae0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58206a20   128  stur x1, [x0, #-1]
0xffff58206a24   132  movz x1, #0x400000000
0xffff58206a28   136  stur x1, [x0, #7]
0xffff58206a2c   140  stur x0, [x4, #15]
0xffff58206a30   144  ldr x1, pc+184 (addr 0x0000ffff58206ae8)    ;; object: 0x39c04519 <the hole>
0xffff58206a34   148  stur x1, [x0, #15]
0xffff58206a38   152  ldr x1, pc+184 (addr 0x0000ffff58206af0)    ;; object: 0x39c04519 <the hole>
0xffff58206a3c   156  stur x1, [x0, #23]
0xffff58206a40   160  ldr x1, pc+184 (addr 0x0000ffff58206af8)    ;; object: 0x39c04519 <the hole>
0xffff58206a44   164  stur x1, [x0, #31]
0xffff58206a48   168  ldr x1, pc+184 (addr 0x0000ffff58206b00)    ;; object: 0x39c04519 <the hole>
0xffff58206a4c   172  stur x1, [x0, #39]
0xffff58206a50   176  mov x0, x4
0xffff58206a54   180  add jssp, jssp, #0x8 (8)
0xffff58206a58   184  ret
0xffff58206a5c   188  sub csp, jssp, #0x10 (16)
0xffff58206a60   192  stp fp, lr, [jssp, #-16]!
0xffff58206a64   196  movz fp, #0xa00000000
0xffff58206a68   200  sub csp, jssp, #0x8 (8)
0xffff58206a6c   204  str fp, [jssp, #-8]!
0xffff58206a70   208  add fp, jssp, #0x8 (8)
0xffff58206a74   212  movz x4, #0x0
0xffff58206a78   216  mov x16, lr
0xffff58206a7c   220  ldr x17, pc+140 (addr 0x0000ffff58206b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58206a80   224  blr x17
0xffff58206a84   228  movz x0, #0x6000000000
0xffff58206a88   232  movz x10, #0x0
0xffff58206a8c   236  sub csp, jssp, #0x10 (16)
0xffff58206a90   240  stp x10, x0, [jssp, #-16]!
0xffff58206a94   244  movz x0, #0x2
0xffff58206a98   248  movz x1, #0x5b88
0xffff58206a9c   252  movk x1, #0xe2, lsl #16
0xffff58206aa0   256  ldr x16, pc+112 (addr 0x0000ffff58206b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff58206aa4   260  blr x16
0xffff58206aa8   264  str x0, [jssp, #32]
0xffff58206aac   268  ldr x16, pc+108 (addr 0x0000ffff58206b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58206ab0   272  blr x16
0xffff58206ab4   276  ldr lr, [jssp, #16]
0xffff58206ab8   280  ldp xzr, fp, [jssp], #24
0xffff58206abc   284  b #-0xec (addr 0xffff582069d0)
0xffff58206ac0   288  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff58206ac4   292  d63f03e0       constant
0xffff58206ac8   296  39c04201       constant
0xffff58206acc   300  00000000       constant
0xffff58206ad0   304  39c04201       constant
0xffff58206ad4   308  00000000       constant
0xffff58206ad8   312  32b05d81       constant
0xffff58206adc   316  00000000       constant
0xffff58206ae0   320  32b04259       constant
0xffff58206ae4   324  00000000       constant
0xffff58206ae8   328  39c04519       constant
0xffff58206aec   332  00000000       constant
0xffff58206af0   336  39c04519       constant
0xffff58206af4   340  00000000       constant
0xffff58206af8   344  39c04519       constant
0xffff58206afc   348  00000000       constant
0xffff58206b00   352  39c04519       constant
0xffff58206b04   356  00000000       constant
0xffff58206b08   360  58206820       constant
0xffff58206b0c   364  0000ffff       constant
0xffff58206b10   368  58206260       constant
0xffff58206b14   372  0000ffff       constant
0xffff58206b18   376  582068e0       constant
0xffff58206b1c   380  0000ffff       constant
0xffff58206b20   384  movz x16, #0x0
0xffff58206b24   388  sub csp, jssp, #0x10 (16)
0xffff58206b28   392  stp fp, lr, [jssp, #-16]!
0xffff58206b2c   396  bl #+0x4 (addr 0xffff58206b30)
0xffff58206b30   400  movz x17, #0xa00000000
0xffff58206b34   404  sub csp, jssp, #0x10 (16)
0xffff58206b38   408  stp x17, cp, [jssp, #-16]!
0xffff58206b3c   412  add fp, jssp, #0x10 (16)
0xffff58206b40   416  ldr x17, pc+24 (addr 0x0000ffff58206b58)    ;; lazy deoptimization bailout 0
0xffff58206b44   420  add x17, x17, x16
0xffff58206b48   424  br x17
0xffff58206b4c   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58206b50   432  d63f03e0       constant
0xffff58206b54   436  d503201f       constant
0xffff58206b58   440  58006000       constant
0xffff58206b5c   444  0000ffff       constant


Safepoints (size = 21)
0xffff58206aa8   264  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff582069e0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582069e8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582069fc  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58206a1c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58206a30  embedded object  (0x39c04519 <the hole>)
0xffff58206a38  embedded object  (0x39c04519 <the hole>)
0xffff58206a40  embedded object  (0x39c04519 <the hole>)
0xffff58206a48  embedded object  (0x39c04519 <the hole>)
0xffff58206a7c  code target (STUB)  (0xffff58206820)
0xffff58206aa0  code target (STUB)  (0xffff58206260)
0xffff58206aac  code target (STUB)  (0xffff582068e0)
0xffff58206ac0  constant pool (size 96)
0xffff58206b40  runtime entry
0xffff58206b4c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff58206be0     0  movz w0, #0x6000
0xffff58206be4     4  movk w0, #0x9, lsl #16
0xffff58206be8     8  cmp w0, #0x30 (48)
0xffff58206bec    12  b.ls #+0x14c (addr 0xffff58206d38)
0xffff58206bf0    16  movz x2, #0x92c0
0xffff58206bf4    20  movk x2, #0x16e7, lsl #16
0xffff58206bf8    24  ldp x3, x0, [x2]
0xffff58206bfc    28  adds x16, x3, #0x50 (80)
0xffff58206c00    32  ccmp x16, x0, #nzCv, lo
0xffff58206c04    36  b.hi #+0x78 (addr 0xffff58206c7c)
0xffff58206c08    40  str x16, [x2]
0xffff58206c0c    44  orr x3, x3, #0x1
0xffff58206c10    48  movz w0, #0x0
0xffff58206c14    52  stur x0, [x3, #31]
0xffff58206c18    56  ldur x0, [x1, #23]
0xffff58206c1c    60  stur x0, [x3, #-1]
0xffff58206c20    64  ldr x0, pc+200 (addr 0x0000ffff58206ce8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58206c24    68  stur x0, [x3, #7]
0xffff58206c28    72  ldr x0, pc+200 (addr 0x0000ffff58206cf0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58206c2c    76  stur x0, [x3, #15]
0xffff58206c30    80  movz x0, #0x0
0xffff58206c34    84  stur x0, [x3, #23]
0xffff58206c38    88  add x0, x3, #0x20 (32)
0xffff58206c3c    92  ldr x1, pc+188 (addr 0x0000ffff58206cf8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58206c40    96  stur x1, [x0, #-1]
0xffff58206c44   100  movz x1, #0x400000000
0xffff58206c48   104  stur x1, [x0, #7]
0xffff58206c4c   108  stur x0, [x3, #15]
0xffff58206c50   112  ldr x1, pc+176 (addr 0x0000ffff58206d00)    ;; object: 0x39c04519 <the hole>
0xffff58206c54   116  stur x1, [x0, #15]
0xffff58206c58   120  ldr x1, pc+176 (addr 0x0000ffff58206d08)    ;; object: 0x39c04519 <the hole>
0xffff58206c5c   124  stur x1, [x0, #23]
0xffff58206c60   128  ldr x1, pc+176 (addr 0x0000ffff58206d10)    ;; object: 0x39c04519 <the hole>
0xffff58206c64   132  stur x1, [x0, #31]
0xffff58206c68   136  ldr x1, pc+176 (addr 0x0000ffff58206d18)    ;; object: 0x39c04519 <the hole>
0xffff58206c6c   140  stur x1, [x0, #39]
0xffff58206c70   144  mov x0, x3
0xffff58206c74   148  add jssp, jssp, #0x8 (8)
0xffff58206c78   152  ret
0xffff58206c7c   156  sub csp, jssp, #0x10 (16)
0xffff58206c80   160  stp fp, lr, [jssp, #-16]!
0xffff58206c84   164  movz fp, #0xa00000000
0xffff58206c88   168  sub csp, jssp, #0x8 (8)
0xffff58206c8c   172  str fp, [jssp, #-8]!
0xffff58206c90   176  add fp, jssp, #0x8 (8)
0xffff58206c94   180  movz x3, #0x0
0xffff58206c98   184  mov x16, lr
0xffff58206c9c   188  ldr x17, pc+132 (addr 0x0000ffff58206d20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58206ca0   192  blr x17
0xffff58206ca4   196  movz x0, #0x5000000000
0xffff58206ca8   200  movz x10, #0x0
0xffff58206cac   204  sub csp, jssp, #0x10 (16)
0xffff58206cb0   208  stp x10, x0, [jssp, #-16]!
0xffff58206cb4   212  movz x0, #0x2
0xffff58206cb8   216  movz x1, #0x5b88
0xffff58206cbc   220  movk x1, #0xe2, lsl #16
0xffff58206cc0   224  ldr x16, pc+104 (addr 0x0000ffff58206d28)    ;; code: STUB, CEntryStub, minor: 5
0xffff58206cc4   228  blr x16
0xffff58206cc8   232  str x0, [jssp, #24]
0xffff58206ccc   236  ldr x16, pc+100 (addr 0x0000ffff58206d30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58206cd0   240  blr x16
0xffff58206cd4   244  ldr lr, [jssp, #16]
0xffff58206cd8   248  ldp xzr, fp, [jssp], #24
0xffff58206cdc   252  b #-0xcc (addr 0xffff58206c10)
0xffff58206ce0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff58206ce4   260  d63f03e0       constant
0xffff58206ce8   264  39c04201       constant
0xffff58206cec   268  00000000       constant
0xffff58206cf0   272  39c04201       constant
0xffff58206cf4   276  00000000       constant
0xffff58206cf8   280  32b04259       constant
0xffff58206cfc   284  00000000       constant
0xffff58206d00   288  39c04519       constant
0xffff58206d04   292  00000000       constant
0xffff58206d08   296  39c04519       constant
0xffff58206d0c   300  00000000       constant
0xffff58206d10   304  39c04519       constant
0xffff58206d14   308  00000000       constant
0xffff58206d18   312  39c04519       constant
0xffff58206d1c   316  00000000       constant
0xffff58206d20   320  58206820       constant
0xffff58206d24   324  0000ffff       constant
0xffff58206d28   328  58206260       constant
0xffff58206d2c   332  0000ffff       constant
0xffff58206d30   336  582068e0       constant
0xffff58206d34   340  0000ffff       constant
0xffff58206d38   344  movz x16, #0x0
0xffff58206d3c   348  sub csp, jssp, #0x10 (16)
0xffff58206d40   352  stp fp, lr, [jssp, #-16]!
0xffff58206d44   356  bl #+0x4 (addr 0xffff58206d48)
0xffff58206d48   360  movz x17, #0xa00000000
0xffff58206d4c   364  sub csp, jssp, #0x10 (16)
0xffff58206d50   368  stp x17, cp, [jssp, #-16]!
0xffff58206d54   372  add fp, jssp, #0x10 (16)
0xffff58206d58   376  ldr x17, pc+24 (addr 0x0000ffff58206d70)    ;; lazy deoptimization bailout 0
0xffff58206d5c   380  add x17, x17, x16
0xffff58206d60   384  br x17
0xffff58206d64   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58206d68   392  d63f03e0       constant
0xffff58206d6c   396  d503201f       constant
0xffff58206d70   400  58006000       constant
0xffff58206d74   404  0000ffff       constant


Safepoints (size = 21)
0xffff58206cc8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff58206c20  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58206c28  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58206c3c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58206c50  embedded object  (0x39c04519 <the hole>)
0xffff58206c58  embedded object  (0x39c04519 <the hole>)
0xffff58206c60  embedded object  (0x39c04519 <the hole>)
0xffff58206c68  embedded object  (0x39c04519 <the hole>)
0xffff58206c9c  code target (STUB)  (0xffff58206820)
0xffff58206cc0  code target (STUB)  (0xffff58206260)
0xffff58206ccc  code target (STUB)  (0xffff582068e0)
0xffff58206ce0  constant pool (size 88)
0xffff58206d58  runtime entry
0xffff58206d64  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 429)
0xffff58206be0     0  movz w0, #0x6000
0xffff58206be4     4  movk w0, #0x9, lsl #16
0xffff58206be8     8  cmp w0, #0x30 (48)
0xffff58206bec    12  b.ls #+0x14c (addr 0xffff58206d38)
0xffff58206bf0    16  movz x2, #0x92c0
0xffff58206bf4    20  movk x2, #0x16e7, lsl #16
0xffff58206bf8    24  ldp x3, x0, [x2]
0xffff58206bfc    28  adds x16, x3, #0x50 (80)
0xffff58206c00    32  ccmp x16, x0, #nzCv, lo
0xffff58206c04    36  b.hi #+0x78 (addr 0xffff58206c7c)
0xffff58206c08    40  str x16, [x2]
0xffff58206c0c    44  orr x3, x3, #0x1
0xffff58206c10    48  movz w0, #0x0
0xffff58206c14    52  stur x0, [x3, #31]
0xffff58206c18    56  ldur x0, [x1, #23]
0xffff58206c1c    60  stur x0, [x3, #-1]
0xffff58206c20    64  ldr x0, pc+200 (addr 0x0000ffff58206ce8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58206c24    68  stur x0, [x3, #7]
0xffff58206c28    72  ldr x0, pc+200 (addr 0x0000ffff58206cf0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58206c2c    76  stur x0, [x3, #15]
0xffff58206c30    80  movz x0, #0x0
0xffff58206c34    84  stur x0, [x3, #23]
0xffff58206c38    88  add x0, x3, #0x20 (32)
0xffff58206c3c    92  ldr x1, pc+188 (addr 0x0000ffff58206cf8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58206c40    96  stur x1, [x0, #-1]
0xffff58206c44   100  movz x1, #0x400000000
0xffff58206c48   104  stur x1, [x0, #7]
0xffff58206c4c   108  stur x0, [x3, #15]
0xffff58206c50   112  ldr x1, pc+176 (addr 0x0000ffff58206d00)    ;; object: 0x39c04519 <the hole>
0xffff58206c54   116  stur x1, [x0, #15]
0xffff58206c58   120  ldr x1, pc+176 (addr 0x0000ffff58206d08)    ;; object: 0x39c04519 <the hole>
0xffff58206c5c   124  stur x1, [x0, #23]
0xffff58206c60   128  ldr x1, pc+176 (addr 0x0000ffff58206d10)    ;; object: 0x39c04519 <the hole>
0xffff58206c64   132  stur x1, [x0, #31]
0xffff58206c68   136  ldr x1, pc+176 (addr 0x0000ffff58206d18)    ;; object: 0x39c04519 <the hole>
0xffff58206c6c   140  stur x1, [x0, #39]
0xffff58206c70   144  mov x0, x3
0xffff58206c74   148  add jssp, jssp, #0x8 (8)
0xffff58206c78   152  ret
0xffff58206c7c   156  sub csp, jssp, #0x10 (16)
0xffff58206c80   160  stp fp, lr, [jssp, #-16]!
0xffff58206c84   164  movz fp, #0xa00000000
0xffff58206c88   168  sub csp, jssp, #0x8 (8)
0xffff58206c8c   172  str fp, [jssp, #-8]!
0xffff58206c90   176  add fp, jssp, #0x8 (8)
0xffff58206c94   180  movz x3, #0x0
0xffff58206c98   184  mov x16, lr
0xffff58206c9c   188  ldr x17, pc+132 (addr 0x0000ffff58206d20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58206ca0   192  blr x17
0xffff58206ca4   196  movz x0, #0x5000000000
0xffff58206ca8   200  movz x10, #0x0
0xffff58206cac   204  sub csp, jssp, #0x10 (16)
0xffff58206cb0   208  stp x10, x0, [jssp, #-16]!
0xffff58206cb4   212  movz x0, #0x2
0xffff58206cb8   216  movz x1, #0x5b88
0xffff58206cbc   220  movk x1, #0xe2, lsl #16
0xffff58206cc0   224  ldr x16, pc+104 (addr 0x0000ffff58206d28)    ;; code: STUB, CEntryStub, minor: 5
0xffff58206cc4   228  blr x16
0xffff58206cc8   232  str x0, [jssp, #24]
0xffff58206ccc   236  ldr x16, pc+100 (addr 0x0000ffff58206d30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58206cd0   240  blr x16
0xffff58206cd4   244  ldr lr, [jssp, #16]
0xffff58206cd8   248  ldp xzr, fp, [jssp], #24
0xffff58206cdc   252  b #-0xcc (addr 0xffff58206c10)
0xffff58206ce0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff58206ce4   260  d63f03e0       constant
0xffff58206ce8   264  39c04201       constant
0xffff58206cec   268  00000000       constant
0xffff58206cf0   272  39c04201       constant
0xffff58206cf4   276  00000000       constant
0xffff58206cf8   280  32b04259       constant
0xffff58206cfc   284  00000000       constant
0xffff58206d00   288  39c04519       constant
0xffff58206d04   292  00000000       constant
0xffff58206d08   296  39c04519       constant
0xffff58206d0c   300  00000000       constant
0xffff58206d10   304  39c04519       constant
0xffff58206d14   308  00000000       constant
0xffff58206d18   312  39c04519       constant
0xffff58206d1c   316  00000000       constant
0xffff58206d20   320  58206820       constant
0xffff58206d24   324  0000ffff       constant
0xffff58206d28   328  58206260       constant
0xffff58206d2c   332  0000ffff       constant
0xffff58206d30   336  582068e0       constant
0xffff58206d34   340  0000ffff       constant
0xffff58206d38   344  movz x16, #0x0
0xffff58206d3c   348  sub csp, jssp, #0x10 (16)
0xffff58206d40   352  stp fp, lr, [jssp, #-16]!
0xffff58206d44   356  bl #+0x4 (addr 0xffff58206d48)
0xffff58206d48   360  movz x17, #0xa00000000
0xffff58206d4c   364  sub csp, jssp, #0x10 (16)
0xffff58206d50   368  stp x17, cp, [jssp, #-16]!
0xffff58206d54   372  add fp, jssp, #0x10 (16)
0xffff58206d58   376  ldr x17, pc+24 (addr 0x0000ffff58206d70)    ;; lazy deoptimization bailout 0
0xffff58206d5c   380  add x17, x17, x16
0xffff58206d60   384  br x17
0xffff58206d64   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58206d68   392  d63f03e0       constant
0xffff58206d6c   396  d503201f       constant
0xffff58206d70   400  58006000       constant
0xffff58206d74   404  0000ffff       constant


Safepoints (size = 21)
0xffff58206cc8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff58206c20  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58206c28  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58206c3c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58206c50  embedded object  (0x39c04519 <the hole>)
0xffff58206c58  embedded object  (0x39c04519 <the hole>)
0xffff58206c60  embedded object  (0x39c04519 <the hole>)
0xffff58206c68  embedded object  (0x39c04519 <the hole>)
0xffff58206c9c  code target (STUB)  (0xffff58206820)
0xffff58206cc0  code target (STUB)  (0xffff58206260)
0xffff58206ccc  code target (STUB)  (0xffff582068e0)
0xffff58206ce0  constant pool (size 88)
0xffff58206d58  runtime entry
0xffff58206d64  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 485)
0xffff58206e00     0  movz w0, #0x6000
0xffff58206e04     4  movk w0, #0x9, lsl #16
0xffff58206e08     8  cmp w0, #0x30 (48)
0xffff58206e0c    12  b.ls #+0x184 (addr 0xffff58206f90)
0xffff58206e10    16  movz x3, #0x92c0
0xffff58206e14    20  movk x3, #0x16e7, lsl #16
0xffff58206e18    24  ldp x4, x0, [x3]
0xffff58206e1c    28  adds x16, x4, #0x60 (96)
0xffff58206e20    32  ccmp x16, x0, #nzCv, lo
0xffff58206e24    36  b.hi #+0xa4 (addr 0xffff58206ec8)
0xffff58206e28    40  str x16, [x3]
0xffff58206e2c    44  orr x4, x4, #0x1
0xffff58206e30    48  movz w0, #0x0
0xffff58206e34    52  stur x0, [x4, #47]
0xffff58206e38    56  ldur x0, [x1, #39]
0xffff58206e3c    60  ldur x0, [x0, #39]
0xffff58206e40    64  movz x16, #0x17f
0xffff58206e44    68  ldr x0, [x0, x16]
0xffff58206e48    72  stur x0, [x4, #-1]
0xffff58206e4c    76  ldr x0, pc+236 (addr 0x0000ffff58206f38)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58206e50    80  stur x0, [x4, #7]
0xffff58206e54    84  ldr x0, pc+236 (addr 0x0000ffff58206f40)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58206e58    88  stur x0, [x4, #15]
0xffff58206e5c    92  movz x0, #0x0
0xffff58206e60    96  stur x0, [x4, #23]
0xffff58206e64   100  add x0, x4, #0x20 (32)
0xffff58206e68   104  ldr x1, pc+224 (addr 0x0000ffff58206f48)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58206e6c   108  stur x1, [x0, #-1]
0xffff58206e70   112  stur x2, [x0, #7]
0xffff58206e74   116  ldur w0, [x2, #35]
0xffff58206e78   120  add w0, w0, #0x1 (1)
0xffff58206e7c   124  lsl x0, x0, #32
0xffff58206e80   128  stur x0, [x2, #31]
0xffff58206e84   132  add x0, x4, #0x30 (48)
0xffff58206e88   136  ldr x1, pc+200 (addr 0x0000ffff58206f50)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58206e8c   140  stur x1, [x0, #-1]
0xffff58206e90   144  movz x1, #0x400000000
0xffff58206e94   148  stur x1, [x0, #7]
0xffff58206e98   152  stur x0, [x4, #15]
0xffff58206e9c   156  ldr x1, pc+188 (addr 0x0000ffff58206f58)    ;; object: 0x39c04519 <the hole>
0xffff58206ea0   160  stur x1, [x0, #15]
0xffff58206ea4   164  ldr x1, pc+188 (addr 0x0000ffff58206f60)    ;; object: 0x39c04519 <the hole>
0xffff58206ea8   168  stur x1, [x0, #23]
0xffff58206eac   172  ldr x1, pc+188 (addr 0x0000ffff58206f68)    ;; object: 0x39c04519 <the hole>
0xffff58206eb0   176  stur x1, [x0, #31]
0xffff58206eb4   180  ldr x1, pc+188 (addr 0x0000ffff58206f70)    ;; object: 0x39c04519 <the hole>
0xffff58206eb8   184  stur x1, [x0, #39]
0xffff58206ebc   188  mov x0, x4
0xffff58206ec0   192  add jssp, jssp, #0x8 (8)
0xffff58206ec4   196  ret
0xffff58206ec8   200  sub csp, jssp, #0x10 (16)
0xffff58206ecc   204  stp fp, lr, [jssp, #-16]!
0xffff58206ed0   208  movz fp, #0xa00000000
0xffff58206ed4   212  sub csp, jssp, #0x8 (8)
0xffff58206ed8   216  str fp, [jssp, #-8]!
0xffff58206edc   220  add fp, jssp, #0x8 (8)
0xffff58206ee0   224  movz x4, #0x0
0xffff58206ee4   228  mov x16, lr
0xffff58206ee8   232  ldr x17, pc+144 (addr 0x0000ffff58206f78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58206eec   236  blr x17
0xffff58206ef0   240  movz x0, #0x6000000000
0xffff58206ef4   244  movz x10, #0x0
0xffff58206ef8   248  sub csp, jssp, #0x10 (16)
0xffff58206efc   252  stp x10, x0, [jssp, #-16]!
0xffff58206f00   256  movz x0, #0x2
0xffff58206f04   260  movz x1, #0x5b88
0xffff58206f08   264  movk x1, #0xe2, lsl #16
0xffff58206f0c   268  ldr x16, pc+116 (addr 0x0000ffff58206f80)    ;; code: STUB, CEntryStub, minor: 5
0xffff58206f10   272  blr x16
0xffff58206f14   276  str x0, [jssp, #32]
0xffff58206f18   280  ldr x16, pc+112 (addr 0x0000ffff58206f88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58206f1c   284  blr x16
0xffff58206f20   288  ldr lr, [jssp, #16]
0xffff58206f24   292  ldp xzr, fp, [jssp], #24
0xffff58206f28   296  b #-0xf8 (addr 0xffff58206e30)
0xffff58206f2c   300  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff58206f30   304  d63f03e0       constant
0xffff58206f34   308  d503201f       constant
0xffff58206f38   312  39c04201       constant
0xffff58206f3c   316  00000000       constant
0xffff58206f40   320  39c04201       constant
0xffff58206f44   324  00000000       constant
0xffff58206f48   328  32b05d81       constant
0xffff58206f4c   332  00000000       constant
0xffff58206f50   336  32b04259       constant
0xffff58206f54   340  00000000       constant
0xffff58206f58   344  39c04519       constant
0xffff58206f5c   348  00000000       constant
0xffff58206f60   352  39c04519       constant
0xffff58206f64   356  00000000       constant
0xffff58206f68   360  39c04519       constant
0xffff58206f6c   364  00000000       constant
0xffff58206f70   368  39c04519       constant
0xffff58206f74   372  00000000       constant
0xffff58206f78   376  58206820       constant
0xffff58206f7c   380  0000ffff       constant
0xffff58206f80   384  58206260       constant
0xffff58206f84   388  0000ffff       constant
0xffff58206f88   392  582068e0       constant
0xffff58206f8c   396  0000ffff       constant
0xffff58206f90   400  movz x16, #0x0
0xffff58206f94   404  sub csp, jssp, #0x10 (16)
0xffff58206f98   408  stp fp, lr, [jssp, #-16]!
0xffff58206f9c   412  bl #+0x4 (addr 0xffff58206fa0)
0xffff58206fa0   416  movz x17, #0xa00000000
0xffff58206fa4   420  sub csp, jssp, #0x10 (16)
0xffff58206fa8   424  stp x17, cp, [jssp, #-16]!
0xffff58206fac   428  add fp, jssp, #0x10 (16)
0xffff58206fb0   432  ldr x17, pc+24 (addr 0x0000ffff58206fc8)    ;; lazy deoptimization bailout 0
0xffff58206fb4   436  add x17, x17, x16
0xffff58206fb8   440  br x17
0xffff58206fbc   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58206fc0   448  d63f03e0       constant
0xffff58206fc4   452  d503201f       constant
0xffff58206fc8   456  58006000       constant
0xffff58206fcc   460  0000ffff       constant


Safepoints (size = 21)
0xffff58206f14   276  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff58206e4c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58206e54  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58206e68  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58206e88  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58206e9c  embedded object  (0x39c04519 <the hole>)
0xffff58206ea4  embedded object  (0x39c04519 <the hole>)
0xffff58206eac  embedded object  (0x39c04519 <the hole>)
0xffff58206eb4  embedded object  (0x39c04519 <the hole>)
0xffff58206ee8  code target (STUB)  (0xffff58206820)
0xffff58206f0c  code target (STUB)  (0xffff58206260)
0xffff58206f18  code target (STUB)  (0xffff582068e0)
0xffff58206f2c  constant pool (size 100)
0xffff58206fb0  runtime entry
0xffff58206fbc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 485)
0xffff58206e00     0  movz w0, #0x6000
0xffff58206e04     4  movk w0, #0x9, lsl #16
0xffff58206e08     8  cmp w0, #0x30 (48)
0xffff58206e0c    12  b.ls #+0x184 (addr 0xffff58206f90)
0xffff58206e10    16  movz x3, #0x92c0
0xffff58206e14    20  movk x3, #0x16e7, lsl #16
0xffff58206e18    24  ldp x4, x0, [x3]
0xffff58206e1c    28  adds x16, x4, #0x60 (96)
0xffff58206e20    32  ccmp x16, x0, #nzCv, lo
0xffff58206e24    36  b.hi #+0xa4 (addr 0xffff58206ec8)
0xffff58206e28    40  str x16, [x3]
0xffff58206e2c    44  orr x4, x4, #0x1
0xffff58206e30    48  movz w0, #0x0
0xffff58206e34    52  stur x0, [x4, #47]
0xffff58206e38    56  ldur x0, [x1, #39]
0xffff58206e3c    60  ldur x0, [x0, #39]
0xffff58206e40    64  movz x16, #0x17f
0xffff58206e44    68  ldr x0, [x0, x16]
0xffff58206e48    72  stur x0, [x4, #-1]
0xffff58206e4c    76  ldr x0, pc+236 (addr 0x0000ffff58206f38)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58206e50    80  stur x0, [x4, #7]
0xffff58206e54    84  ldr x0, pc+236 (addr 0x0000ffff58206f40)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58206e58    88  stur x0, [x4, #15]
0xffff58206e5c    92  movz x0, #0x0
0xffff58206e60    96  stur x0, [x4, #23]
0xffff58206e64   100  add x0, x4, #0x20 (32)
0xffff58206e68   104  ldr x1, pc+224 (addr 0x0000ffff58206f48)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58206e6c   108  stur x1, [x0, #-1]
0xffff58206e70   112  stur x2, [x0, #7]
0xffff58206e74   116  ldur w0, [x2, #35]
0xffff58206e78   120  add w0, w0, #0x1 (1)
0xffff58206e7c   124  lsl x0, x0, #32
0xffff58206e80   128  stur x0, [x2, #31]
0xffff58206e84   132  add x0, x4, #0x30 (48)
0xffff58206e88   136  ldr x1, pc+200 (addr 0x0000ffff58206f50)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58206e8c   140  stur x1, [x0, #-1]
0xffff58206e90   144  movz x1, #0x400000000
0xffff58206e94   148  stur x1, [x0, #7]
0xffff58206e98   152  stur x0, [x4, #15]
0xffff58206e9c   156  ldr x1, pc+188 (addr 0x0000ffff58206f58)    ;; object: 0x39c04519 <the hole>
0xffff58206ea0   160  stur x1, [x0, #15]
0xffff58206ea4   164  ldr x1, pc+188 (addr 0x0000ffff58206f60)    ;; object: 0x39c04519 <the hole>
0xffff58206ea8   168  stur x1, [x0, #23]
0xffff58206eac   172  ldr x1, pc+188 (addr 0x0000ffff58206f68)    ;; object: 0x39c04519 <the hole>
0xffff58206eb0   176  stur x1, [x0, #31]
0xffff58206eb4   180  ldr x1, pc+188 (addr 0x0000ffff58206f70)    ;; object: 0x39c04519 <the hole>
0xffff58206eb8   184  stur x1, [x0, #39]
0xffff58206ebc   188  mov x0, x4
0xffff58206ec0   192  add jssp, jssp, #0x8 (8)
0xffff58206ec4   196  ret
0xffff58206ec8   200  sub csp, jssp, #0x10 (16)
0xffff58206ecc   204  stp fp, lr, [jssp, #-16]!
0xffff58206ed0   208  movz fp, #0xa00000000
0xffff58206ed4   212  sub csp, jssp, #0x8 (8)
0xffff58206ed8   216  str fp, [jssp, #-8]!
0xffff58206edc   220  add fp, jssp, #0x8 (8)
0xffff58206ee0   224  movz x4, #0x0
0xffff58206ee4   228  mov x16, lr
0xffff58206ee8   232  ldr x17, pc+144 (addr 0x0000ffff58206f78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58206eec   236  blr x17
0xffff58206ef0   240  movz x0, #0x6000000000
0xffff58206ef4   244  movz x10, #0x0
0xffff58206ef8   248  sub csp, jssp, #0x10 (16)
0xffff58206efc   252  stp x10, x0, [jssp, #-16]!
0xffff58206f00   256  movz x0, #0x2
0xffff58206f04   260  movz x1, #0x5b88
0xffff58206f08   264  movk x1, #0xe2, lsl #16
0xffff58206f0c   268  ldr x16, pc+116 (addr 0x0000ffff58206f80)    ;; code: STUB, CEntryStub, minor: 5
0xffff58206f10   272  blr x16
0xffff58206f14   276  str x0, [jssp, #32]
0xffff58206f18   280  ldr x16, pc+112 (addr 0x0000ffff58206f88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58206f1c   284  blr x16
0xffff58206f20   288  ldr lr, [jssp, #16]
0xffff58206f24   292  ldp xzr, fp, [jssp], #24
0xffff58206f28   296  b #-0xf8 (addr 0xffff58206e30)
0xffff58206f2c   300  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff58206f30   304  d63f03e0       constant
0xffff58206f34   308  d503201f       constant
0xffff58206f38   312  39c04201       constant
0xffff58206f3c   316  00000000       constant
0xffff58206f40   320  39c04201       constant
0xffff58206f44   324  00000000       constant
0xffff58206f48   328  32b05d81       constant
0xffff58206f4c   332  00000000       constant
0xffff58206f50   336  32b04259       constant
0xffff58206f54   340  00000000       constant
0xffff58206f58   344  39c04519       constant
0xffff58206f5c   348  00000000       constant
0xffff58206f60   352  39c04519       constant
0xffff58206f64   356  00000000       constant
0xffff58206f68   360  39c04519       constant
0xffff58206f6c   364  00000000       constant
0xffff58206f70   368  39c04519       constant
0xffff58206f74   372  00000000       constant
0xffff58206f78   376  58206820       constant
0xffff58206f7c   380  0000ffff       constant
0xffff58206f80   384  58206260       constant
0xffff58206f84   388  0000ffff       constant
0xffff58206f88   392  582068e0       constant
0xffff58206f8c   396  0000ffff       constant
0xffff58206f90   400  movz x16, #0x0
0xffff58206f94   404  sub csp, jssp, #0x10 (16)
0xffff58206f98   408  stp fp, lr, [jssp, #-16]!
0xffff58206f9c   412  bl #+0x4 (addr 0xffff58206fa0)
0xffff58206fa0   416  movz x17, #0xa00000000
0xffff58206fa4   420  sub csp, jssp, #0x10 (16)
0xffff58206fa8   424  stp x17, cp, [jssp, #-16]!
0xffff58206fac   428  add fp, jssp, #0x10 (16)
0xffff58206fb0   432  ldr x17, pc+24 (addr 0x0000ffff58206fc8)    ;; lazy deoptimization bailout 0
0xffff58206fb4   436  add x17, x17, x16
0xffff58206fb8   440  br x17
0xffff58206fbc   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58206fc0   448  d63f03e0       constant
0xffff58206fc4   452  d503201f       constant
0xffff58206fc8   456  58006000       constant
0xffff58206fcc   460  0000ffff       constant


Safepoints (size = 21)
0xffff58206f14   276  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff58206e4c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58206e54  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58206e68  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58206e88  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58206e9c  embedded object  (0x39c04519 <the hole>)
0xffff58206ea4  embedded object  (0x39c04519 <the hole>)
0xffff58206eac  embedded object  (0x39c04519 <the hole>)
0xffff58206eb4  embedded object  (0x39c04519 <the hole>)
0xffff58206ee8  code target (STUB)  (0xffff58206820)
0xffff58206f0c  code target (STUB)  (0xffff58206260)
0xffff58206f18  code target (STUB)  (0xffff582068e0)
0xffff58206f2c  constant pool (size 100)
0xffff58206fb0  runtime entry
0xffff58206fbc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 445)
0xffff58207060     0  movz w0, #0x6000
0xffff58207064     4  movk w0, #0x9, lsl #16
0xffff58207068     8  cmp w0, #0x30 (48)
0xffff5820706c    12  b.ls #+0x15c (addr 0xffff582071c8)
0xffff58207070    16  movz x2, #0x92c0
0xffff58207074    20  movk x2, #0x16e7, lsl #16
0xffff58207078    24  ldp x3, x0, [x2]
0xffff5820707c    28  adds x16, x3, #0x50 (80)
0xffff58207080    32  ccmp x16, x0, #nzCv, lo
0xffff58207084    36  b.hi #+0x84 (addr 0xffff58207108)
0xffff58207088    40  str x16, [x2]
0xffff5820708c    44  orr x3, x3, #0x1
0xffff58207090    48  movz w0, #0x0
0xffff58207094    52  stur x0, [x3, #31]
0xffff58207098    56  ldur x0, [x1, #39]
0xffff5820709c    60  ldur x0, [x0, #39]
0xffff582070a0    64  movz x16, #0x17f
0xffff582070a4    68  ldr x0, [x0, x16]
0xffff582070a8    72  stur x0, [x3, #-1]
0xffff582070ac    76  ldr x0, pc+204 (addr 0x0000ffff58207178)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582070b0    80  stur x0, [x3, #7]
0xffff582070b4    84  ldr x0, pc+204 (addr 0x0000ffff58207180)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582070b8    88  stur x0, [x3, #15]
0xffff582070bc    92  movz x0, #0x0
0xffff582070c0    96  stur x0, [x3, #23]
0xffff582070c4   100  add x0, x3, #0x20 (32)
0xffff582070c8   104  ldr x1, pc+192 (addr 0x0000ffff58207188)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582070cc   108  stur x1, [x0, #-1]
0xffff582070d0   112  movz x1, #0x400000000
0xffff582070d4   116  stur x1, [x0, #7]
0xffff582070d8   120  stur x0, [x3, #15]
0xffff582070dc   124  ldr x1, pc+180 (addr 0x0000ffff58207190)    ;; object: 0x39c04519 <the hole>
0xffff582070e0   128  stur x1, [x0, #15]
0xffff582070e4   132  ldr x1, pc+180 (addr 0x0000ffff58207198)    ;; object: 0x39c04519 <the hole>
0xffff582070e8   136  stur x1, [x0, #23]
0xffff582070ec   140  ldr x1, pc+180 (addr 0x0000ffff582071a0)    ;; object: 0x39c04519 <the hole>
0xffff582070f0   144  stur x1, [x0, #31]
0xffff582070f4   148  ldr x1, pc+180 (addr 0x0000ffff582071a8)    ;; object: 0x39c04519 <the hole>
0xffff582070f8   152  stur x1, [x0, #39]
0xffff582070fc   156  mov x0, x3
0xffff58207100   160  add jssp, jssp, #0x8 (8)
0xffff58207104   164  ret
0xffff58207108   168  sub csp, jssp, #0x10 (16)
0xffff5820710c   172  stp fp, lr, [jssp, #-16]!
0xffff58207110   176  movz fp, #0xa00000000
0xffff58207114   180  sub csp, jssp, #0x8 (8)
0xffff58207118   184  str fp, [jssp, #-8]!
0xffff5820711c   188  add fp, jssp, #0x8 (8)
0xffff58207120   192  movz x3, #0x0
0xffff58207124   196  mov x16, lr
0xffff58207128   200  ldr x17, pc+136 (addr 0x0000ffff582071b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820712c   204  blr x17
0xffff58207130   208  movz x0, #0x5000000000
0xffff58207134   212  movz x10, #0x0
0xffff58207138   216  sub csp, jssp, #0x10 (16)
0xffff5820713c   220  stp x10, x0, [jssp, #-16]!
0xffff58207140   224  movz x0, #0x2
0xffff58207144   228  movz x1, #0x5b88
0xffff58207148   232  movk x1, #0xe2, lsl #16
0xffff5820714c   236  ldr x16, pc+108 (addr 0x0000ffff582071b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58207150   240  blr x16
0xffff58207154   244  str x0, [jssp, #24]
0xffff58207158   248  ldr x16, pc+104 (addr 0x0000ffff582071c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820715c   252  blr x16
0xffff58207160   256  ldr lr, [jssp, #16]
0xffff58207164   260  ldp xzr, fp, [jssp], #24
0xffff58207168   264  b #-0xd8 (addr 0xffff58207090)
0xffff5820716c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff58207170   272  d63f03e0       constant
0xffff58207174   276  d503201f       constant
0xffff58207178   280  39c04201       constant
0xffff5820717c   284  00000000       constant
0xffff58207180   288  39c04201       constant
0xffff58207184   292  00000000       constant
0xffff58207188   296  32b04259       constant
0xffff5820718c   300  00000000       constant
0xffff58207190   304  39c04519       constant
0xffff58207194   308  00000000       constant
0xffff58207198   312  39c04519       constant
0xffff5820719c   316  00000000       constant
0xffff582071a0   320  39c04519       constant
0xffff582071a4   324  00000000       constant
0xffff582071a8   328  39c04519       constant
0xffff582071ac   332  00000000       constant
0xffff582071b0   336  58206820       constant
0xffff582071b4   340  0000ffff       constant
0xffff582071b8   344  58206260       constant
0xffff582071bc   348  0000ffff       constant
0xffff582071c0   352  582068e0       constant
0xffff582071c4   356  0000ffff       constant
0xffff582071c8   360  movz x16, #0x0
0xffff582071cc   364  sub csp, jssp, #0x10 (16)
0xffff582071d0   368  stp fp, lr, [jssp, #-16]!
0xffff582071d4   372  bl #+0x4 (addr 0xffff582071d8)
0xffff582071d8   376  movz x17, #0xa00000000
0xffff582071dc   380  sub csp, jssp, #0x10 (16)
0xffff582071e0   384  stp x17, cp, [jssp, #-16]!
0xffff582071e4   388  add fp, jssp, #0x10 (16)
0xffff582071e8   392  ldr x17, pc+24 (addr 0x0000ffff58207200)    ;; lazy deoptimization bailout 0
0xffff582071ec   396  add x17, x17, x16
0xffff582071f0   400  br x17
0xffff582071f4   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582071f8   408  d63f03e0       constant
0xffff582071fc   412  d503201f       constant
0xffff58207200   416  58006000       constant
0xffff58207204   420  0000ffff       constant


Safepoints (size = 21)
0xffff58207154   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff582070ac  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582070b4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582070c8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582070dc  embedded object  (0x39c04519 <the hole>)
0xffff582070e4  embedded object  (0x39c04519 <the hole>)
0xffff582070ec  embedded object  (0x39c04519 <the hole>)
0xffff582070f4  embedded object  (0x39c04519 <the hole>)
0xffff58207128  code target (STUB)  (0xffff58206820)
0xffff5820714c  code target (STUB)  (0xffff58206260)
0xffff58207158  code target (STUB)  (0xffff582068e0)
0xffff5820716c  constant pool (size 92)
0xffff582071e8  runtime entry
0xffff582071f4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 445)
0xffff58207060     0  movz w0, #0x6000
0xffff58207064     4  movk w0, #0x9, lsl #16
0xffff58207068     8  cmp w0, #0x30 (48)
0xffff5820706c    12  b.ls #+0x15c (addr 0xffff582071c8)
0xffff58207070    16  movz x2, #0x92c0
0xffff58207074    20  movk x2, #0x16e7, lsl #16
0xffff58207078    24  ldp x3, x0, [x2]
0xffff5820707c    28  adds x16, x3, #0x50 (80)
0xffff58207080    32  ccmp x16, x0, #nzCv, lo
0xffff58207084    36  b.hi #+0x84 (addr 0xffff58207108)
0xffff58207088    40  str x16, [x2]
0xffff5820708c    44  orr x3, x3, #0x1
0xffff58207090    48  movz w0, #0x0
0xffff58207094    52  stur x0, [x3, #31]
0xffff58207098    56  ldur x0, [x1, #39]
0xffff5820709c    60  ldur x0, [x0, #39]
0xffff582070a0    64  movz x16, #0x17f
0xffff582070a4    68  ldr x0, [x0, x16]
0xffff582070a8    72  stur x0, [x3, #-1]
0xffff582070ac    76  ldr x0, pc+204 (addr 0x0000ffff58207178)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582070b0    80  stur x0, [x3, #7]
0xffff582070b4    84  ldr x0, pc+204 (addr 0x0000ffff58207180)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582070b8    88  stur x0, [x3, #15]
0xffff582070bc    92  movz x0, #0x0
0xffff582070c0    96  stur x0, [x3, #23]
0xffff582070c4   100  add x0, x3, #0x20 (32)
0xffff582070c8   104  ldr x1, pc+192 (addr 0x0000ffff58207188)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582070cc   108  stur x1, [x0, #-1]
0xffff582070d0   112  movz x1, #0x400000000
0xffff582070d4   116  stur x1, [x0, #7]
0xffff582070d8   120  stur x0, [x3, #15]
0xffff582070dc   124  ldr x1, pc+180 (addr 0x0000ffff58207190)    ;; object: 0x39c04519 <the hole>
0xffff582070e0   128  stur x1, [x0, #15]
0xffff582070e4   132  ldr x1, pc+180 (addr 0x0000ffff58207198)    ;; object: 0x39c04519 <the hole>
0xffff582070e8   136  stur x1, [x0, #23]
0xffff582070ec   140  ldr x1, pc+180 (addr 0x0000ffff582071a0)    ;; object: 0x39c04519 <the hole>
0xffff582070f0   144  stur x1, [x0, #31]
0xffff582070f4   148  ldr x1, pc+180 (addr 0x0000ffff582071a8)    ;; object: 0x39c04519 <the hole>
0xffff582070f8   152  stur x1, [x0, #39]
0xffff582070fc   156  mov x0, x3
0xffff58207100   160  add jssp, jssp, #0x8 (8)
0xffff58207104   164  ret
0xffff58207108   168  sub csp, jssp, #0x10 (16)
0xffff5820710c   172  stp fp, lr, [jssp, #-16]!
0xffff58207110   176  movz fp, #0xa00000000
0xffff58207114   180  sub csp, jssp, #0x8 (8)
0xffff58207118   184  str fp, [jssp, #-8]!
0xffff5820711c   188  add fp, jssp, #0x8 (8)
0xffff58207120   192  movz x3, #0x0
0xffff58207124   196  mov x16, lr
0xffff58207128   200  ldr x17, pc+136 (addr 0x0000ffff582071b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820712c   204  blr x17
0xffff58207130   208  movz x0, #0x5000000000
0xffff58207134   212  movz x10, #0x0
0xffff58207138   216  sub csp, jssp, #0x10 (16)
0xffff5820713c   220  stp x10, x0, [jssp, #-16]!
0xffff58207140   224  movz x0, #0x2
0xffff58207144   228  movz x1, #0x5b88
0xffff58207148   232  movk x1, #0xe2, lsl #16
0xffff5820714c   236  ldr x16, pc+108 (addr 0x0000ffff582071b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58207150   240  blr x16
0xffff58207154   244  str x0, [jssp, #24]
0xffff58207158   248  ldr x16, pc+104 (addr 0x0000ffff582071c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820715c   252  blr x16
0xffff58207160   256  ldr lr, [jssp, #16]
0xffff58207164   260  ldp xzr, fp, [jssp], #24
0xffff58207168   264  b #-0xd8 (addr 0xffff58207090)
0xffff5820716c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff58207170   272  d63f03e0       constant
0xffff58207174   276  d503201f       constant
0xffff58207178   280  39c04201       constant
0xffff5820717c   284  00000000       constant
0xffff58207180   288  39c04201       constant
0xffff58207184   292  00000000       constant
0xffff58207188   296  32b04259       constant
0xffff5820718c   300  00000000       constant
0xffff58207190   304  39c04519       constant
0xffff58207194   308  00000000       constant
0xffff58207198   312  39c04519       constant
0xffff5820719c   316  00000000       constant
0xffff582071a0   320  39c04519       constant
0xffff582071a4   324  00000000       constant
0xffff582071a8   328  39c04519       constant
0xffff582071ac   332  00000000       constant
0xffff582071b0   336  58206820       constant
0xffff582071b4   340  0000ffff       constant
0xffff582071b8   344  58206260       constant
0xffff582071bc   348  0000ffff       constant
0xffff582071c0   352  582068e0       constant
0xffff582071c4   356  0000ffff       constant
0xffff582071c8   360  movz x16, #0x0
0xffff582071cc   364  sub csp, jssp, #0x10 (16)
0xffff582071d0   368  stp fp, lr, [jssp, #-16]!
0xffff582071d4   372  bl #+0x4 (addr 0xffff582071d8)
0xffff582071d8   376  movz x17, #0xa00000000
0xffff582071dc   380  sub csp, jssp, #0x10 (16)
0xffff582071e0   384  stp x17, cp, [jssp, #-16]!
0xffff582071e4   388  add fp, jssp, #0x10 (16)
0xffff582071e8   392  ldr x17, pc+24 (addr 0x0000ffff58207200)    ;; lazy deoptimization bailout 0
0xffff582071ec   396  add x17, x17, x16
0xffff582071f0   400  br x17
0xffff582071f4   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582071f8   408  d63f03e0       constant
0xffff582071fc   412  d503201f       constant
0xffff58207200   416  58006000       constant
0xffff58207204   420  0000ffff       constant


Safepoints (size = 21)
0xffff58207154   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff582070ac  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582070b4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582070c8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582070dc  embedded object  (0x39c04519 <the hole>)
0xffff582070e4  embedded object  (0x39c04519 <the hole>)
0xffff582070ec  embedded object  (0x39c04519 <the hole>)
0xffff582070f4  embedded object  (0x39c04519 <the hole>)
0xffff58207128  code target (STUB)  (0xffff58206820)
0xffff5820714c  code target (STUB)  (0xffff58206260)
0xffff58207158  code target (STUB)  (0xffff582068e0)
0xffff5820716c  constant pool (size 92)
0xffff582071e8  runtime entry
0xffff582071f4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 405)
0xffff58207280     0  movz w0, #0x6000
0xffff58207284     4  movk w0, #0x9, lsl #16
0xffff58207288     8  cmp w0, #0x30 (48)
0xffff5820728c    12  b.ls #+0x134 (addr 0xffff582073c0)
0xffff58207290    16  movz x2, #0x92c0
0xffff58207294    20  movk x2, #0x16e7, lsl #16
0xffff58207298    24  ldp x3, x0, [x2]
0xffff5820729c    28  adds x16, x3, #0x50 (80)
0xffff582072a0    32  ccmp x16, x0, #nzCv, lo
0xffff582072a4    36  b.hi #+0x78 (addr 0xffff5820731c)
0xffff582072a8    40  str x16, [x2]
0xffff582072ac    44  orr x3, x3, #0x1
0xffff582072b0    48  movz w0, #0x0
0xffff582072b4    52  stur x0, [x3, #31]
0xffff582072b8    56  ldur x0, [x1, #39]
0xffff582072bc    60  ldur x0, [x0, #39]
0xffff582072c0    64  movz x16, #0x197
0xffff582072c4    68  ldr x0, [x0, x16]
0xffff582072c8    72  stur x0, [x3, #-1]
0xffff582072cc    76  ldr x0, pc+196 (addr 0x0000ffff58207390)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582072d0    80  stur x0, [x3, #7]
0xffff582072d4    84  ldr x0, pc+196 (addr 0x0000ffff58207398)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582072d8    88  stur x0, [x3, #15]
0xffff582072dc    92  movz x0, #0x0
0xffff582072e0    96  stur x0, [x3, #23]
0xffff582072e4   100  add x0, x3, #0x20 (32)
0xffff582072e8   104  ldr x1, pc+184 (addr 0x0000ffff582073a0)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582072ec   108  stur x1, [x0, #-1]
0xffff582072f0   112  movz x1, #0x400000000
0xffff582072f4   116  stur x1, [x0, #7]
0xffff582072f8   120  stur x0, [x3, #15]
0xffff582072fc   124  ldr d0, pc+140 (addr 0x0000ffff58207388)
0xffff58207300   128  stur d0, [x0, #15]
0xffff58207304   132  stur d0, [x0, #23]
0xffff58207308   136  stur d0, [x0, #31]
0xffff5820730c   140  stur d0, [x0, #39]
0xffff58207310   144  mov x0, x3
0xffff58207314   148  add jssp, jssp, #0x8 (8)
0xffff58207318   152  ret
0xffff5820731c   156  sub csp, jssp, #0x10 (16)
0xffff58207320   160  stp fp, lr, [jssp, #-16]!
0xffff58207324   164  movz fp, #0xa00000000
0xffff58207328   168  sub csp, jssp, #0x8 (8)
0xffff5820732c   172  str fp, [jssp, #-8]!
0xffff58207330   176  add fp, jssp, #0x8 (8)
0xffff58207334   180  movz x3, #0x0
0xffff58207338   184  mov x16, lr
0xffff5820733c   188  ldr x17, pc+108 (addr 0x0000ffff582073a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58207340   192  blr x17
0xffff58207344   196  movz x0, #0x5000000000
0xffff58207348   200  movz x10, #0x100000000
0xffff5820734c   204  sub csp, jssp, #0x10 (16)
0xffff58207350   208  stp x10, x0, [jssp, #-16]!
0xffff58207354   212  movz x0, #0x2
0xffff58207358   216  movz x1, #0x5b88
0xffff5820735c   220  movk x1, #0xe2, lsl #16
0xffff58207360   224  ldr x16, pc+80 (addr 0x0000ffff582073b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58207364   228  blr x16
0xffff58207368   232  str x0, [jssp, #24]
0xffff5820736c   236  ldr x16, pc+76 (addr 0x0000ffff582073b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58207370   240  blr x16
0xffff58207374   244  ldr lr, [jssp, #16]
0xffff58207378   248  ldp xzr, fp, [jssp], #24
0xffff5820737c   252  b #-0xcc (addr 0xffff582072b0)
0xffff58207380   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58207384   260  d63f03e0       constant
0xffff58207388   264  fff7ffff       constant
0xffff5820738c   268  fff7ffff       constant
0xffff58207390   272  39c04201       constant
0xffff58207394   276  00000000       constant
0xffff58207398   280  39c04201       constant
0xffff5820739c   284  00000000       constant
0xffff582073a0   288  32b052d9       constant
0xffff582073a4   292  00000000       constant
0xffff582073a8   296  58206820       constant
0xffff582073ac   300  0000ffff       constant
0xffff582073b0   304  58206260       constant
0xffff582073b4   308  0000ffff       constant
0xffff582073b8   312  582068e0       constant
0xffff582073bc   316  0000ffff       constant
0xffff582073c0   320  movz x16, #0x0
0xffff582073c4   324  sub csp, jssp, #0x10 (16)
0xffff582073c8   328  stp fp, lr, [jssp, #-16]!
0xffff582073cc   332  bl #+0x4 (addr 0xffff582073d0)
0xffff582073d0   336  movz x17, #0xa00000000
0xffff582073d4   340  sub csp, jssp, #0x10 (16)
0xffff582073d8   344  stp x17, cp, [jssp, #-16]!
0xffff582073dc   348  add fp, jssp, #0x10 (16)
0xffff582073e0   352  ldr x17, pc+24 (addr 0x0000ffff582073f8)    ;; lazy deoptimization bailout 0
0xffff582073e4   356  add x17, x17, x16
0xffff582073e8   360  br x17
0xffff582073ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582073f0   368  d63f03e0       constant
0xffff582073f4   372  d503201f       constant
0xffff582073f8   376  58006000       constant
0xffff582073fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff58207368   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff582072cc  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582072d4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582072e8  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820733c  code target (STUB)  (0xffff58206820)
0xffff58207360  code target (STUB)  (0xffff58206260)
0xffff5820736c  code target (STUB)  (0xffff582068e0)
0xffff58207380  constant pool (size 64)
0xffff582073e0  runtime entry
0xffff582073ec  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 405)
0xffff58207280     0  movz w0, #0x6000
0xffff58207284     4  movk w0, #0x9, lsl #16
0xffff58207288     8  cmp w0, #0x30 (48)
0xffff5820728c    12  b.ls #+0x134 (addr 0xffff582073c0)
0xffff58207290    16  movz x2, #0x92c0
0xffff58207294    20  movk x2, #0x16e7, lsl #16
0xffff58207298    24  ldp x3, x0, [x2]
0xffff5820729c    28  adds x16, x3, #0x50 (80)
0xffff582072a0    32  ccmp x16, x0, #nzCv, lo
0xffff582072a4    36  b.hi #+0x78 (addr 0xffff5820731c)
0xffff582072a8    40  str x16, [x2]
0xffff582072ac    44  orr x3, x3, #0x1
0xffff582072b0    48  movz w0, #0x0
0xffff582072b4    52  stur x0, [x3, #31]
0xffff582072b8    56  ldur x0, [x1, #39]
0xffff582072bc    60  ldur x0, [x0, #39]
0xffff582072c0    64  movz x16, #0x197
0xffff582072c4    68  ldr x0, [x0, x16]
0xffff582072c8    72  stur x0, [x3, #-1]
0xffff582072cc    76  ldr x0, pc+196 (addr 0x0000ffff58207390)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582072d0    80  stur x0, [x3, #7]
0xffff582072d4    84  ldr x0, pc+196 (addr 0x0000ffff58207398)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582072d8    88  stur x0, [x3, #15]
0xffff582072dc    92  movz x0, #0x0
0xffff582072e0    96  stur x0, [x3, #23]
0xffff582072e4   100  add x0, x3, #0x20 (32)
0xffff582072e8   104  ldr x1, pc+184 (addr 0x0000ffff582073a0)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582072ec   108  stur x1, [x0, #-1]
0xffff582072f0   112  movz x1, #0x400000000
0xffff582072f4   116  stur x1, [x0, #7]
0xffff582072f8   120  stur x0, [x3, #15]
0xffff582072fc   124  ldr d0, pc+140 (addr 0x0000ffff58207388)
0xffff58207300   128  stur d0, [x0, #15]
0xffff58207304   132  stur d0, [x0, #23]
0xffff58207308   136  stur d0, [x0, #31]
0xffff5820730c   140  stur d0, [x0, #39]
0xffff58207310   144  mov x0, x3
0xffff58207314   148  add jssp, jssp, #0x8 (8)
0xffff58207318   152  ret
0xffff5820731c   156  sub csp, jssp, #0x10 (16)
0xffff58207320   160  stp fp, lr, [jssp, #-16]!
0xffff58207324   164  movz fp, #0xa00000000
0xffff58207328   168  sub csp, jssp, #0x8 (8)
0xffff5820732c   172  str fp, [jssp, #-8]!
0xffff58207330   176  add fp, jssp, #0x8 (8)
0xffff58207334   180  movz x3, #0x0
0xffff58207338   184  mov x16, lr
0xffff5820733c   188  ldr x17, pc+108 (addr 0x0000ffff582073a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58207340   192  blr x17
0xffff58207344   196  movz x0, #0x5000000000
0xffff58207348   200  movz x10, #0x100000000
0xffff5820734c   204  sub csp, jssp, #0x10 (16)
0xffff58207350   208  stp x10, x0, [jssp, #-16]!
0xffff58207354   212  movz x0, #0x2
0xffff58207358   216  movz x1, #0x5b88
0xffff5820735c   220  movk x1, #0xe2, lsl #16
0xffff58207360   224  ldr x16, pc+80 (addr 0x0000ffff582073b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58207364   228  blr x16
0xffff58207368   232  str x0, [jssp, #24]
0xffff5820736c   236  ldr x16, pc+76 (addr 0x0000ffff582073b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58207370   240  blr x16
0xffff58207374   244  ldr lr, [jssp, #16]
0xffff58207378   248  ldp xzr, fp, [jssp], #24
0xffff5820737c   252  b #-0xcc (addr 0xffff582072b0)
0xffff58207380   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58207384   260  d63f03e0       constant
0xffff58207388   264  fff7ffff       constant
0xffff5820738c   268  fff7ffff       constant
0xffff58207390   272  39c04201       constant
0xffff58207394   276  00000000       constant
0xffff58207398   280  39c04201       constant
0xffff5820739c   284  00000000       constant
0xffff582073a0   288  32b052d9       constant
0xffff582073a4   292  00000000       constant
0xffff582073a8   296  58206820       constant
0xffff582073ac   300  0000ffff       constant
0xffff582073b0   304  58206260       constant
0xffff582073b4   308  0000ffff       constant
0xffff582073b8   312  582068e0       constant
0xffff582073bc   316  0000ffff       constant
0xffff582073c0   320  movz x16, #0x0
0xffff582073c4   324  sub csp, jssp, #0x10 (16)
0xffff582073c8   328  stp fp, lr, [jssp, #-16]!
0xffff582073cc   332  bl #+0x4 (addr 0xffff582073d0)
0xffff582073d0   336  movz x17, #0xa00000000
0xffff582073d4   340  sub csp, jssp, #0x10 (16)
0xffff582073d8   344  stp x17, cp, [jssp, #-16]!
0xffff582073dc   348  add fp, jssp, #0x10 (16)
0xffff582073e0   352  ldr x17, pc+24 (addr 0x0000ffff582073f8)    ;; lazy deoptimization bailout 0
0xffff582073e4   356  add x17, x17, x16
0xffff582073e8   360  br x17
0xffff582073ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582073f0   368  d63f03e0       constant
0xffff582073f4   372  d503201f       constant
0xffff582073f8   376  58006000       constant
0xffff582073fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff58207368   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff582072cc  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582072d4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582072e8  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820733c  code target (STUB)  (0xffff58206820)
0xffff58207360  code target (STUB)  (0xffff58206260)
0xffff5820736c  code target (STUB)  (0xffff582068e0)
0xffff58207380  constant pool (size 64)
0xffff582073e0  runtime entry
0xffff582073ec  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 405)
0xffff58207480     0  movz w0, #0x6000
0xffff58207484     4  movk w0, #0x9, lsl #16
0xffff58207488     8  cmp w0, #0x30 (48)
0xffff5820748c    12  b.ls #+0x134 (addr 0xffff582075c0)
0xffff58207490    16  movz x2, #0x92c0
0xffff58207494    20  movk x2, #0x16e7, lsl #16
0xffff58207498    24  ldp x3, x0, [x2]
0xffff5820749c    28  adds x16, x3, #0x50 (80)
0xffff582074a0    32  ccmp x16, x0, #nzCv, lo
0xffff582074a4    36  b.hi #+0x78 (addr 0xffff5820751c)
0xffff582074a8    40  str x16, [x2]
0xffff582074ac    44  orr x3, x3, #0x1
0xffff582074b0    48  movz w0, #0x0
0xffff582074b4    52  stur x0, [x3, #31]
0xffff582074b8    56  ldur x0, [x1, #39]
0xffff582074bc    60  ldur x0, [x0, #39]
0xffff582074c0    64  movz x16, #0x19f
0xffff582074c4    68  ldr x0, [x0, x16]
0xffff582074c8    72  stur x0, [x3, #-1]
0xffff582074cc    76  ldr x0, pc+196 (addr 0x0000ffff58207590)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582074d0    80  stur x0, [x3, #7]
0xffff582074d4    84  ldr x0, pc+196 (addr 0x0000ffff58207598)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582074d8    88  stur x0, [x3, #15]
0xffff582074dc    92  movz x0, #0x0
0xffff582074e0    96  stur x0, [x3, #23]
0xffff582074e4   100  add x0, x3, #0x20 (32)
0xffff582074e8   104  ldr x1, pc+184 (addr 0x0000ffff582075a0)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582074ec   108  stur x1, [x0, #-1]
0xffff582074f0   112  movz x1, #0x400000000
0xffff582074f4   116  stur x1, [x0, #7]
0xffff582074f8   120  stur x0, [x3, #15]
0xffff582074fc   124  ldr d0, pc+140 (addr 0x0000ffff58207588)
0xffff58207500   128  stur d0, [x0, #15]
0xffff58207504   132  stur d0, [x0, #23]
0xffff58207508   136  stur d0, [x0, #31]
0xffff5820750c   140  stur d0, [x0, #39]
0xffff58207510   144  mov x0, x3
0xffff58207514   148  add jssp, jssp, #0x8 (8)
0xffff58207518   152  ret
0xffff5820751c   156  sub csp, jssp, #0x10 (16)
0xffff58207520   160  stp fp, lr, [jssp, #-16]!
0xffff58207524   164  movz fp, #0xa00000000
0xffff58207528   168  sub csp, jssp, #0x8 (8)
0xffff5820752c   172  str fp, [jssp, #-8]!
0xffff58207530   176  add fp, jssp, #0x8 (8)
0xffff58207534   180  movz x3, #0x0
0xffff58207538   184  mov x16, lr
0xffff5820753c   188  ldr x17, pc+108 (addr 0x0000ffff582075a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58207540   192  blr x17
0xffff58207544   196  movz x0, #0x5000000000
0xffff58207548   200  movz x10, #0x100000000
0xffff5820754c   204  sub csp, jssp, #0x10 (16)
0xffff58207550   208  stp x10, x0, [jssp, #-16]!
0xffff58207554   212  movz x0, #0x2
0xffff58207558   216  movz x1, #0x5b88
0xffff5820755c   220  movk x1, #0xe2, lsl #16
0xffff58207560   224  ldr x16, pc+80 (addr 0x0000ffff582075b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58207564   228  blr x16
0xffff58207568   232  str x0, [jssp, #24]
0xffff5820756c   236  ldr x16, pc+76 (addr 0x0000ffff582075b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58207570   240  blr x16
0xffff58207574   244  ldr lr, [jssp, #16]
0xffff58207578   248  ldp xzr, fp, [jssp], #24
0xffff5820757c   252  b #-0xcc (addr 0xffff582074b0)
0xffff58207580   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58207584   260  d63f03e0       constant
0xffff58207588   264  fff7ffff       constant
0xffff5820758c   268  fff7ffff       constant
0xffff58207590   272  39c04201       constant
0xffff58207594   276  00000000       constant
0xffff58207598   280  39c04201       constant
0xffff5820759c   284  00000000       constant
0xffff582075a0   288  32b052d9       constant
0xffff582075a4   292  00000000       constant
0xffff582075a8   296  58206820       constant
0xffff582075ac   300  0000ffff       constant
0xffff582075b0   304  58206260       constant
0xffff582075b4   308  0000ffff       constant
0xffff582075b8   312  582068e0       constant
0xffff582075bc   316  0000ffff       constant
0xffff582075c0   320  movz x16, #0x0
0xffff582075c4   324  sub csp, jssp, #0x10 (16)
0xffff582075c8   328  stp fp, lr, [jssp, #-16]!
0xffff582075cc   332  bl #+0x4 (addr 0xffff582075d0)
0xffff582075d0   336  movz x17, #0xa00000000
0xffff582075d4   340  sub csp, jssp, #0x10 (16)
0xffff582075d8   344  stp x17, cp, [jssp, #-16]!
0xffff582075dc   348  add fp, jssp, #0x10 (16)
0xffff582075e0   352  ldr x17, pc+24 (addr 0x0000ffff582075f8)    ;; lazy deoptimization bailout 0
0xffff582075e4   356  add x17, x17, x16
0xffff582075e8   360  br x17
0xffff582075ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582075f0   368  d63f03e0       constant
0xffff582075f4   372  d503201f       constant
0xffff582075f8   376  58006000       constant
0xffff582075fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff58207568   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff582074cc  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582074d4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582074e8  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820753c  code target (STUB)  (0xffff58206820)
0xffff58207560  code target (STUB)  (0xffff58206260)
0xffff5820756c  code target (STUB)  (0xffff582068e0)
0xffff58207580  constant pool (size 64)
0xffff582075e0  runtime entry
0xffff582075ec  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 405)
0xffff58207480     0  movz w0, #0x6000
0xffff58207484     4  movk w0, #0x9, lsl #16
0xffff58207488     8  cmp w0, #0x30 (48)
0xffff5820748c    12  b.ls #+0x134 (addr 0xffff582075c0)
0xffff58207490    16  movz x2, #0x92c0
0xffff58207494    20  movk x2, #0x16e7, lsl #16
0xffff58207498    24  ldp x3, x0, [x2]
0xffff5820749c    28  adds x16, x3, #0x50 (80)
0xffff582074a0    32  ccmp x16, x0, #nzCv, lo
0xffff582074a4    36  b.hi #+0x78 (addr 0xffff5820751c)
0xffff582074a8    40  str x16, [x2]
0xffff582074ac    44  orr x3, x3, #0x1
0xffff582074b0    48  movz w0, #0x0
0xffff582074b4    52  stur x0, [x3, #31]
0xffff582074b8    56  ldur x0, [x1, #39]
0xffff582074bc    60  ldur x0, [x0, #39]
0xffff582074c0    64  movz x16, #0x19f
0xffff582074c4    68  ldr x0, [x0, x16]
0xffff582074c8    72  stur x0, [x3, #-1]
0xffff582074cc    76  ldr x0, pc+196 (addr 0x0000ffff58207590)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582074d0    80  stur x0, [x3, #7]
0xffff582074d4    84  ldr x0, pc+196 (addr 0x0000ffff58207598)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582074d8    88  stur x0, [x3, #15]
0xffff582074dc    92  movz x0, #0x0
0xffff582074e0    96  stur x0, [x3, #23]
0xffff582074e4   100  add x0, x3, #0x20 (32)
0xffff582074e8   104  ldr x1, pc+184 (addr 0x0000ffff582075a0)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582074ec   108  stur x1, [x0, #-1]
0xffff582074f0   112  movz x1, #0x400000000
0xffff582074f4   116  stur x1, [x0, #7]
0xffff582074f8   120  stur x0, [x3, #15]
0xffff582074fc   124  ldr d0, pc+140 (addr 0x0000ffff58207588)
0xffff58207500   128  stur d0, [x0, #15]
0xffff58207504   132  stur d0, [x0, #23]
0xffff58207508   136  stur d0, [x0, #31]
0xffff5820750c   140  stur d0, [x0, #39]
0xffff58207510   144  mov x0, x3
0xffff58207514   148  add jssp, jssp, #0x8 (8)
0xffff58207518   152  ret
0xffff5820751c   156  sub csp, jssp, #0x10 (16)
0xffff58207520   160  stp fp, lr, [jssp, #-16]!
0xffff58207524   164  movz fp, #0xa00000000
0xffff58207528   168  sub csp, jssp, #0x8 (8)
0xffff5820752c   172  str fp, [jssp, #-8]!
0xffff58207530   176  add fp, jssp, #0x8 (8)
0xffff58207534   180  movz x3, #0x0
0xffff58207538   184  mov x16, lr
0xffff5820753c   188  ldr x17, pc+108 (addr 0x0000ffff582075a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58207540   192  blr x17
0xffff58207544   196  movz x0, #0x5000000000
0xffff58207548   200  movz x10, #0x100000000
0xffff5820754c   204  sub csp, jssp, #0x10 (16)
0xffff58207550   208  stp x10, x0, [jssp, #-16]!
0xffff58207554   212  movz x0, #0x2
0xffff58207558   216  movz x1, #0x5b88
0xffff5820755c   220  movk x1, #0xe2, lsl #16
0xffff58207560   224  ldr x16, pc+80 (addr 0x0000ffff582075b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58207564   228  blr x16
0xffff58207568   232  str x0, [jssp, #24]
0xffff5820756c   236  ldr x16, pc+76 (addr 0x0000ffff582075b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58207570   240  blr x16
0xffff58207574   244  ldr lr, [jssp, #16]
0xffff58207578   248  ldp xzr, fp, [jssp], #24
0xffff5820757c   252  b #-0xcc (addr 0xffff582074b0)
0xffff58207580   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58207584   260  d63f03e0       constant
0xffff58207588   264  fff7ffff       constant
0xffff5820758c   268  fff7ffff       constant
0xffff58207590   272  39c04201       constant
0xffff58207594   276  00000000       constant
0xffff58207598   280  39c04201       constant
0xffff5820759c   284  00000000       constant
0xffff582075a0   288  32b052d9       constant
0xffff582075a4   292  00000000       constant
0xffff582075a8   296  58206820       constant
0xffff582075ac   300  0000ffff       constant
0xffff582075b0   304  58206260       constant
0xffff582075b4   308  0000ffff       constant
0xffff582075b8   312  582068e0       constant
0xffff582075bc   316  0000ffff       constant
0xffff582075c0   320  movz x16, #0x0
0xffff582075c4   324  sub csp, jssp, #0x10 (16)
0xffff582075c8   328  stp fp, lr, [jssp, #-16]!
0xffff582075cc   332  bl #+0x4 (addr 0xffff582075d0)
0xffff582075d0   336  movz x17, #0xa00000000
0xffff582075d4   340  sub csp, jssp, #0x10 (16)
0xffff582075d8   344  stp x17, cp, [jssp, #-16]!
0xffff582075dc   348  add fp, jssp, #0x10 (16)
0xffff582075e0   352  ldr x17, pc+24 (addr 0x0000ffff582075f8)    ;; lazy deoptimization bailout 0
0xffff582075e4   356  add x17, x17, x16
0xffff582075e8   360  br x17
0xffff582075ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582075f0   368  d63f03e0       constant
0xffff582075f4   372  d503201f       constant
0xffff582075f8   376  58006000       constant
0xffff582075fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff58207568   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff582074cc  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582074d4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582074e8  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820753c  code target (STUB)  (0xffff58206820)
0xffff58207560  code target (STUB)  (0xffff58206260)
0xffff5820756c  code target (STUB)  (0xffff582068e0)
0xffff58207580  constant pool (size 64)
0xffff582075e0  runtime entry
0xffff582075ec  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 445)
0xffff58207680     0  movz w0, #0x6000
0xffff58207684     4  movk w0, #0x9, lsl #16
0xffff58207688     8  cmp w0, #0x30 (48)
0xffff5820768c    12  b.ls #+0x15c (addr 0xffff582077e8)
0xffff58207690    16  movz x2, #0x92c0
0xffff58207694    20  movk x2, #0x16e7, lsl #16
0xffff58207698    24  ldp x3, x0, [x2]
0xffff5820769c    28  adds x16, x3, #0x50 (80)
0xffff582076a0    32  ccmp x16, x0, #nzCv, lo
0xffff582076a4    36  b.hi #+0x84 (addr 0xffff58207728)
0xffff582076a8    40  str x16, [x2]
0xffff582076ac    44  orr x3, x3, #0x1
0xffff582076b0    48  movz w0, #0x0
0xffff582076b4    52  stur x0, [x3, #31]
0xffff582076b8    56  ldur x0, [x1, #39]
0xffff582076bc    60  ldur x0, [x0, #39]
0xffff582076c0    64  movz x16, #0x187
0xffff582076c4    68  ldr x0, [x0, x16]
0xffff582076c8    72  stur x0, [x3, #-1]
0xffff582076cc    76  ldr x0, pc+204 (addr 0x0000ffff58207798)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582076d0    80  stur x0, [x3, #7]
0xffff582076d4    84  ldr x0, pc+204 (addr 0x0000ffff582077a0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582076d8    88  stur x0, [x3, #15]
0xffff582076dc    92  movz x0, #0x0
0xffff582076e0    96  stur x0, [x3, #23]
0xffff582076e4   100  add x0, x3, #0x20 (32)
0xffff582076e8   104  ldr x1, pc+192 (addr 0x0000ffff582077a8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582076ec   108  stur x1, [x0, #-1]
0xffff582076f0   112  movz x1, #0x400000000
0xffff582076f4   116  stur x1, [x0, #7]
0xffff582076f8   120  stur x0, [x3, #15]
0xffff582076fc   124  ldr x1, pc+180 (addr 0x0000ffff582077b0)    ;; object: 0x39c04519 <the hole>
0xffff58207700   128  stur x1, [x0, #15]
0xffff58207704   132  ldr x1, pc+180 (addr 0x0000ffff582077b8)    ;; object: 0x39c04519 <the hole>
0xffff58207708   136  stur x1, [x0, #23]
0xffff5820770c   140  ldr x1, pc+180 (addr 0x0000ffff582077c0)    ;; object: 0x39c04519 <the hole>
0xffff58207710   144  stur x1, [x0, #31]
0xffff58207714   148  ldr x1, pc+180 (addr 0x0000ffff582077c8)    ;; object: 0x39c04519 <the hole>
0xffff58207718   152  stur x1, [x0, #39]
0xffff5820771c   156  mov x0, x3
0xffff58207720   160  add jssp, jssp, #0x8 (8)
0xffff58207724   164  ret
0xffff58207728   168  sub csp, jssp, #0x10 (16)
0xffff5820772c   172  stp fp, lr, [jssp, #-16]!
0xffff58207730   176  movz fp, #0xa00000000
0xffff58207734   180  sub csp, jssp, #0x8 (8)
0xffff58207738   184  str fp, [jssp, #-8]!
0xffff5820773c   188  add fp, jssp, #0x8 (8)
0xffff58207740   192  movz x3, #0x0
0xffff58207744   196  mov x16, lr
0xffff58207748   200  ldr x17, pc+136 (addr 0x0000ffff582077d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820774c   204  blr x17
0xffff58207750   208  movz x0, #0x5000000000
0xffff58207754   212  movz x10, #0x0
0xffff58207758   216  sub csp, jssp, #0x10 (16)
0xffff5820775c   220  stp x10, x0, [jssp, #-16]!
0xffff58207760   224  movz x0, #0x2
0xffff58207764   228  movz x1, #0x5b88
0xffff58207768   232  movk x1, #0xe2, lsl #16
0xffff5820776c   236  ldr x16, pc+108 (addr 0x0000ffff582077d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58207770   240  blr x16
0xffff58207774   244  str x0, [jssp, #24]
0xffff58207778   248  ldr x16, pc+104 (addr 0x0000ffff582077e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820777c   252  blr x16
0xffff58207780   256  ldr lr, [jssp, #16]
0xffff58207784   260  ldp xzr, fp, [jssp], #24
0xffff58207788   264  b #-0xd8 (addr 0xffff582076b0)
0xffff5820778c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff58207790   272  d63f03e0       constant
0xffff58207794   276  d503201f       constant
0xffff58207798   280  39c04201       constant
0xffff5820779c   284  00000000       constant
0xffff582077a0   288  39c04201       constant
0xffff582077a4   292  00000000       constant
0xffff582077a8   296  32b04259       constant
0xffff582077ac   300  00000000       constant
0xffff582077b0   304  39c04519       constant
0xffff582077b4   308  00000000       constant
0xffff582077b8   312  39c04519       constant
0xffff582077bc   316  00000000       constant
0xffff582077c0   320  39c04519       constant
0xffff582077c4   324  00000000       constant
0xffff582077c8   328  39c04519       constant
0xffff582077cc   332  00000000       constant
0xffff582077d0   336  58206820       constant
0xffff582077d4   340  0000ffff       constant
0xffff582077d8   344  58206260       constant
0xffff582077dc   348  0000ffff       constant
0xffff582077e0   352  582068e0       constant
0xffff582077e4   356  0000ffff       constant
0xffff582077e8   360  movz x16, #0x0
0xffff582077ec   364  sub csp, jssp, #0x10 (16)
0xffff582077f0   368  stp fp, lr, [jssp, #-16]!
0xffff582077f4   372  bl #+0x4 (addr 0xffff582077f8)
0xffff582077f8   376  movz x17, #0xa00000000
0xffff582077fc   380  sub csp, jssp, #0x10 (16)
0xffff58207800   384  stp x17, cp, [jssp, #-16]!
0xffff58207804   388  add fp, jssp, #0x10 (16)
0xffff58207808   392  ldr x17, pc+24 (addr 0x0000ffff58207820)    ;; lazy deoptimization bailout 0
0xffff5820780c   396  add x17, x17, x16
0xffff58207810   400  br x17
0xffff58207814   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58207818   408  d63f03e0       constant
0xffff5820781c   412  d503201f       constant
0xffff58207820   416  58006000       constant
0xffff58207824   420  0000ffff       constant


Safepoints (size = 21)
0xffff58207774   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff582076cc  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582076d4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582076e8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582076fc  embedded object  (0x39c04519 <the hole>)
0xffff58207704  embedded object  (0x39c04519 <the hole>)
0xffff5820770c  embedded object  (0x39c04519 <the hole>)
0xffff58207714  embedded object  (0x39c04519 <the hole>)
0xffff58207748  code target (STUB)  (0xffff58206820)
0xffff5820776c  code target (STUB)  (0xffff58206260)
0xffff58207778  code target (STUB)  (0xffff582068e0)
0xffff5820778c  constant pool (size 92)
0xffff58207808  runtime entry
0xffff58207814  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_ELEMENTS
compiler = crankshaft
Instructions (size = 445)
0xffff58207680     0  movz w0, #0x6000
0xffff58207684     4  movk w0, #0x9, lsl #16
0xffff58207688     8  cmp w0, #0x30 (48)
0xffff5820768c    12  b.ls #+0x15c (addr 0xffff582077e8)
0xffff58207690    16  movz x2, #0x92c0
0xffff58207694    20  movk x2, #0x16e7, lsl #16
0xffff58207698    24  ldp x3, x0, [x2]
0xffff5820769c    28  adds x16, x3, #0x50 (80)
0xffff582076a0    32  ccmp x16, x0, #nzCv, lo
0xffff582076a4    36  b.hi #+0x84 (addr 0xffff58207728)
0xffff582076a8    40  str x16, [x2]
0xffff582076ac    44  orr x3, x3, #0x1
0xffff582076b0    48  movz w0, #0x0
0xffff582076b4    52  stur x0, [x3, #31]
0xffff582076b8    56  ldur x0, [x1, #39]
0xffff582076bc    60  ldur x0, [x0, #39]
0xffff582076c0    64  movz x16, #0x187
0xffff582076c4    68  ldr x0, [x0, x16]
0xffff582076c8    72  stur x0, [x3, #-1]
0xffff582076cc    76  ldr x0, pc+204 (addr 0x0000ffff58207798)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582076d0    80  stur x0, [x3, #7]
0xffff582076d4    84  ldr x0, pc+204 (addr 0x0000ffff582077a0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582076d8    88  stur x0, [x3, #15]
0xffff582076dc    92  movz x0, #0x0
0xffff582076e0    96  stur x0, [x3, #23]
0xffff582076e4   100  add x0, x3, #0x20 (32)
0xffff582076e8   104  ldr x1, pc+192 (addr 0x0000ffff582077a8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582076ec   108  stur x1, [x0, #-1]
0xffff582076f0   112  movz x1, #0x400000000
0xffff582076f4   116  stur x1, [x0, #7]
0xffff582076f8   120  stur x0, [x3, #15]
0xffff582076fc   124  ldr x1, pc+180 (addr 0x0000ffff582077b0)    ;; object: 0x39c04519 <the hole>
0xffff58207700   128  stur x1, [x0, #15]
0xffff58207704   132  ldr x1, pc+180 (addr 0x0000ffff582077b8)    ;; object: 0x39c04519 <the hole>
0xffff58207708   136  stur x1, [x0, #23]
0xffff5820770c   140  ldr x1, pc+180 (addr 0x0000ffff582077c0)    ;; object: 0x39c04519 <the hole>
0xffff58207710   144  stur x1, [x0, #31]
0xffff58207714   148  ldr x1, pc+180 (addr 0x0000ffff582077c8)    ;; object: 0x39c04519 <the hole>
0xffff58207718   152  stur x1, [x0, #39]
0xffff5820771c   156  mov x0, x3
0xffff58207720   160  add jssp, jssp, #0x8 (8)
0xffff58207724   164  ret
0xffff58207728   168  sub csp, jssp, #0x10 (16)
0xffff5820772c   172  stp fp, lr, [jssp, #-16]!
0xffff58207730   176  movz fp, #0xa00000000
0xffff58207734   180  sub csp, jssp, #0x8 (8)
0xffff58207738   184  str fp, [jssp, #-8]!
0xffff5820773c   188  add fp, jssp, #0x8 (8)
0xffff58207740   192  movz x3, #0x0
0xffff58207744   196  mov x16, lr
0xffff58207748   200  ldr x17, pc+136 (addr 0x0000ffff582077d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820774c   204  blr x17
0xffff58207750   208  movz x0, #0x5000000000
0xffff58207754   212  movz x10, #0x0
0xffff58207758   216  sub csp, jssp, #0x10 (16)
0xffff5820775c   220  stp x10, x0, [jssp, #-16]!
0xffff58207760   224  movz x0, #0x2
0xffff58207764   228  movz x1, #0x5b88
0xffff58207768   232  movk x1, #0xe2, lsl #16
0xffff5820776c   236  ldr x16, pc+108 (addr 0x0000ffff582077d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58207770   240  blr x16
0xffff58207774   244  str x0, [jssp, #24]
0xffff58207778   248  ldr x16, pc+104 (addr 0x0000ffff582077e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820777c   252  blr x16
0xffff58207780   256  ldr lr, [jssp, #16]
0xffff58207784   260  ldp xzr, fp, [jssp], #24
0xffff58207788   264  b #-0xd8 (addr 0xffff582076b0)
0xffff5820778c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff58207790   272  d63f03e0       constant
0xffff58207794   276  d503201f       constant
0xffff58207798   280  39c04201       constant
0xffff5820779c   284  00000000       constant
0xffff582077a0   288  39c04201       constant
0xffff582077a4   292  00000000       constant
0xffff582077a8   296  32b04259       constant
0xffff582077ac   300  00000000       constant
0xffff582077b0   304  39c04519       constant
0xffff582077b4   308  00000000       constant
0xffff582077b8   312  39c04519       constant
0xffff582077bc   316  00000000       constant
0xffff582077c0   320  39c04519       constant
0xffff582077c4   324  00000000       constant
0xffff582077c8   328  39c04519       constant
0xffff582077cc   332  00000000       constant
0xffff582077d0   336  58206820       constant
0xffff582077d4   340  0000ffff       constant
0xffff582077d8   344  58206260       constant
0xffff582077dc   348  0000ffff       constant
0xffff582077e0   352  582068e0       constant
0xffff582077e4   356  0000ffff       constant
0xffff582077e8   360  movz x16, #0x0
0xffff582077ec   364  sub csp, jssp, #0x10 (16)
0xffff582077f0   368  stp fp, lr, [jssp, #-16]!
0xffff582077f4   372  bl #+0x4 (addr 0xffff582077f8)
0xffff582077f8   376  movz x17, #0xa00000000
0xffff582077fc   380  sub csp, jssp, #0x10 (16)
0xffff58207800   384  stp x17, cp, [jssp, #-16]!
0xffff58207804   388  add fp, jssp, #0x10 (16)
0xffff58207808   392  ldr x17, pc+24 (addr 0x0000ffff58207820)    ;; lazy deoptimization bailout 0
0xffff5820780c   396  add x17, x17, x16
0xffff58207810   400  br x17
0xffff58207814   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58207818   408  d63f03e0       constant
0xffff5820781c   412  d503201f       constant
0xffff58207820   416  58006000       constant
0xffff58207824   420  0000ffff       constant


Safepoints (size = 21)
0xffff58207774   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff582076cc  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582076d4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582076e8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582076fc  embedded object  (0x39c04519 <the hole>)
0xffff58207704  embedded object  (0x39c04519 <the hole>)
0xffff5820770c  embedded object  (0x39c04519 <the hole>)
0xffff58207714  embedded object  (0x39c04519 <the hole>)
0xffff58207748  code target (STUB)  (0xffff58206820)
0xffff5820776c  code target (STUB)  (0xffff58206260)
0xffff58207778  code target (STUB)  (0xffff582068e0)
0xffff5820778c  constant pool (size 92)
0xffff58207808  runtime entry
0xffff58207814  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 445)
0xffff582078a0     0  movz w0, #0x6000
0xffff582078a4     4  movk w0, #0x9, lsl #16
0xffff582078a8     8  cmp w0, #0x30 (48)
0xffff582078ac    12  b.ls #+0x15c (addr 0xffff58207a08)
0xffff582078b0    16  movz x2, #0x92c0
0xffff582078b4    20  movk x2, #0x16e7, lsl #16
0xffff582078b8    24  ldp x3, x0, [x2]
0xffff582078bc    28  adds x16, x3, #0x50 (80)
0xffff582078c0    32  ccmp x16, x0, #nzCv, lo
0xffff582078c4    36  b.hi #+0x84 (addr 0xffff58207948)
0xffff582078c8    40  str x16, [x2]
0xffff582078cc    44  orr x3, x3, #0x1
0xffff582078d0    48  movz w0, #0x0
0xffff582078d4    52  stur x0, [x3, #31]
0xffff582078d8    56  ldur x0, [x1, #39]
0xffff582078dc    60  ldur x0, [x0, #39]
0xffff582078e0    64  movz x16, #0x18f
0xffff582078e4    68  ldr x0, [x0, x16]
0xffff582078e8    72  stur x0, [x3, #-1]
0xffff582078ec    76  ldr x0, pc+204 (addr 0x0000ffff582079b8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582078f0    80  stur x0, [x3, #7]
0xffff582078f4    84  ldr x0, pc+204 (addr 0x0000ffff582079c0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582078f8    88  stur x0, [x3, #15]
0xffff582078fc    92  movz x0, #0x0
0xffff58207900    96  stur x0, [x3, #23]
0xffff58207904   100  add x0, x3, #0x20 (32)
0xffff58207908   104  ldr x1, pc+192 (addr 0x0000ffff582079c8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820790c   108  stur x1, [x0, #-1]
0xffff58207910   112  movz x1, #0x400000000
0xffff58207914   116  stur x1, [x0, #7]
0xffff58207918   120  stur x0, [x3, #15]
0xffff5820791c   124  ldr x1, pc+180 (addr 0x0000ffff582079d0)    ;; object: 0x39c04519 <the hole>
0xffff58207920   128  stur x1, [x0, #15]
0xffff58207924   132  ldr x1, pc+180 (addr 0x0000ffff582079d8)    ;; object: 0x39c04519 <the hole>
0xffff58207928   136  stur x1, [x0, #23]
0xffff5820792c   140  ldr x1, pc+180 (addr 0x0000ffff582079e0)    ;; object: 0x39c04519 <the hole>
0xffff58207930   144  stur x1, [x0, #31]
0xffff58207934   148  ldr x1, pc+180 (addr 0x0000ffff582079e8)    ;; object: 0x39c04519 <the hole>
0xffff58207938   152  stur x1, [x0, #39]
0xffff5820793c   156  mov x0, x3
0xffff58207940   160  add jssp, jssp, #0x8 (8)
0xffff58207944   164  ret
0xffff58207948   168  sub csp, jssp, #0x10 (16)
0xffff5820794c   172  stp fp, lr, [jssp, #-16]!
0xffff58207950   176  movz fp, #0xa00000000
0xffff58207954   180  sub csp, jssp, #0x8 (8)
0xffff58207958   184  str fp, [jssp, #-8]!
0xffff5820795c   188  add fp, jssp, #0x8 (8)
0xffff58207960   192  movz x3, #0x0
0xffff58207964   196  mov x16, lr
0xffff58207968   200  ldr x17, pc+136 (addr 0x0000ffff582079f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820796c   204  blr x17
0xffff58207970   208  movz x0, #0x5000000000
0xffff58207974   212  movz x10, #0x0
0xffff58207978   216  sub csp, jssp, #0x10 (16)
0xffff5820797c   220  stp x10, x0, [jssp, #-16]!
0xffff58207980   224  movz x0, #0x2
0xffff58207984   228  movz x1, #0x5b88
0xffff58207988   232  movk x1, #0xe2, lsl #16
0xffff5820798c   236  ldr x16, pc+108 (addr 0x0000ffff582079f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58207990   240  blr x16
0xffff58207994   244  str x0, [jssp, #24]
0xffff58207998   248  ldr x16, pc+104 (addr 0x0000ffff58207a00)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820799c   252  blr x16
0xffff582079a0   256  ldr lr, [jssp, #16]
0xffff582079a4   260  ldp xzr, fp, [jssp], #24
0xffff582079a8   264  b #-0xd8 (addr 0xffff582078d0)
0xffff582079ac   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff582079b0   272  d63f03e0       constant
0xffff582079b4   276  d503201f       constant
0xffff582079b8   280  39c04201       constant
0xffff582079bc   284  00000000       constant
0xffff582079c0   288  39c04201       constant
0xffff582079c4   292  00000000       constant
0xffff582079c8   296  32b04259       constant
0xffff582079cc   300  00000000       constant
0xffff582079d0   304  39c04519       constant
0xffff582079d4   308  00000000       constant
0xffff582079d8   312  39c04519       constant
0xffff582079dc   316  00000000       constant
0xffff582079e0   320  39c04519       constant
0xffff582079e4   324  00000000       constant
0xffff582079e8   328  39c04519       constant
0xffff582079ec   332  00000000       constant
0xffff582079f0   336  58206820       constant
0xffff582079f4   340  0000ffff       constant
0xffff582079f8   344  58206260       constant
0xffff582079fc   348  0000ffff       constant
0xffff58207a00   352  582068e0       constant
0xffff58207a04   356  0000ffff       constant
0xffff58207a08   360  movz x16, #0x0
0xffff58207a0c   364  sub csp, jssp, #0x10 (16)
0xffff58207a10   368  stp fp, lr, [jssp, #-16]!
0xffff58207a14   372  bl #+0x4 (addr 0xffff58207a18)
0xffff58207a18   376  movz x17, #0xa00000000
0xffff58207a1c   380  sub csp, jssp, #0x10 (16)
0xffff58207a20   384  stp x17, cp, [jssp, #-16]!
0xffff58207a24   388  add fp, jssp, #0x10 (16)
0xffff58207a28   392  ldr x17, pc+24 (addr 0x0000ffff58207a40)    ;; lazy deoptimization bailout 0
0xffff58207a2c   396  add x17, x17, x16
0xffff58207a30   400  br x17
0xffff58207a34   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58207a38   408  d63f03e0       constant
0xffff58207a3c   412  d503201f       constant
0xffff58207a40   416  58006000       constant
0xffff58207a44   420  0000ffff       constant


Safepoints (size = 21)
0xffff58207994   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff582078ec  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582078f4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58207908  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820791c  embedded object  (0x39c04519 <the hole>)
0xffff58207924  embedded object  (0x39c04519 <the hole>)
0xffff5820792c  embedded object  (0x39c04519 <the hole>)
0xffff58207934  embedded object  (0x39c04519 <the hole>)
0xffff58207968  code target (STUB)  (0xffff58206820)
0xffff5820798c  code target (STUB)  (0xffff58206260)
0xffff58207998  code target (STUB)  (0xffff582068e0)
0xffff582079ac  constant pool (size 92)
0xffff58207a28  runtime entry
0xffff58207a34  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_ELEMENTS
compiler = crankshaft
Instructions (size = 445)
0xffff582078a0     0  movz w0, #0x6000
0xffff582078a4     4  movk w0, #0x9, lsl #16
0xffff582078a8     8  cmp w0, #0x30 (48)
0xffff582078ac    12  b.ls #+0x15c (addr 0xffff58207a08)
0xffff582078b0    16  movz x2, #0x92c0
0xffff582078b4    20  movk x2, #0x16e7, lsl #16
0xffff582078b8    24  ldp x3, x0, [x2]
0xffff582078bc    28  adds x16, x3, #0x50 (80)
0xffff582078c0    32  ccmp x16, x0, #nzCv, lo
0xffff582078c4    36  b.hi #+0x84 (addr 0xffff58207948)
0xffff582078c8    40  str x16, [x2]
0xffff582078cc    44  orr x3, x3, #0x1
0xffff582078d0    48  movz w0, #0x0
0xffff582078d4    52  stur x0, [x3, #31]
0xffff582078d8    56  ldur x0, [x1, #39]
0xffff582078dc    60  ldur x0, [x0, #39]
0xffff582078e0    64  movz x16, #0x18f
0xffff582078e4    68  ldr x0, [x0, x16]
0xffff582078e8    72  stur x0, [x3, #-1]
0xffff582078ec    76  ldr x0, pc+204 (addr 0x0000ffff582079b8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582078f0    80  stur x0, [x3, #7]
0xffff582078f4    84  ldr x0, pc+204 (addr 0x0000ffff582079c0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582078f8    88  stur x0, [x3, #15]
0xffff582078fc    92  movz x0, #0x0
0xffff58207900    96  stur x0, [x3, #23]
0xffff58207904   100  add x0, x3, #0x20 (32)
0xffff58207908   104  ldr x1, pc+192 (addr 0x0000ffff582079c8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820790c   108  stur x1, [x0, #-1]
0xffff58207910   112  movz x1, #0x400000000
0xffff58207914   116  stur x1, [x0, #7]
0xffff58207918   120  stur x0, [x3, #15]
0xffff5820791c   124  ldr x1, pc+180 (addr 0x0000ffff582079d0)    ;; object: 0x39c04519 <the hole>
0xffff58207920   128  stur x1, [x0, #15]
0xffff58207924   132  ldr x1, pc+180 (addr 0x0000ffff582079d8)    ;; object: 0x39c04519 <the hole>
0xffff58207928   136  stur x1, [x0, #23]
0xffff5820792c   140  ldr x1, pc+180 (addr 0x0000ffff582079e0)    ;; object: 0x39c04519 <the hole>
0xffff58207930   144  stur x1, [x0, #31]
0xffff58207934   148  ldr x1, pc+180 (addr 0x0000ffff582079e8)    ;; object: 0x39c04519 <the hole>
0xffff58207938   152  stur x1, [x0, #39]
0xffff5820793c   156  mov x0, x3
0xffff58207940   160  add jssp, jssp, #0x8 (8)
0xffff58207944   164  ret
0xffff58207948   168  sub csp, jssp, #0x10 (16)
0xffff5820794c   172  stp fp, lr, [jssp, #-16]!
0xffff58207950   176  movz fp, #0xa00000000
0xffff58207954   180  sub csp, jssp, #0x8 (8)
0xffff58207958   184  str fp, [jssp, #-8]!
0xffff5820795c   188  add fp, jssp, #0x8 (8)
0xffff58207960   192  movz x3, #0x0
0xffff58207964   196  mov x16, lr
0xffff58207968   200  ldr x17, pc+136 (addr 0x0000ffff582079f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820796c   204  blr x17
0xffff58207970   208  movz x0, #0x5000000000
0xffff58207974   212  movz x10, #0x0
0xffff58207978   216  sub csp, jssp, #0x10 (16)
0xffff5820797c   220  stp x10, x0, [jssp, #-16]!
0xffff58207980   224  movz x0, #0x2
0xffff58207984   228  movz x1, #0x5b88
0xffff58207988   232  movk x1, #0xe2, lsl #16
0xffff5820798c   236  ldr x16, pc+108 (addr 0x0000ffff582079f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58207990   240  blr x16
0xffff58207994   244  str x0, [jssp, #24]
0xffff58207998   248  ldr x16, pc+104 (addr 0x0000ffff58207a00)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820799c   252  blr x16
0xffff582079a0   256  ldr lr, [jssp, #16]
0xffff582079a4   260  ldp xzr, fp, [jssp], #24
0xffff582079a8   264  b #-0xd8 (addr 0xffff582078d0)
0xffff582079ac   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff582079b0   272  d63f03e0       constant
0xffff582079b4   276  d503201f       constant
0xffff582079b8   280  39c04201       constant
0xffff582079bc   284  00000000       constant
0xffff582079c0   288  39c04201       constant
0xffff582079c4   292  00000000       constant
0xffff582079c8   296  32b04259       constant
0xffff582079cc   300  00000000       constant
0xffff582079d0   304  39c04519       constant
0xffff582079d4   308  00000000       constant
0xffff582079d8   312  39c04519       constant
0xffff582079dc   316  00000000       constant
0xffff582079e0   320  39c04519       constant
0xffff582079e4   324  00000000       constant
0xffff582079e8   328  39c04519       constant
0xffff582079ec   332  00000000       constant
0xffff582079f0   336  58206820       constant
0xffff582079f4   340  0000ffff       constant
0xffff582079f8   344  58206260       constant
0xffff582079fc   348  0000ffff       constant
0xffff58207a00   352  582068e0       constant
0xffff58207a04   356  0000ffff       constant
0xffff58207a08   360  movz x16, #0x0
0xffff58207a0c   364  sub csp, jssp, #0x10 (16)
0xffff58207a10   368  stp fp, lr, [jssp, #-16]!
0xffff58207a14   372  bl #+0x4 (addr 0xffff58207a18)
0xffff58207a18   376  movz x17, #0xa00000000
0xffff58207a1c   380  sub csp, jssp, #0x10 (16)
0xffff58207a20   384  stp x17, cp, [jssp, #-16]!
0xffff58207a24   388  add fp, jssp, #0x10 (16)
0xffff58207a28   392  ldr x17, pc+24 (addr 0x0000ffff58207a40)    ;; lazy deoptimization bailout 0
0xffff58207a2c   396  add x17, x17, x16
0xffff58207a30   400  br x17
0xffff58207a34   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58207a38   408  d63f03e0       constant
0xffff58207a3c   412  d503201f       constant
0xffff58207a40   416  58006000       constant
0xffff58207a44   420  0000ffff       constant


Safepoints (size = 21)
0xffff58207994   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff582078ec  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582078f4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58207908  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820791c  embedded object  (0x39c04519 <the hole>)
0xffff58207924  embedded object  (0x39c04519 <the hole>)
0xffff5820792c  embedded object  (0x39c04519 <the hole>)
0xffff58207934  embedded object  (0x39c04519 <the hole>)
0xffff58207968  code target (STUB)  (0xffff58206820)
0xffff5820798c  code target (STUB)  (0xffff58206260)
0xffff58207998  code target (STUB)  (0xffff582068e0)
0xffff582079ac  constant pool (size 92)
0xffff58207a28  runtime entry
0xffff58207a34  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff58207ac0     0  adr xzr, #+0x40 (addr 0xffff58207b00)
0xffff58207ac4     4  adr xzr, #+0x358 (addr 0xffff58207e1c)
0xffff58207ac8     8  ldr x16, pc+1720 (addr 0x0000ffff58208180)    ;; external reference (store_buffer_top)
0xffff58207acc    12  ldr x0, [x16]
0xffff58207ad0    16  str x1, [x0], #8
0xffff58207ad4    20  str x0, [x16]
0xffff58207ad8    24  tst x0, #0x1ffff
0xffff58207adc    28  b.eq #+0x8 (addr 0xffff58207ae4)
0xffff58207ae0    32  ret
0xffff58207ae4    36  sub csp, jssp, #0x8 (8)
0xffff58207ae8    40  str lr, [jssp, #-8]!
0xffff58207aec    44  ldr x17, pc+1692 (addr 0x0000ffff58208188)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58207af0    48  blr x17
0xffff58207af4    52  ldr lr, [jssp], #8
0xffff58207af8    56  ret
0xffff58207afc    60  ret
0xffff58207b00    64  sub csp, jssp, #0x10 (16)
0xffff58207b04    68  stp x3, x2, [jssp, #-16]!
0xffff58207b08    72  ldr x0, [x1]
0xffff58207b0c    76  and x16, x0, #0xfffffffffff00000
0xffff58207b10    80  ldr x16, [x16, #8]
0xffff58207b14    84  tst x16, #0x18
0xffff58207b18    88  b.eq #+0x1d4 (addr 0xffff58207cec)
0xffff58207b1c    92  and x16, x8, #0xfffffffffff00000
0xffff58207b20    96  ldr x16, [x16, #8]
0xffff58207b24   100  tst x16, #0x18
0xffff58207b28   104  b.ne #+0x1c4 (addr 0xffff58207cec)
0xffff58207b2c   108  and x0, x8, #0xfffffffffff00000
0xffff58207b30   112  ldr x2, [x0, #104]
0xffff58207b34   116  subs x2, x2, #0x1 (1)
0xffff58207b38   120  str x2, [x0, #104]
0xffff58207b3c   124  b.mi #+0xc4 (addr 0xffff58207c00)
0xffff58207b40   128  ubfx x16, x8, #8, #12
0xffff58207b44   132  and x0, x8, #0xfffffffffff00000
0xffff58207b48   136  add x0, x0, x16, lsl #2
0xffff58207b4c   140  ubfx x2, x8, #3, #5
0xffff58207b50   144  ldr x0, [x0, #360]
0xffff58207b54   148  lsr x0, x0, x2
0xffff58207b58   152  tbz w0, #0, #+0x8 (addr 0xffff58207b60)
0xffff58207b5c   156  tbnz w0, #1, #+0x3c (addr 0xffff58207b98)
0xffff58207b60   160  ldp x3, x2, [jssp], #16
0xffff58207b64   164  ldr x16, pc+1580 (addr 0x0000ffff58208190)    ;; external reference (store_buffer_top)
0xffff58207b68   168  ldr x0, [x16]
0xffff58207b6c   172  str x1, [x0], #8
0xffff58207b70   176  str x0, [x16]
0xffff58207b74   180  tst x0, #0x1ffff
0xffff58207b78   184  b.eq #+0x8 (addr 0xffff58207b80)
0xffff58207b7c   188  ret
0xffff58207b80   192  sub csp, jssp, #0x8 (8)
0xffff58207b84   196  str lr, [jssp, #-8]!
0xffff58207b88   200  ldr x17, pc+1552 (addr 0x0000ffff58208198)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58207b8c   204  blr x17
0xffff58207b90   208  ldr lr, [jssp], #8
0xffff58207b94   212  ret
0xffff58207b98   216  ldr x0, [x1]
0xffff58207b9c   220  sub csp, jssp, #0x10 (16)
0xffff58207ba0   224  stp x8, x1, [jssp, #-16]!
0xffff58207ba4   228  ubfx x16, x0, #8, #12
0xffff58207ba8   232  and x2, x0, #0xfffffffffff00000
0xffff58207bac   236  add x2, x2, x16, lsl #2
0xffff58207bb0   240  ubfx x8, x0, #3, #5
0xffff58207bb4   244  ldr x1, [x2, #360]
0xffff58207bb8   248  lsr x1, x1, x8
0xffff58207bbc   252  tbz w1, #0, #+0x40 (addr 0xffff58207bfc)
0xffff58207bc0   256  ldp x8, x1, [jssp], #16
0xffff58207bc4   260  ldp x3, x2, [jssp], #16
0xffff58207bc8   264  ldr x16, pc+1496 (addr 0x0000ffff582081a0)    ;; external reference (store_buffer_top)
0xffff58207bcc   268  ldr x0, [x16]
0xffff58207bd0   272  str x1, [x0], #8
0xffff58207bd4   276  str x0, [x16]
0xffff58207bd8   280  tst x0, #0x1ffff
0xffff58207bdc   284  b.eq #+0x8 (addr 0xffff58207be4)
0xffff58207be0   288  ret
0xffff58207be4   292  sub csp, jssp, #0x8 (8)
0xffff58207be8   296  str lr, [jssp, #-8]!
0xffff58207bec   300  ldr x17, pc+1468 (addr 0x0000ffff582081a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58207bf0   304  blr x17
0xffff58207bf4   308  ldr lr, [jssp], #8
0xffff58207bf8   312  ret
0xffff58207bfc   316  ldp x8, x1, [jssp], #16
0xffff58207c00   320  sub csp, jssp, #0x78 (120)
0xffff58207c04   324  stp x14, x15, [jssp, #-32]!
0xffff58207c08   328  stp x18, lr, [jssp, #16]
0xffff58207c0c   332  stp x10, x11, [jssp, #-32]!
0xffff58207c10   336  stp x12, x13, [jssp, #16]
0xffff58207c14   340  stp x6, x7, [jssp, #-32]!
0xffff58207c18   344  stp x8, x9, [jssp, #16]
0xffff58207c1c   348  stp x1, x4, [jssp, #-24]!
0xffff58207c20   352  str x5, [jssp, #16]
0xffff58207c24   356  sub csp, jssp, #0xb0 (176)
0xffff58207c28   360  stp d26, d27, [jssp, #-32]!
0xffff58207c2c   364  stp d28, d29, [jssp, #16]
0xffff58207c30   368  stp d22, d23, [jssp, #-32]!
0xffff58207c34   372  stp d24, d25, [jssp, #16]
0xffff58207c38   376  stp d18, d19, [jssp, #-32]!
0xffff58207c3c   380  stp d20, d21, [jssp, #16]
0xffff58207c40   384  stp d6, d7, [jssp, #-32]!
0xffff58207c44   388  stp d16, d17, [jssp, #16]
0xffff58207c48   392  stp d2, d3, [jssp, #-32]!
0xffff58207c4c   396  stp d4, d5, [jssp, #16]
0xffff58207c50   400  stp d0, d1, [jssp, #-16]!
0xffff58207c54   404  mov x0, x8
0xffff58207c58   408  ldr x2, pc+1368 (addr 0x0000ffff582081b0)    ;; external reference (isolate)
0xffff58207c5c   412  ldr x16, pc+1372 (addr 0x0000ffff582081b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58207c60   416  and csp, jssp, #0xfffffffffffffff0
0xffff58207c64   420  blr x16
0xffff58207c68   424  ldp d2, d3, [jssp, #16]
0xffff58207c6c   428  ldp d0, d1, [jssp], #32
0xffff58207c70   432  ldp d6, d7, [jssp, #16]
0xffff58207c74   436  ldp d4, d5, [jssp], #32
0xffff58207c78   440  ldp d18, d19, [jssp, #16]
0xffff58207c7c   444  ldp d16, d17, [jssp], #32
0xffff58207c80   448  ldp d22, d23, [jssp, #16]
0xffff58207c84   452  ldp d20, d21, [jssp], #32
0xffff58207c88   456  ldp d26, d27, [jssp, #16]
0xffff58207c8c   460  ldp d24, d25, [jssp], #32
0xffff58207c90   464  ldp d28, d29, [jssp], #16
0xffff58207c94   468  ldp x5, x6, [jssp, #16]
0xffff58207c98   472  ldp x1, x4, [jssp], #32
0xffff58207c9c   476  ldp x9, x10, [jssp, #16]
0xffff58207ca0   480  ldp x7, x8, [jssp], #32
0xffff58207ca4   484  ldp x13, x14, [jssp, #16]
0xffff58207ca8   488  ldp x11, x12, [jssp], #32
0xffff58207cac   492  ldr lr, [jssp, #16]
0xffff58207cb0   496  ldp x15, x18, [jssp], #24
0xffff58207cb4   500  ldp x3, x2, [jssp], #16
0xffff58207cb8   504  ldr x16, pc+1288 (addr 0x0000ffff582081c0)    ;; external reference (store_buffer_top)
0xffff58207cbc   508  ldr x0, [x16]
0xffff58207cc0   512  str x1, [x0], #8
0xffff58207cc4   516  str x0, [x16]
0xffff58207cc8   520  tst x0, #0x1ffff
0xffff58207ccc   524  b.eq #+0x8 (addr 0xffff58207cd4)
0xffff58207cd0   528  ret
0xffff58207cd4   532  sub csp, jssp, #0x8 (8)
0xffff58207cd8   536  str lr, [jssp, #-8]!
0xffff58207cdc   540  ldr x17, pc+1260 (addr 0x0000ffff582081c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58207ce0   544  blr x17
0xffff58207ce4   548  ldr lr, [jssp], #8
0xffff58207ce8   552  ret
0xffff58207cec   556  and x0, x8, #0xfffffffffff00000
0xffff58207cf0   560  ldr x2, [x0, #104]
0xffff58207cf4   564  subs x2, x2, #0x1 (1)
0xffff58207cf8   568  str x2, [x0, #104]
0xffff58207cfc   572  b.mi #+0x64 (addr 0xffff58207d60)
0xffff58207d00   576  ubfx x16, x8, #8, #12
0xffff58207d04   580  and x0, x8, #0xfffffffffff00000
0xffff58207d08   584  add x0, x0, x16, lsl #2
0xffff58207d0c   588  ubfx x2, x8, #3, #5
0xffff58207d10   592  ldr x0, [x0, #360]
0xffff58207d14   596  lsr x0, x0, x2
0xffff58207d18   600  tbz w0, #0, #+0x8 (addr 0xffff58207d20)
0xffff58207d1c   604  tbnz w0, #1, #+0xc (addr 0xffff58207d28)
0xffff58207d20   608  ldp x3, x2, [jssp], #16
0xffff58207d24   612  ret
0xffff58207d28   616  ldr x0, [x1]
0xffff58207d2c   620  sub csp, jssp, #0x10 (16)
0xffff58207d30   624  stp x8, x1, [jssp, #-16]!
0xffff58207d34   628  ubfx x16, x0, #8, #12
0xffff58207d38   632  and x2, x0, #0xfffffffffff00000
0xffff58207d3c   636  add x2, x2, x16, lsl #2
0xffff58207d40   640  ubfx x8, x0, #3, #5
0xffff58207d44   644  ldr x1, [x2, #360]
0xffff58207d48   648  lsr x1, x1, x8
0xffff58207d4c   652  tbz w1, #0, #+0x10 (addr 0xffff58207d5c)
0xffff58207d50   656  ldp x8, x1, [jssp], #16
0xffff58207d54   660  ldp x3, x2, [jssp], #16
0xffff58207d58   664  ret
0xffff58207d5c   668  ldp x8, x1, [jssp], #16
0xffff58207d60   672  sub csp, jssp, #0x78 (120)
0xffff58207d64   676  stp x14, x15, [jssp, #-32]!
0xffff58207d68   680  stp x18, lr, [jssp, #16]
0xffff58207d6c   684  stp x10, x11, [jssp, #-32]!
0xffff58207d70   688  stp x12, x13, [jssp, #16]
0xffff58207d74   692  stp x6, x7, [jssp, #-32]!
0xffff58207d78   696  stp x8, x9, [jssp, #16]
0xffff58207d7c   700  stp x1, x4, [jssp, #-24]!
0xffff58207d80   704  str x5, [jssp, #16]
0xffff58207d84   708  sub csp, jssp, #0xb0 (176)
0xffff58207d88   712  stp d26, d27, [jssp, #-32]!
0xffff58207d8c   716  stp d28, d29, [jssp, #16]
0xffff58207d90   720  stp d22, d23, [jssp, #-32]!
0xffff58207d94   724  stp d24, d25, [jssp, #16]
0xffff58207d98   728  stp d18, d19, [jssp, #-32]!
0xffff58207d9c   732  stp d20, d21, [jssp, #16]
0xffff58207da0   736  stp d6, d7, [jssp, #-32]!
0xffff58207da4   740  stp d16, d17, [jssp, #16]
0xffff58207da8   744  stp d2, d3, [jssp, #-32]!
0xffff58207dac   748  stp d4, d5, [jssp, #16]
0xffff58207db0   752  stp d0, d1, [jssp, #-16]!
0xffff58207db4   756  mov x0, x8
0xffff58207db8   760  ldr x2, pc+1048 (addr 0x0000ffff582081d0)    ;; external reference (isolate)
0xffff58207dbc   764  ldr x16, pc+1052 (addr 0x0000ffff582081d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58207dc0   768  and csp, jssp, #0xfffffffffffffff0
0xffff58207dc4   772  blr x16
0xffff58207dc8   776  ldp d2, d3, [jssp, #16]
0xffff58207dcc   780  ldp d0, d1, [jssp], #32
0xffff58207dd0   784  ldp d6, d7, [jssp, #16]
0xffff58207dd4   788  ldp d4, d5, [jssp], #32
0xffff58207dd8   792  ldp d18, d19, [jssp, #16]
0xffff58207ddc   796  ldp d16, d17, [jssp], #32
0xffff58207de0   800  ldp d22, d23, [jssp, #16]
0xffff58207de4   804  ldp d20, d21, [jssp], #32
0xffff58207de8   808  ldp d26, d27, [jssp, #16]
0xffff58207dec   812  ldp d24, d25, [jssp], #32
0xffff58207df0   816  ldp d28, d29, [jssp], #16
0xffff58207df4   820  ldp x5, x6, [jssp, #16]
0xffff58207df8   824  ldp x1, x4, [jssp], #32
0xffff58207dfc   828  ldp x9, x10, [jssp, #16]
0xffff58207e00   832  ldp x7, x8, [jssp], #32
0xffff58207e04   836  ldp x13, x14, [jssp, #16]
0xffff58207e08   840  ldp x11, x12, [jssp], #32
0xffff58207e0c   844  ldr lr, [jssp, #16]
0xffff58207e10   848  ldp x15, x18, [jssp], #24
0xffff58207e14   852  ldp x3, x2, [jssp], #16
0xffff58207e18   856  ret
0xffff58207e1c   860  sub csp, jssp, #0x10 (16)
0xffff58207e20   864  stp x3, x2, [jssp, #-16]!
0xffff58207e24   868  ldr x0, [x1]
0xffff58207e28   872  and x16, x0, #0xfffffffffff00000
0xffff58207e2c   876  ldr x16, [x16, #8]
0xffff58207e30   880  tst x16, #0x18
0xffff58207e34   884  b.eq #+0x1f4 (addr 0xffff58208028)
0xffff58207e38   888  and x16, x8, #0xfffffffffff00000
0xffff58207e3c   892  ldr x16, [x16, #8]
0xffff58207e40   896  tst x16, #0x18
0xffff58207e44   900  b.ne #+0x1e4 (addr 0xffff58208028)
0xffff58207e48   904  and x0, x8, #0xfffffffffff00000
0xffff58207e4c   908  ldr x2, [x0, #104]
0xffff58207e50   912  subs x2, x2, #0x1 (1)
0xffff58207e54   916  str x2, [x0, #104]
0xffff58207e58   920  b.mi #+0xe4 (addr 0xffff58207f3c)
0xffff58207e5c   924  ubfx x16, x8, #8, #12
0xffff58207e60   928  and x0, x8, #0xfffffffffff00000
0xffff58207e64   932  add x0, x0, x16, lsl #2
0xffff58207e68   936  ubfx x2, x8, #3, #5
0xffff58207e6c   940  ldr x0, [x0, #360]
0xffff58207e70   944  lsr x0, x0, x2
0xffff58207e74   948  tbz w0, #0, #+0x8 (addr 0xffff58207e7c)
0xffff58207e78   952  tbnz w0, #1, #+0x3c (addr 0xffff58207eb4)
0xffff58207e7c   956  ldp x3, x2, [jssp], #16
0xffff58207e80   960  ldr x16, pc+864 (addr 0x0000ffff582081e0)    ;; external reference (store_buffer_top)
0xffff58207e84   964  ldr x0, [x16]
0xffff58207e88   968  str x1, [x0], #8
0xffff58207e8c   972  str x0, [x16]
0xffff58207e90   976  tst x0, #0x1ffff
0xffff58207e94   980  b.eq #+0x8 (addr 0xffff58207e9c)
0xffff58207e98   984  ret
0xffff58207e9c   988  sub csp, jssp, #0x8 (8)
0xffff58207ea0   992  str lr, [jssp, #-8]!
0xffff58207ea4   996  ldr x17, pc+836 (addr 0x0000ffff582081e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58207ea8  1000  blr x17
0xffff58207eac  1004  ldr lr, [jssp], #8
0xffff58207eb0  1008  ret
0xffff58207eb4  1012  ldr x0, [x1]
0xffff58207eb8  1016  and x2, x0, #0xfffffffffff00000
0xffff58207ebc  1020  ldr x2, [x2, #8]
0xffff58207ec0  1024  tbz w2, #6, #+0x18 (addr 0xffff58207ed8)
0xffff58207ec4  1028  and x2, x8, #0xfffffffffff00000
0xffff58207ec8  1032  ldr x2, [x2, #8]
0xffff58207ecc  1036  movz x16, #0x58
0xffff58207ed0  1040  tst x2, x16
0xffff58207ed4  1044  b.eq #+0x68 (addr 0xffff58207f3c)
0xffff58207ed8  1048  sub csp, jssp, #0x10 (16)
0xffff58207edc  1052  stp x8, x1, [jssp, #-16]!
0xffff58207ee0  1056  ubfx x16, x0, #8, #12
0xffff58207ee4  1060  and x2, x0, #0xfffffffffff00000
0xffff58207ee8  1064  add x2, x2, x16, lsl #2
0xffff58207eec  1068  ubfx x8, x0, #3, #5
0xffff58207ef0  1072  ldr x1, [x2, #360]
0xffff58207ef4  1076  lsr x1, x1, x8
0xffff58207ef8  1080  tbz w1, #0, #+0x40 (addr 0xffff58207f38)
0xffff58207efc  1084  ldp x8, x1, [jssp], #16
0xffff58207f00  1088  ldp x3, x2, [jssp], #16
0xffff58207f04  1092  ldr x16, pc+748 (addr 0x0000ffff582081f0)    ;; external reference (store_buffer_top)
0xffff58207f08  1096  ldr x0, [x16]
0xffff58207f0c  1100  str x1, [x0], #8
0xffff58207f10  1104  str x0, [x16]
0xffff58207f14  1108  tst x0, #0x1ffff
0xffff58207f18  1112  b.eq #+0x8 (addr 0xffff58207f20)
0xffff58207f1c  1116  ret
0xffff58207f20  1120  sub csp, jssp, #0x8 (8)
0xffff58207f24  1124  str lr, [jssp, #-8]!
0xffff58207f28  1128  ldr x17, pc+720 (addr 0x0000ffff582081f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58207f2c  1132  blr x17
0xffff58207f30  1136  ldr lr, [jssp], #8
0xffff58207f34  1140  ret
0xffff58207f38  1144  ldp x8, x1, [jssp], #16
0xffff58207f3c  1148  sub csp, jssp, #0x78 (120)
0xffff58207f40  1152  stp x14, x15, [jssp, #-32]!
0xffff58207f44  1156  stp x18, lr, [jssp, #16]
0xffff58207f48  1160  stp x10, x11, [jssp, #-32]!
0xffff58207f4c  1164  stp x12, x13, [jssp, #16]
0xffff58207f50  1168  stp x6, x7, [jssp, #-32]!
0xffff58207f54  1172  stp x8, x9, [jssp, #16]
0xffff58207f58  1176  stp x1, x4, [jssp, #-24]!
0xffff58207f5c  1180  str x5, [jssp, #16]
0xffff58207f60  1184  sub csp, jssp, #0xb0 (176)
0xffff58207f64  1188  stp d26, d27, [jssp, #-32]!
0xffff58207f68  1192  stp d28, d29, [jssp, #16]
0xffff58207f6c  1196  stp d22, d23, [jssp, #-32]!
0xffff58207f70  1200  stp d24, d25, [jssp, #16]
0xffff58207f74  1204  stp d18, d19, [jssp, #-32]!
0xffff58207f78  1208  stp d20, d21, [jssp, #16]
0xffff58207f7c  1212  stp d6, d7, [jssp, #-32]!
0xffff58207f80  1216  stp d16, d17, [jssp, #16]
0xffff58207f84  1220  stp d2, d3, [jssp, #-32]!
0xffff58207f88  1224  stp d4, d5, [jssp, #16]
0xffff58207f8c  1228  stp d0, d1, [jssp, #-16]!
0xffff58207f90  1232  mov x0, x8
0xffff58207f94  1236  ldr x2, pc+620 (addr 0x0000ffff58208200)    ;; external reference (isolate)
0xffff58207f98  1240  ldr x16, pc+624 (addr 0x0000ffff58208208)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58207f9c  1244  and csp, jssp, #0xfffffffffffffff0
0xffff58207fa0  1248  blr x16
0xffff58207fa4  1252  ldp d2, d3, [jssp, #16]
0xffff58207fa8  1256  ldp d0, d1, [jssp], #32
0xffff58207fac  1260  ldp d6, d7, [jssp, #16]
0xffff58207fb0  1264  ldp d4, d5, [jssp], #32
0xffff58207fb4  1268  ldp d18, d19, [jssp, #16]
0xffff58207fb8  1272  ldp d16, d17, [jssp], #32
0xffff58207fbc  1276  ldp d22, d23, [jssp, #16]
0xffff58207fc0  1280  ldp d20, d21, [jssp], #32
0xffff58207fc4  1284  ldp d26, d27, [jssp, #16]
0xffff58207fc8  1288  ldp d24, d25, [jssp], #32
0xffff58207fcc  1292  ldp d28, d29, [jssp], #16
0xffff58207fd0  1296  ldp x5, x6, [jssp, #16]
0xffff58207fd4  1300  ldp x1, x4, [jssp], #32
0xffff58207fd8  1304  ldp x9, x10, [jssp, #16]
0xffff58207fdc  1308  ldp x7, x8, [jssp], #32
0xffff58207fe0  1312  ldp x13, x14, [jssp, #16]
0xffff58207fe4  1316  ldp x11, x12, [jssp], #32
0xffff58207fe8  1320  ldr lr, [jssp, #16]
0xffff58207fec  1324  ldp x15, x18, [jssp], #24
0xffff58207ff0  1328  ldp x3, x2, [jssp], #16
0xffff58207ff4  1332  ldr x16, pc+540 (addr 0x0000ffff58208210)    ;; external reference (store_buffer_top)
0xffff58207ff8  1336  ldr x0, [x16]
0xffff58207ffc  1340  str x1, [x0], #8
0xffff58208000  1344  str x0, [x16]
0xffff58208004  1348  tst x0, #0x1ffff
0xffff58208008  1352  b.eq #+0x8 (addr 0xffff58208010)
0xffff5820800c  1356  ret
0xffff58208010  1360  sub csp, jssp, #0x8 (8)
0xffff58208014  1364  str lr, [jssp, #-8]!
0xffff58208018  1368  ldr x17, pc+512 (addr 0x0000ffff58208218)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820801c  1372  blr x17
0xffff58208020  1376  ldr lr, [jssp], #8
0xffff58208024  1380  ret
0xffff58208028  1384  and x0, x8, #0xfffffffffff00000
0xffff5820802c  1388  ldr x2, [x0, #104]
0xffff58208030  1392  subs x2, x2, #0x1 (1)
0xffff58208034  1396  str x2, [x0, #104]
0xffff58208038  1400  b.mi #+0x84 (addr 0xffff582080bc)
0xffff5820803c  1404  ubfx x16, x8, #8, #12
0xffff58208040  1408  and x0, x8, #0xfffffffffff00000
0xffff58208044  1412  add x0, x0, x16, lsl #2
0xffff58208048  1416  ubfx x2, x8, #3, #5
0xffff5820804c  1420  ldr x0, [x0, #360]
0xffff58208050  1424  lsr x0, x0, x2
0xffff58208054  1428  tbz w0, #0, #+0x8 (addr 0xffff5820805c)
0xffff58208058  1432  tbnz w0, #1, #+0xc (addr 0xffff58208064)
0xffff5820805c  1436  ldp x3, x2, [jssp], #16
0xffff58208060  1440  ret
0xffff58208064  1444  ldr x0, [x1]
0xffff58208068  1448  and x2, x0, #0xfffffffffff00000
0xffff5820806c  1452  ldr x2, [x2, #8]
0xffff58208070  1456  tbz w2, #6, #+0x18 (addr 0xffff58208088)
0xffff58208074  1460  and x2, x8, #0xfffffffffff00000
0xffff58208078  1464  ldr x2, [x2, #8]
0xffff5820807c  1468  movz x16, #0x58
0xffff58208080  1472  tst x2, x16
0xffff58208084  1476  b.eq #+0x38 (addr 0xffff582080bc)
0xffff58208088  1480  sub csp, jssp, #0x10 (16)
0xffff5820808c  1484  stp x8, x1, [jssp, #-16]!
0xffff58208090  1488  ubfx x16, x0, #8, #12
0xffff58208094  1492  and x2, x0, #0xfffffffffff00000
0xffff58208098  1496  add x2, x2, x16, lsl #2
0xffff5820809c  1500  ubfx x8, x0, #3, #5
0xffff582080a0  1504  ldr x1, [x2, #360]
0xffff582080a4  1508  lsr x1, x1, x8
0xffff582080a8  1512  tbz w1, #0, #+0x10 (addr 0xffff582080b8)
0xffff582080ac  1516  ldp x8, x1, [jssp], #16
0xffff582080b0  1520  ldp x3, x2, [jssp], #16
0xffff582080b4  1524  ret
0xffff582080b8  1528  ldp x8, x1, [jssp], #16
0xffff582080bc  1532  sub csp, jssp, #0x78 (120)
0xffff582080c0  1536  stp x14, x15, [jssp, #-32]!
0xffff582080c4  1540  stp x18, lr, [jssp, #16]
0xffff582080c8  1544  stp x10, x11, [jssp, #-32]!
0xffff582080cc  1548  stp x12, x13, [jssp, #16]
0xffff582080d0  1552  stp x6, x7, [jssp, #-32]!
0xffff582080d4  1556  stp x8, x9, [jssp, #16]
0xffff582080d8  1560  stp x1, x4, [jssp, #-24]!
0xffff582080dc  1564  str x5, [jssp, #16]
0xffff582080e0  1568  sub csp, jssp, #0xb0 (176)
0xffff582080e4  1572  stp d26, d27, [jssp, #-32]!
0xffff582080e8  1576  stp d28, d29, [jssp, #16]
0xffff582080ec  1580  stp d22, d23, [jssp, #-32]!
0xffff582080f0  1584  stp d24, d25, [jssp, #16]
0xffff582080f4  1588  stp d18, d19, [jssp, #-32]!
0xffff582080f8  1592  stp d20, d21, [jssp, #16]
0xffff582080fc  1596  stp d6, d7, [jssp, #-32]!
0xffff58208100  1600  stp d16, d17, [jssp, #16]
0xffff58208104  1604  stp d2, d3, [jssp, #-32]!
0xffff58208108  1608  stp d4, d5, [jssp, #16]
0xffff5820810c  1612  stp d0, d1, [jssp, #-16]!
0xffff58208110  1616  mov x0, x8
0xffff58208114  1620  ldr x2, pc+268 (addr 0x0000ffff58208220)    ;; external reference (isolate)
0xffff58208118  1624  ldr x16, pc+272 (addr 0x0000ffff58208228)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820811c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff58208120  1632  blr x16
0xffff58208124  1636  ldp d2, d3, [jssp, #16]
0xffff58208128  1640  ldp d0, d1, [jssp], #32
0xffff5820812c  1644  ldp d6, d7, [jssp, #16]
0xffff58208130  1648  ldp d4, d5, [jssp], #32
0xffff58208134  1652  ldp d18, d19, [jssp, #16]
0xffff58208138  1656  ldp d16, d17, [jssp], #32
0xffff5820813c  1660  ldp d22, d23, [jssp, #16]
0xffff58208140  1664  ldp d20, d21, [jssp], #32
0xffff58208144  1668  ldp d26, d27, [jssp, #16]
0xffff58208148  1672  ldp d24, d25, [jssp], #32
0xffff5820814c  1676  ldp d28, d29, [jssp], #16
0xffff58208150  1680  ldp x5, x6, [jssp, #16]
0xffff58208154  1684  ldp x1, x4, [jssp], #32
0xffff58208158  1688  ldp x9, x10, [jssp, #16]
0xffff5820815c  1692  ldp x7, x8, [jssp], #32
0xffff58208160  1696  ldp x13, x14, [jssp, #16]
0xffff58208164  1700  ldp x11, x12, [jssp], #32
0xffff58208168  1704  ldr lr, [jssp, #16]
0xffff5820816c  1708  ldp x15, x18, [jssp], #24
0xffff58208170  1712  ldp x3, x2, [jssp], #16
0xffff58208174  1716  ret
0xffff58208178  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5820817c  1724  d63f03e0       constant
0xffff58208180  1728  16e798c0       constant
0xffff58208184  1732  00000000       constant
0xffff58208188  1736  582065a0       constant
0xffff5820818c  1740  0000ffff       constant
0xffff58208190  1744  16e798c0       constant
0xffff58208194  1748  00000000       constant
0xffff58208198  1752  582065a0       constant
0xffff5820819c  1756  0000ffff       constant
0xffff582081a0  1760  16e798c0       constant
0xffff582081a4  1764  00000000       constant
0xffff582081a8  1768  582065a0       constant
0xffff582081ac  1772  0000ffff       constant
0xffff582081b0  1776  16e782d0       constant
0xffff582081b4  1780  00000000       constant
0xffff582081b8  1784  00c2d958       constant
0xffff582081bc  1788  00000000       constant
0xffff582081c0  1792  16e798c0       constant
0xffff582081c4  1796  00000000       constant
0xffff582081c8  1800  582065a0       constant
0xffff582081cc  1804  0000ffff       constant
0xffff582081d0  1808  16e782d0       constant
0xffff582081d4  1812  00000000       constant
0xffff582081d8  1816  00c2d958       constant
0xffff582081dc  1820  00000000       constant
0xffff582081e0  1824  16e798c0       constant
0xffff582081e4  1828  00000000       constant
0xffff582081e8  1832  582065a0       constant
0xffff582081ec  1836  0000ffff       constant
0xffff582081f0  1840  16e798c0       constant
0xffff582081f4  1844  00000000       constant
0xffff582081f8  1848  582065a0       constant
0xffff582081fc  1852  0000ffff       constant
0xffff58208200  1856  16e782d0       constant
0xffff58208204  1860  00000000       constant
0xffff58208208  1864  00c2d958       constant
0xffff5820820c  1868  00000000       constant
0xffff58208210  1872  16e798c0       constant
0xffff58208214  1876  00000000       constant
0xffff58208218  1880  582065a0       constant
0xffff5820821c  1884  0000ffff       constant
0xffff58208220  1888  16e782d0       constant
0xffff58208224  1892  00000000       constant
0xffff58208228  1896  00c2d958       constant
0xffff5820822c  1900  00000000       constant


RelocInfo (size = 65)
0xffff58207ac8  external reference (store_buffer_top)  (0x16e798c0)
0xffff58207aec  code target (STUB)  (0xffff582065a0)
0xffff58207b64  external reference (store_buffer_top)  (0x16e798c0)
0xffff58207b88  code target (STUB)  (0xffff582065a0)
0xffff58207bc8  external reference (store_buffer_top)  (0x16e798c0)
0xffff58207bec  code target (STUB)  (0xffff582065a0)
0xffff58207c58  external reference (isolate)  (0x16e782d0)
0xffff58207c5c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58207cb8  external reference (store_buffer_top)  (0x16e798c0)
0xffff58207cdc  code target (STUB)  (0xffff582065a0)
0xffff58207db8  external reference (isolate)  (0x16e782d0)
0xffff58207dbc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58207e80  external reference (store_buffer_top)  (0x16e798c0)
0xffff58207ea4  code target (STUB)  (0xffff582065a0)
0xffff58207f04  external reference (store_buffer_top)  (0x16e798c0)
0xffff58207f28  code target (STUB)  (0xffff582065a0)
0xffff58207f94  external reference (isolate)  (0x16e782d0)
0xffff58207f98  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58207ff4  external reference (store_buffer_top)  (0x16e798c0)
0xffff58208018  code target (STUB)  (0xffff582065a0)
0xffff58208114  external reference (isolate)  (0x16e782d0)
0xffff58208118  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58208178  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 706)
0xffff582082a0     0  movz x16, #0xa00000000
0xffff582082a4     4  sub csp, jssp, #0x10 (16)
0xffff582082a8     8  stp fp, lr, [jssp, #-16]!
0xffff582082ac    12  mov fp, jssp
0xffff582082b0    16  sub csp, jssp, #0x8 (8)
0xffff582082b4    20  sub jssp, jssp, #0x8 (8)
0xffff582082b8    24  stur x16, [fp, #-8]
0xffff582082bc    28  ldr x3, [fp]
0xffff582082c0    32  ldur x4, [x3, #-8]
0xffff582082c4    36  movz x16, #0xe00000000
0xffff582082c8    40  cmp x4, x16
0xffff582082cc    44  csel x4, fp, x3, ne
0xffff582082d0    48  ldr x3, [x4, #16]
0xffff582082d4    52  tbnz w3, #0, #+0x11c (addr 0xffff582083f0)
0xffff582082d8    56  asr x5, x3, #32
0xffff582082dc    60  movz w16, #0x257f
0xffff582082e0    64  cmp w5, w16, lsl #3
0xffff582082e4    68  b.hs #+0x224 (addr 0xffff58208508)
0xffff582082e8    72  cbz w5, #+0xc (addr 0xffff582082f4)
0xffff582082ec    76  mov x3, x5
0xffff582082f0    80  b #+0xc (addr 0xffff582082fc)
0xffff582082f4    84  movz x3, #0x4
0xffff582082f8    88  movz x5, #0x0
0xffff582082fc    92  lsl x4, x3, #32
0xffff58208300    96  lsl x5, x5, #32
0xffff58208304   100  lsl w6, w3, #3
0xffff58208308   104  add w6, w6, #0x10 (16)
0xffff5820830c   108  cmp w6, #0x96000 (614400)
0xffff58208310   112  b.hs #+0x200 (addr 0xffff58208510)
0xffff58208314   116  movz x7, #0x92c0
0xffff58208318   120  movk x7, #0x16e7, lsl #16
0xffff5820831c   124  ldp x8, x0, [x7]
0xffff58208320   128  adds x16, x8, #0x30 (48)
0xffff58208324   132  ccmp x16, x0, #nzCv, lo
0xffff58208328   136  b.hi #+0xf0 (addr 0xffff58208418)
0xffff5820832c   140  str x16, [x7]
0xffff58208330   144  orr x8, x8, #0x1
0xffff58208334   148  ldur x0, [x1, #23]
0xffff58208338   152  stur x0, [x8, #-1]
0xffff5820833c   156  ldr x0, pc+364 (addr 0x0000ffff582084a8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208340   160  stur x0, [x8, #7]
0xffff58208344   164  ldr x0, pc+364 (addr 0x0000ffff582084b0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208348   168  stur x0, [x8, #15]
0xffff5820834c   172  stur x5, [x8, #23]
0xffff58208350   176  add x0, x8, #0x20 (32)
0xffff58208354   180  ldr x1, pc+356 (addr 0x0000ffff582084b8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58208358   184  stur x1, [x0, #-1]
0xffff5820835c   188  stur x2, [x0, #7]
0xffff58208360   192  ldur w0, [x2, #35]
0xffff58208364   196  add w0, w0, #0x1 (1)
0xffff58208368   200  lsl x0, x0, #32
0xffff5820836c   204  stur x0, [x2, #31]
0xffff58208370   208  sxtw x6, w6
0xffff58208374   212  movz x0, #0x92c0
0xffff58208378   216  movk x0, #0x16e7, lsl #16
0xffff5820837c   220  ldp x2, x16, [x0]
0xffff58208380   224  adds x1, x2, x6
0xffff58208384   228  ccmp x1, x16, #nzCv, lo
0xffff58208388   232  b.hi #+0xd4 (addr 0xffff5820845c)
0xffff5820838c   236  str x1, [x0]
0xffff58208390   240  orr x2, x2, #0x1
0xffff58208394   244  ldr x0, pc+300 (addr 0x0000ffff582084c0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58208398   248  stur x0, [x2, #-1]
0xffff5820839c   252  stur x4, [x2, #7]
0xffff582083a0   256  mov x0, x2
0xffff582083a4   260  stur x0, [x8, #15]
0xffff582083a8   264  add x1, x8, #0xf (15)
0xffff582083ac   268  and x0, x8, #0xfffffffffff00000
0xffff582083b0   272  ldr x0, [x0, #8]
0xffff582083b4   276  tbz w0, #2, #+0xc (addr 0xffff582083c0)
0xffff582083b8   280  ldr x16, pc+272 (addr 0x0000ffff582084c8)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff582083bc   284  blr x16
0xffff582083c0   288  cmp w3, #0x0 (0)
0xffff582083c4   292  b.le #+0x18 (addr 0xffff582083dc)
0xffff582083c8   296  sub w3, w3, #0x1 (1)
0xffff582083cc   300  ldr x0, pc+260 (addr 0x0000ffff582084d0)    ;; object: 0x39c04519 <the hole>
0xffff582083d0   304  add x1, x2, #0xf (15)
0xffff582083d4   308  str x0, [x1, w3, sxtw #3]
0xffff582083d8   312  b #-0x18 (addr 0xffff582083c0)
0xffff582083dc   316  mov x0, x8
0xffff582083e0   320  mov jssp, fp
0xffff582083e4   324  ldp fp, lr, [jssp], #16
0xffff582083e8   328  add jssp, jssp, #0x10 (16)
0xffff582083ec   332  ret
0xffff582083f0   336  ldur x16, [x3, #-1]
0xffff582083f4   340  ldr x17, [x26, #120]
0xffff582083f8   344  cmp x16, x17
0xffff582083fc   348  b.ne #+0x11c (addr 0xffff58208518)
0xffff58208400   352  ldur d29, [x3, #7]
0xffff58208404   356  fcvtzs w5, d29
0xffff58208408   360  scvtf d0, w5
0xffff5820840c   364  fcmp d29, d0
0xffff58208410   368  b.ne #+0x108 (addr 0xffff58208518)
0xffff58208414   372  b #-0x138 (addr 0xffff582082dc)
0xffff58208418   376  movz x8, #0x0
0xffff5820841c   380  mov x16, lr
0xffff58208420   384  ldr x17, pc+184 (addr 0x0000ffff582084d8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208424   388  blr x17
0xffff58208428   392  movz x0, #0x3000000000
0xffff5820842c   396  movz x10, #0x0
0xffff58208430   400  sub csp, jssp, #0x10 (16)
0xffff58208434   404  stp x10, x0, [jssp, #-16]!
0xffff58208438   408  movz x0, #0x2
0xffff5820843c   412  movz x1, #0x5b88
0xffff58208440   416  movk x1, #0xe2, lsl #16
0xffff58208444   420  ldr x16, pc+156 (addr 0x0000ffff582084e0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58208448   424  blr x16
0xffff5820844c   428  str x0, [jssp, #64]
0xffff58208450   432  ldr x16, pc+152 (addr 0x0000ffff582084e8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208454   436  blr x16
0xffff58208458   440  b #-0x124 (addr 0xffff58208334)
0xffff5820845c   444  movz x2, #0x0
0xffff58208460   448  mov x16, lr
0xffff58208464   452  ldr x17, pc+140 (addr 0x0000ffff582084f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208468   456  blr x17
0xffff5820846c   460  lsl x0, x6, #32
0xffff58208470   464  movz x10, #0x0
0xffff58208474   468  sub csp, jssp, #0x10 (16)
0xffff58208478   472  stp x10, x0, [jssp, #-16]!
0xffff5820847c   476  movz x0, #0x2
0xffff58208480   480  movz x1, #0x5b88
0xffff58208484   484  movk x1, #0xe2, lsl #16
0xffff58208488   488  ldr x16, pc+112 (addr 0x0000ffff582084f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820848c   492  blr x16
0xffff58208490   496  str x0, [jssp, #16]
0xffff58208494   500  ldr x16, pc+108 (addr 0x0000ffff58208500)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208498   504  blr x16
0xffff5820849c   508  b #-0x108 (addr 0xffff58208394)
0xffff582084a0   512  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff582084a4   516  d63f03e0       constant
0xffff582084a8   520  39c04201       constant
0xffff582084ac   524  00000000       constant
0xffff582084b0   528  39c04201       constant
0xffff582084b4   532  00000000       constant
0xffff582084b8   536  32b05d81       constant
0xffff582084bc   540  00000000       constant
0xffff582084c0   544  32b04259       constant
0xffff582084c4   548  00000000       constant
0xffff582084c8   552  58207ac0       constant
0xffff582084cc   556  0000ffff       constant
0xffff582084d0   560  39c04519       constant
0xffff582084d4   564  00000000       constant
0xffff582084d8   568  58206820       constant
0xffff582084dc   572  0000ffff       constant
0xffff582084e0   576  58206260       constant
0xffff582084e4   580  0000ffff       constant
0xffff582084e8   584  582068e0       constant
0xffff582084ec   588  0000ffff       constant
0xffff582084f0   592  58206820       constant
0xffff582084f4   596  0000ffff       constant
0xffff582084f8   600  58206260       constant
0xffff582084fc   604  0000ffff       constant
0xffff58208500   608  582068e0       constant
0xffff58208504   612  0000ffff       constant
0xffff58208508   616  movz x16, #0x0
0xffff5820850c   620  bl #+0x14 (addr 0xffff58208520)
0xffff58208510   624  movz x16, #0x8
0xffff58208514   628  bl #+0xc (addr 0xffff58208520)
0xffff58208518   632  movz x16, #0x10
0xffff5820851c   636  bl #+0x4 (addr 0xffff58208520)
0xffff58208520   640  ldr x17, pc+24 (addr 0x0000ffff58208538)    ;; lazy deoptimization bailout 0
0xffff58208524   644  add x17, x17, x16
0xffff58208528   648  br x17
0xffff5820852c   652  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58208530   656  d63f03e0       constant
0xffff58208534   660  d503201f       constant
0xffff58208538   664  58006000       constant
0xffff5820853c   668  0000ffff       constant


Safepoints (size = 34)
0xffff5820844c   428  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff58208490   496  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff5820833c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208344  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208354  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58208394  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582083b8  code target (STUB)  (0xffff58207ac0)
0xffff582083cc  embedded object  (0x39c04519 <the hole>)
0xffff58208420  code target (STUB)  (0xffff58206820)
0xffff58208444  code target (STUB)  (0xffff58206260)
0xffff58208450  code target (STUB)  (0xffff582068e0)
0xffff58208464  code target (STUB)  (0xffff58206820)
0xffff58208488  code target (STUB)  (0xffff58206260)
0xffff58208494  code target (STUB)  (0xffff582068e0)
0xffff582084a0  constant pool (size 104)
0xffff58208520  runtime entry
0xffff5820852c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 706)
0xffff582082a0     0  movz x16, #0xa00000000
0xffff582082a4     4  sub csp, jssp, #0x10 (16)
0xffff582082a8     8  stp fp, lr, [jssp, #-16]!
0xffff582082ac    12  mov fp, jssp
0xffff582082b0    16  sub csp, jssp, #0x8 (8)
0xffff582082b4    20  sub jssp, jssp, #0x8 (8)
0xffff582082b8    24  stur x16, [fp, #-8]
0xffff582082bc    28  ldr x3, [fp]
0xffff582082c0    32  ldur x4, [x3, #-8]
0xffff582082c4    36  movz x16, #0xe00000000
0xffff582082c8    40  cmp x4, x16
0xffff582082cc    44  csel x4, fp, x3, ne
0xffff582082d0    48  ldr x3, [x4, #16]
0xffff582082d4    52  tbnz w3, #0, #+0x11c (addr 0xffff582083f0)
0xffff582082d8    56  asr x5, x3, #32
0xffff582082dc    60  movz w16, #0x257f
0xffff582082e0    64  cmp w5, w16, lsl #3
0xffff582082e4    68  b.hs #+0x224 (addr 0xffff58208508)
0xffff582082e8    72  cbz w5, #+0xc (addr 0xffff582082f4)
0xffff582082ec    76  mov x3, x5
0xffff582082f0    80  b #+0xc (addr 0xffff582082fc)
0xffff582082f4    84  movz x3, #0x4
0xffff582082f8    88  movz x5, #0x0
0xffff582082fc    92  lsl x4, x3, #32
0xffff58208300    96  lsl x5, x5, #32
0xffff58208304   100  lsl w6, w3, #3
0xffff58208308   104  add w6, w6, #0x10 (16)
0xffff5820830c   108  cmp w6, #0x96000 (614400)
0xffff58208310   112  b.hs #+0x200 (addr 0xffff58208510)
0xffff58208314   116  movz x7, #0x92c0
0xffff58208318   120  movk x7, #0x16e7, lsl #16
0xffff5820831c   124  ldp x8, x0, [x7]
0xffff58208320   128  adds x16, x8, #0x30 (48)
0xffff58208324   132  ccmp x16, x0, #nzCv, lo
0xffff58208328   136  b.hi #+0xf0 (addr 0xffff58208418)
0xffff5820832c   140  str x16, [x7]
0xffff58208330   144  orr x8, x8, #0x1
0xffff58208334   148  ldur x0, [x1, #23]
0xffff58208338   152  stur x0, [x8, #-1]
0xffff5820833c   156  ldr x0, pc+364 (addr 0x0000ffff582084a8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208340   160  stur x0, [x8, #7]
0xffff58208344   164  ldr x0, pc+364 (addr 0x0000ffff582084b0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208348   168  stur x0, [x8, #15]
0xffff5820834c   172  stur x5, [x8, #23]
0xffff58208350   176  add x0, x8, #0x20 (32)
0xffff58208354   180  ldr x1, pc+356 (addr 0x0000ffff582084b8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58208358   184  stur x1, [x0, #-1]
0xffff5820835c   188  stur x2, [x0, #7]
0xffff58208360   192  ldur w0, [x2, #35]
0xffff58208364   196  add w0, w0, #0x1 (1)
0xffff58208368   200  lsl x0, x0, #32
0xffff5820836c   204  stur x0, [x2, #31]
0xffff58208370   208  sxtw x6, w6
0xffff58208374   212  movz x0, #0x92c0
0xffff58208378   216  movk x0, #0x16e7, lsl #16
0xffff5820837c   220  ldp x2, x16, [x0]
0xffff58208380   224  adds x1, x2, x6
0xffff58208384   228  ccmp x1, x16, #nzCv, lo
0xffff58208388   232  b.hi #+0xd4 (addr 0xffff5820845c)
0xffff5820838c   236  str x1, [x0]
0xffff58208390   240  orr x2, x2, #0x1
0xffff58208394   244  ldr x0, pc+300 (addr 0x0000ffff582084c0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58208398   248  stur x0, [x2, #-1]
0xffff5820839c   252  stur x4, [x2, #7]
0xffff582083a0   256  mov x0, x2
0xffff582083a4   260  stur x0, [x8, #15]
0xffff582083a8   264  add x1, x8, #0xf (15)
0xffff582083ac   268  and x0, x8, #0xfffffffffff00000
0xffff582083b0   272  ldr x0, [x0, #8]
0xffff582083b4   276  tbz w0, #2, #+0xc (addr 0xffff582083c0)
0xffff582083b8   280  ldr x16, pc+272 (addr 0x0000ffff582084c8)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff582083bc   284  blr x16
0xffff582083c0   288  cmp w3, #0x0 (0)
0xffff582083c4   292  b.le #+0x18 (addr 0xffff582083dc)
0xffff582083c8   296  sub w3, w3, #0x1 (1)
0xffff582083cc   300  ldr x0, pc+260 (addr 0x0000ffff582084d0)    ;; object: 0x39c04519 <the hole>
0xffff582083d0   304  add x1, x2, #0xf (15)
0xffff582083d4   308  str x0, [x1, w3, sxtw #3]
0xffff582083d8   312  b #-0x18 (addr 0xffff582083c0)
0xffff582083dc   316  mov x0, x8
0xffff582083e0   320  mov jssp, fp
0xffff582083e4   324  ldp fp, lr, [jssp], #16
0xffff582083e8   328  add jssp, jssp, #0x10 (16)
0xffff582083ec   332  ret
0xffff582083f0   336  ldur x16, [x3, #-1]
0xffff582083f4   340  ldr x17, [x26, #120]
0xffff582083f8   344  cmp x16, x17
0xffff582083fc   348  b.ne #+0x11c (addr 0xffff58208518)
0xffff58208400   352  ldur d29, [x3, #7]
0xffff58208404   356  fcvtzs w5, d29
0xffff58208408   360  scvtf d0, w5
0xffff5820840c   364  fcmp d29, d0
0xffff58208410   368  b.ne #+0x108 (addr 0xffff58208518)
0xffff58208414   372  b #-0x138 (addr 0xffff582082dc)
0xffff58208418   376  movz x8, #0x0
0xffff5820841c   380  mov x16, lr
0xffff58208420   384  ldr x17, pc+184 (addr 0x0000ffff582084d8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208424   388  blr x17
0xffff58208428   392  movz x0, #0x3000000000
0xffff5820842c   396  movz x10, #0x0
0xffff58208430   400  sub csp, jssp, #0x10 (16)
0xffff58208434   404  stp x10, x0, [jssp, #-16]!
0xffff58208438   408  movz x0, #0x2
0xffff5820843c   412  movz x1, #0x5b88
0xffff58208440   416  movk x1, #0xe2, lsl #16
0xffff58208444   420  ldr x16, pc+156 (addr 0x0000ffff582084e0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58208448   424  blr x16
0xffff5820844c   428  str x0, [jssp, #64]
0xffff58208450   432  ldr x16, pc+152 (addr 0x0000ffff582084e8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208454   436  blr x16
0xffff58208458   440  b #-0x124 (addr 0xffff58208334)
0xffff5820845c   444  movz x2, #0x0
0xffff58208460   448  mov x16, lr
0xffff58208464   452  ldr x17, pc+140 (addr 0x0000ffff582084f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208468   456  blr x17
0xffff5820846c   460  lsl x0, x6, #32
0xffff58208470   464  movz x10, #0x0
0xffff58208474   468  sub csp, jssp, #0x10 (16)
0xffff58208478   472  stp x10, x0, [jssp, #-16]!
0xffff5820847c   476  movz x0, #0x2
0xffff58208480   480  movz x1, #0x5b88
0xffff58208484   484  movk x1, #0xe2, lsl #16
0xffff58208488   488  ldr x16, pc+112 (addr 0x0000ffff582084f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820848c   492  blr x16
0xffff58208490   496  str x0, [jssp, #16]
0xffff58208494   500  ldr x16, pc+108 (addr 0x0000ffff58208500)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208498   504  blr x16
0xffff5820849c   508  b #-0x108 (addr 0xffff58208394)
0xffff582084a0   512  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff582084a4   516  d63f03e0       constant
0xffff582084a8   520  39c04201       constant
0xffff582084ac   524  00000000       constant
0xffff582084b0   528  39c04201       constant
0xffff582084b4   532  00000000       constant
0xffff582084b8   536  32b05d81       constant
0xffff582084bc   540  00000000       constant
0xffff582084c0   544  32b04259       constant
0xffff582084c4   548  00000000       constant
0xffff582084c8   552  58207ac0       constant
0xffff582084cc   556  0000ffff       constant
0xffff582084d0   560  39c04519       constant
0xffff582084d4   564  00000000       constant
0xffff582084d8   568  58206820       constant
0xffff582084dc   572  0000ffff       constant
0xffff582084e0   576  58206260       constant
0xffff582084e4   580  0000ffff       constant
0xffff582084e8   584  582068e0       constant
0xffff582084ec   588  0000ffff       constant
0xffff582084f0   592  58206820       constant
0xffff582084f4   596  0000ffff       constant
0xffff582084f8   600  58206260       constant
0xffff582084fc   604  0000ffff       constant
0xffff58208500   608  582068e0       constant
0xffff58208504   612  0000ffff       constant
0xffff58208508   616  movz x16, #0x0
0xffff5820850c   620  bl #+0x14 (addr 0xffff58208520)
0xffff58208510   624  movz x16, #0x8
0xffff58208514   628  bl #+0xc (addr 0xffff58208520)
0xffff58208518   632  movz x16, #0x10
0xffff5820851c   636  bl #+0x4 (addr 0xffff58208520)
0xffff58208520   640  ldr x17, pc+24 (addr 0x0000ffff58208538)    ;; lazy deoptimization bailout 0
0xffff58208524   644  add x17, x17, x16
0xffff58208528   648  br x17
0xffff5820852c   652  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58208530   656  d63f03e0       constant
0xffff58208534   660  d503201f       constant
0xffff58208538   664  58006000       constant
0xffff5820853c   668  0000ffff       constant


Safepoints (size = 34)
0xffff5820844c   428  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff58208490   496  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff5820833c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208344  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208354  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58208394  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582083b8  code target (STUB)  (0xffff58207ac0)
0xffff582083cc  embedded object  (0x39c04519 <the hole>)
0xffff58208420  code target (STUB)  (0xffff58206820)
0xffff58208444  code target (STUB)  (0xffff58206260)
0xffff58208450  code target (STUB)  (0xffff582068e0)
0xffff58208464  code target (STUB)  (0xffff58206820)
0xffff58208488  code target (STUB)  (0xffff58206260)
0xffff58208494  code target (STUB)  (0xffff582068e0)
0xffff582084a0  constant pool (size 104)
0xffff58208520  runtime entry
0xffff5820852c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff582085e0     0  movz x16, #0xa00000000
0xffff582085e4     4  sub csp, jssp, #0x10 (16)
0xffff582085e8     8  stp fp, lr, [jssp, #-16]!
0xffff582085ec    12  mov fp, jssp
0xffff582085f0    16  sub csp, jssp, #0x8 (8)
0xffff582085f4    20  sub jssp, jssp, #0x8 (8)
0xffff582085f8    24  stur x16, [fp, #-8]
0xffff582085fc    28  ldr x3, [fp]
0xffff58208600    32  ldur x4, [x3, #-8]
0xffff58208604    36  movz x16, #0xe00000000
0xffff58208608    40  cmp x4, x16
0xffff5820860c    44  csel x4, fp, x3, ne
0xffff58208610    48  ldr x3, [x4, #16]
0xffff58208614    52  tbnz w3, #0, #+0xd0 (addr 0xffff582086e4)
0xffff58208618    56  asr x5, x3, #32
0xffff5820861c    60  movz w16, #0x257f
0xffff58208620    64  cmp w5, w16, lsl #3
0xffff58208624    68  b.hs #+0x16c (addr 0xffff58208790)
0xffff58208628    72  cbz w5, #+0xc (addr 0xffff58208634)
0xffff5820862c    76  mov x3, x5
0xffff58208630    80  b #+0xc (addr 0xffff5820863c)
0xffff58208634    84  movz x3, #0x4
0xffff58208638    88  movz x5, #0x0
0xffff5820863c    92  lsl x4, x3, #32
0xffff58208640    96  lsl x5, x5, #32
0xffff58208644   100  lsl w6, w3, #3
0xffff58208648   104  add w6, w6, #0x10 (16)
0xffff5820864c   108  cmp w6, #0x96000 (614400)
0xffff58208650   112  b.hs #+0x148 (addr 0xffff58208798)
0xffff58208654   116  add w0, w6, #0x20 (32)
0xffff58208658   120  sxtw x0, w0
0xffff5820865c   124  movz x2, #0x92c0
0xffff58208660   128  movk x2, #0x16e7, lsl #16
0xffff58208664   132  ldp x7, x16, [x2]
0xffff58208668   136  adds x6, x7, x0
0xffff5820866c   140  ccmp x6, x16, #nzCv, lo
0xffff58208670   144  b.hi #+0x9c (addr 0xffff5820870c)
0xffff58208674   148  str x6, [x2]
0xffff58208678   152  orr x7, x7, #0x1
0xffff5820867c   156  movz w0, #0x0
0xffff58208680   160  stur x0, [x7, #31]
0xffff58208684   164  ldur x0, [x1, #23]
0xffff58208688   168  stur x0, [x7, #-1]
0xffff5820868c   172  ldr x0, pc+204 (addr 0x0000ffff58208758)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208690   176  stur x0, [x7, #7]
0xffff58208694   180  ldr x0, pc+204 (addr 0x0000ffff58208760)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208698   184  stur x0, [x7, #15]
0xffff5820869c   188  stur x5, [x7, #23]
0xffff582086a0   192  add x0, x7, #0x20 (32)
0xffff582086a4   196  ldr x1, pc+196 (addr 0x0000ffff58208768)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582086a8   200  stur x1, [x0, #-1]
0xffff582086ac   204  stur x4, [x0, #7]
0xffff582086b0   208  stur x0, [x7, #15]
0xffff582086b4   212  cmp w3, #0x0 (0)
0xffff582086b8   216  b.le #+0x18 (addr 0xffff582086d0)
0xffff582086bc   220  sub w3, w3, #0x1 (1)
0xffff582086c0   224  ldr x1, pc+176 (addr 0x0000ffff58208770)    ;; object: 0x39c04519 <the hole>
0xffff582086c4   228  add x2, x0, #0xf (15)
0xffff582086c8   232  str x1, [x2, w3, sxtw #3]
0xffff582086cc   236  b #-0x18 (addr 0xffff582086b4)
0xffff582086d0   240  mov x0, x7
0xffff582086d4   244  mov jssp, fp
0xffff582086d8   248  ldp fp, lr, [jssp], #16
0xffff582086dc   252  add jssp, jssp, #0x10 (16)
0xffff582086e0   256  ret
0xffff582086e4   260  ldur x16, [x3, #-1]
0xffff582086e8   264  ldr x17, [x26, #120]
0xffff582086ec   268  cmp x16, x17
0xffff582086f0   272  b.ne #+0xb0 (addr 0xffff582087a0)
0xffff582086f4   276  ldur d29, [x3, #7]
0xffff582086f8   280  fcvtzs w5, d29
0xffff582086fc   284  scvtf d0, w5
0xffff58208700   288  fcmp d29, d0
0xffff58208704   292  b.ne #+0x9c (addr 0xffff582087a0)
0xffff58208708   296  b #-0xec (addr 0xffff5820861c)
0xffff5820870c   300  movz x7, #0x0
0xffff58208710   304  mov x16, lr
0xffff58208714   308  ldr x17, pc+100 (addr 0x0000ffff58208778)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208718   312  blr x17
0xffff5820871c   316  lsl x0, x0, #32
0xffff58208720   320  movz x10, #0x0
0xffff58208724   324  sub csp, jssp, #0x10 (16)
0xffff58208728   328  stp x10, x0, [jssp, #-16]!
0xffff5820872c   332  movz x0, #0x2
0xffff58208730   336  movz x1, #0x5b88
0xffff58208734   340  movk x1, #0xe2, lsl #16
0xffff58208738   344  ldr x16, pc+72 (addr 0x0000ffff58208780)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820873c   348  blr x16
0xffff58208740   352  str x0, [jssp, #56]
0xffff58208744   356  ldr x16, pc+68 (addr 0x0000ffff58208788)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208748   360  blr x16
0xffff5820874c   364  b #-0xd0 (addr 0xffff5820867c)
0xffff58208750   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58208754   372  d63f03e0       constant
0xffff58208758   376  39c04201       constant
0xffff5820875c   380  00000000       constant
0xffff58208760   384  39c04201       constant
0xffff58208764   388  00000000       constant
0xffff58208768   392  32b04259       constant
0xffff5820876c   396  00000000       constant
0xffff58208770   400  39c04519       constant
0xffff58208774   404  00000000       constant
0xffff58208778   408  58206820       constant
0xffff5820877c   412  0000ffff       constant
0xffff58208780   416  58206260       constant
0xffff58208784   420  0000ffff       constant
0xffff58208788   424  582068e0       constant
0xffff5820878c   428  0000ffff       constant
0xffff58208790   432  movz x16, #0x0
0xffff58208794   436  bl #+0x14 (addr 0xffff582087a8)
0xffff58208798   440  movz x16, #0x8
0xffff5820879c   444  bl #+0xc (addr 0xffff582087a8)
0xffff582087a0   448  movz x16, #0x10
0xffff582087a4   452  bl #+0x4 (addr 0xffff582087a8)
0xffff582087a8   456  ldr x17, pc+24 (addr 0x0000ffff582087c0)    ;; lazy deoptimization bailout 0
0xffff582087ac   460  add x17, x17, x16
0xffff582087b0   464  br x17
0xffff582087b4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582087b8   472  d63f03e0       constant
0xffff582087bc   476  d503201f       constant
0xffff582087c0   480  58006000       constant
0xffff582087c4   484  0000ffff       constant


Safepoints (size = 21)
0xffff58208740   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff5820868c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208694  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582086a4  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582086c0  embedded object  (0x39c04519 <the hole>)
0xffff58208714  code target (STUB)  (0xffff58206820)
0xffff58208738  code target (STUB)  (0xffff58206260)
0xffff58208744  code target (STUB)  (0xffff582068e0)
0xffff58208750  constant pool (size 64)
0xffff582087a8  runtime entry
0xffff582087b4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 509)
0xffff582085e0     0  movz x16, #0xa00000000
0xffff582085e4     4  sub csp, jssp, #0x10 (16)
0xffff582085e8     8  stp fp, lr, [jssp, #-16]!
0xffff582085ec    12  mov fp, jssp
0xffff582085f0    16  sub csp, jssp, #0x8 (8)
0xffff582085f4    20  sub jssp, jssp, #0x8 (8)
0xffff582085f8    24  stur x16, [fp, #-8]
0xffff582085fc    28  ldr x3, [fp]
0xffff58208600    32  ldur x4, [x3, #-8]
0xffff58208604    36  movz x16, #0xe00000000
0xffff58208608    40  cmp x4, x16
0xffff5820860c    44  csel x4, fp, x3, ne
0xffff58208610    48  ldr x3, [x4, #16]
0xffff58208614    52  tbnz w3, #0, #+0xd0 (addr 0xffff582086e4)
0xffff58208618    56  asr x5, x3, #32
0xffff5820861c    60  movz w16, #0x257f
0xffff58208620    64  cmp w5, w16, lsl #3
0xffff58208624    68  b.hs #+0x16c (addr 0xffff58208790)
0xffff58208628    72  cbz w5, #+0xc (addr 0xffff58208634)
0xffff5820862c    76  mov x3, x5
0xffff58208630    80  b #+0xc (addr 0xffff5820863c)
0xffff58208634    84  movz x3, #0x4
0xffff58208638    88  movz x5, #0x0
0xffff5820863c    92  lsl x4, x3, #32
0xffff58208640    96  lsl x5, x5, #32
0xffff58208644   100  lsl w6, w3, #3
0xffff58208648   104  add w6, w6, #0x10 (16)
0xffff5820864c   108  cmp w6, #0x96000 (614400)
0xffff58208650   112  b.hs #+0x148 (addr 0xffff58208798)
0xffff58208654   116  add w0, w6, #0x20 (32)
0xffff58208658   120  sxtw x0, w0
0xffff5820865c   124  movz x2, #0x92c0
0xffff58208660   128  movk x2, #0x16e7, lsl #16
0xffff58208664   132  ldp x7, x16, [x2]
0xffff58208668   136  adds x6, x7, x0
0xffff5820866c   140  ccmp x6, x16, #nzCv, lo
0xffff58208670   144  b.hi #+0x9c (addr 0xffff5820870c)
0xffff58208674   148  str x6, [x2]
0xffff58208678   152  orr x7, x7, #0x1
0xffff5820867c   156  movz w0, #0x0
0xffff58208680   160  stur x0, [x7, #31]
0xffff58208684   164  ldur x0, [x1, #23]
0xffff58208688   168  stur x0, [x7, #-1]
0xffff5820868c   172  ldr x0, pc+204 (addr 0x0000ffff58208758)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208690   176  stur x0, [x7, #7]
0xffff58208694   180  ldr x0, pc+204 (addr 0x0000ffff58208760)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208698   184  stur x0, [x7, #15]
0xffff5820869c   188  stur x5, [x7, #23]
0xffff582086a0   192  add x0, x7, #0x20 (32)
0xffff582086a4   196  ldr x1, pc+196 (addr 0x0000ffff58208768)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582086a8   200  stur x1, [x0, #-1]
0xffff582086ac   204  stur x4, [x0, #7]
0xffff582086b0   208  stur x0, [x7, #15]
0xffff582086b4   212  cmp w3, #0x0 (0)
0xffff582086b8   216  b.le #+0x18 (addr 0xffff582086d0)
0xffff582086bc   220  sub w3, w3, #0x1 (1)
0xffff582086c0   224  ldr x1, pc+176 (addr 0x0000ffff58208770)    ;; object: 0x39c04519 <the hole>
0xffff582086c4   228  add x2, x0, #0xf (15)
0xffff582086c8   232  str x1, [x2, w3, sxtw #3]
0xffff582086cc   236  b #-0x18 (addr 0xffff582086b4)
0xffff582086d0   240  mov x0, x7
0xffff582086d4   244  mov jssp, fp
0xffff582086d8   248  ldp fp, lr, [jssp], #16
0xffff582086dc   252  add jssp, jssp, #0x10 (16)
0xffff582086e0   256  ret
0xffff582086e4   260  ldur x16, [x3, #-1]
0xffff582086e8   264  ldr x17, [x26, #120]
0xffff582086ec   268  cmp x16, x17
0xffff582086f0   272  b.ne #+0xb0 (addr 0xffff582087a0)
0xffff582086f4   276  ldur d29, [x3, #7]
0xffff582086f8   280  fcvtzs w5, d29
0xffff582086fc   284  scvtf d0, w5
0xffff58208700   288  fcmp d29, d0
0xffff58208704   292  b.ne #+0x9c (addr 0xffff582087a0)
0xffff58208708   296  b #-0xec (addr 0xffff5820861c)
0xffff5820870c   300  movz x7, #0x0
0xffff58208710   304  mov x16, lr
0xffff58208714   308  ldr x17, pc+100 (addr 0x0000ffff58208778)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208718   312  blr x17
0xffff5820871c   316  lsl x0, x0, #32
0xffff58208720   320  movz x10, #0x0
0xffff58208724   324  sub csp, jssp, #0x10 (16)
0xffff58208728   328  stp x10, x0, [jssp, #-16]!
0xffff5820872c   332  movz x0, #0x2
0xffff58208730   336  movz x1, #0x5b88
0xffff58208734   340  movk x1, #0xe2, lsl #16
0xffff58208738   344  ldr x16, pc+72 (addr 0x0000ffff58208780)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820873c   348  blr x16
0xffff58208740   352  str x0, [jssp, #56]
0xffff58208744   356  ldr x16, pc+68 (addr 0x0000ffff58208788)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208748   360  blr x16
0xffff5820874c   364  b #-0xd0 (addr 0xffff5820867c)
0xffff58208750   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58208754   372  d63f03e0       constant
0xffff58208758   376  39c04201       constant
0xffff5820875c   380  00000000       constant
0xffff58208760   384  39c04201       constant
0xffff58208764   388  00000000       constant
0xffff58208768   392  32b04259       constant
0xffff5820876c   396  00000000       constant
0xffff58208770   400  39c04519       constant
0xffff58208774   404  00000000       constant
0xffff58208778   408  58206820       constant
0xffff5820877c   412  0000ffff       constant
0xffff58208780   416  58206260       constant
0xffff58208784   420  0000ffff       constant
0xffff58208788   424  582068e0       constant
0xffff5820878c   428  0000ffff       constant
0xffff58208790   432  movz x16, #0x0
0xffff58208794   436  bl #+0x14 (addr 0xffff582087a8)
0xffff58208798   440  movz x16, #0x8
0xffff5820879c   444  bl #+0xc (addr 0xffff582087a8)
0xffff582087a0   448  movz x16, #0x10
0xffff582087a4   452  bl #+0x4 (addr 0xffff582087a8)
0xffff582087a8   456  ldr x17, pc+24 (addr 0x0000ffff582087c0)    ;; lazy deoptimization bailout 0
0xffff582087ac   460  add x17, x17, x16
0xffff582087b0   464  br x17
0xffff582087b4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582087b8   472  d63f03e0       constant
0xffff582087bc   476  d503201f       constant
0xffff582087c0   480  58006000       constant
0xffff582087c4   484  0000ffff       constant


Safepoints (size = 21)
0xffff58208740   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff5820868c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208694  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582086a4  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582086c0  embedded object  (0x39c04519 <the hole>)
0xffff58208714  code target (STUB)  (0xffff58206820)
0xffff58208738  code target (STUB)  (0xffff58206260)
0xffff58208744  code target (STUB)  (0xffff582068e0)
0xffff58208750  constant pool (size 64)
0xffff582087a8  runtime entry
0xffff582087b4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 722)
0xffff58208840     0  movz x16, #0xa00000000
0xffff58208844     4  sub csp, jssp, #0x10 (16)
0xffff58208848     8  stp fp, lr, [jssp, #-16]!
0xffff5820884c    12  mov fp, jssp
0xffff58208850    16  sub csp, jssp, #0x8 (8)
0xffff58208854    20  sub jssp, jssp, #0x8 (8)
0xffff58208858    24  stur x16, [fp, #-8]
0xffff5820885c    28  ldr x3, [fp]
0xffff58208860    32  ldur x4, [x3, #-8]
0xffff58208864    36  movz x16, #0xe00000000
0xffff58208868    40  cmp x4, x16
0xffff5820886c    44  csel x4, fp, x3, ne
0xffff58208870    48  ldr x3, [x4, #16]
0xffff58208874    52  tbnz w3, #0, #+0x128 (addr 0xffff5820899c)
0xffff58208878    56  asr x5, x3, #32
0xffff5820887c    60  movz w16, #0x257f
0xffff58208880    64  cmp w5, w16, lsl #3
0xffff58208884    68  b.hs #+0x234 (addr 0xffff58208ab8)
0xffff58208888    72  cbz w5, #+0xc (addr 0xffff58208894)
0xffff5820888c    76  mov x3, x5
0xffff58208890    80  b #+0xc (addr 0xffff5820889c)
0xffff58208894    84  movz x3, #0x4
0xffff58208898    88  movz x5, #0x0
0xffff5820889c    92  lsl x4, x3, #32
0xffff582088a0    96  lsl x5, x5, #32
0xffff582088a4   100  lsl w6, w3, #3
0xffff582088a8   104  add w6, w6, #0x10 (16)
0xffff582088ac   108  cmp w6, #0x96000 (614400)
0xffff582088b0   112  b.hs #+0x210 (addr 0xffff58208ac0)
0xffff582088b4   116  movz x7, #0x92c0
0xffff582088b8   120  movk x7, #0x16e7, lsl #16
0xffff582088bc   124  ldp x8, x0, [x7]
0xffff582088c0   128  adds x16, x8, #0x30 (48)
0xffff582088c4   132  ccmp x16, x0, #nzCv, lo
0xffff582088c8   136  b.hi #+0xfc (addr 0xffff582089c4)
0xffff582088cc   140  str x16, [x7]
0xffff582088d0   144  orr x8, x8, #0x1
0xffff582088d4   148  ldur x0, [x1, #39]
0xffff582088d8   152  ldur x0, [x0, #39]
0xffff582088dc   156  movz x16, #0x17f
0xffff582088e0   160  ldr x0, [x0, x16]
0xffff582088e4   164  stur x0, [x8, #-1]
0xffff582088e8   168  ldr x0, pc+368 (addr 0x0000ffff58208a58)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582088ec   172  stur x0, [x8, #7]
0xffff582088f0   176  ldr x0, pc+368 (addr 0x0000ffff58208a60)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582088f4   180  stur x0, [x8, #15]
0xffff582088f8   184  stur x5, [x8, #23]
0xffff582088fc   188  add x0, x8, #0x20 (32)
0xffff58208900   192  ldr x1, pc+360 (addr 0x0000ffff58208a68)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58208904   196  stur x1, [x0, #-1]
0xffff58208908   200  stur x2, [x0, #7]
0xffff5820890c   204  ldur w0, [x2, #35]
0xffff58208910   208  add w0, w0, #0x1 (1)
0xffff58208914   212  lsl x0, x0, #32
0xffff58208918   216  stur x0, [x2, #31]
0xffff5820891c   220  sxtw x6, w6
0xffff58208920   224  movz x0, #0x92c0
0xffff58208924   228  movk x0, #0x16e7, lsl #16
0xffff58208928   232  ldp x2, x16, [x0]
0xffff5820892c   236  adds x1, x2, x6
0xffff58208930   240  ccmp x1, x16, #nzCv, lo
0xffff58208934   244  b.hi #+0xd4 (addr 0xffff58208a08)
0xffff58208938   248  str x1, [x0]
0xffff5820893c   252  orr x2, x2, #0x1
0xffff58208940   256  ldr x0, pc+304 (addr 0x0000ffff58208a70)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58208944   260  stur x0, [x2, #-1]
0xffff58208948   264  stur x4, [x2, #7]
0xffff5820894c   268  mov x0, x2
0xffff58208950   272  stur x0, [x8, #15]
0xffff58208954   276  add x1, x8, #0xf (15)
0xffff58208958   280  and x0, x8, #0xfffffffffff00000
0xffff5820895c   284  ldr x0, [x0, #8]
0xffff58208960   288  tbz w0, #2, #+0xc (addr 0xffff5820896c)
0xffff58208964   292  ldr x16, pc+276 (addr 0x0000ffff58208a78)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff58208968   296  blr x16
0xffff5820896c   300  cmp w3, #0x0 (0)
0xffff58208970   304  b.le #+0x18 (addr 0xffff58208988)
0xffff58208974   308  sub w3, w3, #0x1 (1)
0xffff58208978   312  ldr x0, pc+264 (addr 0x0000ffff58208a80)    ;; object: 0x39c04519 <the hole>
0xffff5820897c   316  add x1, x2, #0xf (15)
0xffff58208980   320  str x0, [x1, w3, sxtw #3]
0xffff58208984   324  b #-0x18 (addr 0xffff5820896c)
0xffff58208988   328  mov x0, x8
0xffff5820898c   332  mov jssp, fp
0xffff58208990   336  ldp fp, lr, [jssp], #16
0xffff58208994   340  add jssp, jssp, #0x10 (16)
0xffff58208998   344  ret
0xffff5820899c   348  ldur x16, [x3, #-1]
0xffff582089a0   352  ldr x17, [x26, #120]
0xffff582089a4   356  cmp x16, x17
0xffff582089a8   360  b.ne #+0x120 (addr 0xffff58208ac8)
0xffff582089ac   364  ldur d29, [x3, #7]
0xffff582089b0   368  fcvtzs w5, d29
0xffff582089b4   372  scvtf d0, w5
0xffff582089b8   376  fcmp d29, d0
0xffff582089bc   380  b.ne #+0x10c (addr 0xffff58208ac8)
0xffff582089c0   384  b #-0x144 (addr 0xffff5820887c)
0xffff582089c4   388  movz x8, #0x0
0xffff582089c8   392  mov x16, lr
0xffff582089cc   396  ldr x17, pc+188 (addr 0x0000ffff58208a88)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582089d0   400  blr x17
0xffff582089d4   404  movz x0, #0x3000000000
0xffff582089d8   408  movz x10, #0x0
0xffff582089dc   412  sub csp, jssp, #0x10 (16)
0xffff582089e0   416  stp x10, x0, [jssp, #-16]!
0xffff582089e4   420  movz x0, #0x2
0xffff582089e8   424  movz x1, #0x5b88
0xffff582089ec   428  movk x1, #0xe2, lsl #16
0xffff582089f0   432  ldr x16, pc+160 (addr 0x0000ffff58208a90)    ;; code: STUB, CEntryStub, minor: 5
0xffff582089f4   436  blr x16
0xffff582089f8   440  str x0, [jssp, #64]
0xffff582089fc   444  ldr x16, pc+156 (addr 0x0000ffff58208a98)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208a00   448  blr x16
0xffff58208a04   452  b #-0x130 (addr 0xffff582088d4)
0xffff58208a08   456  movz x2, #0x0
0xffff58208a0c   460  mov x16, lr
0xffff58208a10   464  ldr x17, pc+144 (addr 0x0000ffff58208aa0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208a14   468  blr x17
0xffff58208a18   472  lsl x0, x6, #32
0xffff58208a1c   476  movz x10, #0x0
0xffff58208a20   480  sub csp, jssp, #0x10 (16)
0xffff58208a24   484  stp x10, x0, [jssp, #-16]!
0xffff58208a28   488  movz x0, #0x2
0xffff58208a2c   492  movz x1, #0x5b88
0xffff58208a30   496  movk x1, #0xe2, lsl #16
0xffff58208a34   500  ldr x16, pc+116 (addr 0x0000ffff58208aa8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58208a38   504  blr x16
0xffff58208a3c   508  str x0, [jssp, #16]
0xffff58208a40   512  ldr x16, pc+112 (addr 0x0000ffff58208ab0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208a44   516  blr x16
0xffff58208a48   520  b #-0x108 (addr 0xffff58208940)
0xffff58208a4c   524  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff58208a50   528  d63f03e0       constant
0xffff58208a54   532  d503201f       constant
0xffff58208a58   536  39c04201       constant
0xffff58208a5c   540  00000000       constant
0xffff58208a60   544  39c04201       constant
0xffff58208a64   548  00000000       constant
0xffff58208a68   552  32b05d81       constant
0xffff58208a6c   556  00000000       constant
0xffff58208a70   560  32b04259       constant
0xffff58208a74   564  00000000       constant
0xffff58208a78   568  58207ac0       constant
0xffff58208a7c   572  0000ffff       constant
0xffff58208a80   576  39c04519       constant
0xffff58208a84   580  00000000       constant
0xffff58208a88   584  58206820       constant
0xffff58208a8c   588  0000ffff       constant
0xffff58208a90   592  58206260       constant
0xffff58208a94   596  0000ffff       constant
0xffff58208a98   600  582068e0       constant
0xffff58208a9c   604  0000ffff       constant
0xffff58208aa0   608  58206820       constant
0xffff58208aa4   612  0000ffff       constant
0xffff58208aa8   616  58206260       constant
0xffff58208aac   620  0000ffff       constant
0xffff58208ab0   624  582068e0       constant
0xffff58208ab4   628  0000ffff       constant
0xffff58208ab8   632  movz x16, #0x0
0xffff58208abc   636  bl #+0x14 (addr 0xffff58208ad0)
0xffff58208ac0   640  movz x16, #0x8
0xffff58208ac4   644  bl #+0xc (addr 0xffff58208ad0)
0xffff58208ac8   648  movz x16, #0x10
0xffff58208acc   652  bl #+0x4 (addr 0xffff58208ad0)
0xffff58208ad0   656  ldr x17, pc+24 (addr 0x0000ffff58208ae8)    ;; lazy deoptimization bailout 0
0xffff58208ad4   660  add x17, x17, x16
0xffff58208ad8   664  br x17
0xffff58208adc   668  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58208ae0   672  d63f03e0       constant
0xffff58208ae4   676  d503201f       constant
0xffff58208ae8   680  58006000       constant
0xffff58208aec   684  0000ffff       constant


Safepoints (size = 34)
0xffff582089f8   440  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff58208a3c   508  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff582088e8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582088f0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208900  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58208940  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58208964  code target (STUB)  (0xffff58207ac0)
0xffff58208978  embedded object  (0x39c04519 <the hole>)
0xffff582089cc  code target (STUB)  (0xffff58206820)
0xffff582089f0  code target (STUB)  (0xffff58206260)
0xffff582089fc  code target (STUB)  (0xffff582068e0)
0xffff58208a10  code target (STUB)  (0xffff58206820)
0xffff58208a34  code target (STUB)  (0xffff58206260)
0xffff58208a40  code target (STUB)  (0xffff582068e0)
0xffff58208a4c  constant pool (size 108)
0xffff58208ad0  runtime entry
0xffff58208adc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 722)
0xffff58208840     0  movz x16, #0xa00000000
0xffff58208844     4  sub csp, jssp, #0x10 (16)
0xffff58208848     8  stp fp, lr, [jssp, #-16]!
0xffff5820884c    12  mov fp, jssp
0xffff58208850    16  sub csp, jssp, #0x8 (8)
0xffff58208854    20  sub jssp, jssp, #0x8 (8)
0xffff58208858    24  stur x16, [fp, #-8]
0xffff5820885c    28  ldr x3, [fp]
0xffff58208860    32  ldur x4, [x3, #-8]
0xffff58208864    36  movz x16, #0xe00000000
0xffff58208868    40  cmp x4, x16
0xffff5820886c    44  csel x4, fp, x3, ne
0xffff58208870    48  ldr x3, [x4, #16]
0xffff58208874    52  tbnz w3, #0, #+0x128 (addr 0xffff5820899c)
0xffff58208878    56  asr x5, x3, #32
0xffff5820887c    60  movz w16, #0x257f
0xffff58208880    64  cmp w5, w16, lsl #3
0xffff58208884    68  b.hs #+0x234 (addr 0xffff58208ab8)
0xffff58208888    72  cbz w5, #+0xc (addr 0xffff58208894)
0xffff5820888c    76  mov x3, x5
0xffff58208890    80  b #+0xc (addr 0xffff5820889c)
0xffff58208894    84  movz x3, #0x4
0xffff58208898    88  movz x5, #0x0
0xffff5820889c    92  lsl x4, x3, #32
0xffff582088a0    96  lsl x5, x5, #32
0xffff582088a4   100  lsl w6, w3, #3
0xffff582088a8   104  add w6, w6, #0x10 (16)
0xffff582088ac   108  cmp w6, #0x96000 (614400)
0xffff582088b0   112  b.hs #+0x210 (addr 0xffff58208ac0)
0xffff582088b4   116  movz x7, #0x92c0
0xffff582088b8   120  movk x7, #0x16e7, lsl #16
0xffff582088bc   124  ldp x8, x0, [x7]
0xffff582088c0   128  adds x16, x8, #0x30 (48)
0xffff582088c4   132  ccmp x16, x0, #nzCv, lo
0xffff582088c8   136  b.hi #+0xfc (addr 0xffff582089c4)
0xffff582088cc   140  str x16, [x7]
0xffff582088d0   144  orr x8, x8, #0x1
0xffff582088d4   148  ldur x0, [x1, #39]
0xffff582088d8   152  ldur x0, [x0, #39]
0xffff582088dc   156  movz x16, #0x17f
0xffff582088e0   160  ldr x0, [x0, x16]
0xffff582088e4   164  stur x0, [x8, #-1]
0xffff582088e8   168  ldr x0, pc+368 (addr 0x0000ffff58208a58)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582088ec   172  stur x0, [x8, #7]
0xffff582088f0   176  ldr x0, pc+368 (addr 0x0000ffff58208a60)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582088f4   180  stur x0, [x8, #15]
0xffff582088f8   184  stur x5, [x8, #23]
0xffff582088fc   188  add x0, x8, #0x20 (32)
0xffff58208900   192  ldr x1, pc+360 (addr 0x0000ffff58208a68)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58208904   196  stur x1, [x0, #-1]
0xffff58208908   200  stur x2, [x0, #7]
0xffff5820890c   204  ldur w0, [x2, #35]
0xffff58208910   208  add w0, w0, #0x1 (1)
0xffff58208914   212  lsl x0, x0, #32
0xffff58208918   216  stur x0, [x2, #31]
0xffff5820891c   220  sxtw x6, w6
0xffff58208920   224  movz x0, #0x92c0
0xffff58208924   228  movk x0, #0x16e7, lsl #16
0xffff58208928   232  ldp x2, x16, [x0]
0xffff5820892c   236  adds x1, x2, x6
0xffff58208930   240  ccmp x1, x16, #nzCv, lo
0xffff58208934   244  b.hi #+0xd4 (addr 0xffff58208a08)
0xffff58208938   248  str x1, [x0]
0xffff5820893c   252  orr x2, x2, #0x1
0xffff58208940   256  ldr x0, pc+304 (addr 0x0000ffff58208a70)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58208944   260  stur x0, [x2, #-1]
0xffff58208948   264  stur x4, [x2, #7]
0xffff5820894c   268  mov x0, x2
0xffff58208950   272  stur x0, [x8, #15]
0xffff58208954   276  add x1, x8, #0xf (15)
0xffff58208958   280  and x0, x8, #0xfffffffffff00000
0xffff5820895c   284  ldr x0, [x0, #8]
0xffff58208960   288  tbz w0, #2, #+0xc (addr 0xffff5820896c)
0xffff58208964   292  ldr x16, pc+276 (addr 0x0000ffff58208a78)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff58208968   296  blr x16
0xffff5820896c   300  cmp w3, #0x0 (0)
0xffff58208970   304  b.le #+0x18 (addr 0xffff58208988)
0xffff58208974   308  sub w3, w3, #0x1 (1)
0xffff58208978   312  ldr x0, pc+264 (addr 0x0000ffff58208a80)    ;; object: 0x39c04519 <the hole>
0xffff5820897c   316  add x1, x2, #0xf (15)
0xffff58208980   320  str x0, [x1, w3, sxtw #3]
0xffff58208984   324  b #-0x18 (addr 0xffff5820896c)
0xffff58208988   328  mov x0, x8
0xffff5820898c   332  mov jssp, fp
0xffff58208990   336  ldp fp, lr, [jssp], #16
0xffff58208994   340  add jssp, jssp, #0x10 (16)
0xffff58208998   344  ret
0xffff5820899c   348  ldur x16, [x3, #-1]
0xffff582089a0   352  ldr x17, [x26, #120]
0xffff582089a4   356  cmp x16, x17
0xffff582089a8   360  b.ne #+0x120 (addr 0xffff58208ac8)
0xffff582089ac   364  ldur d29, [x3, #7]
0xffff582089b0   368  fcvtzs w5, d29
0xffff582089b4   372  scvtf d0, w5
0xffff582089b8   376  fcmp d29, d0
0xffff582089bc   380  b.ne #+0x10c (addr 0xffff58208ac8)
0xffff582089c0   384  b #-0x144 (addr 0xffff5820887c)
0xffff582089c4   388  movz x8, #0x0
0xffff582089c8   392  mov x16, lr
0xffff582089cc   396  ldr x17, pc+188 (addr 0x0000ffff58208a88)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582089d0   400  blr x17
0xffff582089d4   404  movz x0, #0x3000000000
0xffff582089d8   408  movz x10, #0x0
0xffff582089dc   412  sub csp, jssp, #0x10 (16)
0xffff582089e0   416  stp x10, x0, [jssp, #-16]!
0xffff582089e4   420  movz x0, #0x2
0xffff582089e8   424  movz x1, #0x5b88
0xffff582089ec   428  movk x1, #0xe2, lsl #16
0xffff582089f0   432  ldr x16, pc+160 (addr 0x0000ffff58208a90)    ;; code: STUB, CEntryStub, minor: 5
0xffff582089f4   436  blr x16
0xffff582089f8   440  str x0, [jssp, #64]
0xffff582089fc   444  ldr x16, pc+156 (addr 0x0000ffff58208a98)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208a00   448  blr x16
0xffff58208a04   452  b #-0x130 (addr 0xffff582088d4)
0xffff58208a08   456  movz x2, #0x0
0xffff58208a0c   460  mov x16, lr
0xffff58208a10   464  ldr x17, pc+144 (addr 0x0000ffff58208aa0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208a14   468  blr x17
0xffff58208a18   472  lsl x0, x6, #32
0xffff58208a1c   476  movz x10, #0x0
0xffff58208a20   480  sub csp, jssp, #0x10 (16)
0xffff58208a24   484  stp x10, x0, [jssp, #-16]!
0xffff58208a28   488  movz x0, #0x2
0xffff58208a2c   492  movz x1, #0x5b88
0xffff58208a30   496  movk x1, #0xe2, lsl #16
0xffff58208a34   500  ldr x16, pc+116 (addr 0x0000ffff58208aa8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58208a38   504  blr x16
0xffff58208a3c   508  str x0, [jssp, #16]
0xffff58208a40   512  ldr x16, pc+112 (addr 0x0000ffff58208ab0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208a44   516  blr x16
0xffff58208a48   520  b #-0x108 (addr 0xffff58208940)
0xffff58208a4c   524  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff58208a50   528  d63f03e0       constant
0xffff58208a54   532  d503201f       constant
0xffff58208a58   536  39c04201       constant
0xffff58208a5c   540  00000000       constant
0xffff58208a60   544  39c04201       constant
0xffff58208a64   548  00000000       constant
0xffff58208a68   552  32b05d81       constant
0xffff58208a6c   556  00000000       constant
0xffff58208a70   560  32b04259       constant
0xffff58208a74   564  00000000       constant
0xffff58208a78   568  58207ac0       constant
0xffff58208a7c   572  0000ffff       constant
0xffff58208a80   576  39c04519       constant
0xffff58208a84   580  00000000       constant
0xffff58208a88   584  58206820       constant
0xffff58208a8c   588  0000ffff       constant
0xffff58208a90   592  58206260       constant
0xffff58208a94   596  0000ffff       constant
0xffff58208a98   600  582068e0       constant
0xffff58208a9c   604  0000ffff       constant
0xffff58208aa0   608  58206820       constant
0xffff58208aa4   612  0000ffff       constant
0xffff58208aa8   616  58206260       constant
0xffff58208aac   620  0000ffff       constant
0xffff58208ab0   624  582068e0       constant
0xffff58208ab4   628  0000ffff       constant
0xffff58208ab8   632  movz x16, #0x0
0xffff58208abc   636  bl #+0x14 (addr 0xffff58208ad0)
0xffff58208ac0   640  movz x16, #0x8
0xffff58208ac4   644  bl #+0xc (addr 0xffff58208ad0)
0xffff58208ac8   648  movz x16, #0x10
0xffff58208acc   652  bl #+0x4 (addr 0xffff58208ad0)
0xffff58208ad0   656  ldr x17, pc+24 (addr 0x0000ffff58208ae8)    ;; lazy deoptimization bailout 0
0xffff58208ad4   660  add x17, x17, x16
0xffff58208ad8   664  br x17
0xffff58208adc   668  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58208ae0   672  d63f03e0       constant
0xffff58208ae4   676  d503201f       constant
0xffff58208ae8   680  58006000       constant
0xffff58208aec   684  0000ffff       constant


Safepoints (size = 34)
0xffff582089f8   440  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff58208a3c   508  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff582088e8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582088f0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208900  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58208940  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58208964  code target (STUB)  (0xffff58207ac0)
0xffff58208978  embedded object  (0x39c04519 <the hole>)
0xffff582089cc  code target (STUB)  (0xffff58206820)
0xffff582089f0  code target (STUB)  (0xffff58206260)
0xffff582089fc  code target (STUB)  (0xffff582068e0)
0xffff58208a10  code target (STUB)  (0xffff58206820)
0xffff58208a34  code target (STUB)  (0xffff58206260)
0xffff58208a40  code target (STUB)  (0xffff582068e0)
0xffff58208a4c  constant pool (size 108)
0xffff58208ad0  runtime entry
0xffff58208adc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff58208b80     0  movz x16, #0xa00000000
0xffff58208b84     4  sub csp, jssp, #0x10 (16)
0xffff58208b88     8  stp fp, lr, [jssp, #-16]!
0xffff58208b8c    12  mov fp, jssp
0xffff58208b90    16  sub csp, jssp, #0x8 (8)
0xffff58208b94    20  sub jssp, jssp, #0x8 (8)
0xffff58208b98    24  stur x16, [fp, #-8]
0xffff58208b9c    28  ldr x3, [fp]
0xffff58208ba0    32  ldur x4, [x3, #-8]
0xffff58208ba4    36  movz x16, #0xe00000000
0xffff58208ba8    40  cmp x4, x16
0xffff58208bac    44  csel x4, fp, x3, ne
0xffff58208bb0    48  ldr x3, [x4, #16]
0xffff58208bb4    52  tbnz w3, #0, #+0xdc (addr 0xffff58208c90)
0xffff58208bb8    56  asr x5, x3, #32
0xffff58208bbc    60  movz w16, #0x257f
0xffff58208bc0    64  cmp w5, w16, lsl #3
0xffff58208bc4    68  b.hs #+0x17c (addr 0xffff58208d40)
0xffff58208bc8    72  cbz w5, #+0xc (addr 0xffff58208bd4)
0xffff58208bcc    76  mov x3, x5
0xffff58208bd0    80  b #+0xc (addr 0xffff58208bdc)
0xffff58208bd4    84  movz x3, #0x4
0xffff58208bd8    88  movz x5, #0x0
0xffff58208bdc    92  lsl x4, x3, #32
0xffff58208be0    96  lsl x5, x5, #32
0xffff58208be4   100  lsl w6, w3, #3
0xffff58208be8   104  add w6, w6, #0x10 (16)
0xffff58208bec   108  cmp w6, #0x96000 (614400)
0xffff58208bf0   112  b.hs #+0x158 (addr 0xffff58208d48)
0xffff58208bf4   116  add w0, w6, #0x20 (32)
0xffff58208bf8   120  sxtw x0, w0
0xffff58208bfc   124  movz x2, #0x92c0
0xffff58208c00   128  movk x2, #0x16e7, lsl #16
0xffff58208c04   132  ldp x7, x16, [x2]
0xffff58208c08   136  adds x6, x7, x0
0xffff58208c0c   140  ccmp x6, x16, #nzCv, lo
0xffff58208c10   144  b.hi #+0xa8 (addr 0xffff58208cb8)
0xffff58208c14   148  str x6, [x2]
0xffff58208c18   152  orr x7, x7, #0x1
0xffff58208c1c   156  movz w0, #0x0
0xffff58208c20   160  stur x0, [x7, #31]
0xffff58208c24   164  ldur x0, [x1, #39]
0xffff58208c28   168  ldur x0, [x0, #39]
0xffff58208c2c   172  movz x16, #0x17f
0xffff58208c30   176  ldr x0, [x0, x16]
0xffff58208c34   180  stur x0, [x7, #-1]
0xffff58208c38   184  ldr x0, pc+208 (addr 0x0000ffff58208d08)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208c3c   188  stur x0, [x7, #7]
0xffff58208c40   192  ldr x0, pc+208 (addr 0x0000ffff58208d10)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208c44   196  stur x0, [x7, #15]
0xffff58208c48   200  stur x5, [x7, #23]
0xffff58208c4c   204  add x0, x7, #0x20 (32)
0xffff58208c50   208  ldr x1, pc+200 (addr 0x0000ffff58208d18)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58208c54   212  stur x1, [x0, #-1]
0xffff58208c58   216  stur x4, [x0, #7]
0xffff58208c5c   220  stur x0, [x7, #15]
0xffff58208c60   224  cmp w3, #0x0 (0)
0xffff58208c64   228  b.le #+0x18 (addr 0xffff58208c7c)
0xffff58208c68   232  sub w3, w3, #0x1 (1)
0xffff58208c6c   236  ldr x1, pc+180 (addr 0x0000ffff58208d20)    ;; object: 0x39c04519 <the hole>
0xffff58208c70   240  add x2, x0, #0xf (15)
0xffff58208c74   244  str x1, [x2, w3, sxtw #3]
0xffff58208c78   248  b #-0x18 (addr 0xffff58208c60)
0xffff58208c7c   252  mov x0, x7
0xffff58208c80   256  mov jssp, fp
0xffff58208c84   260  ldp fp, lr, [jssp], #16
0xffff58208c88   264  add jssp, jssp, #0x10 (16)
0xffff58208c8c   268  ret
0xffff58208c90   272  ldur x16, [x3, #-1]
0xffff58208c94   276  ldr x17, [x26, #120]
0xffff58208c98   280  cmp x16, x17
0xffff58208c9c   284  b.ne #+0xb4 (addr 0xffff58208d50)
0xffff58208ca0   288  ldur d29, [x3, #7]
0xffff58208ca4   292  fcvtzs w5, d29
0xffff58208ca8   296  scvtf d0, w5
0xffff58208cac   300  fcmp d29, d0
0xffff58208cb0   304  b.ne #+0xa0 (addr 0xffff58208d50)
0xffff58208cb4   308  b #-0xf8 (addr 0xffff58208bbc)
0xffff58208cb8   312  movz x7, #0x0
0xffff58208cbc   316  mov x16, lr
0xffff58208cc0   320  ldr x17, pc+104 (addr 0x0000ffff58208d28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208cc4   324  blr x17
0xffff58208cc8   328  lsl x0, x0, #32
0xffff58208ccc   332  movz x10, #0x0
0xffff58208cd0   336  sub csp, jssp, #0x10 (16)
0xffff58208cd4   340  stp x10, x0, [jssp, #-16]!
0xffff58208cd8   344  movz x0, #0x2
0xffff58208cdc   348  movz x1, #0x5b88
0xffff58208ce0   352  movk x1, #0xe2, lsl #16
0xffff58208ce4   356  ldr x16, pc+76 (addr 0x0000ffff58208d30)    ;; code: STUB, CEntryStub, minor: 5
0xffff58208ce8   360  blr x16
0xffff58208cec   364  str x0, [jssp, #56]
0xffff58208cf0   368  ldr x16, pc+72 (addr 0x0000ffff58208d38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208cf4   372  blr x16
0xffff58208cf8   376  b #-0xdc (addr 0xffff58208c1c)
0xffff58208cfc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58208d00   384  d63f03e0       constant
0xffff58208d04   388  d503201f       constant
0xffff58208d08   392  39c04201       constant
0xffff58208d0c   396  00000000       constant
0xffff58208d10   400  39c04201       constant
0xffff58208d14   404  00000000       constant
0xffff58208d18   408  32b04259       constant
0xffff58208d1c   412  00000000       constant
0xffff58208d20   416  39c04519       constant
0xffff58208d24   420  00000000       constant
0xffff58208d28   424  58206820       constant
0xffff58208d2c   428  0000ffff       constant
0xffff58208d30   432  58206260       constant
0xffff58208d34   436  0000ffff       constant
0xffff58208d38   440  582068e0       constant
0xffff58208d3c   444  0000ffff       constant
0xffff58208d40   448  movz x16, #0x0
0xffff58208d44   452  bl #+0x14 (addr 0xffff58208d58)
0xffff58208d48   456  movz x16, #0x8
0xffff58208d4c   460  bl #+0xc (addr 0xffff58208d58)
0xffff58208d50   464  movz x16, #0x10
0xffff58208d54   468  bl #+0x4 (addr 0xffff58208d58)
0xffff58208d58   472  ldr x17, pc+24 (addr 0x0000ffff58208d70)    ;; lazy deoptimization bailout 0
0xffff58208d5c   476  add x17, x17, x16
0xffff58208d60   480  br x17
0xffff58208d64   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58208d68   488  d63f03e0       constant
0xffff58208d6c   492  d503201f       constant
0xffff58208d70   496  58006000       constant
0xffff58208d74   500  0000ffff       constant


Safepoints (size = 21)
0xffff58208cec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff58208c38  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208c40  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208c50  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58208c6c  embedded object  (0x39c04519 <the hole>)
0xffff58208cc0  code target (STUB)  (0xffff58206820)
0xffff58208ce4  code target (STUB)  (0xffff58206260)
0xffff58208cf0  code target (STUB)  (0xffff582068e0)
0xffff58208cfc  constant pool (size 68)
0xffff58208d58  runtime entry
0xffff58208d64  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 525)
0xffff58208b80     0  movz x16, #0xa00000000
0xffff58208b84     4  sub csp, jssp, #0x10 (16)
0xffff58208b88     8  stp fp, lr, [jssp, #-16]!
0xffff58208b8c    12  mov fp, jssp
0xffff58208b90    16  sub csp, jssp, #0x8 (8)
0xffff58208b94    20  sub jssp, jssp, #0x8 (8)
0xffff58208b98    24  stur x16, [fp, #-8]
0xffff58208b9c    28  ldr x3, [fp]
0xffff58208ba0    32  ldur x4, [x3, #-8]
0xffff58208ba4    36  movz x16, #0xe00000000
0xffff58208ba8    40  cmp x4, x16
0xffff58208bac    44  csel x4, fp, x3, ne
0xffff58208bb0    48  ldr x3, [x4, #16]
0xffff58208bb4    52  tbnz w3, #0, #+0xdc (addr 0xffff58208c90)
0xffff58208bb8    56  asr x5, x3, #32
0xffff58208bbc    60  movz w16, #0x257f
0xffff58208bc0    64  cmp w5, w16, lsl #3
0xffff58208bc4    68  b.hs #+0x17c (addr 0xffff58208d40)
0xffff58208bc8    72  cbz w5, #+0xc (addr 0xffff58208bd4)
0xffff58208bcc    76  mov x3, x5
0xffff58208bd0    80  b #+0xc (addr 0xffff58208bdc)
0xffff58208bd4    84  movz x3, #0x4
0xffff58208bd8    88  movz x5, #0x0
0xffff58208bdc    92  lsl x4, x3, #32
0xffff58208be0    96  lsl x5, x5, #32
0xffff58208be4   100  lsl w6, w3, #3
0xffff58208be8   104  add w6, w6, #0x10 (16)
0xffff58208bec   108  cmp w6, #0x96000 (614400)
0xffff58208bf0   112  b.hs #+0x158 (addr 0xffff58208d48)
0xffff58208bf4   116  add w0, w6, #0x20 (32)
0xffff58208bf8   120  sxtw x0, w0
0xffff58208bfc   124  movz x2, #0x92c0
0xffff58208c00   128  movk x2, #0x16e7, lsl #16
0xffff58208c04   132  ldp x7, x16, [x2]
0xffff58208c08   136  adds x6, x7, x0
0xffff58208c0c   140  ccmp x6, x16, #nzCv, lo
0xffff58208c10   144  b.hi #+0xa8 (addr 0xffff58208cb8)
0xffff58208c14   148  str x6, [x2]
0xffff58208c18   152  orr x7, x7, #0x1
0xffff58208c1c   156  movz w0, #0x0
0xffff58208c20   160  stur x0, [x7, #31]
0xffff58208c24   164  ldur x0, [x1, #39]
0xffff58208c28   168  ldur x0, [x0, #39]
0xffff58208c2c   172  movz x16, #0x17f
0xffff58208c30   176  ldr x0, [x0, x16]
0xffff58208c34   180  stur x0, [x7, #-1]
0xffff58208c38   184  ldr x0, pc+208 (addr 0x0000ffff58208d08)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208c3c   188  stur x0, [x7, #7]
0xffff58208c40   192  ldr x0, pc+208 (addr 0x0000ffff58208d10)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208c44   196  stur x0, [x7, #15]
0xffff58208c48   200  stur x5, [x7, #23]
0xffff58208c4c   204  add x0, x7, #0x20 (32)
0xffff58208c50   208  ldr x1, pc+200 (addr 0x0000ffff58208d18)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58208c54   212  stur x1, [x0, #-1]
0xffff58208c58   216  stur x4, [x0, #7]
0xffff58208c5c   220  stur x0, [x7, #15]
0xffff58208c60   224  cmp w3, #0x0 (0)
0xffff58208c64   228  b.le #+0x18 (addr 0xffff58208c7c)
0xffff58208c68   232  sub w3, w3, #0x1 (1)
0xffff58208c6c   236  ldr x1, pc+180 (addr 0x0000ffff58208d20)    ;; object: 0x39c04519 <the hole>
0xffff58208c70   240  add x2, x0, #0xf (15)
0xffff58208c74   244  str x1, [x2, w3, sxtw #3]
0xffff58208c78   248  b #-0x18 (addr 0xffff58208c60)
0xffff58208c7c   252  mov x0, x7
0xffff58208c80   256  mov jssp, fp
0xffff58208c84   260  ldp fp, lr, [jssp], #16
0xffff58208c88   264  add jssp, jssp, #0x10 (16)
0xffff58208c8c   268  ret
0xffff58208c90   272  ldur x16, [x3, #-1]
0xffff58208c94   276  ldr x17, [x26, #120]
0xffff58208c98   280  cmp x16, x17
0xffff58208c9c   284  b.ne #+0xb4 (addr 0xffff58208d50)
0xffff58208ca0   288  ldur d29, [x3, #7]
0xffff58208ca4   292  fcvtzs w5, d29
0xffff58208ca8   296  scvtf d0, w5
0xffff58208cac   300  fcmp d29, d0
0xffff58208cb0   304  b.ne #+0xa0 (addr 0xffff58208d50)
0xffff58208cb4   308  b #-0xf8 (addr 0xffff58208bbc)
0xffff58208cb8   312  movz x7, #0x0
0xffff58208cbc   316  mov x16, lr
0xffff58208cc0   320  ldr x17, pc+104 (addr 0x0000ffff58208d28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208cc4   324  blr x17
0xffff58208cc8   328  lsl x0, x0, #32
0xffff58208ccc   332  movz x10, #0x0
0xffff58208cd0   336  sub csp, jssp, #0x10 (16)
0xffff58208cd4   340  stp x10, x0, [jssp, #-16]!
0xffff58208cd8   344  movz x0, #0x2
0xffff58208cdc   348  movz x1, #0x5b88
0xffff58208ce0   352  movk x1, #0xe2, lsl #16
0xffff58208ce4   356  ldr x16, pc+76 (addr 0x0000ffff58208d30)    ;; code: STUB, CEntryStub, minor: 5
0xffff58208ce8   360  blr x16
0xffff58208cec   364  str x0, [jssp, #56]
0xffff58208cf0   368  ldr x16, pc+72 (addr 0x0000ffff58208d38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208cf4   372  blr x16
0xffff58208cf8   376  b #-0xdc (addr 0xffff58208c1c)
0xffff58208cfc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58208d00   384  d63f03e0       constant
0xffff58208d04   388  d503201f       constant
0xffff58208d08   392  39c04201       constant
0xffff58208d0c   396  00000000       constant
0xffff58208d10   400  39c04201       constant
0xffff58208d14   404  00000000       constant
0xffff58208d18   408  32b04259       constant
0xffff58208d1c   412  00000000       constant
0xffff58208d20   416  39c04519       constant
0xffff58208d24   420  00000000       constant
0xffff58208d28   424  58206820       constant
0xffff58208d2c   428  0000ffff       constant
0xffff58208d30   432  58206260       constant
0xffff58208d34   436  0000ffff       constant
0xffff58208d38   440  582068e0       constant
0xffff58208d3c   444  0000ffff       constant
0xffff58208d40   448  movz x16, #0x0
0xffff58208d44   452  bl #+0x14 (addr 0xffff58208d58)
0xffff58208d48   456  movz x16, #0x8
0xffff58208d4c   460  bl #+0xc (addr 0xffff58208d58)
0xffff58208d50   464  movz x16, #0x10
0xffff58208d54   468  bl #+0x4 (addr 0xffff58208d58)
0xffff58208d58   472  ldr x17, pc+24 (addr 0x0000ffff58208d70)    ;; lazy deoptimization bailout 0
0xffff58208d5c   476  add x17, x17, x16
0xffff58208d60   480  br x17
0xffff58208d64   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58208d68   488  d63f03e0       constant
0xffff58208d6c   492  d503201f       constant
0xffff58208d70   496  58006000       constant
0xffff58208d74   500  0000ffff       constant


Safepoints (size = 21)
0xffff58208cec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff58208c38  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208c40  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208c50  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58208c6c  embedded object  (0x39c04519 <the hole>)
0xffff58208cc0  code target (STUB)  (0xffff58206820)
0xffff58208ce4  code target (STUB)  (0xffff58206260)
0xffff58208cf0  code target (STUB)  (0xffff582068e0)
0xffff58208cfc  constant pool (size 68)
0xffff58208d58  runtime entry
0xffff58208d64  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff58208e00     0  movz x16, #0xa00000000
0xffff58208e04     4  sub csp, jssp, #0x10 (16)
0xffff58208e08     8  stp fp, lr, [jssp, #-16]!
0xffff58208e0c    12  mov fp, jssp
0xffff58208e10    16  sub csp, jssp, #0x8 (8)
0xffff58208e14    20  sub jssp, jssp, #0x8 (8)
0xffff58208e18    24  stur x16, [fp, #-8]
0xffff58208e1c    28  ldr x3, [fp]
0xffff58208e20    32  ldur x4, [x3, #-8]
0xffff58208e24    36  movz x16, #0xe00000000
0xffff58208e28    40  cmp x4, x16
0xffff58208e2c    44  csel x4, fp, x3, ne
0xffff58208e30    48  ldr x3, [x4, #16]
0xffff58208e34    52  tbnz w3, #0, #+0xdc (addr 0xffff58208f10)
0xffff58208e38    56  asr x5, x3, #32
0xffff58208e3c    60  movz w16, #0x257f
0xffff58208e40    64  cmp w5, w16, lsl #3
0xffff58208e44    68  b.hs #+0x17c (addr 0xffff58208fc0)
0xffff58208e48    72  cbz w5, #+0xc (addr 0xffff58208e54)
0xffff58208e4c    76  mov x3, x5
0xffff58208e50    80  b #+0xc (addr 0xffff58208e5c)
0xffff58208e54    84  movz x3, #0x4
0xffff58208e58    88  movz x5, #0x0
0xffff58208e5c    92  lsl x4, x3, #32
0xffff58208e60    96  lsl x5, x5, #32
0xffff58208e64   100  lsl w6, w3, #3
0xffff58208e68   104  add w6, w6, #0x10 (16)
0xffff58208e6c   108  cmp w6, #0x96000 (614400)
0xffff58208e70   112  b.hs #+0x158 (addr 0xffff58208fc8)
0xffff58208e74   116  add w0, w6, #0x20 (32)
0xffff58208e78   120  sxtw x0, w0
0xffff58208e7c   124  movz x2, #0x92c0
0xffff58208e80   128  movk x2, #0x16e7, lsl #16
0xffff58208e84   132  ldp x7, x16, [x2]
0xffff58208e88   136  adds x6, x7, x0
0xffff58208e8c   140  ccmp x6, x16, #nzCv, lo
0xffff58208e90   144  b.hi #+0xa8 (addr 0xffff58208f38)
0xffff58208e94   148  str x6, [x2]
0xffff58208e98   152  orr x7, x7, #0x1
0xffff58208e9c   156  movz w0, #0x0
0xffff58208ea0   160  stur x0, [x7, #31]
0xffff58208ea4   164  ldur x0, [x1, #39]
0xffff58208ea8   168  ldur x0, [x0, #39]
0xffff58208eac   172  movz x16, #0x197
0xffff58208eb0   176  ldr x0, [x0, x16]
0xffff58208eb4   180  stur x0, [x7, #-1]
0xffff58208eb8   184  ldr x0, pc+216 (addr 0x0000ffff58208f90)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208ebc   188  stur x0, [x7, #7]
0xffff58208ec0   192  ldr x0, pc+216 (addr 0x0000ffff58208f98)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208ec4   196  stur x0, [x7, #15]
0xffff58208ec8   200  stur x5, [x7, #23]
0xffff58208ecc   204  add x0, x7, #0x20 (32)
0xffff58208ed0   208  ldr x1, pc+208 (addr 0x0000ffff58208fa0)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58208ed4   212  stur x1, [x0, #-1]
0xffff58208ed8   216  stur x4, [x0, #7]
0xffff58208edc   220  stur x0, [x7, #15]
0xffff58208ee0   224  ldr d0, pc+168 (addr 0x0000ffff58208f88)
0xffff58208ee4   228  cmp w3, #0x0 (0)
0xffff58208ee8   232  b.le #+0x14 (addr 0xffff58208efc)
0xffff58208eec   236  sub w3, w3, #0x1 (1)
0xffff58208ef0   240  add x1, x0, #0xf (15)
0xffff58208ef4   244  str d0, [x1, w3, sxtw #3]
0xffff58208ef8   248  b #-0x14 (addr 0xffff58208ee4)
0xffff58208efc   252  mov x0, x7
0xffff58208f00   256  mov jssp, fp
0xffff58208f04   260  ldp fp, lr, [jssp], #16
0xffff58208f08   264  add jssp, jssp, #0x10 (16)
0xffff58208f0c   268  ret
0xffff58208f10   272  ldur x16, [x3, #-1]
0xffff58208f14   276  ldr x17, [x26, #120]
0xffff58208f18   280  cmp x16, x17
0xffff58208f1c   284  b.ne #+0xb4 (addr 0xffff58208fd0)
0xffff58208f20   288  ldur d29, [x3, #7]
0xffff58208f24   292  fcvtzs w5, d29
0xffff58208f28   296  scvtf d0, w5
0xffff58208f2c   300  fcmp d29, d0
0xffff58208f30   304  b.ne #+0xa0 (addr 0xffff58208fd0)
0xffff58208f34   308  b #-0xf8 (addr 0xffff58208e3c)
0xffff58208f38   312  movz x7, #0x0
0xffff58208f3c   316  mov x16, lr
0xffff58208f40   320  ldr x17, pc+104 (addr 0x0000ffff58208fa8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208f44   324  blr x17
0xffff58208f48   328  lsl x0, x0, #32
0xffff58208f4c   332  movz x10, #0x100000000
0xffff58208f50   336  sub csp, jssp, #0x10 (16)
0xffff58208f54   340  stp x10, x0, [jssp, #-16]!
0xffff58208f58   344  movz x0, #0x2
0xffff58208f5c   348  movz x1, #0x5b88
0xffff58208f60   352  movk x1, #0xe2, lsl #16
0xffff58208f64   356  ldr x16, pc+76 (addr 0x0000ffff58208fb0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58208f68   360  blr x16
0xffff58208f6c   364  str x0, [jssp, #56]
0xffff58208f70   368  ldr x16, pc+72 (addr 0x0000ffff58208fb8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208f74   372  blr x16
0xffff58208f78   376  b #-0xdc (addr 0xffff58208e9c)
0xffff58208f7c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58208f80   384  d63f03e0       constant
0xffff58208f84   388  d503201f       constant
0xffff58208f88   392  fff7ffff       constant
0xffff58208f8c   396  fff7ffff       constant
0xffff58208f90   400  39c04201       constant
0xffff58208f94   404  00000000       constant
0xffff58208f98   408  39c04201       constant
0xffff58208f9c   412  00000000       constant
0xffff58208fa0   416  32b052d9       constant
0xffff58208fa4   420  00000000       constant
0xffff58208fa8   424  58206820       constant
0xffff58208fac   428  0000ffff       constant
0xffff58208fb0   432  58206260       constant
0xffff58208fb4   436  0000ffff       constant
0xffff58208fb8   440  582068e0       constant
0xffff58208fbc   444  0000ffff       constant
0xffff58208fc0   448  movz x16, #0x0
0xffff58208fc4   452  bl #+0x14 (addr 0xffff58208fd8)
0xffff58208fc8   456  movz x16, #0x8
0xffff58208fcc   460  bl #+0xc (addr 0xffff58208fd8)
0xffff58208fd0   464  movz x16, #0x10
0xffff58208fd4   468  bl #+0x4 (addr 0xffff58208fd8)
0xffff58208fd8   472  ldr x17, pc+24 (addr 0x0000ffff58208ff0)    ;; lazy deoptimization bailout 0
0xffff58208fdc   476  add x17, x17, x16
0xffff58208fe0   480  br x17
0xffff58208fe4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58208fe8   488  d63f03e0       constant
0xffff58208fec   492  d503201f       constant
0xffff58208ff0   496  58006000       constant
0xffff58208ff4   500  0000ffff       constant


Safepoints (size = 21)
0xffff58208f6c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff58208eb8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208ec0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208ed0  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58208f40  code target (STUB)  (0xffff58206820)
0xffff58208f64  code target (STUB)  (0xffff58206260)
0xffff58208f70  code target (STUB)  (0xffff582068e0)
0xffff58208f7c  constant pool (size 68)
0xffff58208fd8  runtime entry
0xffff58208fe4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff58208e00     0  movz x16, #0xa00000000
0xffff58208e04     4  sub csp, jssp, #0x10 (16)
0xffff58208e08     8  stp fp, lr, [jssp, #-16]!
0xffff58208e0c    12  mov fp, jssp
0xffff58208e10    16  sub csp, jssp, #0x8 (8)
0xffff58208e14    20  sub jssp, jssp, #0x8 (8)
0xffff58208e18    24  stur x16, [fp, #-8]
0xffff58208e1c    28  ldr x3, [fp]
0xffff58208e20    32  ldur x4, [x3, #-8]
0xffff58208e24    36  movz x16, #0xe00000000
0xffff58208e28    40  cmp x4, x16
0xffff58208e2c    44  csel x4, fp, x3, ne
0xffff58208e30    48  ldr x3, [x4, #16]
0xffff58208e34    52  tbnz w3, #0, #+0xdc (addr 0xffff58208f10)
0xffff58208e38    56  asr x5, x3, #32
0xffff58208e3c    60  movz w16, #0x257f
0xffff58208e40    64  cmp w5, w16, lsl #3
0xffff58208e44    68  b.hs #+0x17c (addr 0xffff58208fc0)
0xffff58208e48    72  cbz w5, #+0xc (addr 0xffff58208e54)
0xffff58208e4c    76  mov x3, x5
0xffff58208e50    80  b #+0xc (addr 0xffff58208e5c)
0xffff58208e54    84  movz x3, #0x4
0xffff58208e58    88  movz x5, #0x0
0xffff58208e5c    92  lsl x4, x3, #32
0xffff58208e60    96  lsl x5, x5, #32
0xffff58208e64   100  lsl w6, w3, #3
0xffff58208e68   104  add w6, w6, #0x10 (16)
0xffff58208e6c   108  cmp w6, #0x96000 (614400)
0xffff58208e70   112  b.hs #+0x158 (addr 0xffff58208fc8)
0xffff58208e74   116  add w0, w6, #0x20 (32)
0xffff58208e78   120  sxtw x0, w0
0xffff58208e7c   124  movz x2, #0x92c0
0xffff58208e80   128  movk x2, #0x16e7, lsl #16
0xffff58208e84   132  ldp x7, x16, [x2]
0xffff58208e88   136  adds x6, x7, x0
0xffff58208e8c   140  ccmp x6, x16, #nzCv, lo
0xffff58208e90   144  b.hi #+0xa8 (addr 0xffff58208f38)
0xffff58208e94   148  str x6, [x2]
0xffff58208e98   152  orr x7, x7, #0x1
0xffff58208e9c   156  movz w0, #0x0
0xffff58208ea0   160  stur x0, [x7, #31]
0xffff58208ea4   164  ldur x0, [x1, #39]
0xffff58208ea8   168  ldur x0, [x0, #39]
0xffff58208eac   172  movz x16, #0x197
0xffff58208eb0   176  ldr x0, [x0, x16]
0xffff58208eb4   180  stur x0, [x7, #-1]
0xffff58208eb8   184  ldr x0, pc+216 (addr 0x0000ffff58208f90)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208ebc   188  stur x0, [x7, #7]
0xffff58208ec0   192  ldr x0, pc+216 (addr 0x0000ffff58208f98)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58208ec4   196  stur x0, [x7, #15]
0xffff58208ec8   200  stur x5, [x7, #23]
0xffff58208ecc   204  add x0, x7, #0x20 (32)
0xffff58208ed0   208  ldr x1, pc+208 (addr 0x0000ffff58208fa0)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58208ed4   212  stur x1, [x0, #-1]
0xffff58208ed8   216  stur x4, [x0, #7]
0xffff58208edc   220  stur x0, [x7, #15]
0xffff58208ee0   224  ldr d0, pc+168 (addr 0x0000ffff58208f88)
0xffff58208ee4   228  cmp w3, #0x0 (0)
0xffff58208ee8   232  b.le #+0x14 (addr 0xffff58208efc)
0xffff58208eec   236  sub w3, w3, #0x1 (1)
0xffff58208ef0   240  add x1, x0, #0xf (15)
0xffff58208ef4   244  str d0, [x1, w3, sxtw #3]
0xffff58208ef8   248  b #-0x14 (addr 0xffff58208ee4)
0xffff58208efc   252  mov x0, x7
0xffff58208f00   256  mov jssp, fp
0xffff58208f04   260  ldp fp, lr, [jssp], #16
0xffff58208f08   264  add jssp, jssp, #0x10 (16)
0xffff58208f0c   268  ret
0xffff58208f10   272  ldur x16, [x3, #-1]
0xffff58208f14   276  ldr x17, [x26, #120]
0xffff58208f18   280  cmp x16, x17
0xffff58208f1c   284  b.ne #+0xb4 (addr 0xffff58208fd0)
0xffff58208f20   288  ldur d29, [x3, #7]
0xffff58208f24   292  fcvtzs w5, d29
0xffff58208f28   296  scvtf d0, w5
0xffff58208f2c   300  fcmp d29, d0
0xffff58208f30   304  b.ne #+0xa0 (addr 0xffff58208fd0)
0xffff58208f34   308  b #-0xf8 (addr 0xffff58208e3c)
0xffff58208f38   312  movz x7, #0x0
0xffff58208f3c   316  mov x16, lr
0xffff58208f40   320  ldr x17, pc+104 (addr 0x0000ffff58208fa8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58208f44   324  blr x17
0xffff58208f48   328  lsl x0, x0, #32
0xffff58208f4c   332  movz x10, #0x100000000
0xffff58208f50   336  sub csp, jssp, #0x10 (16)
0xffff58208f54   340  stp x10, x0, [jssp, #-16]!
0xffff58208f58   344  movz x0, #0x2
0xffff58208f5c   348  movz x1, #0x5b88
0xffff58208f60   352  movk x1, #0xe2, lsl #16
0xffff58208f64   356  ldr x16, pc+76 (addr 0x0000ffff58208fb0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58208f68   360  blr x16
0xffff58208f6c   364  str x0, [jssp, #56]
0xffff58208f70   368  ldr x16, pc+72 (addr 0x0000ffff58208fb8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58208f74   372  blr x16
0xffff58208f78   376  b #-0xdc (addr 0xffff58208e9c)
0xffff58208f7c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58208f80   384  d63f03e0       constant
0xffff58208f84   388  d503201f       constant
0xffff58208f88   392  fff7ffff       constant
0xffff58208f8c   396  fff7ffff       constant
0xffff58208f90   400  39c04201       constant
0xffff58208f94   404  00000000       constant
0xffff58208f98   408  39c04201       constant
0xffff58208f9c   412  00000000       constant
0xffff58208fa0   416  32b052d9       constant
0xffff58208fa4   420  00000000       constant
0xffff58208fa8   424  58206820       constant
0xffff58208fac   428  0000ffff       constant
0xffff58208fb0   432  58206260       constant
0xffff58208fb4   436  0000ffff       constant
0xffff58208fb8   440  582068e0       constant
0xffff58208fbc   444  0000ffff       constant
0xffff58208fc0   448  movz x16, #0x0
0xffff58208fc4   452  bl #+0x14 (addr 0xffff58208fd8)
0xffff58208fc8   456  movz x16, #0x8
0xffff58208fcc   460  bl #+0xc (addr 0xffff58208fd8)
0xffff58208fd0   464  movz x16, #0x10
0xffff58208fd4   468  bl #+0x4 (addr 0xffff58208fd8)
0xffff58208fd8   472  ldr x17, pc+24 (addr 0x0000ffff58208ff0)    ;; lazy deoptimization bailout 0
0xffff58208fdc   476  add x17, x17, x16
0xffff58208fe0   480  br x17
0xffff58208fe4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58208fe8   488  d63f03e0       constant
0xffff58208fec   492  d503201f       constant
0xffff58208ff0   496  58006000       constant
0xffff58208ff4   500  0000ffff       constant


Safepoints (size = 21)
0xffff58208f6c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff58208eb8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208ec0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58208ed0  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58208f40  code target (STUB)  (0xffff58206820)
0xffff58208f64  code target (STUB)  (0xffff58206260)
0xffff58208f70  code target (STUB)  (0xffff582068e0)
0xffff58208f7c  constant pool (size 68)
0xffff58208fd8  runtime entry
0xffff58208fe4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff58209080     0  movz x16, #0xa00000000
0xffff58209084     4  sub csp, jssp, #0x10 (16)
0xffff58209088     8  stp fp, lr, [jssp, #-16]!
0xffff5820908c    12  mov fp, jssp
0xffff58209090    16  sub csp, jssp, #0x8 (8)
0xffff58209094    20  sub jssp, jssp, #0x8 (8)
0xffff58209098    24  stur x16, [fp, #-8]
0xffff5820909c    28  ldr x3, [fp]
0xffff582090a0    32  ldur x4, [x3, #-8]
0xffff582090a4    36  movz x16, #0xe00000000
0xffff582090a8    40  cmp x4, x16
0xffff582090ac    44  csel x4, fp, x3, ne
0xffff582090b0    48  ldr x3, [x4, #16]
0xffff582090b4    52  tbnz w3, #0, #+0xdc (addr 0xffff58209190)
0xffff582090b8    56  asr x5, x3, #32
0xffff582090bc    60  movz w16, #0x257f
0xffff582090c0    64  cmp w5, w16, lsl #3
0xffff582090c4    68  b.hs #+0x17c (addr 0xffff58209240)
0xffff582090c8    72  cbz w5, #+0xc (addr 0xffff582090d4)
0xffff582090cc    76  mov x3, x5
0xffff582090d0    80  b #+0xc (addr 0xffff582090dc)
0xffff582090d4    84  movz x3, #0x4
0xffff582090d8    88  movz x5, #0x0
0xffff582090dc    92  lsl x4, x3, #32
0xffff582090e0    96  lsl x5, x5, #32
0xffff582090e4   100  lsl w6, w3, #3
0xffff582090e8   104  add w6, w6, #0x10 (16)
0xffff582090ec   108  cmp w6, #0x96000 (614400)
0xffff582090f0   112  b.hs #+0x158 (addr 0xffff58209248)
0xffff582090f4   116  add w0, w6, #0x20 (32)
0xffff582090f8   120  sxtw x0, w0
0xffff582090fc   124  movz x2, #0x92c0
0xffff58209100   128  movk x2, #0x16e7, lsl #16
0xffff58209104   132  ldp x7, x16, [x2]
0xffff58209108   136  adds x6, x7, x0
0xffff5820910c   140  ccmp x6, x16, #nzCv, lo
0xffff58209110   144  b.hi #+0xa8 (addr 0xffff582091b8)
0xffff58209114   148  str x6, [x2]
0xffff58209118   152  orr x7, x7, #0x1
0xffff5820911c   156  movz w0, #0x0
0xffff58209120   160  stur x0, [x7, #31]
0xffff58209124   164  ldur x0, [x1, #39]
0xffff58209128   168  ldur x0, [x0, #39]
0xffff5820912c   172  movz x16, #0x19f
0xffff58209130   176  ldr x0, [x0, x16]
0xffff58209134   180  stur x0, [x7, #-1]
0xffff58209138   184  ldr x0, pc+216 (addr 0x0000ffff58209210)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820913c   188  stur x0, [x7, #7]
0xffff58209140   192  ldr x0, pc+216 (addr 0x0000ffff58209218)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58209144   196  stur x0, [x7, #15]
0xffff58209148   200  stur x5, [x7, #23]
0xffff5820914c   204  add x0, x7, #0x20 (32)
0xffff58209150   208  ldr x1, pc+208 (addr 0x0000ffff58209220)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58209154   212  stur x1, [x0, #-1]
0xffff58209158   216  stur x4, [x0, #7]
0xffff5820915c   220  stur x0, [x7, #15]
0xffff58209160   224  ldr d0, pc+168 (addr 0x0000ffff58209208)
0xffff58209164   228  cmp w3, #0x0 (0)
0xffff58209168   232  b.le #+0x14 (addr 0xffff5820917c)
0xffff5820916c   236  sub w3, w3, #0x1 (1)
0xffff58209170   240  add x1, x0, #0xf (15)
0xffff58209174   244  str d0, [x1, w3, sxtw #3]
0xffff58209178   248  b #-0x14 (addr 0xffff58209164)
0xffff5820917c   252  mov x0, x7
0xffff58209180   256  mov jssp, fp
0xffff58209184   260  ldp fp, lr, [jssp], #16
0xffff58209188   264  add jssp, jssp, #0x10 (16)
0xffff5820918c   268  ret
0xffff58209190   272  ldur x16, [x3, #-1]
0xffff58209194   276  ldr x17, [x26, #120]
0xffff58209198   280  cmp x16, x17
0xffff5820919c   284  b.ne #+0xb4 (addr 0xffff58209250)
0xffff582091a0   288  ldur d29, [x3, #7]
0xffff582091a4   292  fcvtzs w5, d29
0xffff582091a8   296  scvtf d0, w5
0xffff582091ac   300  fcmp d29, d0
0xffff582091b0   304  b.ne #+0xa0 (addr 0xffff58209250)
0xffff582091b4   308  b #-0xf8 (addr 0xffff582090bc)
0xffff582091b8   312  movz x7, #0x0
0xffff582091bc   316  mov x16, lr
0xffff582091c0   320  ldr x17, pc+104 (addr 0x0000ffff58209228)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582091c4   324  blr x17
0xffff582091c8   328  lsl x0, x0, #32
0xffff582091cc   332  movz x10, #0x100000000
0xffff582091d0   336  sub csp, jssp, #0x10 (16)
0xffff582091d4   340  stp x10, x0, [jssp, #-16]!
0xffff582091d8   344  movz x0, #0x2
0xffff582091dc   348  movz x1, #0x5b88
0xffff582091e0   352  movk x1, #0xe2, lsl #16
0xffff582091e4   356  ldr x16, pc+76 (addr 0x0000ffff58209230)    ;; code: STUB, CEntryStub, minor: 5
0xffff582091e8   360  blr x16
0xffff582091ec   364  str x0, [jssp, #56]
0xffff582091f0   368  ldr x16, pc+72 (addr 0x0000ffff58209238)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582091f4   372  blr x16
0xffff582091f8   376  b #-0xdc (addr 0xffff5820911c)
0xffff582091fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58209200   384  d63f03e0       constant
0xffff58209204   388  d503201f       constant
0xffff58209208   392  fff7ffff       constant
0xffff5820920c   396  fff7ffff       constant
0xffff58209210   400  39c04201       constant
0xffff58209214   404  00000000       constant
0xffff58209218   408  39c04201       constant
0xffff5820921c   412  00000000       constant
0xffff58209220   416  32b052d9       constant
0xffff58209224   420  00000000       constant
0xffff58209228   424  58206820       constant
0xffff5820922c   428  0000ffff       constant
0xffff58209230   432  58206260       constant
0xffff58209234   436  0000ffff       constant
0xffff58209238   440  582068e0       constant
0xffff5820923c   444  0000ffff       constant
0xffff58209240   448  movz x16, #0x0
0xffff58209244   452  bl #+0x14 (addr 0xffff58209258)
0xffff58209248   456  movz x16, #0x8
0xffff5820924c   460  bl #+0xc (addr 0xffff58209258)
0xffff58209250   464  movz x16, #0x10
0xffff58209254   468  bl #+0x4 (addr 0xffff58209258)
0xffff58209258   472  ldr x17, pc+24 (addr 0x0000ffff58209270)    ;; lazy deoptimization bailout 0
0xffff5820925c   476  add x17, x17, x16
0xffff58209260   480  br x17
0xffff58209264   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58209268   488  d63f03e0       constant
0xffff5820926c   492  d503201f       constant
0xffff58209270   496  58006000       constant
0xffff58209274   500  0000ffff       constant


Safepoints (size = 21)
0xffff582091ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff58209138  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58209140  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58209150  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582091c0  code target (STUB)  (0xffff58206820)
0xffff582091e4  code target (STUB)  (0xffff58206260)
0xffff582091f0  code target (STUB)  (0xffff582068e0)
0xffff582091fc  constant pool (size 68)
0xffff58209258  runtime entry
0xffff58209264  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff58209080     0  movz x16, #0xa00000000
0xffff58209084     4  sub csp, jssp, #0x10 (16)
0xffff58209088     8  stp fp, lr, [jssp, #-16]!
0xffff5820908c    12  mov fp, jssp
0xffff58209090    16  sub csp, jssp, #0x8 (8)
0xffff58209094    20  sub jssp, jssp, #0x8 (8)
0xffff58209098    24  stur x16, [fp, #-8]
0xffff5820909c    28  ldr x3, [fp]
0xffff582090a0    32  ldur x4, [x3, #-8]
0xffff582090a4    36  movz x16, #0xe00000000
0xffff582090a8    40  cmp x4, x16
0xffff582090ac    44  csel x4, fp, x3, ne
0xffff582090b0    48  ldr x3, [x4, #16]
0xffff582090b4    52  tbnz w3, #0, #+0xdc (addr 0xffff58209190)
0xffff582090b8    56  asr x5, x3, #32
0xffff582090bc    60  movz w16, #0x257f
0xffff582090c0    64  cmp w5, w16, lsl #3
0xffff582090c4    68  b.hs #+0x17c (addr 0xffff58209240)
0xffff582090c8    72  cbz w5, #+0xc (addr 0xffff582090d4)
0xffff582090cc    76  mov x3, x5
0xffff582090d0    80  b #+0xc (addr 0xffff582090dc)
0xffff582090d4    84  movz x3, #0x4
0xffff582090d8    88  movz x5, #0x0
0xffff582090dc    92  lsl x4, x3, #32
0xffff582090e0    96  lsl x5, x5, #32
0xffff582090e4   100  lsl w6, w3, #3
0xffff582090e8   104  add w6, w6, #0x10 (16)
0xffff582090ec   108  cmp w6, #0x96000 (614400)
0xffff582090f0   112  b.hs #+0x158 (addr 0xffff58209248)
0xffff582090f4   116  add w0, w6, #0x20 (32)
0xffff582090f8   120  sxtw x0, w0
0xffff582090fc   124  movz x2, #0x92c0
0xffff58209100   128  movk x2, #0x16e7, lsl #16
0xffff58209104   132  ldp x7, x16, [x2]
0xffff58209108   136  adds x6, x7, x0
0xffff5820910c   140  ccmp x6, x16, #nzCv, lo
0xffff58209110   144  b.hi #+0xa8 (addr 0xffff582091b8)
0xffff58209114   148  str x6, [x2]
0xffff58209118   152  orr x7, x7, #0x1
0xffff5820911c   156  movz w0, #0x0
0xffff58209120   160  stur x0, [x7, #31]
0xffff58209124   164  ldur x0, [x1, #39]
0xffff58209128   168  ldur x0, [x0, #39]
0xffff5820912c   172  movz x16, #0x19f
0xffff58209130   176  ldr x0, [x0, x16]
0xffff58209134   180  stur x0, [x7, #-1]
0xffff58209138   184  ldr x0, pc+216 (addr 0x0000ffff58209210)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820913c   188  stur x0, [x7, #7]
0xffff58209140   192  ldr x0, pc+216 (addr 0x0000ffff58209218)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58209144   196  stur x0, [x7, #15]
0xffff58209148   200  stur x5, [x7, #23]
0xffff5820914c   204  add x0, x7, #0x20 (32)
0xffff58209150   208  ldr x1, pc+208 (addr 0x0000ffff58209220)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58209154   212  stur x1, [x0, #-1]
0xffff58209158   216  stur x4, [x0, #7]
0xffff5820915c   220  stur x0, [x7, #15]
0xffff58209160   224  ldr d0, pc+168 (addr 0x0000ffff58209208)
0xffff58209164   228  cmp w3, #0x0 (0)
0xffff58209168   232  b.le #+0x14 (addr 0xffff5820917c)
0xffff5820916c   236  sub w3, w3, #0x1 (1)
0xffff58209170   240  add x1, x0, #0xf (15)
0xffff58209174   244  str d0, [x1, w3, sxtw #3]
0xffff58209178   248  b #-0x14 (addr 0xffff58209164)
0xffff5820917c   252  mov x0, x7
0xffff58209180   256  mov jssp, fp
0xffff58209184   260  ldp fp, lr, [jssp], #16
0xffff58209188   264  add jssp, jssp, #0x10 (16)
0xffff5820918c   268  ret
0xffff58209190   272  ldur x16, [x3, #-1]
0xffff58209194   276  ldr x17, [x26, #120]
0xffff58209198   280  cmp x16, x17
0xffff5820919c   284  b.ne #+0xb4 (addr 0xffff58209250)
0xffff582091a0   288  ldur d29, [x3, #7]
0xffff582091a4   292  fcvtzs w5, d29
0xffff582091a8   296  scvtf d0, w5
0xffff582091ac   300  fcmp d29, d0
0xffff582091b0   304  b.ne #+0xa0 (addr 0xffff58209250)
0xffff582091b4   308  b #-0xf8 (addr 0xffff582090bc)
0xffff582091b8   312  movz x7, #0x0
0xffff582091bc   316  mov x16, lr
0xffff582091c0   320  ldr x17, pc+104 (addr 0x0000ffff58209228)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582091c4   324  blr x17
0xffff582091c8   328  lsl x0, x0, #32
0xffff582091cc   332  movz x10, #0x100000000
0xffff582091d0   336  sub csp, jssp, #0x10 (16)
0xffff582091d4   340  stp x10, x0, [jssp, #-16]!
0xffff582091d8   344  movz x0, #0x2
0xffff582091dc   348  movz x1, #0x5b88
0xffff582091e0   352  movk x1, #0xe2, lsl #16
0xffff582091e4   356  ldr x16, pc+76 (addr 0x0000ffff58209230)    ;; code: STUB, CEntryStub, minor: 5
0xffff582091e8   360  blr x16
0xffff582091ec   364  str x0, [jssp, #56]
0xffff582091f0   368  ldr x16, pc+72 (addr 0x0000ffff58209238)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582091f4   372  blr x16
0xffff582091f8   376  b #-0xdc (addr 0xffff5820911c)
0xffff582091fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58209200   384  d63f03e0       constant
0xffff58209204   388  d503201f       constant
0xffff58209208   392  fff7ffff       constant
0xffff5820920c   396  fff7ffff       constant
0xffff58209210   400  39c04201       constant
0xffff58209214   404  00000000       constant
0xffff58209218   408  39c04201       constant
0xffff5820921c   412  00000000       constant
0xffff58209220   416  32b052d9       constant
0xffff58209224   420  00000000       constant
0xffff58209228   424  58206820       constant
0xffff5820922c   428  0000ffff       constant
0xffff58209230   432  58206260       constant
0xffff58209234   436  0000ffff       constant
0xffff58209238   440  582068e0       constant
0xffff5820923c   444  0000ffff       constant
0xffff58209240   448  movz x16, #0x0
0xffff58209244   452  bl #+0x14 (addr 0xffff58209258)
0xffff58209248   456  movz x16, #0x8
0xffff5820924c   460  bl #+0xc (addr 0xffff58209258)
0xffff58209250   464  movz x16, #0x10
0xffff58209254   468  bl #+0x4 (addr 0xffff58209258)
0xffff58209258   472  ldr x17, pc+24 (addr 0x0000ffff58209270)    ;; lazy deoptimization bailout 0
0xffff5820925c   476  add x17, x17, x16
0xffff58209260   480  br x17
0xffff58209264   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58209268   488  d63f03e0       constant
0xffff5820926c   492  d503201f       constant
0xffff58209270   496  58006000       constant
0xffff58209274   500  0000ffff       constant


Safepoints (size = 21)
0xffff582091ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff58209138  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58209140  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58209150  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582091c0  code target (STUB)  (0xffff58206820)
0xffff582091e4  code target (STUB)  (0xffff58206260)
0xffff582091f0  code target (STUB)  (0xffff582068e0)
0xffff582091fc  constant pool (size 68)
0xffff58209258  runtime entry
0xffff58209264  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff58209300     0  movz x16, #0xa00000000
0xffff58209304     4  sub csp, jssp, #0x10 (16)
0xffff58209308     8  stp fp, lr, [jssp, #-16]!
0xffff5820930c    12  mov fp, jssp
0xffff58209310    16  sub csp, jssp, #0x8 (8)
0xffff58209314    20  sub jssp, jssp, #0x8 (8)
0xffff58209318    24  stur x16, [fp, #-8]
0xffff5820931c    28  ldr x3, [fp]
0xffff58209320    32  ldur x4, [x3, #-8]
0xffff58209324    36  movz x16, #0xe00000000
0xffff58209328    40  cmp x4, x16
0xffff5820932c    44  csel x4, fp, x3, ne
0xffff58209330    48  ldr x3, [x4, #16]
0xffff58209334    52  tbnz w3, #0, #+0xdc (addr 0xffff58209410)
0xffff58209338    56  asr x5, x3, #32
0xffff5820933c    60  movz w16, #0x257f
0xffff58209340    64  cmp w5, w16, lsl #3
0xffff58209344    68  b.hs #+0x17c (addr 0xffff582094c0)
0xffff58209348    72  cbz w5, #+0xc (addr 0xffff58209354)
0xffff5820934c    76  mov x3, x5
0xffff58209350    80  b #+0xc (addr 0xffff5820935c)
0xffff58209354    84  movz x3, #0x4
0xffff58209358    88  movz x5, #0x0
0xffff5820935c    92  lsl x4, x3, #32
0xffff58209360    96  lsl x5, x5, #32
0xffff58209364   100  lsl w6, w3, #3
0xffff58209368   104  add w6, w6, #0x10 (16)
0xffff5820936c   108  cmp w6, #0x96000 (614400)
0xffff58209370   112  b.hs #+0x158 (addr 0xffff582094c8)
0xffff58209374   116  add w0, w6, #0x20 (32)
0xffff58209378   120  sxtw x0, w0
0xffff5820937c   124  movz x2, #0x92c0
0xffff58209380   128  movk x2, #0x16e7, lsl #16
0xffff58209384   132  ldp x7, x16, [x2]
0xffff58209388   136  adds x6, x7, x0
0xffff5820938c   140  ccmp x6, x16, #nzCv, lo
0xffff58209390   144  b.hi #+0xa8 (addr 0xffff58209438)
0xffff58209394   148  str x6, [x2]
0xffff58209398   152  orr x7, x7, #0x1
0xffff5820939c   156  movz w0, #0x0
0xffff582093a0   160  stur x0, [x7, #31]
0xffff582093a4   164  ldur x0, [x1, #39]
0xffff582093a8   168  ldur x0, [x0, #39]
0xffff582093ac   172  movz x16, #0x187
0xffff582093b0   176  ldr x0, [x0, x16]
0xffff582093b4   180  stur x0, [x7, #-1]
0xffff582093b8   184  ldr x0, pc+208 (addr 0x0000ffff58209488)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582093bc   188  stur x0, [x7, #7]
0xffff582093c0   192  ldr x0, pc+208 (addr 0x0000ffff58209490)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582093c4   196  stur x0, [x7, #15]
0xffff582093c8   200  stur x5, [x7, #23]
0xffff582093cc   204  add x0, x7, #0x20 (32)
0xffff582093d0   208  ldr x1, pc+200 (addr 0x0000ffff58209498)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582093d4   212  stur x1, [x0, #-1]
0xffff582093d8   216  stur x4, [x0, #7]
0xffff582093dc   220  stur x0, [x7, #15]
0xffff582093e0   224  cmp w3, #0x0 (0)
0xffff582093e4   228  b.le #+0x18 (addr 0xffff582093fc)
0xffff582093e8   232  sub w3, w3, #0x1 (1)
0xffff582093ec   236  ldr x1, pc+180 (addr 0x0000ffff582094a0)    ;; object: 0x39c04519 <the hole>
0xffff582093f0   240  add x2, x0, #0xf (15)
0xffff582093f4   244  str x1, [x2, w3, sxtw #3]
0xffff582093f8   248  b #-0x18 (addr 0xffff582093e0)
0xffff582093fc   252  mov x0, x7
0xffff58209400   256  mov jssp, fp
0xffff58209404   260  ldp fp, lr, [jssp], #16
0xffff58209408   264  add jssp, jssp, #0x10 (16)
0xffff5820940c   268  ret
0xffff58209410   272  ldur x16, [x3, #-1]
0xffff58209414   276  ldr x17, [x26, #120]
0xffff58209418   280  cmp x16, x17
0xffff5820941c   284  b.ne #+0xb4 (addr 0xffff582094d0)
0xffff58209420   288  ldur d29, [x3, #7]
0xffff58209424   292  fcvtzs w5, d29
0xffff58209428   296  scvtf d0, w5
0xffff5820942c   300  fcmp d29, d0
0xffff58209430   304  b.ne #+0xa0 (addr 0xffff582094d0)
0xffff58209434   308  b #-0xf8 (addr 0xffff5820933c)
0xffff58209438   312  movz x7, #0x0
0xffff5820943c   316  mov x16, lr
0xffff58209440   320  ldr x17, pc+104 (addr 0x0000ffff582094a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58209444   324  blr x17
0xffff58209448   328  lsl x0, x0, #32
0xffff5820944c   332  movz x10, #0x0
0xffff58209450   336  sub csp, jssp, #0x10 (16)
0xffff58209454   340  stp x10, x0, [jssp, #-16]!
0xffff58209458   344  movz x0, #0x2
0xffff5820945c   348  movz x1, #0x5b88
0xffff58209460   352  movk x1, #0xe2, lsl #16
0xffff58209464   356  ldr x16, pc+76 (addr 0x0000ffff582094b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58209468   360  blr x16
0xffff5820946c   364  str x0, [jssp, #56]
0xffff58209470   368  ldr x16, pc+72 (addr 0x0000ffff582094b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58209474   372  blr x16
0xffff58209478   376  b #-0xdc (addr 0xffff5820939c)
0xffff5820947c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58209480   384  d63f03e0       constant
0xffff58209484   388  d503201f       constant
0xffff58209488   392  39c04201       constant
0xffff5820948c   396  00000000       constant
0xffff58209490   400  39c04201       constant
0xffff58209494   404  00000000       constant
0xffff58209498   408  32b04259       constant
0xffff5820949c   412  00000000       constant
0xffff582094a0   416  39c04519       constant
0xffff582094a4   420  00000000       constant
0xffff582094a8   424  58206820       constant
0xffff582094ac   428  0000ffff       constant
0xffff582094b0   432  58206260       constant
0xffff582094b4   436  0000ffff       constant
0xffff582094b8   440  582068e0       constant
0xffff582094bc   444  0000ffff       constant
0xffff582094c0   448  movz x16, #0x0
0xffff582094c4   452  bl #+0x14 (addr 0xffff582094d8)
0xffff582094c8   456  movz x16, #0x8
0xffff582094cc   460  bl #+0xc (addr 0xffff582094d8)
0xffff582094d0   464  movz x16, #0x10
0xffff582094d4   468  bl #+0x4 (addr 0xffff582094d8)
0xffff582094d8   472  ldr x17, pc+24 (addr 0x0000ffff582094f0)    ;; lazy deoptimization bailout 0
0xffff582094dc   476  add x17, x17, x16
0xffff582094e0   480  br x17
0xffff582094e4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582094e8   488  d63f03e0       constant
0xffff582094ec   492  d503201f       constant
0xffff582094f0   496  58006000       constant
0xffff582094f4   500  0000ffff       constant


Safepoints (size = 21)
0xffff5820946c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff582093b8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582093c0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582093d0  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582093ec  embedded object  (0x39c04519 <the hole>)
0xffff58209440  code target (STUB)  (0xffff58206820)
0xffff58209464  code target (STUB)  (0xffff58206260)
0xffff58209470  code target (STUB)  (0xffff582068e0)
0xffff5820947c  constant pool (size 68)
0xffff582094d8  runtime entry
0xffff582094e4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff58209300     0  movz x16, #0xa00000000
0xffff58209304     4  sub csp, jssp, #0x10 (16)
0xffff58209308     8  stp fp, lr, [jssp, #-16]!
0xffff5820930c    12  mov fp, jssp
0xffff58209310    16  sub csp, jssp, #0x8 (8)
0xffff58209314    20  sub jssp, jssp, #0x8 (8)
0xffff58209318    24  stur x16, [fp, #-8]
0xffff5820931c    28  ldr x3, [fp]
0xffff58209320    32  ldur x4, [x3, #-8]
0xffff58209324    36  movz x16, #0xe00000000
0xffff58209328    40  cmp x4, x16
0xffff5820932c    44  csel x4, fp, x3, ne
0xffff58209330    48  ldr x3, [x4, #16]
0xffff58209334    52  tbnz w3, #0, #+0xdc (addr 0xffff58209410)
0xffff58209338    56  asr x5, x3, #32
0xffff5820933c    60  movz w16, #0x257f
0xffff58209340    64  cmp w5, w16, lsl #3
0xffff58209344    68  b.hs #+0x17c (addr 0xffff582094c0)
0xffff58209348    72  cbz w5, #+0xc (addr 0xffff58209354)
0xffff5820934c    76  mov x3, x5
0xffff58209350    80  b #+0xc (addr 0xffff5820935c)
0xffff58209354    84  movz x3, #0x4
0xffff58209358    88  movz x5, #0x0
0xffff5820935c    92  lsl x4, x3, #32
0xffff58209360    96  lsl x5, x5, #32
0xffff58209364   100  lsl w6, w3, #3
0xffff58209368   104  add w6, w6, #0x10 (16)
0xffff5820936c   108  cmp w6, #0x96000 (614400)
0xffff58209370   112  b.hs #+0x158 (addr 0xffff582094c8)
0xffff58209374   116  add w0, w6, #0x20 (32)
0xffff58209378   120  sxtw x0, w0
0xffff5820937c   124  movz x2, #0x92c0
0xffff58209380   128  movk x2, #0x16e7, lsl #16
0xffff58209384   132  ldp x7, x16, [x2]
0xffff58209388   136  adds x6, x7, x0
0xffff5820938c   140  ccmp x6, x16, #nzCv, lo
0xffff58209390   144  b.hi #+0xa8 (addr 0xffff58209438)
0xffff58209394   148  str x6, [x2]
0xffff58209398   152  orr x7, x7, #0x1
0xffff5820939c   156  movz w0, #0x0
0xffff582093a0   160  stur x0, [x7, #31]
0xffff582093a4   164  ldur x0, [x1, #39]
0xffff582093a8   168  ldur x0, [x0, #39]
0xffff582093ac   172  movz x16, #0x187
0xffff582093b0   176  ldr x0, [x0, x16]
0xffff582093b4   180  stur x0, [x7, #-1]
0xffff582093b8   184  ldr x0, pc+208 (addr 0x0000ffff58209488)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582093bc   188  stur x0, [x7, #7]
0xffff582093c0   192  ldr x0, pc+208 (addr 0x0000ffff58209490)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582093c4   196  stur x0, [x7, #15]
0xffff582093c8   200  stur x5, [x7, #23]
0xffff582093cc   204  add x0, x7, #0x20 (32)
0xffff582093d0   208  ldr x1, pc+200 (addr 0x0000ffff58209498)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582093d4   212  stur x1, [x0, #-1]
0xffff582093d8   216  stur x4, [x0, #7]
0xffff582093dc   220  stur x0, [x7, #15]
0xffff582093e0   224  cmp w3, #0x0 (0)
0xffff582093e4   228  b.le #+0x18 (addr 0xffff582093fc)
0xffff582093e8   232  sub w3, w3, #0x1 (1)
0xffff582093ec   236  ldr x1, pc+180 (addr 0x0000ffff582094a0)    ;; object: 0x39c04519 <the hole>
0xffff582093f0   240  add x2, x0, #0xf (15)
0xffff582093f4   244  str x1, [x2, w3, sxtw #3]
0xffff582093f8   248  b #-0x18 (addr 0xffff582093e0)
0xffff582093fc   252  mov x0, x7
0xffff58209400   256  mov jssp, fp
0xffff58209404   260  ldp fp, lr, [jssp], #16
0xffff58209408   264  add jssp, jssp, #0x10 (16)
0xffff5820940c   268  ret
0xffff58209410   272  ldur x16, [x3, #-1]
0xffff58209414   276  ldr x17, [x26, #120]
0xffff58209418   280  cmp x16, x17
0xffff5820941c   284  b.ne #+0xb4 (addr 0xffff582094d0)
0xffff58209420   288  ldur d29, [x3, #7]
0xffff58209424   292  fcvtzs w5, d29
0xffff58209428   296  scvtf d0, w5
0xffff5820942c   300  fcmp d29, d0
0xffff58209430   304  b.ne #+0xa0 (addr 0xffff582094d0)
0xffff58209434   308  b #-0xf8 (addr 0xffff5820933c)
0xffff58209438   312  movz x7, #0x0
0xffff5820943c   316  mov x16, lr
0xffff58209440   320  ldr x17, pc+104 (addr 0x0000ffff582094a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58209444   324  blr x17
0xffff58209448   328  lsl x0, x0, #32
0xffff5820944c   332  movz x10, #0x0
0xffff58209450   336  sub csp, jssp, #0x10 (16)
0xffff58209454   340  stp x10, x0, [jssp, #-16]!
0xffff58209458   344  movz x0, #0x2
0xffff5820945c   348  movz x1, #0x5b88
0xffff58209460   352  movk x1, #0xe2, lsl #16
0xffff58209464   356  ldr x16, pc+76 (addr 0x0000ffff582094b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58209468   360  blr x16
0xffff5820946c   364  str x0, [jssp, #56]
0xffff58209470   368  ldr x16, pc+72 (addr 0x0000ffff582094b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58209474   372  blr x16
0xffff58209478   376  b #-0xdc (addr 0xffff5820939c)
0xffff5820947c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58209480   384  d63f03e0       constant
0xffff58209484   388  d503201f       constant
0xffff58209488   392  39c04201       constant
0xffff5820948c   396  00000000       constant
0xffff58209490   400  39c04201       constant
0xffff58209494   404  00000000       constant
0xffff58209498   408  32b04259       constant
0xffff5820949c   412  00000000       constant
0xffff582094a0   416  39c04519       constant
0xffff582094a4   420  00000000       constant
0xffff582094a8   424  58206820       constant
0xffff582094ac   428  0000ffff       constant
0xffff582094b0   432  58206260       constant
0xffff582094b4   436  0000ffff       constant
0xffff582094b8   440  582068e0       constant
0xffff582094bc   444  0000ffff       constant
0xffff582094c0   448  movz x16, #0x0
0xffff582094c4   452  bl #+0x14 (addr 0xffff582094d8)
0xffff582094c8   456  movz x16, #0x8
0xffff582094cc   460  bl #+0xc (addr 0xffff582094d8)
0xffff582094d0   464  movz x16, #0x10
0xffff582094d4   468  bl #+0x4 (addr 0xffff582094d8)
0xffff582094d8   472  ldr x17, pc+24 (addr 0x0000ffff582094f0)    ;; lazy deoptimization bailout 0
0xffff582094dc   476  add x17, x17, x16
0xffff582094e0   480  br x17
0xffff582094e4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582094e8   488  d63f03e0       constant
0xffff582094ec   492  d503201f       constant
0xffff582094f0   496  58006000       constant
0xffff582094f4   500  0000ffff       constant


Safepoints (size = 21)
0xffff5820946c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff582093b8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582093c0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582093d0  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582093ec  embedded object  (0x39c04519 <the hole>)
0xffff58209440  code target (STUB)  (0xffff58206820)
0xffff58209464  code target (STUB)  (0xffff58206260)
0xffff58209470  code target (STUB)  (0xffff582068e0)
0xffff5820947c  constant pool (size 68)
0xffff582094d8  runtime entry
0xffff582094e4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff58209580     0  movz x16, #0xa00000000
0xffff58209584     4  sub csp, jssp, #0x10 (16)
0xffff58209588     8  stp fp, lr, [jssp, #-16]!
0xffff5820958c    12  mov fp, jssp
0xffff58209590    16  sub csp, jssp, #0x8 (8)
0xffff58209594    20  sub jssp, jssp, #0x8 (8)
0xffff58209598    24  stur x16, [fp, #-8]
0xffff5820959c    28  ldr x3, [fp]
0xffff582095a0    32  ldur x4, [x3, #-8]
0xffff582095a4    36  movz x16, #0xe00000000
0xffff582095a8    40  cmp x4, x16
0xffff582095ac    44  csel x4, fp, x3, ne
0xffff582095b0    48  ldr x3, [x4, #16]
0xffff582095b4    52  tbnz w3, #0, #+0xdc (addr 0xffff58209690)
0xffff582095b8    56  asr x5, x3, #32
0xffff582095bc    60  movz w16, #0x257f
0xffff582095c0    64  cmp w5, w16, lsl #3
0xffff582095c4    68  b.hs #+0x17c (addr 0xffff58209740)
0xffff582095c8    72  cbz w5, #+0xc (addr 0xffff582095d4)
0xffff582095cc    76  mov x3, x5
0xffff582095d0    80  b #+0xc (addr 0xffff582095dc)
0xffff582095d4    84  movz x3, #0x4
0xffff582095d8    88  movz x5, #0x0
0xffff582095dc    92  lsl x4, x3, #32
0xffff582095e0    96  lsl x5, x5, #32
0xffff582095e4   100  lsl w6, w3, #3
0xffff582095e8   104  add w6, w6, #0x10 (16)
0xffff582095ec   108  cmp w6, #0x96000 (614400)
0xffff582095f0   112  b.hs #+0x158 (addr 0xffff58209748)
0xffff582095f4   116  add w0, w6, #0x20 (32)
0xffff582095f8   120  sxtw x0, w0
0xffff582095fc   124  movz x2, #0x92c0
0xffff58209600   128  movk x2, #0x16e7, lsl #16
0xffff58209604   132  ldp x7, x16, [x2]
0xffff58209608   136  adds x6, x7, x0
0xffff5820960c   140  ccmp x6, x16, #nzCv, lo
0xffff58209610   144  b.hi #+0xa8 (addr 0xffff582096b8)
0xffff58209614   148  str x6, [x2]
0xffff58209618   152  orr x7, x7, #0x1
0xffff5820961c   156  movz w0, #0x0
0xffff58209620   160  stur x0, [x7, #31]
0xffff58209624   164  ldur x0, [x1, #39]
0xffff58209628   168  ldur x0, [x0, #39]
0xffff5820962c   172  movz x16, #0x18f
0xffff58209630   176  ldr x0, [x0, x16]
0xffff58209634   180  stur x0, [x7, #-1]
0xffff58209638   184  ldr x0, pc+208 (addr 0x0000ffff58209708)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820963c   188  stur x0, [x7, #7]
0xffff58209640   192  ldr x0, pc+208 (addr 0x0000ffff58209710)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58209644   196  stur x0, [x7, #15]
0xffff58209648   200  stur x5, [x7, #23]
0xffff5820964c   204  add x0, x7, #0x20 (32)
0xffff58209650   208  ldr x1, pc+200 (addr 0x0000ffff58209718)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58209654   212  stur x1, [x0, #-1]
0xffff58209658   216  stur x4, [x0, #7]
0xffff5820965c   220  stur x0, [x7, #15]
0xffff58209660   224  cmp w3, #0x0 (0)
0xffff58209664   228  b.le #+0x18 (addr 0xffff5820967c)
0xffff58209668   232  sub w3, w3, #0x1 (1)
0xffff5820966c   236  ldr x1, pc+180 (addr 0x0000ffff58209720)    ;; object: 0x39c04519 <the hole>
0xffff58209670   240  add x2, x0, #0xf (15)
0xffff58209674   244  str x1, [x2, w3, sxtw #3]
0xffff58209678   248  b #-0x18 (addr 0xffff58209660)
0xffff5820967c   252  mov x0, x7
0xffff58209680   256  mov jssp, fp
0xffff58209684   260  ldp fp, lr, [jssp], #16
0xffff58209688   264  add jssp, jssp, #0x10 (16)
0xffff5820968c   268  ret
0xffff58209690   272  ldur x16, [x3, #-1]
0xffff58209694   276  ldr x17, [x26, #120]
0xffff58209698   280  cmp x16, x17
0xffff5820969c   284  b.ne #+0xb4 (addr 0xffff58209750)
0xffff582096a0   288  ldur d29, [x3, #7]
0xffff582096a4   292  fcvtzs w5, d29
0xffff582096a8   296  scvtf d0, w5
0xffff582096ac   300  fcmp d29, d0
0xffff582096b0   304  b.ne #+0xa0 (addr 0xffff58209750)
0xffff582096b4   308  b #-0xf8 (addr 0xffff582095bc)
0xffff582096b8   312  movz x7, #0x0
0xffff582096bc   316  mov x16, lr
0xffff582096c0   320  ldr x17, pc+104 (addr 0x0000ffff58209728)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582096c4   324  blr x17
0xffff582096c8   328  lsl x0, x0, #32
0xffff582096cc   332  movz x10, #0x0
0xffff582096d0   336  sub csp, jssp, #0x10 (16)
0xffff582096d4   340  stp x10, x0, [jssp, #-16]!
0xffff582096d8   344  movz x0, #0x2
0xffff582096dc   348  movz x1, #0x5b88
0xffff582096e0   352  movk x1, #0xe2, lsl #16
0xffff582096e4   356  ldr x16, pc+76 (addr 0x0000ffff58209730)    ;; code: STUB, CEntryStub, minor: 5
0xffff582096e8   360  blr x16
0xffff582096ec   364  str x0, [jssp, #56]
0xffff582096f0   368  ldr x16, pc+72 (addr 0x0000ffff58209738)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582096f4   372  blr x16
0xffff582096f8   376  b #-0xdc (addr 0xffff5820961c)
0xffff582096fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58209700   384  d63f03e0       constant
0xffff58209704   388  d503201f       constant
0xffff58209708   392  39c04201       constant
0xffff5820970c   396  00000000       constant
0xffff58209710   400  39c04201       constant
0xffff58209714   404  00000000       constant
0xffff58209718   408  32b04259       constant
0xffff5820971c   412  00000000       constant
0xffff58209720   416  39c04519       constant
0xffff58209724   420  00000000       constant
0xffff58209728   424  58206820       constant
0xffff5820972c   428  0000ffff       constant
0xffff58209730   432  58206260       constant
0xffff58209734   436  0000ffff       constant
0xffff58209738   440  582068e0       constant
0xffff5820973c   444  0000ffff       constant
0xffff58209740   448  movz x16, #0x0
0xffff58209744   452  bl #+0x14 (addr 0xffff58209758)
0xffff58209748   456  movz x16, #0x8
0xffff5820974c   460  bl #+0xc (addr 0xffff58209758)
0xffff58209750   464  movz x16, #0x10
0xffff58209754   468  bl #+0x4 (addr 0xffff58209758)
0xffff58209758   472  ldr x17, pc+24 (addr 0x0000ffff58209770)    ;; lazy deoptimization bailout 0
0xffff5820975c   476  add x17, x17, x16
0xffff58209760   480  br x17
0xffff58209764   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58209768   488  d63f03e0       constant
0xffff5820976c   492  d503201f       constant
0xffff58209770   496  58006000       constant
0xffff58209774   500  0000ffff       constant


Safepoints (size = 21)
0xffff582096ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff58209638  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58209640  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58209650  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820966c  embedded object  (0x39c04519 <the hole>)
0xffff582096c0  code target (STUB)  (0xffff58206820)
0xffff582096e4  code target (STUB)  (0xffff58206260)
0xffff582096f0  code target (STUB)  (0xffff582068e0)
0xffff582096fc  constant pool (size 68)
0xffff58209758  runtime entry
0xffff58209764  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff58209580     0  movz x16, #0xa00000000
0xffff58209584     4  sub csp, jssp, #0x10 (16)
0xffff58209588     8  stp fp, lr, [jssp, #-16]!
0xffff5820958c    12  mov fp, jssp
0xffff58209590    16  sub csp, jssp, #0x8 (8)
0xffff58209594    20  sub jssp, jssp, #0x8 (8)
0xffff58209598    24  stur x16, [fp, #-8]
0xffff5820959c    28  ldr x3, [fp]
0xffff582095a0    32  ldur x4, [x3, #-8]
0xffff582095a4    36  movz x16, #0xe00000000
0xffff582095a8    40  cmp x4, x16
0xffff582095ac    44  csel x4, fp, x3, ne
0xffff582095b0    48  ldr x3, [x4, #16]
0xffff582095b4    52  tbnz w3, #0, #+0xdc (addr 0xffff58209690)
0xffff582095b8    56  asr x5, x3, #32
0xffff582095bc    60  movz w16, #0x257f
0xffff582095c0    64  cmp w5, w16, lsl #3
0xffff582095c4    68  b.hs #+0x17c (addr 0xffff58209740)
0xffff582095c8    72  cbz w5, #+0xc (addr 0xffff582095d4)
0xffff582095cc    76  mov x3, x5
0xffff582095d0    80  b #+0xc (addr 0xffff582095dc)
0xffff582095d4    84  movz x3, #0x4
0xffff582095d8    88  movz x5, #0x0
0xffff582095dc    92  lsl x4, x3, #32
0xffff582095e0    96  lsl x5, x5, #32
0xffff582095e4   100  lsl w6, w3, #3
0xffff582095e8   104  add w6, w6, #0x10 (16)
0xffff582095ec   108  cmp w6, #0x96000 (614400)
0xffff582095f0   112  b.hs #+0x158 (addr 0xffff58209748)
0xffff582095f4   116  add w0, w6, #0x20 (32)
0xffff582095f8   120  sxtw x0, w0
0xffff582095fc   124  movz x2, #0x92c0
0xffff58209600   128  movk x2, #0x16e7, lsl #16
0xffff58209604   132  ldp x7, x16, [x2]
0xffff58209608   136  adds x6, x7, x0
0xffff5820960c   140  ccmp x6, x16, #nzCv, lo
0xffff58209610   144  b.hi #+0xa8 (addr 0xffff582096b8)
0xffff58209614   148  str x6, [x2]
0xffff58209618   152  orr x7, x7, #0x1
0xffff5820961c   156  movz w0, #0x0
0xffff58209620   160  stur x0, [x7, #31]
0xffff58209624   164  ldur x0, [x1, #39]
0xffff58209628   168  ldur x0, [x0, #39]
0xffff5820962c   172  movz x16, #0x18f
0xffff58209630   176  ldr x0, [x0, x16]
0xffff58209634   180  stur x0, [x7, #-1]
0xffff58209638   184  ldr x0, pc+208 (addr 0x0000ffff58209708)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820963c   188  stur x0, [x7, #7]
0xffff58209640   192  ldr x0, pc+208 (addr 0x0000ffff58209710)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58209644   196  stur x0, [x7, #15]
0xffff58209648   200  stur x5, [x7, #23]
0xffff5820964c   204  add x0, x7, #0x20 (32)
0xffff58209650   208  ldr x1, pc+200 (addr 0x0000ffff58209718)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58209654   212  stur x1, [x0, #-1]
0xffff58209658   216  stur x4, [x0, #7]
0xffff5820965c   220  stur x0, [x7, #15]
0xffff58209660   224  cmp w3, #0x0 (0)
0xffff58209664   228  b.le #+0x18 (addr 0xffff5820967c)
0xffff58209668   232  sub w3, w3, #0x1 (1)
0xffff5820966c   236  ldr x1, pc+180 (addr 0x0000ffff58209720)    ;; object: 0x39c04519 <the hole>
0xffff58209670   240  add x2, x0, #0xf (15)
0xffff58209674   244  str x1, [x2, w3, sxtw #3]
0xffff58209678   248  b #-0x18 (addr 0xffff58209660)
0xffff5820967c   252  mov x0, x7
0xffff58209680   256  mov jssp, fp
0xffff58209684   260  ldp fp, lr, [jssp], #16
0xffff58209688   264  add jssp, jssp, #0x10 (16)
0xffff5820968c   268  ret
0xffff58209690   272  ldur x16, [x3, #-1]
0xffff58209694   276  ldr x17, [x26, #120]
0xffff58209698   280  cmp x16, x17
0xffff5820969c   284  b.ne #+0xb4 (addr 0xffff58209750)
0xffff582096a0   288  ldur d29, [x3, #7]
0xffff582096a4   292  fcvtzs w5, d29
0xffff582096a8   296  scvtf d0, w5
0xffff582096ac   300  fcmp d29, d0
0xffff582096b0   304  b.ne #+0xa0 (addr 0xffff58209750)
0xffff582096b4   308  b #-0xf8 (addr 0xffff582095bc)
0xffff582096b8   312  movz x7, #0x0
0xffff582096bc   316  mov x16, lr
0xffff582096c0   320  ldr x17, pc+104 (addr 0x0000ffff58209728)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582096c4   324  blr x17
0xffff582096c8   328  lsl x0, x0, #32
0xffff582096cc   332  movz x10, #0x0
0xffff582096d0   336  sub csp, jssp, #0x10 (16)
0xffff582096d4   340  stp x10, x0, [jssp, #-16]!
0xffff582096d8   344  movz x0, #0x2
0xffff582096dc   348  movz x1, #0x5b88
0xffff582096e0   352  movk x1, #0xe2, lsl #16
0xffff582096e4   356  ldr x16, pc+76 (addr 0x0000ffff58209730)    ;; code: STUB, CEntryStub, minor: 5
0xffff582096e8   360  blr x16
0xffff582096ec   364  str x0, [jssp, #56]
0xffff582096f0   368  ldr x16, pc+72 (addr 0x0000ffff58209738)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582096f4   372  blr x16
0xffff582096f8   376  b #-0xdc (addr 0xffff5820961c)
0xffff582096fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58209700   384  d63f03e0       constant
0xffff58209704   388  d503201f       constant
0xffff58209708   392  39c04201       constant
0xffff5820970c   396  00000000       constant
0xffff58209710   400  39c04201       constant
0xffff58209714   404  00000000       constant
0xffff58209718   408  32b04259       constant
0xffff5820971c   412  00000000       constant
0xffff58209720   416  39c04519       constant
0xffff58209724   420  00000000       constant
0xffff58209728   424  58206820       constant
0xffff5820972c   428  0000ffff       constant
0xffff58209730   432  58206260       constant
0xffff58209734   436  0000ffff       constant
0xffff58209738   440  582068e0       constant
0xffff5820973c   444  0000ffff       constant
0xffff58209740   448  movz x16, #0x0
0xffff58209744   452  bl #+0x14 (addr 0xffff58209758)
0xffff58209748   456  movz x16, #0x8
0xffff5820974c   460  bl #+0xc (addr 0xffff58209758)
0xffff58209750   464  movz x16, #0x10
0xffff58209754   468  bl #+0x4 (addr 0xffff58209758)
0xffff58209758   472  ldr x17, pc+24 (addr 0x0000ffff58209770)    ;; lazy deoptimization bailout 0
0xffff5820975c   476  add x17, x17, x16
0xffff58209760   480  br x17
0xffff58209764   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58209768   488  d63f03e0       constant
0xffff5820976c   492  d503201f       constant
0xffff58209770   496  58006000       constant
0xffff58209774   500  0000ffff       constant


Safepoints (size = 21)
0xffff582096ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff58209638  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58209640  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58209650  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820966c  embedded object  (0x39c04519 <the hole>)
0xffff582096c0  code target (STUB)  (0xffff58206820)
0xffff582096e4  code target (STUB)  (0xffff58206260)
0xffff582096f0  code target (STUB)  (0xffff582068e0)
0xffff582096fc  constant pool (size 68)
0xffff58209758  runtime entry
0xffff58209764  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff58209800     0  adr xzr, #+0x40 (addr 0xffff58209840)
0xffff58209804     4  adr xzr, #+0x360 (addr 0xffff58209b64)
0xffff58209808     8  ldr x16, pc+1736 (addr 0x0000ffff58209ed0)    ;; external reference (store_buffer_top)
0xffff5820980c    12  ldr x3, [x16]
0xffff58209810    16  str x4, [x3], #8
0xffff58209814    20  str x3, [x16]
0xffff58209818    24  tst x3, #0x1ffff
0xffff5820981c    28  b.eq #+0x8 (addr 0xffff58209824)
0xffff58209820    32  ret
0xffff58209824    36  sub csp, jssp, #0x8 (8)
0xffff58209828    40  str lr, [jssp, #-8]!
0xffff5820982c    44  ldr x17, pc+1708 (addr 0x0000ffff58209ed8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58209830    48  blr x17
0xffff58209834    52  ldr lr, [jssp], #8
0xffff58209838    56  ret
0xffff5820983c    60  ret
0xffff58209840    64  sub csp, jssp, #0x10 (16)
0xffff58209844    68  stp x1, x0, [jssp, #-16]!
0xffff58209848    72  ldr x3, [x4]
0xffff5820984c    76  and x16, x3, #0xfffffffffff00000
0xffff58209850    80  ldr x16, [x16, #8]
0xffff58209854    84  tst x16, #0x18
0xffff58209858    88  b.eq #+0x1d8 (addr 0xffff58209a30)
0xffff5820985c    92  and x16, x7, #0xfffffffffff00000
0xffff58209860    96  ldr x16, [x16, #8]
0xffff58209864   100  tst x16, #0x18
0xffff58209868   104  b.ne #+0x1c8 (addr 0xffff58209a30)
0xffff5820986c   108  and x3, x7, #0xfffffffffff00000
0xffff58209870   112  ldr x0, [x3, #104]
0xffff58209874   116  subs x0, x0, #0x1 (1)
0xffff58209878   120  str x0, [x3, #104]
0xffff5820987c   124  b.mi #+0xc4 (addr 0xffff58209940)
0xffff58209880   128  ubfx x16, x7, #8, #12
0xffff58209884   132  and x3, x7, #0xfffffffffff00000
0xffff58209888   136  add x3, x3, x16, lsl #2
0xffff5820988c   140  ubfx x0, x7, #3, #5
0xffff58209890   144  ldr x3, [x3, #360]
0xffff58209894   148  lsr x3, x3, x0
0xffff58209898   152  tbz w3, #0, #+0x8 (addr 0xffff582098a0)
0xffff5820989c   156  tbnz w3, #1, #+0x3c (addr 0xffff582098d8)
0xffff582098a0   160  ldp x1, x0, [jssp], #16
0xffff582098a4   164  ldr x16, pc+1596 (addr 0x0000ffff58209ee0)    ;; external reference (store_buffer_top)
0xffff582098a8   168  ldr x3, [x16]
0xffff582098ac   172  str x4, [x3], #8
0xffff582098b0   176  str x3, [x16]
0xffff582098b4   180  tst x3, #0x1ffff
0xffff582098b8   184  b.eq #+0x8 (addr 0xffff582098c0)
0xffff582098bc   188  ret
0xffff582098c0   192  sub csp, jssp, #0x8 (8)
0xffff582098c4   196  str lr, [jssp, #-8]!
0xffff582098c8   200  ldr x17, pc+1568 (addr 0x0000ffff58209ee8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582098cc   204  blr x17
0xffff582098d0   208  ldr lr, [jssp], #8
0xffff582098d4   212  ret
0xffff582098d8   216  ldr x3, [x4]
0xffff582098dc   220  sub csp, jssp, #0x10 (16)
0xffff582098e0   224  stp x7, x4, [jssp, #-16]!
0xffff582098e4   228  ubfx x16, x3, #8, #12
0xffff582098e8   232  and x0, x3, #0xfffffffffff00000
0xffff582098ec   236  add x0, x0, x16, lsl #2
0xffff582098f0   240  ubfx x7, x3, #3, #5
0xffff582098f4   244  ldr x4, [x0, #360]
0xffff582098f8   248  lsr x4, x4, x7
0xffff582098fc   252  tbz w4, #0, #+0x40 (addr 0xffff5820993c)
0xffff58209900   256  ldp x7, x4, [jssp], #16
0xffff58209904   260  ldp x1, x0, [jssp], #16
0xffff58209908   264  ldr x16, pc+1512 (addr 0x0000ffff58209ef0)    ;; external reference (store_buffer_top)
0xffff5820990c   268  ldr x3, [x16]
0xffff58209910   272  str x4, [x3], #8
0xffff58209914   276  str x3, [x16]
0xffff58209918   280  tst x3, #0x1ffff
0xffff5820991c   284  b.eq #+0x8 (addr 0xffff58209924)
0xffff58209920   288  ret
0xffff58209924   292  sub csp, jssp, #0x8 (8)
0xffff58209928   296  str lr, [jssp, #-8]!
0xffff5820992c   300  ldr x17, pc+1484 (addr 0x0000ffff58209ef8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58209930   304  blr x17
0xffff58209934   308  ldr lr, [jssp], #8
0xffff58209938   312  ret
0xffff5820993c   316  ldp x7, x4, [jssp], #16
0xffff58209940   320  sub csp, jssp, #0x78 (120)
0xffff58209944   324  stp x14, x15, [jssp, #-32]!
0xffff58209948   328  stp x18, lr, [jssp, #16]
0xffff5820994c   332  stp x10, x11, [jssp, #-32]!
0xffff58209950   336  stp x12, x13, [jssp, #16]
0xffff58209954   340  stp x6, x7, [jssp, #-32]!
0xffff58209958   344  stp x8, x9, [jssp, #16]
0xffff5820995c   348  stp x2, x4, [jssp, #-24]!
0xffff58209960   352  str x5, [jssp, #16]
0xffff58209964   356  sub csp, jssp, #0xb0 (176)
0xffff58209968   360  stp d26, d27, [jssp, #-32]!
0xffff5820996c   364  stp d28, d29, [jssp, #16]
0xffff58209970   368  stp d22, d23, [jssp, #-32]!
0xffff58209974   372  stp d24, d25, [jssp, #16]
0xffff58209978   376  stp d18, d19, [jssp, #-32]!
0xffff5820997c   380  stp d20, d21, [jssp, #16]
0xffff58209980   384  stp d6, d7, [jssp, #-32]!
0xffff58209984   388  stp d16, d17, [jssp, #16]
0xffff58209988   392  stp d2, d3, [jssp, #-32]!
0xffff5820998c   396  stp d4, d5, [jssp, #16]
0xffff58209990   400  stp d0, d1, [jssp, #-16]!
0xffff58209994   404  mov x0, x7
0xffff58209998   408  mov x1, x4
0xffff5820999c   412  ldr x2, pc+1380 (addr 0x0000ffff58209f00)    ;; external reference (isolate)
0xffff582099a0   416  ldr x16, pc+1384 (addr 0x0000ffff58209f08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582099a4   420  and csp, jssp, #0xfffffffffffffff0
0xffff582099a8   424  blr x16
0xffff582099ac   428  ldp d2, d3, [jssp, #16]
0xffff582099b0   432  ldp d0, d1, [jssp], #32
0xffff582099b4   436  ldp d6, d7, [jssp, #16]
0xffff582099b8   440  ldp d4, d5, [jssp], #32
0xffff582099bc   444  ldp d18, d19, [jssp, #16]
0xffff582099c0   448  ldp d16, d17, [jssp], #32
0xffff582099c4   452  ldp d22, d23, [jssp, #16]
0xffff582099c8   456  ldp d20, d21, [jssp], #32
0xffff582099cc   460  ldp d26, d27, [jssp, #16]
0xffff582099d0   464  ldp d24, d25, [jssp], #32
0xffff582099d4   468  ldp d28, d29, [jssp], #16
0xffff582099d8   472  ldp x5, x6, [jssp, #16]
0xffff582099dc   476  ldp x2, x4, [jssp], #32
0xffff582099e0   480  ldp x9, x10, [jssp, #16]
0xffff582099e4   484  ldp x7, x8, [jssp], #32
0xffff582099e8   488  ldp x13, x14, [jssp, #16]
0xffff582099ec   492  ldp x11, x12, [jssp], #32
0xffff582099f0   496  ldr lr, [jssp, #16]
0xffff582099f4   500  ldp x15, x18, [jssp], #24
0xffff582099f8   504  ldp x1, x0, [jssp], #16
0xffff582099fc   508  ldr x16, pc+1300 (addr 0x0000ffff58209f10)    ;; external reference (store_buffer_top)
0xffff58209a00   512  ldr x3, [x16]
0xffff58209a04   516  str x4, [x3], #8
0xffff58209a08   520  str x3, [x16]
0xffff58209a0c   524  tst x3, #0x1ffff
0xffff58209a10   528  b.eq #+0x8 (addr 0xffff58209a18)
0xffff58209a14   532  ret
0xffff58209a18   536  sub csp, jssp, #0x8 (8)
0xffff58209a1c   540  str lr, [jssp, #-8]!
0xffff58209a20   544  ldr x17, pc+1272 (addr 0x0000ffff58209f18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58209a24   548  blr x17
0xffff58209a28   552  ldr lr, [jssp], #8
0xffff58209a2c   556  ret
0xffff58209a30   560  and x3, x7, #0xfffffffffff00000
0xffff58209a34   564  ldr x0, [x3, #104]
0xffff58209a38   568  subs x0, x0, #0x1 (1)
0xffff58209a3c   572  str x0, [x3, #104]
0xffff58209a40   576  b.mi #+0x64 (addr 0xffff58209aa4)
0xffff58209a44   580  ubfx x16, x7, #8, #12
0xffff58209a48   584  and x3, x7, #0xfffffffffff00000
0xffff58209a4c   588  add x3, x3, x16, lsl #2
0xffff58209a50   592  ubfx x0, x7, #3, #5
0xffff58209a54   596  ldr x3, [x3, #360]
0xffff58209a58   600  lsr x3, x3, x0
0xffff58209a5c   604  tbz w3, #0, #+0x8 (addr 0xffff58209a64)
0xffff58209a60   608  tbnz w3, #1, #+0xc (addr 0xffff58209a6c)
0xffff58209a64   612  ldp x1, x0, [jssp], #16
0xffff58209a68   616  ret
0xffff58209a6c   620  ldr x3, [x4]
0xffff58209a70   624  sub csp, jssp, #0x10 (16)
0xffff58209a74   628  stp x7, x4, [jssp, #-16]!
0xffff58209a78   632  ubfx x16, x3, #8, #12
0xffff58209a7c   636  and x0, x3, #0xfffffffffff00000
0xffff58209a80   640  add x0, x0, x16, lsl #2
0xffff58209a84   644  ubfx x7, x3, #3, #5
0xffff58209a88   648  ldr x4, [x0, #360]
0xffff58209a8c   652  lsr x4, x4, x7
0xffff58209a90   656  tbz w4, #0, #+0x10 (addr 0xffff58209aa0)
0xffff58209a94   660  ldp x7, x4, [jssp], #16
0xffff58209a98   664  ldp x1, x0, [jssp], #16
0xffff58209a9c   668  ret
0xffff58209aa0   672  ldp x7, x4, [jssp], #16
0xffff58209aa4   676  sub csp, jssp, #0x78 (120)
0xffff58209aa8   680  stp x14, x15, [jssp, #-32]!
0xffff58209aac   684  stp x18, lr, [jssp, #16]
0xffff58209ab0   688  stp x10, x11, [jssp, #-32]!
0xffff58209ab4   692  stp x12, x13, [jssp, #16]
0xffff58209ab8   696  stp x6, x7, [jssp, #-32]!
0xffff58209abc   700  stp x8, x9, [jssp, #16]
0xffff58209ac0   704  stp x2, x4, [jssp, #-24]!
0xffff58209ac4   708  str x5, [jssp, #16]
0xffff58209ac8   712  sub csp, jssp, #0xb0 (176)
0xffff58209acc   716  stp d26, d27, [jssp, #-32]!
0xffff58209ad0   720  stp d28, d29, [jssp, #16]
0xffff58209ad4   724  stp d22, d23, [jssp, #-32]!
0xffff58209ad8   728  stp d24, d25, [jssp, #16]
0xffff58209adc   732  stp d18, d19, [jssp, #-32]!
0xffff58209ae0   736  stp d20, d21, [jssp, #16]
0xffff58209ae4   740  stp d6, d7, [jssp, #-32]!
0xffff58209ae8   744  stp d16, d17, [jssp, #16]
0xffff58209aec   748  stp d2, d3, [jssp, #-32]!
0xffff58209af0   752  stp d4, d5, [jssp, #16]
0xffff58209af4   756  stp d0, d1, [jssp, #-16]!
0xffff58209af8   760  mov x0, x7
0xffff58209afc   764  mov x1, x4
0xffff58209b00   768  ldr x2, pc+1056 (addr 0x0000ffff58209f20)    ;; external reference (isolate)
0xffff58209b04   772  ldr x16, pc+1060 (addr 0x0000ffff58209f28)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58209b08   776  and csp, jssp, #0xfffffffffffffff0
0xffff58209b0c   780  blr x16
0xffff58209b10   784  ldp d2, d3, [jssp, #16]
0xffff58209b14   788  ldp d0, d1, [jssp], #32
0xffff58209b18   792  ldp d6, d7, [jssp, #16]
0xffff58209b1c   796  ldp d4, d5, [jssp], #32
0xffff58209b20   800  ldp d18, d19, [jssp, #16]
0xffff58209b24   804  ldp d16, d17, [jssp], #32
0xffff58209b28   808  ldp d22, d23, [jssp, #16]
0xffff58209b2c   812  ldp d20, d21, [jssp], #32
0xffff58209b30   816  ldp d26, d27, [jssp, #16]
0xffff58209b34   820  ldp d24, d25, [jssp], #32
0xffff58209b38   824  ldp d28, d29, [jssp], #16
0xffff58209b3c   828  ldp x5, x6, [jssp, #16]
0xffff58209b40   832  ldp x2, x4, [jssp], #32
0xffff58209b44   836  ldp x9, x10, [jssp, #16]
0xffff58209b48   840  ldp x7, x8, [jssp], #32
0xffff58209b4c   844  ldp x13, x14, [jssp, #16]
0xffff58209b50   848  ldp x11, x12, [jssp], #32
0xffff58209b54   852  ldr lr, [jssp, #16]
0xffff58209b58   856  ldp x15, x18, [jssp], #24
0xffff58209b5c   860  ldp x1, x0, [jssp], #16
0xffff58209b60   864  ret
0xffff58209b64   868  sub csp, jssp, #0x10 (16)
0xffff58209b68   872  stp x1, x0, [jssp, #-16]!
0xffff58209b6c   876  ldr x3, [x4]
0xffff58209b70   880  and x16, x3, #0xfffffffffff00000
0xffff58209b74   884  ldr x16, [x16, #8]
0xffff58209b78   888  tst x16, #0x18
0xffff58209b7c   892  b.eq #+0x1f8 (addr 0xffff58209d74)
0xffff58209b80   896  and x16, x7, #0xfffffffffff00000
0xffff58209b84   900  ldr x16, [x16, #8]
0xffff58209b88   904  tst x16, #0x18
0xffff58209b8c   908  b.ne #+0x1e8 (addr 0xffff58209d74)
0xffff58209b90   912  and x3, x7, #0xfffffffffff00000
0xffff58209b94   916  ldr x0, [x3, #104]
0xffff58209b98   920  subs x0, x0, #0x1 (1)
0xffff58209b9c   924  str x0, [x3, #104]
0xffff58209ba0   928  b.mi #+0xe4 (addr 0xffff58209c84)
0xffff58209ba4   932  ubfx x16, x7, #8, #12
0xffff58209ba8   936  and x3, x7, #0xfffffffffff00000
0xffff58209bac   940  add x3, x3, x16, lsl #2
0xffff58209bb0   944  ubfx x0, x7, #3, #5
0xffff58209bb4   948  ldr x3, [x3, #360]
0xffff58209bb8   952  lsr x3, x3, x0
0xffff58209bbc   956  tbz w3, #0, #+0x8 (addr 0xffff58209bc4)
0xffff58209bc0   960  tbnz w3, #1, #+0x3c (addr 0xffff58209bfc)
0xffff58209bc4   964  ldp x1, x0, [jssp], #16
0xffff58209bc8   968  ldr x16, pc+872 (addr 0x0000ffff58209f30)    ;; external reference (store_buffer_top)
0xffff58209bcc   972  ldr x3, [x16]
0xffff58209bd0   976  str x4, [x3], #8
0xffff58209bd4   980  str x3, [x16]
0xffff58209bd8   984  tst x3, #0x1ffff
0xffff58209bdc   988  b.eq #+0x8 (addr 0xffff58209be4)
0xffff58209be0   992  ret
0xffff58209be4   996  sub csp, jssp, #0x8 (8)
0xffff58209be8  1000  str lr, [jssp, #-8]!
0xffff58209bec  1004  ldr x17, pc+844 (addr 0x0000ffff58209f38)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58209bf0  1008  blr x17
0xffff58209bf4  1012  ldr lr, [jssp], #8
0xffff58209bf8  1016  ret
0xffff58209bfc  1020  ldr x3, [x4]
0xffff58209c00  1024  and x0, x3, #0xfffffffffff00000
0xffff58209c04  1028  ldr x0, [x0, #8]
0xffff58209c08  1032  tbz w0, #6, #+0x18 (addr 0xffff58209c20)
0xffff58209c0c  1036  and x0, x7, #0xfffffffffff00000
0xffff58209c10  1040  ldr x0, [x0, #8]
0xffff58209c14  1044  movz x16, #0x58
0xffff58209c18  1048  tst x0, x16
0xffff58209c1c  1052  b.eq #+0x68 (addr 0xffff58209c84)
0xffff58209c20  1056  sub csp, jssp, #0x10 (16)
0xffff58209c24  1060  stp x7, x4, [jssp, #-16]!
0xffff58209c28  1064  ubfx x16, x3, #8, #12
0xffff58209c2c  1068  and x0, x3, #0xfffffffffff00000
0xffff58209c30  1072  add x0, x0, x16, lsl #2
0xffff58209c34  1076  ubfx x7, x3, #3, #5
0xffff58209c38  1080  ldr x4, [x0, #360]
0xffff58209c3c  1084  lsr x4, x4, x7
0xffff58209c40  1088  tbz w4, #0, #+0x40 (addr 0xffff58209c80)
0xffff58209c44  1092  ldp x7, x4, [jssp], #16
0xffff58209c48  1096  ldp x1, x0, [jssp], #16
0xffff58209c4c  1100  ldr x16, pc+756 (addr 0x0000ffff58209f40)    ;; external reference (store_buffer_top)
0xffff58209c50  1104  ldr x3, [x16]
0xffff58209c54  1108  str x4, [x3], #8
0xffff58209c58  1112  str x3, [x16]
0xffff58209c5c  1116  tst x3, #0x1ffff
0xffff58209c60  1120  b.eq #+0x8 (addr 0xffff58209c68)
0xffff58209c64  1124  ret
0xffff58209c68  1128  sub csp, jssp, #0x8 (8)
0xffff58209c6c  1132  str lr, [jssp, #-8]!
0xffff58209c70  1136  ldr x17, pc+728 (addr 0x0000ffff58209f48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58209c74  1140  blr x17
0xffff58209c78  1144  ldr lr, [jssp], #8
0xffff58209c7c  1148  ret
0xffff58209c80  1152  ldp x7, x4, [jssp], #16
0xffff58209c84  1156  sub csp, jssp, #0x78 (120)
0xffff58209c88  1160  stp x14, x15, [jssp, #-32]!
0xffff58209c8c  1164  stp x18, lr, [jssp, #16]
0xffff58209c90  1168  stp x10, x11, [jssp, #-32]!
0xffff58209c94  1172  stp x12, x13, [jssp, #16]
0xffff58209c98  1176  stp x6, x7, [jssp, #-32]!
0xffff58209c9c  1180  stp x8, x9, [jssp, #16]
0xffff58209ca0  1184  stp x2, x4, [jssp, #-24]!
0xffff58209ca4  1188  str x5, [jssp, #16]
0xffff58209ca8  1192  sub csp, jssp, #0xb0 (176)
0xffff58209cac  1196  stp d26, d27, [jssp, #-32]!
0xffff58209cb0  1200  stp d28, d29, [jssp, #16]
0xffff58209cb4  1204  stp d22, d23, [jssp, #-32]!
0xffff58209cb8  1208  stp d24, d25, [jssp, #16]
0xffff58209cbc  1212  stp d18, d19, [jssp, #-32]!
0xffff58209cc0  1216  stp d20, d21, [jssp, #16]
0xffff58209cc4  1220  stp d6, d7, [jssp, #-32]!
0xffff58209cc8  1224  stp d16, d17, [jssp, #16]
0xffff58209ccc  1228  stp d2, d3, [jssp, #-32]!
0xffff58209cd0  1232  stp d4, d5, [jssp, #16]
0xffff58209cd4  1236  stp d0, d1, [jssp, #-16]!
0xffff58209cd8  1240  mov x0, x7
0xffff58209cdc  1244  mov x1, x4
0xffff58209ce0  1248  ldr x2, pc+624 (addr 0x0000ffff58209f50)    ;; external reference (isolate)
0xffff58209ce4  1252  ldr x16, pc+628 (addr 0x0000ffff58209f58)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58209ce8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff58209cec  1260  blr x16
0xffff58209cf0  1264  ldp d2, d3, [jssp, #16]
0xffff58209cf4  1268  ldp d0, d1, [jssp], #32
0xffff58209cf8  1272  ldp d6, d7, [jssp, #16]
0xffff58209cfc  1276  ldp d4, d5, [jssp], #32
0xffff58209d00  1280  ldp d18, d19, [jssp, #16]
0xffff58209d04  1284  ldp d16, d17, [jssp], #32
0xffff58209d08  1288  ldp d22, d23, [jssp, #16]
0xffff58209d0c  1292  ldp d20, d21, [jssp], #32
0xffff58209d10  1296  ldp d26, d27, [jssp, #16]
0xffff58209d14  1300  ldp d24, d25, [jssp], #32
0xffff58209d18  1304  ldp d28, d29, [jssp], #16
0xffff58209d1c  1308  ldp x5, x6, [jssp, #16]
0xffff58209d20  1312  ldp x2, x4, [jssp], #32
0xffff58209d24  1316  ldp x9, x10, [jssp, #16]
0xffff58209d28  1320  ldp x7, x8, [jssp], #32
0xffff58209d2c  1324  ldp x13, x14, [jssp, #16]
0xffff58209d30  1328  ldp x11, x12, [jssp], #32
0xffff58209d34  1332  ldr lr, [jssp, #16]
0xffff58209d38  1336  ldp x15, x18, [jssp], #24
0xffff58209d3c  1340  ldp x1, x0, [jssp], #16
0xffff58209d40  1344  ldr x16, pc+544 (addr 0x0000ffff58209f60)    ;; external reference (store_buffer_top)
0xffff58209d44  1348  ldr x3, [x16]
0xffff58209d48  1352  str x4, [x3], #8
0xffff58209d4c  1356  str x3, [x16]
0xffff58209d50  1360  tst x3, #0x1ffff
0xffff58209d54  1364  b.eq #+0x8 (addr 0xffff58209d5c)
0xffff58209d58  1368  ret
0xffff58209d5c  1372  sub csp, jssp, #0x8 (8)
0xffff58209d60  1376  str lr, [jssp, #-8]!
0xffff58209d64  1380  ldr x17, pc+516 (addr 0x0000ffff58209f68)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58209d68  1384  blr x17
0xffff58209d6c  1388  ldr lr, [jssp], #8
0xffff58209d70  1392  ret
0xffff58209d74  1396  and x3, x7, #0xfffffffffff00000
0xffff58209d78  1400  ldr x0, [x3, #104]
0xffff58209d7c  1404  subs x0, x0, #0x1 (1)
0xffff58209d80  1408  str x0, [x3, #104]
0xffff58209d84  1412  b.mi #+0x84 (addr 0xffff58209e08)
0xffff58209d88  1416  ubfx x16, x7, #8, #12
0xffff58209d8c  1420  and x3, x7, #0xfffffffffff00000
0xffff58209d90  1424  add x3, x3, x16, lsl #2
0xffff58209d94  1428  ubfx x0, x7, #3, #5
0xffff58209d98  1432  ldr x3, [x3, #360]
0xffff58209d9c  1436  lsr x3, x3, x0
0xffff58209da0  1440  tbz w3, #0, #+0x8 (addr 0xffff58209da8)
0xffff58209da4  1444  tbnz w3, #1, #+0xc (addr 0xffff58209db0)
0xffff58209da8  1448  ldp x1, x0, [jssp], #16
0xffff58209dac  1452  ret
0xffff58209db0  1456  ldr x3, [x4]
0xffff58209db4  1460  and x0, x3, #0xfffffffffff00000
0xffff58209db8  1464  ldr x0, [x0, #8]
0xffff58209dbc  1468  tbz w0, #6, #+0x18 (addr 0xffff58209dd4)
0xffff58209dc0  1472  and x0, x7, #0xfffffffffff00000
0xffff58209dc4  1476  ldr x0, [x0, #8]
0xffff58209dc8  1480  movz x16, #0x58
0xffff58209dcc  1484  tst x0, x16
0xffff58209dd0  1488  b.eq #+0x38 (addr 0xffff58209e08)
0xffff58209dd4  1492  sub csp, jssp, #0x10 (16)
0xffff58209dd8  1496  stp x7, x4, [jssp, #-16]!
0xffff58209ddc  1500  ubfx x16, x3, #8, #12
0xffff58209de0  1504  and x0, x3, #0xfffffffffff00000
0xffff58209de4  1508  add x0, x0, x16, lsl #2
0xffff58209de8  1512  ubfx x7, x3, #3, #5
0xffff58209dec  1516  ldr x4, [x0, #360]
0xffff58209df0  1520  lsr x4, x4, x7
0xffff58209df4  1524  tbz w4, #0, #+0x10 (addr 0xffff58209e04)
0xffff58209df8  1528  ldp x7, x4, [jssp], #16
0xffff58209dfc  1532  ldp x1, x0, [jssp], #16
0xffff58209e00  1536  ret
0xffff58209e04  1540  ldp x7, x4, [jssp], #16
0xffff58209e08  1544  sub csp, jssp, #0x78 (120)
0xffff58209e0c  1548  stp x14, x15, [jssp, #-32]!
0xffff58209e10  1552  stp x18, lr, [jssp, #16]
0xffff58209e14  1556  stp x10, x11, [jssp, #-32]!
0xffff58209e18  1560  stp x12, x13, [jssp, #16]
0xffff58209e1c  1564  stp x6, x7, [jssp, #-32]!
0xffff58209e20  1568  stp x8, x9, [jssp, #16]
0xffff58209e24  1572  stp x2, x4, [jssp, #-24]!
0xffff58209e28  1576  str x5, [jssp, #16]
0xffff58209e2c  1580  sub csp, jssp, #0xb0 (176)
0xffff58209e30  1584  stp d26, d27, [jssp, #-32]!
0xffff58209e34  1588  stp d28, d29, [jssp, #16]
0xffff58209e38  1592  stp d22, d23, [jssp, #-32]!
0xffff58209e3c  1596  stp d24, d25, [jssp, #16]
0xffff58209e40  1600  stp d18, d19, [jssp, #-32]!
0xffff58209e44  1604  stp d20, d21, [jssp, #16]
0xffff58209e48  1608  stp d6, d7, [jssp, #-32]!
0xffff58209e4c  1612  stp d16, d17, [jssp, #16]
0xffff58209e50  1616  stp d2, d3, [jssp, #-32]!
0xffff58209e54  1620  stp d4, d5, [jssp, #16]
0xffff58209e58  1624  stp d0, d1, [jssp, #-16]!
0xffff58209e5c  1628  mov x0, x7
0xffff58209e60  1632  mov x1, x4
0xffff58209e64  1636  ldr x2, pc+268 (addr 0x0000ffff58209f70)    ;; external reference (isolate)
0xffff58209e68  1640  ldr x16, pc+272 (addr 0x0000ffff58209f78)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58209e6c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff58209e70  1648  blr x16
0xffff58209e74  1652  ldp d2, d3, [jssp, #16]
0xffff58209e78  1656  ldp d0, d1, [jssp], #32
0xffff58209e7c  1660  ldp d6, d7, [jssp, #16]
0xffff58209e80  1664  ldp d4, d5, [jssp], #32
0xffff58209e84  1668  ldp d18, d19, [jssp, #16]
0xffff58209e88  1672  ldp d16, d17, [jssp], #32
0xffff58209e8c  1676  ldp d22, d23, [jssp, #16]
0xffff58209e90  1680  ldp d20, d21, [jssp], #32
0xffff58209e94  1684  ldp d26, d27, [jssp, #16]
0xffff58209e98  1688  ldp d24, d25, [jssp], #32
0xffff58209e9c  1692  ldp d28, d29, [jssp], #16
0xffff58209ea0  1696  ldp x5, x6, [jssp, #16]
0xffff58209ea4  1700  ldp x2, x4, [jssp], #32
0xffff58209ea8  1704  ldp x9, x10, [jssp, #16]
0xffff58209eac  1708  ldp x7, x8, [jssp], #32
0xffff58209eb0  1712  ldp x13, x14, [jssp, #16]
0xffff58209eb4  1716  ldp x11, x12, [jssp], #32
0xffff58209eb8  1720  ldr lr, [jssp, #16]
0xffff58209ebc  1724  ldp x15, x18, [jssp], #24
0xffff58209ec0  1728  ldp x1, x0, [jssp], #16
0xffff58209ec4  1732  ret
0xffff58209ec8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff58209ecc  1740  d63f03e0       constant
0xffff58209ed0  1744  16e798c0       constant
0xffff58209ed4  1748  00000000       constant
0xffff58209ed8  1752  582065a0       constant
0xffff58209edc  1756  0000ffff       constant
0xffff58209ee0  1760  16e798c0       constant
0xffff58209ee4  1764  00000000       constant
0xffff58209ee8  1768  582065a0       constant
0xffff58209eec  1772  0000ffff       constant
0xffff58209ef0  1776  16e798c0       constant
0xffff58209ef4  1780  00000000       constant
0xffff58209ef8  1784  582065a0       constant
0xffff58209efc  1788  0000ffff       constant
0xffff58209f00  1792  16e782d0       constant
0xffff58209f04  1796  00000000       constant
0xffff58209f08  1800  00c2d958       constant
0xffff58209f0c  1804  00000000       constant
0xffff58209f10  1808  16e798c0       constant
0xffff58209f14  1812  00000000       constant
0xffff58209f18  1816  582065a0       constant
0xffff58209f1c  1820  0000ffff       constant
0xffff58209f20  1824  16e782d0       constant
0xffff58209f24  1828  00000000       constant
0xffff58209f28  1832  00c2d958       constant
0xffff58209f2c  1836  00000000       constant
0xffff58209f30  1840  16e798c0       constant
0xffff58209f34  1844  00000000       constant
0xffff58209f38  1848  582065a0       constant
0xffff58209f3c  1852  0000ffff       constant
0xffff58209f40  1856  16e798c0       constant
0xffff58209f44  1860  00000000       constant
0xffff58209f48  1864  582065a0       constant
0xffff58209f4c  1868  0000ffff       constant
0xffff58209f50  1872  16e782d0       constant
0xffff58209f54  1876  00000000       constant
0xffff58209f58  1880  00c2d958       constant
0xffff58209f5c  1884  00000000       constant
0xffff58209f60  1888  16e798c0       constant
0xffff58209f64  1892  00000000       constant
0xffff58209f68  1896  582065a0       constant
0xffff58209f6c  1900  0000ffff       constant
0xffff58209f70  1904  16e782d0       constant
0xffff58209f74  1908  00000000       constant
0xffff58209f78  1912  00c2d958       constant
0xffff58209f7c  1916  00000000       constant


RelocInfo (size = 65)
0xffff58209808  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820982c  code target (STUB)  (0xffff582065a0)
0xffff582098a4  external reference (store_buffer_top)  (0x16e798c0)
0xffff582098c8  code target (STUB)  (0xffff582065a0)
0xffff58209908  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820992c  code target (STUB)  (0xffff582065a0)
0xffff5820999c  external reference (isolate)  (0x16e782d0)
0xffff582099a0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582099fc  external reference (store_buffer_top)  (0x16e798c0)
0xffff58209a20  code target (STUB)  (0xffff582065a0)
0xffff58209b00  external reference (isolate)  (0x16e782d0)
0xffff58209b04  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58209bc8  external reference (store_buffer_top)  (0x16e798c0)
0xffff58209bec  code target (STUB)  (0xffff582065a0)
0xffff58209c4c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58209c70  code target (STUB)  (0xffff582065a0)
0xffff58209ce0  external reference (isolate)  (0x16e782d0)
0xffff58209ce4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58209d40  external reference (store_buffer_top)  (0x16e798c0)
0xffff58209d64  code target (STUB)  (0xffff582065a0)
0xffff58209e64  external reference (isolate)  (0x16e782d0)
0xffff58209e68  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58209ec8  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 690)
0xffff58209fe0     0  movz x16, #0xa00000000
0xffff58209fe4     4  sub csp, jssp, #0x10 (16)
0xffff58209fe8     8  stp fp, lr, [jssp, #-16]!
0xffff58209fec    12  mov fp, jssp
0xffff58209ff0    16  sub csp, jssp, #0x8 (8)
0xffff58209ff4    20  sub jssp, jssp, #0x8 (8)
0xffff58209ff8    24  stur x16, [fp, #-8]
0xffff58209ffc    28  movz w16, #0x257f
0xffff5820a000    32  cmp w0, w16, lsl #3
0xffff5820a004    36  b.hs #+0x234 (addr 0xffff5820a238)
0xffff5820a008    40  lsl x3, x0, #32
0xffff5820a00c    44  lsl w4, w0, #3
0xffff5820a010    48  add w4, w4, #0x10 (16)
0xffff5820a014    52  cmp w4, #0x96000 (614400)
0xffff5820a018    56  b.hs #+0x228 (addr 0xffff5820a240)
0xffff5820a01c    60  movz x6, #0x92c0
0xffff5820a020    64  movk x6, #0x16e7, lsl #16
0xffff5820a024    68  ldp x7, x5, [x6]
0xffff5820a028    72  adds x16, x7, #0x30 (48)
0xffff5820a02c    76  ccmp x16, x5, #nzCv, lo
0xffff5820a030    80  b.hi #+0x114 (addr 0xffff5820a144)
0xffff5820a034    84  str x16, [x6]
0xffff5820a038    88  orr x7, x7, #0x1
0xffff5820a03c    92  ldur x5, [x1, #23]
0xffff5820a040    96  stur x5, [x7, #-1]
0xffff5820a044   100  ldr x5, pc+404 (addr 0x0000ffff5820a1d8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a048   104  stur x5, [x7, #7]
0xffff5820a04c   108  ldr x5, pc+404 (addr 0x0000ffff5820a1e0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a050   112  stur x5, [x7, #15]
0xffff5820a054   116  stur x3, [x7, #23]
0xffff5820a058   120  add x5, x7, #0x20 (32)
0xffff5820a05c   124  ldr x6, pc+396 (addr 0x0000ffff5820a1e8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820a060   128  stur x6, [x5, #-1]
0xffff5820a064   132  stur x2, [x5, #7]
0xffff5820a068   136  ldur w5, [x2, #35]
0xffff5820a06c   140  add w5, w5, #0x1 (1)
0xffff5820a070   144  lsl x5, x5, #32
0xffff5820a074   148  stur x5, [x2, #31]
0xffff5820a078   152  sxtw x4, w4
0xffff5820a07c   156  movz x5, #0x92c0
0xffff5820a080   160  movk x5, #0x16e7, lsl #16
0xffff5820a084   164  ldp x8, x16, [x5]
0xffff5820a088   168  adds x6, x8, x4
0xffff5820a08c   172  ccmp x6, x16, #nzCv, lo
0xffff5820a090   176  b.hi #+0xf8 (addr 0xffff5820a188)
0xffff5820a094   180  str x6, [x5]
0xffff5820a098   184  orr x8, x8, #0x1
0xffff5820a09c   188  ldr x4, pc+340 (addr 0x0000ffff5820a1f0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820a0a0   192  stur x4, [x8, #-1]
0xffff5820a0a4   196  stur x3, [x8, #7]
0xffff5820a0a8   200  mov x3, x8
0xffff5820a0ac   204  stur x3, [x7, #15]
0xffff5820a0b0   208  add x4, x7, #0xf (15)
0xffff5820a0b4   212  and x3, x7, #0xfffffffffff00000
0xffff5820a0b8   216  ldr x3, [x3, #8]
0xffff5820a0bc   220  tbz w3, #2, #+0xc (addr 0xffff5820a0c8)
0xffff5820a0c0   224  ldr x16, pc+312 (addr 0x0000ffff5820a1f8)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff5820a0c4   228  blr x16
0xffff5820a0c8   232  mov x3, x0
0xffff5820a0cc   236  cmp w3, #0x0 (0)
0xffff5820a0d0   240  b.le #+0x18 (addr 0xffff5820a0e8)
0xffff5820a0d4   244  sub w3, w3, #0x1 (1)
0xffff5820a0d8   248  ldr x4, pc+296 (addr 0x0000ffff5820a200)    ;; object: 0x39c04519 <the hole>
0xffff5820a0dc   252  add x5, x8, #0xf (15)
0xffff5820a0e0   256  str x4, [x5, w3, sxtw #3]
0xffff5820a0e4   260  b #-0x18 (addr 0xffff5820a0cc)
0xffff5820a0e8   264  ldr x3, [fp]
0xffff5820a0ec   268  ldur x4, [x3, #-8]
0xffff5820a0f0   272  movz x16, #0xe00000000
0xffff5820a0f4   276  cmp x4, x16
0xffff5820a0f8   280  csel x4, fp, x3, ne
0xffff5820a0fc   284  movz x3, #0x0
0xffff5820a100   288  cmp w0, w3
0xffff5820a104   292  b.le #+0x24 (addr 0xffff5820a128)
0xffff5820a108   296  sub w5, w0, w3
0xffff5820a10c   300  add w5, w5, #0x1 (1)
0xffff5820a110   304  ldr x5, [x4, w5, uxtw #3]
0xffff5820a114   308  tbnz w5, #0, #+0x134 (addr 0xffff5820a248)
0xffff5820a118   312  add x6, x8, #0xf (15)
0xffff5820a11c   316  str x5, [x6, w3, sxtw #3]
0xffff5820a120   320  add w3, w3, #0x1 (1)
0xffff5820a124   324  b #-0x24 (addr 0xffff5820a100)
0xffff5820a128   328  add w0, w0, #0x1 (1)
0xffff5820a12c   332  lsl x1, x0, #32
0xffff5820a130   336  mov x0, x7
0xffff5820a134   340  mov jssp, fp
0xffff5820a138   344  ldp fp, lr, [jssp], #16
0xffff5820a13c   348  add jssp, jssp, x1, lsr #29
0xffff5820a140   352  ret
0xffff5820a144   356  movz x7, #0x0
0xffff5820a148   360  mov x16, lr
0xffff5820a14c   364  ldr x17, pc+188 (addr 0x0000ffff5820a208)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a150   368  blr x17
0xffff5820a154   372  movz x0, #0x3000000000
0xffff5820a158   376  movz x10, #0x0
0xffff5820a15c   380  sub csp, jssp, #0x10 (16)
0xffff5820a160   384  stp x10, x0, [jssp, #-16]!
0xffff5820a164   388  movz x0, #0x2
0xffff5820a168   392  movz x1, #0x5b88
0xffff5820a16c   396  movk x1, #0xe2, lsl #16
0xffff5820a170   400  ldr x16, pc+160 (addr 0x0000ffff5820a210)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a174   404  blr x16
0xffff5820a178   408  str x0, [jssp, #56]
0xffff5820a17c   412  ldr x16, pc+156 (addr 0x0000ffff5820a218)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a180   416  blr x16
0xffff5820a184   420  b #-0x148 (addr 0xffff5820a03c)
0xffff5820a188   424  movz x8, #0x0
0xffff5820a18c   428  mov x16, lr
0xffff5820a190   432  ldr x17, pc+144 (addr 0x0000ffff5820a220)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a194   436  blr x17
0xffff5820a198   440  lsl x0, x4, #32
0xffff5820a19c   444  movz x10, #0x0
0xffff5820a1a0   448  sub csp, jssp, #0x10 (16)
0xffff5820a1a4   452  stp x10, x0, [jssp, #-16]!
0xffff5820a1a8   456  movz x0, #0x2
0xffff5820a1ac   460  movz x1, #0x5b88
0xffff5820a1b0   464  movk x1, #0xe2, lsl #16
0xffff5820a1b4   468  ldr x16, pc+116 (addr 0x0000ffff5820a228)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a1b8   472  blr x16
0xffff5820a1bc   476  str x0, [jssp, #64]
0xffff5820a1c0   480  ldr x16, pc+112 (addr 0x0000ffff5820a230)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a1c4   484  blr x16
0xffff5820a1c8   488  b #-0x12c (addr 0xffff5820a09c)
0xffff5820a1cc   492  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff5820a1d0   496  d63f03e0       constant
0xffff5820a1d4   500  d503201f       constant
0xffff5820a1d8   504  39c04201       constant
0xffff5820a1dc   508  00000000       constant
0xffff5820a1e0   512  39c04201       constant
0xffff5820a1e4   516  00000000       constant
0xffff5820a1e8   520  32b05d81       constant
0xffff5820a1ec   524  00000000       constant
0xffff5820a1f0   528  32b04259       constant
0xffff5820a1f4   532  00000000       constant
0xffff5820a1f8   536  58209800       constant
0xffff5820a1fc   540  0000ffff       constant
0xffff5820a200   544  39c04519       constant
0xffff5820a204   548  00000000       constant
0xffff5820a208   552  58206820       constant
0xffff5820a20c   556  0000ffff       constant
0xffff5820a210   560  58206260       constant
0xffff5820a214   564  0000ffff       constant
0xffff5820a218   568  582068e0       constant
0xffff5820a21c   572  0000ffff       constant
0xffff5820a220   576  58206820       constant
0xffff5820a224   580  0000ffff       constant
0xffff5820a228   584  58206260       constant
0xffff5820a22c   588  0000ffff       constant
0xffff5820a230   592  582068e0       constant
0xffff5820a234   596  0000ffff       constant
0xffff5820a238   600  movz x16, #0x0
0xffff5820a23c   604  bl #+0x14 (addr 0xffff5820a250)
0xffff5820a240   608  movz x16, #0x8
0xffff5820a244   612  bl #+0xc (addr 0xffff5820a250)
0xffff5820a248   616  movz x16, #0x10
0xffff5820a24c   620  bl #+0x4 (addr 0xffff5820a250)
0xffff5820a250   624  ldr x17, pc+24 (addr 0x0000ffff5820a268)    ;; lazy deoptimization bailout 0
0xffff5820a254   628  add x17, x17, x16
0xffff5820a258   632  br x17
0xffff5820a25c   636  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820a260   640  d63f03e0       constant
0xffff5820a264   644  d503201f       constant
0xffff5820a268   648  58006000       constant
0xffff5820a26c   652  0000ffff       constant


Safepoints (size = 34)
0xffff5820a178   408  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff5820a1bc   476  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff5820a044  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a04c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a05c  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820a09c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820a0c0  code target (STUB)  (0xffff58209800)
0xffff5820a0d8  embedded object  (0x39c04519 <the hole>)
0xffff5820a14c  code target (STUB)  (0xffff58206820)
0xffff5820a170  code target (STUB)  (0xffff58206260)
0xffff5820a17c  code target (STUB)  (0xffff582068e0)
0xffff5820a190  code target (STUB)  (0xffff58206820)
0xffff5820a1b4  code target (STUB)  (0xffff58206260)
0xffff5820a1c0  code target (STUB)  (0xffff582068e0)
0xffff5820a1cc  constant pool (size 108)
0xffff5820a250  runtime entry
0xffff5820a25c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 690)
0xffff58209fe0     0  movz x16, #0xa00000000
0xffff58209fe4     4  sub csp, jssp, #0x10 (16)
0xffff58209fe8     8  stp fp, lr, [jssp, #-16]!
0xffff58209fec    12  mov fp, jssp
0xffff58209ff0    16  sub csp, jssp, #0x8 (8)
0xffff58209ff4    20  sub jssp, jssp, #0x8 (8)
0xffff58209ff8    24  stur x16, [fp, #-8]
0xffff58209ffc    28  movz w16, #0x257f
0xffff5820a000    32  cmp w0, w16, lsl #3
0xffff5820a004    36  b.hs #+0x234 (addr 0xffff5820a238)
0xffff5820a008    40  lsl x3, x0, #32
0xffff5820a00c    44  lsl w4, w0, #3
0xffff5820a010    48  add w4, w4, #0x10 (16)
0xffff5820a014    52  cmp w4, #0x96000 (614400)
0xffff5820a018    56  b.hs #+0x228 (addr 0xffff5820a240)
0xffff5820a01c    60  movz x6, #0x92c0
0xffff5820a020    64  movk x6, #0x16e7, lsl #16
0xffff5820a024    68  ldp x7, x5, [x6]
0xffff5820a028    72  adds x16, x7, #0x30 (48)
0xffff5820a02c    76  ccmp x16, x5, #nzCv, lo
0xffff5820a030    80  b.hi #+0x114 (addr 0xffff5820a144)
0xffff5820a034    84  str x16, [x6]
0xffff5820a038    88  orr x7, x7, #0x1
0xffff5820a03c    92  ldur x5, [x1, #23]
0xffff5820a040    96  stur x5, [x7, #-1]
0xffff5820a044   100  ldr x5, pc+404 (addr 0x0000ffff5820a1d8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a048   104  stur x5, [x7, #7]
0xffff5820a04c   108  ldr x5, pc+404 (addr 0x0000ffff5820a1e0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a050   112  stur x5, [x7, #15]
0xffff5820a054   116  stur x3, [x7, #23]
0xffff5820a058   120  add x5, x7, #0x20 (32)
0xffff5820a05c   124  ldr x6, pc+396 (addr 0x0000ffff5820a1e8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820a060   128  stur x6, [x5, #-1]
0xffff5820a064   132  stur x2, [x5, #7]
0xffff5820a068   136  ldur w5, [x2, #35]
0xffff5820a06c   140  add w5, w5, #0x1 (1)
0xffff5820a070   144  lsl x5, x5, #32
0xffff5820a074   148  stur x5, [x2, #31]
0xffff5820a078   152  sxtw x4, w4
0xffff5820a07c   156  movz x5, #0x92c0
0xffff5820a080   160  movk x5, #0x16e7, lsl #16
0xffff5820a084   164  ldp x8, x16, [x5]
0xffff5820a088   168  adds x6, x8, x4
0xffff5820a08c   172  ccmp x6, x16, #nzCv, lo
0xffff5820a090   176  b.hi #+0xf8 (addr 0xffff5820a188)
0xffff5820a094   180  str x6, [x5]
0xffff5820a098   184  orr x8, x8, #0x1
0xffff5820a09c   188  ldr x4, pc+340 (addr 0x0000ffff5820a1f0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820a0a0   192  stur x4, [x8, #-1]
0xffff5820a0a4   196  stur x3, [x8, #7]
0xffff5820a0a8   200  mov x3, x8
0xffff5820a0ac   204  stur x3, [x7, #15]
0xffff5820a0b0   208  add x4, x7, #0xf (15)
0xffff5820a0b4   212  and x3, x7, #0xfffffffffff00000
0xffff5820a0b8   216  ldr x3, [x3, #8]
0xffff5820a0bc   220  tbz w3, #2, #+0xc (addr 0xffff5820a0c8)
0xffff5820a0c0   224  ldr x16, pc+312 (addr 0x0000ffff5820a1f8)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff5820a0c4   228  blr x16
0xffff5820a0c8   232  mov x3, x0
0xffff5820a0cc   236  cmp w3, #0x0 (0)
0xffff5820a0d0   240  b.le #+0x18 (addr 0xffff5820a0e8)
0xffff5820a0d4   244  sub w3, w3, #0x1 (1)
0xffff5820a0d8   248  ldr x4, pc+296 (addr 0x0000ffff5820a200)    ;; object: 0x39c04519 <the hole>
0xffff5820a0dc   252  add x5, x8, #0xf (15)
0xffff5820a0e0   256  str x4, [x5, w3, sxtw #3]
0xffff5820a0e4   260  b #-0x18 (addr 0xffff5820a0cc)
0xffff5820a0e8   264  ldr x3, [fp]
0xffff5820a0ec   268  ldur x4, [x3, #-8]
0xffff5820a0f0   272  movz x16, #0xe00000000
0xffff5820a0f4   276  cmp x4, x16
0xffff5820a0f8   280  csel x4, fp, x3, ne
0xffff5820a0fc   284  movz x3, #0x0
0xffff5820a100   288  cmp w0, w3
0xffff5820a104   292  b.le #+0x24 (addr 0xffff5820a128)
0xffff5820a108   296  sub w5, w0, w3
0xffff5820a10c   300  add w5, w5, #0x1 (1)
0xffff5820a110   304  ldr x5, [x4, w5, uxtw #3]
0xffff5820a114   308  tbnz w5, #0, #+0x134 (addr 0xffff5820a248)
0xffff5820a118   312  add x6, x8, #0xf (15)
0xffff5820a11c   316  str x5, [x6, w3, sxtw #3]
0xffff5820a120   320  add w3, w3, #0x1 (1)
0xffff5820a124   324  b #-0x24 (addr 0xffff5820a100)
0xffff5820a128   328  add w0, w0, #0x1 (1)
0xffff5820a12c   332  lsl x1, x0, #32
0xffff5820a130   336  mov x0, x7
0xffff5820a134   340  mov jssp, fp
0xffff5820a138   344  ldp fp, lr, [jssp], #16
0xffff5820a13c   348  add jssp, jssp, x1, lsr #29
0xffff5820a140   352  ret
0xffff5820a144   356  movz x7, #0x0
0xffff5820a148   360  mov x16, lr
0xffff5820a14c   364  ldr x17, pc+188 (addr 0x0000ffff5820a208)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a150   368  blr x17
0xffff5820a154   372  movz x0, #0x3000000000
0xffff5820a158   376  movz x10, #0x0
0xffff5820a15c   380  sub csp, jssp, #0x10 (16)
0xffff5820a160   384  stp x10, x0, [jssp, #-16]!
0xffff5820a164   388  movz x0, #0x2
0xffff5820a168   392  movz x1, #0x5b88
0xffff5820a16c   396  movk x1, #0xe2, lsl #16
0xffff5820a170   400  ldr x16, pc+160 (addr 0x0000ffff5820a210)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a174   404  blr x16
0xffff5820a178   408  str x0, [jssp, #56]
0xffff5820a17c   412  ldr x16, pc+156 (addr 0x0000ffff5820a218)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a180   416  blr x16
0xffff5820a184   420  b #-0x148 (addr 0xffff5820a03c)
0xffff5820a188   424  movz x8, #0x0
0xffff5820a18c   428  mov x16, lr
0xffff5820a190   432  ldr x17, pc+144 (addr 0x0000ffff5820a220)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a194   436  blr x17
0xffff5820a198   440  lsl x0, x4, #32
0xffff5820a19c   444  movz x10, #0x0
0xffff5820a1a0   448  sub csp, jssp, #0x10 (16)
0xffff5820a1a4   452  stp x10, x0, [jssp, #-16]!
0xffff5820a1a8   456  movz x0, #0x2
0xffff5820a1ac   460  movz x1, #0x5b88
0xffff5820a1b0   464  movk x1, #0xe2, lsl #16
0xffff5820a1b4   468  ldr x16, pc+116 (addr 0x0000ffff5820a228)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a1b8   472  blr x16
0xffff5820a1bc   476  str x0, [jssp, #64]
0xffff5820a1c0   480  ldr x16, pc+112 (addr 0x0000ffff5820a230)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a1c4   484  blr x16
0xffff5820a1c8   488  b #-0x12c (addr 0xffff5820a09c)
0xffff5820a1cc   492  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff5820a1d0   496  d63f03e0       constant
0xffff5820a1d4   500  d503201f       constant
0xffff5820a1d8   504  39c04201       constant
0xffff5820a1dc   508  00000000       constant
0xffff5820a1e0   512  39c04201       constant
0xffff5820a1e4   516  00000000       constant
0xffff5820a1e8   520  32b05d81       constant
0xffff5820a1ec   524  00000000       constant
0xffff5820a1f0   528  32b04259       constant
0xffff5820a1f4   532  00000000       constant
0xffff5820a1f8   536  58209800       constant
0xffff5820a1fc   540  0000ffff       constant
0xffff5820a200   544  39c04519       constant
0xffff5820a204   548  00000000       constant
0xffff5820a208   552  58206820       constant
0xffff5820a20c   556  0000ffff       constant
0xffff5820a210   560  58206260       constant
0xffff5820a214   564  0000ffff       constant
0xffff5820a218   568  582068e0       constant
0xffff5820a21c   572  0000ffff       constant
0xffff5820a220   576  58206820       constant
0xffff5820a224   580  0000ffff       constant
0xffff5820a228   584  58206260       constant
0xffff5820a22c   588  0000ffff       constant
0xffff5820a230   592  582068e0       constant
0xffff5820a234   596  0000ffff       constant
0xffff5820a238   600  movz x16, #0x0
0xffff5820a23c   604  bl #+0x14 (addr 0xffff5820a250)
0xffff5820a240   608  movz x16, #0x8
0xffff5820a244   612  bl #+0xc (addr 0xffff5820a250)
0xffff5820a248   616  movz x16, #0x10
0xffff5820a24c   620  bl #+0x4 (addr 0xffff5820a250)
0xffff5820a250   624  ldr x17, pc+24 (addr 0x0000ffff5820a268)    ;; lazy deoptimization bailout 0
0xffff5820a254   628  add x17, x17, x16
0xffff5820a258   632  br x17
0xffff5820a25c   636  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820a260   640  d63f03e0       constant
0xffff5820a264   644  d503201f       constant
0xffff5820a268   648  58006000       constant
0xffff5820a26c   652  0000ffff       constant


Safepoints (size = 34)
0xffff5820a178   408  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff5820a1bc   476  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff5820a044  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a04c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a05c  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820a09c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820a0c0  code target (STUB)  (0xffff58209800)
0xffff5820a0d8  embedded object  (0x39c04519 <the hole>)
0xffff5820a14c  code target (STUB)  (0xffff58206820)
0xffff5820a170  code target (STUB)  (0xffff58206260)
0xffff5820a17c  code target (STUB)  (0xffff582068e0)
0xffff5820a190  code target (STUB)  (0xffff58206820)
0xffff5820a1b4  code target (STUB)  (0xffff58206260)
0xffff5820a1c0  code target (STUB)  (0xffff582068e0)
0xffff5820a1cc  constant pool (size 108)
0xffff5820a250  runtime entry
0xffff5820a25c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 493)
0xffff5820a300     0  movz x16, #0xa00000000
0xffff5820a304     4  sub csp, jssp, #0x10 (16)
0xffff5820a308     8  stp fp, lr, [jssp, #-16]!
0xffff5820a30c    12  mov fp, jssp
0xffff5820a310    16  sub csp, jssp, #0x8 (8)
0xffff5820a314    20  sub jssp, jssp, #0x8 (8)
0xffff5820a318    24  stur x16, [fp, #-8]
0xffff5820a31c    28  movz w16, #0x257f
0xffff5820a320    32  cmp w0, w16, lsl #3
0xffff5820a324    36  b.hs #+0x17c (addr 0xffff5820a4a0)
0xffff5820a328    40  lsl x3, x0, #32
0xffff5820a32c    44  lsl w4, w0, #3
0xffff5820a330    48  add w4, w4, #0x10 (16)
0xffff5820a334    52  cmp w4, #0x96000 (614400)
0xffff5820a338    56  b.hs #+0x170 (addr 0xffff5820a4a8)
0xffff5820a33c    60  add w4, w4, #0x20 (32)
0xffff5820a340    64  sxtw x4, w4
0xffff5820a344    68  movz x5, #0x92c0
0xffff5820a348    72  movk x5, #0x16e7, lsl #16
0xffff5820a34c    76  ldp x7, x16, [x5]
0xffff5820a350    80  adds x6, x7, x4
0xffff5820a354    84  ccmp x6, x16, #nzCv, lo
0xffff5820a358    88  b.hi #+0xc0 (addr 0xffff5820a418)
0xffff5820a35c    92  str x6, [x5]
0xffff5820a360    96  orr x7, x7, #0x1
0xffff5820a364   100  movz w4, #0x0
0xffff5820a368   104  stur x4, [x7, #31]
0xffff5820a36c   108  ldur x4, [x1, #23]
0xffff5820a370   112  stur x4, [x7, #-1]
0xffff5820a374   116  ldr x4, pc+244 (addr 0x0000ffff5820a468)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a378   120  stur x4, [x7, #7]
0xffff5820a37c   124  ldr x4, pc+244 (addr 0x0000ffff5820a470)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a380   128  stur x4, [x7, #15]
0xffff5820a384   132  stur x3, [x7, #23]
0xffff5820a388   136  add x4, x7, #0x20 (32)
0xffff5820a38c   140  ldr x5, pc+236 (addr 0x0000ffff5820a478)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820a390   144  stur x5, [x4, #-1]
0xffff5820a394   148  stur x3, [x4, #7]
0xffff5820a398   152  stur x4, [x7, #15]
0xffff5820a39c   156  mov x3, x0
0xffff5820a3a0   160  cmp w3, #0x0 (0)
0xffff5820a3a4   164  b.le #+0x18 (addr 0xffff5820a3bc)
0xffff5820a3a8   168  sub w3, w3, #0x1 (1)
0xffff5820a3ac   172  ldr x5, pc+212 (addr 0x0000ffff5820a480)    ;; object: 0x39c04519 <the hole>
0xffff5820a3b0   176  add x6, x4, #0xf (15)
0xffff5820a3b4   180  str x5, [x6, w3, sxtw #3]
0xffff5820a3b8   184  b #-0x18 (addr 0xffff5820a3a0)
0xffff5820a3bc   188  ldr x3, [fp]
0xffff5820a3c0   192  ldur x5, [x3, #-8]
0xffff5820a3c4   196  movz x16, #0xe00000000
0xffff5820a3c8   200  cmp x5, x16
0xffff5820a3cc   204  csel x5, fp, x3, ne
0xffff5820a3d0   208  movz x3, #0x0
0xffff5820a3d4   212  cmp w0, w3
0xffff5820a3d8   216  b.le #+0x24 (addr 0xffff5820a3fc)
0xffff5820a3dc   220  sub w6, w0, w3
0xffff5820a3e0   224  add w6, w6, #0x1 (1)
0xffff5820a3e4   228  ldr x6, [x5, w6, uxtw #3]
0xffff5820a3e8   232  tbnz w6, #0, #+0xc8 (addr 0xffff5820a4b0)
0xffff5820a3ec   236  add x8, x4, #0xf (15)
0xffff5820a3f0   240  str x6, [x8, w3, sxtw #3]
0xffff5820a3f4   244  add w3, w3, #0x1 (1)
0xffff5820a3f8   248  b #-0x24 (addr 0xffff5820a3d4)
0xffff5820a3fc   252  add w0, w0, #0x1 (1)
0xffff5820a400   256  lsl x1, x0, #32
0xffff5820a404   260  mov x0, x7
0xffff5820a408   264  mov jssp, fp
0xffff5820a40c   268  ldp fp, lr, [jssp], #16
0xffff5820a410   272  add jssp, jssp, x1, lsr #29
0xffff5820a414   276  ret
0xffff5820a418   280  movz x7, #0x0
0xffff5820a41c   284  mov x16, lr
0xffff5820a420   288  ldr x17, pc+104 (addr 0x0000ffff5820a488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a424   292  blr x17
0xffff5820a428   296  lsl x0, x4, #32
0xffff5820a42c   300  movz x10, #0x0
0xffff5820a430   304  sub csp, jssp, #0x10 (16)
0xffff5820a434   308  stp x10, x0, [jssp, #-16]!
0xffff5820a438   312  movz x0, #0x2
0xffff5820a43c   316  movz x1, #0x5b88
0xffff5820a440   320  movk x1, #0xe2, lsl #16
0xffff5820a444   324  ldr x16, pc+76 (addr 0x0000ffff5820a490)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a448   328  blr x16
0xffff5820a44c   332  str x0, [jssp, #56]
0xffff5820a450   336  ldr x16, pc+72 (addr 0x0000ffff5820a498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a454   340  blr x16
0xffff5820a458   344  b #-0xf4 (addr 0xffff5820a364)
0xffff5820a45c   348  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff5820a460   352  d63f03e0       constant
0xffff5820a464   356  d503201f       constant
0xffff5820a468   360  39c04201       constant
0xffff5820a46c   364  00000000       constant
0xffff5820a470   368  39c04201       constant
0xffff5820a474   372  00000000       constant
0xffff5820a478   376  32b04259       constant
0xffff5820a47c   380  00000000       constant
0xffff5820a480   384  39c04519       constant
0xffff5820a484   388  00000000       constant
0xffff5820a488   392  58206820       constant
0xffff5820a48c   396  0000ffff       constant
0xffff5820a490   400  58206260       constant
0xffff5820a494   404  0000ffff       constant
0xffff5820a498   408  582068e0       constant
0xffff5820a49c   412  0000ffff       constant
0xffff5820a4a0   416  movz x16, #0x0
0xffff5820a4a4   420  bl #+0x14 (addr 0xffff5820a4b8)
0xffff5820a4a8   424  movz x16, #0x8
0xffff5820a4ac   428  bl #+0xc (addr 0xffff5820a4b8)
0xffff5820a4b0   432  movz x16, #0x10
0xffff5820a4b4   436  bl #+0x4 (addr 0xffff5820a4b8)
0xffff5820a4b8   440  ldr x17, pc+24 (addr 0x0000ffff5820a4d0)    ;; lazy deoptimization bailout 0
0xffff5820a4bc   444  add x17, x17, x16
0xffff5820a4c0   448  br x17
0xffff5820a4c4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820a4c8   456  d63f03e0       constant
0xffff5820a4cc   460  d503201f       constant
0xffff5820a4d0   464  58006000       constant
0xffff5820a4d4   468  0000ffff       constant


Safepoints (size = 21)
0xffff5820a44c   332  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff5820a374  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a37c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a38c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820a3ac  embedded object  (0x39c04519 <the hole>)
0xffff5820a420  code target (STUB)  (0xffff58206820)
0xffff5820a444  code target (STUB)  (0xffff58206260)
0xffff5820a450  code target (STUB)  (0xffff582068e0)
0xffff5820a45c  constant pool (size 68)
0xffff5820a4b8  runtime entry
0xffff5820a4c4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 493)
0xffff5820a300     0  movz x16, #0xa00000000
0xffff5820a304     4  sub csp, jssp, #0x10 (16)
0xffff5820a308     8  stp fp, lr, [jssp, #-16]!
0xffff5820a30c    12  mov fp, jssp
0xffff5820a310    16  sub csp, jssp, #0x8 (8)
0xffff5820a314    20  sub jssp, jssp, #0x8 (8)
0xffff5820a318    24  stur x16, [fp, #-8]
0xffff5820a31c    28  movz w16, #0x257f
0xffff5820a320    32  cmp w0, w16, lsl #3
0xffff5820a324    36  b.hs #+0x17c (addr 0xffff5820a4a0)
0xffff5820a328    40  lsl x3, x0, #32
0xffff5820a32c    44  lsl w4, w0, #3
0xffff5820a330    48  add w4, w4, #0x10 (16)
0xffff5820a334    52  cmp w4, #0x96000 (614400)
0xffff5820a338    56  b.hs #+0x170 (addr 0xffff5820a4a8)
0xffff5820a33c    60  add w4, w4, #0x20 (32)
0xffff5820a340    64  sxtw x4, w4
0xffff5820a344    68  movz x5, #0x92c0
0xffff5820a348    72  movk x5, #0x16e7, lsl #16
0xffff5820a34c    76  ldp x7, x16, [x5]
0xffff5820a350    80  adds x6, x7, x4
0xffff5820a354    84  ccmp x6, x16, #nzCv, lo
0xffff5820a358    88  b.hi #+0xc0 (addr 0xffff5820a418)
0xffff5820a35c    92  str x6, [x5]
0xffff5820a360    96  orr x7, x7, #0x1
0xffff5820a364   100  movz w4, #0x0
0xffff5820a368   104  stur x4, [x7, #31]
0xffff5820a36c   108  ldur x4, [x1, #23]
0xffff5820a370   112  stur x4, [x7, #-1]
0xffff5820a374   116  ldr x4, pc+244 (addr 0x0000ffff5820a468)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a378   120  stur x4, [x7, #7]
0xffff5820a37c   124  ldr x4, pc+244 (addr 0x0000ffff5820a470)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a380   128  stur x4, [x7, #15]
0xffff5820a384   132  stur x3, [x7, #23]
0xffff5820a388   136  add x4, x7, #0x20 (32)
0xffff5820a38c   140  ldr x5, pc+236 (addr 0x0000ffff5820a478)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820a390   144  stur x5, [x4, #-1]
0xffff5820a394   148  stur x3, [x4, #7]
0xffff5820a398   152  stur x4, [x7, #15]
0xffff5820a39c   156  mov x3, x0
0xffff5820a3a0   160  cmp w3, #0x0 (0)
0xffff5820a3a4   164  b.le #+0x18 (addr 0xffff5820a3bc)
0xffff5820a3a8   168  sub w3, w3, #0x1 (1)
0xffff5820a3ac   172  ldr x5, pc+212 (addr 0x0000ffff5820a480)    ;; object: 0x39c04519 <the hole>
0xffff5820a3b0   176  add x6, x4, #0xf (15)
0xffff5820a3b4   180  str x5, [x6, w3, sxtw #3]
0xffff5820a3b8   184  b #-0x18 (addr 0xffff5820a3a0)
0xffff5820a3bc   188  ldr x3, [fp]
0xffff5820a3c0   192  ldur x5, [x3, #-8]
0xffff5820a3c4   196  movz x16, #0xe00000000
0xffff5820a3c8   200  cmp x5, x16
0xffff5820a3cc   204  csel x5, fp, x3, ne
0xffff5820a3d0   208  movz x3, #0x0
0xffff5820a3d4   212  cmp w0, w3
0xffff5820a3d8   216  b.le #+0x24 (addr 0xffff5820a3fc)
0xffff5820a3dc   220  sub w6, w0, w3
0xffff5820a3e0   224  add w6, w6, #0x1 (1)
0xffff5820a3e4   228  ldr x6, [x5, w6, uxtw #3]
0xffff5820a3e8   232  tbnz w6, #0, #+0xc8 (addr 0xffff5820a4b0)
0xffff5820a3ec   236  add x8, x4, #0xf (15)
0xffff5820a3f0   240  str x6, [x8, w3, sxtw #3]
0xffff5820a3f4   244  add w3, w3, #0x1 (1)
0xffff5820a3f8   248  b #-0x24 (addr 0xffff5820a3d4)
0xffff5820a3fc   252  add w0, w0, #0x1 (1)
0xffff5820a400   256  lsl x1, x0, #32
0xffff5820a404   260  mov x0, x7
0xffff5820a408   264  mov jssp, fp
0xffff5820a40c   268  ldp fp, lr, [jssp], #16
0xffff5820a410   272  add jssp, jssp, x1, lsr #29
0xffff5820a414   276  ret
0xffff5820a418   280  movz x7, #0x0
0xffff5820a41c   284  mov x16, lr
0xffff5820a420   288  ldr x17, pc+104 (addr 0x0000ffff5820a488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a424   292  blr x17
0xffff5820a428   296  lsl x0, x4, #32
0xffff5820a42c   300  movz x10, #0x0
0xffff5820a430   304  sub csp, jssp, #0x10 (16)
0xffff5820a434   308  stp x10, x0, [jssp, #-16]!
0xffff5820a438   312  movz x0, #0x2
0xffff5820a43c   316  movz x1, #0x5b88
0xffff5820a440   320  movk x1, #0xe2, lsl #16
0xffff5820a444   324  ldr x16, pc+76 (addr 0x0000ffff5820a490)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a448   328  blr x16
0xffff5820a44c   332  str x0, [jssp, #56]
0xffff5820a450   336  ldr x16, pc+72 (addr 0x0000ffff5820a498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a454   340  blr x16
0xffff5820a458   344  b #-0xf4 (addr 0xffff5820a364)
0xffff5820a45c   348  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff5820a460   352  d63f03e0       constant
0xffff5820a464   356  d503201f       constant
0xffff5820a468   360  39c04201       constant
0xffff5820a46c   364  00000000       constant
0xffff5820a470   368  39c04201       constant
0xffff5820a474   372  00000000       constant
0xffff5820a478   376  32b04259       constant
0xffff5820a47c   380  00000000       constant
0xffff5820a480   384  39c04519       constant
0xffff5820a484   388  00000000       constant
0xffff5820a488   392  58206820       constant
0xffff5820a48c   396  0000ffff       constant
0xffff5820a490   400  58206260       constant
0xffff5820a494   404  0000ffff       constant
0xffff5820a498   408  582068e0       constant
0xffff5820a49c   412  0000ffff       constant
0xffff5820a4a0   416  movz x16, #0x0
0xffff5820a4a4   420  bl #+0x14 (addr 0xffff5820a4b8)
0xffff5820a4a8   424  movz x16, #0x8
0xffff5820a4ac   428  bl #+0xc (addr 0xffff5820a4b8)
0xffff5820a4b0   432  movz x16, #0x10
0xffff5820a4b4   436  bl #+0x4 (addr 0xffff5820a4b8)
0xffff5820a4b8   440  ldr x17, pc+24 (addr 0x0000ffff5820a4d0)    ;; lazy deoptimization bailout 0
0xffff5820a4bc   444  add x17, x17, x16
0xffff5820a4c0   448  br x17
0xffff5820a4c4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820a4c8   456  d63f03e0       constant
0xffff5820a4cc   460  d503201f       constant
0xffff5820a4d0   464  58006000       constant
0xffff5820a4d4   468  0000ffff       constant


Safepoints (size = 21)
0xffff5820a44c   332  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff5820a374  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a37c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a38c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820a3ac  embedded object  (0x39c04519 <the hole>)
0xffff5820a420  code target (STUB)  (0xffff58206820)
0xffff5820a444  code target (STUB)  (0xffff58206260)
0xffff5820a450  code target (STUB)  (0xffff582068e0)
0xffff5820a45c  constant pool (size 68)
0xffff5820a4b8  runtime entry
0xffff5820a4c4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 698)
0xffff5820a560     0  movz x16, #0xa00000000
0xffff5820a564     4  sub csp, jssp, #0x10 (16)
0xffff5820a568     8  stp fp, lr, [jssp, #-16]!
0xffff5820a56c    12  mov fp, jssp
0xffff5820a570    16  sub csp, jssp, #0x8 (8)
0xffff5820a574    20  sub jssp, jssp, #0x8 (8)
0xffff5820a578    24  stur x16, [fp, #-8]
0xffff5820a57c    28  movz w16, #0x257f
0xffff5820a580    32  cmp w0, w16, lsl #3
0xffff5820a584    36  b.hs #+0x23c (addr 0xffff5820a7c0)
0xffff5820a588    40  lsl x3, x0, #32
0xffff5820a58c    44  lsl w4, w0, #3
0xffff5820a590    48  add w4, w4, #0x10 (16)
0xffff5820a594    52  cmp w4, #0x96000 (614400)
0xffff5820a598    56  b.hs #+0x230 (addr 0xffff5820a7c8)
0xffff5820a59c    60  movz x6, #0x92c0
0xffff5820a5a0    64  movk x6, #0x16e7, lsl #16
0xffff5820a5a4    68  ldp x7, x5, [x6]
0xffff5820a5a8    72  adds x16, x7, #0x30 (48)
0xffff5820a5ac    76  ccmp x16, x5, #nzCv, lo
0xffff5820a5b0    80  b.hi #+0x120 (addr 0xffff5820a6d0)
0xffff5820a5b4    84  str x16, [x6]
0xffff5820a5b8    88  orr x7, x7, #0x1
0xffff5820a5bc    92  ldur x5, [x1, #39]
0xffff5820a5c0    96  ldur x5, [x5, #39]
0xffff5820a5c4   100  movz x16, #0x17f
0xffff5820a5c8   104  ldr x5, [x5, x16]
0xffff5820a5cc   108  stur x5, [x7, #-1]
0xffff5820a5d0   112  ldr x5, pc+400 (addr 0x0000ffff5820a760)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a5d4   116  stur x5, [x7, #7]
0xffff5820a5d8   120  ldr x5, pc+400 (addr 0x0000ffff5820a768)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a5dc   124  stur x5, [x7, #15]
0xffff5820a5e0   128  stur x3, [x7, #23]
0xffff5820a5e4   132  add x5, x7, #0x20 (32)
0xffff5820a5e8   136  ldr x6, pc+392 (addr 0x0000ffff5820a770)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820a5ec   140  stur x6, [x5, #-1]
0xffff5820a5f0   144  stur x2, [x5, #7]
0xffff5820a5f4   148  ldur w5, [x2, #35]
0xffff5820a5f8   152  add w5, w5, #0x1 (1)
0xffff5820a5fc   156  lsl x5, x5, #32
0xffff5820a600   160  stur x5, [x2, #31]
0xffff5820a604   164  sxtw x4, w4
0xffff5820a608   168  movz x5, #0x92c0
0xffff5820a60c   172  movk x5, #0x16e7, lsl #16
0xffff5820a610   176  ldp x8, x16, [x5]
0xffff5820a614   180  adds x6, x8, x4
0xffff5820a618   184  ccmp x6, x16, #nzCv, lo
0xffff5820a61c   188  b.hi #+0xf8 (addr 0xffff5820a714)
0xffff5820a620   192  str x6, [x5]
0xffff5820a624   196  orr x8, x8, #0x1
0xffff5820a628   200  ldr x4, pc+336 (addr 0x0000ffff5820a778)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820a62c   204  stur x4, [x8, #-1]
0xffff5820a630   208  stur x3, [x8, #7]
0xffff5820a634   212  mov x3, x8
0xffff5820a638   216  stur x3, [x7, #15]
0xffff5820a63c   220  add x4, x7, #0xf (15)
0xffff5820a640   224  and x3, x7, #0xfffffffffff00000
0xffff5820a644   228  ldr x3, [x3, #8]
0xffff5820a648   232  tbz w3, #2, #+0xc (addr 0xffff5820a654)
0xffff5820a64c   236  ldr x16, pc+308 (addr 0x0000ffff5820a780)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff5820a650   240  blr x16
0xffff5820a654   244  mov x3, x0
0xffff5820a658   248  cmp w3, #0x0 (0)
0xffff5820a65c   252  b.le #+0x18 (addr 0xffff5820a674)
0xffff5820a660   256  sub w3, w3, #0x1 (1)
0xffff5820a664   260  ldr x4, pc+292 (addr 0x0000ffff5820a788)    ;; object: 0x39c04519 <the hole>
0xffff5820a668   264  add x5, x8, #0xf (15)
0xffff5820a66c   268  str x4, [x5, w3, sxtw #3]
0xffff5820a670   272  b #-0x18 (addr 0xffff5820a658)
0xffff5820a674   276  ldr x3, [fp]
0xffff5820a678   280  ldur x4, [x3, #-8]
0xffff5820a67c   284  movz x16, #0xe00000000
0xffff5820a680   288  cmp x4, x16
0xffff5820a684   292  csel x4, fp, x3, ne
0xffff5820a688   296  movz x3, #0x0
0xffff5820a68c   300  cmp w0, w3
0xffff5820a690   304  b.le #+0x24 (addr 0xffff5820a6b4)
0xffff5820a694   308  sub w5, w0, w3
0xffff5820a698   312  add w5, w5, #0x1 (1)
0xffff5820a69c   316  ldr x5, [x4, w5, uxtw #3]
0xffff5820a6a0   320  tbnz w5, #0, #+0x130 (addr 0xffff5820a7d0)
0xffff5820a6a4   324  add x6, x8, #0xf (15)
0xffff5820a6a8   328  str x5, [x6, w3, sxtw #3]
0xffff5820a6ac   332  add w3, w3, #0x1 (1)
0xffff5820a6b0   336  b #-0x24 (addr 0xffff5820a68c)
0xffff5820a6b4   340  add w0, w0, #0x1 (1)
0xffff5820a6b8   344  lsl x1, x0, #32
0xffff5820a6bc   348  mov x0, x7
0xffff5820a6c0   352  mov jssp, fp
0xffff5820a6c4   356  ldp fp, lr, [jssp], #16
0xffff5820a6c8   360  add jssp, jssp, x1, lsr #29
0xffff5820a6cc   364  ret
0xffff5820a6d0   368  movz x7, #0x0
0xffff5820a6d4   372  mov x16, lr
0xffff5820a6d8   376  ldr x17, pc+184 (addr 0x0000ffff5820a790)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a6dc   380  blr x17
0xffff5820a6e0   384  movz x0, #0x3000000000
0xffff5820a6e4   388  movz x10, #0x0
0xffff5820a6e8   392  sub csp, jssp, #0x10 (16)
0xffff5820a6ec   396  stp x10, x0, [jssp, #-16]!
0xffff5820a6f0   400  movz x0, #0x2
0xffff5820a6f4   404  movz x1, #0x5b88
0xffff5820a6f8   408  movk x1, #0xe2, lsl #16
0xffff5820a6fc   412  ldr x16, pc+156 (addr 0x0000ffff5820a798)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a700   416  blr x16
0xffff5820a704   420  str x0, [jssp, #56]
0xffff5820a708   424  ldr x16, pc+152 (addr 0x0000ffff5820a7a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a70c   428  blr x16
0xffff5820a710   432  b #-0x154 (addr 0xffff5820a5bc)
0xffff5820a714   436  movz x8, #0x0
0xffff5820a718   440  mov x16, lr
0xffff5820a71c   444  ldr x17, pc+140 (addr 0x0000ffff5820a7a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a720   448  blr x17
0xffff5820a724   452  lsl x0, x4, #32
0xffff5820a728   456  movz x10, #0x0
0xffff5820a72c   460  sub csp, jssp, #0x10 (16)
0xffff5820a730   464  stp x10, x0, [jssp, #-16]!
0xffff5820a734   468  movz x0, #0x2
0xffff5820a738   472  movz x1, #0x5b88
0xffff5820a73c   476  movk x1, #0xe2, lsl #16
0xffff5820a740   480  ldr x16, pc+112 (addr 0x0000ffff5820a7b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a744   484  blr x16
0xffff5820a748   488  str x0, [jssp, #64]
0xffff5820a74c   492  ldr x16, pc+108 (addr 0x0000ffff5820a7b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a750   496  blr x16
0xffff5820a754   500  b #-0x12c (addr 0xffff5820a628)
0xffff5820a758   504  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff5820a75c   508  d63f03e0       constant
0xffff5820a760   512  39c04201       constant
0xffff5820a764   516  00000000       constant
0xffff5820a768   520  39c04201       constant
0xffff5820a76c   524  00000000       constant
0xffff5820a770   528  32b05d81       constant
0xffff5820a774   532  00000000       constant
0xffff5820a778   536  32b04259       constant
0xffff5820a77c   540  00000000       constant
0xffff5820a780   544  58209800       constant
0xffff5820a784   548  0000ffff       constant
0xffff5820a788   552  39c04519       constant
0xffff5820a78c   556  00000000       constant
0xffff5820a790   560  58206820       constant
0xffff5820a794   564  0000ffff       constant
0xffff5820a798   568  58206260       constant
0xffff5820a79c   572  0000ffff       constant
0xffff5820a7a0   576  582068e0       constant
0xffff5820a7a4   580  0000ffff       constant
0xffff5820a7a8   584  58206820       constant
0xffff5820a7ac   588  0000ffff       constant
0xffff5820a7b0   592  58206260       constant
0xffff5820a7b4   596  0000ffff       constant
0xffff5820a7b8   600  582068e0       constant
0xffff5820a7bc   604  0000ffff       constant
0xffff5820a7c0   608  movz x16, #0x0
0xffff5820a7c4   612  bl #+0x14 (addr 0xffff5820a7d8)
0xffff5820a7c8   616  movz x16, #0x8
0xffff5820a7cc   620  bl #+0xc (addr 0xffff5820a7d8)
0xffff5820a7d0   624  movz x16, #0x10
0xffff5820a7d4   628  bl #+0x4 (addr 0xffff5820a7d8)
0xffff5820a7d8   632  ldr x17, pc+24 (addr 0x0000ffff5820a7f0)    ;; lazy deoptimization bailout 0
0xffff5820a7dc   636  add x17, x17, x16
0xffff5820a7e0   640  br x17
0xffff5820a7e4   644  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820a7e8   648  d63f03e0       constant
0xffff5820a7ec   652  d503201f       constant
0xffff5820a7f0   656  58006000       constant
0xffff5820a7f4   660  0000ffff       constant


Safepoints (size = 34)
0xffff5820a704   420  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff5820a748   488  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff5820a5d0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a5d8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a5e8  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820a628  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820a64c  code target (STUB)  (0xffff58209800)
0xffff5820a664  embedded object  (0x39c04519 <the hole>)
0xffff5820a6d8  code target (STUB)  (0xffff58206820)
0xffff5820a6fc  code target (STUB)  (0xffff58206260)
0xffff5820a708  code target (STUB)  (0xffff582068e0)
0xffff5820a71c  code target (STUB)  (0xffff58206820)
0xffff5820a740  code target (STUB)  (0xffff58206260)
0xffff5820a74c  code target (STUB)  (0xffff582068e0)
0xffff5820a758  constant pool (size 104)
0xffff5820a7d8  runtime entry
0xffff5820a7e4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 698)
0xffff5820a560     0  movz x16, #0xa00000000
0xffff5820a564     4  sub csp, jssp, #0x10 (16)
0xffff5820a568     8  stp fp, lr, [jssp, #-16]!
0xffff5820a56c    12  mov fp, jssp
0xffff5820a570    16  sub csp, jssp, #0x8 (8)
0xffff5820a574    20  sub jssp, jssp, #0x8 (8)
0xffff5820a578    24  stur x16, [fp, #-8]
0xffff5820a57c    28  movz w16, #0x257f
0xffff5820a580    32  cmp w0, w16, lsl #3
0xffff5820a584    36  b.hs #+0x23c (addr 0xffff5820a7c0)
0xffff5820a588    40  lsl x3, x0, #32
0xffff5820a58c    44  lsl w4, w0, #3
0xffff5820a590    48  add w4, w4, #0x10 (16)
0xffff5820a594    52  cmp w4, #0x96000 (614400)
0xffff5820a598    56  b.hs #+0x230 (addr 0xffff5820a7c8)
0xffff5820a59c    60  movz x6, #0x92c0
0xffff5820a5a0    64  movk x6, #0x16e7, lsl #16
0xffff5820a5a4    68  ldp x7, x5, [x6]
0xffff5820a5a8    72  adds x16, x7, #0x30 (48)
0xffff5820a5ac    76  ccmp x16, x5, #nzCv, lo
0xffff5820a5b0    80  b.hi #+0x120 (addr 0xffff5820a6d0)
0xffff5820a5b4    84  str x16, [x6]
0xffff5820a5b8    88  orr x7, x7, #0x1
0xffff5820a5bc    92  ldur x5, [x1, #39]
0xffff5820a5c0    96  ldur x5, [x5, #39]
0xffff5820a5c4   100  movz x16, #0x17f
0xffff5820a5c8   104  ldr x5, [x5, x16]
0xffff5820a5cc   108  stur x5, [x7, #-1]
0xffff5820a5d0   112  ldr x5, pc+400 (addr 0x0000ffff5820a760)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a5d4   116  stur x5, [x7, #7]
0xffff5820a5d8   120  ldr x5, pc+400 (addr 0x0000ffff5820a768)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a5dc   124  stur x5, [x7, #15]
0xffff5820a5e0   128  stur x3, [x7, #23]
0xffff5820a5e4   132  add x5, x7, #0x20 (32)
0xffff5820a5e8   136  ldr x6, pc+392 (addr 0x0000ffff5820a770)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820a5ec   140  stur x6, [x5, #-1]
0xffff5820a5f0   144  stur x2, [x5, #7]
0xffff5820a5f4   148  ldur w5, [x2, #35]
0xffff5820a5f8   152  add w5, w5, #0x1 (1)
0xffff5820a5fc   156  lsl x5, x5, #32
0xffff5820a600   160  stur x5, [x2, #31]
0xffff5820a604   164  sxtw x4, w4
0xffff5820a608   168  movz x5, #0x92c0
0xffff5820a60c   172  movk x5, #0x16e7, lsl #16
0xffff5820a610   176  ldp x8, x16, [x5]
0xffff5820a614   180  adds x6, x8, x4
0xffff5820a618   184  ccmp x6, x16, #nzCv, lo
0xffff5820a61c   188  b.hi #+0xf8 (addr 0xffff5820a714)
0xffff5820a620   192  str x6, [x5]
0xffff5820a624   196  orr x8, x8, #0x1
0xffff5820a628   200  ldr x4, pc+336 (addr 0x0000ffff5820a778)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820a62c   204  stur x4, [x8, #-1]
0xffff5820a630   208  stur x3, [x8, #7]
0xffff5820a634   212  mov x3, x8
0xffff5820a638   216  stur x3, [x7, #15]
0xffff5820a63c   220  add x4, x7, #0xf (15)
0xffff5820a640   224  and x3, x7, #0xfffffffffff00000
0xffff5820a644   228  ldr x3, [x3, #8]
0xffff5820a648   232  tbz w3, #2, #+0xc (addr 0xffff5820a654)
0xffff5820a64c   236  ldr x16, pc+308 (addr 0x0000ffff5820a780)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff5820a650   240  blr x16
0xffff5820a654   244  mov x3, x0
0xffff5820a658   248  cmp w3, #0x0 (0)
0xffff5820a65c   252  b.le #+0x18 (addr 0xffff5820a674)
0xffff5820a660   256  sub w3, w3, #0x1 (1)
0xffff5820a664   260  ldr x4, pc+292 (addr 0x0000ffff5820a788)    ;; object: 0x39c04519 <the hole>
0xffff5820a668   264  add x5, x8, #0xf (15)
0xffff5820a66c   268  str x4, [x5, w3, sxtw #3]
0xffff5820a670   272  b #-0x18 (addr 0xffff5820a658)
0xffff5820a674   276  ldr x3, [fp]
0xffff5820a678   280  ldur x4, [x3, #-8]
0xffff5820a67c   284  movz x16, #0xe00000000
0xffff5820a680   288  cmp x4, x16
0xffff5820a684   292  csel x4, fp, x3, ne
0xffff5820a688   296  movz x3, #0x0
0xffff5820a68c   300  cmp w0, w3
0xffff5820a690   304  b.le #+0x24 (addr 0xffff5820a6b4)
0xffff5820a694   308  sub w5, w0, w3
0xffff5820a698   312  add w5, w5, #0x1 (1)
0xffff5820a69c   316  ldr x5, [x4, w5, uxtw #3]
0xffff5820a6a0   320  tbnz w5, #0, #+0x130 (addr 0xffff5820a7d0)
0xffff5820a6a4   324  add x6, x8, #0xf (15)
0xffff5820a6a8   328  str x5, [x6, w3, sxtw #3]
0xffff5820a6ac   332  add w3, w3, #0x1 (1)
0xffff5820a6b0   336  b #-0x24 (addr 0xffff5820a68c)
0xffff5820a6b4   340  add w0, w0, #0x1 (1)
0xffff5820a6b8   344  lsl x1, x0, #32
0xffff5820a6bc   348  mov x0, x7
0xffff5820a6c0   352  mov jssp, fp
0xffff5820a6c4   356  ldp fp, lr, [jssp], #16
0xffff5820a6c8   360  add jssp, jssp, x1, lsr #29
0xffff5820a6cc   364  ret
0xffff5820a6d0   368  movz x7, #0x0
0xffff5820a6d4   372  mov x16, lr
0xffff5820a6d8   376  ldr x17, pc+184 (addr 0x0000ffff5820a790)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a6dc   380  blr x17
0xffff5820a6e0   384  movz x0, #0x3000000000
0xffff5820a6e4   388  movz x10, #0x0
0xffff5820a6e8   392  sub csp, jssp, #0x10 (16)
0xffff5820a6ec   396  stp x10, x0, [jssp, #-16]!
0xffff5820a6f0   400  movz x0, #0x2
0xffff5820a6f4   404  movz x1, #0x5b88
0xffff5820a6f8   408  movk x1, #0xe2, lsl #16
0xffff5820a6fc   412  ldr x16, pc+156 (addr 0x0000ffff5820a798)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a700   416  blr x16
0xffff5820a704   420  str x0, [jssp, #56]
0xffff5820a708   424  ldr x16, pc+152 (addr 0x0000ffff5820a7a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a70c   428  blr x16
0xffff5820a710   432  b #-0x154 (addr 0xffff5820a5bc)
0xffff5820a714   436  movz x8, #0x0
0xffff5820a718   440  mov x16, lr
0xffff5820a71c   444  ldr x17, pc+140 (addr 0x0000ffff5820a7a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a720   448  blr x17
0xffff5820a724   452  lsl x0, x4, #32
0xffff5820a728   456  movz x10, #0x0
0xffff5820a72c   460  sub csp, jssp, #0x10 (16)
0xffff5820a730   464  stp x10, x0, [jssp, #-16]!
0xffff5820a734   468  movz x0, #0x2
0xffff5820a738   472  movz x1, #0x5b88
0xffff5820a73c   476  movk x1, #0xe2, lsl #16
0xffff5820a740   480  ldr x16, pc+112 (addr 0x0000ffff5820a7b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a744   484  blr x16
0xffff5820a748   488  str x0, [jssp, #64]
0xffff5820a74c   492  ldr x16, pc+108 (addr 0x0000ffff5820a7b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a750   496  blr x16
0xffff5820a754   500  b #-0x12c (addr 0xffff5820a628)
0xffff5820a758   504  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff5820a75c   508  d63f03e0       constant
0xffff5820a760   512  39c04201       constant
0xffff5820a764   516  00000000       constant
0xffff5820a768   520  39c04201       constant
0xffff5820a76c   524  00000000       constant
0xffff5820a770   528  32b05d81       constant
0xffff5820a774   532  00000000       constant
0xffff5820a778   536  32b04259       constant
0xffff5820a77c   540  00000000       constant
0xffff5820a780   544  58209800       constant
0xffff5820a784   548  0000ffff       constant
0xffff5820a788   552  39c04519       constant
0xffff5820a78c   556  00000000       constant
0xffff5820a790   560  58206820       constant
0xffff5820a794   564  0000ffff       constant
0xffff5820a798   568  58206260       constant
0xffff5820a79c   572  0000ffff       constant
0xffff5820a7a0   576  582068e0       constant
0xffff5820a7a4   580  0000ffff       constant
0xffff5820a7a8   584  58206820       constant
0xffff5820a7ac   588  0000ffff       constant
0xffff5820a7b0   592  58206260       constant
0xffff5820a7b4   596  0000ffff       constant
0xffff5820a7b8   600  582068e0       constant
0xffff5820a7bc   604  0000ffff       constant
0xffff5820a7c0   608  movz x16, #0x0
0xffff5820a7c4   612  bl #+0x14 (addr 0xffff5820a7d8)
0xffff5820a7c8   616  movz x16, #0x8
0xffff5820a7cc   620  bl #+0xc (addr 0xffff5820a7d8)
0xffff5820a7d0   624  movz x16, #0x10
0xffff5820a7d4   628  bl #+0x4 (addr 0xffff5820a7d8)
0xffff5820a7d8   632  ldr x17, pc+24 (addr 0x0000ffff5820a7f0)    ;; lazy deoptimization bailout 0
0xffff5820a7dc   636  add x17, x17, x16
0xffff5820a7e0   640  br x17
0xffff5820a7e4   644  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820a7e8   648  d63f03e0       constant
0xffff5820a7ec   652  d503201f       constant
0xffff5820a7f0   656  58006000       constant
0xffff5820a7f4   660  0000ffff       constant


Safepoints (size = 34)
0xffff5820a704   420  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff5820a748   488  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff5820a5d0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a5d8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a5e8  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820a628  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820a64c  code target (STUB)  (0xffff58209800)
0xffff5820a664  embedded object  (0x39c04519 <the hole>)
0xffff5820a6d8  code target (STUB)  (0xffff58206820)
0xffff5820a6fc  code target (STUB)  (0xffff58206260)
0xffff5820a708  code target (STUB)  (0xffff582068e0)
0xffff5820a71c  code target (STUB)  (0xffff58206820)
0xffff5820a740  code target (STUB)  (0xffff58206260)
0xffff5820a74c  code target (STUB)  (0xffff582068e0)
0xffff5820a758  constant pool (size 104)
0xffff5820a7d8  runtime entry
0xffff5820a7e4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 501)
0xffff5820a880     0  movz x16, #0xa00000000
0xffff5820a884     4  sub csp, jssp, #0x10 (16)
0xffff5820a888     8  stp fp, lr, [jssp, #-16]!
0xffff5820a88c    12  mov fp, jssp
0xffff5820a890    16  sub csp, jssp, #0x8 (8)
0xffff5820a894    20  sub jssp, jssp, #0x8 (8)
0xffff5820a898    24  stur x16, [fp, #-8]
0xffff5820a89c    28  movz w16, #0x257f
0xffff5820a8a0    32  cmp w0, w16, lsl #3
0xffff5820a8a4    36  b.hs #+0x184 (addr 0xffff5820aa28)
0xffff5820a8a8    40  lsl x3, x0, #32
0xffff5820a8ac    44  lsl w4, w0, #3
0xffff5820a8b0    48  add w4, w4, #0x10 (16)
0xffff5820a8b4    52  cmp w4, #0x96000 (614400)
0xffff5820a8b8    56  b.hs #+0x178 (addr 0xffff5820aa30)
0xffff5820a8bc    60  add w4, w4, #0x20 (32)
0xffff5820a8c0    64  sxtw x4, w4
0xffff5820a8c4    68  movz x5, #0x92c0
0xffff5820a8c8    72  movk x5, #0x16e7, lsl #16
0xffff5820a8cc    76  ldp x7, x16, [x5]
0xffff5820a8d0    80  adds x6, x7, x4
0xffff5820a8d4    84  ccmp x6, x16, #nzCv, lo
0xffff5820a8d8    88  b.hi #+0xcc (addr 0xffff5820a9a4)
0xffff5820a8dc    92  str x6, [x5]
0xffff5820a8e0    96  orr x7, x7, #0x1
0xffff5820a8e4   100  movz w4, #0x0
0xffff5820a8e8   104  stur x4, [x7, #31]
0xffff5820a8ec   108  ldur x4, [x1, #39]
0xffff5820a8f0   112  ldur x4, [x4, #39]
0xffff5820a8f4   116  movz x16, #0x17f
0xffff5820a8f8   120  ldr x4, [x4, x16]
0xffff5820a8fc   124  stur x4, [x7, #-1]
0xffff5820a900   128  ldr x4, pc+240 (addr 0x0000ffff5820a9f0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a904   132  stur x4, [x7, #7]
0xffff5820a908   136  ldr x4, pc+240 (addr 0x0000ffff5820a9f8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a90c   140  stur x4, [x7, #15]
0xffff5820a910   144  stur x3, [x7, #23]
0xffff5820a914   148  add x4, x7, #0x20 (32)
0xffff5820a918   152  ldr x5, pc+232 (addr 0x0000ffff5820aa00)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820a91c   156  stur x5, [x4, #-1]
0xffff5820a920   160  stur x3, [x4, #7]
0xffff5820a924   164  stur x4, [x7, #15]
0xffff5820a928   168  mov x3, x0
0xffff5820a92c   172  cmp w3, #0x0 (0)
0xffff5820a930   176  b.le #+0x18 (addr 0xffff5820a948)
0xffff5820a934   180  sub w3, w3, #0x1 (1)
0xffff5820a938   184  ldr x5, pc+208 (addr 0x0000ffff5820aa08)    ;; object: 0x39c04519 <the hole>
0xffff5820a93c   188  add x6, x4, #0xf (15)
0xffff5820a940   192  str x5, [x6, w3, sxtw #3]
0xffff5820a944   196  b #-0x18 (addr 0xffff5820a92c)
0xffff5820a948   200  ldr x3, [fp]
0xffff5820a94c   204  ldur x5, [x3, #-8]
0xffff5820a950   208  movz x16, #0xe00000000
0xffff5820a954   212  cmp x5, x16
0xffff5820a958   216  csel x5, fp, x3, ne
0xffff5820a95c   220  movz x3, #0x0
0xffff5820a960   224  cmp w0, w3
0xffff5820a964   228  b.le #+0x24 (addr 0xffff5820a988)
0xffff5820a968   232  sub w6, w0, w3
0xffff5820a96c   236  add w6, w6, #0x1 (1)
0xffff5820a970   240  ldr x6, [x5, w6, uxtw #3]
0xffff5820a974   244  tbnz w6, #0, #+0xc4 (addr 0xffff5820aa38)
0xffff5820a978   248  add x8, x4, #0xf (15)
0xffff5820a97c   252  str x6, [x8, w3, sxtw #3]
0xffff5820a980   256  add w3, w3, #0x1 (1)
0xffff5820a984   260  b #-0x24 (addr 0xffff5820a960)
0xffff5820a988   264  add w0, w0, #0x1 (1)
0xffff5820a98c   268  lsl x1, x0, #32
0xffff5820a990   272  mov x0, x7
0xffff5820a994   276  mov jssp, fp
0xffff5820a998   280  ldp fp, lr, [jssp], #16
0xffff5820a99c   284  add jssp, jssp, x1, lsr #29
0xffff5820a9a0   288  ret
0xffff5820a9a4   292  movz x7, #0x0
0xffff5820a9a8   296  mov x16, lr
0xffff5820a9ac   300  ldr x17, pc+100 (addr 0x0000ffff5820aa10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a9b0   304  blr x17
0xffff5820a9b4   308  lsl x0, x4, #32
0xffff5820a9b8   312  movz x10, #0x0
0xffff5820a9bc   316  sub csp, jssp, #0x10 (16)
0xffff5820a9c0   320  stp x10, x0, [jssp, #-16]!
0xffff5820a9c4   324  movz x0, #0x2
0xffff5820a9c8   328  movz x1, #0x5b88
0xffff5820a9cc   332  movk x1, #0xe2, lsl #16
0xffff5820a9d0   336  ldr x16, pc+72 (addr 0x0000ffff5820aa18)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a9d4   340  blr x16
0xffff5820a9d8   344  str x0, [jssp, #56]
0xffff5820a9dc   348  ldr x16, pc+68 (addr 0x0000ffff5820aa20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a9e0   352  blr x16
0xffff5820a9e4   356  b #-0x100 (addr 0xffff5820a8e4)
0xffff5820a9e8   360  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff5820a9ec   364  d63f03e0       constant
0xffff5820a9f0   368  39c04201       constant
0xffff5820a9f4   372  00000000       constant
0xffff5820a9f8   376  39c04201       constant
0xffff5820a9fc   380  00000000       constant
0xffff5820aa00   384  32b04259       constant
0xffff5820aa04   388  00000000       constant
0xffff5820aa08   392  39c04519       constant
0xffff5820aa0c   396  00000000       constant
0xffff5820aa10   400  58206820       constant
0xffff5820aa14   404  0000ffff       constant
0xffff5820aa18   408  58206260       constant
0xffff5820aa1c   412  0000ffff       constant
0xffff5820aa20   416  582068e0       constant
0xffff5820aa24   420  0000ffff       constant
0xffff5820aa28   424  movz x16, #0x0
0xffff5820aa2c   428  bl #+0x14 (addr 0xffff5820aa40)
0xffff5820aa30   432  movz x16, #0x8
0xffff5820aa34   436  bl #+0xc (addr 0xffff5820aa40)
0xffff5820aa38   440  movz x16, #0x10
0xffff5820aa3c   444  bl #+0x4 (addr 0xffff5820aa40)
0xffff5820aa40   448  ldr x17, pc+24 (addr 0x0000ffff5820aa58)    ;; lazy deoptimization bailout 0
0xffff5820aa44   452  add x17, x17, x16
0xffff5820aa48   456  br x17
0xffff5820aa4c   460  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820aa50   464  d63f03e0       constant
0xffff5820aa54   468  d503201f       constant
0xffff5820aa58   472  58006000       constant
0xffff5820aa5c   476  0000ffff       constant


Safepoints (size = 21)
0xffff5820a9d8   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff5820a900  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a908  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a918  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820a938  embedded object  (0x39c04519 <the hole>)
0xffff5820a9ac  code target (STUB)  (0xffff58206820)
0xffff5820a9d0  code target (STUB)  (0xffff58206260)
0xffff5820a9dc  code target (STUB)  (0xffff582068e0)
0xffff5820a9e8  constant pool (size 64)
0xffff5820aa40  runtime entry
0xffff5820aa4c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 501)
0xffff5820a880     0  movz x16, #0xa00000000
0xffff5820a884     4  sub csp, jssp, #0x10 (16)
0xffff5820a888     8  stp fp, lr, [jssp, #-16]!
0xffff5820a88c    12  mov fp, jssp
0xffff5820a890    16  sub csp, jssp, #0x8 (8)
0xffff5820a894    20  sub jssp, jssp, #0x8 (8)
0xffff5820a898    24  stur x16, [fp, #-8]
0xffff5820a89c    28  movz w16, #0x257f
0xffff5820a8a0    32  cmp w0, w16, lsl #3
0xffff5820a8a4    36  b.hs #+0x184 (addr 0xffff5820aa28)
0xffff5820a8a8    40  lsl x3, x0, #32
0xffff5820a8ac    44  lsl w4, w0, #3
0xffff5820a8b0    48  add w4, w4, #0x10 (16)
0xffff5820a8b4    52  cmp w4, #0x96000 (614400)
0xffff5820a8b8    56  b.hs #+0x178 (addr 0xffff5820aa30)
0xffff5820a8bc    60  add w4, w4, #0x20 (32)
0xffff5820a8c0    64  sxtw x4, w4
0xffff5820a8c4    68  movz x5, #0x92c0
0xffff5820a8c8    72  movk x5, #0x16e7, lsl #16
0xffff5820a8cc    76  ldp x7, x16, [x5]
0xffff5820a8d0    80  adds x6, x7, x4
0xffff5820a8d4    84  ccmp x6, x16, #nzCv, lo
0xffff5820a8d8    88  b.hi #+0xcc (addr 0xffff5820a9a4)
0xffff5820a8dc    92  str x6, [x5]
0xffff5820a8e0    96  orr x7, x7, #0x1
0xffff5820a8e4   100  movz w4, #0x0
0xffff5820a8e8   104  stur x4, [x7, #31]
0xffff5820a8ec   108  ldur x4, [x1, #39]
0xffff5820a8f0   112  ldur x4, [x4, #39]
0xffff5820a8f4   116  movz x16, #0x17f
0xffff5820a8f8   120  ldr x4, [x4, x16]
0xffff5820a8fc   124  stur x4, [x7, #-1]
0xffff5820a900   128  ldr x4, pc+240 (addr 0x0000ffff5820a9f0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a904   132  stur x4, [x7, #7]
0xffff5820a908   136  ldr x4, pc+240 (addr 0x0000ffff5820a9f8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820a90c   140  stur x4, [x7, #15]
0xffff5820a910   144  stur x3, [x7, #23]
0xffff5820a914   148  add x4, x7, #0x20 (32)
0xffff5820a918   152  ldr x5, pc+232 (addr 0x0000ffff5820aa00)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820a91c   156  stur x5, [x4, #-1]
0xffff5820a920   160  stur x3, [x4, #7]
0xffff5820a924   164  stur x4, [x7, #15]
0xffff5820a928   168  mov x3, x0
0xffff5820a92c   172  cmp w3, #0x0 (0)
0xffff5820a930   176  b.le #+0x18 (addr 0xffff5820a948)
0xffff5820a934   180  sub w3, w3, #0x1 (1)
0xffff5820a938   184  ldr x5, pc+208 (addr 0x0000ffff5820aa08)    ;; object: 0x39c04519 <the hole>
0xffff5820a93c   188  add x6, x4, #0xf (15)
0xffff5820a940   192  str x5, [x6, w3, sxtw #3]
0xffff5820a944   196  b #-0x18 (addr 0xffff5820a92c)
0xffff5820a948   200  ldr x3, [fp]
0xffff5820a94c   204  ldur x5, [x3, #-8]
0xffff5820a950   208  movz x16, #0xe00000000
0xffff5820a954   212  cmp x5, x16
0xffff5820a958   216  csel x5, fp, x3, ne
0xffff5820a95c   220  movz x3, #0x0
0xffff5820a960   224  cmp w0, w3
0xffff5820a964   228  b.le #+0x24 (addr 0xffff5820a988)
0xffff5820a968   232  sub w6, w0, w3
0xffff5820a96c   236  add w6, w6, #0x1 (1)
0xffff5820a970   240  ldr x6, [x5, w6, uxtw #3]
0xffff5820a974   244  tbnz w6, #0, #+0xc4 (addr 0xffff5820aa38)
0xffff5820a978   248  add x8, x4, #0xf (15)
0xffff5820a97c   252  str x6, [x8, w3, sxtw #3]
0xffff5820a980   256  add w3, w3, #0x1 (1)
0xffff5820a984   260  b #-0x24 (addr 0xffff5820a960)
0xffff5820a988   264  add w0, w0, #0x1 (1)
0xffff5820a98c   268  lsl x1, x0, #32
0xffff5820a990   272  mov x0, x7
0xffff5820a994   276  mov jssp, fp
0xffff5820a998   280  ldp fp, lr, [jssp], #16
0xffff5820a99c   284  add jssp, jssp, x1, lsr #29
0xffff5820a9a0   288  ret
0xffff5820a9a4   292  movz x7, #0x0
0xffff5820a9a8   296  mov x16, lr
0xffff5820a9ac   300  ldr x17, pc+100 (addr 0x0000ffff5820aa10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820a9b0   304  blr x17
0xffff5820a9b4   308  lsl x0, x4, #32
0xffff5820a9b8   312  movz x10, #0x0
0xffff5820a9bc   316  sub csp, jssp, #0x10 (16)
0xffff5820a9c0   320  stp x10, x0, [jssp, #-16]!
0xffff5820a9c4   324  movz x0, #0x2
0xffff5820a9c8   328  movz x1, #0x5b88
0xffff5820a9cc   332  movk x1, #0xe2, lsl #16
0xffff5820a9d0   336  ldr x16, pc+72 (addr 0x0000ffff5820aa18)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820a9d4   340  blr x16
0xffff5820a9d8   344  str x0, [jssp, #56]
0xffff5820a9dc   348  ldr x16, pc+68 (addr 0x0000ffff5820aa20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820a9e0   352  blr x16
0xffff5820a9e4   356  b #-0x100 (addr 0xffff5820a8e4)
0xffff5820a9e8   360  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff5820a9ec   364  d63f03e0       constant
0xffff5820a9f0   368  39c04201       constant
0xffff5820a9f4   372  00000000       constant
0xffff5820a9f8   376  39c04201       constant
0xffff5820a9fc   380  00000000       constant
0xffff5820aa00   384  32b04259       constant
0xffff5820aa04   388  00000000       constant
0xffff5820aa08   392  39c04519       constant
0xffff5820aa0c   396  00000000       constant
0xffff5820aa10   400  58206820       constant
0xffff5820aa14   404  0000ffff       constant
0xffff5820aa18   408  58206260       constant
0xffff5820aa1c   412  0000ffff       constant
0xffff5820aa20   416  582068e0       constant
0xffff5820aa24   420  0000ffff       constant
0xffff5820aa28   424  movz x16, #0x0
0xffff5820aa2c   428  bl #+0x14 (addr 0xffff5820aa40)
0xffff5820aa30   432  movz x16, #0x8
0xffff5820aa34   436  bl #+0xc (addr 0xffff5820aa40)
0xffff5820aa38   440  movz x16, #0x10
0xffff5820aa3c   444  bl #+0x4 (addr 0xffff5820aa40)
0xffff5820aa40   448  ldr x17, pc+24 (addr 0x0000ffff5820aa58)    ;; lazy deoptimization bailout 0
0xffff5820aa44   452  add x17, x17, x16
0xffff5820aa48   456  br x17
0xffff5820aa4c   460  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820aa50   464  d63f03e0       constant
0xffff5820aa54   468  d503201f       constant
0xffff5820aa58   472  58006000       constant
0xffff5820aa5c   476  0000ffff       constant


Safepoints (size = 21)
0xffff5820a9d8   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff5820a900  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a908  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820a918  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820a938  embedded object  (0x39c04519 <the hole>)
0xffff5820a9ac  code target (STUB)  (0xffff58206820)
0xffff5820a9d0  code target (STUB)  (0xffff58206260)
0xffff5820a9dc  code target (STUB)  (0xffff582068e0)
0xffff5820a9e8  constant pool (size 64)
0xffff5820aa40  runtime entry
0xffff5820aa4c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 493)
0xffff5820aae0     0  movz x16, #0xa00000000
0xffff5820aae4     4  sub csp, jssp, #0x10 (16)
0xffff5820aae8     8  stp fp, lr, [jssp, #-16]!
0xffff5820aaec    12  mov fp, jssp
0xffff5820aaf0    16  sub csp, jssp, #0x8 (8)
0xffff5820aaf4    20  sub jssp, jssp, #0x8 (8)
0xffff5820aaf8    24  stur x16, [fp, #-8]
0xffff5820aafc    28  movz w16, #0x257f
0xffff5820ab00    32  cmp w0, w16, lsl #3
0xffff5820ab04    36  b.hs #+0x17c (addr 0xffff5820ac80)
0xffff5820ab08    40  lsl x3, x0, #32
0xffff5820ab0c    44  lsl w4, w0, #3
0xffff5820ab10    48  add w4, w4, #0x10 (16)
0xffff5820ab14    52  cmp w4, #0x96000 (614400)
0xffff5820ab18    56  b.hs #+0x170 (addr 0xffff5820ac88)
0xffff5820ab1c    60  add w4, w4, #0x20 (32)
0xffff5820ab20    64  sxtw x4, w4
0xffff5820ab24    68  movz x5, #0x92c0
0xffff5820ab28    72  movk x5, #0x16e7, lsl #16
0xffff5820ab2c    76  ldp x7, x16, [x5]
0xffff5820ab30    80  adds x6, x7, x4
0xffff5820ab34    84  ccmp x6, x16, #nzCv, lo
0xffff5820ab38    88  b.hi #+0xcc (addr 0xffff5820ac04)
0xffff5820ab3c    92  str x6, [x5]
0xffff5820ab40    96  orr x7, x7, #0x1
0xffff5820ab44   100  movz w4, #0x0
0xffff5820ab48   104  stur x4, [x7, #31]
0xffff5820ab4c   108  ldur x4, [x1, #39]
0xffff5820ab50   112  ldur x4, [x4, #39]
0xffff5820ab54   116  movz x16, #0x197
0xffff5820ab58   120  ldr x4, [x4, x16]
0xffff5820ab5c   124  stur x4, [x7, #-1]
0xffff5820ab60   128  ldr x4, pc+240 (addr 0x0000ffff5820ac50)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820ab64   132  stur x4, [x7, #7]
0xffff5820ab68   136  ldr x4, pc+240 (addr 0x0000ffff5820ac58)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820ab6c   140  stur x4, [x7, #15]
0xffff5820ab70   144  stur x3, [x7, #23]
0xffff5820ab74   148  add x4, x7, #0x20 (32)
0xffff5820ab78   152  ldr x5, pc+232 (addr 0x0000ffff5820ac60)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820ab7c   156  stur x5, [x4, #-1]
0xffff5820ab80   160  stur x3, [x4, #7]
0xffff5820ab84   164  stur x4, [x7, #15]
0xffff5820ab88   168  ldr x3, [fp]
0xffff5820ab8c   172  ldur x5, [x3, #-8]
0xffff5820ab90   176  movz x16, #0xe00000000
0xffff5820ab94   180  cmp x5, x16
0xffff5820ab98   184  csel x5, fp, x3, ne
0xffff5820ab9c   188  movz x3, #0x0
0xffff5820aba0   192  cmp w0, w3
0xffff5820aba4   196  b.le #+0x44 (addr 0xffff5820abe8)
0xffff5820aba8   200  sub w6, w0, w3
0xffff5820abac   204  add w6, w6, #0x1 (1)
0xffff5820abb0   208  ldr x6, [x5, w6, uxtw #3]
0xffff5820abb4   212  tbz w6, #0, #+0x1c (addr 0xffff5820abd0)
0xffff5820abb8   216  ldur x16, [x6, #-1]
0xffff5820abbc   220  ldr x17, [x26, #120]
0xffff5820abc0   224  cmp x16, x17
0xffff5820abc4   228  b.ne #+0xcc (addr 0xffff5820ac90)
0xffff5820abc8   232  ldur d0, [x6, #7]
0xffff5820abcc   236  b #+0x8 (addr 0xffff5820abd4)
0xffff5820abd0   240  scvtf d0, x6, #32
0xffff5820abd4   244  add x6, x4, #0xf (15)
0xffff5820abd8   248  fsub d29, d0, d15
0xffff5820abdc   252  str d29, [x6, w3, sxtw #3]
0xffff5820abe0   256  add w3, w3, #0x1 (1)
0xffff5820abe4   260  b #-0x44 (addr 0xffff5820aba0)
0xffff5820abe8   264  add w0, w0, #0x1 (1)
0xffff5820abec   268  lsl x1, x0, #32
0xffff5820abf0   272  mov x0, x7
0xffff5820abf4   276  mov jssp, fp
0xffff5820abf8   280  ldp fp, lr, [jssp], #16
0xffff5820abfc   284  add jssp, jssp, x1, lsr #29
0xffff5820ac00   288  ret
0xffff5820ac04   292  movz x7, #0x0
0xffff5820ac08   296  mov x16, lr
0xffff5820ac0c   300  ldr x17, pc+92 (addr 0x0000ffff5820ac68)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820ac10   304  blr x17
0xffff5820ac14   308  lsl x0, x4, #32
0xffff5820ac18   312  movz x10, #0x100000000
0xffff5820ac1c   316  sub csp, jssp, #0x10 (16)
0xffff5820ac20   320  stp x10, x0, [jssp, #-16]!
0xffff5820ac24   324  movz x0, #0x2
0xffff5820ac28   328  movz x1, #0x5b88
0xffff5820ac2c   332  movk x1, #0xe2, lsl #16
0xffff5820ac30   336  ldr x16, pc+64 (addr 0x0000ffff5820ac70)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820ac34   340  blr x16
0xffff5820ac38   344  str x0, [jssp, #56]
0xffff5820ac3c   348  ldr x16, pc+60 (addr 0x0000ffff5820ac78)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820ac40   352  blr x16
0xffff5820ac44   356  b #-0x100 (addr 0xffff5820ab44)
0xffff5820ac48   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5820ac4c   364  d63f03e0       constant
0xffff5820ac50   368  39c04201       constant
0xffff5820ac54   372  00000000       constant
0xffff5820ac58   376  39c04201       constant
0xffff5820ac5c   380  00000000       constant
0xffff5820ac60   384  32b052d9       constant
0xffff5820ac64   388  00000000       constant
0xffff5820ac68   392  58206820       constant
0xffff5820ac6c   396  0000ffff       constant
0xffff5820ac70   400  58206260       constant
0xffff5820ac74   404  0000ffff       constant
0xffff5820ac78   408  582068e0       constant
0xffff5820ac7c   412  0000ffff       constant
0xffff5820ac80   416  movz x16, #0x0
0xffff5820ac84   420  bl #+0x14 (addr 0xffff5820ac98)
0xffff5820ac88   424  movz x16, #0x8
0xffff5820ac8c   428  bl #+0xc (addr 0xffff5820ac98)
0xffff5820ac90   432  movz x16, #0x10
0xffff5820ac94   436  bl #+0x4 (addr 0xffff5820ac98)
0xffff5820ac98   440  ldr x17, pc+24 (addr 0x0000ffff5820acb0)    ;; lazy deoptimization bailout 0
0xffff5820ac9c   444  add x17, x17, x16
0xffff5820aca0   448  br x17
0xffff5820aca4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820aca8   456  d63f03e0       constant
0xffff5820acac   460  d503201f       constant
0xffff5820acb0   464  58006000       constant
0xffff5820acb4   468  0000ffff       constant


Safepoints (size = 21)
0xffff5820ac38   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff5820ab60  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820ab68  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820ab78  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820ac0c  code target (STUB)  (0xffff58206820)
0xffff5820ac30  code target (STUB)  (0xffff58206260)
0xffff5820ac3c  code target (STUB)  (0xffff582068e0)
0xffff5820ac48  constant pool (size 56)
0xffff5820ac98  runtime entry
0xffff5820aca4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 493)
0xffff5820aae0     0  movz x16, #0xa00000000
0xffff5820aae4     4  sub csp, jssp, #0x10 (16)
0xffff5820aae8     8  stp fp, lr, [jssp, #-16]!
0xffff5820aaec    12  mov fp, jssp
0xffff5820aaf0    16  sub csp, jssp, #0x8 (8)
0xffff5820aaf4    20  sub jssp, jssp, #0x8 (8)
0xffff5820aaf8    24  stur x16, [fp, #-8]
0xffff5820aafc    28  movz w16, #0x257f
0xffff5820ab00    32  cmp w0, w16, lsl #3
0xffff5820ab04    36  b.hs #+0x17c (addr 0xffff5820ac80)
0xffff5820ab08    40  lsl x3, x0, #32
0xffff5820ab0c    44  lsl w4, w0, #3
0xffff5820ab10    48  add w4, w4, #0x10 (16)
0xffff5820ab14    52  cmp w4, #0x96000 (614400)
0xffff5820ab18    56  b.hs #+0x170 (addr 0xffff5820ac88)
0xffff5820ab1c    60  add w4, w4, #0x20 (32)
0xffff5820ab20    64  sxtw x4, w4
0xffff5820ab24    68  movz x5, #0x92c0
0xffff5820ab28    72  movk x5, #0x16e7, lsl #16
0xffff5820ab2c    76  ldp x7, x16, [x5]
0xffff5820ab30    80  adds x6, x7, x4
0xffff5820ab34    84  ccmp x6, x16, #nzCv, lo
0xffff5820ab38    88  b.hi #+0xcc (addr 0xffff5820ac04)
0xffff5820ab3c    92  str x6, [x5]
0xffff5820ab40    96  orr x7, x7, #0x1
0xffff5820ab44   100  movz w4, #0x0
0xffff5820ab48   104  stur x4, [x7, #31]
0xffff5820ab4c   108  ldur x4, [x1, #39]
0xffff5820ab50   112  ldur x4, [x4, #39]
0xffff5820ab54   116  movz x16, #0x197
0xffff5820ab58   120  ldr x4, [x4, x16]
0xffff5820ab5c   124  stur x4, [x7, #-1]
0xffff5820ab60   128  ldr x4, pc+240 (addr 0x0000ffff5820ac50)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820ab64   132  stur x4, [x7, #7]
0xffff5820ab68   136  ldr x4, pc+240 (addr 0x0000ffff5820ac58)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820ab6c   140  stur x4, [x7, #15]
0xffff5820ab70   144  stur x3, [x7, #23]
0xffff5820ab74   148  add x4, x7, #0x20 (32)
0xffff5820ab78   152  ldr x5, pc+232 (addr 0x0000ffff5820ac60)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820ab7c   156  stur x5, [x4, #-1]
0xffff5820ab80   160  stur x3, [x4, #7]
0xffff5820ab84   164  stur x4, [x7, #15]
0xffff5820ab88   168  ldr x3, [fp]
0xffff5820ab8c   172  ldur x5, [x3, #-8]
0xffff5820ab90   176  movz x16, #0xe00000000
0xffff5820ab94   180  cmp x5, x16
0xffff5820ab98   184  csel x5, fp, x3, ne
0xffff5820ab9c   188  movz x3, #0x0
0xffff5820aba0   192  cmp w0, w3
0xffff5820aba4   196  b.le #+0x44 (addr 0xffff5820abe8)
0xffff5820aba8   200  sub w6, w0, w3
0xffff5820abac   204  add w6, w6, #0x1 (1)
0xffff5820abb0   208  ldr x6, [x5, w6, uxtw #3]
0xffff5820abb4   212  tbz w6, #0, #+0x1c (addr 0xffff5820abd0)
0xffff5820abb8   216  ldur x16, [x6, #-1]
0xffff5820abbc   220  ldr x17, [x26, #120]
0xffff5820abc0   224  cmp x16, x17
0xffff5820abc4   228  b.ne #+0xcc (addr 0xffff5820ac90)
0xffff5820abc8   232  ldur d0, [x6, #7]
0xffff5820abcc   236  b #+0x8 (addr 0xffff5820abd4)
0xffff5820abd0   240  scvtf d0, x6, #32
0xffff5820abd4   244  add x6, x4, #0xf (15)
0xffff5820abd8   248  fsub d29, d0, d15
0xffff5820abdc   252  str d29, [x6, w3, sxtw #3]
0xffff5820abe0   256  add w3, w3, #0x1 (1)
0xffff5820abe4   260  b #-0x44 (addr 0xffff5820aba0)
0xffff5820abe8   264  add w0, w0, #0x1 (1)
0xffff5820abec   268  lsl x1, x0, #32
0xffff5820abf0   272  mov x0, x7
0xffff5820abf4   276  mov jssp, fp
0xffff5820abf8   280  ldp fp, lr, [jssp], #16
0xffff5820abfc   284  add jssp, jssp, x1, lsr #29
0xffff5820ac00   288  ret
0xffff5820ac04   292  movz x7, #0x0
0xffff5820ac08   296  mov x16, lr
0xffff5820ac0c   300  ldr x17, pc+92 (addr 0x0000ffff5820ac68)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820ac10   304  blr x17
0xffff5820ac14   308  lsl x0, x4, #32
0xffff5820ac18   312  movz x10, #0x100000000
0xffff5820ac1c   316  sub csp, jssp, #0x10 (16)
0xffff5820ac20   320  stp x10, x0, [jssp, #-16]!
0xffff5820ac24   324  movz x0, #0x2
0xffff5820ac28   328  movz x1, #0x5b88
0xffff5820ac2c   332  movk x1, #0xe2, lsl #16
0xffff5820ac30   336  ldr x16, pc+64 (addr 0x0000ffff5820ac70)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820ac34   340  blr x16
0xffff5820ac38   344  str x0, [jssp, #56]
0xffff5820ac3c   348  ldr x16, pc+60 (addr 0x0000ffff5820ac78)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820ac40   352  blr x16
0xffff5820ac44   356  b #-0x100 (addr 0xffff5820ab44)
0xffff5820ac48   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5820ac4c   364  d63f03e0       constant
0xffff5820ac50   368  39c04201       constant
0xffff5820ac54   372  00000000       constant
0xffff5820ac58   376  39c04201       constant
0xffff5820ac5c   380  00000000       constant
0xffff5820ac60   384  32b052d9       constant
0xffff5820ac64   388  00000000       constant
0xffff5820ac68   392  58206820       constant
0xffff5820ac6c   396  0000ffff       constant
0xffff5820ac70   400  58206260       constant
0xffff5820ac74   404  0000ffff       constant
0xffff5820ac78   408  582068e0       constant
0xffff5820ac7c   412  0000ffff       constant
0xffff5820ac80   416  movz x16, #0x0
0xffff5820ac84   420  bl #+0x14 (addr 0xffff5820ac98)
0xffff5820ac88   424  movz x16, #0x8
0xffff5820ac8c   428  bl #+0xc (addr 0xffff5820ac98)
0xffff5820ac90   432  movz x16, #0x10
0xffff5820ac94   436  bl #+0x4 (addr 0xffff5820ac98)
0xffff5820ac98   440  ldr x17, pc+24 (addr 0x0000ffff5820acb0)    ;; lazy deoptimization bailout 0
0xffff5820ac9c   444  add x17, x17, x16
0xffff5820aca0   448  br x17
0xffff5820aca4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820aca8   456  d63f03e0       constant
0xffff5820acac   460  d503201f       constant
0xffff5820acb0   464  58006000       constant
0xffff5820acb4   468  0000ffff       constant


Safepoints (size = 21)
0xffff5820ac38   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff5820ab60  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820ab68  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820ab78  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820ac0c  code target (STUB)  (0xffff58206820)
0xffff5820ac30  code target (STUB)  (0xffff58206260)
0xffff5820ac3c  code target (STUB)  (0xffff582068e0)
0xffff5820ac48  constant pool (size 56)
0xffff5820ac98  runtime entry
0xffff5820aca4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 493)
0xffff5820ad40     0  movz x16, #0xa00000000
0xffff5820ad44     4  sub csp, jssp, #0x10 (16)
0xffff5820ad48     8  stp fp, lr, [jssp, #-16]!
0xffff5820ad4c    12  mov fp, jssp
0xffff5820ad50    16  sub csp, jssp, #0x8 (8)
0xffff5820ad54    20  sub jssp, jssp, #0x8 (8)
0xffff5820ad58    24  stur x16, [fp, #-8]
0xffff5820ad5c    28  movz w16, #0x257f
0xffff5820ad60    32  cmp w0, w16, lsl #3
0xffff5820ad64    36  b.hs #+0x17c (addr 0xffff5820aee0)
0xffff5820ad68    40  lsl x3, x0, #32
0xffff5820ad6c    44  lsl w4, w0, #3
0xffff5820ad70    48  add w4, w4, #0x10 (16)
0xffff5820ad74    52  cmp w4, #0x96000 (614400)
0xffff5820ad78    56  b.hs #+0x170 (addr 0xffff5820aee8)
0xffff5820ad7c    60  add w4, w4, #0x20 (32)
0xffff5820ad80    64  sxtw x4, w4
0xffff5820ad84    68  movz x5, #0x92c0
0xffff5820ad88    72  movk x5, #0x16e7, lsl #16
0xffff5820ad8c    76  ldp x7, x16, [x5]
0xffff5820ad90    80  adds x6, x7, x4
0xffff5820ad94    84  ccmp x6, x16, #nzCv, lo
0xffff5820ad98    88  b.hi #+0xcc (addr 0xffff5820ae64)
0xffff5820ad9c    92  str x6, [x5]
0xffff5820ada0    96  orr x7, x7, #0x1
0xffff5820ada4   100  movz w4, #0x0
0xffff5820ada8   104  stur x4, [x7, #31]
0xffff5820adac   108  ldur x4, [x1, #39]
0xffff5820adb0   112  ldur x4, [x4, #39]
0xffff5820adb4   116  movz x16, #0x19f
0xffff5820adb8   120  ldr x4, [x4, x16]
0xffff5820adbc   124  stur x4, [x7, #-1]
0xffff5820adc0   128  ldr x4, pc+240 (addr 0x0000ffff5820aeb0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820adc4   132  stur x4, [x7, #7]
0xffff5820adc8   136  ldr x4, pc+240 (addr 0x0000ffff5820aeb8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820adcc   140  stur x4, [x7, #15]
0xffff5820add0   144  stur x3, [x7, #23]
0xffff5820add4   148  add x4, x7, #0x20 (32)
0xffff5820add8   152  ldr x5, pc+232 (addr 0x0000ffff5820aec0)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820addc   156  stur x5, [x4, #-1]
0xffff5820ade0   160  stur x3, [x4, #7]
0xffff5820ade4   164  stur x4, [x7, #15]
0xffff5820ade8   168  ldr x3, [fp]
0xffff5820adec   172  ldur x5, [x3, #-8]
0xffff5820adf0   176  movz x16, #0xe00000000
0xffff5820adf4   180  cmp x5, x16
0xffff5820adf8   184  csel x5, fp, x3, ne
0xffff5820adfc   188  movz x3, #0x0
0xffff5820ae00   192  cmp w0, w3
0xffff5820ae04   196  b.le #+0x44 (addr 0xffff5820ae48)
0xffff5820ae08   200  sub w6, w0, w3
0xffff5820ae0c   204  add w6, w6, #0x1 (1)
0xffff5820ae10   208  ldr x6, [x5, w6, uxtw #3]
0xffff5820ae14   212  tbz w6, #0, #+0x1c (addr 0xffff5820ae30)
0xffff5820ae18   216  ldur x16, [x6, #-1]
0xffff5820ae1c   220  ldr x17, [x26, #120]
0xffff5820ae20   224  cmp x16, x17
0xffff5820ae24   228  b.ne #+0xcc (addr 0xffff5820aef0)
0xffff5820ae28   232  ldur d0, [x6, #7]
0xffff5820ae2c   236  b #+0x8 (addr 0xffff5820ae34)
0xffff5820ae30   240  scvtf d0, x6, #32
0xffff5820ae34   244  add x6, x4, #0xf (15)
0xffff5820ae38   248  fsub d29, d0, d15
0xffff5820ae3c   252  str d29, [x6, w3, sxtw #3]
0xffff5820ae40   256  add w3, w3, #0x1 (1)
0xffff5820ae44   260  b #-0x44 (addr 0xffff5820ae00)
0xffff5820ae48   264  add w0, w0, #0x1 (1)
0xffff5820ae4c   268  lsl x1, x0, #32
0xffff5820ae50   272  mov x0, x7
0xffff5820ae54   276  mov jssp, fp
0xffff5820ae58   280  ldp fp, lr, [jssp], #16
0xffff5820ae5c   284  add jssp, jssp, x1, lsr #29
0xffff5820ae60   288  ret
0xffff5820ae64   292  movz x7, #0x0
0xffff5820ae68   296  mov x16, lr
0xffff5820ae6c   300  ldr x17, pc+92 (addr 0x0000ffff5820aec8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820ae70   304  blr x17
0xffff5820ae74   308  lsl x0, x4, #32
0xffff5820ae78   312  movz x10, #0x100000000
0xffff5820ae7c   316  sub csp, jssp, #0x10 (16)
0xffff5820ae80   320  stp x10, x0, [jssp, #-16]!
0xffff5820ae84   324  movz x0, #0x2
0xffff5820ae88   328  movz x1, #0x5b88
0xffff5820ae8c   332  movk x1, #0xe2, lsl #16
0xffff5820ae90   336  ldr x16, pc+64 (addr 0x0000ffff5820aed0)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820ae94   340  blr x16
0xffff5820ae98   344  str x0, [jssp, #56]
0xffff5820ae9c   348  ldr x16, pc+60 (addr 0x0000ffff5820aed8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820aea0   352  blr x16
0xffff5820aea4   356  b #-0x100 (addr 0xffff5820ada4)
0xffff5820aea8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5820aeac   364  d63f03e0       constant
0xffff5820aeb0   368  39c04201       constant
0xffff5820aeb4   372  00000000       constant
0xffff5820aeb8   376  39c04201       constant
0xffff5820aebc   380  00000000       constant
0xffff5820aec0   384  32b052d9       constant
0xffff5820aec4   388  00000000       constant
0xffff5820aec8   392  58206820       constant
0xffff5820aecc   396  0000ffff       constant
0xffff5820aed0   400  58206260       constant
0xffff5820aed4   404  0000ffff       constant
0xffff5820aed8   408  582068e0       constant
0xffff5820aedc   412  0000ffff       constant
0xffff5820aee0   416  movz x16, #0x0
0xffff5820aee4   420  bl #+0x14 (addr 0xffff5820aef8)
0xffff5820aee8   424  movz x16, #0x8
0xffff5820aeec   428  bl #+0xc (addr 0xffff5820aef8)
0xffff5820aef0   432  movz x16, #0x10
0xffff5820aef4   436  bl #+0x4 (addr 0xffff5820aef8)
0xffff5820aef8   440  ldr x17, pc+24 (addr 0x0000ffff5820af10)    ;; lazy deoptimization bailout 0
0xffff5820aefc   444  add x17, x17, x16
0xffff5820af00   448  br x17
0xffff5820af04   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820af08   456  d63f03e0       constant
0xffff5820af0c   460  d503201f       constant
0xffff5820af10   464  58006000       constant
0xffff5820af14   468  0000ffff       constant


Safepoints (size = 21)
0xffff5820ae98   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff5820adc0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820adc8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820add8  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820ae6c  code target (STUB)  (0xffff58206820)
0xffff5820ae90  code target (STUB)  (0xffff58206260)
0xffff5820ae9c  code target (STUB)  (0xffff582068e0)
0xffff5820aea8  constant pool (size 56)
0xffff5820aef8  runtime entry
0xffff5820af04  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 493)
0xffff5820ad40     0  movz x16, #0xa00000000
0xffff5820ad44     4  sub csp, jssp, #0x10 (16)
0xffff5820ad48     8  stp fp, lr, [jssp, #-16]!
0xffff5820ad4c    12  mov fp, jssp
0xffff5820ad50    16  sub csp, jssp, #0x8 (8)
0xffff5820ad54    20  sub jssp, jssp, #0x8 (8)
0xffff5820ad58    24  stur x16, [fp, #-8]
0xffff5820ad5c    28  movz w16, #0x257f
0xffff5820ad60    32  cmp w0, w16, lsl #3
0xffff5820ad64    36  b.hs #+0x17c (addr 0xffff5820aee0)
0xffff5820ad68    40  lsl x3, x0, #32
0xffff5820ad6c    44  lsl w4, w0, #3
0xffff5820ad70    48  add w4, w4, #0x10 (16)
0xffff5820ad74    52  cmp w4, #0x96000 (614400)
0xffff5820ad78    56  b.hs #+0x170 (addr 0xffff5820aee8)
0xffff5820ad7c    60  add w4, w4, #0x20 (32)
0xffff5820ad80    64  sxtw x4, w4
0xffff5820ad84    68  movz x5, #0x92c0
0xffff5820ad88    72  movk x5, #0x16e7, lsl #16
0xffff5820ad8c    76  ldp x7, x16, [x5]
0xffff5820ad90    80  adds x6, x7, x4
0xffff5820ad94    84  ccmp x6, x16, #nzCv, lo
0xffff5820ad98    88  b.hi #+0xcc (addr 0xffff5820ae64)
0xffff5820ad9c    92  str x6, [x5]
0xffff5820ada0    96  orr x7, x7, #0x1
0xffff5820ada4   100  movz w4, #0x0
0xffff5820ada8   104  stur x4, [x7, #31]
0xffff5820adac   108  ldur x4, [x1, #39]
0xffff5820adb0   112  ldur x4, [x4, #39]
0xffff5820adb4   116  movz x16, #0x19f
0xffff5820adb8   120  ldr x4, [x4, x16]
0xffff5820adbc   124  stur x4, [x7, #-1]
0xffff5820adc0   128  ldr x4, pc+240 (addr 0x0000ffff5820aeb0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820adc4   132  stur x4, [x7, #7]
0xffff5820adc8   136  ldr x4, pc+240 (addr 0x0000ffff5820aeb8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820adcc   140  stur x4, [x7, #15]
0xffff5820add0   144  stur x3, [x7, #23]
0xffff5820add4   148  add x4, x7, #0x20 (32)
0xffff5820add8   152  ldr x5, pc+232 (addr 0x0000ffff5820aec0)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820addc   156  stur x5, [x4, #-1]
0xffff5820ade0   160  stur x3, [x4, #7]
0xffff5820ade4   164  stur x4, [x7, #15]
0xffff5820ade8   168  ldr x3, [fp]
0xffff5820adec   172  ldur x5, [x3, #-8]
0xffff5820adf0   176  movz x16, #0xe00000000
0xffff5820adf4   180  cmp x5, x16
0xffff5820adf8   184  csel x5, fp, x3, ne
0xffff5820adfc   188  movz x3, #0x0
0xffff5820ae00   192  cmp w0, w3
0xffff5820ae04   196  b.le #+0x44 (addr 0xffff5820ae48)
0xffff5820ae08   200  sub w6, w0, w3
0xffff5820ae0c   204  add w6, w6, #0x1 (1)
0xffff5820ae10   208  ldr x6, [x5, w6, uxtw #3]
0xffff5820ae14   212  tbz w6, #0, #+0x1c (addr 0xffff5820ae30)
0xffff5820ae18   216  ldur x16, [x6, #-1]
0xffff5820ae1c   220  ldr x17, [x26, #120]
0xffff5820ae20   224  cmp x16, x17
0xffff5820ae24   228  b.ne #+0xcc (addr 0xffff5820aef0)
0xffff5820ae28   232  ldur d0, [x6, #7]
0xffff5820ae2c   236  b #+0x8 (addr 0xffff5820ae34)
0xffff5820ae30   240  scvtf d0, x6, #32
0xffff5820ae34   244  add x6, x4, #0xf (15)
0xffff5820ae38   248  fsub d29, d0, d15
0xffff5820ae3c   252  str d29, [x6, w3, sxtw #3]
0xffff5820ae40   256  add w3, w3, #0x1 (1)
0xffff5820ae44   260  b #-0x44 (addr 0xffff5820ae00)
0xffff5820ae48   264  add w0, w0, #0x1 (1)
0xffff5820ae4c   268  lsl x1, x0, #32
0xffff5820ae50   272  mov x0, x7
0xffff5820ae54   276  mov jssp, fp
0xffff5820ae58   280  ldp fp, lr, [jssp], #16
0xffff5820ae5c   284  add jssp, jssp, x1, lsr #29
0xffff5820ae60   288  ret
0xffff5820ae64   292  movz x7, #0x0
0xffff5820ae68   296  mov x16, lr
0xffff5820ae6c   300  ldr x17, pc+92 (addr 0x0000ffff5820aec8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820ae70   304  blr x17
0xffff5820ae74   308  lsl x0, x4, #32
0xffff5820ae78   312  movz x10, #0x100000000
0xffff5820ae7c   316  sub csp, jssp, #0x10 (16)
0xffff5820ae80   320  stp x10, x0, [jssp, #-16]!
0xffff5820ae84   324  movz x0, #0x2
0xffff5820ae88   328  movz x1, #0x5b88
0xffff5820ae8c   332  movk x1, #0xe2, lsl #16
0xffff5820ae90   336  ldr x16, pc+64 (addr 0x0000ffff5820aed0)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820ae94   340  blr x16
0xffff5820ae98   344  str x0, [jssp, #56]
0xffff5820ae9c   348  ldr x16, pc+60 (addr 0x0000ffff5820aed8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820aea0   352  blr x16
0xffff5820aea4   356  b #-0x100 (addr 0xffff5820ada4)
0xffff5820aea8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5820aeac   364  d63f03e0       constant
0xffff5820aeb0   368  39c04201       constant
0xffff5820aeb4   372  00000000       constant
0xffff5820aeb8   376  39c04201       constant
0xffff5820aebc   380  00000000       constant
0xffff5820aec0   384  32b052d9       constant
0xffff5820aec4   388  00000000       constant
0xffff5820aec8   392  58206820       constant
0xffff5820aecc   396  0000ffff       constant
0xffff5820aed0   400  58206260       constant
0xffff5820aed4   404  0000ffff       constant
0xffff5820aed8   408  582068e0       constant
0xffff5820aedc   412  0000ffff       constant
0xffff5820aee0   416  movz x16, #0x0
0xffff5820aee4   420  bl #+0x14 (addr 0xffff5820aef8)
0xffff5820aee8   424  movz x16, #0x8
0xffff5820aeec   428  bl #+0xc (addr 0xffff5820aef8)
0xffff5820aef0   432  movz x16, #0x10
0xffff5820aef4   436  bl #+0x4 (addr 0xffff5820aef8)
0xffff5820aef8   440  ldr x17, pc+24 (addr 0x0000ffff5820af10)    ;; lazy deoptimization bailout 0
0xffff5820aefc   444  add x17, x17, x16
0xffff5820af00   448  br x17
0xffff5820af04   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820af08   456  d63f03e0       constant
0xffff5820af0c   460  d503201f       constant
0xffff5820af10   464  58006000       constant
0xffff5820af14   468  0000ffff       constant


Safepoints (size = 21)
0xffff5820ae98   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff5820adc0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820adc8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820add8  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820ae6c  code target (STUB)  (0xffff58206820)
0xffff5820ae90  code target (STUB)  (0xffff58206260)
0xffff5820ae9c  code target (STUB)  (0xffff582068e0)
0xffff5820aea8  constant pool (size 56)
0xffff5820aef8  runtime entry
0xffff5820af04  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 453)
0xffff5820afa0     0  movz x16, #0xa00000000
0xffff5820afa4     4  sub csp, jssp, #0x10 (16)
0xffff5820afa8     8  stp fp, lr, [jssp, #-16]!
0xffff5820afac    12  mov fp, jssp
0xffff5820afb0    16  sub csp, jssp, #0x8 (8)
0xffff5820afb4    20  sub jssp, jssp, #0x8 (8)
0xffff5820afb8    24  stur x16, [fp, #-8]
0xffff5820afbc    28  movz w16, #0x257f
0xffff5820afc0    32  cmp w0, w16, lsl #3
0xffff5820afc4    36  b.hs #+0x15c (addr 0xffff5820b120)
0xffff5820afc8    40  lsl x3, x0, #32
0xffff5820afcc    44  lsl w4, w0, #3
0xffff5820afd0    48  add w4, w4, #0x10 (16)
0xffff5820afd4    52  cmp w4, #0x96000 (614400)
0xffff5820afd8    56  b.hs #+0x150 (addr 0xffff5820b128)
0xffff5820afdc    60  add w2, w4, #0x20 (32)
0xffff5820afe0    64  sxtw x2, w2
0xffff5820afe4    68  movz x4, #0x92c0
0xffff5820afe8    72  movk x4, #0x16e7, lsl #16
0xffff5820afec    76  ldp x6, x16, [x4]
0xffff5820aff0    80  adds x5, x6, x2
0xffff5820aff4    84  ccmp x5, x16, #nzCv, lo
0xffff5820aff8    88  b.hi #+0xa8 (addr 0xffff5820b0a0)
0xffff5820affc    92  str x5, [x4]
0xffff5820b000    96  orr x6, x6, #0x1
0xffff5820b004   100  movz w2, #0x0
0xffff5820b008   104  stur x2, [x6, #31]
0xffff5820b00c   108  ldur x1, [x1, #39]
0xffff5820b010   112  ldur x1, [x1, #39]
0xffff5820b014   116  movz x16, #0x187
0xffff5820b018   120  ldr x1, [x1, x16]
0xffff5820b01c   124  stur x1, [x6, #-1]
0xffff5820b020   128  ldr x1, pc+208 (addr 0x0000ffff5820b0f0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820b024   132  stur x1, [x6, #7]
0xffff5820b028   136  ldr x1, pc+208 (addr 0x0000ffff5820b0f8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820b02c   140  stur x1, [x6, #15]
0xffff5820b030   144  stur x3, [x6, #23]
0xffff5820b034   148  add x1, x6, #0x20 (32)
0xffff5820b038   152  ldr x2, pc+200 (addr 0x0000ffff5820b100)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820b03c   156  stur x2, [x1, #-1]
0xffff5820b040   160  stur x3, [x1, #7]
0xffff5820b044   164  stur x1, [x6, #15]
0xffff5820b048   168  ldr x2, [fp]
0xffff5820b04c   172  ldur x3, [x2, #-8]
0xffff5820b050   176  movz x16, #0xe00000000
0xffff5820b054   180  cmp x3, x16
0xffff5820b058   184  csel x3, fp, x2, ne
0xffff5820b05c   188  movz x2, #0x0
0xffff5820b060   192  cmp w0, w2
0xffff5820b064   196  b.le #+0x20 (addr 0xffff5820b084)
0xffff5820b068   200  sub w4, w0, w2
0xffff5820b06c   204  add w4, w4, #0x1 (1)
0xffff5820b070   208  ldr x4, [x3, w4, uxtw #3]
0xffff5820b074   212  add x5, x1, #0xf (15)
0xffff5820b078   216  str x4, [x5, w2, sxtw #3]
0xffff5820b07c   220  add w2, w2, #0x1 (1)
0xffff5820b080   224  b #-0x20 (addr 0xffff5820b060)
0xffff5820b084   228  add w0, w0, #0x1 (1)
0xffff5820b088   232  lsl x1, x0, #32
0xffff5820b08c   236  mov x0, x6
0xffff5820b090   240  mov jssp, fp
0xffff5820b094   244  ldp fp, lr, [jssp], #16
0xffff5820b098   248  add jssp, jssp, x1, lsr #29
0xffff5820b09c   252  ret
0xffff5820b0a0   256  movz x6, #0x0
0xffff5820b0a4   260  mov x16, lr
0xffff5820b0a8   264  ldr x17, pc+96 (addr 0x0000ffff5820b108)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820b0ac   268  blr x17
0xffff5820b0b0   272  lsl x0, x2, #32
0xffff5820b0b4   276  movz x10, #0x0
0xffff5820b0b8   280  sub csp, jssp, #0x10 (16)
0xffff5820b0bc   284  stp x10, x0, [jssp, #-16]!
0xffff5820b0c0   288  movz x0, #0x2
0xffff5820b0c4   292  movz x1, #0x5b88
0xffff5820b0c8   296  movk x1, #0xe2, lsl #16
0xffff5820b0cc   300  ldr x16, pc+68 (addr 0x0000ffff5820b110)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820b0d0   304  blr x16
0xffff5820b0d4   308  str x0, [jssp, #48]
0xffff5820b0d8   312  ldr x16, pc+64 (addr 0x0000ffff5820b118)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820b0dc   316  blr x16
0xffff5820b0e0   320  b #-0xdc (addr 0xffff5820b004)
0xffff5820b0e4   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff5820b0e8   328  d63f03e0       constant
0xffff5820b0ec   332  d503201f       constant
0xffff5820b0f0   336  39c04201       constant
0xffff5820b0f4   340  00000000       constant
0xffff5820b0f8   344  39c04201       constant
0xffff5820b0fc   348  00000000       constant
0xffff5820b100   352  32b04259       constant
0xffff5820b104   356  00000000       constant
0xffff5820b108   360  58206820       constant
0xffff5820b10c   364  0000ffff       constant
0xffff5820b110   368  58206260       constant
0xffff5820b114   372  0000ffff       constant
0xffff5820b118   376  582068e0       constant
0xffff5820b11c   380  0000ffff       constant
0xffff5820b120   384  movz x16, #0x0
0xffff5820b124   388  bl #+0xc (addr 0xffff5820b130)
0xffff5820b128   392  movz x16, #0x8
0xffff5820b12c   396  bl #+0x4 (addr 0xffff5820b130)
0xffff5820b130   400  ldr x17, pc+24 (addr 0x0000ffff5820b148)    ;; lazy deoptimization bailout 0
0xffff5820b134   404  add x17, x17, x16
0xffff5820b138   408  br x17
0xffff5820b13c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820b140   416  d63f03e0       constant
0xffff5820b144   420  d503201f       constant
0xffff5820b148   424  58006000       constant
0xffff5820b14c   428  0000ffff       constant


Safepoints (size = 21)
0xffff5820b0d4   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff5820b020  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820b028  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820b038  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820b0a8  code target (STUB)  (0xffff58206820)
0xffff5820b0cc  code target (STUB)  (0xffff58206260)
0xffff5820b0d8  code target (STUB)  (0xffff582068e0)
0xffff5820b0e4  constant pool (size 60)
0xffff5820b130  runtime entry
0xffff5820b13c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_ELEMENTS
compiler = crankshaft
Instructions (size = 453)
0xffff5820afa0     0  movz x16, #0xa00000000
0xffff5820afa4     4  sub csp, jssp, #0x10 (16)
0xffff5820afa8     8  stp fp, lr, [jssp, #-16]!
0xffff5820afac    12  mov fp, jssp
0xffff5820afb0    16  sub csp, jssp, #0x8 (8)
0xffff5820afb4    20  sub jssp, jssp, #0x8 (8)
0xffff5820afb8    24  stur x16, [fp, #-8]
0xffff5820afbc    28  movz w16, #0x257f
0xffff5820afc0    32  cmp w0, w16, lsl #3
0xffff5820afc4    36  b.hs #+0x15c (addr 0xffff5820b120)
0xffff5820afc8    40  lsl x3, x0, #32
0xffff5820afcc    44  lsl w4, w0, #3
0xffff5820afd0    48  add w4, w4, #0x10 (16)
0xffff5820afd4    52  cmp w4, #0x96000 (614400)
0xffff5820afd8    56  b.hs #+0x150 (addr 0xffff5820b128)
0xffff5820afdc    60  add w2, w4, #0x20 (32)
0xffff5820afe0    64  sxtw x2, w2
0xffff5820afe4    68  movz x4, #0x92c0
0xffff5820afe8    72  movk x4, #0x16e7, lsl #16
0xffff5820afec    76  ldp x6, x16, [x4]
0xffff5820aff0    80  adds x5, x6, x2
0xffff5820aff4    84  ccmp x5, x16, #nzCv, lo
0xffff5820aff8    88  b.hi #+0xa8 (addr 0xffff5820b0a0)
0xffff5820affc    92  str x5, [x4]
0xffff5820b000    96  orr x6, x6, #0x1
0xffff5820b004   100  movz w2, #0x0
0xffff5820b008   104  stur x2, [x6, #31]
0xffff5820b00c   108  ldur x1, [x1, #39]
0xffff5820b010   112  ldur x1, [x1, #39]
0xffff5820b014   116  movz x16, #0x187
0xffff5820b018   120  ldr x1, [x1, x16]
0xffff5820b01c   124  stur x1, [x6, #-1]
0xffff5820b020   128  ldr x1, pc+208 (addr 0x0000ffff5820b0f0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820b024   132  stur x1, [x6, #7]
0xffff5820b028   136  ldr x1, pc+208 (addr 0x0000ffff5820b0f8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820b02c   140  stur x1, [x6, #15]
0xffff5820b030   144  stur x3, [x6, #23]
0xffff5820b034   148  add x1, x6, #0x20 (32)
0xffff5820b038   152  ldr x2, pc+200 (addr 0x0000ffff5820b100)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820b03c   156  stur x2, [x1, #-1]
0xffff5820b040   160  stur x3, [x1, #7]
0xffff5820b044   164  stur x1, [x6, #15]
0xffff5820b048   168  ldr x2, [fp]
0xffff5820b04c   172  ldur x3, [x2, #-8]
0xffff5820b050   176  movz x16, #0xe00000000
0xffff5820b054   180  cmp x3, x16
0xffff5820b058   184  csel x3, fp, x2, ne
0xffff5820b05c   188  movz x2, #0x0
0xffff5820b060   192  cmp w0, w2
0xffff5820b064   196  b.le #+0x20 (addr 0xffff5820b084)
0xffff5820b068   200  sub w4, w0, w2
0xffff5820b06c   204  add w4, w4, #0x1 (1)
0xffff5820b070   208  ldr x4, [x3, w4, uxtw #3]
0xffff5820b074   212  add x5, x1, #0xf (15)
0xffff5820b078   216  str x4, [x5, w2, sxtw #3]
0xffff5820b07c   220  add w2, w2, #0x1 (1)
0xffff5820b080   224  b #-0x20 (addr 0xffff5820b060)
0xffff5820b084   228  add w0, w0, #0x1 (1)
0xffff5820b088   232  lsl x1, x0, #32
0xffff5820b08c   236  mov x0, x6
0xffff5820b090   240  mov jssp, fp
0xffff5820b094   244  ldp fp, lr, [jssp], #16
0xffff5820b098   248  add jssp, jssp, x1, lsr #29
0xffff5820b09c   252  ret
0xffff5820b0a0   256  movz x6, #0x0
0xffff5820b0a4   260  mov x16, lr
0xffff5820b0a8   264  ldr x17, pc+96 (addr 0x0000ffff5820b108)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820b0ac   268  blr x17
0xffff5820b0b0   272  lsl x0, x2, #32
0xffff5820b0b4   276  movz x10, #0x0
0xffff5820b0b8   280  sub csp, jssp, #0x10 (16)
0xffff5820b0bc   284  stp x10, x0, [jssp, #-16]!
0xffff5820b0c0   288  movz x0, #0x2
0xffff5820b0c4   292  movz x1, #0x5b88
0xffff5820b0c8   296  movk x1, #0xe2, lsl #16
0xffff5820b0cc   300  ldr x16, pc+68 (addr 0x0000ffff5820b110)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820b0d0   304  blr x16
0xffff5820b0d4   308  str x0, [jssp, #48]
0xffff5820b0d8   312  ldr x16, pc+64 (addr 0x0000ffff5820b118)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820b0dc   316  blr x16
0xffff5820b0e0   320  b #-0xdc (addr 0xffff5820b004)
0xffff5820b0e4   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff5820b0e8   328  d63f03e0       constant
0xffff5820b0ec   332  d503201f       constant
0xffff5820b0f0   336  39c04201       constant
0xffff5820b0f4   340  00000000       constant
0xffff5820b0f8   344  39c04201       constant
0xffff5820b0fc   348  00000000       constant
0xffff5820b100   352  32b04259       constant
0xffff5820b104   356  00000000       constant
0xffff5820b108   360  58206820       constant
0xffff5820b10c   364  0000ffff       constant
0xffff5820b110   368  58206260       constant
0xffff5820b114   372  0000ffff       constant
0xffff5820b118   376  582068e0       constant
0xffff5820b11c   380  0000ffff       constant
0xffff5820b120   384  movz x16, #0x0
0xffff5820b124   388  bl #+0xc (addr 0xffff5820b130)
0xffff5820b128   392  movz x16, #0x8
0xffff5820b12c   396  bl #+0x4 (addr 0xffff5820b130)
0xffff5820b130   400  ldr x17, pc+24 (addr 0x0000ffff5820b148)    ;; lazy deoptimization bailout 0
0xffff5820b134   404  add x17, x17, x16
0xffff5820b138   408  br x17
0xffff5820b13c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820b140   416  d63f03e0       constant
0xffff5820b144   420  d503201f       constant
0xffff5820b148   424  58006000       constant
0xffff5820b14c   428  0000ffff       constant


Safepoints (size = 21)
0xffff5820b0d4   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff5820b020  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820b028  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820b038  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820b0a8  code target (STUB)  (0xffff58206820)
0xffff5820b0cc  code target (STUB)  (0xffff58206260)
0xffff5820b0d8  code target (STUB)  (0xffff582068e0)
0xffff5820b0e4  constant pool (size 60)
0xffff5820b130  runtime entry
0xffff5820b13c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 453)
0xffff5820b1e0     0  movz x16, #0xa00000000
0xffff5820b1e4     4  sub csp, jssp, #0x10 (16)
0xffff5820b1e8     8  stp fp, lr, [jssp, #-16]!
0xffff5820b1ec    12  mov fp, jssp
0xffff5820b1f0    16  sub csp, jssp, #0x8 (8)
0xffff5820b1f4    20  sub jssp, jssp, #0x8 (8)
0xffff5820b1f8    24  stur x16, [fp, #-8]
0xffff5820b1fc    28  movz w16, #0x257f
0xffff5820b200    32  cmp w0, w16, lsl #3
0xffff5820b204    36  b.hs #+0x15c (addr 0xffff5820b360)
0xffff5820b208    40  lsl x3, x0, #32
0xffff5820b20c    44  lsl w4, w0, #3
0xffff5820b210    48  add w4, w4, #0x10 (16)
0xffff5820b214    52  cmp w4, #0x96000 (614400)
0xffff5820b218    56  b.hs #+0x150 (addr 0xffff5820b368)
0xffff5820b21c    60  add w2, w4, #0x20 (32)
0xffff5820b220    64  sxtw x2, w2
0xffff5820b224    68  movz x4, #0x92c0
0xffff5820b228    72  movk x4, #0x16e7, lsl #16
0xffff5820b22c    76  ldp x6, x16, [x4]
0xffff5820b230    80  adds x5, x6, x2
0xffff5820b234    84  ccmp x5, x16, #nzCv, lo
0xffff5820b238    88  b.hi #+0xa8 (addr 0xffff5820b2e0)
0xffff5820b23c    92  str x5, [x4]
0xffff5820b240    96  orr x6, x6, #0x1
0xffff5820b244   100  movz w2, #0x0
0xffff5820b248   104  stur x2, [x6, #31]
0xffff5820b24c   108  ldur x1, [x1, #39]
0xffff5820b250   112  ldur x1, [x1, #39]
0xffff5820b254   116  movz x16, #0x18f
0xffff5820b258   120  ldr x1, [x1, x16]
0xffff5820b25c   124  stur x1, [x6, #-1]
0xffff5820b260   128  ldr x1, pc+208 (addr 0x0000ffff5820b330)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820b264   132  stur x1, [x6, #7]
0xffff5820b268   136  ldr x1, pc+208 (addr 0x0000ffff5820b338)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820b26c   140  stur x1, [x6, #15]
0xffff5820b270   144  stur x3, [x6, #23]
0xffff5820b274   148  add x1, x6, #0x20 (32)
0xffff5820b278   152  ldr x2, pc+200 (addr 0x0000ffff5820b340)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820b27c   156  stur x2, [x1, #-1]
0xffff5820b280   160  stur x3, [x1, #7]
0xffff5820b284   164  stur x1, [x6, #15]
0xffff5820b288   168  ldr x2, [fp]
0xffff5820b28c   172  ldur x3, [x2, #-8]
0xffff5820b290   176  movz x16, #0xe00000000
0xffff5820b294   180  cmp x3, x16
0xffff5820b298   184  csel x3, fp, x2, ne
0xffff5820b29c   188  movz x2, #0x0
0xffff5820b2a0   192  cmp w0, w2
0xffff5820b2a4   196  b.le #+0x20 (addr 0xffff5820b2c4)
0xffff5820b2a8   200  sub w4, w0, w2
0xffff5820b2ac   204  add w4, w4, #0x1 (1)
0xffff5820b2b0   208  ldr x4, [x3, w4, uxtw #3]
0xffff5820b2b4   212  add x5, x1, #0xf (15)
0xffff5820b2b8   216  str x4, [x5, w2, sxtw #3]
0xffff5820b2bc   220  add w2, w2, #0x1 (1)
0xffff5820b2c0   224  b #-0x20 (addr 0xffff5820b2a0)
0xffff5820b2c4   228  add w0, w0, #0x1 (1)
0xffff5820b2c8   232  lsl x1, x0, #32
0xffff5820b2cc   236  mov x0, x6
0xffff5820b2d0   240  mov jssp, fp
0xffff5820b2d4   244  ldp fp, lr, [jssp], #16
0xffff5820b2d8   248  add jssp, jssp, x1, lsr #29
0xffff5820b2dc   252  ret
0xffff5820b2e0   256  movz x6, #0x0
0xffff5820b2e4   260  mov x16, lr
0xffff5820b2e8   264  ldr x17, pc+96 (addr 0x0000ffff5820b348)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820b2ec   268  blr x17
0xffff5820b2f0   272  lsl x0, x2, #32
0xffff5820b2f4   276  movz x10, #0x0
0xffff5820b2f8   280  sub csp, jssp, #0x10 (16)
0xffff5820b2fc   284  stp x10, x0, [jssp, #-16]!
0xffff5820b300   288  movz x0, #0x2
0xffff5820b304   292  movz x1, #0x5b88
0xffff5820b308   296  movk x1, #0xe2, lsl #16
0xffff5820b30c   300  ldr x16, pc+68 (addr 0x0000ffff5820b350)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820b310   304  blr x16
0xffff5820b314   308  str x0, [jssp, #48]
0xffff5820b318   312  ldr x16, pc+64 (addr 0x0000ffff5820b358)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820b31c   316  blr x16
0xffff5820b320   320  b #-0xdc (addr 0xffff5820b244)
0xffff5820b324   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff5820b328   328  d63f03e0       constant
0xffff5820b32c   332  d503201f       constant
0xffff5820b330   336  39c04201       constant
0xffff5820b334   340  00000000       constant
0xffff5820b338   344  39c04201       constant
0xffff5820b33c   348  00000000       constant
0xffff5820b340   352  32b04259       constant
0xffff5820b344   356  00000000       constant
0xffff5820b348   360  58206820       constant
0xffff5820b34c   364  0000ffff       constant
0xffff5820b350   368  58206260       constant
0xffff5820b354   372  0000ffff       constant
0xffff5820b358   376  582068e0       constant
0xffff5820b35c   380  0000ffff       constant
0xffff5820b360   384  movz x16, #0x0
0xffff5820b364   388  bl #+0xc (addr 0xffff5820b370)
0xffff5820b368   392  movz x16, #0x8
0xffff5820b36c   396  bl #+0x4 (addr 0xffff5820b370)
0xffff5820b370   400  ldr x17, pc+24 (addr 0x0000ffff5820b388)    ;; lazy deoptimization bailout 0
0xffff5820b374   404  add x17, x17, x16
0xffff5820b378   408  br x17
0xffff5820b37c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820b380   416  d63f03e0       constant
0xffff5820b384   420  d503201f       constant
0xffff5820b388   424  58006000       constant
0xffff5820b38c   428  0000ffff       constant


Safepoints (size = 21)
0xffff5820b314   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff5820b260  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820b268  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820b278  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820b2e8  code target (STUB)  (0xffff58206820)
0xffff5820b30c  code target (STUB)  (0xffff58206260)
0xffff5820b318  code target (STUB)  (0xffff582068e0)
0xffff5820b324  constant pool (size 60)
0xffff5820b370  runtime entry
0xffff5820b37c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_ELEMENTS
compiler = crankshaft
Instructions (size = 453)
0xffff5820b1e0     0  movz x16, #0xa00000000
0xffff5820b1e4     4  sub csp, jssp, #0x10 (16)
0xffff5820b1e8     8  stp fp, lr, [jssp, #-16]!
0xffff5820b1ec    12  mov fp, jssp
0xffff5820b1f0    16  sub csp, jssp, #0x8 (8)
0xffff5820b1f4    20  sub jssp, jssp, #0x8 (8)
0xffff5820b1f8    24  stur x16, [fp, #-8]
0xffff5820b1fc    28  movz w16, #0x257f
0xffff5820b200    32  cmp w0, w16, lsl #3
0xffff5820b204    36  b.hs #+0x15c (addr 0xffff5820b360)
0xffff5820b208    40  lsl x3, x0, #32
0xffff5820b20c    44  lsl w4, w0, #3
0xffff5820b210    48  add w4, w4, #0x10 (16)
0xffff5820b214    52  cmp w4, #0x96000 (614400)
0xffff5820b218    56  b.hs #+0x150 (addr 0xffff5820b368)
0xffff5820b21c    60  add w2, w4, #0x20 (32)
0xffff5820b220    64  sxtw x2, w2
0xffff5820b224    68  movz x4, #0x92c0
0xffff5820b228    72  movk x4, #0x16e7, lsl #16
0xffff5820b22c    76  ldp x6, x16, [x4]
0xffff5820b230    80  adds x5, x6, x2
0xffff5820b234    84  ccmp x5, x16, #nzCv, lo
0xffff5820b238    88  b.hi #+0xa8 (addr 0xffff5820b2e0)
0xffff5820b23c    92  str x5, [x4]
0xffff5820b240    96  orr x6, x6, #0x1
0xffff5820b244   100  movz w2, #0x0
0xffff5820b248   104  stur x2, [x6, #31]
0xffff5820b24c   108  ldur x1, [x1, #39]
0xffff5820b250   112  ldur x1, [x1, #39]
0xffff5820b254   116  movz x16, #0x18f
0xffff5820b258   120  ldr x1, [x1, x16]
0xffff5820b25c   124  stur x1, [x6, #-1]
0xffff5820b260   128  ldr x1, pc+208 (addr 0x0000ffff5820b330)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820b264   132  stur x1, [x6, #7]
0xffff5820b268   136  ldr x1, pc+208 (addr 0x0000ffff5820b338)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820b26c   140  stur x1, [x6, #15]
0xffff5820b270   144  stur x3, [x6, #23]
0xffff5820b274   148  add x1, x6, #0x20 (32)
0xffff5820b278   152  ldr x2, pc+200 (addr 0x0000ffff5820b340)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5820b27c   156  stur x2, [x1, #-1]
0xffff5820b280   160  stur x3, [x1, #7]
0xffff5820b284   164  stur x1, [x6, #15]
0xffff5820b288   168  ldr x2, [fp]
0xffff5820b28c   172  ldur x3, [x2, #-8]
0xffff5820b290   176  movz x16, #0xe00000000
0xffff5820b294   180  cmp x3, x16
0xffff5820b298   184  csel x3, fp, x2, ne
0xffff5820b29c   188  movz x2, #0x0
0xffff5820b2a0   192  cmp w0, w2
0xffff5820b2a4   196  b.le #+0x20 (addr 0xffff5820b2c4)
0xffff5820b2a8   200  sub w4, w0, w2
0xffff5820b2ac   204  add w4, w4, #0x1 (1)
0xffff5820b2b0   208  ldr x4, [x3, w4, uxtw #3]
0xffff5820b2b4   212  add x5, x1, #0xf (15)
0xffff5820b2b8   216  str x4, [x5, w2, sxtw #3]
0xffff5820b2bc   220  add w2, w2, #0x1 (1)
0xffff5820b2c0   224  b #-0x20 (addr 0xffff5820b2a0)
0xffff5820b2c4   228  add w0, w0, #0x1 (1)
0xffff5820b2c8   232  lsl x1, x0, #32
0xffff5820b2cc   236  mov x0, x6
0xffff5820b2d0   240  mov jssp, fp
0xffff5820b2d4   244  ldp fp, lr, [jssp], #16
0xffff5820b2d8   248  add jssp, jssp, x1, lsr #29
0xffff5820b2dc   252  ret
0xffff5820b2e0   256  movz x6, #0x0
0xffff5820b2e4   260  mov x16, lr
0xffff5820b2e8   264  ldr x17, pc+96 (addr 0x0000ffff5820b348)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820b2ec   268  blr x17
0xffff5820b2f0   272  lsl x0, x2, #32
0xffff5820b2f4   276  movz x10, #0x0
0xffff5820b2f8   280  sub csp, jssp, #0x10 (16)
0xffff5820b2fc   284  stp x10, x0, [jssp, #-16]!
0xffff5820b300   288  movz x0, #0x2
0xffff5820b304   292  movz x1, #0x5b88
0xffff5820b308   296  movk x1, #0xe2, lsl #16
0xffff5820b30c   300  ldr x16, pc+68 (addr 0x0000ffff5820b350)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820b310   304  blr x16
0xffff5820b314   308  str x0, [jssp, #48]
0xffff5820b318   312  ldr x16, pc+64 (addr 0x0000ffff5820b358)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820b31c   316  blr x16
0xffff5820b320   320  b #-0xdc (addr 0xffff5820b244)
0xffff5820b324   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff5820b328   328  d63f03e0       constant
0xffff5820b32c   332  d503201f       constant
0xffff5820b330   336  39c04201       constant
0xffff5820b334   340  00000000       constant
0xffff5820b338   344  39c04201       constant
0xffff5820b33c   348  00000000       constant
0xffff5820b340   352  32b04259       constant
0xffff5820b344   356  00000000       constant
0xffff5820b348   360  58206820       constant
0xffff5820b34c   364  0000ffff       constant
0xffff5820b350   368  58206260       constant
0xffff5820b354   372  0000ffff       constant
0xffff5820b358   376  582068e0       constant
0xffff5820b35c   380  0000ffff       constant
0xffff5820b360   384  movz x16, #0x0
0xffff5820b364   388  bl #+0xc (addr 0xffff5820b370)
0xffff5820b368   392  movz x16, #0x8
0xffff5820b36c   396  bl #+0x4 (addr 0xffff5820b370)
0xffff5820b370   400  ldr x17, pc+24 (addr 0x0000ffff5820b388)    ;; lazy deoptimization bailout 0
0xffff5820b374   404  add x17, x17, x16
0xffff5820b378   408  br x17
0xffff5820b37c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820b380   416  d63f03e0       constant
0xffff5820b384   420  d503201f       constant
0xffff5820b388   424  58006000       constant
0xffff5820b38c   428  0000ffff       constant


Safepoints (size = 21)
0xffff5820b314   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff5820b260  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820b268  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820b278  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5820b2e8  code target (STUB)  (0xffff58206820)
0xffff5820b30c  code target (STUB)  (0xffff58206260)
0xffff5820b318  code target (STUB)  (0xffff582068e0)
0xffff5820b324  constant pool (size 60)
0xffff5820b370  runtime entry
0xffff5820b37c  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff5820b420     0  adr xzr, #+0x40 (addr 0xffff5820b460)
0xffff5820b424     4  adr xzr, #+0x358 (addr 0xffff5820b77c)
0xffff5820b428     8  ldr x16, pc+1720 (addr 0x0000ffff5820bae0)    ;; external reference (store_buffer_top)
0xffff5820b42c    12  ldr x0, [x16]
0xffff5820b430    16  str x1, [x0], #8
0xffff5820b434    20  str x0, [x16]
0xffff5820b438    24  tst x0, #0x1ffff
0xffff5820b43c    28  b.eq #+0x8 (addr 0xffff5820b444)
0xffff5820b440    32  ret
0xffff5820b444    36  sub csp, jssp, #0x8 (8)
0xffff5820b448    40  str lr, [jssp, #-8]!
0xffff5820b44c    44  ldr x17, pc+1692 (addr 0x0000ffff5820bae8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820b450    48  blr x17
0xffff5820b454    52  ldr lr, [jssp], #8
0xffff5820b458    56  ret
0xffff5820b45c    60  ret
0xffff5820b460    64  sub csp, jssp, #0x10 (16)
0xffff5820b464    68  stp x3, x2, [jssp, #-16]!
0xffff5820b468    72  ldr x0, [x1]
0xffff5820b46c    76  and x16, x0, #0xfffffffffff00000
0xffff5820b470    80  ldr x16, [x16, #8]
0xffff5820b474    84  tst x16, #0x18
0xffff5820b478    88  b.eq #+0x1d4 (addr 0xffff5820b64c)
0xffff5820b47c    92  and x16, x4, #0xfffffffffff00000
0xffff5820b480    96  ldr x16, [x16, #8]
0xffff5820b484   100  tst x16, #0x18
0xffff5820b488   104  b.ne #+0x1c4 (addr 0xffff5820b64c)
0xffff5820b48c   108  and x0, x4, #0xfffffffffff00000
0xffff5820b490   112  ldr x2, [x0, #104]
0xffff5820b494   116  subs x2, x2, #0x1 (1)
0xffff5820b498   120  str x2, [x0, #104]
0xffff5820b49c   124  b.mi #+0xc4 (addr 0xffff5820b560)
0xffff5820b4a0   128  ubfx x16, x4, #8, #12
0xffff5820b4a4   132  and x0, x4, #0xfffffffffff00000
0xffff5820b4a8   136  add x0, x0, x16, lsl #2
0xffff5820b4ac   140  ubfx x2, x4, #3, #5
0xffff5820b4b0   144  ldr x0, [x0, #360]
0xffff5820b4b4   148  lsr x0, x0, x2
0xffff5820b4b8   152  tbz w0, #0, #+0x8 (addr 0xffff5820b4c0)
0xffff5820b4bc   156  tbnz w0, #1, #+0x3c (addr 0xffff5820b4f8)
0xffff5820b4c0   160  ldp x3, x2, [jssp], #16
0xffff5820b4c4   164  ldr x16, pc+1580 (addr 0x0000ffff5820baf0)    ;; external reference (store_buffer_top)
0xffff5820b4c8   168  ldr x0, [x16]
0xffff5820b4cc   172  str x1, [x0], #8
0xffff5820b4d0   176  str x0, [x16]
0xffff5820b4d4   180  tst x0, #0x1ffff
0xffff5820b4d8   184  b.eq #+0x8 (addr 0xffff5820b4e0)
0xffff5820b4dc   188  ret
0xffff5820b4e0   192  sub csp, jssp, #0x8 (8)
0xffff5820b4e4   196  str lr, [jssp, #-8]!
0xffff5820b4e8   200  ldr x17, pc+1552 (addr 0x0000ffff5820baf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820b4ec   204  blr x17
0xffff5820b4f0   208  ldr lr, [jssp], #8
0xffff5820b4f4   212  ret
0xffff5820b4f8   216  ldr x0, [x1]
0xffff5820b4fc   220  sub csp, jssp, #0x10 (16)
0xffff5820b500   224  stp x4, x1, [jssp, #-16]!
0xffff5820b504   228  ubfx x16, x0, #8, #12
0xffff5820b508   232  and x2, x0, #0xfffffffffff00000
0xffff5820b50c   236  add x2, x2, x16, lsl #2
0xffff5820b510   240  ubfx x4, x0, #3, #5
0xffff5820b514   244  ldr x1, [x2, #360]
0xffff5820b518   248  lsr x1, x1, x4
0xffff5820b51c   252  tbz w1, #0, #+0x40 (addr 0xffff5820b55c)
0xffff5820b520   256  ldp x4, x1, [jssp], #16
0xffff5820b524   260  ldp x3, x2, [jssp], #16
0xffff5820b528   264  ldr x16, pc+1496 (addr 0x0000ffff5820bb00)    ;; external reference (store_buffer_top)
0xffff5820b52c   268  ldr x0, [x16]
0xffff5820b530   272  str x1, [x0], #8
0xffff5820b534   276  str x0, [x16]
0xffff5820b538   280  tst x0, #0x1ffff
0xffff5820b53c   284  b.eq #+0x8 (addr 0xffff5820b544)
0xffff5820b540   288  ret
0xffff5820b544   292  sub csp, jssp, #0x8 (8)
0xffff5820b548   296  str lr, [jssp, #-8]!
0xffff5820b54c   300  ldr x17, pc+1468 (addr 0x0000ffff5820bb08)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820b550   304  blr x17
0xffff5820b554   308  ldr lr, [jssp], #8
0xffff5820b558   312  ret
0xffff5820b55c   316  ldp x4, x1, [jssp], #16
0xffff5820b560   320  sub csp, jssp, #0x78 (120)
0xffff5820b564   324  stp x14, x15, [jssp, #-32]!
0xffff5820b568   328  stp x18, lr, [jssp, #16]
0xffff5820b56c   332  stp x10, x11, [jssp, #-32]!
0xffff5820b570   336  stp x12, x13, [jssp, #16]
0xffff5820b574   340  stp x6, x7, [jssp, #-32]!
0xffff5820b578   344  stp x8, x9, [jssp, #16]
0xffff5820b57c   348  stp x1, x4, [jssp, #-24]!
0xffff5820b580   352  str x5, [jssp, #16]
0xffff5820b584   356  sub csp, jssp, #0xb0 (176)
0xffff5820b588   360  stp d26, d27, [jssp, #-32]!
0xffff5820b58c   364  stp d28, d29, [jssp, #16]
0xffff5820b590   368  stp d22, d23, [jssp, #-32]!
0xffff5820b594   372  stp d24, d25, [jssp, #16]
0xffff5820b598   376  stp d18, d19, [jssp, #-32]!
0xffff5820b59c   380  stp d20, d21, [jssp, #16]
0xffff5820b5a0   384  stp d6, d7, [jssp, #-32]!
0xffff5820b5a4   388  stp d16, d17, [jssp, #16]
0xffff5820b5a8   392  stp d2, d3, [jssp, #-32]!
0xffff5820b5ac   396  stp d4, d5, [jssp, #16]
0xffff5820b5b0   400  stp d0, d1, [jssp, #-16]!
0xffff5820b5b4   404  mov x0, x4
0xffff5820b5b8   408  ldr x2, pc+1368 (addr 0x0000ffff5820bb10)    ;; external reference (isolate)
0xffff5820b5bc   412  ldr x16, pc+1372 (addr 0x0000ffff5820bb18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820b5c0   416  and csp, jssp, #0xfffffffffffffff0
0xffff5820b5c4   420  blr x16
0xffff5820b5c8   424  ldp d2, d3, [jssp, #16]
0xffff5820b5cc   428  ldp d0, d1, [jssp], #32
0xffff5820b5d0   432  ldp d6, d7, [jssp, #16]
0xffff5820b5d4   436  ldp d4, d5, [jssp], #32
0xffff5820b5d8   440  ldp d18, d19, [jssp, #16]
0xffff5820b5dc   444  ldp d16, d17, [jssp], #32
0xffff5820b5e0   448  ldp d22, d23, [jssp, #16]
0xffff5820b5e4   452  ldp d20, d21, [jssp], #32
0xffff5820b5e8   456  ldp d26, d27, [jssp, #16]
0xffff5820b5ec   460  ldp d24, d25, [jssp], #32
0xffff5820b5f0   464  ldp d28, d29, [jssp], #16
0xffff5820b5f4   468  ldp x5, x6, [jssp, #16]
0xffff5820b5f8   472  ldp x1, x4, [jssp], #32
0xffff5820b5fc   476  ldp x9, x10, [jssp, #16]
0xffff5820b600   480  ldp x7, x8, [jssp], #32
0xffff5820b604   484  ldp x13, x14, [jssp, #16]
0xffff5820b608   488  ldp x11, x12, [jssp], #32
0xffff5820b60c   492  ldr lr, [jssp, #16]
0xffff5820b610   496  ldp x15, x18, [jssp], #24
0xffff5820b614   500  ldp x3, x2, [jssp], #16
0xffff5820b618   504  ldr x16, pc+1288 (addr 0x0000ffff5820bb20)    ;; external reference (store_buffer_top)
0xffff5820b61c   508  ldr x0, [x16]
0xffff5820b620   512  str x1, [x0], #8
0xffff5820b624   516  str x0, [x16]
0xffff5820b628   520  tst x0, #0x1ffff
0xffff5820b62c   524  b.eq #+0x8 (addr 0xffff5820b634)
0xffff5820b630   528  ret
0xffff5820b634   532  sub csp, jssp, #0x8 (8)
0xffff5820b638   536  str lr, [jssp, #-8]!
0xffff5820b63c   540  ldr x17, pc+1260 (addr 0x0000ffff5820bb28)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820b640   544  blr x17
0xffff5820b644   548  ldr lr, [jssp], #8
0xffff5820b648   552  ret
0xffff5820b64c   556  and x0, x4, #0xfffffffffff00000
0xffff5820b650   560  ldr x2, [x0, #104]
0xffff5820b654   564  subs x2, x2, #0x1 (1)
0xffff5820b658   568  str x2, [x0, #104]
0xffff5820b65c   572  b.mi #+0x64 (addr 0xffff5820b6c0)
0xffff5820b660   576  ubfx x16, x4, #8, #12
0xffff5820b664   580  and x0, x4, #0xfffffffffff00000
0xffff5820b668   584  add x0, x0, x16, lsl #2
0xffff5820b66c   588  ubfx x2, x4, #3, #5
0xffff5820b670   592  ldr x0, [x0, #360]
0xffff5820b674   596  lsr x0, x0, x2
0xffff5820b678   600  tbz w0, #0, #+0x8 (addr 0xffff5820b680)
0xffff5820b67c   604  tbnz w0, #1, #+0xc (addr 0xffff5820b688)
0xffff5820b680   608  ldp x3, x2, [jssp], #16
0xffff5820b684   612  ret
0xffff5820b688   616  ldr x0, [x1]
0xffff5820b68c   620  sub csp, jssp, #0x10 (16)
0xffff5820b690   624  stp x4, x1, [jssp, #-16]!
0xffff5820b694   628  ubfx x16, x0, #8, #12
0xffff5820b698   632  and x2, x0, #0xfffffffffff00000
0xffff5820b69c   636  add x2, x2, x16, lsl #2
0xffff5820b6a0   640  ubfx x4, x0, #3, #5
0xffff5820b6a4   644  ldr x1, [x2, #360]
0xffff5820b6a8   648  lsr x1, x1, x4
0xffff5820b6ac   652  tbz w1, #0, #+0x10 (addr 0xffff5820b6bc)
0xffff5820b6b0   656  ldp x4, x1, [jssp], #16
0xffff5820b6b4   660  ldp x3, x2, [jssp], #16
0xffff5820b6b8   664  ret
0xffff5820b6bc   668  ldp x4, x1, [jssp], #16
0xffff5820b6c0   672  sub csp, jssp, #0x78 (120)
0xffff5820b6c4   676  stp x14, x15, [jssp, #-32]!
0xffff5820b6c8   680  stp x18, lr, [jssp, #16]
0xffff5820b6cc   684  stp x10, x11, [jssp, #-32]!
0xffff5820b6d0   688  stp x12, x13, [jssp, #16]
0xffff5820b6d4   692  stp x6, x7, [jssp, #-32]!
0xffff5820b6d8   696  stp x8, x9, [jssp, #16]
0xffff5820b6dc   700  stp x1, x4, [jssp, #-24]!
0xffff5820b6e0   704  str x5, [jssp, #16]
0xffff5820b6e4   708  sub csp, jssp, #0xb0 (176)
0xffff5820b6e8   712  stp d26, d27, [jssp, #-32]!
0xffff5820b6ec   716  stp d28, d29, [jssp, #16]
0xffff5820b6f0   720  stp d22, d23, [jssp, #-32]!
0xffff5820b6f4   724  stp d24, d25, [jssp, #16]
0xffff5820b6f8   728  stp d18, d19, [jssp, #-32]!
0xffff5820b6fc   732  stp d20, d21, [jssp, #16]
0xffff5820b700   736  stp d6, d7, [jssp, #-32]!
0xffff5820b704   740  stp d16, d17, [jssp, #16]
0xffff5820b708   744  stp d2, d3, [jssp, #-32]!
0xffff5820b70c   748  stp d4, d5, [jssp, #16]
0xffff5820b710   752  stp d0, d1, [jssp, #-16]!
0xffff5820b714   756  mov x0, x4
0xffff5820b718   760  ldr x2, pc+1048 (addr 0x0000ffff5820bb30)    ;; external reference (isolate)
0xffff5820b71c   764  ldr x16, pc+1052 (addr 0x0000ffff5820bb38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820b720   768  and csp, jssp, #0xfffffffffffffff0
0xffff5820b724   772  blr x16
0xffff5820b728   776  ldp d2, d3, [jssp, #16]
0xffff5820b72c   780  ldp d0, d1, [jssp], #32
0xffff5820b730   784  ldp d6, d7, [jssp, #16]
0xffff5820b734   788  ldp d4, d5, [jssp], #32
0xffff5820b738   792  ldp d18, d19, [jssp, #16]
0xffff5820b73c   796  ldp d16, d17, [jssp], #32
0xffff5820b740   800  ldp d22, d23, [jssp, #16]
0xffff5820b744   804  ldp d20, d21, [jssp], #32
0xffff5820b748   808  ldp d26, d27, [jssp, #16]
0xffff5820b74c   812  ldp d24, d25, [jssp], #32
0xffff5820b750   816  ldp d28, d29, [jssp], #16
0xffff5820b754   820  ldp x5, x6, [jssp, #16]
0xffff5820b758   824  ldp x1, x4, [jssp], #32
0xffff5820b75c   828  ldp x9, x10, [jssp, #16]
0xffff5820b760   832  ldp x7, x8, [jssp], #32
0xffff5820b764   836  ldp x13, x14, [jssp, #16]
0xffff5820b768   840  ldp x11, x12, [jssp], #32
0xffff5820b76c   844  ldr lr, [jssp, #16]
0xffff5820b770   848  ldp x15, x18, [jssp], #24
0xffff5820b774   852  ldp x3, x2, [jssp], #16
0xffff5820b778   856  ret
0xffff5820b77c   860  sub csp, jssp, #0x10 (16)
0xffff5820b780   864  stp x3, x2, [jssp, #-16]!
0xffff5820b784   868  ldr x0, [x1]
0xffff5820b788   872  and x16, x0, #0xfffffffffff00000
0xffff5820b78c   876  ldr x16, [x16, #8]
0xffff5820b790   880  tst x16, #0x18
0xffff5820b794   884  b.eq #+0x1f4 (addr 0xffff5820b988)
0xffff5820b798   888  and x16, x4, #0xfffffffffff00000
0xffff5820b79c   892  ldr x16, [x16, #8]
0xffff5820b7a0   896  tst x16, #0x18
0xffff5820b7a4   900  b.ne #+0x1e4 (addr 0xffff5820b988)
0xffff5820b7a8   904  and x0, x4, #0xfffffffffff00000
0xffff5820b7ac   908  ldr x2, [x0, #104]
0xffff5820b7b0   912  subs x2, x2, #0x1 (1)
0xffff5820b7b4   916  str x2, [x0, #104]
0xffff5820b7b8   920  b.mi #+0xe4 (addr 0xffff5820b89c)
0xffff5820b7bc   924  ubfx x16, x4, #8, #12
0xffff5820b7c0   928  and x0, x4, #0xfffffffffff00000
0xffff5820b7c4   932  add x0, x0, x16, lsl #2
0xffff5820b7c8   936  ubfx x2, x4, #3, #5
0xffff5820b7cc   940  ldr x0, [x0, #360]
0xffff5820b7d0   944  lsr x0, x0, x2
0xffff5820b7d4   948  tbz w0, #0, #+0x8 (addr 0xffff5820b7dc)
0xffff5820b7d8   952  tbnz w0, #1, #+0x3c (addr 0xffff5820b814)
0xffff5820b7dc   956  ldp x3, x2, [jssp], #16
0xffff5820b7e0   960  ldr x16, pc+864 (addr 0x0000ffff5820bb40)    ;; external reference (store_buffer_top)
0xffff5820b7e4   964  ldr x0, [x16]
0xffff5820b7e8   968  str x1, [x0], #8
0xffff5820b7ec   972  str x0, [x16]
0xffff5820b7f0   976  tst x0, #0x1ffff
0xffff5820b7f4   980  b.eq #+0x8 (addr 0xffff5820b7fc)
0xffff5820b7f8   984  ret
0xffff5820b7fc   988  sub csp, jssp, #0x8 (8)
0xffff5820b800   992  str lr, [jssp, #-8]!
0xffff5820b804   996  ldr x17, pc+836 (addr 0x0000ffff5820bb48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820b808  1000  blr x17
0xffff5820b80c  1004  ldr lr, [jssp], #8
0xffff5820b810  1008  ret
0xffff5820b814  1012  ldr x0, [x1]
0xffff5820b818  1016  and x2, x0, #0xfffffffffff00000
0xffff5820b81c  1020  ldr x2, [x2, #8]
0xffff5820b820  1024  tbz w2, #6, #+0x18 (addr 0xffff5820b838)
0xffff5820b824  1028  and x2, x4, #0xfffffffffff00000
0xffff5820b828  1032  ldr x2, [x2, #8]
0xffff5820b82c  1036  movz x16, #0x58
0xffff5820b830  1040  tst x2, x16
0xffff5820b834  1044  b.eq #+0x68 (addr 0xffff5820b89c)
0xffff5820b838  1048  sub csp, jssp, #0x10 (16)
0xffff5820b83c  1052  stp x4, x1, [jssp, #-16]!
0xffff5820b840  1056  ubfx x16, x0, #8, #12
0xffff5820b844  1060  and x2, x0, #0xfffffffffff00000
0xffff5820b848  1064  add x2, x2, x16, lsl #2
0xffff5820b84c  1068  ubfx x4, x0, #3, #5
0xffff5820b850  1072  ldr x1, [x2, #360]
0xffff5820b854  1076  lsr x1, x1, x4
0xffff5820b858  1080  tbz w1, #0, #+0x40 (addr 0xffff5820b898)
0xffff5820b85c  1084  ldp x4, x1, [jssp], #16
0xffff5820b860  1088  ldp x3, x2, [jssp], #16
0xffff5820b864  1092  ldr x16, pc+748 (addr 0x0000ffff5820bb50)    ;; external reference (store_buffer_top)
0xffff5820b868  1096  ldr x0, [x16]
0xffff5820b86c  1100  str x1, [x0], #8
0xffff5820b870  1104  str x0, [x16]
0xffff5820b874  1108  tst x0, #0x1ffff
0xffff5820b878  1112  b.eq #+0x8 (addr 0xffff5820b880)
0xffff5820b87c  1116  ret
0xffff5820b880  1120  sub csp, jssp, #0x8 (8)
0xffff5820b884  1124  str lr, [jssp, #-8]!
0xffff5820b888  1128  ldr x17, pc+720 (addr 0x0000ffff5820bb58)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820b88c  1132  blr x17
0xffff5820b890  1136  ldr lr, [jssp], #8
0xffff5820b894  1140  ret
0xffff5820b898  1144  ldp x4, x1, [jssp], #16
0xffff5820b89c  1148  sub csp, jssp, #0x78 (120)
0xffff5820b8a0  1152  stp x14, x15, [jssp, #-32]!
0xffff5820b8a4  1156  stp x18, lr, [jssp, #16]
0xffff5820b8a8  1160  stp x10, x11, [jssp, #-32]!
0xffff5820b8ac  1164  stp x12, x13, [jssp, #16]
0xffff5820b8b0  1168  stp x6, x7, [jssp, #-32]!
0xffff5820b8b4  1172  stp x8, x9, [jssp, #16]
0xffff5820b8b8  1176  stp x1, x4, [jssp, #-24]!
0xffff5820b8bc  1180  str x5, [jssp, #16]
0xffff5820b8c0  1184  sub csp, jssp, #0xb0 (176)
0xffff5820b8c4  1188  stp d26, d27, [jssp, #-32]!
0xffff5820b8c8  1192  stp d28, d29, [jssp, #16]
0xffff5820b8cc  1196  stp d22, d23, [jssp, #-32]!
0xffff5820b8d0  1200  stp d24, d25, [jssp, #16]
0xffff5820b8d4  1204  stp d18, d19, [jssp, #-32]!
0xffff5820b8d8  1208  stp d20, d21, [jssp, #16]
0xffff5820b8dc  1212  stp d6, d7, [jssp, #-32]!
0xffff5820b8e0  1216  stp d16, d17, [jssp, #16]
0xffff5820b8e4  1220  stp d2, d3, [jssp, #-32]!
0xffff5820b8e8  1224  stp d4, d5, [jssp, #16]
0xffff5820b8ec  1228  stp d0, d1, [jssp, #-16]!
0xffff5820b8f0  1232  mov x0, x4
0xffff5820b8f4  1236  ldr x2, pc+620 (addr 0x0000ffff5820bb60)    ;; external reference (isolate)
0xffff5820b8f8  1240  ldr x16, pc+624 (addr 0x0000ffff5820bb68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820b8fc  1244  and csp, jssp, #0xfffffffffffffff0
0xffff5820b900  1248  blr x16
0xffff5820b904  1252  ldp d2, d3, [jssp, #16]
0xffff5820b908  1256  ldp d0, d1, [jssp], #32
0xffff5820b90c  1260  ldp d6, d7, [jssp, #16]
0xffff5820b910  1264  ldp d4, d5, [jssp], #32
0xffff5820b914  1268  ldp d18, d19, [jssp, #16]
0xffff5820b918  1272  ldp d16, d17, [jssp], #32
0xffff5820b91c  1276  ldp d22, d23, [jssp, #16]
0xffff5820b920  1280  ldp d20, d21, [jssp], #32
0xffff5820b924  1284  ldp d26, d27, [jssp, #16]
0xffff5820b928  1288  ldp d24, d25, [jssp], #32
0xffff5820b92c  1292  ldp d28, d29, [jssp], #16
0xffff5820b930  1296  ldp x5, x6, [jssp, #16]
0xffff5820b934  1300  ldp x1, x4, [jssp], #32
0xffff5820b938  1304  ldp x9, x10, [jssp, #16]
0xffff5820b93c  1308  ldp x7, x8, [jssp], #32
0xffff5820b940  1312  ldp x13, x14, [jssp, #16]
0xffff5820b944  1316  ldp x11, x12, [jssp], #32
0xffff5820b948  1320  ldr lr, [jssp, #16]
0xffff5820b94c  1324  ldp x15, x18, [jssp], #24
0xffff5820b950  1328  ldp x3, x2, [jssp], #16
0xffff5820b954  1332  ldr x16, pc+540 (addr 0x0000ffff5820bb70)    ;; external reference (store_buffer_top)
0xffff5820b958  1336  ldr x0, [x16]
0xffff5820b95c  1340  str x1, [x0], #8
0xffff5820b960  1344  str x0, [x16]
0xffff5820b964  1348  tst x0, #0x1ffff
0xffff5820b968  1352  b.eq #+0x8 (addr 0xffff5820b970)
0xffff5820b96c  1356  ret
0xffff5820b970  1360  sub csp, jssp, #0x8 (8)
0xffff5820b974  1364  str lr, [jssp, #-8]!
0xffff5820b978  1368  ldr x17, pc+512 (addr 0x0000ffff5820bb78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820b97c  1372  blr x17
0xffff5820b980  1376  ldr lr, [jssp], #8
0xffff5820b984  1380  ret
0xffff5820b988  1384  and x0, x4, #0xfffffffffff00000
0xffff5820b98c  1388  ldr x2, [x0, #104]
0xffff5820b990  1392  subs x2, x2, #0x1 (1)
0xffff5820b994  1396  str x2, [x0, #104]
0xffff5820b998  1400  b.mi #+0x84 (addr 0xffff5820ba1c)
0xffff5820b99c  1404  ubfx x16, x4, #8, #12
0xffff5820b9a0  1408  and x0, x4, #0xfffffffffff00000
0xffff5820b9a4  1412  add x0, x0, x16, lsl #2
0xffff5820b9a8  1416  ubfx x2, x4, #3, #5
0xffff5820b9ac  1420  ldr x0, [x0, #360]
0xffff5820b9b0  1424  lsr x0, x0, x2
0xffff5820b9b4  1428  tbz w0, #0, #+0x8 (addr 0xffff5820b9bc)
0xffff5820b9b8  1432  tbnz w0, #1, #+0xc (addr 0xffff5820b9c4)
0xffff5820b9bc  1436  ldp x3, x2, [jssp], #16
0xffff5820b9c0  1440  ret
0xffff5820b9c4  1444  ldr x0, [x1]
0xffff5820b9c8  1448  and x2, x0, #0xfffffffffff00000
0xffff5820b9cc  1452  ldr x2, [x2, #8]
0xffff5820b9d0  1456  tbz w2, #6, #+0x18 (addr 0xffff5820b9e8)
0xffff5820b9d4  1460  and x2, x4, #0xfffffffffff00000
0xffff5820b9d8  1464  ldr x2, [x2, #8]
0xffff5820b9dc  1468  movz x16, #0x58
0xffff5820b9e0  1472  tst x2, x16
0xffff5820b9e4  1476  b.eq #+0x38 (addr 0xffff5820ba1c)
0xffff5820b9e8  1480  sub csp, jssp, #0x10 (16)
0xffff5820b9ec  1484  stp x4, x1, [jssp, #-16]!
0xffff5820b9f0  1488  ubfx x16, x0, #8, #12
0xffff5820b9f4  1492  and x2, x0, #0xfffffffffff00000
0xffff5820b9f8  1496  add x2, x2, x16, lsl #2
0xffff5820b9fc  1500  ubfx x4, x0, #3, #5
0xffff5820ba00  1504  ldr x1, [x2, #360]
0xffff5820ba04  1508  lsr x1, x1, x4
0xffff5820ba08  1512  tbz w1, #0, #+0x10 (addr 0xffff5820ba18)
0xffff5820ba0c  1516  ldp x4, x1, [jssp], #16
0xffff5820ba10  1520  ldp x3, x2, [jssp], #16
0xffff5820ba14  1524  ret
0xffff5820ba18  1528  ldp x4, x1, [jssp], #16
0xffff5820ba1c  1532  sub csp, jssp, #0x78 (120)
0xffff5820ba20  1536  stp x14, x15, [jssp, #-32]!
0xffff5820ba24  1540  stp x18, lr, [jssp, #16]
0xffff5820ba28  1544  stp x10, x11, [jssp, #-32]!
0xffff5820ba2c  1548  stp x12, x13, [jssp, #16]
0xffff5820ba30  1552  stp x6, x7, [jssp, #-32]!
0xffff5820ba34  1556  stp x8, x9, [jssp, #16]
0xffff5820ba38  1560  stp x1, x4, [jssp, #-24]!
0xffff5820ba3c  1564  str x5, [jssp, #16]
0xffff5820ba40  1568  sub csp, jssp, #0xb0 (176)
0xffff5820ba44  1572  stp d26, d27, [jssp, #-32]!
0xffff5820ba48  1576  stp d28, d29, [jssp, #16]
0xffff5820ba4c  1580  stp d22, d23, [jssp, #-32]!
0xffff5820ba50  1584  stp d24, d25, [jssp, #16]
0xffff5820ba54  1588  stp d18, d19, [jssp, #-32]!
0xffff5820ba58  1592  stp d20, d21, [jssp, #16]
0xffff5820ba5c  1596  stp d6, d7, [jssp, #-32]!
0xffff5820ba60  1600  stp d16, d17, [jssp, #16]
0xffff5820ba64  1604  stp d2, d3, [jssp, #-32]!
0xffff5820ba68  1608  stp d4, d5, [jssp, #16]
0xffff5820ba6c  1612  stp d0, d1, [jssp, #-16]!
0xffff5820ba70  1616  mov x0, x4
0xffff5820ba74  1620  ldr x2, pc+268 (addr 0x0000ffff5820bb80)    ;; external reference (isolate)
0xffff5820ba78  1624  ldr x16, pc+272 (addr 0x0000ffff5820bb88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820ba7c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff5820ba80  1632  blr x16
0xffff5820ba84  1636  ldp d2, d3, [jssp, #16]
0xffff5820ba88  1640  ldp d0, d1, [jssp], #32
0xffff5820ba8c  1644  ldp d6, d7, [jssp, #16]
0xffff5820ba90  1648  ldp d4, d5, [jssp], #32
0xffff5820ba94  1652  ldp d18, d19, [jssp, #16]
0xffff5820ba98  1656  ldp d16, d17, [jssp], #32
0xffff5820ba9c  1660  ldp d22, d23, [jssp, #16]
0xffff5820baa0  1664  ldp d20, d21, [jssp], #32
0xffff5820baa4  1668  ldp d26, d27, [jssp, #16]
0xffff5820baa8  1672  ldp d24, d25, [jssp], #32
0xffff5820baac  1676  ldp d28, d29, [jssp], #16
0xffff5820bab0  1680  ldp x5, x6, [jssp, #16]
0xffff5820bab4  1684  ldp x1, x4, [jssp], #32
0xffff5820bab8  1688  ldp x9, x10, [jssp, #16]
0xffff5820babc  1692  ldp x7, x8, [jssp], #32
0xffff5820bac0  1696  ldp x13, x14, [jssp, #16]
0xffff5820bac4  1700  ldp x11, x12, [jssp], #32
0xffff5820bac8  1704  ldr lr, [jssp, #16]
0xffff5820bacc  1708  ldp x15, x18, [jssp], #24
0xffff5820bad0  1712  ldp x3, x2, [jssp], #16
0xffff5820bad4  1716  ret
0xffff5820bad8  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5820badc  1724  d63f03e0       constant
0xffff5820bae0  1728  16e798c0       constant
0xffff5820bae4  1732  00000000       constant
0xffff5820bae8  1736  582065a0       constant
0xffff5820baec  1740  0000ffff       constant
0xffff5820baf0  1744  16e798c0       constant
0xffff5820baf4  1748  00000000       constant
0xffff5820baf8  1752  582065a0       constant
0xffff5820bafc  1756  0000ffff       constant
0xffff5820bb00  1760  16e798c0       constant
0xffff5820bb04  1764  00000000       constant
0xffff5820bb08  1768  582065a0       constant
0xffff5820bb0c  1772  0000ffff       constant
0xffff5820bb10  1776  16e782d0       constant
0xffff5820bb14  1780  00000000       constant
0xffff5820bb18  1784  00c2d958       constant
0xffff5820bb1c  1788  00000000       constant
0xffff5820bb20  1792  16e798c0       constant
0xffff5820bb24  1796  00000000       constant
0xffff5820bb28  1800  582065a0       constant
0xffff5820bb2c  1804  0000ffff       constant
0xffff5820bb30  1808  16e782d0       constant
0xffff5820bb34  1812  00000000       constant
0xffff5820bb38  1816  00c2d958       constant
0xffff5820bb3c  1820  00000000       constant
0xffff5820bb40  1824  16e798c0       constant
0xffff5820bb44  1828  00000000       constant
0xffff5820bb48  1832  582065a0       constant
0xffff5820bb4c  1836  0000ffff       constant
0xffff5820bb50  1840  16e798c0       constant
0xffff5820bb54  1844  00000000       constant
0xffff5820bb58  1848  582065a0       constant
0xffff5820bb5c  1852  0000ffff       constant
0xffff5820bb60  1856  16e782d0       constant
0xffff5820bb64  1860  00000000       constant
0xffff5820bb68  1864  00c2d958       constant
0xffff5820bb6c  1868  00000000       constant
0xffff5820bb70  1872  16e798c0       constant
0xffff5820bb74  1876  00000000       constant
0xffff5820bb78  1880  582065a0       constant
0xffff5820bb7c  1884  0000ffff       constant
0xffff5820bb80  1888  16e782d0       constant
0xffff5820bb84  1892  00000000       constant
0xffff5820bb88  1896  00c2d958       constant
0xffff5820bb8c  1900  00000000       constant


RelocInfo (size = 65)
0xffff5820b428  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820b44c  code target (STUB)  (0xffff582065a0)
0xffff5820b4c4  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820b4e8  code target (STUB)  (0xffff582065a0)
0xffff5820b528  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820b54c  code target (STUB)  (0xffff582065a0)
0xffff5820b5b8  external reference (isolate)  (0x16e782d0)
0xffff5820b5bc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820b618  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820b63c  code target (STUB)  (0xffff582065a0)
0xffff5820b718  external reference (isolate)  (0x16e782d0)
0xffff5820b71c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820b7e0  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820b804  code target (STUB)  (0xffff582065a0)
0xffff5820b864  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820b888  code target (STUB)  (0xffff582065a0)
0xffff5820b8f4  external reference (isolate)  (0x16e782d0)
0xffff5820b8f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820b954  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820b978  code target (STUB)  (0xffff582065a0)
0xffff5820ba74  external reference (isolate)  (0x16e782d0)
0xffff5820ba78  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820bad8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff5820bc00     0  adr xzr, #+0x40 (addr 0xffff5820bc40)
0xffff5820bc04     4  adr xzr, #+0x360 (addr 0xffff5820bf64)
0xffff5820bc08     8  ldr x16, pc+1736 (addr 0x0000ffff5820c2d0)    ;; external reference (store_buffer_top)
0xffff5820bc0c    12  ldr x1, [x16]
0xffff5820bc10    16  str x5, [x1], #8
0xffff5820bc14    20  str x1, [x16]
0xffff5820bc18    24  tst x1, #0x1ffff
0xffff5820bc1c    28  b.eq #+0x8 (addr 0xffff5820bc24)
0xffff5820bc20    32  ret
0xffff5820bc24    36  sub csp, jssp, #0x8 (8)
0xffff5820bc28    40  str lr, [jssp, #-8]!
0xffff5820bc2c    44  ldr x17, pc+1708 (addr 0x0000ffff5820c2d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820bc30    48  blr x17
0xffff5820bc34    52  ldr lr, [jssp], #8
0xffff5820bc38    56  ret
0xffff5820bc3c    60  ret
0xffff5820bc40    64  sub csp, jssp, #0x10 (16)
0xffff5820bc44    68  stp x2, x0, [jssp, #-16]!
0xffff5820bc48    72  ldr x1, [x5]
0xffff5820bc4c    76  and x16, x1, #0xfffffffffff00000
0xffff5820bc50    80  ldr x16, [x16, #8]
0xffff5820bc54    84  tst x16, #0x18
0xffff5820bc58    88  b.eq #+0x1d8 (addr 0xffff5820be30)
0xffff5820bc5c    92  and x16, x4, #0xfffffffffff00000
0xffff5820bc60    96  ldr x16, [x16, #8]
0xffff5820bc64   100  tst x16, #0x18
0xffff5820bc68   104  b.ne #+0x1c8 (addr 0xffff5820be30)
0xffff5820bc6c   108  and x1, x4, #0xfffffffffff00000
0xffff5820bc70   112  ldr x0, [x1, #104]
0xffff5820bc74   116  subs x0, x0, #0x1 (1)
0xffff5820bc78   120  str x0, [x1, #104]
0xffff5820bc7c   124  b.mi #+0xc4 (addr 0xffff5820bd40)
0xffff5820bc80   128  ubfx x16, x4, #8, #12
0xffff5820bc84   132  and x1, x4, #0xfffffffffff00000
0xffff5820bc88   136  add x1, x1, x16, lsl #2
0xffff5820bc8c   140  ubfx x0, x4, #3, #5
0xffff5820bc90   144  ldr x1, [x1, #360]
0xffff5820bc94   148  lsr x1, x1, x0
0xffff5820bc98   152  tbz w1, #0, #+0x8 (addr 0xffff5820bca0)
0xffff5820bc9c   156  tbnz w1, #1, #+0x3c (addr 0xffff5820bcd8)
0xffff5820bca0   160  ldp x2, x0, [jssp], #16
0xffff5820bca4   164  ldr x16, pc+1596 (addr 0x0000ffff5820c2e0)    ;; external reference (store_buffer_top)
0xffff5820bca8   168  ldr x1, [x16]
0xffff5820bcac   172  str x5, [x1], #8
0xffff5820bcb0   176  str x1, [x16]
0xffff5820bcb4   180  tst x1, #0x1ffff
0xffff5820bcb8   184  b.eq #+0x8 (addr 0xffff5820bcc0)
0xffff5820bcbc   188  ret
0xffff5820bcc0   192  sub csp, jssp, #0x8 (8)
0xffff5820bcc4   196  str lr, [jssp, #-8]!
0xffff5820bcc8   200  ldr x17, pc+1568 (addr 0x0000ffff5820c2e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820bccc   204  blr x17
0xffff5820bcd0   208  ldr lr, [jssp], #8
0xffff5820bcd4   212  ret
0xffff5820bcd8   216  ldr x1, [x5]
0xffff5820bcdc   220  sub csp, jssp, #0x10 (16)
0xffff5820bce0   224  stp x4, x5, [jssp, #-16]!
0xffff5820bce4   228  ubfx x16, x1, #8, #12
0xffff5820bce8   232  and x0, x1, #0xfffffffffff00000
0xffff5820bcec   236  add x0, x0, x16, lsl #2
0xffff5820bcf0   240  ubfx x4, x1, #3, #5
0xffff5820bcf4   244  ldr x5, [x0, #360]
0xffff5820bcf8   248  lsr x5, x5, x4
0xffff5820bcfc   252  tbz w5, #0, #+0x40 (addr 0xffff5820bd3c)
0xffff5820bd00   256  ldp x4, x5, [jssp], #16
0xffff5820bd04   260  ldp x2, x0, [jssp], #16
0xffff5820bd08   264  ldr x16, pc+1512 (addr 0x0000ffff5820c2f0)    ;; external reference (store_buffer_top)
0xffff5820bd0c   268  ldr x1, [x16]
0xffff5820bd10   272  str x5, [x1], #8
0xffff5820bd14   276  str x1, [x16]
0xffff5820bd18   280  tst x1, #0x1ffff
0xffff5820bd1c   284  b.eq #+0x8 (addr 0xffff5820bd24)
0xffff5820bd20   288  ret
0xffff5820bd24   292  sub csp, jssp, #0x8 (8)
0xffff5820bd28   296  str lr, [jssp, #-8]!
0xffff5820bd2c   300  ldr x17, pc+1484 (addr 0x0000ffff5820c2f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820bd30   304  blr x17
0xffff5820bd34   308  ldr lr, [jssp], #8
0xffff5820bd38   312  ret
0xffff5820bd3c   316  ldp x4, x5, [jssp], #16
0xffff5820bd40   320  sub csp, jssp, #0x78 (120)
0xffff5820bd44   324  stp x14, x15, [jssp, #-32]!
0xffff5820bd48   328  stp x18, lr, [jssp, #16]
0xffff5820bd4c   332  stp x10, x11, [jssp, #-32]!
0xffff5820bd50   336  stp x12, x13, [jssp, #16]
0xffff5820bd54   340  stp x6, x7, [jssp, #-32]!
0xffff5820bd58   344  stp x8, x9, [jssp, #16]
0xffff5820bd5c   348  stp x3, x4, [jssp, #-24]!
0xffff5820bd60   352  str x5, [jssp, #16]
0xffff5820bd64   356  sub csp, jssp, #0xb0 (176)
0xffff5820bd68   360  stp d26, d27, [jssp, #-32]!
0xffff5820bd6c   364  stp d28, d29, [jssp, #16]
0xffff5820bd70   368  stp d22, d23, [jssp, #-32]!
0xffff5820bd74   372  stp d24, d25, [jssp, #16]
0xffff5820bd78   376  stp d18, d19, [jssp, #-32]!
0xffff5820bd7c   380  stp d20, d21, [jssp, #16]
0xffff5820bd80   384  stp d6, d7, [jssp, #-32]!
0xffff5820bd84   388  stp d16, d17, [jssp, #16]
0xffff5820bd88   392  stp d2, d3, [jssp, #-32]!
0xffff5820bd8c   396  stp d4, d5, [jssp, #16]
0xffff5820bd90   400  stp d0, d1, [jssp, #-16]!
0xffff5820bd94   404  mov x0, x4
0xffff5820bd98   408  mov x1, x5
0xffff5820bd9c   412  ldr x2, pc+1380 (addr 0x0000ffff5820c300)    ;; external reference (isolate)
0xffff5820bda0   416  ldr x16, pc+1384 (addr 0x0000ffff5820c308)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820bda4   420  and csp, jssp, #0xfffffffffffffff0
0xffff5820bda8   424  blr x16
0xffff5820bdac   428  ldp d2, d3, [jssp, #16]
0xffff5820bdb0   432  ldp d0, d1, [jssp], #32
0xffff5820bdb4   436  ldp d6, d7, [jssp, #16]
0xffff5820bdb8   440  ldp d4, d5, [jssp], #32
0xffff5820bdbc   444  ldp d18, d19, [jssp, #16]
0xffff5820bdc0   448  ldp d16, d17, [jssp], #32
0xffff5820bdc4   452  ldp d22, d23, [jssp, #16]
0xffff5820bdc8   456  ldp d20, d21, [jssp], #32
0xffff5820bdcc   460  ldp d26, d27, [jssp, #16]
0xffff5820bdd0   464  ldp d24, d25, [jssp], #32
0xffff5820bdd4   468  ldp d28, d29, [jssp], #16
0xffff5820bdd8   472  ldp x5, x6, [jssp, #16]
0xffff5820bddc   476  ldp x3, x4, [jssp], #32
0xffff5820bde0   480  ldp x9, x10, [jssp, #16]
0xffff5820bde4   484  ldp x7, x8, [jssp], #32
0xffff5820bde8   488  ldp x13, x14, [jssp, #16]
0xffff5820bdec   492  ldp x11, x12, [jssp], #32
0xffff5820bdf0   496  ldr lr, [jssp, #16]
0xffff5820bdf4   500  ldp x15, x18, [jssp], #24
0xffff5820bdf8   504  ldp x2, x0, [jssp], #16
0xffff5820bdfc   508  ldr x16, pc+1300 (addr 0x0000ffff5820c310)    ;; external reference (store_buffer_top)
0xffff5820be00   512  ldr x1, [x16]
0xffff5820be04   516  str x5, [x1], #8
0xffff5820be08   520  str x1, [x16]
0xffff5820be0c   524  tst x1, #0x1ffff
0xffff5820be10   528  b.eq #+0x8 (addr 0xffff5820be18)
0xffff5820be14   532  ret
0xffff5820be18   536  sub csp, jssp, #0x8 (8)
0xffff5820be1c   540  str lr, [jssp, #-8]!
0xffff5820be20   544  ldr x17, pc+1272 (addr 0x0000ffff5820c318)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820be24   548  blr x17
0xffff5820be28   552  ldr lr, [jssp], #8
0xffff5820be2c   556  ret
0xffff5820be30   560  and x1, x4, #0xfffffffffff00000
0xffff5820be34   564  ldr x0, [x1, #104]
0xffff5820be38   568  subs x0, x0, #0x1 (1)
0xffff5820be3c   572  str x0, [x1, #104]
0xffff5820be40   576  b.mi #+0x64 (addr 0xffff5820bea4)
0xffff5820be44   580  ubfx x16, x4, #8, #12
0xffff5820be48   584  and x1, x4, #0xfffffffffff00000
0xffff5820be4c   588  add x1, x1, x16, lsl #2
0xffff5820be50   592  ubfx x0, x4, #3, #5
0xffff5820be54   596  ldr x1, [x1, #360]
0xffff5820be58   600  lsr x1, x1, x0
0xffff5820be5c   604  tbz w1, #0, #+0x8 (addr 0xffff5820be64)
0xffff5820be60   608  tbnz w1, #1, #+0xc (addr 0xffff5820be6c)
0xffff5820be64   612  ldp x2, x0, [jssp], #16
0xffff5820be68   616  ret
0xffff5820be6c   620  ldr x1, [x5]
0xffff5820be70   624  sub csp, jssp, #0x10 (16)
0xffff5820be74   628  stp x4, x5, [jssp, #-16]!
0xffff5820be78   632  ubfx x16, x1, #8, #12
0xffff5820be7c   636  and x0, x1, #0xfffffffffff00000
0xffff5820be80   640  add x0, x0, x16, lsl #2
0xffff5820be84   644  ubfx x4, x1, #3, #5
0xffff5820be88   648  ldr x5, [x0, #360]
0xffff5820be8c   652  lsr x5, x5, x4
0xffff5820be90   656  tbz w5, #0, #+0x10 (addr 0xffff5820bea0)
0xffff5820be94   660  ldp x4, x5, [jssp], #16
0xffff5820be98   664  ldp x2, x0, [jssp], #16
0xffff5820be9c   668  ret
0xffff5820bea0   672  ldp x4, x5, [jssp], #16
0xffff5820bea4   676  sub csp, jssp, #0x78 (120)
0xffff5820bea8   680  stp x14, x15, [jssp, #-32]!
0xffff5820beac   684  stp x18, lr, [jssp, #16]
0xffff5820beb0   688  stp x10, x11, [jssp, #-32]!
0xffff5820beb4   692  stp x12, x13, [jssp, #16]
0xffff5820beb8   696  stp x6, x7, [jssp, #-32]!
0xffff5820bebc   700  stp x8, x9, [jssp, #16]
0xffff5820bec0   704  stp x3, x4, [jssp, #-24]!
0xffff5820bec4   708  str x5, [jssp, #16]
0xffff5820bec8   712  sub csp, jssp, #0xb0 (176)
0xffff5820becc   716  stp d26, d27, [jssp, #-32]!
0xffff5820bed0   720  stp d28, d29, [jssp, #16]
0xffff5820bed4   724  stp d22, d23, [jssp, #-32]!
0xffff5820bed8   728  stp d24, d25, [jssp, #16]
0xffff5820bedc   732  stp d18, d19, [jssp, #-32]!
0xffff5820bee0   736  stp d20, d21, [jssp, #16]
0xffff5820bee4   740  stp d6, d7, [jssp, #-32]!
0xffff5820bee8   744  stp d16, d17, [jssp, #16]
0xffff5820beec   748  stp d2, d3, [jssp, #-32]!
0xffff5820bef0   752  stp d4, d5, [jssp, #16]
0xffff5820bef4   756  stp d0, d1, [jssp, #-16]!
0xffff5820bef8   760  mov x0, x4
0xffff5820befc   764  mov x1, x5
0xffff5820bf00   768  ldr x2, pc+1056 (addr 0x0000ffff5820c320)    ;; external reference (isolate)
0xffff5820bf04   772  ldr x16, pc+1060 (addr 0x0000ffff5820c328)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820bf08   776  and csp, jssp, #0xfffffffffffffff0
0xffff5820bf0c   780  blr x16
0xffff5820bf10   784  ldp d2, d3, [jssp, #16]
0xffff5820bf14   788  ldp d0, d1, [jssp], #32
0xffff5820bf18   792  ldp d6, d7, [jssp, #16]
0xffff5820bf1c   796  ldp d4, d5, [jssp], #32
0xffff5820bf20   800  ldp d18, d19, [jssp, #16]
0xffff5820bf24   804  ldp d16, d17, [jssp], #32
0xffff5820bf28   808  ldp d22, d23, [jssp, #16]
0xffff5820bf2c   812  ldp d20, d21, [jssp], #32
0xffff5820bf30   816  ldp d26, d27, [jssp, #16]
0xffff5820bf34   820  ldp d24, d25, [jssp], #32
0xffff5820bf38   824  ldp d28, d29, [jssp], #16
0xffff5820bf3c   828  ldp x5, x6, [jssp, #16]
0xffff5820bf40   832  ldp x3, x4, [jssp], #32
0xffff5820bf44   836  ldp x9, x10, [jssp, #16]
0xffff5820bf48   840  ldp x7, x8, [jssp], #32
0xffff5820bf4c   844  ldp x13, x14, [jssp, #16]
0xffff5820bf50   848  ldp x11, x12, [jssp], #32
0xffff5820bf54   852  ldr lr, [jssp, #16]
0xffff5820bf58   856  ldp x15, x18, [jssp], #24
0xffff5820bf5c   860  ldp x2, x0, [jssp], #16
0xffff5820bf60   864  ret
0xffff5820bf64   868  sub csp, jssp, #0x10 (16)
0xffff5820bf68   872  stp x2, x0, [jssp, #-16]!
0xffff5820bf6c   876  ldr x1, [x5]
0xffff5820bf70   880  and x16, x1, #0xfffffffffff00000
0xffff5820bf74   884  ldr x16, [x16, #8]
0xffff5820bf78   888  tst x16, #0x18
0xffff5820bf7c   892  b.eq #+0x1f8 (addr 0xffff5820c174)
0xffff5820bf80   896  and x16, x4, #0xfffffffffff00000
0xffff5820bf84   900  ldr x16, [x16, #8]
0xffff5820bf88   904  tst x16, #0x18
0xffff5820bf8c   908  b.ne #+0x1e8 (addr 0xffff5820c174)
0xffff5820bf90   912  and x1, x4, #0xfffffffffff00000
0xffff5820bf94   916  ldr x0, [x1, #104]
0xffff5820bf98   920  subs x0, x0, #0x1 (1)
0xffff5820bf9c   924  str x0, [x1, #104]
0xffff5820bfa0   928  b.mi #+0xe4 (addr 0xffff5820c084)
0xffff5820bfa4   932  ubfx x16, x4, #8, #12
0xffff5820bfa8   936  and x1, x4, #0xfffffffffff00000
0xffff5820bfac   940  add x1, x1, x16, lsl #2
0xffff5820bfb0   944  ubfx x0, x4, #3, #5
0xffff5820bfb4   948  ldr x1, [x1, #360]
0xffff5820bfb8   952  lsr x1, x1, x0
0xffff5820bfbc   956  tbz w1, #0, #+0x8 (addr 0xffff5820bfc4)
0xffff5820bfc0   960  tbnz w1, #1, #+0x3c (addr 0xffff5820bffc)
0xffff5820bfc4   964  ldp x2, x0, [jssp], #16
0xffff5820bfc8   968  ldr x16, pc+872 (addr 0x0000ffff5820c330)    ;; external reference (store_buffer_top)
0xffff5820bfcc   972  ldr x1, [x16]
0xffff5820bfd0   976  str x5, [x1], #8
0xffff5820bfd4   980  str x1, [x16]
0xffff5820bfd8   984  tst x1, #0x1ffff
0xffff5820bfdc   988  b.eq #+0x8 (addr 0xffff5820bfe4)
0xffff5820bfe0   992  ret
0xffff5820bfe4   996  sub csp, jssp, #0x8 (8)
0xffff5820bfe8  1000  str lr, [jssp, #-8]!
0xffff5820bfec  1004  ldr x17, pc+844 (addr 0x0000ffff5820c338)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820bff0  1008  blr x17
0xffff5820bff4  1012  ldr lr, [jssp], #8
0xffff5820bff8  1016  ret
0xffff5820bffc  1020  ldr x1, [x5]
0xffff5820c000  1024  and x0, x1, #0xfffffffffff00000
0xffff5820c004  1028  ldr x0, [x0, #8]
0xffff5820c008  1032  tbz w0, #6, #+0x18 (addr 0xffff5820c020)
0xffff5820c00c  1036  and x0, x4, #0xfffffffffff00000
0xffff5820c010  1040  ldr x0, [x0, #8]
0xffff5820c014  1044  movz x16, #0x58
0xffff5820c018  1048  tst x0, x16
0xffff5820c01c  1052  b.eq #+0x68 (addr 0xffff5820c084)
0xffff5820c020  1056  sub csp, jssp, #0x10 (16)
0xffff5820c024  1060  stp x4, x5, [jssp, #-16]!
0xffff5820c028  1064  ubfx x16, x1, #8, #12
0xffff5820c02c  1068  and x0, x1, #0xfffffffffff00000
0xffff5820c030  1072  add x0, x0, x16, lsl #2
0xffff5820c034  1076  ubfx x4, x1, #3, #5
0xffff5820c038  1080  ldr x5, [x0, #360]
0xffff5820c03c  1084  lsr x5, x5, x4
0xffff5820c040  1088  tbz w5, #0, #+0x40 (addr 0xffff5820c080)
0xffff5820c044  1092  ldp x4, x5, [jssp], #16
0xffff5820c048  1096  ldp x2, x0, [jssp], #16
0xffff5820c04c  1100  ldr x16, pc+756 (addr 0x0000ffff5820c340)    ;; external reference (store_buffer_top)
0xffff5820c050  1104  ldr x1, [x16]
0xffff5820c054  1108  str x5, [x1], #8
0xffff5820c058  1112  str x1, [x16]
0xffff5820c05c  1116  tst x1, #0x1ffff
0xffff5820c060  1120  b.eq #+0x8 (addr 0xffff5820c068)
0xffff5820c064  1124  ret
0xffff5820c068  1128  sub csp, jssp, #0x8 (8)
0xffff5820c06c  1132  str lr, [jssp, #-8]!
0xffff5820c070  1136  ldr x17, pc+728 (addr 0x0000ffff5820c348)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820c074  1140  blr x17
0xffff5820c078  1144  ldr lr, [jssp], #8
0xffff5820c07c  1148  ret
0xffff5820c080  1152  ldp x4, x5, [jssp], #16
0xffff5820c084  1156  sub csp, jssp, #0x78 (120)
0xffff5820c088  1160  stp x14, x15, [jssp, #-32]!
0xffff5820c08c  1164  stp x18, lr, [jssp, #16]
0xffff5820c090  1168  stp x10, x11, [jssp, #-32]!
0xffff5820c094  1172  stp x12, x13, [jssp, #16]
0xffff5820c098  1176  stp x6, x7, [jssp, #-32]!
0xffff5820c09c  1180  stp x8, x9, [jssp, #16]
0xffff5820c0a0  1184  stp x3, x4, [jssp, #-24]!
0xffff5820c0a4  1188  str x5, [jssp, #16]
0xffff5820c0a8  1192  sub csp, jssp, #0xb0 (176)
0xffff5820c0ac  1196  stp d26, d27, [jssp, #-32]!
0xffff5820c0b0  1200  stp d28, d29, [jssp, #16]
0xffff5820c0b4  1204  stp d22, d23, [jssp, #-32]!
0xffff5820c0b8  1208  stp d24, d25, [jssp, #16]
0xffff5820c0bc  1212  stp d18, d19, [jssp, #-32]!
0xffff5820c0c0  1216  stp d20, d21, [jssp, #16]
0xffff5820c0c4  1220  stp d6, d7, [jssp, #-32]!
0xffff5820c0c8  1224  stp d16, d17, [jssp, #16]
0xffff5820c0cc  1228  stp d2, d3, [jssp, #-32]!
0xffff5820c0d0  1232  stp d4, d5, [jssp, #16]
0xffff5820c0d4  1236  stp d0, d1, [jssp, #-16]!
0xffff5820c0d8  1240  mov x0, x4
0xffff5820c0dc  1244  mov x1, x5
0xffff5820c0e0  1248  ldr x2, pc+624 (addr 0x0000ffff5820c350)    ;; external reference (isolate)
0xffff5820c0e4  1252  ldr x16, pc+628 (addr 0x0000ffff5820c358)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820c0e8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff5820c0ec  1260  blr x16
0xffff5820c0f0  1264  ldp d2, d3, [jssp, #16]
0xffff5820c0f4  1268  ldp d0, d1, [jssp], #32
0xffff5820c0f8  1272  ldp d6, d7, [jssp, #16]
0xffff5820c0fc  1276  ldp d4, d5, [jssp], #32
0xffff5820c100  1280  ldp d18, d19, [jssp, #16]
0xffff5820c104  1284  ldp d16, d17, [jssp], #32
0xffff5820c108  1288  ldp d22, d23, [jssp, #16]
0xffff5820c10c  1292  ldp d20, d21, [jssp], #32
0xffff5820c110  1296  ldp d26, d27, [jssp, #16]
0xffff5820c114  1300  ldp d24, d25, [jssp], #32
0xffff5820c118  1304  ldp d28, d29, [jssp], #16
0xffff5820c11c  1308  ldp x5, x6, [jssp, #16]
0xffff5820c120  1312  ldp x3, x4, [jssp], #32
0xffff5820c124  1316  ldp x9, x10, [jssp, #16]
0xffff5820c128  1320  ldp x7, x8, [jssp], #32
0xffff5820c12c  1324  ldp x13, x14, [jssp, #16]
0xffff5820c130  1328  ldp x11, x12, [jssp], #32
0xffff5820c134  1332  ldr lr, [jssp, #16]
0xffff5820c138  1336  ldp x15, x18, [jssp], #24
0xffff5820c13c  1340  ldp x2, x0, [jssp], #16
0xffff5820c140  1344  ldr x16, pc+544 (addr 0x0000ffff5820c360)    ;; external reference (store_buffer_top)
0xffff5820c144  1348  ldr x1, [x16]
0xffff5820c148  1352  str x5, [x1], #8
0xffff5820c14c  1356  str x1, [x16]
0xffff5820c150  1360  tst x1, #0x1ffff
0xffff5820c154  1364  b.eq #+0x8 (addr 0xffff5820c15c)
0xffff5820c158  1368  ret
0xffff5820c15c  1372  sub csp, jssp, #0x8 (8)
0xffff5820c160  1376  str lr, [jssp, #-8]!
0xffff5820c164  1380  ldr x17, pc+516 (addr 0x0000ffff5820c368)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820c168  1384  blr x17
0xffff5820c16c  1388  ldr lr, [jssp], #8
0xffff5820c170  1392  ret
0xffff5820c174  1396  and x1, x4, #0xfffffffffff00000
0xffff5820c178  1400  ldr x0, [x1, #104]
0xffff5820c17c  1404  subs x0, x0, #0x1 (1)
0xffff5820c180  1408  str x0, [x1, #104]
0xffff5820c184  1412  b.mi #+0x84 (addr 0xffff5820c208)
0xffff5820c188  1416  ubfx x16, x4, #8, #12
0xffff5820c18c  1420  and x1, x4, #0xfffffffffff00000
0xffff5820c190  1424  add x1, x1, x16, lsl #2
0xffff5820c194  1428  ubfx x0, x4, #3, #5
0xffff5820c198  1432  ldr x1, [x1, #360]
0xffff5820c19c  1436  lsr x1, x1, x0
0xffff5820c1a0  1440  tbz w1, #0, #+0x8 (addr 0xffff5820c1a8)
0xffff5820c1a4  1444  tbnz w1, #1, #+0xc (addr 0xffff5820c1b0)
0xffff5820c1a8  1448  ldp x2, x0, [jssp], #16
0xffff5820c1ac  1452  ret
0xffff5820c1b0  1456  ldr x1, [x5]
0xffff5820c1b4  1460  and x0, x1, #0xfffffffffff00000
0xffff5820c1b8  1464  ldr x0, [x0, #8]
0xffff5820c1bc  1468  tbz w0, #6, #+0x18 (addr 0xffff5820c1d4)
0xffff5820c1c0  1472  and x0, x4, #0xfffffffffff00000
0xffff5820c1c4  1476  ldr x0, [x0, #8]
0xffff5820c1c8  1480  movz x16, #0x58
0xffff5820c1cc  1484  tst x0, x16
0xffff5820c1d0  1488  b.eq #+0x38 (addr 0xffff5820c208)
0xffff5820c1d4  1492  sub csp, jssp, #0x10 (16)
0xffff5820c1d8  1496  stp x4, x5, [jssp, #-16]!
0xffff5820c1dc  1500  ubfx x16, x1, #8, #12
0xffff5820c1e0  1504  and x0, x1, #0xfffffffffff00000
0xffff5820c1e4  1508  add x0, x0, x16, lsl #2
0xffff5820c1e8  1512  ubfx x4, x1, #3, #5
0xffff5820c1ec  1516  ldr x5, [x0, #360]
0xffff5820c1f0  1520  lsr x5, x5, x4
0xffff5820c1f4  1524  tbz w5, #0, #+0x10 (addr 0xffff5820c204)
0xffff5820c1f8  1528  ldp x4, x5, [jssp], #16
0xffff5820c1fc  1532  ldp x2, x0, [jssp], #16
0xffff5820c200  1536  ret
0xffff5820c204  1540  ldp x4, x5, [jssp], #16
0xffff5820c208  1544  sub csp, jssp, #0x78 (120)
0xffff5820c20c  1548  stp x14, x15, [jssp, #-32]!
0xffff5820c210  1552  stp x18, lr, [jssp, #16]
0xffff5820c214  1556  stp x10, x11, [jssp, #-32]!
0xffff5820c218  1560  stp x12, x13, [jssp, #16]
0xffff5820c21c  1564  stp x6, x7, [jssp, #-32]!
0xffff5820c220  1568  stp x8, x9, [jssp, #16]
0xffff5820c224  1572  stp x3, x4, [jssp, #-24]!
0xffff5820c228  1576  str x5, [jssp, #16]
0xffff5820c22c  1580  sub csp, jssp, #0xb0 (176)
0xffff5820c230  1584  stp d26, d27, [jssp, #-32]!
0xffff5820c234  1588  stp d28, d29, [jssp, #16]
0xffff5820c238  1592  stp d22, d23, [jssp, #-32]!
0xffff5820c23c  1596  stp d24, d25, [jssp, #16]
0xffff5820c240  1600  stp d18, d19, [jssp, #-32]!
0xffff5820c244  1604  stp d20, d21, [jssp, #16]
0xffff5820c248  1608  stp d6, d7, [jssp, #-32]!
0xffff5820c24c  1612  stp d16, d17, [jssp, #16]
0xffff5820c250  1616  stp d2, d3, [jssp, #-32]!
0xffff5820c254  1620  stp d4, d5, [jssp, #16]
0xffff5820c258  1624  stp d0, d1, [jssp, #-16]!
0xffff5820c25c  1628  mov x0, x4
0xffff5820c260  1632  mov x1, x5
0xffff5820c264  1636  ldr x2, pc+268 (addr 0x0000ffff5820c370)    ;; external reference (isolate)
0xffff5820c268  1640  ldr x16, pc+272 (addr 0x0000ffff5820c378)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820c26c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff5820c270  1648  blr x16
0xffff5820c274  1652  ldp d2, d3, [jssp, #16]
0xffff5820c278  1656  ldp d0, d1, [jssp], #32
0xffff5820c27c  1660  ldp d6, d7, [jssp, #16]
0xffff5820c280  1664  ldp d4, d5, [jssp], #32
0xffff5820c284  1668  ldp d18, d19, [jssp, #16]
0xffff5820c288  1672  ldp d16, d17, [jssp], #32
0xffff5820c28c  1676  ldp d22, d23, [jssp, #16]
0xffff5820c290  1680  ldp d20, d21, [jssp], #32
0xffff5820c294  1684  ldp d26, d27, [jssp, #16]
0xffff5820c298  1688  ldp d24, d25, [jssp], #32
0xffff5820c29c  1692  ldp d28, d29, [jssp], #16
0xffff5820c2a0  1696  ldp x5, x6, [jssp, #16]
0xffff5820c2a4  1700  ldp x3, x4, [jssp], #32
0xffff5820c2a8  1704  ldp x9, x10, [jssp, #16]
0xffff5820c2ac  1708  ldp x7, x8, [jssp], #32
0xffff5820c2b0  1712  ldp x13, x14, [jssp, #16]
0xffff5820c2b4  1716  ldp x11, x12, [jssp], #32
0xffff5820c2b8  1720  ldr lr, [jssp, #16]
0xffff5820c2bc  1724  ldp x15, x18, [jssp], #24
0xffff5820c2c0  1728  ldp x2, x0, [jssp], #16
0xffff5820c2c4  1732  ret
0xffff5820c2c8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5820c2cc  1740  d63f03e0       constant
0xffff5820c2d0  1744  16e798c0       constant
0xffff5820c2d4  1748  00000000       constant
0xffff5820c2d8  1752  582065a0       constant
0xffff5820c2dc  1756  0000ffff       constant
0xffff5820c2e0  1760  16e798c0       constant
0xffff5820c2e4  1764  00000000       constant
0xffff5820c2e8  1768  582065a0       constant
0xffff5820c2ec  1772  0000ffff       constant
0xffff5820c2f0  1776  16e798c0       constant
0xffff5820c2f4  1780  00000000       constant
0xffff5820c2f8  1784  582065a0       constant
0xffff5820c2fc  1788  0000ffff       constant
0xffff5820c300  1792  16e782d0       constant
0xffff5820c304  1796  00000000       constant
0xffff5820c308  1800  00c2d958       constant
0xffff5820c30c  1804  00000000       constant
0xffff5820c310  1808  16e798c0       constant
0xffff5820c314  1812  00000000       constant
0xffff5820c318  1816  582065a0       constant
0xffff5820c31c  1820  0000ffff       constant
0xffff5820c320  1824  16e782d0       constant
0xffff5820c324  1828  00000000       constant
0xffff5820c328  1832  00c2d958       constant
0xffff5820c32c  1836  00000000       constant
0xffff5820c330  1840  16e798c0       constant
0xffff5820c334  1844  00000000       constant
0xffff5820c338  1848  582065a0       constant
0xffff5820c33c  1852  0000ffff       constant
0xffff5820c340  1856  16e798c0       constant
0xffff5820c344  1860  00000000       constant
0xffff5820c348  1864  582065a0       constant
0xffff5820c34c  1868  0000ffff       constant
0xffff5820c350  1872  16e782d0       constant
0xffff5820c354  1876  00000000       constant
0xffff5820c358  1880  00c2d958       constant
0xffff5820c35c  1884  00000000       constant
0xffff5820c360  1888  16e798c0       constant
0xffff5820c364  1892  00000000       constant
0xffff5820c368  1896  582065a0       constant
0xffff5820c36c  1900  0000ffff       constant
0xffff5820c370  1904  16e782d0       constant
0xffff5820c374  1908  00000000       constant
0xffff5820c378  1912  00c2d958       constant
0xffff5820c37c  1916  00000000       constant


RelocInfo (size = 65)
0xffff5820bc08  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820bc2c  code target (STUB)  (0xffff582065a0)
0xffff5820bca4  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820bcc8  code target (STUB)  (0xffff582065a0)
0xffff5820bd08  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820bd2c  code target (STUB)  (0xffff582065a0)
0xffff5820bd9c  external reference (isolate)  (0x16e782d0)
0xffff5820bda0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820bdfc  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820be20  code target (STUB)  (0xffff582065a0)
0xffff5820bf00  external reference (isolate)  (0x16e782d0)
0xffff5820bf04  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820bfc8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820bfec  code target (STUB)  (0xffff582065a0)
0xffff5820c04c  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820c070  code target (STUB)  (0xffff582065a0)
0xffff5820c0e0  external reference (isolate)  (0x16e782d0)
0xffff5820c0e4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820c140  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820c164  code target (STUB)  (0xffff582065a0)
0xffff5820c264  external reference (isolate)  (0x16e782d0)
0xffff5820c268  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820c2c8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff5820c3e0     0  adr xzr, #+0x40 (addr 0xffff5820c420)
0xffff5820c3e4     4  adr xzr, #+0x360 (addr 0xffff5820c744)
0xffff5820c3e8     8  ldr x16, pc+1736 (addr 0x0000ffff5820cab0)    ;; external reference (store_buffer_top)
0xffff5820c3ec    12  ldr x4, [x16]
0xffff5820c3f0    16  str x3, [x4], #8
0xffff5820c3f4    20  str x4, [x16]
0xffff5820c3f8    24  tst x4, #0x1ffff
0xffff5820c3fc    28  b.eq #+0x8 (addr 0xffff5820c404)
0xffff5820c400    32  ret
0xffff5820c404    36  sub csp, jssp, #0x8 (8)
0xffff5820c408    40  str lr, [jssp, #-8]!
0xffff5820c40c    44  ldr x17, pc+1708 (addr 0x0000ffff5820cab8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820c410    48  blr x17
0xffff5820c414    52  ldr lr, [jssp], #8
0xffff5820c418    56  ret
0xffff5820c41c    60  ret
0xffff5820c420    64  sub csp, jssp, #0x10 (16)
0xffff5820c424    68  stp x2, x0, [jssp, #-16]!
0xffff5820c428    72  ldr x4, [x3]
0xffff5820c42c    76  and x16, x4, #0xfffffffffff00000
0xffff5820c430    80  ldr x16, [x16, #8]
0xffff5820c434    84  tst x16, #0x18
0xffff5820c438    88  b.eq #+0x1d8 (addr 0xffff5820c610)
0xffff5820c43c    92  and x16, x1, #0xfffffffffff00000
0xffff5820c440    96  ldr x16, [x16, #8]
0xffff5820c444   100  tst x16, #0x18
0xffff5820c448   104  b.ne #+0x1c8 (addr 0xffff5820c610)
0xffff5820c44c   108  and x4, x1, #0xfffffffffff00000
0xffff5820c450   112  ldr x0, [x4, #104]
0xffff5820c454   116  subs x0, x0, #0x1 (1)
0xffff5820c458   120  str x0, [x4, #104]
0xffff5820c45c   124  b.mi #+0xc4 (addr 0xffff5820c520)
0xffff5820c460   128  ubfx x16, x1, #8, #12
0xffff5820c464   132  and x4, x1, #0xfffffffffff00000
0xffff5820c468   136  add x4, x4, x16, lsl #2
0xffff5820c46c   140  ubfx x0, x1, #3, #5
0xffff5820c470   144  ldr x4, [x4, #360]
0xffff5820c474   148  lsr x4, x4, x0
0xffff5820c478   152  tbz w4, #0, #+0x8 (addr 0xffff5820c480)
0xffff5820c47c   156  tbnz w4, #1, #+0x3c (addr 0xffff5820c4b8)
0xffff5820c480   160  ldp x2, x0, [jssp], #16
0xffff5820c484   164  ldr x16, pc+1596 (addr 0x0000ffff5820cac0)    ;; external reference (store_buffer_top)
0xffff5820c488   168  ldr x4, [x16]
0xffff5820c48c   172  str x3, [x4], #8
0xffff5820c490   176  str x4, [x16]
0xffff5820c494   180  tst x4, #0x1ffff
0xffff5820c498   184  b.eq #+0x8 (addr 0xffff5820c4a0)
0xffff5820c49c   188  ret
0xffff5820c4a0   192  sub csp, jssp, #0x8 (8)
0xffff5820c4a4   196  str lr, [jssp, #-8]!
0xffff5820c4a8   200  ldr x17, pc+1568 (addr 0x0000ffff5820cac8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820c4ac   204  blr x17
0xffff5820c4b0   208  ldr lr, [jssp], #8
0xffff5820c4b4   212  ret
0xffff5820c4b8   216  ldr x4, [x3]
0xffff5820c4bc   220  sub csp, jssp, #0x10 (16)
0xffff5820c4c0   224  stp x1, x3, [jssp, #-16]!
0xffff5820c4c4   228  ubfx x16, x4, #8, #12
0xffff5820c4c8   232  and x0, x4, #0xfffffffffff00000
0xffff5820c4cc   236  add x0, x0, x16, lsl #2
0xffff5820c4d0   240  ubfx x1, x4, #3, #5
0xffff5820c4d4   244  ldr x3, [x0, #360]
0xffff5820c4d8   248  lsr x3, x3, x1
0xffff5820c4dc   252  tbz w3, #0, #+0x40 (addr 0xffff5820c51c)
0xffff5820c4e0   256  ldp x1, x3, [jssp], #16
0xffff5820c4e4   260  ldp x2, x0, [jssp], #16
0xffff5820c4e8   264  ldr x16, pc+1512 (addr 0x0000ffff5820cad0)    ;; external reference (store_buffer_top)
0xffff5820c4ec   268  ldr x4, [x16]
0xffff5820c4f0   272  str x3, [x4], #8
0xffff5820c4f4   276  str x4, [x16]
0xffff5820c4f8   280  tst x4, #0x1ffff
0xffff5820c4fc   284  b.eq #+0x8 (addr 0xffff5820c504)
0xffff5820c500   288  ret
0xffff5820c504   292  sub csp, jssp, #0x8 (8)
0xffff5820c508   296  str lr, [jssp, #-8]!
0xffff5820c50c   300  ldr x17, pc+1484 (addr 0x0000ffff5820cad8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820c510   304  blr x17
0xffff5820c514   308  ldr lr, [jssp], #8
0xffff5820c518   312  ret
0xffff5820c51c   316  ldp x1, x3, [jssp], #16
0xffff5820c520   320  sub csp, jssp, #0x78 (120)
0xffff5820c524   324  stp x14, x15, [jssp, #-32]!
0xffff5820c528   328  stp x18, lr, [jssp, #16]
0xffff5820c52c   332  stp x10, x11, [jssp, #-32]!
0xffff5820c530   336  stp x12, x13, [jssp, #16]
0xffff5820c534   340  stp x6, x7, [jssp, #-32]!
0xffff5820c538   344  stp x8, x9, [jssp, #16]
0xffff5820c53c   348  stp x1, x3, [jssp, #-24]!
0xffff5820c540   352  str x5, [jssp, #16]
0xffff5820c544   356  sub csp, jssp, #0xb0 (176)
0xffff5820c548   360  stp d26, d27, [jssp, #-32]!
0xffff5820c54c   364  stp d28, d29, [jssp, #16]
0xffff5820c550   368  stp d22, d23, [jssp, #-32]!
0xffff5820c554   372  stp d24, d25, [jssp, #16]
0xffff5820c558   376  stp d18, d19, [jssp, #-32]!
0xffff5820c55c   380  stp d20, d21, [jssp, #16]
0xffff5820c560   384  stp d6, d7, [jssp, #-32]!
0xffff5820c564   388  stp d16, d17, [jssp, #16]
0xffff5820c568   392  stp d2, d3, [jssp, #-32]!
0xffff5820c56c   396  stp d4, d5, [jssp, #16]
0xffff5820c570   400  stp d0, d1, [jssp, #-16]!
0xffff5820c574   404  mov x0, x1
0xffff5820c578   408  mov x1, x3
0xffff5820c57c   412  ldr x2, pc+1380 (addr 0x0000ffff5820cae0)    ;; external reference (isolate)
0xffff5820c580   416  ldr x16, pc+1384 (addr 0x0000ffff5820cae8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820c584   420  and csp, jssp, #0xfffffffffffffff0
0xffff5820c588   424  blr x16
0xffff5820c58c   428  ldp d2, d3, [jssp, #16]
0xffff5820c590   432  ldp d0, d1, [jssp], #32
0xffff5820c594   436  ldp d6, d7, [jssp, #16]
0xffff5820c598   440  ldp d4, d5, [jssp], #32
0xffff5820c59c   444  ldp d18, d19, [jssp, #16]
0xffff5820c5a0   448  ldp d16, d17, [jssp], #32
0xffff5820c5a4   452  ldp d22, d23, [jssp, #16]
0xffff5820c5a8   456  ldp d20, d21, [jssp], #32
0xffff5820c5ac   460  ldp d26, d27, [jssp, #16]
0xffff5820c5b0   464  ldp d24, d25, [jssp], #32
0xffff5820c5b4   468  ldp d28, d29, [jssp], #16
0xffff5820c5b8   472  ldp x5, x6, [jssp, #16]
0xffff5820c5bc   476  ldp x1, x3, [jssp], #32
0xffff5820c5c0   480  ldp x9, x10, [jssp, #16]
0xffff5820c5c4   484  ldp x7, x8, [jssp], #32
0xffff5820c5c8   488  ldp x13, x14, [jssp, #16]
0xffff5820c5cc   492  ldp x11, x12, [jssp], #32
0xffff5820c5d0   496  ldr lr, [jssp, #16]
0xffff5820c5d4   500  ldp x15, x18, [jssp], #24
0xffff5820c5d8   504  ldp x2, x0, [jssp], #16
0xffff5820c5dc   508  ldr x16, pc+1300 (addr 0x0000ffff5820caf0)    ;; external reference (store_buffer_top)
0xffff5820c5e0   512  ldr x4, [x16]
0xffff5820c5e4   516  str x3, [x4], #8
0xffff5820c5e8   520  str x4, [x16]
0xffff5820c5ec   524  tst x4, #0x1ffff
0xffff5820c5f0   528  b.eq #+0x8 (addr 0xffff5820c5f8)
0xffff5820c5f4   532  ret
0xffff5820c5f8   536  sub csp, jssp, #0x8 (8)
0xffff5820c5fc   540  str lr, [jssp, #-8]!
0xffff5820c600   544  ldr x17, pc+1272 (addr 0x0000ffff5820caf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820c604   548  blr x17
0xffff5820c608   552  ldr lr, [jssp], #8
0xffff5820c60c   556  ret
0xffff5820c610   560  and x4, x1, #0xfffffffffff00000
0xffff5820c614   564  ldr x0, [x4, #104]
0xffff5820c618   568  subs x0, x0, #0x1 (1)
0xffff5820c61c   572  str x0, [x4, #104]
0xffff5820c620   576  b.mi #+0x64 (addr 0xffff5820c684)
0xffff5820c624   580  ubfx x16, x1, #8, #12
0xffff5820c628   584  and x4, x1, #0xfffffffffff00000
0xffff5820c62c   588  add x4, x4, x16, lsl #2
0xffff5820c630   592  ubfx x0, x1, #3, #5
0xffff5820c634   596  ldr x4, [x4, #360]
0xffff5820c638   600  lsr x4, x4, x0
0xffff5820c63c   604  tbz w4, #0, #+0x8 (addr 0xffff5820c644)
0xffff5820c640   608  tbnz w4, #1, #+0xc (addr 0xffff5820c64c)
0xffff5820c644   612  ldp x2, x0, [jssp], #16
0xffff5820c648   616  ret
0xffff5820c64c   620  ldr x4, [x3]
0xffff5820c650   624  sub csp, jssp, #0x10 (16)
0xffff5820c654   628  stp x1, x3, [jssp, #-16]!
0xffff5820c658   632  ubfx x16, x4, #8, #12
0xffff5820c65c   636  and x0, x4, #0xfffffffffff00000
0xffff5820c660   640  add x0, x0, x16, lsl #2
0xffff5820c664   644  ubfx x1, x4, #3, #5
0xffff5820c668   648  ldr x3, [x0, #360]
0xffff5820c66c   652  lsr x3, x3, x1
0xffff5820c670   656  tbz w3, #0, #+0x10 (addr 0xffff5820c680)
0xffff5820c674   660  ldp x1, x3, [jssp], #16
0xffff5820c678   664  ldp x2, x0, [jssp], #16
0xffff5820c67c   668  ret
0xffff5820c680   672  ldp x1, x3, [jssp], #16
0xffff5820c684   676  sub csp, jssp, #0x78 (120)
0xffff5820c688   680  stp x14, x15, [jssp, #-32]!
0xffff5820c68c   684  stp x18, lr, [jssp, #16]
0xffff5820c690   688  stp x10, x11, [jssp, #-32]!
0xffff5820c694   692  stp x12, x13, [jssp, #16]
0xffff5820c698   696  stp x6, x7, [jssp, #-32]!
0xffff5820c69c   700  stp x8, x9, [jssp, #16]
0xffff5820c6a0   704  stp x1, x3, [jssp, #-24]!
0xffff5820c6a4   708  str x5, [jssp, #16]
0xffff5820c6a8   712  sub csp, jssp, #0xb0 (176)
0xffff5820c6ac   716  stp d26, d27, [jssp, #-32]!
0xffff5820c6b0   720  stp d28, d29, [jssp, #16]
0xffff5820c6b4   724  stp d22, d23, [jssp, #-32]!
0xffff5820c6b8   728  stp d24, d25, [jssp, #16]
0xffff5820c6bc   732  stp d18, d19, [jssp, #-32]!
0xffff5820c6c0   736  stp d20, d21, [jssp, #16]
0xffff5820c6c4   740  stp d6, d7, [jssp, #-32]!
0xffff5820c6c8   744  stp d16, d17, [jssp, #16]
0xffff5820c6cc   748  stp d2, d3, [jssp, #-32]!
0xffff5820c6d0   752  stp d4, d5, [jssp, #16]
0xffff5820c6d4   756  stp d0, d1, [jssp, #-16]!
0xffff5820c6d8   760  mov x0, x1
0xffff5820c6dc   764  mov x1, x3
0xffff5820c6e0   768  ldr x2, pc+1056 (addr 0x0000ffff5820cb00)    ;; external reference (isolate)
0xffff5820c6e4   772  ldr x16, pc+1060 (addr 0x0000ffff5820cb08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820c6e8   776  and csp, jssp, #0xfffffffffffffff0
0xffff5820c6ec   780  blr x16
0xffff5820c6f0   784  ldp d2, d3, [jssp, #16]
0xffff5820c6f4   788  ldp d0, d1, [jssp], #32
0xffff5820c6f8   792  ldp d6, d7, [jssp, #16]
0xffff5820c6fc   796  ldp d4, d5, [jssp], #32
0xffff5820c700   800  ldp d18, d19, [jssp, #16]
0xffff5820c704   804  ldp d16, d17, [jssp], #32
0xffff5820c708   808  ldp d22, d23, [jssp, #16]
0xffff5820c70c   812  ldp d20, d21, [jssp], #32
0xffff5820c710   816  ldp d26, d27, [jssp, #16]
0xffff5820c714   820  ldp d24, d25, [jssp], #32
0xffff5820c718   824  ldp d28, d29, [jssp], #16
0xffff5820c71c   828  ldp x5, x6, [jssp, #16]
0xffff5820c720   832  ldp x1, x3, [jssp], #32
0xffff5820c724   836  ldp x9, x10, [jssp, #16]
0xffff5820c728   840  ldp x7, x8, [jssp], #32
0xffff5820c72c   844  ldp x13, x14, [jssp, #16]
0xffff5820c730   848  ldp x11, x12, [jssp], #32
0xffff5820c734   852  ldr lr, [jssp, #16]
0xffff5820c738   856  ldp x15, x18, [jssp], #24
0xffff5820c73c   860  ldp x2, x0, [jssp], #16
0xffff5820c740   864  ret
0xffff5820c744   868  sub csp, jssp, #0x10 (16)
0xffff5820c748   872  stp x2, x0, [jssp, #-16]!
0xffff5820c74c   876  ldr x4, [x3]
0xffff5820c750   880  and x16, x4, #0xfffffffffff00000
0xffff5820c754   884  ldr x16, [x16, #8]
0xffff5820c758   888  tst x16, #0x18
0xffff5820c75c   892  b.eq #+0x1f8 (addr 0xffff5820c954)
0xffff5820c760   896  and x16, x1, #0xfffffffffff00000
0xffff5820c764   900  ldr x16, [x16, #8]
0xffff5820c768   904  tst x16, #0x18
0xffff5820c76c   908  b.ne #+0x1e8 (addr 0xffff5820c954)
0xffff5820c770   912  and x4, x1, #0xfffffffffff00000
0xffff5820c774   916  ldr x0, [x4, #104]
0xffff5820c778   920  subs x0, x0, #0x1 (1)
0xffff5820c77c   924  str x0, [x4, #104]
0xffff5820c780   928  b.mi #+0xe4 (addr 0xffff5820c864)
0xffff5820c784   932  ubfx x16, x1, #8, #12
0xffff5820c788   936  and x4, x1, #0xfffffffffff00000
0xffff5820c78c   940  add x4, x4, x16, lsl #2
0xffff5820c790   944  ubfx x0, x1, #3, #5
0xffff5820c794   948  ldr x4, [x4, #360]
0xffff5820c798   952  lsr x4, x4, x0
0xffff5820c79c   956  tbz w4, #0, #+0x8 (addr 0xffff5820c7a4)
0xffff5820c7a0   960  tbnz w4, #1, #+0x3c (addr 0xffff5820c7dc)
0xffff5820c7a4   964  ldp x2, x0, [jssp], #16
0xffff5820c7a8   968  ldr x16, pc+872 (addr 0x0000ffff5820cb10)    ;; external reference (store_buffer_top)
0xffff5820c7ac   972  ldr x4, [x16]
0xffff5820c7b0   976  str x3, [x4], #8
0xffff5820c7b4   980  str x4, [x16]
0xffff5820c7b8   984  tst x4, #0x1ffff
0xffff5820c7bc   988  b.eq #+0x8 (addr 0xffff5820c7c4)
0xffff5820c7c0   992  ret
0xffff5820c7c4   996  sub csp, jssp, #0x8 (8)
0xffff5820c7c8  1000  str lr, [jssp, #-8]!
0xffff5820c7cc  1004  ldr x17, pc+844 (addr 0x0000ffff5820cb18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820c7d0  1008  blr x17
0xffff5820c7d4  1012  ldr lr, [jssp], #8
0xffff5820c7d8  1016  ret
0xffff5820c7dc  1020  ldr x4, [x3]
0xffff5820c7e0  1024  and x0, x4, #0xfffffffffff00000
0xffff5820c7e4  1028  ldr x0, [x0, #8]
0xffff5820c7e8  1032  tbz w0, #6, #+0x18 (addr 0xffff5820c800)
0xffff5820c7ec  1036  and x0, x1, #0xfffffffffff00000
0xffff5820c7f0  1040  ldr x0, [x0, #8]
0xffff5820c7f4  1044  movz x16, #0x58
0xffff5820c7f8  1048  tst x0, x16
0xffff5820c7fc  1052  b.eq #+0x68 (addr 0xffff5820c864)
0xffff5820c800  1056  sub csp, jssp, #0x10 (16)
0xffff5820c804  1060  stp x1, x3, [jssp, #-16]!
0xffff5820c808  1064  ubfx x16, x4, #8, #12
0xffff5820c80c  1068  and x0, x4, #0xfffffffffff00000
0xffff5820c810  1072  add x0, x0, x16, lsl #2
0xffff5820c814  1076  ubfx x1, x4, #3, #5
0xffff5820c818  1080  ldr x3, [x0, #360]
0xffff5820c81c  1084  lsr x3, x3, x1
0xffff5820c820  1088  tbz w3, #0, #+0x40 (addr 0xffff5820c860)
0xffff5820c824  1092  ldp x1, x3, [jssp], #16
0xffff5820c828  1096  ldp x2, x0, [jssp], #16
0xffff5820c82c  1100  ldr x16, pc+756 (addr 0x0000ffff5820cb20)    ;; external reference (store_buffer_top)
0xffff5820c830  1104  ldr x4, [x16]
0xffff5820c834  1108  str x3, [x4], #8
0xffff5820c838  1112  str x4, [x16]
0xffff5820c83c  1116  tst x4, #0x1ffff
0xffff5820c840  1120  b.eq #+0x8 (addr 0xffff5820c848)
0xffff5820c844  1124  ret
0xffff5820c848  1128  sub csp, jssp, #0x8 (8)
0xffff5820c84c  1132  str lr, [jssp, #-8]!
0xffff5820c850  1136  ldr x17, pc+728 (addr 0x0000ffff5820cb28)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820c854  1140  blr x17
0xffff5820c858  1144  ldr lr, [jssp], #8
0xffff5820c85c  1148  ret
0xffff5820c860  1152  ldp x1, x3, [jssp], #16
0xffff5820c864  1156  sub csp, jssp, #0x78 (120)
0xffff5820c868  1160  stp x14, x15, [jssp, #-32]!
0xffff5820c86c  1164  stp x18, lr, [jssp, #16]
0xffff5820c870  1168  stp x10, x11, [jssp, #-32]!
0xffff5820c874  1172  stp x12, x13, [jssp, #16]
0xffff5820c878  1176  stp x6, x7, [jssp, #-32]!
0xffff5820c87c  1180  stp x8, x9, [jssp, #16]
0xffff5820c880  1184  stp x1, x3, [jssp, #-24]!
0xffff5820c884  1188  str x5, [jssp, #16]
0xffff5820c888  1192  sub csp, jssp, #0xb0 (176)
0xffff5820c88c  1196  stp d26, d27, [jssp, #-32]!
0xffff5820c890  1200  stp d28, d29, [jssp, #16]
0xffff5820c894  1204  stp d22, d23, [jssp, #-32]!
0xffff5820c898  1208  stp d24, d25, [jssp, #16]
0xffff5820c89c  1212  stp d18, d19, [jssp, #-32]!
0xffff5820c8a0  1216  stp d20, d21, [jssp, #16]
0xffff5820c8a4  1220  stp d6, d7, [jssp, #-32]!
0xffff5820c8a8  1224  stp d16, d17, [jssp, #16]
0xffff5820c8ac  1228  stp d2, d3, [jssp, #-32]!
0xffff5820c8b0  1232  stp d4, d5, [jssp, #16]
0xffff5820c8b4  1236  stp d0, d1, [jssp, #-16]!
0xffff5820c8b8  1240  mov x0, x1
0xffff5820c8bc  1244  mov x1, x3
0xffff5820c8c0  1248  ldr x2, pc+624 (addr 0x0000ffff5820cb30)    ;; external reference (isolate)
0xffff5820c8c4  1252  ldr x16, pc+628 (addr 0x0000ffff5820cb38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820c8c8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff5820c8cc  1260  blr x16
0xffff5820c8d0  1264  ldp d2, d3, [jssp, #16]
0xffff5820c8d4  1268  ldp d0, d1, [jssp], #32
0xffff5820c8d8  1272  ldp d6, d7, [jssp, #16]
0xffff5820c8dc  1276  ldp d4, d5, [jssp], #32
0xffff5820c8e0  1280  ldp d18, d19, [jssp, #16]
0xffff5820c8e4  1284  ldp d16, d17, [jssp], #32
0xffff5820c8e8  1288  ldp d22, d23, [jssp, #16]
0xffff5820c8ec  1292  ldp d20, d21, [jssp], #32
0xffff5820c8f0  1296  ldp d26, d27, [jssp, #16]
0xffff5820c8f4  1300  ldp d24, d25, [jssp], #32
0xffff5820c8f8  1304  ldp d28, d29, [jssp], #16
0xffff5820c8fc  1308  ldp x5, x6, [jssp, #16]
0xffff5820c900  1312  ldp x1, x3, [jssp], #32
0xffff5820c904  1316  ldp x9, x10, [jssp, #16]
0xffff5820c908  1320  ldp x7, x8, [jssp], #32
0xffff5820c90c  1324  ldp x13, x14, [jssp, #16]
0xffff5820c910  1328  ldp x11, x12, [jssp], #32
0xffff5820c914  1332  ldr lr, [jssp, #16]
0xffff5820c918  1336  ldp x15, x18, [jssp], #24
0xffff5820c91c  1340  ldp x2, x0, [jssp], #16
0xffff5820c920  1344  ldr x16, pc+544 (addr 0x0000ffff5820cb40)    ;; external reference (store_buffer_top)
0xffff5820c924  1348  ldr x4, [x16]
0xffff5820c928  1352  str x3, [x4], #8
0xffff5820c92c  1356  str x4, [x16]
0xffff5820c930  1360  tst x4, #0x1ffff
0xffff5820c934  1364  b.eq #+0x8 (addr 0xffff5820c93c)
0xffff5820c938  1368  ret
0xffff5820c93c  1372  sub csp, jssp, #0x8 (8)
0xffff5820c940  1376  str lr, [jssp, #-8]!
0xffff5820c944  1380  ldr x17, pc+516 (addr 0x0000ffff5820cb48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820c948  1384  blr x17
0xffff5820c94c  1388  ldr lr, [jssp], #8
0xffff5820c950  1392  ret
0xffff5820c954  1396  and x4, x1, #0xfffffffffff00000
0xffff5820c958  1400  ldr x0, [x4, #104]
0xffff5820c95c  1404  subs x0, x0, #0x1 (1)
0xffff5820c960  1408  str x0, [x4, #104]
0xffff5820c964  1412  b.mi #+0x84 (addr 0xffff5820c9e8)
0xffff5820c968  1416  ubfx x16, x1, #8, #12
0xffff5820c96c  1420  and x4, x1, #0xfffffffffff00000
0xffff5820c970  1424  add x4, x4, x16, lsl #2
0xffff5820c974  1428  ubfx x0, x1, #3, #5
0xffff5820c978  1432  ldr x4, [x4, #360]
0xffff5820c97c  1436  lsr x4, x4, x0
0xffff5820c980  1440  tbz w4, #0, #+0x8 (addr 0xffff5820c988)
0xffff5820c984  1444  tbnz w4, #1, #+0xc (addr 0xffff5820c990)
0xffff5820c988  1448  ldp x2, x0, [jssp], #16
0xffff5820c98c  1452  ret
0xffff5820c990  1456  ldr x4, [x3]
0xffff5820c994  1460  and x0, x4, #0xfffffffffff00000
0xffff5820c998  1464  ldr x0, [x0, #8]
0xffff5820c99c  1468  tbz w0, #6, #+0x18 (addr 0xffff5820c9b4)
0xffff5820c9a0  1472  and x0, x1, #0xfffffffffff00000
0xffff5820c9a4  1476  ldr x0, [x0, #8]
0xffff5820c9a8  1480  movz x16, #0x58
0xffff5820c9ac  1484  tst x0, x16
0xffff5820c9b0  1488  b.eq #+0x38 (addr 0xffff5820c9e8)
0xffff5820c9b4  1492  sub csp, jssp, #0x10 (16)
0xffff5820c9b8  1496  stp x1, x3, [jssp, #-16]!
0xffff5820c9bc  1500  ubfx x16, x4, #8, #12
0xffff5820c9c0  1504  and x0, x4, #0xfffffffffff00000
0xffff5820c9c4  1508  add x0, x0, x16, lsl #2
0xffff5820c9c8  1512  ubfx x1, x4, #3, #5
0xffff5820c9cc  1516  ldr x3, [x0, #360]
0xffff5820c9d0  1520  lsr x3, x3, x1
0xffff5820c9d4  1524  tbz w3, #0, #+0x10 (addr 0xffff5820c9e4)
0xffff5820c9d8  1528  ldp x1, x3, [jssp], #16
0xffff5820c9dc  1532  ldp x2, x0, [jssp], #16
0xffff5820c9e0  1536  ret
0xffff5820c9e4  1540  ldp x1, x3, [jssp], #16
0xffff5820c9e8  1544  sub csp, jssp, #0x78 (120)
0xffff5820c9ec  1548  stp x14, x15, [jssp, #-32]!
0xffff5820c9f0  1552  stp x18, lr, [jssp, #16]
0xffff5820c9f4  1556  stp x10, x11, [jssp, #-32]!
0xffff5820c9f8  1560  stp x12, x13, [jssp, #16]
0xffff5820c9fc  1564  stp x6, x7, [jssp, #-32]!
0xffff5820ca00  1568  stp x8, x9, [jssp, #16]
0xffff5820ca04  1572  stp x1, x3, [jssp, #-24]!
0xffff5820ca08  1576  str x5, [jssp, #16]
0xffff5820ca0c  1580  sub csp, jssp, #0xb0 (176)
0xffff5820ca10  1584  stp d26, d27, [jssp, #-32]!
0xffff5820ca14  1588  stp d28, d29, [jssp, #16]
0xffff5820ca18  1592  stp d22, d23, [jssp, #-32]!
0xffff5820ca1c  1596  stp d24, d25, [jssp, #16]
0xffff5820ca20  1600  stp d18, d19, [jssp, #-32]!
0xffff5820ca24  1604  stp d20, d21, [jssp, #16]
0xffff5820ca28  1608  stp d6, d7, [jssp, #-32]!
0xffff5820ca2c  1612  stp d16, d17, [jssp, #16]
0xffff5820ca30  1616  stp d2, d3, [jssp, #-32]!
0xffff5820ca34  1620  stp d4, d5, [jssp, #16]
0xffff5820ca38  1624  stp d0, d1, [jssp, #-16]!
0xffff5820ca3c  1628  mov x0, x1
0xffff5820ca40  1632  mov x1, x3
0xffff5820ca44  1636  ldr x2, pc+268 (addr 0x0000ffff5820cb50)    ;; external reference (isolate)
0xffff5820ca48  1640  ldr x16, pc+272 (addr 0x0000ffff5820cb58)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820ca4c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff5820ca50  1648  blr x16
0xffff5820ca54  1652  ldp d2, d3, [jssp, #16]
0xffff5820ca58  1656  ldp d0, d1, [jssp], #32
0xffff5820ca5c  1660  ldp d6, d7, [jssp, #16]
0xffff5820ca60  1664  ldp d4, d5, [jssp], #32
0xffff5820ca64  1668  ldp d18, d19, [jssp, #16]
0xffff5820ca68  1672  ldp d16, d17, [jssp], #32
0xffff5820ca6c  1676  ldp d22, d23, [jssp, #16]
0xffff5820ca70  1680  ldp d20, d21, [jssp], #32
0xffff5820ca74  1684  ldp d26, d27, [jssp, #16]
0xffff5820ca78  1688  ldp d24, d25, [jssp], #32
0xffff5820ca7c  1692  ldp d28, d29, [jssp], #16
0xffff5820ca80  1696  ldp x5, x6, [jssp, #16]
0xffff5820ca84  1700  ldp x1, x3, [jssp], #32
0xffff5820ca88  1704  ldp x9, x10, [jssp, #16]
0xffff5820ca8c  1708  ldp x7, x8, [jssp], #32
0xffff5820ca90  1712  ldp x13, x14, [jssp, #16]
0xffff5820ca94  1716  ldp x11, x12, [jssp], #32
0xffff5820ca98  1720  ldr lr, [jssp, #16]
0xffff5820ca9c  1724  ldp x15, x18, [jssp], #24
0xffff5820caa0  1728  ldp x2, x0, [jssp], #16
0xffff5820caa4  1732  ret
0xffff5820caa8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5820caac  1740  d63f03e0       constant
0xffff5820cab0  1744  16e798c0       constant
0xffff5820cab4  1748  00000000       constant
0xffff5820cab8  1752  582065a0       constant
0xffff5820cabc  1756  0000ffff       constant
0xffff5820cac0  1760  16e798c0       constant
0xffff5820cac4  1764  00000000       constant
0xffff5820cac8  1768  582065a0       constant
0xffff5820cacc  1772  0000ffff       constant
0xffff5820cad0  1776  16e798c0       constant
0xffff5820cad4  1780  00000000       constant
0xffff5820cad8  1784  582065a0       constant
0xffff5820cadc  1788  0000ffff       constant
0xffff5820cae0  1792  16e782d0       constant
0xffff5820cae4  1796  00000000       constant
0xffff5820cae8  1800  00c2d958       constant
0xffff5820caec  1804  00000000       constant
0xffff5820caf0  1808  16e798c0       constant
0xffff5820caf4  1812  00000000       constant
0xffff5820caf8  1816  582065a0       constant
0xffff5820cafc  1820  0000ffff       constant
0xffff5820cb00  1824  16e782d0       constant
0xffff5820cb04  1828  00000000       constant
0xffff5820cb08  1832  00c2d958       constant
0xffff5820cb0c  1836  00000000       constant
0xffff5820cb10  1840  16e798c0       constant
0xffff5820cb14  1844  00000000       constant
0xffff5820cb18  1848  582065a0       constant
0xffff5820cb1c  1852  0000ffff       constant
0xffff5820cb20  1856  16e798c0       constant
0xffff5820cb24  1860  00000000       constant
0xffff5820cb28  1864  582065a0       constant
0xffff5820cb2c  1868  0000ffff       constant
0xffff5820cb30  1872  16e782d0       constant
0xffff5820cb34  1876  00000000       constant
0xffff5820cb38  1880  00c2d958       constant
0xffff5820cb3c  1884  00000000       constant
0xffff5820cb40  1888  16e798c0       constant
0xffff5820cb44  1892  00000000       constant
0xffff5820cb48  1896  582065a0       constant
0xffff5820cb4c  1900  0000ffff       constant
0xffff5820cb50  1904  16e782d0       constant
0xffff5820cb54  1908  00000000       constant
0xffff5820cb58  1912  00c2d958       constant
0xffff5820cb5c  1916  00000000       constant


RelocInfo (size = 65)
0xffff5820c3e8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820c40c  code target (STUB)  (0xffff582065a0)
0xffff5820c484  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820c4a8  code target (STUB)  (0xffff582065a0)
0xffff5820c4e8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820c50c  code target (STUB)  (0xffff582065a0)
0xffff5820c57c  external reference (isolate)  (0x16e782d0)
0xffff5820c580  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820c5dc  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820c600  code target (STUB)  (0xffff582065a0)
0xffff5820c6e0  external reference (isolate)  (0x16e782d0)
0xffff5820c6e4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820c7a8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820c7cc  code target (STUB)  (0xffff582065a0)
0xffff5820c82c  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820c850  code target (STUB)  (0xffff582065a0)
0xffff5820c8c0  external reference (isolate)  (0x16e782d0)
0xffff5820c8c4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820c920  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820c944  code target (STUB)  (0xffff582065a0)
0xffff5820ca44  external reference (isolate)  (0x16e782d0)
0xffff5820ca48  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820caa8  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = CreateAllocationSiteStub
compiler = crankshaft
Instructions (size = 477)
0xffff5820cbc0     0  movz x1, #0x7840
0xffff5820cbc4     4  movk x1, #0x16ea, lsl #16
0xffff5820cbc8     8  ldp x4, x0, [x1]
0xffff5820cbcc    12  adds x16, x4, #0x38 (56)
0xffff5820cbd0    16  ccmp x16, x0, #nzCv, lo
0xffff5820cbd4    20  b.hi #+0x104 (addr 0xffff5820ccd8)
0xffff5820cbd8    24  str x16, [x1]
0xffff5820cbdc    28  orr x4, x4, #0x1
0xffff5820cbe0    32  ldr x0, pc+360 (addr 0x0000ffff5820cd48)    ;; object: 0x32b05d29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820cbe4    36  stur x0, [x4, #-1]
0xffff5820cbe8    40  sub x1, x4, #0x1 (1)
0xffff5820cbec    44  and x0, x0, #0xfffffffffff00000
0xffff5820cbf0    48  ldr x0, [x0, #8]
0xffff5820cbf4    52  tbz w0, #1, #+0x24 (addr 0xffff5820cc18)
0xffff5820cbf8    56  and x0, x4, #0xfffffffffff00000
0xffff5820cbfc    60  ldr x0, [x0, #8]
0xffff5820cc00    64  tbz w0, #2, #+0x18 (addr 0xffff5820cc18)
0xffff5820cc04    68  sub csp, jssp, #0x8 (8)
0xffff5820cc08    72  str lr, [jssp, #-8]!
0xffff5820cc0c    76  ldr x16, pc+324 (addr 0x0000ffff5820cd50)    ;; code: STUB, RecordWriteStub, minor: 66564
0xffff5820cc10    80  blr x16
0xffff5820cc14    84  ldr lr, [jssp], #8
0xffff5820cc18    88  movz x0, #0x0
0xffff5820cc1c    92  stur x0, [x4, #7]
0xffff5820cc20    96  movz x0, #0x0
0xffff5820cc24   100  stur x0, [x4, #15]
0xffff5820cc28   104  movz x0, #0x0
0xffff5820cc2c   108  stur x0, [x4, #23]
0xffff5820cc30   112  movz x0, #0x0
0xffff5820cc34   116  stur x0, [x4, #31]
0xffff5820cc38   120  ldr x0, pc+288 (addr 0x0000ffff5820cd58)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820cc3c   124  stur x0, [x4, #39]
0xffff5820cc40   128  movz x0, #0x9748
0xffff5820cc44   132  movk x0, #0x16e7, lsl #16
0xffff5820cc48   136  ldr x1, [x0]
0xffff5820cc4c   140  stur x1, [x4, #47]
0xffff5820cc50   144  tbz w1, #0, #+0x34 (addr 0xffff5820cc84)
0xffff5820cc54   148  add x5, x4, #0x2f (47)
0xffff5820cc58   152  and x1, x1, #0xfffffffffff00000
0xffff5820cc5c   156  ldr x1, [x1, #8]
0xffff5820cc60   160  tbz w1, #1, #+0x24 (addr 0xffff5820cc84)
0xffff5820cc64   164  and x1, x4, #0xfffffffffff00000
0xffff5820cc68   168  ldr x1, [x1, #8]
0xffff5820cc6c   172  tbz w1, #2, #+0x18 (addr 0xffff5820cc84)
0xffff5820cc70   176  sub csp, jssp, #0x8 (8)
0xffff5820cc74   180  str lr, [jssp, #-8]!
0xffff5820cc78   184  ldr x16, pc+232 (addr 0x0000ffff5820cd60)    ;; code: STUB, RecordWriteStub, minor: 70692
0xffff5820cc7c   188  blr x16
0xffff5820cc80   192  ldr lr, [jssp], #8
0xffff5820cc84   196  movz x1, #0x9748
0xffff5820cc88   200  movk x1, #0x16e7, lsl #16
0xffff5820cc8c   204  str x4, [x0]
0xffff5820cc90   208  asr x0, x3, #32
0xffff5820cc94   212  mov x1, x2
0xffff5820cc98   216  add x3, x1, #0xf (15)
0xffff5820cc9c   220  str x4, [x3, w0, sxtw #3]
0xffff5820cca0   224  add x3, x3, w0, sxtw #3
0xffff5820cca4   228  and x4, x4, #0xfffffffffff00000
0xffff5820cca8   232  ldr x4, [x4, #8]
0xffff5820ccac   236  tbz w4, #1, #+0x24 (addr 0xffff5820ccd0)
0xffff5820ccb0   240  and x4, x1, #0xfffffffffff00000
0xffff5820ccb4   244  ldr x4, [x4, #8]
0xffff5820ccb8   248  tbz w4, #2, #+0x18 (addr 0xffff5820ccd0)
0xffff5820ccbc   252  sub csp, jssp, #0x8 (8)
0xffff5820ccc0   256  str lr, [jssp, #-8]!
0xffff5820ccc4   260  ldr x16, pc+164 (addr 0x0000ffff5820cd68)    ;; code: STUB, RecordWriteStub, minor: 68737
0xffff5820ccc8   264  blr x16
0xffff5820cccc   268  ldr lr, [jssp], #8
0xffff5820ccd0   272  mov x0, x2
0xffff5820ccd4   276  ret
0xffff5820ccd8   280  sub csp, jssp, #0x10 (16)
0xffff5820ccdc   284  stp fp, lr, [jssp, #-16]!
0xffff5820cce0   288  movz fp, #0xa00000000
0xffff5820cce4   292  sub csp, jssp, #0x8 (8)
0xffff5820cce8   296  str fp, [jssp, #-8]!
0xffff5820ccec   300  add fp, jssp, #0x8 (8)
0xffff5820ccf0   304  movz x4, #0x0
0xffff5820ccf4   308  mov x16, lr
0xffff5820ccf8   312  ldr x17, pc+120 (addr 0x0000ffff5820cd70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820ccfc   316  blr x17
0xffff5820cd00   320  movz x0, #0x3800000000
0xffff5820cd04   324  movz x10, #0x200000000
0xffff5820cd08   328  sub csp, jssp, #0x10 (16)
0xffff5820cd0c   332  stp x10, x0, [jssp, #-16]!
0xffff5820cd10   336  movz x0, #0x2
0xffff5820cd14   340  movz x1, #0x5b88
0xffff5820cd18   344  movk x1, #0xe2, lsl #16
0xffff5820cd1c   348  ldr x16, pc+92 (addr 0x0000ffff5820cd78)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820cd20   352  blr x16
0xffff5820cd24   356  str x0, [jssp, #32]
0xffff5820cd28   360  ldr x16, pc+88 (addr 0x0000ffff5820cd80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820cd2c   364  blr x16
0xffff5820cd30   368  ldr lr, [jssp, #16]
0xffff5820cd34   372  ldp xzr, fp, [jssp], #24
0xffff5820cd38   376  b #-0x158 (addr 0xffff5820cbe0)
0xffff5820cd3c   380  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff5820cd40   384  d63f03e0       constant
0xffff5820cd44   388  d503201f       constant
0xffff5820cd48   392  32b05d29       constant
0xffff5820cd4c   396  00000000       constant
0xffff5820cd50   400  5820b420       constant
0xffff5820cd54   404  0000ffff       constant
0xffff5820cd58   408  39c04201       constant
0xffff5820cd5c   412  00000000       constant
0xffff5820cd60   416  5820bc00       constant
0xffff5820cd64   420  0000ffff       constant
0xffff5820cd68   424  5820c3e0       constant
0xffff5820cd6c   428  0000ffff       constant
0xffff5820cd70   432  58206820       constant
0xffff5820cd74   436  0000ffff       constant
0xffff5820cd78   440  58206260       constant
0xffff5820cd7c   444  0000ffff       constant
0xffff5820cd80   448  582068e0       constant
0xffff5820cd84   452  0000ffff       constant


Safepoints (size = 21)
0xffff5820cd24   356  000 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 18)
0xffff5820cbe0  embedded object  (0x32b05d29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820cc0c  code target (STUB)  (0xffff5820b420)
0xffff5820cc38  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820cc78  code target (STUB)  (0xffff5820bc00)
0xffff5820ccc4  code target (STUB)  (0xffff5820c3e0)
0xffff5820ccf8  code target (STUB)  (0xffff58206820)
0xffff5820cd1c  code target (STUB)  (0xffff58206260)
0xffff5820cd28  code target (STUB)  (0xffff582068e0)
0xffff5820cd3c  constant pool (size 76)

--- End code ---
kind = STUB
major_key = CreateAllocationSiteStub
name = CreateAllocationSiteStub
compiler = crankshaft
Instructions (size = 477)
0xffff5820cbc0     0  movz x1, #0x7840
0xffff5820cbc4     4  movk x1, #0x16ea, lsl #16
0xffff5820cbc8     8  ldp x4, x0, [x1]
0xffff5820cbcc    12  adds x16, x4, #0x38 (56)
0xffff5820cbd0    16  ccmp x16, x0, #nzCv, lo
0xffff5820cbd4    20  b.hi #+0x104 (addr 0xffff5820ccd8)
0xffff5820cbd8    24  str x16, [x1]
0xffff5820cbdc    28  orr x4, x4, #0x1
0xffff5820cbe0    32  ldr x0, pc+360 (addr 0x0000ffff5820cd48)    ;; object: 0x32b05d29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820cbe4    36  stur x0, [x4, #-1]
0xffff5820cbe8    40  sub x1, x4, #0x1 (1)
0xffff5820cbec    44  and x0, x0, #0xfffffffffff00000
0xffff5820cbf0    48  ldr x0, [x0, #8]
0xffff5820cbf4    52  tbz w0, #1, #+0x24 (addr 0xffff5820cc18)
0xffff5820cbf8    56  and x0, x4, #0xfffffffffff00000
0xffff5820cbfc    60  ldr x0, [x0, #8]
0xffff5820cc00    64  tbz w0, #2, #+0x18 (addr 0xffff5820cc18)
0xffff5820cc04    68  sub csp, jssp, #0x8 (8)
0xffff5820cc08    72  str lr, [jssp, #-8]!
0xffff5820cc0c    76  ldr x16, pc+324 (addr 0x0000ffff5820cd50)    ;; code: STUB, RecordWriteStub, minor: 66564
0xffff5820cc10    80  blr x16
0xffff5820cc14    84  ldr lr, [jssp], #8
0xffff5820cc18    88  movz x0, #0x0
0xffff5820cc1c    92  stur x0, [x4, #7]
0xffff5820cc20    96  movz x0, #0x0
0xffff5820cc24   100  stur x0, [x4, #15]
0xffff5820cc28   104  movz x0, #0x0
0xffff5820cc2c   108  stur x0, [x4, #23]
0xffff5820cc30   112  movz x0, #0x0
0xffff5820cc34   116  stur x0, [x4, #31]
0xffff5820cc38   120  ldr x0, pc+288 (addr 0x0000ffff5820cd58)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5820cc3c   124  stur x0, [x4, #39]
0xffff5820cc40   128  movz x0, #0x9748
0xffff5820cc44   132  movk x0, #0x16e7, lsl #16
0xffff5820cc48   136  ldr x1, [x0]
0xffff5820cc4c   140  stur x1, [x4, #47]
0xffff5820cc50   144  tbz w1, #0, #+0x34 (addr 0xffff5820cc84)
0xffff5820cc54   148  add x5, x4, #0x2f (47)
0xffff5820cc58   152  and x1, x1, #0xfffffffffff00000
0xffff5820cc5c   156  ldr x1, [x1, #8]
0xffff5820cc60   160  tbz w1, #1, #+0x24 (addr 0xffff5820cc84)
0xffff5820cc64   164  and x1, x4, #0xfffffffffff00000
0xffff5820cc68   168  ldr x1, [x1, #8]
0xffff5820cc6c   172  tbz w1, #2, #+0x18 (addr 0xffff5820cc84)
0xffff5820cc70   176  sub csp, jssp, #0x8 (8)
0xffff5820cc74   180  str lr, [jssp, #-8]!
0xffff5820cc78   184  ldr x16, pc+232 (addr 0x0000ffff5820cd60)    ;; code: STUB, RecordWriteStub, minor: 70692
0xffff5820cc7c   188  blr x16
0xffff5820cc80   192  ldr lr, [jssp], #8
0xffff5820cc84   196  movz x1, #0x9748
0xffff5820cc88   200  movk x1, #0x16e7, lsl #16
0xffff5820cc8c   204  str x4, [x0]
0xffff5820cc90   208  asr x0, x3, #32
0xffff5820cc94   212  mov x1, x2
0xffff5820cc98   216  add x3, x1, #0xf (15)
0xffff5820cc9c   220  str x4, [x3, w0, sxtw #3]
0xffff5820cca0   224  add x3, x3, w0, sxtw #3
0xffff5820cca4   228  and x4, x4, #0xfffffffffff00000
0xffff5820cca8   232  ldr x4, [x4, #8]
0xffff5820ccac   236  tbz w4, #1, #+0x24 (addr 0xffff5820ccd0)
0xffff5820ccb0   240  and x4, x1, #0xfffffffffff00000
0xffff5820ccb4   244  ldr x4, [x4, #8]
0xffff5820ccb8   248  tbz w4, #2, #+0x18 (addr 0xffff5820ccd0)
0xffff5820ccbc   252  sub csp, jssp, #0x8 (8)
0xffff5820ccc0   256  str lr, [jssp, #-8]!
0xffff5820ccc4   260  ldr x16, pc+164 (addr 0x0000ffff5820cd68)    ;; code: STUB, RecordWriteStub, minor: 68737
0xffff5820ccc8   264  blr x16
0xffff5820cccc   268  ldr lr, [jssp], #8
0xffff5820ccd0   272  mov x0, x2
0xffff5820ccd4   276  ret
0xffff5820ccd8   280  sub csp, jssp, #0x10 (16)
0xffff5820ccdc   284  stp fp, lr, [jssp, #-16]!
0xffff5820cce0   288  movz fp, #0xa00000000
0xffff5820cce4   292  sub csp, jssp, #0x8 (8)
0xffff5820cce8   296  str fp, [jssp, #-8]!
0xffff5820ccec   300  add fp, jssp, #0x8 (8)
0xffff5820ccf0   304  movz x4, #0x0
0xffff5820ccf4   308  mov x16, lr
0xffff5820ccf8   312  ldr x17, pc+120 (addr 0x0000ffff5820cd70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820ccfc   316  blr x17
0xffff5820cd00   320  movz x0, #0x3800000000
0xffff5820cd04   324  movz x10, #0x200000000
0xffff5820cd08   328  sub csp, jssp, #0x10 (16)
0xffff5820cd0c   332  stp x10, x0, [jssp, #-16]!
0xffff5820cd10   336  movz x0, #0x2
0xffff5820cd14   340  movz x1, #0x5b88
0xffff5820cd18   344  movk x1, #0xe2, lsl #16
0xffff5820cd1c   348  ldr x16, pc+92 (addr 0x0000ffff5820cd78)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820cd20   352  blr x16
0xffff5820cd24   356  str x0, [jssp, #32]
0xffff5820cd28   360  ldr x16, pc+88 (addr 0x0000ffff5820cd80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820cd2c   364  blr x16
0xffff5820cd30   368  ldr lr, [jssp, #16]
0xffff5820cd34   372  ldp xzr, fp, [jssp], #24
0xffff5820cd38   376  b #-0x158 (addr 0xffff5820cbe0)
0xffff5820cd3c   380  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff5820cd40   384  d63f03e0       constant
0xffff5820cd44   388  d503201f       constant
0xffff5820cd48   392  32b05d29       constant
0xffff5820cd4c   396  00000000       constant
0xffff5820cd50   400  5820b420       constant
0xffff5820cd54   404  0000ffff       constant
0xffff5820cd58   408  39c04201       constant
0xffff5820cd5c   412  00000000       constant
0xffff5820cd60   416  5820bc00       constant
0xffff5820cd64   420  0000ffff       constant
0xffff5820cd68   424  5820c3e0       constant
0xffff5820cd6c   428  0000ffff       constant
0xffff5820cd70   432  58206820       constant
0xffff5820cd74   436  0000ffff       constant
0xffff5820cd78   440  58206260       constant
0xffff5820cd7c   444  0000ffff       constant
0xffff5820cd80   448  582068e0       constant
0xffff5820cd84   452  0000ffff       constant


Safepoints (size = 21)
0xffff5820cd24   356  000 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 18)
0xffff5820cbe0  embedded object  (0x32b05d29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820cc0c  code target (STUB)  (0xffff5820b420)
0xffff5820cc38  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5820cc78  code target (STUB)  (0xffff5820bc00)
0xffff5820ccc4  code target (STUB)  (0xffff5820c3e0)
0xffff5820ccf8  code target (STUB)  (0xffff58206820)
0xffff5820cd1c  code target (STUB)  (0xffff58206260)
0xffff5820cd28  code target (STUB)  (0xffff582068e0)
0xffff5820cd3c  constant pool (size 76)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff5820ce00     0  adr xzr, #+0x40 (addr 0xffff5820ce40)
0xffff5820ce04     4  adr xzr, #+0x360 (addr 0xffff5820d164)
0xffff5820ce08     8  ldr x16, pc+1736 (addr 0x0000ffff5820d4d0)    ;; external reference (store_buffer_top)
0xffff5820ce0c    12  ldr x1, [x16]
0xffff5820ce10    16  str x0, [x1], #8
0xffff5820ce14    20  str x1, [x16]
0xffff5820ce18    24  tst x1, #0x1ffff
0xffff5820ce1c    28  b.eq #+0x8 (addr 0xffff5820ce24)
0xffff5820ce20    32  ret
0xffff5820ce24    36  sub csp, jssp, #0x8 (8)
0xffff5820ce28    40  str lr, [jssp, #-8]!
0xffff5820ce2c    44  ldr x17, pc+1708 (addr 0x0000ffff5820d4d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820ce30    48  blr x17
0xffff5820ce34    52  ldr lr, [jssp], #8
0xffff5820ce38    56  ret
0xffff5820ce3c    60  ret
0xffff5820ce40    64  sub csp, jssp, #0x10 (16)
0xffff5820ce44    68  stp x3, x2, [jssp, #-16]!
0xffff5820ce48    72  ldr x1, [x0]
0xffff5820ce4c    76  and x16, x1, #0xfffffffffff00000
0xffff5820ce50    80  ldr x16, [x16, #8]
0xffff5820ce54    84  tst x16, #0x18
0xffff5820ce58    88  b.eq #+0x1d8 (addr 0xffff5820d030)
0xffff5820ce5c    92  and x16, x5, #0xfffffffffff00000
0xffff5820ce60    96  ldr x16, [x16, #8]
0xffff5820ce64   100  tst x16, #0x18
0xffff5820ce68   104  b.ne #+0x1c8 (addr 0xffff5820d030)
0xffff5820ce6c   108  and x1, x5, #0xfffffffffff00000
0xffff5820ce70   112  ldr x2, [x1, #104]
0xffff5820ce74   116  subs x2, x2, #0x1 (1)
0xffff5820ce78   120  str x2, [x1, #104]
0xffff5820ce7c   124  b.mi #+0xc4 (addr 0xffff5820cf40)
0xffff5820ce80   128  ubfx x16, x5, #8, #12
0xffff5820ce84   132  and x1, x5, #0xfffffffffff00000
0xffff5820ce88   136  add x1, x1, x16, lsl #2
0xffff5820ce8c   140  ubfx x2, x5, #3, #5
0xffff5820ce90   144  ldr x1, [x1, #360]
0xffff5820ce94   148  lsr x1, x1, x2
0xffff5820ce98   152  tbz w1, #0, #+0x8 (addr 0xffff5820cea0)
0xffff5820ce9c   156  tbnz w1, #1, #+0x3c (addr 0xffff5820ced8)
0xffff5820cea0   160  ldp x3, x2, [jssp], #16
0xffff5820cea4   164  ldr x16, pc+1596 (addr 0x0000ffff5820d4e0)    ;; external reference (store_buffer_top)
0xffff5820cea8   168  ldr x1, [x16]
0xffff5820ceac   172  str x0, [x1], #8
0xffff5820ceb0   176  str x1, [x16]
0xffff5820ceb4   180  tst x1, #0x1ffff
0xffff5820ceb8   184  b.eq #+0x8 (addr 0xffff5820cec0)
0xffff5820cebc   188  ret
0xffff5820cec0   192  sub csp, jssp, #0x8 (8)
0xffff5820cec4   196  str lr, [jssp, #-8]!
0xffff5820cec8   200  ldr x17, pc+1568 (addr 0x0000ffff5820d4e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820cecc   204  blr x17
0xffff5820ced0   208  ldr lr, [jssp], #8
0xffff5820ced4   212  ret
0xffff5820ced8   216  ldr x1, [x0]
0xffff5820cedc   220  sub csp, jssp, #0x10 (16)
0xffff5820cee0   224  stp x5, x0, [jssp, #-16]!
0xffff5820cee4   228  ubfx x16, x1, #8, #12
0xffff5820cee8   232  and x2, x1, #0xfffffffffff00000
0xffff5820ceec   236  add x2, x2, x16, lsl #2
0xffff5820cef0   240  ubfx x5, x1, #3, #5
0xffff5820cef4   244  ldr x0, [x2, #360]
0xffff5820cef8   248  lsr x0, x0, x5
0xffff5820cefc   252  tbz w0, #0, #+0x40 (addr 0xffff5820cf3c)
0xffff5820cf00   256  ldp x5, x0, [jssp], #16
0xffff5820cf04   260  ldp x3, x2, [jssp], #16
0xffff5820cf08   264  ldr x16, pc+1512 (addr 0x0000ffff5820d4f0)    ;; external reference (store_buffer_top)
0xffff5820cf0c   268  ldr x1, [x16]
0xffff5820cf10   272  str x0, [x1], #8
0xffff5820cf14   276  str x1, [x16]
0xffff5820cf18   280  tst x1, #0x1ffff
0xffff5820cf1c   284  b.eq #+0x8 (addr 0xffff5820cf24)
0xffff5820cf20   288  ret
0xffff5820cf24   292  sub csp, jssp, #0x8 (8)
0xffff5820cf28   296  str lr, [jssp, #-8]!
0xffff5820cf2c   300  ldr x17, pc+1484 (addr 0x0000ffff5820d4f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820cf30   304  blr x17
0xffff5820cf34   308  ldr lr, [jssp], #8
0xffff5820cf38   312  ret
0xffff5820cf3c   316  ldp x5, x0, [jssp], #16
0xffff5820cf40   320  sub csp, jssp, #0x78 (120)
0xffff5820cf44   324  stp x14, x15, [jssp, #-32]!
0xffff5820cf48   328  stp x18, lr, [jssp, #16]
0xffff5820cf4c   332  stp x10, x11, [jssp, #-32]!
0xffff5820cf50   336  stp x12, x13, [jssp, #16]
0xffff5820cf54   340  stp x6, x7, [jssp, #-32]!
0xffff5820cf58   344  stp x8, x9, [jssp, #16]
0xffff5820cf5c   348  stp x0, x4, [jssp, #-24]!
0xffff5820cf60   352  str x5, [jssp, #16]
0xffff5820cf64   356  sub csp, jssp, #0xb0 (176)
0xffff5820cf68   360  stp d26, d27, [jssp, #-32]!
0xffff5820cf6c   364  stp d28, d29, [jssp, #16]
0xffff5820cf70   368  stp d22, d23, [jssp, #-32]!
0xffff5820cf74   372  stp d24, d25, [jssp, #16]
0xffff5820cf78   376  stp d18, d19, [jssp, #-32]!
0xffff5820cf7c   380  stp d20, d21, [jssp, #16]
0xffff5820cf80   384  stp d6, d7, [jssp, #-32]!
0xffff5820cf84   388  stp d16, d17, [jssp, #16]
0xffff5820cf88   392  stp d2, d3, [jssp, #-32]!
0xffff5820cf8c   396  stp d4, d5, [jssp, #16]
0xffff5820cf90   400  stp d0, d1, [jssp, #-16]!
0xffff5820cf94   404  mov x1, x0
0xffff5820cf98   408  mov x0, x5
0xffff5820cf9c   412  ldr x2, pc+1380 (addr 0x0000ffff5820d500)    ;; external reference (isolate)
0xffff5820cfa0   416  ldr x16, pc+1384 (addr 0x0000ffff5820d508)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820cfa4   420  and csp, jssp, #0xfffffffffffffff0
0xffff5820cfa8   424  blr x16
0xffff5820cfac   428  ldp d2, d3, [jssp, #16]
0xffff5820cfb0   432  ldp d0, d1, [jssp], #32
0xffff5820cfb4   436  ldp d6, d7, [jssp, #16]
0xffff5820cfb8   440  ldp d4, d5, [jssp], #32
0xffff5820cfbc   444  ldp d18, d19, [jssp, #16]
0xffff5820cfc0   448  ldp d16, d17, [jssp], #32
0xffff5820cfc4   452  ldp d22, d23, [jssp, #16]
0xffff5820cfc8   456  ldp d20, d21, [jssp], #32
0xffff5820cfcc   460  ldp d26, d27, [jssp, #16]
0xffff5820cfd0   464  ldp d24, d25, [jssp], #32
0xffff5820cfd4   468  ldp d28, d29, [jssp], #16
0xffff5820cfd8   472  ldp x5, x6, [jssp, #16]
0xffff5820cfdc   476  ldp x0, x4, [jssp], #32
0xffff5820cfe0   480  ldp x9, x10, [jssp, #16]
0xffff5820cfe4   484  ldp x7, x8, [jssp], #32
0xffff5820cfe8   488  ldp x13, x14, [jssp, #16]
0xffff5820cfec   492  ldp x11, x12, [jssp], #32
0xffff5820cff0   496  ldr lr, [jssp, #16]
0xffff5820cff4   500  ldp x15, x18, [jssp], #24
0xffff5820cff8   504  ldp x3, x2, [jssp], #16
0xffff5820cffc   508  ldr x16, pc+1300 (addr 0x0000ffff5820d510)    ;; external reference (store_buffer_top)
0xffff5820d000   512  ldr x1, [x16]
0xffff5820d004   516  str x0, [x1], #8
0xffff5820d008   520  str x1, [x16]
0xffff5820d00c   524  tst x1, #0x1ffff
0xffff5820d010   528  b.eq #+0x8 (addr 0xffff5820d018)
0xffff5820d014   532  ret
0xffff5820d018   536  sub csp, jssp, #0x8 (8)
0xffff5820d01c   540  str lr, [jssp, #-8]!
0xffff5820d020   544  ldr x17, pc+1272 (addr 0x0000ffff5820d518)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820d024   548  blr x17
0xffff5820d028   552  ldr lr, [jssp], #8
0xffff5820d02c   556  ret
0xffff5820d030   560  and x1, x5, #0xfffffffffff00000
0xffff5820d034   564  ldr x2, [x1, #104]
0xffff5820d038   568  subs x2, x2, #0x1 (1)
0xffff5820d03c   572  str x2, [x1, #104]
0xffff5820d040   576  b.mi #+0x64 (addr 0xffff5820d0a4)
0xffff5820d044   580  ubfx x16, x5, #8, #12
0xffff5820d048   584  and x1, x5, #0xfffffffffff00000
0xffff5820d04c   588  add x1, x1, x16, lsl #2
0xffff5820d050   592  ubfx x2, x5, #3, #5
0xffff5820d054   596  ldr x1, [x1, #360]
0xffff5820d058   600  lsr x1, x1, x2
0xffff5820d05c   604  tbz w1, #0, #+0x8 (addr 0xffff5820d064)
0xffff5820d060   608  tbnz w1, #1, #+0xc (addr 0xffff5820d06c)
0xffff5820d064   612  ldp x3, x2, [jssp], #16
0xffff5820d068   616  ret
0xffff5820d06c   620  ldr x1, [x0]
0xffff5820d070   624  sub csp, jssp, #0x10 (16)
0xffff5820d074   628  stp x5, x0, [jssp, #-16]!
0xffff5820d078   632  ubfx x16, x1, #8, #12
0xffff5820d07c   636  and x2, x1, #0xfffffffffff00000
0xffff5820d080   640  add x2, x2, x16, lsl #2
0xffff5820d084   644  ubfx x5, x1, #3, #5
0xffff5820d088   648  ldr x0, [x2, #360]
0xffff5820d08c   652  lsr x0, x0, x5
0xffff5820d090   656  tbz w0, #0, #+0x10 (addr 0xffff5820d0a0)
0xffff5820d094   660  ldp x5, x0, [jssp], #16
0xffff5820d098   664  ldp x3, x2, [jssp], #16
0xffff5820d09c   668  ret
0xffff5820d0a0   672  ldp x5, x0, [jssp], #16
0xffff5820d0a4   676  sub csp, jssp, #0x78 (120)
0xffff5820d0a8   680  stp x14, x15, [jssp, #-32]!
0xffff5820d0ac   684  stp x18, lr, [jssp, #16]
0xffff5820d0b0   688  stp x10, x11, [jssp, #-32]!
0xffff5820d0b4   692  stp x12, x13, [jssp, #16]
0xffff5820d0b8   696  stp x6, x7, [jssp, #-32]!
0xffff5820d0bc   700  stp x8, x9, [jssp, #16]
0xffff5820d0c0   704  stp x0, x4, [jssp, #-24]!
0xffff5820d0c4   708  str x5, [jssp, #16]
0xffff5820d0c8   712  sub csp, jssp, #0xb0 (176)
0xffff5820d0cc   716  stp d26, d27, [jssp, #-32]!
0xffff5820d0d0   720  stp d28, d29, [jssp, #16]
0xffff5820d0d4   724  stp d22, d23, [jssp, #-32]!
0xffff5820d0d8   728  stp d24, d25, [jssp, #16]
0xffff5820d0dc   732  stp d18, d19, [jssp, #-32]!
0xffff5820d0e0   736  stp d20, d21, [jssp, #16]
0xffff5820d0e4   740  stp d6, d7, [jssp, #-32]!
0xffff5820d0e8   744  stp d16, d17, [jssp, #16]
0xffff5820d0ec   748  stp d2, d3, [jssp, #-32]!
0xffff5820d0f0   752  stp d4, d5, [jssp, #16]
0xffff5820d0f4   756  stp d0, d1, [jssp, #-16]!
0xffff5820d0f8   760  mov x1, x0
0xffff5820d0fc   764  mov x0, x5
0xffff5820d100   768  ldr x2, pc+1056 (addr 0x0000ffff5820d520)    ;; external reference (isolate)
0xffff5820d104   772  ldr x16, pc+1060 (addr 0x0000ffff5820d528)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820d108   776  and csp, jssp, #0xfffffffffffffff0
0xffff5820d10c   780  blr x16
0xffff5820d110   784  ldp d2, d3, [jssp, #16]
0xffff5820d114   788  ldp d0, d1, [jssp], #32
0xffff5820d118   792  ldp d6, d7, [jssp, #16]
0xffff5820d11c   796  ldp d4, d5, [jssp], #32
0xffff5820d120   800  ldp d18, d19, [jssp, #16]
0xffff5820d124   804  ldp d16, d17, [jssp], #32
0xffff5820d128   808  ldp d22, d23, [jssp, #16]
0xffff5820d12c   812  ldp d20, d21, [jssp], #32
0xffff5820d130   816  ldp d26, d27, [jssp, #16]
0xffff5820d134   820  ldp d24, d25, [jssp], #32
0xffff5820d138   824  ldp d28, d29, [jssp], #16
0xffff5820d13c   828  ldp x5, x6, [jssp, #16]
0xffff5820d140   832  ldp x0, x4, [jssp], #32
0xffff5820d144   836  ldp x9, x10, [jssp, #16]
0xffff5820d148   840  ldp x7, x8, [jssp], #32
0xffff5820d14c   844  ldp x13, x14, [jssp, #16]
0xffff5820d150   848  ldp x11, x12, [jssp], #32
0xffff5820d154   852  ldr lr, [jssp, #16]
0xffff5820d158   856  ldp x15, x18, [jssp], #24
0xffff5820d15c   860  ldp x3, x2, [jssp], #16
0xffff5820d160   864  ret
0xffff5820d164   868  sub csp, jssp, #0x10 (16)
0xffff5820d168   872  stp x3, x2, [jssp, #-16]!
0xffff5820d16c   876  ldr x1, [x0]
0xffff5820d170   880  and x16, x1, #0xfffffffffff00000
0xffff5820d174   884  ldr x16, [x16, #8]
0xffff5820d178   888  tst x16, #0x18
0xffff5820d17c   892  b.eq #+0x1f8 (addr 0xffff5820d374)
0xffff5820d180   896  and x16, x5, #0xfffffffffff00000
0xffff5820d184   900  ldr x16, [x16, #8]
0xffff5820d188   904  tst x16, #0x18
0xffff5820d18c   908  b.ne #+0x1e8 (addr 0xffff5820d374)
0xffff5820d190   912  and x1, x5, #0xfffffffffff00000
0xffff5820d194   916  ldr x2, [x1, #104]
0xffff5820d198   920  subs x2, x2, #0x1 (1)
0xffff5820d19c   924  str x2, [x1, #104]
0xffff5820d1a0   928  b.mi #+0xe4 (addr 0xffff5820d284)
0xffff5820d1a4   932  ubfx x16, x5, #8, #12
0xffff5820d1a8   936  and x1, x5, #0xfffffffffff00000
0xffff5820d1ac   940  add x1, x1, x16, lsl #2
0xffff5820d1b0   944  ubfx x2, x5, #3, #5
0xffff5820d1b4   948  ldr x1, [x1, #360]
0xffff5820d1b8   952  lsr x1, x1, x2
0xffff5820d1bc   956  tbz w1, #0, #+0x8 (addr 0xffff5820d1c4)
0xffff5820d1c0   960  tbnz w1, #1, #+0x3c (addr 0xffff5820d1fc)
0xffff5820d1c4   964  ldp x3, x2, [jssp], #16
0xffff5820d1c8   968  ldr x16, pc+872 (addr 0x0000ffff5820d530)    ;; external reference (store_buffer_top)
0xffff5820d1cc   972  ldr x1, [x16]
0xffff5820d1d0   976  str x0, [x1], #8
0xffff5820d1d4   980  str x1, [x16]
0xffff5820d1d8   984  tst x1, #0x1ffff
0xffff5820d1dc   988  b.eq #+0x8 (addr 0xffff5820d1e4)
0xffff5820d1e0   992  ret
0xffff5820d1e4   996  sub csp, jssp, #0x8 (8)
0xffff5820d1e8  1000  str lr, [jssp, #-8]!
0xffff5820d1ec  1004  ldr x17, pc+844 (addr 0x0000ffff5820d538)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820d1f0  1008  blr x17
0xffff5820d1f4  1012  ldr lr, [jssp], #8
0xffff5820d1f8  1016  ret
0xffff5820d1fc  1020  ldr x1, [x0]
0xffff5820d200  1024  and x2, x1, #0xfffffffffff00000
0xffff5820d204  1028  ldr x2, [x2, #8]
0xffff5820d208  1032  tbz w2, #6, #+0x18 (addr 0xffff5820d220)
0xffff5820d20c  1036  and x2, x5, #0xfffffffffff00000
0xffff5820d210  1040  ldr x2, [x2, #8]
0xffff5820d214  1044  movz x16, #0x58
0xffff5820d218  1048  tst x2, x16
0xffff5820d21c  1052  b.eq #+0x68 (addr 0xffff5820d284)
0xffff5820d220  1056  sub csp, jssp, #0x10 (16)
0xffff5820d224  1060  stp x5, x0, [jssp, #-16]!
0xffff5820d228  1064  ubfx x16, x1, #8, #12
0xffff5820d22c  1068  and x2, x1, #0xfffffffffff00000
0xffff5820d230  1072  add x2, x2, x16, lsl #2
0xffff5820d234  1076  ubfx x5, x1, #3, #5
0xffff5820d238  1080  ldr x0, [x2, #360]
0xffff5820d23c  1084  lsr x0, x0, x5
0xffff5820d240  1088  tbz w0, #0, #+0x40 (addr 0xffff5820d280)
0xffff5820d244  1092  ldp x5, x0, [jssp], #16
0xffff5820d248  1096  ldp x3, x2, [jssp], #16
0xffff5820d24c  1100  ldr x16, pc+756 (addr 0x0000ffff5820d540)    ;; external reference (store_buffer_top)
0xffff5820d250  1104  ldr x1, [x16]
0xffff5820d254  1108  str x0, [x1], #8
0xffff5820d258  1112  str x1, [x16]
0xffff5820d25c  1116  tst x1, #0x1ffff
0xffff5820d260  1120  b.eq #+0x8 (addr 0xffff5820d268)
0xffff5820d264  1124  ret
0xffff5820d268  1128  sub csp, jssp, #0x8 (8)
0xffff5820d26c  1132  str lr, [jssp, #-8]!
0xffff5820d270  1136  ldr x17, pc+728 (addr 0x0000ffff5820d548)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820d274  1140  blr x17
0xffff5820d278  1144  ldr lr, [jssp], #8
0xffff5820d27c  1148  ret
0xffff5820d280  1152  ldp x5, x0, [jssp], #16
0xffff5820d284  1156  sub csp, jssp, #0x78 (120)
0xffff5820d288  1160  stp x14, x15, [jssp, #-32]!
0xffff5820d28c  1164  stp x18, lr, [jssp, #16]
0xffff5820d290  1168  stp x10, x11, [jssp, #-32]!
0xffff5820d294  1172  stp x12, x13, [jssp, #16]
0xffff5820d298  1176  stp x6, x7, [jssp, #-32]!
0xffff5820d29c  1180  stp x8, x9, [jssp, #16]
0xffff5820d2a0  1184  stp x0, x4, [jssp, #-24]!
0xffff5820d2a4  1188  str x5, [jssp, #16]
0xffff5820d2a8  1192  sub csp, jssp, #0xb0 (176)
0xffff5820d2ac  1196  stp d26, d27, [jssp, #-32]!
0xffff5820d2b0  1200  stp d28, d29, [jssp, #16]
0xffff5820d2b4  1204  stp d22, d23, [jssp, #-32]!
0xffff5820d2b8  1208  stp d24, d25, [jssp, #16]
0xffff5820d2bc  1212  stp d18, d19, [jssp, #-32]!
0xffff5820d2c0  1216  stp d20, d21, [jssp, #16]
0xffff5820d2c4  1220  stp d6, d7, [jssp, #-32]!
0xffff5820d2c8  1224  stp d16, d17, [jssp, #16]
0xffff5820d2cc  1228  stp d2, d3, [jssp, #-32]!
0xffff5820d2d0  1232  stp d4, d5, [jssp, #16]
0xffff5820d2d4  1236  stp d0, d1, [jssp, #-16]!
0xffff5820d2d8  1240  mov x1, x0
0xffff5820d2dc  1244  mov x0, x5
0xffff5820d2e0  1248  ldr x2, pc+624 (addr 0x0000ffff5820d550)    ;; external reference (isolate)
0xffff5820d2e4  1252  ldr x16, pc+628 (addr 0x0000ffff5820d558)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820d2e8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff5820d2ec  1260  blr x16
0xffff5820d2f0  1264  ldp d2, d3, [jssp, #16]
0xffff5820d2f4  1268  ldp d0, d1, [jssp], #32
0xffff5820d2f8  1272  ldp d6, d7, [jssp, #16]
0xffff5820d2fc  1276  ldp d4, d5, [jssp], #32
0xffff5820d300  1280  ldp d18, d19, [jssp, #16]
0xffff5820d304  1284  ldp d16, d17, [jssp], #32
0xffff5820d308  1288  ldp d22, d23, [jssp, #16]
0xffff5820d30c  1292  ldp d20, d21, [jssp], #32
0xffff5820d310  1296  ldp d26, d27, [jssp, #16]
0xffff5820d314  1300  ldp d24, d25, [jssp], #32
0xffff5820d318  1304  ldp d28, d29, [jssp], #16
0xffff5820d31c  1308  ldp x5, x6, [jssp, #16]
0xffff5820d320  1312  ldp x0, x4, [jssp], #32
0xffff5820d324  1316  ldp x9, x10, [jssp, #16]
0xffff5820d328  1320  ldp x7, x8, [jssp], #32
0xffff5820d32c  1324  ldp x13, x14, [jssp, #16]
0xffff5820d330  1328  ldp x11, x12, [jssp], #32
0xffff5820d334  1332  ldr lr, [jssp, #16]
0xffff5820d338  1336  ldp x15, x18, [jssp], #24
0xffff5820d33c  1340  ldp x3, x2, [jssp], #16
0xffff5820d340  1344  ldr x16, pc+544 (addr 0x0000ffff5820d560)    ;; external reference (store_buffer_top)
0xffff5820d344  1348  ldr x1, [x16]
0xffff5820d348  1352  str x0, [x1], #8
0xffff5820d34c  1356  str x1, [x16]
0xffff5820d350  1360  tst x1, #0x1ffff
0xffff5820d354  1364  b.eq #+0x8 (addr 0xffff5820d35c)
0xffff5820d358  1368  ret
0xffff5820d35c  1372  sub csp, jssp, #0x8 (8)
0xffff5820d360  1376  str lr, [jssp, #-8]!
0xffff5820d364  1380  ldr x17, pc+516 (addr 0x0000ffff5820d568)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820d368  1384  blr x17
0xffff5820d36c  1388  ldr lr, [jssp], #8
0xffff5820d370  1392  ret
0xffff5820d374  1396  and x1, x5, #0xfffffffffff00000
0xffff5820d378  1400  ldr x2, [x1, #104]
0xffff5820d37c  1404  subs x2, x2, #0x1 (1)
0xffff5820d380  1408  str x2, [x1, #104]
0xffff5820d384  1412  b.mi #+0x84 (addr 0xffff5820d408)
0xffff5820d388  1416  ubfx x16, x5, #8, #12
0xffff5820d38c  1420  and x1, x5, #0xfffffffffff00000
0xffff5820d390  1424  add x1, x1, x16, lsl #2
0xffff5820d394  1428  ubfx x2, x5, #3, #5
0xffff5820d398  1432  ldr x1, [x1, #360]
0xffff5820d39c  1436  lsr x1, x1, x2
0xffff5820d3a0  1440  tbz w1, #0, #+0x8 (addr 0xffff5820d3a8)
0xffff5820d3a4  1444  tbnz w1, #1, #+0xc (addr 0xffff5820d3b0)
0xffff5820d3a8  1448  ldp x3, x2, [jssp], #16
0xffff5820d3ac  1452  ret
0xffff5820d3b0  1456  ldr x1, [x0]
0xffff5820d3b4  1460  and x2, x1, #0xfffffffffff00000
0xffff5820d3b8  1464  ldr x2, [x2, #8]
0xffff5820d3bc  1468  tbz w2, #6, #+0x18 (addr 0xffff5820d3d4)
0xffff5820d3c0  1472  and x2, x5, #0xfffffffffff00000
0xffff5820d3c4  1476  ldr x2, [x2, #8]
0xffff5820d3c8  1480  movz x16, #0x58
0xffff5820d3cc  1484  tst x2, x16
0xffff5820d3d0  1488  b.eq #+0x38 (addr 0xffff5820d408)
0xffff5820d3d4  1492  sub csp, jssp, #0x10 (16)
0xffff5820d3d8  1496  stp x5, x0, [jssp, #-16]!
0xffff5820d3dc  1500  ubfx x16, x1, #8, #12
0xffff5820d3e0  1504  and x2, x1, #0xfffffffffff00000
0xffff5820d3e4  1508  add x2, x2, x16, lsl #2
0xffff5820d3e8  1512  ubfx x5, x1, #3, #5
0xffff5820d3ec  1516  ldr x0, [x2, #360]
0xffff5820d3f0  1520  lsr x0, x0, x5
0xffff5820d3f4  1524  tbz w0, #0, #+0x10 (addr 0xffff5820d404)
0xffff5820d3f8  1528  ldp x5, x0, [jssp], #16
0xffff5820d3fc  1532  ldp x3, x2, [jssp], #16
0xffff5820d400  1536  ret
0xffff5820d404  1540  ldp x5, x0, [jssp], #16
0xffff5820d408  1544  sub csp, jssp, #0x78 (120)
0xffff5820d40c  1548  stp x14, x15, [jssp, #-32]!
0xffff5820d410  1552  stp x18, lr, [jssp, #16]
0xffff5820d414  1556  stp x10, x11, [jssp, #-32]!
0xffff5820d418  1560  stp x12, x13, [jssp, #16]
0xffff5820d41c  1564  stp x6, x7, [jssp, #-32]!
0xffff5820d420  1568  stp x8, x9, [jssp, #16]
0xffff5820d424  1572  stp x0, x4, [jssp, #-24]!
0xffff5820d428  1576  str x5, [jssp, #16]
0xffff5820d42c  1580  sub csp, jssp, #0xb0 (176)
0xffff5820d430  1584  stp d26, d27, [jssp, #-32]!
0xffff5820d434  1588  stp d28, d29, [jssp, #16]
0xffff5820d438  1592  stp d22, d23, [jssp, #-32]!
0xffff5820d43c  1596  stp d24, d25, [jssp, #16]
0xffff5820d440  1600  stp d18, d19, [jssp, #-32]!
0xffff5820d444  1604  stp d20, d21, [jssp, #16]
0xffff5820d448  1608  stp d6, d7, [jssp, #-32]!
0xffff5820d44c  1612  stp d16, d17, [jssp, #16]
0xffff5820d450  1616  stp d2, d3, [jssp, #-32]!
0xffff5820d454  1620  stp d4, d5, [jssp, #16]
0xffff5820d458  1624  stp d0, d1, [jssp, #-16]!
0xffff5820d45c  1628  mov x1, x0
0xffff5820d460  1632  mov x0, x5
0xffff5820d464  1636  ldr x2, pc+268 (addr 0x0000ffff5820d570)    ;; external reference (isolate)
0xffff5820d468  1640  ldr x16, pc+272 (addr 0x0000ffff5820d578)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820d46c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff5820d470  1648  blr x16
0xffff5820d474  1652  ldp d2, d3, [jssp, #16]
0xffff5820d478  1656  ldp d0, d1, [jssp], #32
0xffff5820d47c  1660  ldp d6, d7, [jssp, #16]
0xffff5820d480  1664  ldp d4, d5, [jssp], #32
0xffff5820d484  1668  ldp d18, d19, [jssp, #16]
0xffff5820d488  1672  ldp d16, d17, [jssp], #32
0xffff5820d48c  1676  ldp d22, d23, [jssp, #16]
0xffff5820d490  1680  ldp d20, d21, [jssp], #32
0xffff5820d494  1684  ldp d26, d27, [jssp, #16]
0xffff5820d498  1688  ldp d24, d25, [jssp], #32
0xffff5820d49c  1692  ldp d28, d29, [jssp], #16
0xffff5820d4a0  1696  ldp x5, x6, [jssp, #16]
0xffff5820d4a4  1700  ldp x0, x4, [jssp], #32
0xffff5820d4a8  1704  ldp x9, x10, [jssp, #16]
0xffff5820d4ac  1708  ldp x7, x8, [jssp], #32
0xffff5820d4b0  1712  ldp x13, x14, [jssp, #16]
0xffff5820d4b4  1716  ldp x11, x12, [jssp], #32
0xffff5820d4b8  1720  ldr lr, [jssp, #16]
0xffff5820d4bc  1724  ldp x15, x18, [jssp], #24
0xffff5820d4c0  1728  ldp x3, x2, [jssp], #16
0xffff5820d4c4  1732  ret
0xffff5820d4c8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5820d4cc  1740  d63f03e0       constant
0xffff5820d4d0  1744  16e798c0       constant
0xffff5820d4d4  1748  00000000       constant
0xffff5820d4d8  1752  582065a0       constant
0xffff5820d4dc  1756  0000ffff       constant
0xffff5820d4e0  1760  16e798c0       constant
0xffff5820d4e4  1764  00000000       constant
0xffff5820d4e8  1768  582065a0       constant
0xffff5820d4ec  1772  0000ffff       constant
0xffff5820d4f0  1776  16e798c0       constant
0xffff5820d4f4  1780  00000000       constant
0xffff5820d4f8  1784  582065a0       constant
0xffff5820d4fc  1788  0000ffff       constant
0xffff5820d500  1792  16e782d0       constant
0xffff5820d504  1796  00000000       constant
0xffff5820d508  1800  00c2d958       constant
0xffff5820d50c  1804  00000000       constant
0xffff5820d510  1808  16e798c0       constant
0xffff5820d514  1812  00000000       constant
0xffff5820d518  1816  582065a0       constant
0xffff5820d51c  1820  0000ffff       constant
0xffff5820d520  1824  16e782d0       constant
0xffff5820d524  1828  00000000       constant
0xffff5820d528  1832  00c2d958       constant
0xffff5820d52c  1836  00000000       constant
0xffff5820d530  1840  16e798c0       constant
0xffff5820d534  1844  00000000       constant
0xffff5820d538  1848  582065a0       constant
0xffff5820d53c  1852  0000ffff       constant
0xffff5820d540  1856  16e798c0       constant
0xffff5820d544  1860  00000000       constant
0xffff5820d548  1864  582065a0       constant
0xffff5820d54c  1868  0000ffff       constant
0xffff5820d550  1872  16e782d0       constant
0xffff5820d554  1876  00000000       constant
0xffff5820d558  1880  00c2d958       constant
0xffff5820d55c  1884  00000000       constant
0xffff5820d560  1888  16e798c0       constant
0xffff5820d564  1892  00000000       constant
0xffff5820d568  1896  582065a0       constant
0xffff5820d56c  1900  0000ffff       constant
0xffff5820d570  1904  16e782d0       constant
0xffff5820d574  1908  00000000       constant
0xffff5820d578  1912  00c2d958       constant
0xffff5820d57c  1916  00000000       constant


RelocInfo (size = 65)
0xffff5820ce08  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820ce2c  code target (STUB)  (0xffff582065a0)
0xffff5820cea4  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820cec8  code target (STUB)  (0xffff582065a0)
0xffff5820cf08  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820cf2c  code target (STUB)  (0xffff582065a0)
0xffff5820cf9c  external reference (isolate)  (0x16e782d0)
0xffff5820cfa0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820cffc  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820d020  code target (STUB)  (0xffff582065a0)
0xffff5820d100  external reference (isolate)  (0x16e782d0)
0xffff5820d104  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820d1c8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820d1ec  code target (STUB)  (0xffff582065a0)
0xffff5820d24c  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820d270  code target (STUB)  (0xffff582065a0)
0xffff5820d2e0  external reference (isolate)  (0x16e782d0)
0xffff5820d2e4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820d340  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820d364  code target (STUB)  (0xffff582065a0)
0xffff5820d464  external reference (isolate)  (0x16e782d0)
0xffff5820d468  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820d4c8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff5820d5e0     0  adr xzr, #+0x40 (addr 0xffff5820d620)
0xffff5820d5e4     4  adr xzr, #+0x358 (addr 0xffff5820d93c)
0xffff5820d5e8     8  ldr x16, pc+1720 (addr 0x0000ffff5820dca0)    ;; external reference (store_buffer_top)
0xffff5820d5ec    12  ldr x5, [x16]
0xffff5820d5f0    16  str x1, [x5], #8
0xffff5820d5f4    20  str x5, [x16]
0xffff5820d5f8    24  tst x5, #0x1ffff
0xffff5820d5fc    28  b.eq #+0x8 (addr 0xffff5820d604)
0xffff5820d600    32  ret
0xffff5820d604    36  sub csp, jssp, #0x8 (8)
0xffff5820d608    40  str lr, [jssp, #-8]!
0xffff5820d60c    44  ldr x17, pc+1692 (addr 0x0000ffff5820dca8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820d610    48  blr x17
0xffff5820d614    52  ldr lr, [jssp], #8
0xffff5820d618    56  ret
0xffff5820d61c    60  ret
0xffff5820d620    64  sub csp, jssp, #0x10 (16)
0xffff5820d624    68  stp x3, x0, [jssp, #-16]!
0xffff5820d628    72  ldr x5, [x1]
0xffff5820d62c    76  and x16, x5, #0xfffffffffff00000
0xffff5820d630    80  ldr x16, [x16, #8]
0xffff5820d634    84  tst x16, #0x18
0xffff5820d638    88  b.eq #+0x1d4 (addr 0xffff5820d80c)
0xffff5820d63c    92  and x16, x2, #0xfffffffffff00000
0xffff5820d640    96  ldr x16, [x16, #8]
0xffff5820d644   100  tst x16, #0x18
0xffff5820d648   104  b.ne #+0x1c4 (addr 0xffff5820d80c)
0xffff5820d64c   108  and x5, x2, #0xfffffffffff00000
0xffff5820d650   112  ldr x0, [x5, #104]
0xffff5820d654   116  subs x0, x0, #0x1 (1)
0xffff5820d658   120  str x0, [x5, #104]
0xffff5820d65c   124  b.mi #+0xc4 (addr 0xffff5820d720)
0xffff5820d660   128  ubfx x16, x2, #8, #12
0xffff5820d664   132  and x5, x2, #0xfffffffffff00000
0xffff5820d668   136  add x5, x5, x16, lsl #2
0xffff5820d66c   140  ubfx x0, x2, #3, #5
0xffff5820d670   144  ldr x5, [x5, #360]
0xffff5820d674   148  lsr x5, x5, x0
0xffff5820d678   152  tbz w5, #0, #+0x8 (addr 0xffff5820d680)
0xffff5820d67c   156  tbnz w5, #1, #+0x3c (addr 0xffff5820d6b8)
0xffff5820d680   160  ldp x3, x0, [jssp], #16
0xffff5820d684   164  ldr x16, pc+1580 (addr 0x0000ffff5820dcb0)    ;; external reference (store_buffer_top)
0xffff5820d688   168  ldr x5, [x16]
0xffff5820d68c   172  str x1, [x5], #8
0xffff5820d690   176  str x5, [x16]
0xffff5820d694   180  tst x5, #0x1ffff
0xffff5820d698   184  b.eq #+0x8 (addr 0xffff5820d6a0)
0xffff5820d69c   188  ret
0xffff5820d6a0   192  sub csp, jssp, #0x8 (8)
0xffff5820d6a4   196  str lr, [jssp, #-8]!
0xffff5820d6a8   200  ldr x17, pc+1552 (addr 0x0000ffff5820dcb8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820d6ac   204  blr x17
0xffff5820d6b0   208  ldr lr, [jssp], #8
0xffff5820d6b4   212  ret
0xffff5820d6b8   216  ldr x5, [x1]
0xffff5820d6bc   220  sub csp, jssp, #0x10 (16)
0xffff5820d6c0   224  stp x2, x1, [jssp, #-16]!
0xffff5820d6c4   228  ubfx x16, x5, #8, #12
0xffff5820d6c8   232  and x0, x5, #0xfffffffffff00000
0xffff5820d6cc   236  add x0, x0, x16, lsl #2
0xffff5820d6d0   240  ubfx x2, x5, #3, #5
0xffff5820d6d4   244  ldr x1, [x0, #360]
0xffff5820d6d8   248  lsr x1, x1, x2
0xffff5820d6dc   252  tbz w1, #0, #+0x40 (addr 0xffff5820d71c)
0xffff5820d6e0   256  ldp x2, x1, [jssp], #16
0xffff5820d6e4   260  ldp x3, x0, [jssp], #16
0xffff5820d6e8   264  ldr x16, pc+1496 (addr 0x0000ffff5820dcc0)    ;; external reference (store_buffer_top)
0xffff5820d6ec   268  ldr x5, [x16]
0xffff5820d6f0   272  str x1, [x5], #8
0xffff5820d6f4   276  str x5, [x16]
0xffff5820d6f8   280  tst x5, #0x1ffff
0xffff5820d6fc   284  b.eq #+0x8 (addr 0xffff5820d704)
0xffff5820d700   288  ret
0xffff5820d704   292  sub csp, jssp, #0x8 (8)
0xffff5820d708   296  str lr, [jssp, #-8]!
0xffff5820d70c   300  ldr x17, pc+1468 (addr 0x0000ffff5820dcc8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820d710   304  blr x17
0xffff5820d714   308  ldr lr, [jssp], #8
0xffff5820d718   312  ret
0xffff5820d71c   316  ldp x2, x1, [jssp], #16
0xffff5820d720   320  sub csp, jssp, #0x78 (120)
0xffff5820d724   324  stp x14, x15, [jssp, #-32]!
0xffff5820d728   328  stp x18, lr, [jssp, #16]
0xffff5820d72c   332  stp x10, x11, [jssp, #-32]!
0xffff5820d730   336  stp x12, x13, [jssp, #16]
0xffff5820d734   340  stp x6, x7, [jssp, #-32]!
0xffff5820d738   344  stp x8, x9, [jssp, #16]
0xffff5820d73c   348  stp x1, x2, [jssp, #-24]!
0xffff5820d740   352  str x4, [jssp, #16]
0xffff5820d744   356  sub csp, jssp, #0xb0 (176)
0xffff5820d748   360  stp d26, d27, [jssp, #-32]!
0xffff5820d74c   364  stp d28, d29, [jssp, #16]
0xffff5820d750   368  stp d22, d23, [jssp, #-32]!
0xffff5820d754   372  stp d24, d25, [jssp, #16]
0xffff5820d758   376  stp d18, d19, [jssp, #-32]!
0xffff5820d75c   380  stp d20, d21, [jssp, #16]
0xffff5820d760   384  stp d6, d7, [jssp, #-32]!
0xffff5820d764   388  stp d16, d17, [jssp, #16]
0xffff5820d768   392  stp d2, d3, [jssp, #-32]!
0xffff5820d76c   396  stp d4, d5, [jssp, #16]
0xffff5820d770   400  stp d0, d1, [jssp, #-16]!
0xffff5820d774   404  mov x0, x2
0xffff5820d778   408  ldr x2, pc+1368 (addr 0x0000ffff5820dcd0)    ;; external reference (isolate)
0xffff5820d77c   412  ldr x16, pc+1372 (addr 0x0000ffff5820dcd8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820d780   416  and csp, jssp, #0xfffffffffffffff0
0xffff5820d784   420  blr x16
0xffff5820d788   424  ldp d2, d3, [jssp, #16]
0xffff5820d78c   428  ldp d0, d1, [jssp], #32
0xffff5820d790   432  ldp d6, d7, [jssp, #16]
0xffff5820d794   436  ldp d4, d5, [jssp], #32
0xffff5820d798   440  ldp d18, d19, [jssp, #16]
0xffff5820d79c   444  ldp d16, d17, [jssp], #32
0xffff5820d7a0   448  ldp d22, d23, [jssp, #16]
0xffff5820d7a4   452  ldp d20, d21, [jssp], #32
0xffff5820d7a8   456  ldp d26, d27, [jssp, #16]
0xffff5820d7ac   460  ldp d24, d25, [jssp], #32
0xffff5820d7b0   464  ldp d28, d29, [jssp], #16
0xffff5820d7b4   468  ldp x4, x6, [jssp, #16]
0xffff5820d7b8   472  ldp x1, x2, [jssp], #32
0xffff5820d7bc   476  ldp x9, x10, [jssp, #16]
0xffff5820d7c0   480  ldp x7, x8, [jssp], #32
0xffff5820d7c4   484  ldp x13, x14, [jssp, #16]
0xffff5820d7c8   488  ldp x11, x12, [jssp], #32
0xffff5820d7cc   492  ldr lr, [jssp, #16]
0xffff5820d7d0   496  ldp x15, x18, [jssp], #24
0xffff5820d7d4   500  ldp x3, x0, [jssp], #16
0xffff5820d7d8   504  ldr x16, pc+1288 (addr 0x0000ffff5820dce0)    ;; external reference (store_buffer_top)
0xffff5820d7dc   508  ldr x5, [x16]
0xffff5820d7e0   512  str x1, [x5], #8
0xffff5820d7e4   516  str x5, [x16]
0xffff5820d7e8   520  tst x5, #0x1ffff
0xffff5820d7ec   524  b.eq #+0x8 (addr 0xffff5820d7f4)
0xffff5820d7f0   528  ret
0xffff5820d7f4   532  sub csp, jssp, #0x8 (8)
0xffff5820d7f8   536  str lr, [jssp, #-8]!
0xffff5820d7fc   540  ldr x17, pc+1260 (addr 0x0000ffff5820dce8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820d800   544  blr x17
0xffff5820d804   548  ldr lr, [jssp], #8
0xffff5820d808   552  ret
0xffff5820d80c   556  and x5, x2, #0xfffffffffff00000
0xffff5820d810   560  ldr x0, [x5, #104]
0xffff5820d814   564  subs x0, x0, #0x1 (1)
0xffff5820d818   568  str x0, [x5, #104]
0xffff5820d81c   572  b.mi #+0x64 (addr 0xffff5820d880)
0xffff5820d820   576  ubfx x16, x2, #8, #12
0xffff5820d824   580  and x5, x2, #0xfffffffffff00000
0xffff5820d828   584  add x5, x5, x16, lsl #2
0xffff5820d82c   588  ubfx x0, x2, #3, #5
0xffff5820d830   592  ldr x5, [x5, #360]
0xffff5820d834   596  lsr x5, x5, x0
0xffff5820d838   600  tbz w5, #0, #+0x8 (addr 0xffff5820d840)
0xffff5820d83c   604  tbnz w5, #1, #+0xc (addr 0xffff5820d848)
0xffff5820d840   608  ldp x3, x0, [jssp], #16
0xffff5820d844   612  ret
0xffff5820d848   616  ldr x5, [x1]
0xffff5820d84c   620  sub csp, jssp, #0x10 (16)
0xffff5820d850   624  stp x2, x1, [jssp, #-16]!
0xffff5820d854   628  ubfx x16, x5, #8, #12
0xffff5820d858   632  and x0, x5, #0xfffffffffff00000
0xffff5820d85c   636  add x0, x0, x16, lsl #2
0xffff5820d860   640  ubfx x2, x5, #3, #5
0xffff5820d864   644  ldr x1, [x0, #360]
0xffff5820d868   648  lsr x1, x1, x2
0xffff5820d86c   652  tbz w1, #0, #+0x10 (addr 0xffff5820d87c)
0xffff5820d870   656  ldp x2, x1, [jssp], #16
0xffff5820d874   660  ldp x3, x0, [jssp], #16
0xffff5820d878   664  ret
0xffff5820d87c   668  ldp x2, x1, [jssp], #16
0xffff5820d880   672  sub csp, jssp, #0x78 (120)
0xffff5820d884   676  stp x14, x15, [jssp, #-32]!
0xffff5820d888   680  stp x18, lr, [jssp, #16]
0xffff5820d88c   684  stp x10, x11, [jssp, #-32]!
0xffff5820d890   688  stp x12, x13, [jssp, #16]
0xffff5820d894   692  stp x6, x7, [jssp, #-32]!
0xffff5820d898   696  stp x8, x9, [jssp, #16]
0xffff5820d89c   700  stp x1, x2, [jssp, #-24]!
0xffff5820d8a0   704  str x4, [jssp, #16]
0xffff5820d8a4   708  sub csp, jssp, #0xb0 (176)
0xffff5820d8a8   712  stp d26, d27, [jssp, #-32]!
0xffff5820d8ac   716  stp d28, d29, [jssp, #16]
0xffff5820d8b0   720  stp d22, d23, [jssp, #-32]!
0xffff5820d8b4   724  stp d24, d25, [jssp, #16]
0xffff5820d8b8   728  stp d18, d19, [jssp, #-32]!
0xffff5820d8bc   732  stp d20, d21, [jssp, #16]
0xffff5820d8c0   736  stp d6, d7, [jssp, #-32]!
0xffff5820d8c4   740  stp d16, d17, [jssp, #16]
0xffff5820d8c8   744  stp d2, d3, [jssp, #-32]!
0xffff5820d8cc   748  stp d4, d5, [jssp, #16]
0xffff5820d8d0   752  stp d0, d1, [jssp, #-16]!
0xffff5820d8d4   756  mov x0, x2
0xffff5820d8d8   760  ldr x2, pc+1048 (addr 0x0000ffff5820dcf0)    ;; external reference (isolate)
0xffff5820d8dc   764  ldr x16, pc+1052 (addr 0x0000ffff5820dcf8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820d8e0   768  and csp, jssp, #0xfffffffffffffff0
0xffff5820d8e4   772  blr x16
0xffff5820d8e8   776  ldp d2, d3, [jssp, #16]
0xffff5820d8ec   780  ldp d0, d1, [jssp], #32
0xffff5820d8f0   784  ldp d6, d7, [jssp, #16]
0xffff5820d8f4   788  ldp d4, d5, [jssp], #32
0xffff5820d8f8   792  ldp d18, d19, [jssp, #16]
0xffff5820d8fc   796  ldp d16, d17, [jssp], #32
0xffff5820d900   800  ldp d22, d23, [jssp, #16]
0xffff5820d904   804  ldp d20, d21, [jssp], #32
0xffff5820d908   808  ldp d26, d27, [jssp, #16]
0xffff5820d90c   812  ldp d24, d25, [jssp], #32
0xffff5820d910   816  ldp d28, d29, [jssp], #16
0xffff5820d914   820  ldp x4, x6, [jssp, #16]
0xffff5820d918   824  ldp x1, x2, [jssp], #32
0xffff5820d91c   828  ldp x9, x10, [jssp, #16]
0xffff5820d920   832  ldp x7, x8, [jssp], #32
0xffff5820d924   836  ldp x13, x14, [jssp, #16]
0xffff5820d928   840  ldp x11, x12, [jssp], #32
0xffff5820d92c   844  ldr lr, [jssp, #16]
0xffff5820d930   848  ldp x15, x18, [jssp], #24
0xffff5820d934   852  ldp x3, x0, [jssp], #16
0xffff5820d938   856  ret
0xffff5820d93c   860  sub csp, jssp, #0x10 (16)
0xffff5820d940   864  stp x3, x0, [jssp, #-16]!
0xffff5820d944   868  ldr x5, [x1]
0xffff5820d948   872  and x16, x5, #0xfffffffffff00000
0xffff5820d94c   876  ldr x16, [x16, #8]
0xffff5820d950   880  tst x16, #0x18
0xffff5820d954   884  b.eq #+0x1f4 (addr 0xffff5820db48)
0xffff5820d958   888  and x16, x2, #0xfffffffffff00000
0xffff5820d95c   892  ldr x16, [x16, #8]
0xffff5820d960   896  tst x16, #0x18
0xffff5820d964   900  b.ne #+0x1e4 (addr 0xffff5820db48)
0xffff5820d968   904  and x5, x2, #0xfffffffffff00000
0xffff5820d96c   908  ldr x0, [x5, #104]
0xffff5820d970   912  subs x0, x0, #0x1 (1)
0xffff5820d974   916  str x0, [x5, #104]
0xffff5820d978   920  b.mi #+0xe4 (addr 0xffff5820da5c)
0xffff5820d97c   924  ubfx x16, x2, #8, #12
0xffff5820d980   928  and x5, x2, #0xfffffffffff00000
0xffff5820d984   932  add x5, x5, x16, lsl #2
0xffff5820d988   936  ubfx x0, x2, #3, #5
0xffff5820d98c   940  ldr x5, [x5, #360]
0xffff5820d990   944  lsr x5, x5, x0
0xffff5820d994   948  tbz w5, #0, #+0x8 (addr 0xffff5820d99c)
0xffff5820d998   952  tbnz w5, #1, #+0x3c (addr 0xffff5820d9d4)
0xffff5820d99c   956  ldp x3, x0, [jssp], #16
0xffff5820d9a0   960  ldr x16, pc+864 (addr 0x0000ffff5820dd00)    ;; external reference (store_buffer_top)
0xffff5820d9a4   964  ldr x5, [x16]
0xffff5820d9a8   968  str x1, [x5], #8
0xffff5820d9ac   972  str x5, [x16]
0xffff5820d9b0   976  tst x5, #0x1ffff
0xffff5820d9b4   980  b.eq #+0x8 (addr 0xffff5820d9bc)
0xffff5820d9b8   984  ret
0xffff5820d9bc   988  sub csp, jssp, #0x8 (8)
0xffff5820d9c0   992  str lr, [jssp, #-8]!
0xffff5820d9c4   996  ldr x17, pc+836 (addr 0x0000ffff5820dd08)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820d9c8  1000  blr x17
0xffff5820d9cc  1004  ldr lr, [jssp], #8
0xffff5820d9d0  1008  ret
0xffff5820d9d4  1012  ldr x5, [x1]
0xffff5820d9d8  1016  and x0, x5, #0xfffffffffff00000
0xffff5820d9dc  1020  ldr x0, [x0, #8]
0xffff5820d9e0  1024  tbz w0, #6, #+0x18 (addr 0xffff5820d9f8)
0xffff5820d9e4  1028  and x0, x2, #0xfffffffffff00000
0xffff5820d9e8  1032  ldr x0, [x0, #8]
0xffff5820d9ec  1036  movz x16, #0x58
0xffff5820d9f0  1040  tst x0, x16
0xffff5820d9f4  1044  b.eq #+0x68 (addr 0xffff5820da5c)
0xffff5820d9f8  1048  sub csp, jssp, #0x10 (16)
0xffff5820d9fc  1052  stp x2, x1, [jssp, #-16]!
0xffff5820da00  1056  ubfx x16, x5, #8, #12
0xffff5820da04  1060  and x0, x5, #0xfffffffffff00000
0xffff5820da08  1064  add x0, x0, x16, lsl #2
0xffff5820da0c  1068  ubfx x2, x5, #3, #5
0xffff5820da10  1072  ldr x1, [x0, #360]
0xffff5820da14  1076  lsr x1, x1, x2
0xffff5820da18  1080  tbz w1, #0, #+0x40 (addr 0xffff5820da58)
0xffff5820da1c  1084  ldp x2, x1, [jssp], #16
0xffff5820da20  1088  ldp x3, x0, [jssp], #16
0xffff5820da24  1092  ldr x16, pc+748 (addr 0x0000ffff5820dd10)    ;; external reference (store_buffer_top)
0xffff5820da28  1096  ldr x5, [x16]
0xffff5820da2c  1100  str x1, [x5], #8
0xffff5820da30  1104  str x5, [x16]
0xffff5820da34  1108  tst x5, #0x1ffff
0xffff5820da38  1112  b.eq #+0x8 (addr 0xffff5820da40)
0xffff5820da3c  1116  ret
0xffff5820da40  1120  sub csp, jssp, #0x8 (8)
0xffff5820da44  1124  str lr, [jssp, #-8]!
0xffff5820da48  1128  ldr x17, pc+720 (addr 0x0000ffff5820dd18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820da4c  1132  blr x17
0xffff5820da50  1136  ldr lr, [jssp], #8
0xffff5820da54  1140  ret
0xffff5820da58  1144  ldp x2, x1, [jssp], #16
0xffff5820da5c  1148  sub csp, jssp, #0x78 (120)
0xffff5820da60  1152  stp x14, x15, [jssp, #-32]!
0xffff5820da64  1156  stp x18, lr, [jssp, #16]
0xffff5820da68  1160  stp x10, x11, [jssp, #-32]!
0xffff5820da6c  1164  stp x12, x13, [jssp, #16]
0xffff5820da70  1168  stp x6, x7, [jssp, #-32]!
0xffff5820da74  1172  stp x8, x9, [jssp, #16]
0xffff5820da78  1176  stp x1, x2, [jssp, #-24]!
0xffff5820da7c  1180  str x4, [jssp, #16]
0xffff5820da80  1184  sub csp, jssp, #0xb0 (176)
0xffff5820da84  1188  stp d26, d27, [jssp, #-32]!
0xffff5820da88  1192  stp d28, d29, [jssp, #16]
0xffff5820da8c  1196  stp d22, d23, [jssp, #-32]!
0xffff5820da90  1200  stp d24, d25, [jssp, #16]
0xffff5820da94  1204  stp d18, d19, [jssp, #-32]!
0xffff5820da98  1208  stp d20, d21, [jssp, #16]
0xffff5820da9c  1212  stp d6, d7, [jssp, #-32]!
0xffff5820daa0  1216  stp d16, d17, [jssp, #16]
0xffff5820daa4  1220  stp d2, d3, [jssp, #-32]!
0xffff5820daa8  1224  stp d4, d5, [jssp, #16]
0xffff5820daac  1228  stp d0, d1, [jssp, #-16]!
0xffff5820dab0  1232  mov x0, x2
0xffff5820dab4  1236  ldr x2, pc+620 (addr 0x0000ffff5820dd20)    ;; external reference (isolate)
0xffff5820dab8  1240  ldr x16, pc+624 (addr 0x0000ffff5820dd28)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820dabc  1244  and csp, jssp, #0xfffffffffffffff0
0xffff5820dac0  1248  blr x16
0xffff5820dac4  1252  ldp d2, d3, [jssp, #16]
0xffff5820dac8  1256  ldp d0, d1, [jssp], #32
0xffff5820dacc  1260  ldp d6, d7, [jssp, #16]
0xffff5820dad0  1264  ldp d4, d5, [jssp], #32
0xffff5820dad4  1268  ldp d18, d19, [jssp, #16]
0xffff5820dad8  1272  ldp d16, d17, [jssp], #32
0xffff5820dadc  1276  ldp d22, d23, [jssp, #16]
0xffff5820dae0  1280  ldp d20, d21, [jssp], #32
0xffff5820dae4  1284  ldp d26, d27, [jssp, #16]
0xffff5820dae8  1288  ldp d24, d25, [jssp], #32
0xffff5820daec  1292  ldp d28, d29, [jssp], #16
0xffff5820daf0  1296  ldp x4, x6, [jssp, #16]
0xffff5820daf4  1300  ldp x1, x2, [jssp], #32
0xffff5820daf8  1304  ldp x9, x10, [jssp, #16]
0xffff5820dafc  1308  ldp x7, x8, [jssp], #32
0xffff5820db00  1312  ldp x13, x14, [jssp, #16]
0xffff5820db04  1316  ldp x11, x12, [jssp], #32
0xffff5820db08  1320  ldr lr, [jssp, #16]
0xffff5820db0c  1324  ldp x15, x18, [jssp], #24
0xffff5820db10  1328  ldp x3, x0, [jssp], #16
0xffff5820db14  1332  ldr x16, pc+540 (addr 0x0000ffff5820dd30)    ;; external reference (store_buffer_top)
0xffff5820db18  1336  ldr x5, [x16]
0xffff5820db1c  1340  str x1, [x5], #8
0xffff5820db20  1344  str x5, [x16]
0xffff5820db24  1348  tst x5, #0x1ffff
0xffff5820db28  1352  b.eq #+0x8 (addr 0xffff5820db30)
0xffff5820db2c  1356  ret
0xffff5820db30  1360  sub csp, jssp, #0x8 (8)
0xffff5820db34  1364  str lr, [jssp, #-8]!
0xffff5820db38  1368  ldr x17, pc+512 (addr 0x0000ffff5820dd38)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5820db3c  1372  blr x17
0xffff5820db40  1376  ldr lr, [jssp], #8
0xffff5820db44  1380  ret
0xffff5820db48  1384  and x5, x2, #0xfffffffffff00000
0xffff5820db4c  1388  ldr x0, [x5, #104]
0xffff5820db50  1392  subs x0, x0, #0x1 (1)
0xffff5820db54  1396  str x0, [x5, #104]
0xffff5820db58  1400  b.mi #+0x84 (addr 0xffff5820dbdc)
0xffff5820db5c  1404  ubfx x16, x2, #8, #12
0xffff5820db60  1408  and x5, x2, #0xfffffffffff00000
0xffff5820db64  1412  add x5, x5, x16, lsl #2
0xffff5820db68  1416  ubfx x0, x2, #3, #5
0xffff5820db6c  1420  ldr x5, [x5, #360]
0xffff5820db70  1424  lsr x5, x5, x0
0xffff5820db74  1428  tbz w5, #0, #+0x8 (addr 0xffff5820db7c)
0xffff5820db78  1432  tbnz w5, #1, #+0xc (addr 0xffff5820db84)
0xffff5820db7c  1436  ldp x3, x0, [jssp], #16
0xffff5820db80  1440  ret
0xffff5820db84  1444  ldr x5, [x1]
0xffff5820db88  1448  and x0, x5, #0xfffffffffff00000
0xffff5820db8c  1452  ldr x0, [x0, #8]
0xffff5820db90  1456  tbz w0, #6, #+0x18 (addr 0xffff5820dba8)
0xffff5820db94  1460  and x0, x2, #0xfffffffffff00000
0xffff5820db98  1464  ldr x0, [x0, #8]
0xffff5820db9c  1468  movz x16, #0x58
0xffff5820dba0  1472  tst x0, x16
0xffff5820dba4  1476  b.eq #+0x38 (addr 0xffff5820dbdc)
0xffff5820dba8  1480  sub csp, jssp, #0x10 (16)
0xffff5820dbac  1484  stp x2, x1, [jssp, #-16]!
0xffff5820dbb0  1488  ubfx x16, x5, #8, #12
0xffff5820dbb4  1492  and x0, x5, #0xfffffffffff00000
0xffff5820dbb8  1496  add x0, x0, x16, lsl #2
0xffff5820dbbc  1500  ubfx x2, x5, #3, #5
0xffff5820dbc0  1504  ldr x1, [x0, #360]
0xffff5820dbc4  1508  lsr x1, x1, x2
0xffff5820dbc8  1512  tbz w1, #0, #+0x10 (addr 0xffff5820dbd8)
0xffff5820dbcc  1516  ldp x2, x1, [jssp], #16
0xffff5820dbd0  1520  ldp x3, x0, [jssp], #16
0xffff5820dbd4  1524  ret
0xffff5820dbd8  1528  ldp x2, x1, [jssp], #16
0xffff5820dbdc  1532  sub csp, jssp, #0x78 (120)
0xffff5820dbe0  1536  stp x14, x15, [jssp, #-32]!
0xffff5820dbe4  1540  stp x18, lr, [jssp, #16]
0xffff5820dbe8  1544  stp x10, x11, [jssp, #-32]!
0xffff5820dbec  1548  stp x12, x13, [jssp, #16]
0xffff5820dbf0  1552  stp x6, x7, [jssp, #-32]!
0xffff5820dbf4  1556  stp x8, x9, [jssp, #16]
0xffff5820dbf8  1560  stp x1, x2, [jssp, #-24]!
0xffff5820dbfc  1564  str x4, [jssp, #16]
0xffff5820dc00  1568  sub csp, jssp, #0xb0 (176)
0xffff5820dc04  1572  stp d26, d27, [jssp, #-32]!
0xffff5820dc08  1576  stp d28, d29, [jssp, #16]
0xffff5820dc0c  1580  stp d22, d23, [jssp, #-32]!
0xffff5820dc10  1584  stp d24, d25, [jssp, #16]
0xffff5820dc14  1588  stp d18, d19, [jssp, #-32]!
0xffff5820dc18  1592  stp d20, d21, [jssp, #16]
0xffff5820dc1c  1596  stp d6, d7, [jssp, #-32]!
0xffff5820dc20  1600  stp d16, d17, [jssp, #16]
0xffff5820dc24  1604  stp d2, d3, [jssp, #-32]!
0xffff5820dc28  1608  stp d4, d5, [jssp, #16]
0xffff5820dc2c  1612  stp d0, d1, [jssp, #-16]!
0xffff5820dc30  1616  mov x0, x2
0xffff5820dc34  1620  ldr x2, pc+268 (addr 0x0000ffff5820dd40)    ;; external reference (isolate)
0xffff5820dc38  1624  ldr x16, pc+272 (addr 0x0000ffff5820dd48)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5820dc3c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff5820dc40  1632  blr x16
0xffff5820dc44  1636  ldp d2, d3, [jssp, #16]
0xffff5820dc48  1640  ldp d0, d1, [jssp], #32
0xffff5820dc4c  1644  ldp d6, d7, [jssp, #16]
0xffff5820dc50  1648  ldp d4, d5, [jssp], #32
0xffff5820dc54  1652  ldp d18, d19, [jssp, #16]
0xffff5820dc58  1656  ldp d16, d17, [jssp], #32
0xffff5820dc5c  1660  ldp d22, d23, [jssp, #16]
0xffff5820dc60  1664  ldp d20, d21, [jssp], #32
0xffff5820dc64  1668  ldp d26, d27, [jssp, #16]
0xffff5820dc68  1672  ldp d24, d25, [jssp], #32
0xffff5820dc6c  1676  ldp d28, d29, [jssp], #16
0xffff5820dc70  1680  ldp x4, x6, [jssp, #16]
0xffff5820dc74  1684  ldp x1, x2, [jssp], #32
0xffff5820dc78  1688  ldp x9, x10, [jssp, #16]
0xffff5820dc7c  1692  ldp x7, x8, [jssp], #32
0xffff5820dc80  1696  ldp x13, x14, [jssp, #16]
0xffff5820dc84  1700  ldp x11, x12, [jssp], #32
0xffff5820dc88  1704  ldr lr, [jssp, #16]
0xffff5820dc8c  1708  ldp x15, x18, [jssp], #24
0xffff5820dc90  1712  ldp x3, x0, [jssp], #16
0xffff5820dc94  1716  ret
0xffff5820dc98  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5820dc9c  1724  d63f03e0       constant
0xffff5820dca0  1728  16e798c0       constant
0xffff5820dca4  1732  00000000       constant
0xffff5820dca8  1736  582065a0       constant
0xffff5820dcac  1740  0000ffff       constant
0xffff5820dcb0  1744  16e798c0       constant
0xffff5820dcb4  1748  00000000       constant
0xffff5820dcb8  1752  582065a0       constant
0xffff5820dcbc  1756  0000ffff       constant
0xffff5820dcc0  1760  16e798c0       constant
0xffff5820dcc4  1764  00000000       constant
0xffff5820dcc8  1768  582065a0       constant
0xffff5820dccc  1772  0000ffff       constant
0xffff5820dcd0  1776  16e782d0       constant
0xffff5820dcd4  1780  00000000       constant
0xffff5820dcd8  1784  00c2d958       constant
0xffff5820dcdc  1788  00000000       constant
0xffff5820dce0  1792  16e798c0       constant
0xffff5820dce4  1796  00000000       constant
0xffff5820dce8  1800  582065a0       constant
0xffff5820dcec  1804  0000ffff       constant
0xffff5820dcf0  1808  16e782d0       constant
0xffff5820dcf4  1812  00000000       constant
0xffff5820dcf8  1816  00c2d958       constant
0xffff5820dcfc  1820  00000000       constant
0xffff5820dd00  1824  16e798c0       constant
0xffff5820dd04  1828  00000000       constant
0xffff5820dd08  1832  582065a0       constant
0xffff5820dd0c  1836  0000ffff       constant
0xffff5820dd10  1840  16e798c0       constant
0xffff5820dd14  1844  00000000       constant
0xffff5820dd18  1848  582065a0       constant
0xffff5820dd1c  1852  0000ffff       constant
0xffff5820dd20  1856  16e782d0       constant
0xffff5820dd24  1860  00000000       constant
0xffff5820dd28  1864  00c2d958       constant
0xffff5820dd2c  1868  00000000       constant
0xffff5820dd30  1872  16e798c0       constant
0xffff5820dd34  1876  00000000       constant
0xffff5820dd38  1880  582065a0       constant
0xffff5820dd3c  1884  0000ffff       constant
0xffff5820dd40  1888  16e782d0       constant
0xffff5820dd44  1892  00000000       constant
0xffff5820dd48  1896  00c2d958       constant
0xffff5820dd4c  1900  00000000       constant


RelocInfo (size = 65)
0xffff5820d5e8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820d60c  code target (STUB)  (0xffff582065a0)
0xffff5820d684  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820d6a8  code target (STUB)  (0xffff582065a0)
0xffff5820d6e8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820d70c  code target (STUB)  (0xffff582065a0)
0xffff5820d778  external reference (isolate)  (0x16e782d0)
0xffff5820d77c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820d7d8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820d7fc  code target (STUB)  (0xffff582065a0)
0xffff5820d8d8  external reference (isolate)  (0x16e782d0)
0xffff5820d8dc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820d9a0  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820d9c4  code target (STUB)  (0xffff582065a0)
0xffff5820da24  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820da48  code target (STUB)  (0xffff582065a0)
0xffff5820dab4  external reference (isolate)  (0x16e782d0)
0xffff5820dab8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820db14  external reference (store_buffer_top)  (0x16e798c0)
0xffff5820db38  code target (STUB)  (0xffff582065a0)
0xffff5820dc34  external reference (isolate)  (0x16e782d0)
0xffff5820dc38  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5820dc98  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = CreateWeakCellStub
compiler = crankshaft
Instructions (size = 357)
0xffff5820ddc0     0  movz x4, #0x7840
0xffff5820ddc4     4  movk x4, #0x16ea, lsl #16
0xffff5820ddc8     8  ldp x5, x0, [x4]
0xffff5820ddcc    12  adds x16, x5, #0x18 (24)
0xffff5820ddd0    16  ccmp x16, x0, #nzCv, lo
0xffff5820ddd4    20  b.hi #+0x98 (addr 0xffff5820de6c)
0xffff5820ddd8    24  str x16, [x4]
0xffff5820dddc    28  orr x5, x5, #0x1
0xffff5820dde0    32  ldr x0, pc+248 (addr 0x0000ffff5820ded8)    ;; object: 0x32b058b1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820dde4    36  stur x0, [x5, #-1]
0xffff5820dde8    40  stur x1, [x5, #7]
0xffff5820ddec    44  tbz w1, #0, #+0x34 (addr 0xffff5820de20)
0xffff5820ddf0    48  add x0, x5, #0x7 (7)
0xffff5820ddf4    52  and x1, x1, #0xfffffffffff00000
0xffff5820ddf8    56  ldr x1, [x1, #8]
0xffff5820ddfc    60  tbz w1, #1, #+0x24 (addr 0xffff5820de20)
0xffff5820de00    64  and x1, x5, #0xfffffffffff00000
0xffff5820de04    68  ldr x1, [x1, #8]
0xffff5820de08    72  tbz w1, #2, #+0x18 (addr 0xffff5820de20)
0xffff5820de0c    76  sub csp, jssp, #0x8 (8)
0xffff5820de10    80  str lr, [jssp, #-8]!
0xffff5820de14    84  ldr x16, pc+204 (addr 0x0000ffff5820dee0)    ;; code: STUB, RecordWriteStub, minor: 65573
0xffff5820de18    88  blr x16
0xffff5820de1c    92  ldr lr, [jssp], #8
0xffff5820de20    96  ldr x0, pc+200 (addr 0x0000ffff5820dee8)    ;; object: 0x39c04519 <the hole>
0xffff5820de24   100  stur x0, [x5, #15]
0xffff5820de28   104  asr x0, x3, #32
0xffff5820de2c   108  add x1, x2, #0xf (15)
0xffff5820de30   112  str x5, [x1, w0, sxtw #3]
0xffff5820de34   116  add x1, x1, w0, sxtw #3
0xffff5820de38   120  and x5, x5, #0xfffffffffff00000
0xffff5820de3c   124  ldr x5, [x5, #8]
0xffff5820de40   128  tbz w5, #1, #+0x24 (addr 0xffff5820de64)
0xffff5820de44   132  and x5, x2, #0xfffffffffff00000
0xffff5820de48   136  ldr x5, [x5, #8]
0xffff5820de4c   140  tbz w5, #2, #+0x18 (addr 0xffff5820de64)
0xffff5820de50   144  sub csp, jssp, #0x8 (8)
0xffff5820de54   148  str lr, [jssp, #-8]!
0xffff5820de58   152  ldr x16, pc+152 (addr 0x0000ffff5820def0)    ;; code: STUB, RecordWriteStub, minor: 66722
0xffff5820de5c   156  blr x16
0xffff5820de60   160  ldr lr, [jssp], #8
0xffff5820de64   164  movz x0, #0x0
0xffff5820de68   168  ret
0xffff5820de6c   172  sub csp, jssp, #0x10 (16)
0xffff5820de70   176  stp fp, lr, [jssp, #-16]!
0xffff5820de74   180  movz fp, #0xa00000000
0xffff5820de78   184  sub csp, jssp, #0x8 (8)
0xffff5820de7c   188  str fp, [jssp, #-8]!
0xffff5820de80   192  add fp, jssp, #0x8 (8)
0xffff5820de84   196  movz x5, #0x0
0xffff5820de88   200  mov x16, lr
0xffff5820de8c   204  ldr x17, pc+108 (addr 0x0000ffff5820def8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820de90   208  blr x17
0xffff5820de94   212  movz x0, #0x1800000000
0xffff5820de98   216  movz x10, #0x200000000
0xffff5820de9c   220  sub csp, jssp, #0x10 (16)
0xffff5820dea0   224  stp x10, x0, [jssp, #-16]!
0xffff5820dea4   228  movz x0, #0x2
0xffff5820dea8   232  movz x1, #0x5b88
0xffff5820deac   236  movk x1, #0xe2, lsl #16
0xffff5820deb0   240  ldr x16, pc+80 (addr 0x0000ffff5820df00)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820deb4   244  blr x16
0xffff5820deb8   248  str x0, [jssp, #40]
0xffff5820debc   252  ldr x16, pc+76 (addr 0x0000ffff5820df08)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820dec0   256  blr x16
0xffff5820dec4   260  ldr lr, [jssp, #16]
0xffff5820dec8   264  ldp xzr, fp, [jssp], #24
0xffff5820decc   268  b #-0xec (addr 0xffff5820dde0)
0xffff5820ded0   272  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff5820ded4   276  d63f03e0       constant
0xffff5820ded8   280  32b058b1       constant
0xffff5820dedc   284  00000000       constant
0xffff5820dee0   288  5820ce00       constant
0xffff5820dee4   292  0000ffff       constant
0xffff5820dee8   296  39c04519       constant
0xffff5820deec   300  00000000       constant
0xffff5820def0   304  5820d5e0       constant
0xffff5820def4   308  0000ffff       constant
0xffff5820def8   312  58206820       constant
0xffff5820defc   316  0000ffff       constant
0xffff5820df00   320  58206260       constant
0xffff5820df04   324  0000ffff       constant
0xffff5820df08   328  582068e0       constant
0xffff5820df0c   332  0000ffff       constant


Safepoints (size = 21)
0xffff5820deb8   248  000 | x1 | x2 | x5 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 13)
0xffff5820dde0  embedded object  (0x32b058b1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820de14  code target (STUB)  (0xffff5820ce00)
0xffff5820de20  embedded object  (0x39c04519 <the hole>)
0xffff5820de58  code target (STUB)  (0xffff5820d5e0)
0xffff5820de8c  code target (STUB)  (0xffff58206820)
0xffff5820deb0  code target (STUB)  (0xffff58206260)
0xffff5820debc  code target (STUB)  (0xffff582068e0)
0xffff5820ded0  constant pool (size 64)

--- End code ---
kind = STUB
major_key = CreateWeakCellStub
name = CreateWeakCellStub
compiler = crankshaft
Instructions (size = 357)
0xffff5820ddc0     0  movz x4, #0x7840
0xffff5820ddc4     4  movk x4, #0x16ea, lsl #16
0xffff5820ddc8     8  ldp x5, x0, [x4]
0xffff5820ddcc    12  adds x16, x5, #0x18 (24)
0xffff5820ddd0    16  ccmp x16, x0, #nzCv, lo
0xffff5820ddd4    20  b.hi #+0x98 (addr 0xffff5820de6c)
0xffff5820ddd8    24  str x16, [x4]
0xffff5820dddc    28  orr x5, x5, #0x1
0xffff5820dde0    32  ldr x0, pc+248 (addr 0x0000ffff5820ded8)    ;; object: 0x32b058b1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5820dde4    36  stur x0, [x5, #-1]
0xffff5820dde8    40  stur x1, [x5, #7]
0xffff5820ddec    44  tbz w1, #0, #+0x34 (addr 0xffff5820de20)
0xffff5820ddf0    48  add x0, x5, #0x7 (7)
0xffff5820ddf4    52  and x1, x1, #0xfffffffffff00000
0xffff5820ddf8    56  ldr x1, [x1, #8]
0xffff5820ddfc    60  tbz w1, #1, #+0x24 (addr 0xffff5820de20)
0xffff5820de00    64  and x1, x5, #0xfffffffffff00000
0xffff5820de04    68  ldr x1, [x1, #8]
0xffff5820de08    72  tbz w1, #2, #+0x18 (addr 0xffff5820de20)
0xffff5820de0c    76  sub csp, jssp, #0x8 (8)
0xffff5820de10    80  str lr, [jssp, #-8]!
0xffff5820de14    84  ldr x16, pc+204 (addr 0x0000ffff5820dee0)    ;; code: STUB, RecordWriteStub, minor: 65573
0xffff5820de18    88  blr x16
0xffff5820de1c    92  ldr lr, [jssp], #8
0xffff5820de20    96  ldr x0, pc+200 (addr 0x0000ffff5820dee8)    ;; object: 0x39c04519 <the hole>
0xffff5820de24   100  stur x0, [x5, #15]
0xffff5820de28   104  asr x0, x3, #32
0xffff5820de2c   108  add x1, x2, #0xf (15)
0xffff5820de30   112  str x5, [x1, w0, sxtw #3]
0xffff5820de34   116  add x1, x1, w0, sxtw #3
0xffff5820de38   120  and x5, x5, #0xfffffffffff00000
0xffff5820de3c   124  ldr x5, [x5, #8]
0xffff5820de40   128  tbz w5, #1, #+0x24 (addr 0xffff5820de64)
0xffff5820de44   132  and x5, x2, #0xfffffffffff00000
0xffff5820de48   136  ldr x5, [x5, #8]
0xffff5820de4c   140  tbz w5, #2, #+0x18 (addr 0xffff5820de64)
0xffff5820de50   144  sub csp, jssp, #0x8 (8)
0xffff5820de54   148  str lr, [jssp, #-8]!
0xffff5820de58   152  ldr x16, pc+152 (addr 0x0000ffff5820def0)    ;; code: STUB, RecordWriteStub, minor: 66722
0xffff5820de5c   156  blr x16
0xffff5820de60   160  ldr lr, [jssp], #8
0xffff5820de64   164  movz x0, #0x0
0xffff5820de68   168  ret
0xffff5820de6c   172  sub csp, jssp, #0x10 (16)
0xffff5820de70   176  stp fp, lr, [jssp, #-16]!
0xffff5820de74   180  movz fp, #0xa00000000
0xffff5820de78   184  sub csp, jssp, #0x8 (8)
0xffff5820de7c   188  str fp, [jssp, #-8]!
0xffff5820de80   192  add fp, jssp, #0x8 (8)
0xffff5820de84   196  movz x5, #0x0
0xffff5820de88   200  mov x16, lr
0xffff5820de8c   204  ldr x17, pc+108 (addr 0x0000ffff5820def8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820de90   208  blr x17
0xffff5820de94   212  movz x0, #0x1800000000
0xffff5820de98   216  movz x10, #0x200000000
0xffff5820de9c   220  sub csp, jssp, #0x10 (16)
0xffff5820dea0   224  stp x10, x0, [jssp, #-16]!
0xffff5820dea4   228  movz x0, #0x2
0xffff5820dea8   232  movz x1, #0x5b88
0xffff5820deac   236  movk x1, #0xe2, lsl #16
0xffff5820deb0   240  ldr x16, pc+80 (addr 0x0000ffff5820df00)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820deb4   244  blr x16
0xffff5820deb8   248  str x0, [jssp, #40]
0xffff5820debc   252  ldr x16, pc+76 (addr 0x0000ffff5820df08)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820dec0   256  blr x16
0xffff5820dec4   260  ldr lr, [jssp, #16]
0xffff5820dec8   264  ldp xzr, fp, [jssp], #24
0xffff5820decc   268  b #-0xec (addr 0xffff5820dde0)
0xffff5820ded0   272  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff5820ded4   276  d63f03e0       constant
0xffff5820ded8   280  32b058b1       constant
0xffff5820dedc   284  00000000       constant
0xffff5820dee0   288  5820ce00       constant
0xffff5820dee4   292  0000ffff       constant
0xffff5820dee8   296  39c04519       constant
0xffff5820deec   300  00000000       constant
0xffff5820def0   304  5820d5e0       constant
0xffff5820def4   308  0000ffff       constant
0xffff5820def8   312  58206820       constant
0xffff5820defc   316  0000ffff       constant
0xffff5820df00   320  58206260       constant
0xffff5820df04   324  0000ffff       constant
0xffff5820df08   328  582068e0       constant
0xffff5820df0c   332  0000ffff       constant


Safepoints (size = 21)
0xffff5820deb8   248  000 | x1 | x2 | x5 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 13)
0xffff5820dde0  embedded object  (0x32b058b1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5820de14  code target (STUB)  (0xffff5820ce00)
0xffff5820de20  embedded object  (0x39c04519 <the hole>)
0xffff5820de58  code target (STUB)  (0xffff5820d5e0)
0xffff5820de8c  code target (STUB)  (0xffff58206820)
0xffff5820deb0  code target (STUB)  (0xffff58206260)
0xffff5820debc  code target (STUB)  (0xffff582068e0)
0xffff5820ded0  constant pool (size 64)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
name = BinaryOpICStub(BIT_OR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820dfa0     0  movz x16, #0xc00000000
0xffff5820dfa4     4  sub csp, jssp, #0x10 (16)
0xffff5820dfa8     8  stp fp, lr, [jssp, #-16]!
0xffff5820dfac    12  sub csp, jssp, #0x10 (16)
0xffff5820dfb0    16  str x16, [jssp, #-8]!
0xffff5820dfb4    20  ldr x17, pc+60 (addr 0x0000ffff5820dff0)    ;; object: 0xffff5820df41 <Code: BINARY_OP_IC>
0xffff5820dfb8    24  sub csp, jssp, #0x10 (16)
0xffff5820dfbc    28  str x17, [jssp, #-8]!
0xffff5820dfc0    32  add fp, jssp, #0x10 (16)
0xffff5820dfc4    36  sub csp, jssp, #0x10 (16)
0xffff5820dfc8    40  stp x0, x1, [jssp, #-16]!
0xffff5820dfcc    44  movz x0, #0x2
0xffff5820dfd0    48  ldr x1, pc+40 (addr 0x0000ffff5820dff8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820dfd4    52  ldr x16, pc+44 (addr 0x0000ffff5820e000)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820dfd8    56  blr x16
0xffff5820dfdc    60  mov jssp, fp
0xffff5820dfe0    64  ldp fp, lr, [jssp], #16
0xffff5820dfe4    68  ret
0xffff5820dfe8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820dfec    76  d63f03e0       constant
0xffff5820dff0    80  5820df41       constant
0xffff5820dff4    84  0000ffff       constant
0xffff5820dff8    88  00c8e1b8       constant
0xffff5820dffc    92  00000000       constant
0xffff5820e000    96  58206060       constant
0xffff5820e004   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820dfb4  embedded object  (0xffff5820df41 <Code: BINARY_OP_IC>)
0xffff5820dfd0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820dfd4  code target (STUB)  (0xffff58206060)
0xffff5820dfe8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 1
name = BinaryOpICStub(BIT_XOR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e080     0  movz x16, #0xc00000000
0xffff5820e084     4  sub csp, jssp, #0x10 (16)
0xffff5820e088     8  stp fp, lr, [jssp, #-16]!
0xffff5820e08c    12  sub csp, jssp, #0x10 (16)
0xffff5820e090    16  str x16, [jssp, #-8]!
0xffff5820e094    20  ldr x17, pc+60 (addr 0x0000ffff5820e0d0)    ;; object: 0xffff5820e021 <Code: BINARY_OP_IC>
0xffff5820e098    24  sub csp, jssp, #0x10 (16)
0xffff5820e09c    28  str x17, [jssp, #-8]!
0xffff5820e0a0    32  add fp, jssp, #0x10 (16)
0xffff5820e0a4    36  sub csp, jssp, #0x10 (16)
0xffff5820e0a8    40  stp x0, x1, [jssp, #-16]!
0xffff5820e0ac    44  movz x0, #0x2
0xffff5820e0b0    48  ldr x1, pc+40 (addr 0x0000ffff5820e0d8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e0b4    52  ldr x16, pc+44 (addr 0x0000ffff5820e0e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e0b8    56  blr x16
0xffff5820e0bc    60  mov jssp, fp
0xffff5820e0c0    64  ldp fp, lr, [jssp], #16
0xffff5820e0c4    68  ret
0xffff5820e0c8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e0cc    76  d63f03e0       constant
0xffff5820e0d0    80  5820e021       constant
0xffff5820e0d4    84  0000ffff       constant
0xffff5820e0d8    88  00c8e1b8       constant
0xffff5820e0dc    92  00000000       constant
0xffff5820e0e0    96  58206060       constant
0xffff5820e0e4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e094  embedded object  (0xffff5820e021 <Code: BINARY_OP_IC>)
0xffff5820e0b0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e0b4  code target (STUB)  (0xffff58206060)
0xffff5820e0c8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 2
name = BinaryOpICStub(BIT_AND:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e160     0  movz x16, #0xc00000000
0xffff5820e164     4  sub csp, jssp, #0x10 (16)
0xffff5820e168     8  stp fp, lr, [jssp, #-16]!
0xffff5820e16c    12  sub csp, jssp, #0x10 (16)
0xffff5820e170    16  str x16, [jssp, #-8]!
0xffff5820e174    20  ldr x17, pc+60 (addr 0x0000ffff5820e1b0)    ;; object: 0xffff5820e101 <Code: BINARY_OP_IC>
0xffff5820e178    24  sub csp, jssp, #0x10 (16)
0xffff5820e17c    28  str x17, [jssp, #-8]!
0xffff5820e180    32  add fp, jssp, #0x10 (16)
0xffff5820e184    36  sub csp, jssp, #0x10 (16)
0xffff5820e188    40  stp x0, x1, [jssp, #-16]!
0xffff5820e18c    44  movz x0, #0x2
0xffff5820e190    48  ldr x1, pc+40 (addr 0x0000ffff5820e1b8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e194    52  ldr x16, pc+44 (addr 0x0000ffff5820e1c0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e198    56  blr x16
0xffff5820e19c    60  mov jssp, fp
0xffff5820e1a0    64  ldp fp, lr, [jssp], #16
0xffff5820e1a4    68  ret
0xffff5820e1a8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e1ac    76  d63f03e0       constant
0xffff5820e1b0    80  5820e101       constant
0xffff5820e1b4    84  0000ffff       constant
0xffff5820e1b8    88  00c8e1b8       constant
0xffff5820e1bc    92  00000000       constant
0xffff5820e1c0    96  58206060       constant
0xffff5820e1c4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e174  embedded object  (0xffff5820e101 <Code: BINARY_OP_IC>)
0xffff5820e190  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e194  code target (STUB)  (0xffff58206060)
0xffff5820e1a8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 3
name = BinaryOpICStub(SHL:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e240     0  movz x16, #0xc00000000
0xffff5820e244     4  sub csp, jssp, #0x10 (16)
0xffff5820e248     8  stp fp, lr, [jssp, #-16]!
0xffff5820e24c    12  sub csp, jssp, #0x10 (16)
0xffff5820e250    16  str x16, [jssp, #-8]!
0xffff5820e254    20  ldr x17, pc+60 (addr 0x0000ffff5820e290)    ;; object: 0xffff5820e1e1 <Code: BINARY_OP_IC>
0xffff5820e258    24  sub csp, jssp, #0x10 (16)
0xffff5820e25c    28  str x17, [jssp, #-8]!
0xffff5820e260    32  add fp, jssp, #0x10 (16)
0xffff5820e264    36  sub csp, jssp, #0x10 (16)
0xffff5820e268    40  stp x0, x1, [jssp, #-16]!
0xffff5820e26c    44  movz x0, #0x2
0xffff5820e270    48  ldr x1, pc+40 (addr 0x0000ffff5820e298)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e274    52  ldr x16, pc+44 (addr 0x0000ffff5820e2a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e278    56  blr x16
0xffff5820e27c    60  mov jssp, fp
0xffff5820e280    64  ldp fp, lr, [jssp], #16
0xffff5820e284    68  ret
0xffff5820e288    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e28c    76  d63f03e0       constant
0xffff5820e290    80  5820e1e1       constant
0xffff5820e294    84  0000ffff       constant
0xffff5820e298    88  00c8e1b8       constant
0xffff5820e29c    92  00000000       constant
0xffff5820e2a0    96  58206060       constant
0xffff5820e2a4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e254  embedded object  (0xffff5820e1e1 <Code: BINARY_OP_IC>)
0xffff5820e270  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e274  code target (STUB)  (0xffff58206060)
0xffff5820e288  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 4
name = BinaryOpICStub(SAR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e320     0  movz x16, #0xc00000000
0xffff5820e324     4  sub csp, jssp, #0x10 (16)
0xffff5820e328     8  stp fp, lr, [jssp, #-16]!
0xffff5820e32c    12  sub csp, jssp, #0x10 (16)
0xffff5820e330    16  str x16, [jssp, #-8]!
0xffff5820e334    20  ldr x17, pc+60 (addr 0x0000ffff5820e370)    ;; object: 0xffff5820e2c1 <Code: BINARY_OP_IC>
0xffff5820e338    24  sub csp, jssp, #0x10 (16)
0xffff5820e33c    28  str x17, [jssp, #-8]!
0xffff5820e340    32  add fp, jssp, #0x10 (16)
0xffff5820e344    36  sub csp, jssp, #0x10 (16)
0xffff5820e348    40  stp x0, x1, [jssp, #-16]!
0xffff5820e34c    44  movz x0, #0x2
0xffff5820e350    48  ldr x1, pc+40 (addr 0x0000ffff5820e378)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e354    52  ldr x16, pc+44 (addr 0x0000ffff5820e380)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e358    56  blr x16
0xffff5820e35c    60  mov jssp, fp
0xffff5820e360    64  ldp fp, lr, [jssp], #16
0xffff5820e364    68  ret
0xffff5820e368    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e36c    76  d63f03e0       constant
0xffff5820e370    80  5820e2c1       constant
0xffff5820e374    84  0000ffff       constant
0xffff5820e378    88  00c8e1b8       constant
0xffff5820e37c    92  00000000       constant
0xffff5820e380    96  58206060       constant
0xffff5820e384   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e334  embedded object  (0xffff5820e2c1 <Code: BINARY_OP_IC>)
0xffff5820e350  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e354  code target (STUB)  (0xffff58206060)
0xffff5820e368  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 5
name = BinaryOpICStub(SHR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e400     0  movz x16, #0xc00000000
0xffff5820e404     4  sub csp, jssp, #0x10 (16)
0xffff5820e408     8  stp fp, lr, [jssp, #-16]!
0xffff5820e40c    12  sub csp, jssp, #0x10 (16)
0xffff5820e410    16  str x16, [jssp, #-8]!
0xffff5820e414    20  ldr x17, pc+60 (addr 0x0000ffff5820e450)    ;; object: 0xffff5820e3a1 <Code: BINARY_OP_IC>
0xffff5820e418    24  sub csp, jssp, #0x10 (16)
0xffff5820e41c    28  str x17, [jssp, #-8]!
0xffff5820e420    32  add fp, jssp, #0x10 (16)
0xffff5820e424    36  sub csp, jssp, #0x10 (16)
0xffff5820e428    40  stp x0, x1, [jssp, #-16]!
0xffff5820e42c    44  movz x0, #0x2
0xffff5820e430    48  ldr x1, pc+40 (addr 0x0000ffff5820e458)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e434    52  ldr x16, pc+44 (addr 0x0000ffff5820e460)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e438    56  blr x16
0xffff5820e43c    60  mov jssp, fp
0xffff5820e440    64  ldp fp, lr, [jssp], #16
0xffff5820e444    68  ret
0xffff5820e448    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e44c    76  d63f03e0       constant
0xffff5820e450    80  5820e3a1       constant
0xffff5820e454    84  0000ffff       constant
0xffff5820e458    88  00c8e1b8       constant
0xffff5820e45c    92  00000000       constant
0xffff5820e460    96  58206060       constant
0xffff5820e464   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e414  embedded object  (0xffff5820e3a1 <Code: BINARY_OP_IC>)
0xffff5820e430  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e434  code target (STUB)  (0xffff58206060)
0xffff5820e448  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 6
name = BinaryOpICStub(ROR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e4e0     0  movz x16, #0xc00000000
0xffff5820e4e4     4  sub csp, jssp, #0x10 (16)
0xffff5820e4e8     8  stp fp, lr, [jssp, #-16]!
0xffff5820e4ec    12  sub csp, jssp, #0x10 (16)
0xffff5820e4f0    16  str x16, [jssp, #-8]!
0xffff5820e4f4    20  ldr x17, pc+60 (addr 0x0000ffff5820e530)    ;; object: 0xffff5820e481 <Code: BINARY_OP_IC>
0xffff5820e4f8    24  sub csp, jssp, #0x10 (16)
0xffff5820e4fc    28  str x17, [jssp, #-8]!
0xffff5820e500    32  add fp, jssp, #0x10 (16)
0xffff5820e504    36  sub csp, jssp, #0x10 (16)
0xffff5820e508    40  stp x0, x1, [jssp, #-16]!
0xffff5820e50c    44  movz x0, #0x2
0xffff5820e510    48  ldr x1, pc+40 (addr 0x0000ffff5820e538)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e514    52  ldr x16, pc+44 (addr 0x0000ffff5820e540)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e518    56  blr x16
0xffff5820e51c    60  mov jssp, fp
0xffff5820e520    64  ldp fp, lr, [jssp], #16
0xffff5820e524    68  ret
0xffff5820e528    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e52c    76  d63f03e0       constant
0xffff5820e530    80  5820e481       constant
0xffff5820e534    84  0000ffff       constant
0xffff5820e538    88  00c8e1b8       constant
0xffff5820e53c    92  00000000       constant
0xffff5820e540    96  58206060       constant
0xffff5820e544   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e4f4  embedded object  (0xffff5820e481 <Code: BINARY_OP_IC>)
0xffff5820e510  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e514  code target (STUB)  (0xffff58206060)
0xffff5820e528  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 7
name = BinaryOpICStub(ADD:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e5c0     0  movz x16, #0xc00000000
0xffff5820e5c4     4  sub csp, jssp, #0x10 (16)
0xffff5820e5c8     8  stp fp, lr, [jssp, #-16]!
0xffff5820e5cc    12  sub csp, jssp, #0x10 (16)
0xffff5820e5d0    16  str x16, [jssp, #-8]!
0xffff5820e5d4    20  ldr x17, pc+60 (addr 0x0000ffff5820e610)    ;; object: 0xffff5820e561 <Code: BINARY_OP_IC>
0xffff5820e5d8    24  sub csp, jssp, #0x10 (16)
0xffff5820e5dc    28  str x17, [jssp, #-8]!
0xffff5820e5e0    32  add fp, jssp, #0x10 (16)
0xffff5820e5e4    36  sub csp, jssp, #0x10 (16)
0xffff5820e5e8    40  stp x0, x1, [jssp, #-16]!
0xffff5820e5ec    44  movz x0, #0x2
0xffff5820e5f0    48  ldr x1, pc+40 (addr 0x0000ffff5820e618)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e5f4    52  ldr x16, pc+44 (addr 0x0000ffff5820e620)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e5f8    56  blr x16
0xffff5820e5fc    60  mov jssp, fp
0xffff5820e600    64  ldp fp, lr, [jssp], #16
0xffff5820e604    68  ret
0xffff5820e608    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e60c    76  d63f03e0       constant
0xffff5820e610    80  5820e561       constant
0xffff5820e614    84  0000ffff       constant
0xffff5820e618    88  00c8e1b8       constant
0xffff5820e61c    92  00000000       constant
0xffff5820e620    96  58206060       constant
0xffff5820e624   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e5d4  embedded object  (0xffff5820e561 <Code: BINARY_OP_IC>)
0xffff5820e5f0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e5f4  code target (STUB)  (0xffff58206060)
0xffff5820e608  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 8
name = BinaryOpICStub(SUB:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e6a0     0  movz x16, #0xc00000000
0xffff5820e6a4     4  sub csp, jssp, #0x10 (16)
0xffff5820e6a8     8  stp fp, lr, [jssp, #-16]!
0xffff5820e6ac    12  sub csp, jssp, #0x10 (16)
0xffff5820e6b0    16  str x16, [jssp, #-8]!
0xffff5820e6b4    20  ldr x17, pc+60 (addr 0x0000ffff5820e6f0)    ;; object: 0xffff5820e641 <Code: BINARY_OP_IC>
0xffff5820e6b8    24  sub csp, jssp, #0x10 (16)
0xffff5820e6bc    28  str x17, [jssp, #-8]!
0xffff5820e6c0    32  add fp, jssp, #0x10 (16)
0xffff5820e6c4    36  sub csp, jssp, #0x10 (16)
0xffff5820e6c8    40  stp x0, x1, [jssp, #-16]!
0xffff5820e6cc    44  movz x0, #0x2
0xffff5820e6d0    48  ldr x1, pc+40 (addr 0x0000ffff5820e6f8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e6d4    52  ldr x16, pc+44 (addr 0x0000ffff5820e700)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e6d8    56  blr x16
0xffff5820e6dc    60  mov jssp, fp
0xffff5820e6e0    64  ldp fp, lr, [jssp], #16
0xffff5820e6e4    68  ret
0xffff5820e6e8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e6ec    76  d63f03e0       constant
0xffff5820e6f0    80  5820e641       constant
0xffff5820e6f4    84  0000ffff       constant
0xffff5820e6f8    88  00c8e1b8       constant
0xffff5820e6fc    92  00000000       constant
0xffff5820e700    96  58206060       constant
0xffff5820e704   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e6b4  embedded object  (0xffff5820e641 <Code: BINARY_OP_IC>)
0xffff5820e6d0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e6d4  code target (STUB)  (0xffff58206060)
0xffff5820e6e8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 9
name = BinaryOpICStub(MUL:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e780     0  movz x16, #0xc00000000
0xffff5820e784     4  sub csp, jssp, #0x10 (16)
0xffff5820e788     8  stp fp, lr, [jssp, #-16]!
0xffff5820e78c    12  sub csp, jssp, #0x10 (16)
0xffff5820e790    16  str x16, [jssp, #-8]!
0xffff5820e794    20  ldr x17, pc+60 (addr 0x0000ffff5820e7d0)    ;; object: 0xffff5820e721 <Code: BINARY_OP_IC>
0xffff5820e798    24  sub csp, jssp, #0x10 (16)
0xffff5820e79c    28  str x17, [jssp, #-8]!
0xffff5820e7a0    32  add fp, jssp, #0x10 (16)
0xffff5820e7a4    36  sub csp, jssp, #0x10 (16)
0xffff5820e7a8    40  stp x0, x1, [jssp, #-16]!
0xffff5820e7ac    44  movz x0, #0x2
0xffff5820e7b0    48  ldr x1, pc+40 (addr 0x0000ffff5820e7d8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e7b4    52  ldr x16, pc+44 (addr 0x0000ffff5820e7e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e7b8    56  blr x16
0xffff5820e7bc    60  mov jssp, fp
0xffff5820e7c0    64  ldp fp, lr, [jssp], #16
0xffff5820e7c4    68  ret
0xffff5820e7c8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e7cc    76  d63f03e0       constant
0xffff5820e7d0    80  5820e721       constant
0xffff5820e7d4    84  0000ffff       constant
0xffff5820e7d8    88  00c8e1b8       constant
0xffff5820e7dc    92  00000000       constant
0xffff5820e7e0    96  58206060       constant
0xffff5820e7e4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e794  embedded object  (0xffff5820e721 <Code: BINARY_OP_IC>)
0xffff5820e7b0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e7b4  code target (STUB)  (0xffff58206060)
0xffff5820e7c8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 10
name = BinaryOpICStub(DIV:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e860     0  movz x16, #0xc00000000
0xffff5820e864     4  sub csp, jssp, #0x10 (16)
0xffff5820e868     8  stp fp, lr, [jssp, #-16]!
0xffff5820e86c    12  sub csp, jssp, #0x10 (16)
0xffff5820e870    16  str x16, [jssp, #-8]!
0xffff5820e874    20  ldr x17, pc+60 (addr 0x0000ffff5820e8b0)    ;; object: 0xffff5820e801 <Code: BINARY_OP_IC>
0xffff5820e878    24  sub csp, jssp, #0x10 (16)
0xffff5820e87c    28  str x17, [jssp, #-8]!
0xffff5820e880    32  add fp, jssp, #0x10 (16)
0xffff5820e884    36  sub csp, jssp, #0x10 (16)
0xffff5820e888    40  stp x0, x1, [jssp, #-16]!
0xffff5820e88c    44  movz x0, #0x2
0xffff5820e890    48  ldr x1, pc+40 (addr 0x0000ffff5820e8b8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e894    52  ldr x16, pc+44 (addr 0x0000ffff5820e8c0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e898    56  blr x16
0xffff5820e89c    60  mov jssp, fp
0xffff5820e8a0    64  ldp fp, lr, [jssp], #16
0xffff5820e8a4    68  ret
0xffff5820e8a8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e8ac    76  d63f03e0       constant
0xffff5820e8b0    80  5820e801       constant
0xffff5820e8b4    84  0000ffff       constant
0xffff5820e8b8    88  00c8e1b8       constant
0xffff5820e8bc    92  00000000       constant
0xffff5820e8c0    96  58206060       constant
0xffff5820e8c4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e874  embedded object  (0xffff5820e801 <Code: BINARY_OP_IC>)
0xffff5820e890  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e894  code target (STUB)  (0xffff58206060)
0xffff5820e8a8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 11
name = BinaryOpICStub(MOD:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff5820e940     0  movz x16, #0xc00000000
0xffff5820e944     4  sub csp, jssp, #0x10 (16)
0xffff5820e948     8  stp fp, lr, [jssp, #-16]!
0xffff5820e94c    12  sub csp, jssp, #0x10 (16)
0xffff5820e950    16  str x16, [jssp, #-8]!
0xffff5820e954    20  ldr x17, pc+60 (addr 0x0000ffff5820e990)    ;; object: 0xffff5820e8e1 <Code: BINARY_OP_IC>
0xffff5820e958    24  sub csp, jssp, #0x10 (16)
0xffff5820e95c    28  str x17, [jssp, #-8]!
0xffff5820e960    32  add fp, jssp, #0x10 (16)
0xffff5820e964    36  sub csp, jssp, #0x10 (16)
0xffff5820e968    40  stp x0, x1, [jssp, #-16]!
0xffff5820e96c    44  movz x0, #0x2
0xffff5820e970    48  ldr x1, pc+40 (addr 0x0000ffff5820e998)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff5820e974    52  ldr x16, pc+44 (addr 0x0000ffff5820e9a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5820e978    56  blr x16
0xffff5820e97c    60  mov jssp, fp
0xffff5820e980    64  ldp fp, lr, [jssp], #16
0xffff5820e984    68  ret
0xffff5820e988    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820e98c    76  d63f03e0       constant
0xffff5820e990    80  5820e8e1       constant
0xffff5820e994    84  0000ffff       constant
0xffff5820e998    88  00c8e1b8       constant
0xffff5820e99c    92  00000000       constant
0xffff5820e9a0    96  58206060       constant
0xffff5820e9a4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff5820e954  embedded object  (0xffff5820e8e1 <Code: BINARY_OP_IC>)
0xffff5820e970  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff5820e974  code target (STUB)  (0xffff58206060)
0xffff5820e988  constant pool (size 32)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4391
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff5820ea20     0  mov x2, x1
0xffff5820ea24     4  tbnz w2, #0, #+0x1c (addr 0xffff5820ea40)
0xffff5820ea28     8  mov x3, x0
0xffff5820ea2c    12  tbnz w3, #0, #+0x24 (addr 0xffff5820ea50)
0xffff5820ea30    16  adds x2, x3, x2
0xffff5820ea34    20  b.vs #+0x2c (addr 0xffff5820ea60)
0xffff5820ea38    24  mov x0, x2
0xffff5820ea3c    28  ret
0xffff5820ea40    32  movz x16, #0x0
0xffff5820ea44    36  sub csp, jssp, #0x10 (16)
0xffff5820ea48    40  stp fp, lr, [jssp, #-16]!
0xffff5820ea4c    44  bl #+0x24 (addr 0xffff5820ea70)
0xffff5820ea50    48  movz x16, #0x8
0xffff5820ea54    52  sub csp, jssp, #0x10 (16)
0xffff5820ea58    56  stp fp, lr, [jssp, #-16]!
0xffff5820ea5c    60  bl #+0x14 (addr 0xffff5820ea70)
0xffff5820ea60    64  movz x16, #0x10
0xffff5820ea64    68  sub csp, jssp, #0x10 (16)
0xffff5820ea68    72  stp fp, lr, [jssp, #-16]!
0xffff5820ea6c    76  bl #+0x4 (addr 0xffff5820ea70)
0xffff5820ea70    80  movz x17, #0xa00000000
0xffff5820ea74    84  sub csp, jssp, #0x10 (16)
0xffff5820ea78    88  stp x17, cp, [jssp, #-16]!
0xffff5820ea7c    92  add fp, jssp, #0x10 (16)
0xffff5820ea80    96  ldr x17, pc+24 (addr 0x0000ffff5820ea98)    ;; lazy deoptimization bailout 0
0xffff5820ea84   100  add x17, x17, x16
0xffff5820ea88   104  br x17
0xffff5820ea8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820ea90   112  d63f03e0       constant
0xffff5820ea94   116  d503201f       constant
0xffff5820ea98   120  58006000       constant
0xffff5820ea9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820ea80  runtime entry
0xffff5820ea8c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4391
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff5820ea20     0  mov x2, x1
0xffff5820ea24     4  tbnz w2, #0, #+0x1c (addr 0xffff5820ea40)
0xffff5820ea28     8  mov x3, x0
0xffff5820ea2c    12  tbnz w3, #0, #+0x24 (addr 0xffff5820ea50)
0xffff5820ea30    16  adds x2, x3, x2
0xffff5820ea34    20  b.vs #+0x2c (addr 0xffff5820ea60)
0xffff5820ea38    24  mov x0, x2
0xffff5820ea3c    28  ret
0xffff5820ea40    32  movz x16, #0x0
0xffff5820ea44    36  sub csp, jssp, #0x10 (16)
0xffff5820ea48    40  stp fp, lr, [jssp, #-16]!
0xffff5820ea4c    44  bl #+0x24 (addr 0xffff5820ea70)
0xffff5820ea50    48  movz x16, #0x8
0xffff5820ea54    52  sub csp, jssp, #0x10 (16)
0xffff5820ea58    56  stp fp, lr, [jssp, #-16]!
0xffff5820ea5c    60  bl #+0x14 (addr 0xffff5820ea70)
0xffff5820ea60    64  movz x16, #0x10
0xffff5820ea64    68  sub csp, jssp, #0x10 (16)
0xffff5820ea68    72  stp fp, lr, [jssp, #-16]!
0xffff5820ea6c    76  bl #+0x4 (addr 0xffff5820ea70)
0xffff5820ea70    80  movz x17, #0xa00000000
0xffff5820ea74    84  sub csp, jssp, #0x10 (16)
0xffff5820ea78    88  stp x17, cp, [jssp, #-16]!
0xffff5820ea7c    92  add fp, jssp, #0x10 (16)
0xffff5820ea80    96  ldr x17, pc+24 (addr 0x0000ffff5820ea98)    ;; lazy deoptimization bailout 0
0xffff5820ea84   100  add x17, x17, x16
0xffff5820ea88   104  br x17
0xffff5820ea8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820ea90   112  d63f03e0       constant
0xffff5820ea94   116  d503201f       constant
0xffff5820ea98   120  58006000       constant
0xffff5820ea9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820ea80  runtime entry
0xffff5820ea8c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4407
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff5820eb20     0  mov x2, x1
0xffff5820eb24     4  tbnz w2, #0, #+0xc4 (addr 0xffff5820ebe8)
0xffff5820eb28     8  mov x3, x0
0xffff5820eb2c    12  tbnz w3, #0, #+0xcc (addr 0xffff5820ebf8)
0xffff5820eb30    16  scvtf d0, x2, #32
0xffff5820eb34    20  scvtf d1, x3, #32
0xffff5820eb38    24  fadd d0, d0, d1
0xffff5820eb3c    28  movz x1, #0x92c0
0xffff5820eb40    32  movk x1, #0x16e7, lsl #16
0xffff5820eb44    36  ldp x2, x0, [x1]
0xffff5820eb48    40  adds x16, x2, #0x10 (16)
0xffff5820eb4c    44  ccmp x16, x0, #nzCv, lo
0xffff5820eb50    48  b.hi #+0x20 (addr 0xffff5820eb70)
0xffff5820eb54    52  str x16, [x1]
0xffff5820eb58    56  ldr x1, [x26, #120]
0xffff5820eb5c    60  str x1, [x2]
0xffff5820eb60    64  orr x2, x2, #0x1
0xffff5820eb64    68  stur d0, [x2, #7]
0xffff5820eb68    72  mov x0, x2
0xffff5820eb6c    76  ret
0xffff5820eb70    80  sub csp, jssp, #0x10 (16)
0xffff5820eb74    84  stp fp, lr, [jssp, #-16]!
0xffff5820eb78    88  movz fp, #0xa00000000
0xffff5820eb7c    92  sub csp, jssp, #0x8 (8)
0xffff5820eb80    96  str fp, [jssp, #-8]!
0xffff5820eb84   100  add fp, jssp, #0x8 (8)
0xffff5820eb88   104  movz x2, #0x0
0xffff5820eb8c   108  mov x16, lr
0xffff5820eb90   112  ldr x17, pc+64 (addr 0x0000ffff5820ebd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820eb94   116  blr x17
0xffff5820eb98   120  ldur cp, [fp, #-8]
0xffff5820eb9c   124  movz x0, #0x0
0xffff5820eba0   128  movz x1, #0x4b48
0xffff5820eba4   132  movk x1, #0xe4, lsl #16
0xffff5820eba8   136  ldr x16, pc+48 (addr 0x0000ffff5820ebd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820ebac   140  blr x16
0xffff5820ebb0   144  str x0, [jssp, #16]
0xffff5820ebb4   148  ldr x16, pc+44 (addr 0x0000ffff5820ebe0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820ebb8   152  blr x16
0xffff5820ebbc   156  ldr lr, [jssp, #16]
0xffff5820ebc0   160  ldp xzr, fp, [jssp], #24
0xffff5820ebc4   164  b #-0x60 (addr 0xffff5820eb64)
0xffff5820ebc8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820ebcc   172  d63f03e0       constant
0xffff5820ebd0   176  58206820       constant
0xffff5820ebd4   180  0000ffff       constant
0xffff5820ebd8   184  58206260       constant
0xffff5820ebdc   188  0000ffff       constant
0xffff5820ebe0   192  582068e0       constant
0xffff5820ebe4   196  0000ffff       constant
0xffff5820ebe8   200  movz x16, #0x0
0xffff5820ebec   204  sub csp, jssp, #0x10 (16)
0xffff5820ebf0   208  stp fp, lr, [jssp, #-16]!
0xffff5820ebf4   212  bl #+0x14 (addr 0xffff5820ec08)
0xffff5820ebf8   216  movz x16, #0x8
0xffff5820ebfc   220  sub csp, jssp, #0x10 (16)
0xffff5820ec00   224  stp fp, lr, [jssp, #-16]!
0xffff5820ec04   228  bl #+0x4 (addr 0xffff5820ec08)
0xffff5820ec08   232  movz x17, #0xa00000000
0xffff5820ec0c   236  sub csp, jssp, #0x10 (16)
0xffff5820ec10   240  stp x17, cp, [jssp, #-16]!
0xffff5820ec14   244  add fp, jssp, #0x10 (16)
0xffff5820ec18   248  ldr x17, pc+24 (addr 0x0000ffff5820ec30)    ;; lazy deoptimization bailout 0
0xffff5820ec1c   252  add x17, x17, x16
0xffff5820ec20   256  br x17
0xffff5820ec24   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820ec28   264  d63f03e0       constant
0xffff5820ec2c   268  d503201f       constant
0xffff5820ec30   272  58006000       constant
0xffff5820ec34   276  0000ffff       constant


Safepoints (size = 21)
0xffff5820ebb0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820eb90  code target (STUB)  (0xffff58206820)
0xffff5820eba8  code target (STUB)  (0xffff58206260)
0xffff5820ebb4  code target (STUB)  (0xffff582068e0)
0xffff5820ebc8  constant pool (size 32)
0xffff5820ec18  runtime entry
0xffff5820ec24  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4407
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff5820eb20     0  mov x2, x1
0xffff5820eb24     4  tbnz w2, #0, #+0xc4 (addr 0xffff5820ebe8)
0xffff5820eb28     8  mov x3, x0
0xffff5820eb2c    12  tbnz w3, #0, #+0xcc (addr 0xffff5820ebf8)
0xffff5820eb30    16  scvtf d0, x2, #32
0xffff5820eb34    20  scvtf d1, x3, #32
0xffff5820eb38    24  fadd d0, d0, d1
0xffff5820eb3c    28  movz x1, #0x92c0
0xffff5820eb40    32  movk x1, #0x16e7, lsl #16
0xffff5820eb44    36  ldp x2, x0, [x1]
0xffff5820eb48    40  adds x16, x2, #0x10 (16)
0xffff5820eb4c    44  ccmp x16, x0, #nzCv, lo
0xffff5820eb50    48  b.hi #+0x20 (addr 0xffff5820eb70)
0xffff5820eb54    52  str x16, [x1]
0xffff5820eb58    56  ldr x1, [x26, #120]
0xffff5820eb5c    60  str x1, [x2]
0xffff5820eb60    64  orr x2, x2, #0x1
0xffff5820eb64    68  stur d0, [x2, #7]
0xffff5820eb68    72  mov x0, x2
0xffff5820eb6c    76  ret
0xffff5820eb70    80  sub csp, jssp, #0x10 (16)
0xffff5820eb74    84  stp fp, lr, [jssp, #-16]!
0xffff5820eb78    88  movz fp, #0xa00000000
0xffff5820eb7c    92  sub csp, jssp, #0x8 (8)
0xffff5820eb80    96  str fp, [jssp, #-8]!
0xffff5820eb84   100  add fp, jssp, #0x8 (8)
0xffff5820eb88   104  movz x2, #0x0
0xffff5820eb8c   108  mov x16, lr
0xffff5820eb90   112  ldr x17, pc+64 (addr 0x0000ffff5820ebd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820eb94   116  blr x17
0xffff5820eb98   120  ldur cp, [fp, #-8]
0xffff5820eb9c   124  movz x0, #0x0
0xffff5820eba0   128  movz x1, #0x4b48
0xffff5820eba4   132  movk x1, #0xe4, lsl #16
0xffff5820eba8   136  ldr x16, pc+48 (addr 0x0000ffff5820ebd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820ebac   140  blr x16
0xffff5820ebb0   144  str x0, [jssp, #16]
0xffff5820ebb4   148  ldr x16, pc+44 (addr 0x0000ffff5820ebe0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820ebb8   152  blr x16
0xffff5820ebbc   156  ldr lr, [jssp, #16]
0xffff5820ebc0   160  ldp xzr, fp, [jssp], #24
0xffff5820ebc4   164  b #-0x60 (addr 0xffff5820eb64)
0xffff5820ebc8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820ebcc   172  d63f03e0       constant
0xffff5820ebd0   176  58206820       constant
0xffff5820ebd4   180  0000ffff       constant
0xffff5820ebd8   184  58206260       constant
0xffff5820ebdc   188  0000ffff       constant
0xffff5820ebe0   192  582068e0       constant
0xffff5820ebe4   196  0000ffff       constant
0xffff5820ebe8   200  movz x16, #0x0
0xffff5820ebec   204  sub csp, jssp, #0x10 (16)
0xffff5820ebf0   208  stp fp, lr, [jssp, #-16]!
0xffff5820ebf4   212  bl #+0x14 (addr 0xffff5820ec08)
0xffff5820ebf8   216  movz x16, #0x8
0xffff5820ebfc   220  sub csp, jssp, #0x10 (16)
0xffff5820ec00   224  stp fp, lr, [jssp, #-16]!
0xffff5820ec04   228  bl #+0x4 (addr 0xffff5820ec08)
0xffff5820ec08   232  movz x17, #0xa00000000
0xffff5820ec0c   236  sub csp, jssp, #0x10 (16)
0xffff5820ec10   240  stp x17, cp, [jssp, #-16]!
0xffff5820ec14   244  add fp, jssp, #0x10 (16)
0xffff5820ec18   248  ldr x17, pc+24 (addr 0x0000ffff5820ec30)    ;; lazy deoptimization bailout 0
0xffff5820ec1c   252  add x17, x17, x16
0xffff5820ec20   256  br x17
0xffff5820ec24   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820ec28   264  d63f03e0       constant
0xffff5820ec2c   268  d503201f       constant
0xffff5820ec30   272  58006000       constant
0xffff5820ec34   276  0000ffff       constant


Safepoints (size = 21)
0xffff5820ebb0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820eb90  code target (STUB)  (0xffff58206820)
0xffff5820eba8  code target (STUB)  (0xffff58206260)
0xffff5820ebb4  code target (STUB)  (0xffff582068e0)
0xffff5820ebc8  constant pool (size 32)
0xffff5820ec18  runtime entry
0xffff5820ec24  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6455
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff5820ecc0     0  mov x2, x1
0xffff5820ecc4     4  tbnz w2, #0, #+0xf4 (addr 0xffff5820edb8)
0xffff5820ecc8     8  tbz w0, #0, #+0x34 (addr 0xffff5820ecfc)
0xffff5820eccc    12  ldur x16, [x0, #-1]
0xffff5820ecd0    16  ldr x17, [x26, #120]
0xffff5820ecd4    20  cmp x16, x17
0xffff5820ecd8    24  b.ne #+0xc (addr 0xffff5820ece4)
0xffff5820ecdc    28  ldur d0, [x0, #7]
0xffff5820ece0    32  b #+0x20 (addr 0xffff5820ed00)
0xffff5820ece4    36  ldr x16, [x26, #40]
0xffff5820ece8    40  cmp x0, x16
0xffff5820ecec    44  b.ne #+0xdc (addr 0xffff5820edc8)
0xffff5820ecf0    48  ldr x3, [x26, #928]
0xffff5820ecf4    52  ldur d0, [x3, #7]
0xffff5820ecf8    56  b #+0x8 (addr 0xffff5820ed00)
0xffff5820ecfc    60  scvtf d0, x0, #32
0xffff5820ed00    64  scvtf d1, x2, #32
0xffff5820ed04    68  fadd d0, d1, d0
0xffff5820ed08    72  movz x1, #0x92c0
0xffff5820ed0c    76  movk x1, #0x16e7, lsl #16
0xffff5820ed10    80  ldp x2, x0, [x1]
0xffff5820ed14    84  adds x16, x2, #0x10 (16)
0xffff5820ed18    88  ccmp x16, x0, #nzCv, lo
0xffff5820ed1c    92  b.hi #+0x20 (addr 0xffff5820ed3c)
0xffff5820ed20    96  str x16, [x1]
0xffff5820ed24   100  ldr x1, [x26, #120]
0xffff5820ed28   104  str x1, [x2]
0xffff5820ed2c   108  orr x2, x2, #0x1
0xffff5820ed30   112  stur d0, [x2, #7]
0xffff5820ed34   116  mov x0, x2
0xffff5820ed38   120  ret
0xffff5820ed3c   124  sub csp, jssp, #0x10 (16)
0xffff5820ed40   128  stp fp, lr, [jssp, #-16]!
0xffff5820ed44   132  movz fp, #0xa00000000
0xffff5820ed48   136  sub csp, jssp, #0x8 (8)
0xffff5820ed4c   140  str fp, [jssp, #-8]!
0xffff5820ed50   144  add fp, jssp, #0x8 (8)
0xffff5820ed54   148  movz x2, #0x0
0xffff5820ed58   152  mov x16, lr
0xffff5820ed5c   156  ldr x17, pc+68 (addr 0x0000ffff5820eda0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820ed60   160  blr x17
0xffff5820ed64   164  ldur cp, [fp, #-8]
0xffff5820ed68   168  movz x0, #0x0
0xffff5820ed6c   172  movz x1, #0x4b48
0xffff5820ed70   176  movk x1, #0xe4, lsl #16
0xffff5820ed74   180  ldr x16, pc+52 (addr 0x0000ffff5820eda8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820ed78   184  blr x16
0xffff5820ed7c   188  str x0, [jssp, #16]
0xffff5820ed80   192  ldr x16, pc+48 (addr 0x0000ffff5820edb0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820ed84   196  blr x16
0xffff5820ed88   200  ldr lr, [jssp, #16]
0xffff5820ed8c   204  ldp xzr, fp, [jssp], #24
0xffff5820ed90   208  b #-0x60 (addr 0xffff5820ed30)
0xffff5820ed94   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5820ed98   216  d63f03e0       constant
0xffff5820ed9c   220  d503201f       constant
0xffff5820eda0   224  58206820       constant
0xffff5820eda4   228  0000ffff       constant
0xffff5820eda8   232  58206260       constant
0xffff5820edac   236  0000ffff       constant
0xffff5820edb0   240  582068e0       constant
0xffff5820edb4   244  0000ffff       constant
0xffff5820edb8   248  movz x16, #0x0
0xffff5820edbc   252  sub csp, jssp, #0x10 (16)
0xffff5820edc0   256  stp fp, lr, [jssp, #-16]!
0xffff5820edc4   260  bl #+0x14 (addr 0xffff5820edd8)
0xffff5820edc8   264  movz x16, #0x8
0xffff5820edcc   268  sub csp, jssp, #0x10 (16)
0xffff5820edd0   272  stp fp, lr, [jssp, #-16]!
0xffff5820edd4   276  bl #+0x4 (addr 0xffff5820edd8)
0xffff5820edd8   280  movz x17, #0xa00000000
0xffff5820eddc   284  sub csp, jssp, #0x10 (16)
0xffff5820ede0   288  stp x17, cp, [jssp, #-16]!
0xffff5820ede4   292  add fp, jssp, #0x10 (16)
0xffff5820ede8   296  ldr x17, pc+24 (addr 0x0000ffff5820ee00)    ;; lazy deoptimization bailout 0
0xffff5820edec   300  add x17, x17, x16
0xffff5820edf0   304  br x17
0xffff5820edf4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820edf8   312  d63f03e0       constant
0xffff5820edfc   316  d503201f       constant
0xffff5820ee00   320  58006000       constant
0xffff5820ee04   324  0000ffff       constant


Safepoints (size = 21)
0xffff5820ed7c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820ed5c  code target (STUB)  (0xffff58206820)
0xffff5820ed74  code target (STUB)  (0xffff58206260)
0xffff5820ed80  code target (STUB)  (0xffff582068e0)
0xffff5820ed94  constant pool (size 36)
0xffff5820ede8  runtime entry
0xffff5820edf4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6455
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff5820ecc0     0  mov x2, x1
0xffff5820ecc4     4  tbnz w2, #0, #+0xf4 (addr 0xffff5820edb8)
0xffff5820ecc8     8  tbz w0, #0, #+0x34 (addr 0xffff5820ecfc)
0xffff5820eccc    12  ldur x16, [x0, #-1]
0xffff5820ecd0    16  ldr x17, [x26, #120]
0xffff5820ecd4    20  cmp x16, x17
0xffff5820ecd8    24  b.ne #+0xc (addr 0xffff5820ece4)
0xffff5820ecdc    28  ldur d0, [x0, #7]
0xffff5820ece0    32  b #+0x20 (addr 0xffff5820ed00)
0xffff5820ece4    36  ldr x16, [x26, #40]
0xffff5820ece8    40  cmp x0, x16
0xffff5820ecec    44  b.ne #+0xdc (addr 0xffff5820edc8)
0xffff5820ecf0    48  ldr x3, [x26, #928]
0xffff5820ecf4    52  ldur d0, [x3, #7]
0xffff5820ecf8    56  b #+0x8 (addr 0xffff5820ed00)
0xffff5820ecfc    60  scvtf d0, x0, #32
0xffff5820ed00    64  scvtf d1, x2, #32
0xffff5820ed04    68  fadd d0, d1, d0
0xffff5820ed08    72  movz x1, #0x92c0
0xffff5820ed0c    76  movk x1, #0x16e7, lsl #16
0xffff5820ed10    80  ldp x2, x0, [x1]
0xffff5820ed14    84  adds x16, x2, #0x10 (16)
0xffff5820ed18    88  ccmp x16, x0, #nzCv, lo
0xffff5820ed1c    92  b.hi #+0x20 (addr 0xffff5820ed3c)
0xffff5820ed20    96  str x16, [x1]
0xffff5820ed24   100  ldr x1, [x26, #120]
0xffff5820ed28   104  str x1, [x2]
0xffff5820ed2c   108  orr x2, x2, #0x1
0xffff5820ed30   112  stur d0, [x2, #7]
0xffff5820ed34   116  mov x0, x2
0xffff5820ed38   120  ret
0xffff5820ed3c   124  sub csp, jssp, #0x10 (16)
0xffff5820ed40   128  stp fp, lr, [jssp, #-16]!
0xffff5820ed44   132  movz fp, #0xa00000000
0xffff5820ed48   136  sub csp, jssp, #0x8 (8)
0xffff5820ed4c   140  str fp, [jssp, #-8]!
0xffff5820ed50   144  add fp, jssp, #0x8 (8)
0xffff5820ed54   148  movz x2, #0x0
0xffff5820ed58   152  mov x16, lr
0xffff5820ed5c   156  ldr x17, pc+68 (addr 0x0000ffff5820eda0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820ed60   160  blr x17
0xffff5820ed64   164  ldur cp, [fp, #-8]
0xffff5820ed68   168  movz x0, #0x0
0xffff5820ed6c   172  movz x1, #0x4b48
0xffff5820ed70   176  movk x1, #0xe4, lsl #16
0xffff5820ed74   180  ldr x16, pc+52 (addr 0x0000ffff5820eda8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820ed78   184  blr x16
0xffff5820ed7c   188  str x0, [jssp, #16]
0xffff5820ed80   192  ldr x16, pc+48 (addr 0x0000ffff5820edb0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820ed84   196  blr x16
0xffff5820ed88   200  ldr lr, [jssp, #16]
0xffff5820ed8c   204  ldp xzr, fp, [jssp], #24
0xffff5820ed90   208  b #-0x60 (addr 0xffff5820ed30)
0xffff5820ed94   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5820ed98   216  d63f03e0       constant
0xffff5820ed9c   220  d503201f       constant
0xffff5820eda0   224  58206820       constant
0xffff5820eda4   228  0000ffff       constant
0xffff5820eda8   232  58206260       constant
0xffff5820edac   236  0000ffff       constant
0xffff5820edb0   240  582068e0       constant
0xffff5820edb4   244  0000ffff       constant
0xffff5820edb8   248  movz x16, #0x0
0xffff5820edbc   252  sub csp, jssp, #0x10 (16)
0xffff5820edc0   256  stp fp, lr, [jssp, #-16]!
0xffff5820edc4   260  bl #+0x14 (addr 0xffff5820edd8)
0xffff5820edc8   264  movz x16, #0x8
0xffff5820edcc   268  sub csp, jssp, #0x10 (16)
0xffff5820edd0   272  stp fp, lr, [jssp, #-16]!
0xffff5820edd4   276  bl #+0x4 (addr 0xffff5820edd8)
0xffff5820edd8   280  movz x17, #0xa00000000
0xffff5820eddc   284  sub csp, jssp, #0x10 (16)
0xffff5820ede0   288  stp x17, cp, [jssp, #-16]!
0xffff5820ede4   292  add fp, jssp, #0x10 (16)
0xffff5820ede8   296  ldr x17, pc+24 (addr 0x0000ffff5820ee00)    ;; lazy deoptimization bailout 0
0xffff5820edec   300  add x17, x17, x16
0xffff5820edf0   304  br x17
0xffff5820edf4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820edf8   312  d63f03e0       constant
0xffff5820edfc   316  d503201f       constant
0xffff5820ee00   320  58006000       constant
0xffff5820ee04   324  0000ffff       constant


Safepoints (size = 21)
0xffff5820ed7c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820ed5c  code target (STUB)  (0xffff58206820)
0xffff5820ed74  code target (STUB)  (0xffff58206260)
0xffff5820ed80  code target (STUB)  (0xffff582068e0)
0xffff5820ed94  constant pool (size 36)
0xffff5820ede8  runtime entry
0xffff5820edf4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2343
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff5820ee80     0  mov x2, x1
0xffff5820ee84     4  tbnz w2, #0, #+0x1c (addr 0xffff5820eea0)
0xffff5820ee88     8  mov x3, x0
0xffff5820ee8c    12  tbnz w3, #0, #+0x24 (addr 0xffff5820eeb0)
0xffff5820ee90    16  adds x2, x3, x2
0xffff5820ee94    20  b.vs #+0x2c (addr 0xffff5820eec0)
0xffff5820ee98    24  mov x0, x2
0xffff5820ee9c    28  ret
0xffff5820eea0    32  movz x16, #0x0
0xffff5820eea4    36  sub csp, jssp, #0x10 (16)
0xffff5820eea8    40  stp fp, lr, [jssp, #-16]!
0xffff5820eeac    44  bl #+0x24 (addr 0xffff5820eed0)
0xffff5820eeb0    48  movz x16, #0x8
0xffff5820eeb4    52  sub csp, jssp, #0x10 (16)
0xffff5820eeb8    56  stp fp, lr, [jssp, #-16]!
0xffff5820eebc    60  bl #+0x14 (addr 0xffff5820eed0)
0xffff5820eec0    64  movz x16, #0x10
0xffff5820eec4    68  sub csp, jssp, #0x10 (16)
0xffff5820eec8    72  stp fp, lr, [jssp, #-16]!
0xffff5820eecc    76  bl #+0x4 (addr 0xffff5820eed0)
0xffff5820eed0    80  movz x17, #0xa00000000
0xffff5820eed4    84  sub csp, jssp, #0x10 (16)
0xffff5820eed8    88  stp x17, cp, [jssp, #-16]!
0xffff5820eedc    92  add fp, jssp, #0x10 (16)
0xffff5820eee0    96  ldr x17, pc+24 (addr 0x0000ffff5820eef8)    ;; lazy deoptimization bailout 0
0xffff5820eee4   100  add x17, x17, x16
0xffff5820eee8   104  br x17
0xffff5820eeec   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820eef0   112  d63f03e0       constant
0xffff5820eef4   116  d503201f       constant
0xffff5820eef8   120  58006000       constant
0xffff5820eefc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820eee0  runtime entry
0xffff5820eeec  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2343
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff5820ee80     0  mov x2, x1
0xffff5820ee84     4  tbnz w2, #0, #+0x1c (addr 0xffff5820eea0)
0xffff5820ee88     8  mov x3, x0
0xffff5820ee8c    12  tbnz w3, #0, #+0x24 (addr 0xffff5820eeb0)
0xffff5820ee90    16  adds x2, x3, x2
0xffff5820ee94    20  b.vs #+0x2c (addr 0xffff5820eec0)
0xffff5820ee98    24  mov x0, x2
0xffff5820ee9c    28  ret
0xffff5820eea0    32  movz x16, #0x0
0xffff5820eea4    36  sub csp, jssp, #0x10 (16)
0xffff5820eea8    40  stp fp, lr, [jssp, #-16]!
0xffff5820eeac    44  bl #+0x24 (addr 0xffff5820eed0)
0xffff5820eeb0    48  movz x16, #0x8
0xffff5820eeb4    52  sub csp, jssp, #0x10 (16)
0xffff5820eeb8    56  stp fp, lr, [jssp, #-16]!
0xffff5820eebc    60  bl #+0x14 (addr 0xffff5820eed0)
0xffff5820eec0    64  movz x16, #0x10
0xffff5820eec4    68  sub csp, jssp, #0x10 (16)
0xffff5820eec8    72  stp fp, lr, [jssp, #-16]!
0xffff5820eecc    76  bl #+0x4 (addr 0xffff5820eed0)
0xffff5820eed0    80  movz x17, #0xa00000000
0xffff5820eed4    84  sub csp, jssp, #0x10 (16)
0xffff5820eed8    88  stp x17, cp, [jssp, #-16]!
0xffff5820eedc    92  add fp, jssp, #0x10 (16)
0xffff5820eee0    96  ldr x17, pc+24 (addr 0x0000ffff5820eef8)    ;; lazy deoptimization bailout 0
0xffff5820eee4   100  add x17, x17, x16
0xffff5820eee8   104  br x17
0xffff5820eeec   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820eef0   112  d63f03e0       constant
0xffff5820eef4   116  d503201f       constant
0xffff5820eef8   120  58006000       constant
0xffff5820eefc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820eee0  runtime entry
0xffff5820eeec  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4535
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff5820ef80     0  mov x2, x0
0xffff5820ef84     4  tbnz w2, #0, #+0xf4 (addr 0xffff5820f078)
0xffff5820ef88     8  tbz w1, #0, #+0x34 (addr 0xffff5820efbc)
0xffff5820ef8c    12  ldur x16, [x1, #-1]
0xffff5820ef90    16  ldr x17, [x26, #120]
0xffff5820ef94    20  cmp x16, x17
0xffff5820ef98    24  b.ne #+0xc (addr 0xffff5820efa4)
0xffff5820ef9c    28  ldur d0, [x1, #7]
0xffff5820efa0    32  b #+0x20 (addr 0xffff5820efc0)
0xffff5820efa4    36  ldr x16, [x26, #40]
0xffff5820efa8    40  cmp x1, x16
0xffff5820efac    44  b.ne #+0xdc (addr 0xffff5820f088)
0xffff5820efb0    48  ldr x3, [x26, #928]
0xffff5820efb4    52  ldur d0, [x3, #7]
0xffff5820efb8    56  b #+0x8 (addr 0xffff5820efc0)
0xffff5820efbc    60  scvtf d0, x1, #32
0xffff5820efc0    64  scvtf d1, x2, #32
0xffff5820efc4    68  fadd d0, d0, d1
0xffff5820efc8    72  movz x1, #0x92c0
0xffff5820efcc    76  movk x1, #0x16e7, lsl #16
0xffff5820efd0    80  ldp x2, x0, [x1]
0xffff5820efd4    84  adds x16, x2, #0x10 (16)
0xffff5820efd8    88  ccmp x16, x0, #nzCv, lo
0xffff5820efdc    92  b.hi #+0x20 (addr 0xffff5820effc)
0xffff5820efe0    96  str x16, [x1]
0xffff5820efe4   100  ldr x1, [x26, #120]
0xffff5820efe8   104  str x1, [x2]
0xffff5820efec   108  orr x2, x2, #0x1
0xffff5820eff0   112  stur d0, [x2, #7]
0xffff5820eff4   116  mov x0, x2
0xffff5820eff8   120  ret
0xffff5820effc   124  sub csp, jssp, #0x10 (16)
0xffff5820f000   128  stp fp, lr, [jssp, #-16]!
0xffff5820f004   132  movz fp, #0xa00000000
0xffff5820f008   136  sub csp, jssp, #0x8 (8)
0xffff5820f00c   140  str fp, [jssp, #-8]!
0xffff5820f010   144  add fp, jssp, #0x8 (8)
0xffff5820f014   148  movz x2, #0x0
0xffff5820f018   152  mov x16, lr
0xffff5820f01c   156  ldr x17, pc+68 (addr 0x0000ffff5820f060)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820f020   160  blr x17
0xffff5820f024   164  ldur cp, [fp, #-8]
0xffff5820f028   168  movz x0, #0x0
0xffff5820f02c   172  movz x1, #0x4b48
0xffff5820f030   176  movk x1, #0xe4, lsl #16
0xffff5820f034   180  ldr x16, pc+52 (addr 0x0000ffff5820f068)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820f038   184  blr x16
0xffff5820f03c   188  str x0, [jssp, #16]
0xffff5820f040   192  ldr x16, pc+48 (addr 0x0000ffff5820f070)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820f044   196  blr x16
0xffff5820f048   200  ldr lr, [jssp, #16]
0xffff5820f04c   204  ldp xzr, fp, [jssp], #24
0xffff5820f050   208  b #-0x60 (addr 0xffff5820eff0)
0xffff5820f054   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5820f058   216  d63f03e0       constant
0xffff5820f05c   220  d503201f       constant
0xffff5820f060   224  58206820       constant
0xffff5820f064   228  0000ffff       constant
0xffff5820f068   232  58206260       constant
0xffff5820f06c   236  0000ffff       constant
0xffff5820f070   240  582068e0       constant
0xffff5820f074   244  0000ffff       constant
0xffff5820f078   248  movz x16, #0x0
0xffff5820f07c   252  sub csp, jssp, #0x10 (16)
0xffff5820f080   256  stp fp, lr, [jssp, #-16]!
0xffff5820f084   260  bl #+0x14 (addr 0xffff5820f098)
0xffff5820f088   264  movz x16, #0x8
0xffff5820f08c   268  sub csp, jssp, #0x10 (16)
0xffff5820f090   272  stp fp, lr, [jssp, #-16]!
0xffff5820f094   276  bl #+0x4 (addr 0xffff5820f098)
0xffff5820f098   280  movz x17, #0xa00000000
0xffff5820f09c   284  sub csp, jssp, #0x10 (16)
0xffff5820f0a0   288  stp x17, cp, [jssp, #-16]!
0xffff5820f0a4   292  add fp, jssp, #0x10 (16)
0xffff5820f0a8   296  ldr x17, pc+24 (addr 0x0000ffff5820f0c0)    ;; lazy deoptimization bailout 0
0xffff5820f0ac   300  add x17, x17, x16
0xffff5820f0b0   304  br x17
0xffff5820f0b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f0b8   312  d63f03e0       constant
0xffff5820f0bc   316  d503201f       constant
0xffff5820f0c0   320  58006000       constant
0xffff5820f0c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5820f03c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820f01c  code target (STUB)  (0xffff58206820)
0xffff5820f034  code target (STUB)  (0xffff58206260)
0xffff5820f040  code target (STUB)  (0xffff582068e0)
0xffff5820f054  constant pool (size 36)
0xffff5820f0a8  runtime entry
0xffff5820f0b4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4535
type = NORMAL
name = BinaryOpICStub(ADD:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff5820ef80     0  mov x2, x0
0xffff5820ef84     4  tbnz w2, #0, #+0xf4 (addr 0xffff5820f078)
0xffff5820ef88     8  tbz w1, #0, #+0x34 (addr 0xffff5820efbc)
0xffff5820ef8c    12  ldur x16, [x1, #-1]
0xffff5820ef90    16  ldr x17, [x26, #120]
0xffff5820ef94    20  cmp x16, x17
0xffff5820ef98    24  b.ne #+0xc (addr 0xffff5820efa4)
0xffff5820ef9c    28  ldur d0, [x1, #7]
0xffff5820efa0    32  b #+0x20 (addr 0xffff5820efc0)
0xffff5820efa4    36  ldr x16, [x26, #40]
0xffff5820efa8    40  cmp x1, x16
0xffff5820efac    44  b.ne #+0xdc (addr 0xffff5820f088)
0xffff5820efb0    48  ldr x3, [x26, #928]
0xffff5820efb4    52  ldur d0, [x3, #7]
0xffff5820efb8    56  b #+0x8 (addr 0xffff5820efc0)
0xffff5820efbc    60  scvtf d0, x1, #32
0xffff5820efc0    64  scvtf d1, x2, #32
0xffff5820efc4    68  fadd d0, d0, d1
0xffff5820efc8    72  movz x1, #0x92c0
0xffff5820efcc    76  movk x1, #0x16e7, lsl #16
0xffff5820efd0    80  ldp x2, x0, [x1]
0xffff5820efd4    84  adds x16, x2, #0x10 (16)
0xffff5820efd8    88  ccmp x16, x0, #nzCv, lo
0xffff5820efdc    92  b.hi #+0x20 (addr 0xffff5820effc)
0xffff5820efe0    96  str x16, [x1]
0xffff5820efe4   100  ldr x1, [x26, #120]
0xffff5820efe8   104  str x1, [x2]
0xffff5820efec   108  orr x2, x2, #0x1
0xffff5820eff0   112  stur d0, [x2, #7]
0xffff5820eff4   116  mov x0, x2
0xffff5820eff8   120  ret
0xffff5820effc   124  sub csp, jssp, #0x10 (16)
0xffff5820f000   128  stp fp, lr, [jssp, #-16]!
0xffff5820f004   132  movz fp, #0xa00000000
0xffff5820f008   136  sub csp, jssp, #0x8 (8)
0xffff5820f00c   140  str fp, [jssp, #-8]!
0xffff5820f010   144  add fp, jssp, #0x8 (8)
0xffff5820f014   148  movz x2, #0x0
0xffff5820f018   152  mov x16, lr
0xffff5820f01c   156  ldr x17, pc+68 (addr 0x0000ffff5820f060)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820f020   160  blr x17
0xffff5820f024   164  ldur cp, [fp, #-8]
0xffff5820f028   168  movz x0, #0x0
0xffff5820f02c   172  movz x1, #0x4b48
0xffff5820f030   176  movk x1, #0xe4, lsl #16
0xffff5820f034   180  ldr x16, pc+52 (addr 0x0000ffff5820f068)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820f038   184  blr x16
0xffff5820f03c   188  str x0, [jssp, #16]
0xffff5820f040   192  ldr x16, pc+48 (addr 0x0000ffff5820f070)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820f044   196  blr x16
0xffff5820f048   200  ldr lr, [jssp, #16]
0xffff5820f04c   204  ldp xzr, fp, [jssp], #24
0xffff5820f050   208  b #-0x60 (addr 0xffff5820eff0)
0xffff5820f054   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5820f058   216  d63f03e0       constant
0xffff5820f05c   220  d503201f       constant
0xffff5820f060   224  58206820       constant
0xffff5820f064   228  0000ffff       constant
0xffff5820f068   232  58206260       constant
0xffff5820f06c   236  0000ffff       constant
0xffff5820f070   240  582068e0       constant
0xffff5820f074   244  0000ffff       constant
0xffff5820f078   248  movz x16, #0x0
0xffff5820f07c   252  sub csp, jssp, #0x10 (16)
0xffff5820f080   256  stp fp, lr, [jssp, #-16]!
0xffff5820f084   260  bl #+0x14 (addr 0xffff5820f098)
0xffff5820f088   264  movz x16, #0x8
0xffff5820f08c   268  sub csp, jssp, #0x10 (16)
0xffff5820f090   272  stp fp, lr, [jssp, #-16]!
0xffff5820f094   276  bl #+0x4 (addr 0xffff5820f098)
0xffff5820f098   280  movz x17, #0xa00000000
0xffff5820f09c   284  sub csp, jssp, #0x10 (16)
0xffff5820f0a0   288  stp x17, cp, [jssp, #-16]!
0xffff5820f0a4   292  add fp, jssp, #0x10 (16)
0xffff5820f0a8   296  ldr x17, pc+24 (addr 0x0000ffff5820f0c0)    ;; lazy deoptimization bailout 0
0xffff5820f0ac   300  add x17, x17, x16
0xffff5820f0b0   304  br x17
0xffff5820f0b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f0b8   312  d63f03e0       constant
0xffff5820f0bc   316  d503201f       constant
0xffff5820f0c0   320  58006000       constant
0xffff5820f0c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5820f03c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820f01c  code target (STUB)  (0xffff58206820)
0xffff5820f034  code target (STUB)  (0xffff58206260)
0xffff5820f040  code target (STUB)  (0xffff582068e0)
0xffff5820f054  constant pool (size 36)
0xffff5820f0a8  runtime entry
0xffff5820f0b4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6583
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff5820f140     0  tbz w1, #0, #+0x34 (addr 0xffff5820f174)
0xffff5820f144     4  ldur x16, [x1, #-1]
0xffff5820f148     8  ldr x17, [x26, #120]
0xffff5820f14c    12  cmp x16, x17
0xffff5820f150    16  b.ne #+0xc (addr 0xffff5820f15c)
0xffff5820f154    20  ldur d0, [x1, #7]
0xffff5820f158    24  b #+0x20 (addr 0xffff5820f178)
0xffff5820f15c    28  ldr x16, [x26, #40]
0xffff5820f160    32  cmp x1, x16
0xffff5820f164    36  b.ne #+0xfc (addr 0xffff5820f260)
0xffff5820f168    40  ldr x2, [x26, #928]
0xffff5820f16c    44  ldur d0, [x2, #7]
0xffff5820f170    48  b #+0x8 (addr 0xffff5820f178)
0xffff5820f174    52  scvtf d0, x1, #32
0xffff5820f178    56  tbz w0, #0, #+0x34 (addr 0xffff5820f1ac)
0xffff5820f17c    60  ldur x16, [x0, #-1]
0xffff5820f180    64  ldr x17, [x26, #120]
0xffff5820f184    68  cmp x16, x17
0xffff5820f188    72  b.ne #+0xc (addr 0xffff5820f194)
0xffff5820f18c    76  ldur d1, [x0, #7]
0xffff5820f190    80  b #+0x20 (addr 0xffff5820f1b0)
0xffff5820f194    84  ldr x16, [x26, #40]
0xffff5820f198    88  cmp x0, x16
0xffff5820f19c    92  b.ne #+0xd4 (addr 0xffff5820f270)
0xffff5820f1a0    96  ldr x2, [x26, #928]
0xffff5820f1a4   100  ldur d1, [x2, #7]
0xffff5820f1a8   104  b #+0x8 (addr 0xffff5820f1b0)
0xffff5820f1ac   108  scvtf d1, x0, #32
0xffff5820f1b0   112  fadd d0, d0, d1
0xffff5820f1b4   116  movz x1, #0x92c0
0xffff5820f1b8   120  movk x1, #0x16e7, lsl #16
0xffff5820f1bc   124  ldp x2, x0, [x1]
0xffff5820f1c0   128  adds x16, x2, #0x10 (16)
0xffff5820f1c4   132  ccmp x16, x0, #nzCv, lo
0xffff5820f1c8   136  b.hi #+0x20 (addr 0xffff5820f1e8)
0xffff5820f1cc   140  str x16, [x1]
0xffff5820f1d0   144  ldr x1, [x26, #120]
0xffff5820f1d4   148  str x1, [x2]
0xffff5820f1d8   152  orr x2, x2, #0x1
0xffff5820f1dc   156  stur d0, [x2, #7]
0xffff5820f1e0   160  mov x0, x2
0xffff5820f1e4   164  ret
0xffff5820f1e8   168  sub csp, jssp, #0x10 (16)
0xffff5820f1ec   172  stp fp, lr, [jssp, #-16]!
0xffff5820f1f0   176  movz fp, #0xa00000000
0xffff5820f1f4   180  sub csp, jssp, #0x8 (8)
0xffff5820f1f8   184  str fp, [jssp, #-8]!
0xffff5820f1fc   188  add fp, jssp, #0x8 (8)
0xffff5820f200   192  movz x2, #0x0
0xffff5820f204   196  mov x16, lr
0xffff5820f208   200  ldr x17, pc+64 (addr 0x0000ffff5820f248)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820f20c   204  blr x17
0xffff5820f210   208  ldur cp, [fp, #-8]
0xffff5820f214   212  movz x0, #0x0
0xffff5820f218   216  movz x1, #0x4b48
0xffff5820f21c   220  movk x1, #0xe4, lsl #16
0xffff5820f220   224  ldr x16, pc+48 (addr 0x0000ffff5820f250)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820f224   228  blr x16
0xffff5820f228   232  str x0, [jssp, #16]
0xffff5820f22c   236  ldr x16, pc+44 (addr 0x0000ffff5820f258)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820f230   240  blr x16
0xffff5820f234   244  ldr lr, [jssp, #16]
0xffff5820f238   248  ldp xzr, fp, [jssp], #24
0xffff5820f23c   252  b #-0x60 (addr 0xffff5820f1dc)
0xffff5820f240   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820f244   260  d63f03e0       constant
0xffff5820f248   264  58206820       constant
0xffff5820f24c   268  0000ffff       constant
0xffff5820f250   272  58206260       constant
0xffff5820f254   276  0000ffff       constant
0xffff5820f258   280  582068e0       constant
0xffff5820f25c   284  0000ffff       constant
0xffff5820f260   288  movz x16, #0x0
0xffff5820f264   292  sub csp, jssp, #0x10 (16)
0xffff5820f268   296  stp fp, lr, [jssp, #-16]!
0xffff5820f26c   300  bl #+0x14 (addr 0xffff5820f280)
0xffff5820f270   304  movz x16, #0x8
0xffff5820f274   308  sub csp, jssp, #0x10 (16)
0xffff5820f278   312  stp fp, lr, [jssp, #-16]!
0xffff5820f27c   316  bl #+0x4 (addr 0xffff5820f280)
0xffff5820f280   320  movz x17, #0xa00000000
0xffff5820f284   324  sub csp, jssp, #0x10 (16)
0xffff5820f288   328  stp x17, cp, [jssp, #-16]!
0xffff5820f28c   332  add fp, jssp, #0x10 (16)
0xffff5820f290   336  ldr x17, pc+24 (addr 0x0000ffff5820f2a8)    ;; lazy deoptimization bailout 0
0xffff5820f294   340  add x17, x17, x16
0xffff5820f298   344  br x17
0xffff5820f29c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f2a0   352  d63f03e0       constant
0xffff5820f2a4   356  d503201f       constant
0xffff5820f2a8   360  58006000       constant
0xffff5820f2ac   364  0000ffff       constant


Safepoints (size = 21)
0xffff5820f228   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820f208  code target (STUB)  (0xffff58206820)
0xffff5820f220  code target (STUB)  (0xffff58206260)
0xffff5820f22c  code target (STUB)  (0xffff582068e0)
0xffff5820f240  constant pool (size 32)
0xffff5820f290  runtime entry
0xffff5820f29c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6583
type = NORMAL
name = BinaryOpICStub(ADD:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff5820f140     0  tbz w1, #0, #+0x34 (addr 0xffff5820f174)
0xffff5820f144     4  ldur x16, [x1, #-1]
0xffff5820f148     8  ldr x17, [x26, #120]
0xffff5820f14c    12  cmp x16, x17
0xffff5820f150    16  b.ne #+0xc (addr 0xffff5820f15c)
0xffff5820f154    20  ldur d0, [x1, #7]
0xffff5820f158    24  b #+0x20 (addr 0xffff5820f178)
0xffff5820f15c    28  ldr x16, [x26, #40]
0xffff5820f160    32  cmp x1, x16
0xffff5820f164    36  b.ne #+0xfc (addr 0xffff5820f260)
0xffff5820f168    40  ldr x2, [x26, #928]
0xffff5820f16c    44  ldur d0, [x2, #7]
0xffff5820f170    48  b #+0x8 (addr 0xffff5820f178)
0xffff5820f174    52  scvtf d0, x1, #32
0xffff5820f178    56  tbz w0, #0, #+0x34 (addr 0xffff5820f1ac)
0xffff5820f17c    60  ldur x16, [x0, #-1]
0xffff5820f180    64  ldr x17, [x26, #120]
0xffff5820f184    68  cmp x16, x17
0xffff5820f188    72  b.ne #+0xc (addr 0xffff5820f194)
0xffff5820f18c    76  ldur d1, [x0, #7]
0xffff5820f190    80  b #+0x20 (addr 0xffff5820f1b0)
0xffff5820f194    84  ldr x16, [x26, #40]
0xffff5820f198    88  cmp x0, x16
0xffff5820f19c    92  b.ne #+0xd4 (addr 0xffff5820f270)
0xffff5820f1a0    96  ldr x2, [x26, #928]
0xffff5820f1a4   100  ldur d1, [x2, #7]
0xffff5820f1a8   104  b #+0x8 (addr 0xffff5820f1b0)
0xffff5820f1ac   108  scvtf d1, x0, #32
0xffff5820f1b0   112  fadd d0, d0, d1
0xffff5820f1b4   116  movz x1, #0x92c0
0xffff5820f1b8   120  movk x1, #0x16e7, lsl #16
0xffff5820f1bc   124  ldp x2, x0, [x1]
0xffff5820f1c0   128  adds x16, x2, #0x10 (16)
0xffff5820f1c4   132  ccmp x16, x0, #nzCv, lo
0xffff5820f1c8   136  b.hi #+0x20 (addr 0xffff5820f1e8)
0xffff5820f1cc   140  str x16, [x1]
0xffff5820f1d0   144  ldr x1, [x26, #120]
0xffff5820f1d4   148  str x1, [x2]
0xffff5820f1d8   152  orr x2, x2, #0x1
0xffff5820f1dc   156  stur d0, [x2, #7]
0xffff5820f1e0   160  mov x0, x2
0xffff5820f1e4   164  ret
0xffff5820f1e8   168  sub csp, jssp, #0x10 (16)
0xffff5820f1ec   172  stp fp, lr, [jssp, #-16]!
0xffff5820f1f0   176  movz fp, #0xa00000000
0xffff5820f1f4   180  sub csp, jssp, #0x8 (8)
0xffff5820f1f8   184  str fp, [jssp, #-8]!
0xffff5820f1fc   188  add fp, jssp, #0x8 (8)
0xffff5820f200   192  movz x2, #0x0
0xffff5820f204   196  mov x16, lr
0xffff5820f208   200  ldr x17, pc+64 (addr 0x0000ffff5820f248)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820f20c   204  blr x17
0xffff5820f210   208  ldur cp, [fp, #-8]
0xffff5820f214   212  movz x0, #0x0
0xffff5820f218   216  movz x1, #0x4b48
0xffff5820f21c   220  movk x1, #0xe4, lsl #16
0xffff5820f220   224  ldr x16, pc+48 (addr 0x0000ffff5820f250)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820f224   228  blr x16
0xffff5820f228   232  str x0, [jssp, #16]
0xffff5820f22c   236  ldr x16, pc+44 (addr 0x0000ffff5820f258)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820f230   240  blr x16
0xffff5820f234   244  ldr lr, [jssp, #16]
0xffff5820f238   248  ldp xzr, fp, [jssp], #24
0xffff5820f23c   252  b #-0x60 (addr 0xffff5820f1dc)
0xffff5820f240   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820f244   260  d63f03e0       constant
0xffff5820f248   264  58206820       constant
0xffff5820f24c   268  0000ffff       constant
0xffff5820f250   272  58206260       constant
0xffff5820f254   276  0000ffff       constant
0xffff5820f258   280  582068e0       constant
0xffff5820f25c   284  0000ffff       constant
0xffff5820f260   288  movz x16, #0x0
0xffff5820f264   292  sub csp, jssp, #0x10 (16)
0xffff5820f268   296  stp fp, lr, [jssp, #-16]!
0xffff5820f26c   300  bl #+0x14 (addr 0xffff5820f280)
0xffff5820f270   304  movz x16, #0x8
0xffff5820f274   308  sub csp, jssp, #0x10 (16)
0xffff5820f278   312  stp fp, lr, [jssp, #-16]!
0xffff5820f27c   316  bl #+0x4 (addr 0xffff5820f280)
0xffff5820f280   320  movz x17, #0xa00000000
0xffff5820f284   324  sub csp, jssp, #0x10 (16)
0xffff5820f288   328  stp x17, cp, [jssp, #-16]!
0xffff5820f28c   332  add fp, jssp, #0x10 (16)
0xffff5820f290   336  ldr x17, pc+24 (addr 0x0000ffff5820f2a8)    ;; lazy deoptimization bailout 0
0xffff5820f294   340  add x17, x17, x16
0xffff5820f298   344  br x17
0xffff5820f29c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f2a0   352  d63f03e0       constant
0xffff5820f2a4   356  d503201f       constant
0xffff5820f2a8   360  58006000       constant
0xffff5820f2ac   364  0000ffff       constant


Safepoints (size = 21)
0xffff5820f228   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820f208  code target (STUB)  (0xffff58206820)
0xffff5820f220  code target (STUB)  (0xffff58206260)
0xffff5820f22c  code target (STUB)  (0xffff582068e0)
0xffff5820f240  constant pool (size 32)
0xffff5820f290  runtime entry
0xffff5820f29c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2487
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff5820f340     0  mov x2, x0
0xffff5820f344     4  tbnz w2, #0, #+0xf4 (addr 0xffff5820f438)
0xffff5820f348     8  tbz w1, #0, #+0x34 (addr 0xffff5820f37c)
0xffff5820f34c    12  ldur x16, [x1, #-1]
0xffff5820f350    16  ldr x17, [x26, #120]
0xffff5820f354    20  cmp x16, x17
0xffff5820f358    24  b.ne #+0xc (addr 0xffff5820f364)
0xffff5820f35c    28  ldur d0, [x1, #7]
0xffff5820f360    32  b #+0x20 (addr 0xffff5820f380)
0xffff5820f364    36  ldr x16, [x26, #40]
0xffff5820f368    40  cmp x1, x16
0xffff5820f36c    44  b.ne #+0xdc (addr 0xffff5820f448)
0xffff5820f370    48  ldr x3, [x26, #928]
0xffff5820f374    52  ldur d0, [x3, #7]
0xffff5820f378    56  b #+0x8 (addr 0xffff5820f380)
0xffff5820f37c    60  scvtf d0, x1, #32
0xffff5820f380    64  scvtf d1, x2, #32
0xffff5820f384    68  fadd d0, d0, d1
0xffff5820f388    72  movz x1, #0x92c0
0xffff5820f38c    76  movk x1, #0x16e7, lsl #16
0xffff5820f390    80  ldp x2, x0, [x1]
0xffff5820f394    84  adds x16, x2, #0x10 (16)
0xffff5820f398    88  ccmp x16, x0, #nzCv, lo
0xffff5820f39c    92  b.hi #+0x20 (addr 0xffff5820f3bc)
0xffff5820f3a0    96  str x16, [x1]
0xffff5820f3a4   100  ldr x1, [x26, #120]
0xffff5820f3a8   104  str x1, [x2]
0xffff5820f3ac   108  orr x2, x2, #0x1
0xffff5820f3b0   112  stur d0, [x2, #7]
0xffff5820f3b4   116  mov x0, x2
0xffff5820f3b8   120  ret
0xffff5820f3bc   124  sub csp, jssp, #0x10 (16)
0xffff5820f3c0   128  stp fp, lr, [jssp, #-16]!
0xffff5820f3c4   132  movz fp, #0xa00000000
0xffff5820f3c8   136  sub csp, jssp, #0x8 (8)
0xffff5820f3cc   140  str fp, [jssp, #-8]!
0xffff5820f3d0   144  add fp, jssp, #0x8 (8)
0xffff5820f3d4   148  movz x2, #0x0
0xffff5820f3d8   152  mov x16, lr
0xffff5820f3dc   156  ldr x17, pc+68 (addr 0x0000ffff5820f420)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820f3e0   160  blr x17
0xffff5820f3e4   164  ldur cp, [fp, #-8]
0xffff5820f3e8   168  movz x0, #0x0
0xffff5820f3ec   172  movz x1, #0x4b48
0xffff5820f3f0   176  movk x1, #0xe4, lsl #16
0xffff5820f3f4   180  ldr x16, pc+52 (addr 0x0000ffff5820f428)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820f3f8   184  blr x16
0xffff5820f3fc   188  str x0, [jssp, #16]
0xffff5820f400   192  ldr x16, pc+48 (addr 0x0000ffff5820f430)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820f404   196  blr x16
0xffff5820f408   200  ldr lr, [jssp, #16]
0xffff5820f40c   204  ldp xzr, fp, [jssp], #24
0xffff5820f410   208  b #-0x60 (addr 0xffff5820f3b0)
0xffff5820f414   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5820f418   216  d63f03e0       constant
0xffff5820f41c   220  d503201f       constant
0xffff5820f420   224  58206820       constant
0xffff5820f424   228  0000ffff       constant
0xffff5820f428   232  58206260       constant
0xffff5820f42c   236  0000ffff       constant
0xffff5820f430   240  582068e0       constant
0xffff5820f434   244  0000ffff       constant
0xffff5820f438   248  movz x16, #0x0
0xffff5820f43c   252  sub csp, jssp, #0x10 (16)
0xffff5820f440   256  stp fp, lr, [jssp, #-16]!
0xffff5820f444   260  bl #+0x14 (addr 0xffff5820f458)
0xffff5820f448   264  movz x16, #0x8
0xffff5820f44c   268  sub csp, jssp, #0x10 (16)
0xffff5820f450   272  stp fp, lr, [jssp, #-16]!
0xffff5820f454   276  bl #+0x4 (addr 0xffff5820f458)
0xffff5820f458   280  movz x17, #0xa00000000
0xffff5820f45c   284  sub csp, jssp, #0x10 (16)
0xffff5820f460   288  stp x17, cp, [jssp, #-16]!
0xffff5820f464   292  add fp, jssp, #0x10 (16)
0xffff5820f468   296  ldr x17, pc+24 (addr 0x0000ffff5820f480)    ;; lazy deoptimization bailout 0
0xffff5820f46c   300  add x17, x17, x16
0xffff5820f470   304  br x17
0xffff5820f474   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f478   312  d63f03e0       constant
0xffff5820f47c   316  d503201f       constant
0xffff5820f480   320  58006000       constant
0xffff5820f484   324  0000ffff       constant


Safepoints (size = 21)
0xffff5820f3fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820f3dc  code target (STUB)  (0xffff58206820)
0xffff5820f3f4  code target (STUB)  (0xffff58206260)
0xffff5820f400  code target (STUB)  (0xffff582068e0)
0xffff5820f414  constant pool (size 36)
0xffff5820f468  runtime entry
0xffff5820f474  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2487
type = NORMAL
name = BinaryOpICStub(ADD:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff5820f340     0  mov x2, x0
0xffff5820f344     4  tbnz w2, #0, #+0xf4 (addr 0xffff5820f438)
0xffff5820f348     8  tbz w1, #0, #+0x34 (addr 0xffff5820f37c)
0xffff5820f34c    12  ldur x16, [x1, #-1]
0xffff5820f350    16  ldr x17, [x26, #120]
0xffff5820f354    20  cmp x16, x17
0xffff5820f358    24  b.ne #+0xc (addr 0xffff5820f364)
0xffff5820f35c    28  ldur d0, [x1, #7]
0xffff5820f360    32  b #+0x20 (addr 0xffff5820f380)
0xffff5820f364    36  ldr x16, [x26, #40]
0xffff5820f368    40  cmp x1, x16
0xffff5820f36c    44  b.ne #+0xdc (addr 0xffff5820f448)
0xffff5820f370    48  ldr x3, [x26, #928]
0xffff5820f374    52  ldur d0, [x3, #7]
0xffff5820f378    56  b #+0x8 (addr 0xffff5820f380)
0xffff5820f37c    60  scvtf d0, x1, #32
0xffff5820f380    64  scvtf d1, x2, #32
0xffff5820f384    68  fadd d0, d0, d1
0xffff5820f388    72  movz x1, #0x92c0
0xffff5820f38c    76  movk x1, #0x16e7, lsl #16
0xffff5820f390    80  ldp x2, x0, [x1]
0xffff5820f394    84  adds x16, x2, #0x10 (16)
0xffff5820f398    88  ccmp x16, x0, #nzCv, lo
0xffff5820f39c    92  b.hi #+0x20 (addr 0xffff5820f3bc)
0xffff5820f3a0    96  str x16, [x1]
0xffff5820f3a4   100  ldr x1, [x26, #120]
0xffff5820f3a8   104  str x1, [x2]
0xffff5820f3ac   108  orr x2, x2, #0x1
0xffff5820f3b0   112  stur d0, [x2, #7]
0xffff5820f3b4   116  mov x0, x2
0xffff5820f3b8   120  ret
0xffff5820f3bc   124  sub csp, jssp, #0x10 (16)
0xffff5820f3c0   128  stp fp, lr, [jssp, #-16]!
0xffff5820f3c4   132  movz fp, #0xa00000000
0xffff5820f3c8   136  sub csp, jssp, #0x8 (8)
0xffff5820f3cc   140  str fp, [jssp, #-8]!
0xffff5820f3d0   144  add fp, jssp, #0x8 (8)
0xffff5820f3d4   148  movz x2, #0x0
0xffff5820f3d8   152  mov x16, lr
0xffff5820f3dc   156  ldr x17, pc+68 (addr 0x0000ffff5820f420)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820f3e0   160  blr x17
0xffff5820f3e4   164  ldur cp, [fp, #-8]
0xffff5820f3e8   168  movz x0, #0x0
0xffff5820f3ec   172  movz x1, #0x4b48
0xffff5820f3f0   176  movk x1, #0xe4, lsl #16
0xffff5820f3f4   180  ldr x16, pc+52 (addr 0x0000ffff5820f428)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820f3f8   184  blr x16
0xffff5820f3fc   188  str x0, [jssp, #16]
0xffff5820f400   192  ldr x16, pc+48 (addr 0x0000ffff5820f430)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820f404   196  blr x16
0xffff5820f408   200  ldr lr, [jssp, #16]
0xffff5820f40c   204  ldp xzr, fp, [jssp], #24
0xffff5820f410   208  b #-0x60 (addr 0xffff5820f3b0)
0xffff5820f414   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5820f418   216  d63f03e0       constant
0xffff5820f41c   220  d503201f       constant
0xffff5820f420   224  58206820       constant
0xffff5820f424   228  0000ffff       constant
0xffff5820f428   232  58206260       constant
0xffff5820f42c   236  0000ffff       constant
0xffff5820f430   240  582068e0       constant
0xffff5820f434   244  0000ffff       constant
0xffff5820f438   248  movz x16, #0x0
0xffff5820f43c   252  sub csp, jssp, #0x10 (16)
0xffff5820f440   256  stp fp, lr, [jssp, #-16]!
0xffff5820f444   260  bl #+0x14 (addr 0xffff5820f458)
0xffff5820f448   264  movz x16, #0x8
0xffff5820f44c   268  sub csp, jssp, #0x10 (16)
0xffff5820f450   272  stp fp, lr, [jssp, #-16]!
0xffff5820f454   276  bl #+0x4 (addr 0xffff5820f458)
0xffff5820f458   280  movz x17, #0xa00000000
0xffff5820f45c   284  sub csp, jssp, #0x10 (16)
0xffff5820f460   288  stp x17, cp, [jssp, #-16]!
0xffff5820f464   292  add fp, jssp, #0x10 (16)
0xffff5820f468   296  ldr x17, pc+24 (addr 0x0000ffff5820f480)    ;; lazy deoptimization bailout 0
0xffff5820f46c   300  add x17, x17, x16
0xffff5820f470   304  br x17
0xffff5820f474   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f478   312  d63f03e0       constant
0xffff5820f47c   316  d503201f       constant
0xffff5820f480   320  58006000       constant
0xffff5820f484   324  0000ffff       constant


Safepoints (size = 21)
0xffff5820f3fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820f3dc  code target (STUB)  (0xffff58206820)
0xffff5820f3f4  code target (STUB)  (0xffff58206260)
0xffff5820f400  code target (STUB)  (0xffff582068e0)
0xffff5820f414  constant pool (size 36)
0xffff5820f468  runtime entry
0xffff5820f474  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4263
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff5820f500     0  mov x2, x1
0xffff5820f504     4  tbnz w2, #0, #+0x1c (addr 0xffff5820f520)
0xffff5820f508     8  mov x3, x0
0xffff5820f50c    12  tbnz w3, #0, #+0x24 (addr 0xffff5820f530)
0xffff5820f510    16  adds x2, x3, x2
0xffff5820f514    20  b.vs #+0x2c (addr 0xffff5820f540)
0xffff5820f518    24  mov x0, x2
0xffff5820f51c    28  ret
0xffff5820f520    32  movz x16, #0x0
0xffff5820f524    36  sub csp, jssp, #0x10 (16)
0xffff5820f528    40  stp fp, lr, [jssp, #-16]!
0xffff5820f52c    44  bl #+0x24 (addr 0xffff5820f550)
0xffff5820f530    48  movz x16, #0x8
0xffff5820f534    52  sub csp, jssp, #0x10 (16)
0xffff5820f538    56  stp fp, lr, [jssp, #-16]!
0xffff5820f53c    60  bl #+0x14 (addr 0xffff5820f550)
0xffff5820f540    64  movz x16, #0x10
0xffff5820f544    68  sub csp, jssp, #0x10 (16)
0xffff5820f548    72  stp fp, lr, [jssp, #-16]!
0xffff5820f54c    76  bl #+0x4 (addr 0xffff5820f550)
0xffff5820f550    80  movz x17, #0xa00000000
0xffff5820f554    84  sub csp, jssp, #0x10 (16)
0xffff5820f558    88  stp x17, cp, [jssp, #-16]!
0xffff5820f55c    92  add fp, jssp, #0x10 (16)
0xffff5820f560    96  ldr x17, pc+24 (addr 0x0000ffff5820f578)    ;; lazy deoptimization bailout 0
0xffff5820f564   100  add x17, x17, x16
0xffff5820f568   104  br x17
0xffff5820f56c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f570   112  d63f03e0       constant
0xffff5820f574   116  d503201f       constant
0xffff5820f578   120  58006000       constant
0xffff5820f57c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820f560  runtime entry
0xffff5820f56c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4263
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff5820f500     0  mov x2, x1
0xffff5820f504     4  tbnz w2, #0, #+0x1c (addr 0xffff5820f520)
0xffff5820f508     8  mov x3, x0
0xffff5820f50c    12  tbnz w3, #0, #+0x24 (addr 0xffff5820f530)
0xffff5820f510    16  adds x2, x3, x2
0xffff5820f514    20  b.vs #+0x2c (addr 0xffff5820f540)
0xffff5820f518    24  mov x0, x2
0xffff5820f51c    28  ret
0xffff5820f520    32  movz x16, #0x0
0xffff5820f524    36  sub csp, jssp, #0x10 (16)
0xffff5820f528    40  stp fp, lr, [jssp, #-16]!
0xffff5820f52c    44  bl #+0x24 (addr 0xffff5820f550)
0xffff5820f530    48  movz x16, #0x8
0xffff5820f534    52  sub csp, jssp, #0x10 (16)
0xffff5820f538    56  stp fp, lr, [jssp, #-16]!
0xffff5820f53c    60  bl #+0x14 (addr 0xffff5820f550)
0xffff5820f540    64  movz x16, #0x10
0xffff5820f544    68  sub csp, jssp, #0x10 (16)
0xffff5820f548    72  stp fp, lr, [jssp, #-16]!
0xffff5820f54c    76  bl #+0x4 (addr 0xffff5820f550)
0xffff5820f550    80  movz x17, #0xa00000000
0xffff5820f554    84  sub csp, jssp, #0x10 (16)
0xffff5820f558    88  stp x17, cp, [jssp, #-16]!
0xffff5820f55c    92  add fp, jssp, #0x10 (16)
0xffff5820f560    96  ldr x17, pc+24 (addr 0x0000ffff5820f578)    ;; lazy deoptimization bailout 0
0xffff5820f564   100  add x17, x17, x16
0xffff5820f568   104  br x17
0xffff5820f56c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f570   112  d63f03e0       constant
0xffff5820f574   116  d503201f       constant
0xffff5820f578   120  58006000       constant
0xffff5820f57c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820f560  runtime entry
0xffff5820f56c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4279
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff5820f600     0  mov x2, x1
0xffff5820f604     4  tbnz w2, #0, #+0xc4 (addr 0xffff5820f6c8)
0xffff5820f608     8  mov x3, x0
0xffff5820f60c    12  tbnz w3, #0, #+0xcc (addr 0xffff5820f6d8)
0xffff5820f610    16  scvtf d0, x2, #32
0xffff5820f614    20  scvtf d1, x3, #32
0xffff5820f618    24  fadd d0, d0, d1
0xffff5820f61c    28  movz x1, #0x92c0
0xffff5820f620    32  movk x1, #0x16e7, lsl #16
0xffff5820f624    36  ldp x2, x0, [x1]
0xffff5820f628    40  adds x16, x2, #0x10 (16)
0xffff5820f62c    44  ccmp x16, x0, #nzCv, lo
0xffff5820f630    48  b.hi #+0x20 (addr 0xffff5820f650)
0xffff5820f634    52  str x16, [x1]
0xffff5820f638    56  ldr x1, [x26, #120]
0xffff5820f63c    60  str x1, [x2]
0xffff5820f640    64  orr x2, x2, #0x1
0xffff5820f644    68  stur d0, [x2, #7]
0xffff5820f648    72  mov x0, x2
0xffff5820f64c    76  ret
0xffff5820f650    80  sub csp, jssp, #0x10 (16)
0xffff5820f654    84  stp fp, lr, [jssp, #-16]!
0xffff5820f658    88  movz fp, #0xa00000000
0xffff5820f65c    92  sub csp, jssp, #0x8 (8)
0xffff5820f660    96  str fp, [jssp, #-8]!
0xffff5820f664   100  add fp, jssp, #0x8 (8)
0xffff5820f668   104  movz x2, #0x0
0xffff5820f66c   108  mov x16, lr
0xffff5820f670   112  ldr x17, pc+64 (addr 0x0000ffff5820f6b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820f674   116  blr x17
0xffff5820f678   120  ldur cp, [fp, #-8]
0xffff5820f67c   124  movz x0, #0x0
0xffff5820f680   128  movz x1, #0x4b48
0xffff5820f684   132  movk x1, #0xe4, lsl #16
0xffff5820f688   136  ldr x16, pc+48 (addr 0x0000ffff5820f6b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820f68c   140  blr x16
0xffff5820f690   144  str x0, [jssp, #16]
0xffff5820f694   148  ldr x16, pc+44 (addr 0x0000ffff5820f6c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820f698   152  blr x16
0xffff5820f69c   156  ldr lr, [jssp, #16]
0xffff5820f6a0   160  ldp xzr, fp, [jssp], #24
0xffff5820f6a4   164  b #-0x60 (addr 0xffff5820f644)
0xffff5820f6a8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820f6ac   172  d63f03e0       constant
0xffff5820f6b0   176  58206820       constant
0xffff5820f6b4   180  0000ffff       constant
0xffff5820f6b8   184  58206260       constant
0xffff5820f6bc   188  0000ffff       constant
0xffff5820f6c0   192  582068e0       constant
0xffff5820f6c4   196  0000ffff       constant
0xffff5820f6c8   200  movz x16, #0x0
0xffff5820f6cc   204  sub csp, jssp, #0x10 (16)
0xffff5820f6d0   208  stp fp, lr, [jssp, #-16]!
0xffff5820f6d4   212  bl #+0x14 (addr 0xffff5820f6e8)
0xffff5820f6d8   216  movz x16, #0x8
0xffff5820f6dc   220  sub csp, jssp, #0x10 (16)
0xffff5820f6e0   224  stp fp, lr, [jssp, #-16]!
0xffff5820f6e4   228  bl #+0x4 (addr 0xffff5820f6e8)
0xffff5820f6e8   232  movz x17, #0xa00000000
0xffff5820f6ec   236  sub csp, jssp, #0x10 (16)
0xffff5820f6f0   240  stp x17, cp, [jssp, #-16]!
0xffff5820f6f4   244  add fp, jssp, #0x10 (16)
0xffff5820f6f8   248  ldr x17, pc+24 (addr 0x0000ffff5820f710)    ;; lazy deoptimization bailout 0
0xffff5820f6fc   252  add x17, x17, x16
0xffff5820f700   256  br x17
0xffff5820f704   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f708   264  d63f03e0       constant
0xffff5820f70c   268  d503201f       constant
0xffff5820f710   272  58006000       constant
0xffff5820f714   276  0000ffff       constant


Safepoints (size = 21)
0xffff5820f690   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820f670  code target (STUB)  (0xffff58206820)
0xffff5820f688  code target (STUB)  (0xffff58206260)
0xffff5820f694  code target (STUB)  (0xffff582068e0)
0xffff5820f6a8  constant pool (size 32)
0xffff5820f6f8  runtime entry
0xffff5820f704  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4279
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff5820f600     0  mov x2, x1
0xffff5820f604     4  tbnz w2, #0, #+0xc4 (addr 0xffff5820f6c8)
0xffff5820f608     8  mov x3, x0
0xffff5820f60c    12  tbnz w3, #0, #+0xcc (addr 0xffff5820f6d8)
0xffff5820f610    16  scvtf d0, x2, #32
0xffff5820f614    20  scvtf d1, x3, #32
0xffff5820f618    24  fadd d0, d0, d1
0xffff5820f61c    28  movz x1, #0x92c0
0xffff5820f620    32  movk x1, #0x16e7, lsl #16
0xffff5820f624    36  ldp x2, x0, [x1]
0xffff5820f628    40  adds x16, x2, #0x10 (16)
0xffff5820f62c    44  ccmp x16, x0, #nzCv, lo
0xffff5820f630    48  b.hi #+0x20 (addr 0xffff5820f650)
0xffff5820f634    52  str x16, [x1]
0xffff5820f638    56  ldr x1, [x26, #120]
0xffff5820f63c    60  str x1, [x2]
0xffff5820f640    64  orr x2, x2, #0x1
0xffff5820f644    68  stur d0, [x2, #7]
0xffff5820f648    72  mov x0, x2
0xffff5820f64c    76  ret
0xffff5820f650    80  sub csp, jssp, #0x10 (16)
0xffff5820f654    84  stp fp, lr, [jssp, #-16]!
0xffff5820f658    88  movz fp, #0xa00000000
0xffff5820f65c    92  sub csp, jssp, #0x8 (8)
0xffff5820f660    96  str fp, [jssp, #-8]!
0xffff5820f664   100  add fp, jssp, #0x8 (8)
0xffff5820f668   104  movz x2, #0x0
0xffff5820f66c   108  mov x16, lr
0xffff5820f670   112  ldr x17, pc+64 (addr 0x0000ffff5820f6b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820f674   116  blr x17
0xffff5820f678   120  ldur cp, [fp, #-8]
0xffff5820f67c   124  movz x0, #0x0
0xffff5820f680   128  movz x1, #0x4b48
0xffff5820f684   132  movk x1, #0xe4, lsl #16
0xffff5820f688   136  ldr x16, pc+48 (addr 0x0000ffff5820f6b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820f68c   140  blr x16
0xffff5820f690   144  str x0, [jssp, #16]
0xffff5820f694   148  ldr x16, pc+44 (addr 0x0000ffff5820f6c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820f698   152  blr x16
0xffff5820f69c   156  ldr lr, [jssp, #16]
0xffff5820f6a0   160  ldp xzr, fp, [jssp], #24
0xffff5820f6a4   164  b #-0x60 (addr 0xffff5820f644)
0xffff5820f6a8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5820f6ac   172  d63f03e0       constant
0xffff5820f6b0   176  58206820       constant
0xffff5820f6b4   180  0000ffff       constant
0xffff5820f6b8   184  58206260       constant
0xffff5820f6bc   188  0000ffff       constant
0xffff5820f6c0   192  582068e0       constant
0xffff5820f6c4   196  0000ffff       constant
0xffff5820f6c8   200  movz x16, #0x0
0xffff5820f6cc   204  sub csp, jssp, #0x10 (16)
0xffff5820f6d0   208  stp fp, lr, [jssp, #-16]!
0xffff5820f6d4   212  bl #+0x14 (addr 0xffff5820f6e8)
0xffff5820f6d8   216  movz x16, #0x8
0xffff5820f6dc   220  sub csp, jssp, #0x10 (16)
0xffff5820f6e0   224  stp fp, lr, [jssp, #-16]!
0xffff5820f6e4   228  bl #+0x4 (addr 0xffff5820f6e8)
0xffff5820f6e8   232  movz x17, #0xa00000000
0xffff5820f6ec   236  sub csp, jssp, #0x10 (16)
0xffff5820f6f0   240  stp x17, cp, [jssp, #-16]!
0xffff5820f6f4   244  add fp, jssp, #0x10 (16)
0xffff5820f6f8   248  ldr x17, pc+24 (addr 0x0000ffff5820f710)    ;; lazy deoptimization bailout 0
0xffff5820f6fc   252  add x17, x17, x16
0xffff5820f700   256  br x17
0xffff5820f704   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f708   264  d63f03e0       constant
0xffff5820f70c   268  d503201f       constant
0xffff5820f710   272  58006000       constant
0xffff5820f714   276  0000ffff       constant


Safepoints (size = 21)
0xffff5820f690   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820f670  code target (STUB)  (0xffff58206820)
0xffff5820f688  code target (STUB)  (0xffff58206260)
0xffff5820f694  code target (STUB)  (0xffff582068e0)
0xffff5820f6a8  constant pool (size 32)
0xffff5820f6f8  runtime entry
0xffff5820f704  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6327
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff5820f7a0     0  mov x2, x1
0xffff5820f7a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff5820f898)
0xffff5820f7a8     8  tbz w0, #0, #+0x34 (addr 0xffff5820f7dc)
0xffff5820f7ac    12  ldur x16, [x0, #-1]
0xffff5820f7b0    16  ldr x17, [x26, #120]
0xffff5820f7b4    20  cmp x16, x17
0xffff5820f7b8    24  b.ne #+0xc (addr 0xffff5820f7c4)
0xffff5820f7bc    28  ldur d0, [x0, #7]
0xffff5820f7c0    32  b #+0x20 (addr 0xffff5820f7e0)
0xffff5820f7c4    36  ldr x16, [x26, #40]
0xffff5820f7c8    40  cmp x0, x16
0xffff5820f7cc    44  b.ne #+0xdc (addr 0xffff5820f8a8)
0xffff5820f7d0    48  ldr x3, [x26, #928]
0xffff5820f7d4    52  ldur d0, [x3, #7]
0xffff5820f7d8    56  b #+0x8 (addr 0xffff5820f7e0)
0xffff5820f7dc    60  scvtf d0, x0, #32
0xffff5820f7e0    64  scvtf d1, x2, #32
0xffff5820f7e4    68  fadd d0, d1, d0
0xffff5820f7e8    72  movz x1, #0x92c0
0xffff5820f7ec    76  movk x1, #0x16e7, lsl #16
0xffff5820f7f0    80  ldp x2, x0, [x1]
0xffff5820f7f4    84  adds x16, x2, #0x10 (16)
0xffff5820f7f8    88  ccmp x16, x0, #nzCv, lo
0xffff5820f7fc    92  b.hi #+0x20 (addr 0xffff5820f81c)
0xffff5820f800    96  str x16, [x1]
0xffff5820f804   100  ldr x1, [x26, #120]
0xffff5820f808   104  str x1, [x2]
0xffff5820f80c   108  orr x2, x2, #0x1
0xffff5820f810   112  stur d0, [x2, #7]
0xffff5820f814   116  mov x0, x2
0xffff5820f818   120  ret
0xffff5820f81c   124  sub csp, jssp, #0x10 (16)
0xffff5820f820   128  stp fp, lr, [jssp, #-16]!
0xffff5820f824   132  movz fp, #0xa00000000
0xffff5820f828   136  sub csp, jssp, #0x8 (8)
0xffff5820f82c   140  str fp, [jssp, #-8]!
0xffff5820f830   144  add fp, jssp, #0x8 (8)
0xffff5820f834   148  movz x2, #0x0
0xffff5820f838   152  mov x16, lr
0xffff5820f83c   156  ldr x17, pc+68 (addr 0x0000ffff5820f880)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820f840   160  blr x17
0xffff5820f844   164  ldur cp, [fp, #-8]
0xffff5820f848   168  movz x0, #0x0
0xffff5820f84c   172  movz x1, #0x4b48
0xffff5820f850   176  movk x1, #0xe4, lsl #16
0xffff5820f854   180  ldr x16, pc+52 (addr 0x0000ffff5820f888)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820f858   184  blr x16
0xffff5820f85c   188  str x0, [jssp, #16]
0xffff5820f860   192  ldr x16, pc+48 (addr 0x0000ffff5820f890)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820f864   196  blr x16
0xffff5820f868   200  ldr lr, [jssp, #16]
0xffff5820f86c   204  ldp xzr, fp, [jssp], #24
0xffff5820f870   208  b #-0x60 (addr 0xffff5820f810)
0xffff5820f874   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5820f878   216  d63f03e0       constant
0xffff5820f87c   220  d503201f       constant
0xffff5820f880   224  58206820       constant
0xffff5820f884   228  0000ffff       constant
0xffff5820f888   232  58206260       constant
0xffff5820f88c   236  0000ffff       constant
0xffff5820f890   240  582068e0       constant
0xffff5820f894   244  0000ffff       constant
0xffff5820f898   248  movz x16, #0x0
0xffff5820f89c   252  sub csp, jssp, #0x10 (16)
0xffff5820f8a0   256  stp fp, lr, [jssp, #-16]!
0xffff5820f8a4   260  bl #+0x14 (addr 0xffff5820f8b8)
0xffff5820f8a8   264  movz x16, #0x8
0xffff5820f8ac   268  sub csp, jssp, #0x10 (16)
0xffff5820f8b0   272  stp fp, lr, [jssp, #-16]!
0xffff5820f8b4   276  bl #+0x4 (addr 0xffff5820f8b8)
0xffff5820f8b8   280  movz x17, #0xa00000000
0xffff5820f8bc   284  sub csp, jssp, #0x10 (16)
0xffff5820f8c0   288  stp x17, cp, [jssp, #-16]!
0xffff5820f8c4   292  add fp, jssp, #0x10 (16)
0xffff5820f8c8   296  ldr x17, pc+24 (addr 0x0000ffff5820f8e0)    ;; lazy deoptimization bailout 0
0xffff5820f8cc   300  add x17, x17, x16
0xffff5820f8d0   304  br x17
0xffff5820f8d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f8d8   312  d63f03e0       constant
0xffff5820f8dc   316  d503201f       constant
0xffff5820f8e0   320  58006000       constant
0xffff5820f8e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5820f85c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820f83c  code target (STUB)  (0xffff58206820)
0xffff5820f854  code target (STUB)  (0xffff58206260)
0xffff5820f860  code target (STUB)  (0xffff582068e0)
0xffff5820f874  constant pool (size 36)
0xffff5820f8c8  runtime entry
0xffff5820f8d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6327
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff5820f7a0     0  mov x2, x1
0xffff5820f7a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff5820f898)
0xffff5820f7a8     8  tbz w0, #0, #+0x34 (addr 0xffff5820f7dc)
0xffff5820f7ac    12  ldur x16, [x0, #-1]
0xffff5820f7b0    16  ldr x17, [x26, #120]
0xffff5820f7b4    20  cmp x16, x17
0xffff5820f7b8    24  b.ne #+0xc (addr 0xffff5820f7c4)
0xffff5820f7bc    28  ldur d0, [x0, #7]
0xffff5820f7c0    32  b #+0x20 (addr 0xffff5820f7e0)
0xffff5820f7c4    36  ldr x16, [x26, #40]
0xffff5820f7c8    40  cmp x0, x16
0xffff5820f7cc    44  b.ne #+0xdc (addr 0xffff5820f8a8)
0xffff5820f7d0    48  ldr x3, [x26, #928]
0xffff5820f7d4    52  ldur d0, [x3, #7]
0xffff5820f7d8    56  b #+0x8 (addr 0xffff5820f7e0)
0xffff5820f7dc    60  scvtf d0, x0, #32
0xffff5820f7e0    64  scvtf d1, x2, #32
0xffff5820f7e4    68  fadd d0, d1, d0
0xffff5820f7e8    72  movz x1, #0x92c0
0xffff5820f7ec    76  movk x1, #0x16e7, lsl #16
0xffff5820f7f0    80  ldp x2, x0, [x1]
0xffff5820f7f4    84  adds x16, x2, #0x10 (16)
0xffff5820f7f8    88  ccmp x16, x0, #nzCv, lo
0xffff5820f7fc    92  b.hi #+0x20 (addr 0xffff5820f81c)
0xffff5820f800    96  str x16, [x1]
0xffff5820f804   100  ldr x1, [x26, #120]
0xffff5820f808   104  str x1, [x2]
0xffff5820f80c   108  orr x2, x2, #0x1
0xffff5820f810   112  stur d0, [x2, #7]
0xffff5820f814   116  mov x0, x2
0xffff5820f818   120  ret
0xffff5820f81c   124  sub csp, jssp, #0x10 (16)
0xffff5820f820   128  stp fp, lr, [jssp, #-16]!
0xffff5820f824   132  movz fp, #0xa00000000
0xffff5820f828   136  sub csp, jssp, #0x8 (8)
0xffff5820f82c   140  str fp, [jssp, #-8]!
0xffff5820f830   144  add fp, jssp, #0x8 (8)
0xffff5820f834   148  movz x2, #0x0
0xffff5820f838   152  mov x16, lr
0xffff5820f83c   156  ldr x17, pc+68 (addr 0x0000ffff5820f880)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5820f840   160  blr x17
0xffff5820f844   164  ldur cp, [fp, #-8]
0xffff5820f848   168  movz x0, #0x0
0xffff5820f84c   172  movz x1, #0x4b48
0xffff5820f850   176  movk x1, #0xe4, lsl #16
0xffff5820f854   180  ldr x16, pc+52 (addr 0x0000ffff5820f888)    ;; code: STUB, CEntryStub, minor: 5
0xffff5820f858   184  blr x16
0xffff5820f85c   188  str x0, [jssp, #16]
0xffff5820f860   192  ldr x16, pc+48 (addr 0x0000ffff5820f890)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5820f864   196  blr x16
0xffff5820f868   200  ldr lr, [jssp, #16]
0xffff5820f86c   204  ldp xzr, fp, [jssp], #24
0xffff5820f870   208  b #-0x60 (addr 0xffff5820f810)
0xffff5820f874   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5820f878   216  d63f03e0       constant
0xffff5820f87c   220  d503201f       constant
0xffff5820f880   224  58206820       constant
0xffff5820f884   228  0000ffff       constant
0xffff5820f888   232  58206260       constant
0xffff5820f88c   236  0000ffff       constant
0xffff5820f890   240  582068e0       constant
0xffff5820f894   244  0000ffff       constant
0xffff5820f898   248  movz x16, #0x0
0xffff5820f89c   252  sub csp, jssp, #0x10 (16)
0xffff5820f8a0   256  stp fp, lr, [jssp, #-16]!
0xffff5820f8a4   260  bl #+0x14 (addr 0xffff5820f8b8)
0xffff5820f8a8   264  movz x16, #0x8
0xffff5820f8ac   268  sub csp, jssp, #0x10 (16)
0xffff5820f8b0   272  stp fp, lr, [jssp, #-16]!
0xffff5820f8b4   276  bl #+0x4 (addr 0xffff5820f8b8)
0xffff5820f8b8   280  movz x17, #0xa00000000
0xffff5820f8bc   284  sub csp, jssp, #0x10 (16)
0xffff5820f8c0   288  stp x17, cp, [jssp, #-16]!
0xffff5820f8c4   292  add fp, jssp, #0x10 (16)
0xffff5820f8c8   296  ldr x17, pc+24 (addr 0x0000ffff5820f8e0)    ;; lazy deoptimization bailout 0
0xffff5820f8cc   300  add x17, x17, x16
0xffff5820f8d0   304  br x17
0xffff5820f8d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f8d8   312  d63f03e0       constant
0xffff5820f8dc   316  d503201f       constant
0xffff5820f8e0   320  58006000       constant
0xffff5820f8e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5820f85c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5820f83c  code target (STUB)  (0xffff58206820)
0xffff5820f854  code target (STUB)  (0xffff58206260)
0xffff5820f860  code target (STUB)  (0xffff582068e0)
0xffff5820f874  constant pool (size 36)
0xffff5820f8c8  runtime entry
0xffff5820f8d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2215
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff5820f960     0  mov x2, x1
0xffff5820f964     4  tbnz w2, #0, #+0x1c (addr 0xffff5820f980)
0xffff5820f968     8  mov x3, x0
0xffff5820f96c    12  tbnz w3, #0, #+0x24 (addr 0xffff5820f990)
0xffff5820f970    16  adds x2, x3, x2
0xffff5820f974    20  b.vs #+0x2c (addr 0xffff5820f9a0)
0xffff5820f978    24  mov x0, x2
0xffff5820f97c    28  ret
0xffff5820f980    32  movz x16, #0x0
0xffff5820f984    36  sub csp, jssp, #0x10 (16)
0xffff5820f988    40  stp fp, lr, [jssp, #-16]!
0xffff5820f98c    44  bl #+0x24 (addr 0xffff5820f9b0)
0xffff5820f990    48  movz x16, #0x8
0xffff5820f994    52  sub csp, jssp, #0x10 (16)
0xffff5820f998    56  stp fp, lr, [jssp, #-16]!
0xffff5820f99c    60  bl #+0x14 (addr 0xffff5820f9b0)
0xffff5820f9a0    64  movz x16, #0x10
0xffff5820f9a4    68  sub csp, jssp, #0x10 (16)
0xffff5820f9a8    72  stp fp, lr, [jssp, #-16]!
0xffff5820f9ac    76  bl #+0x4 (addr 0xffff5820f9b0)
0xffff5820f9b0    80  movz x17, #0xa00000000
0xffff5820f9b4    84  sub csp, jssp, #0x10 (16)
0xffff5820f9b8    88  stp x17, cp, [jssp, #-16]!
0xffff5820f9bc    92  add fp, jssp, #0x10 (16)
0xffff5820f9c0    96  ldr x17, pc+24 (addr 0x0000ffff5820f9d8)    ;; lazy deoptimization bailout 0
0xffff5820f9c4   100  add x17, x17, x16
0xffff5820f9c8   104  br x17
0xffff5820f9cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f9d0   112  d63f03e0       constant
0xffff5820f9d4   116  d503201f       constant
0xffff5820f9d8   120  58006000       constant
0xffff5820f9dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820f9c0  runtime entry
0xffff5820f9cc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2215
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Smi->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff5820f960     0  mov x2, x1
0xffff5820f964     4  tbnz w2, #0, #+0x1c (addr 0xffff5820f980)
0xffff5820f968     8  mov x3, x0
0xffff5820f96c    12  tbnz w3, #0, #+0x24 (addr 0xffff5820f990)
0xffff5820f970    16  adds x2, x3, x2
0xffff5820f974    20  b.vs #+0x2c (addr 0xffff5820f9a0)
0xffff5820f978    24  mov x0, x2
0xffff5820f97c    28  ret
0xffff5820f980    32  movz x16, #0x0
0xffff5820f984    36  sub csp, jssp, #0x10 (16)
0xffff5820f988    40  stp fp, lr, [jssp, #-16]!
0xffff5820f98c    44  bl #+0x24 (addr 0xffff5820f9b0)
0xffff5820f990    48  movz x16, #0x8
0xffff5820f994    52  sub csp, jssp, #0x10 (16)
0xffff5820f998    56  stp fp, lr, [jssp, #-16]!
0xffff5820f99c    60  bl #+0x14 (addr 0xffff5820f9b0)
0xffff5820f9a0    64  movz x16, #0x10
0xffff5820f9a4    68  sub csp, jssp, #0x10 (16)
0xffff5820f9a8    72  stp fp, lr, [jssp, #-16]!
0xffff5820f9ac    76  bl #+0x4 (addr 0xffff5820f9b0)
0xffff5820f9b0    80  movz x17, #0xa00000000
0xffff5820f9b4    84  sub csp, jssp, #0x10 (16)
0xffff5820f9b8    88  stp x17, cp, [jssp, #-16]!
0xffff5820f9bc    92  add fp, jssp, #0x10 (16)
0xffff5820f9c0    96  ldr x17, pc+24 (addr 0x0000ffff5820f9d8)    ;; lazy deoptimization bailout 0
0xffff5820f9c4   100  add x17, x17, x16
0xffff5820f9c8   104  br x17
0xffff5820f9cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820f9d0   112  d63f03e0       constant
0xffff5820f9d4   116  d503201f       constant
0xffff5820f9d8   120  58006000       constant
0xffff5820f9dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820f9c0  runtime entry
0xffff5820f9cc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2199
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff5820fa60     0  mov x2, x1
0xffff5820fa64     4  tbnz w2, #0, #+0x1c (addr 0xffff5820fa80)
0xffff5820fa68     8  mov x3, x0
0xffff5820fa6c    12  tbnz w3, #0, #+0x24 (addr 0xffff5820fa90)
0xffff5820fa70    16  adds x2, x3, x2
0xffff5820fa74    20  b.vs #+0x2c (addr 0xffff5820faa0)
0xffff5820fa78    24  mov x0, x2
0xffff5820fa7c    28  ret
0xffff5820fa80    32  movz x16, #0x0
0xffff5820fa84    36  sub csp, jssp, #0x10 (16)
0xffff5820fa88    40  stp fp, lr, [jssp, #-16]!
0xffff5820fa8c    44  bl #+0x24 (addr 0xffff5820fab0)
0xffff5820fa90    48  movz x16, #0x8
0xffff5820fa94    52  sub csp, jssp, #0x10 (16)
0xffff5820fa98    56  stp fp, lr, [jssp, #-16]!
0xffff5820fa9c    60  bl #+0x14 (addr 0xffff5820fab0)
0xffff5820faa0    64  movz x16, #0x10
0xffff5820faa4    68  sub csp, jssp, #0x10 (16)
0xffff5820faa8    72  stp fp, lr, [jssp, #-16]!
0xffff5820faac    76  bl #+0x4 (addr 0xffff5820fab0)
0xffff5820fab0    80  movz x17, #0xa00000000
0xffff5820fab4    84  sub csp, jssp, #0x10 (16)
0xffff5820fab8    88  stp x17, cp, [jssp, #-16]!
0xffff5820fabc    92  add fp, jssp, #0x10 (16)
0xffff5820fac0    96  ldr x17, pc+24 (addr 0x0000ffff5820fad8)    ;; lazy deoptimization bailout 0
0xffff5820fac4   100  add x17, x17, x16
0xffff5820fac8   104  br x17
0xffff5820facc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820fad0   112  d63f03e0       constant
0xffff5820fad4   116  d503201f       constant
0xffff5820fad8   120  58006000       constant
0xffff5820fadc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820fac0  runtime entry
0xffff5820facc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2199
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 136)
0xffff5820fa60     0  mov x2, x1
0xffff5820fa64     4  tbnz w2, #0, #+0x1c (addr 0xffff5820fa80)
0xffff5820fa68     8  mov x3, x0
0xffff5820fa6c    12  tbnz w3, #0, #+0x24 (addr 0xffff5820fa90)
0xffff5820fa70    16  adds x2, x3, x2
0xffff5820fa74    20  b.vs #+0x2c (addr 0xffff5820faa0)
0xffff5820fa78    24  mov x0, x2
0xffff5820fa7c    28  ret
0xffff5820fa80    32  movz x16, #0x0
0xffff5820fa84    36  sub csp, jssp, #0x10 (16)
0xffff5820fa88    40  stp fp, lr, [jssp, #-16]!
0xffff5820fa8c    44  bl #+0x24 (addr 0xffff5820fab0)
0xffff5820fa90    48  movz x16, #0x8
0xffff5820fa94    52  sub csp, jssp, #0x10 (16)
0xffff5820fa98    56  stp fp, lr, [jssp, #-16]!
0xffff5820fa9c    60  bl #+0x14 (addr 0xffff5820fab0)
0xffff5820faa0    64  movz x16, #0x10
0xffff5820faa4    68  sub csp, jssp, #0x10 (16)
0xffff5820faa8    72  stp fp, lr, [jssp, #-16]!
0xffff5820faac    76  bl #+0x4 (addr 0xffff5820fab0)
0xffff5820fab0    80  movz x17, #0xa00000000
0xffff5820fab4    84  sub csp, jssp, #0x10 (16)
0xffff5820fab8    88  stp x17, cp, [jssp, #-16]!
0xffff5820fabc    92  add fp, jssp, #0x10 (16)
0xffff5820fac0    96  ldr x17, pc+24 (addr 0x0000ffff5820fad8)    ;; lazy deoptimization bailout 0
0xffff5820fac4   100  add x17, x17, x16
0xffff5820fac8   104  br x17
0xffff5820facc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820fad0   112  d63f03e0       constant
0xffff5820fad4   116  d503201f       constant
0xffff5820fad8   120  58006000       constant
0xffff5820fadc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820fac0  runtime entry
0xffff5820facc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4386
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff5820fb60     0  mov x2, x1
0xffff5820fb64     4  tbnz w2, #0, #+0x14 (addr 0xffff5820fb78)
0xffff5820fb68     8  mov x3, x0
0xffff5820fb6c    12  tbnz w3, #0, #+0x1c (addr 0xffff5820fb88)
0xffff5820fb70    16  and x0, x3, x2
0xffff5820fb74    20  ret
0xffff5820fb78    24  movz x16, #0x0
0xffff5820fb7c    28  sub csp, jssp, #0x10 (16)
0xffff5820fb80    32  stp fp, lr, [jssp, #-16]!
0xffff5820fb84    36  bl #+0x14 (addr 0xffff5820fb98)
0xffff5820fb88    40  movz x16, #0x8
0xffff5820fb8c    44  sub csp, jssp, #0x10 (16)
0xffff5820fb90    48  stp fp, lr, [jssp, #-16]!
0xffff5820fb94    52  bl #+0x4 (addr 0xffff5820fb98)
0xffff5820fb98    56  movz x17, #0xa00000000
0xffff5820fb9c    60  sub csp, jssp, #0x10 (16)
0xffff5820fba0    64  stp x17, cp, [jssp, #-16]!
0xffff5820fba4    68  add fp, jssp, #0x10 (16)
0xffff5820fba8    72  ldr x17, pc+24 (addr 0x0000ffff5820fbc0)    ;; lazy deoptimization bailout 0
0xffff5820fbac    76  add x17, x17, x16
0xffff5820fbb0    80  br x17
0xffff5820fbb4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820fbb8    88  d63f03e0       constant
0xffff5820fbbc    92  d503201f       constant
0xffff5820fbc0    96  58006000       constant
0xffff5820fbc4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820fba8  runtime entry
0xffff5820fbb4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4386
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff5820fb60     0  mov x2, x1
0xffff5820fb64     4  tbnz w2, #0, #+0x14 (addr 0xffff5820fb78)
0xffff5820fb68     8  mov x3, x0
0xffff5820fb6c    12  tbnz w3, #0, #+0x1c (addr 0xffff5820fb88)
0xffff5820fb70    16  and x0, x3, x2
0xffff5820fb74    20  ret
0xffff5820fb78    24  movz x16, #0x0
0xffff5820fb7c    28  sub csp, jssp, #0x10 (16)
0xffff5820fb80    32  stp fp, lr, [jssp, #-16]!
0xffff5820fb84    36  bl #+0x14 (addr 0xffff5820fb98)
0xffff5820fb88    40  movz x16, #0x8
0xffff5820fb8c    44  sub csp, jssp, #0x10 (16)
0xffff5820fb90    48  stp fp, lr, [jssp, #-16]!
0xffff5820fb94    52  bl #+0x4 (addr 0xffff5820fb98)
0xffff5820fb98    56  movz x17, #0xa00000000
0xffff5820fb9c    60  sub csp, jssp, #0x10 (16)
0xffff5820fba0    64  stp x17, cp, [jssp, #-16]!
0xffff5820fba4    68  add fp, jssp, #0x10 (16)
0xffff5820fba8    72  ldr x17, pc+24 (addr 0x0000ffff5820fbc0)    ;; lazy deoptimization bailout 0
0xffff5820fbac    76  add x17, x17, x16
0xffff5820fbb0    80  br x17
0xffff5820fbb4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820fbb8    88  d63f03e0       constant
0xffff5820fbbc    92  d503201f       constant
0xffff5820fbc0    96  58006000       constant
0xffff5820fbc4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820fba8  runtime entry
0xffff5820fbb4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4370
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff5820fc40     0  mov x2, x1
0xffff5820fc44     4  tbnz w2, #0, #+0x14 (addr 0xffff5820fc58)
0xffff5820fc48     8  mov x3, x0
0xffff5820fc4c    12  tbnz w3, #0, #+0x1c (addr 0xffff5820fc68)
0xffff5820fc50    16  and x0, x3, x2
0xffff5820fc54    20  ret
0xffff5820fc58    24  movz x16, #0x0
0xffff5820fc5c    28  sub csp, jssp, #0x10 (16)
0xffff5820fc60    32  stp fp, lr, [jssp, #-16]!
0xffff5820fc64    36  bl #+0x14 (addr 0xffff5820fc78)
0xffff5820fc68    40  movz x16, #0x8
0xffff5820fc6c    44  sub csp, jssp, #0x10 (16)
0xffff5820fc70    48  stp fp, lr, [jssp, #-16]!
0xffff5820fc74    52  bl #+0x4 (addr 0xffff5820fc78)
0xffff5820fc78    56  movz x17, #0xa00000000
0xffff5820fc7c    60  sub csp, jssp, #0x10 (16)
0xffff5820fc80    64  stp x17, cp, [jssp, #-16]!
0xffff5820fc84    68  add fp, jssp, #0x10 (16)
0xffff5820fc88    72  ldr x17, pc+24 (addr 0x0000ffff5820fca0)    ;; lazy deoptimization bailout 0
0xffff5820fc8c    76  add x17, x17, x16
0xffff5820fc90    80  br x17
0xffff5820fc94    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820fc98    88  d63f03e0       constant
0xffff5820fc9c    92  d503201f       constant
0xffff5820fca0    96  58006000       constant
0xffff5820fca4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820fc88  runtime entry
0xffff5820fc94  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4370
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff5820fc40     0  mov x2, x1
0xffff5820fc44     4  tbnz w2, #0, #+0x14 (addr 0xffff5820fc58)
0xffff5820fc48     8  mov x3, x0
0xffff5820fc4c    12  tbnz w3, #0, #+0x1c (addr 0xffff5820fc68)
0xffff5820fc50    16  and x0, x3, x2
0xffff5820fc54    20  ret
0xffff5820fc58    24  movz x16, #0x0
0xffff5820fc5c    28  sub csp, jssp, #0x10 (16)
0xffff5820fc60    32  stp fp, lr, [jssp, #-16]!
0xffff5820fc64    36  bl #+0x14 (addr 0xffff5820fc78)
0xffff5820fc68    40  movz x16, #0x8
0xffff5820fc6c    44  sub csp, jssp, #0x10 (16)
0xffff5820fc70    48  stp fp, lr, [jssp, #-16]!
0xffff5820fc74    52  bl #+0x4 (addr 0xffff5820fc78)
0xffff5820fc78    56  movz x17, #0xa00000000
0xffff5820fc7c    60  sub csp, jssp, #0x10 (16)
0xffff5820fc80    64  stp x17, cp, [jssp, #-16]!
0xffff5820fc84    68  add fp, jssp, #0x10 (16)
0xffff5820fc88    72  ldr x17, pc+24 (addr 0x0000ffff5820fca0)    ;; lazy deoptimization bailout 0
0xffff5820fc8c    76  add x17, x17, x16
0xffff5820fc90    80  br x17
0xffff5820fc94    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820fc98    88  d63f03e0       constant
0xffff5820fc9c    92  d503201f       constant
0xffff5820fca0    96  58006000       constant
0xffff5820fca4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820fc88  runtime entry
0xffff5820fc94  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2338
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff5820fd20     0  mov x2, x1
0xffff5820fd24     4  tbnz w2, #0, #+0x14 (addr 0xffff5820fd38)
0xffff5820fd28     8  mov x3, x0
0xffff5820fd2c    12  tbnz w3, #0, #+0x1c (addr 0xffff5820fd48)
0xffff5820fd30    16  and x0, x3, x2
0xffff5820fd34    20  ret
0xffff5820fd38    24  movz x16, #0x0
0xffff5820fd3c    28  sub csp, jssp, #0x10 (16)
0xffff5820fd40    32  stp fp, lr, [jssp, #-16]!
0xffff5820fd44    36  bl #+0x14 (addr 0xffff5820fd58)
0xffff5820fd48    40  movz x16, #0x8
0xffff5820fd4c    44  sub csp, jssp, #0x10 (16)
0xffff5820fd50    48  stp fp, lr, [jssp, #-16]!
0xffff5820fd54    52  bl #+0x4 (addr 0xffff5820fd58)
0xffff5820fd58    56  movz x17, #0xa00000000
0xffff5820fd5c    60  sub csp, jssp, #0x10 (16)
0xffff5820fd60    64  stp x17, cp, [jssp, #-16]!
0xffff5820fd64    68  add fp, jssp, #0x10 (16)
0xffff5820fd68    72  ldr x17, pc+24 (addr 0x0000ffff5820fd80)    ;; lazy deoptimization bailout 0
0xffff5820fd6c    76  add x17, x17, x16
0xffff5820fd70    80  br x17
0xffff5820fd74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820fd78    88  d63f03e0       constant
0xffff5820fd7c    92  d503201f       constant
0xffff5820fd80    96  58006000       constant
0xffff5820fd84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820fd68  runtime entry
0xffff5820fd74  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2338
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff5820fd20     0  mov x2, x1
0xffff5820fd24     4  tbnz w2, #0, #+0x14 (addr 0xffff5820fd38)
0xffff5820fd28     8  mov x3, x0
0xffff5820fd2c    12  tbnz w3, #0, #+0x1c (addr 0xffff5820fd48)
0xffff5820fd30    16  and x0, x3, x2
0xffff5820fd34    20  ret
0xffff5820fd38    24  movz x16, #0x0
0xffff5820fd3c    28  sub csp, jssp, #0x10 (16)
0xffff5820fd40    32  stp fp, lr, [jssp, #-16]!
0xffff5820fd44    36  bl #+0x14 (addr 0xffff5820fd58)
0xffff5820fd48    40  movz x16, #0x8
0xffff5820fd4c    44  sub csp, jssp, #0x10 (16)
0xffff5820fd50    48  stp fp, lr, [jssp, #-16]!
0xffff5820fd54    52  bl #+0x4 (addr 0xffff5820fd58)
0xffff5820fd58    56  movz x17, #0xa00000000
0xffff5820fd5c    60  sub csp, jssp, #0x10 (16)
0xffff5820fd60    64  stp x17, cp, [jssp, #-16]!
0xffff5820fd64    68  add fp, jssp, #0x10 (16)
0xffff5820fd68    72  ldr x17, pc+24 (addr 0x0000ffff5820fd80)    ;; lazy deoptimization bailout 0
0xffff5820fd6c    76  add x17, x17, x16
0xffff5820fd70    80  br x17
0xffff5820fd74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820fd78    88  d63f03e0       constant
0xffff5820fd7c    92  d503201f       constant
0xffff5820fd80    96  58006000       constant
0xffff5820fd84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820fd68  runtime entry
0xffff5820fd74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2322
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff5820fe00     0  mov x2, x1
0xffff5820fe04     4  tbnz w2, #0, #+0x14 (addr 0xffff5820fe18)
0xffff5820fe08     8  mov x3, x0
0xffff5820fe0c    12  tbnz w3, #0, #+0x1c (addr 0xffff5820fe28)
0xffff5820fe10    16  and x0, x3, x2
0xffff5820fe14    20  ret
0xffff5820fe18    24  movz x16, #0x0
0xffff5820fe1c    28  sub csp, jssp, #0x10 (16)
0xffff5820fe20    32  stp fp, lr, [jssp, #-16]!
0xffff5820fe24    36  bl #+0x14 (addr 0xffff5820fe38)
0xffff5820fe28    40  movz x16, #0x8
0xffff5820fe2c    44  sub csp, jssp, #0x10 (16)
0xffff5820fe30    48  stp fp, lr, [jssp, #-16]!
0xffff5820fe34    52  bl #+0x4 (addr 0xffff5820fe38)
0xffff5820fe38    56  movz x17, #0xa00000000
0xffff5820fe3c    60  sub csp, jssp, #0x10 (16)
0xffff5820fe40    64  stp x17, cp, [jssp, #-16]!
0xffff5820fe44    68  add fp, jssp, #0x10 (16)
0xffff5820fe48    72  ldr x17, pc+24 (addr 0x0000ffff5820fe60)    ;; lazy deoptimization bailout 0
0xffff5820fe4c    76  add x17, x17, x16
0xffff5820fe50    80  br x17
0xffff5820fe54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820fe58    88  d63f03e0       constant
0xffff5820fe5c    92  d503201f       constant
0xffff5820fe60    96  58006000       constant
0xffff5820fe64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820fe48  runtime entry
0xffff5820fe54  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2322
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff5820fe00     0  mov x2, x1
0xffff5820fe04     4  tbnz w2, #0, #+0x14 (addr 0xffff5820fe18)
0xffff5820fe08     8  mov x3, x0
0xffff5820fe0c    12  tbnz w3, #0, #+0x1c (addr 0xffff5820fe28)
0xffff5820fe10    16  and x0, x3, x2
0xffff5820fe14    20  ret
0xffff5820fe18    24  movz x16, #0x0
0xffff5820fe1c    28  sub csp, jssp, #0x10 (16)
0xffff5820fe20    32  stp fp, lr, [jssp, #-16]!
0xffff5820fe24    36  bl #+0x14 (addr 0xffff5820fe38)
0xffff5820fe28    40  movz x16, #0x8
0xffff5820fe2c    44  sub csp, jssp, #0x10 (16)
0xffff5820fe30    48  stp fp, lr, [jssp, #-16]!
0xffff5820fe34    52  bl #+0x4 (addr 0xffff5820fe38)
0xffff5820fe38    56  movz x17, #0xa00000000
0xffff5820fe3c    60  sub csp, jssp, #0x10 (16)
0xffff5820fe40    64  stp x17, cp, [jssp, #-16]!
0xffff5820fe44    68  add fp, jssp, #0x10 (16)
0xffff5820fe48    72  ldr x17, pc+24 (addr 0x0000ffff5820fe60)    ;; lazy deoptimization bailout 0
0xffff5820fe4c    76  add x17, x17, x16
0xffff5820fe50    80  br x17
0xffff5820fe54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5820fe58    88  d63f03e0       constant
0xffff5820fe5c    92  d503201f       constant
0xffff5820fe60    96  58006000       constant
0xffff5820fe64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5820fe48  runtime entry
0xffff5820fe54  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff5820fee0     0  sub csp, jssp, #0x10 (16)
0xffff5820fee4     4  stp x2, x0, [jssp, #-16]!
0xffff5820fee8     8  ldur x4, [x1, #7]
0xffff5820feec    12  ubfx x0, x4, #52, #11
0xffff5820fef0    16  cmp x0, #0x453 (1107)
0xffff5820fef4    20  csel x4, xzr, x4, ge
0xffff5820fef8    24  b.ge #+0x1c (addr 0xffff5820ff14)
0xffff5820fefc    28  ubfx x2, x4, #0, #52
0xffff5820ff00    32  orr x2, x2, #0x10000000000000
0xffff5820ff04    36  tst x4, #0x8000000000000000
0xffff5820ff08    40  cneg x2, x2, ne
0xffff5820ff0c    44  sub x0, x0, #0x433 (1075)
0xffff5820ff10    48  lsl x4, x2, x0
0xffff5820ff14    52  ldp x2, x0, [jssp], #16
0xffff5820ff18    56  ret


RelocInfo (size = 0)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4514
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff5820ff80     0  mov x2, x0
0xffff5820ff84     4  tbnz w2, #0, #+0xac (addr 0xffff58210030)
0xffff5820ff88     8  tbnz w1, #0, #+0x18 (addr 0xffff5820ffa0)
0xffff5820ff8c    12  asr x4, x1, #32
0xffff5820ff90    16  asr x0, x2, #32
0xffff5820ff94    20  and w0, w0, w4
0xffff5820ff98    24  lsl x0, x0, #32
0xffff5820ff9c    28  ret
0xffff5820ffa0    32  sub csp, jssp, #0x10 (16)
0xffff5820ffa4    36  stp fp, lr, [jssp, #-16]!
0xffff5820ffa8    40  movz fp, #0xa00000000
0xffff5820ffac    44  sub csp, jssp, #0x8 (8)
0xffff5820ffb0    48  str fp, [jssp, #-8]!
0xffff5820ffb4    52  add fp, jssp, #0x8 (8)
0xffff5820ffb8    56  ldur x16, [x1, #-1]
0xffff5820ffbc    60  ldr x17, [x26, #120]
0xffff5820ffc0    64  cmp x16, x17
0xffff5820ffc4    68  b.ne #+0x30 (addr 0xffff5820fff4)
0xffff5820ffc8    72  ldur d30, [x1, #7]
0xffff5820ffcc    76  fcvtzs x4, d30
0xffff5820ffd0    80  cmp x4, #0x1 (1)
0xffff5820ffd4    84  ccmn x4, #1, #nzcV, vc
0xffff5820ffd8    88  b.vc #+0x18 (addr 0xffff5820fff0)
0xffff5820ffdc    92  sub csp, jssp, #0x8 (8)
0xffff5820ffe0    96  str lr, [jssp, #-8]!
0xffff5820ffe4   100  ldr x16, pc+68 (addr 0x0000ffff58210028)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff5820ffe8   104  blr x16
0xffff5820ffec   108  ldr lr, [jssp], #8
0xffff5820fff0   112  b #+0x24 (addr 0xffff58210014)
0xffff5820fff4   116  ldp x4, x3, [x26, #64]
0xffff5820fff8   120  cmp x1, x4
0xffff5820fffc   124  cset x4, eq
0xffff58210000   128  ccmp x1, x3, #nZcv, ne
0xffff58210004   132  b.eq #+0x10 (addr 0xffff58210014)
0xffff58210008   136  ldr x16, [x26, #40]
0xffff5821000c   140  cmp x1, x16
0xffff58210010   144  b.ne #+0x30 (addr 0xffff58210040)
0xffff58210014   148  ldr lr, [jssp, #16]
0xffff58210018   152  ldp xzr, fp, [jssp], #24
0xffff5821001c   156  b #-0x8c (addr 0xffff5820ff90)
0xffff58210020   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58210024   164  d63f03e0       constant
0xffff58210028   168  5820fee0       constant
0xffff5821002c   172  0000ffff       constant
0xffff58210030   176  movz x16, #0x0
0xffff58210034   180  sub csp, jssp, #0x10 (16)
0xffff58210038   184  stp fp, lr, [jssp, #-16]!
0xffff5821003c   188  bl #+0xc (addr 0xffff58210048)
0xffff58210040   192  movz x16, #0x8
0xffff58210044   196  bl #+0x14 (addr 0xffff58210058)
0xffff58210048   200  movz x17, #0xa00000000
0xffff5821004c   204  sub csp, jssp, #0x10 (16)
0xffff58210050   208  stp x17, cp, [jssp, #-16]!
0xffff58210054   212  add fp, jssp, #0x10 (16)
0xffff58210058   216  ldr x17, pc+24 (addr 0x0000ffff58210070)    ;; lazy deoptimization bailout 0
0xffff5821005c   220  add x17, x17, x16
0xffff58210060   224  br x17
0xffff58210064   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210068   232  d63f03e0       constant
0xffff5821006c   236  d503201f       constant
0xffff58210070   240  58006000       constant
0xffff58210074   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff5820ffe4  code target (STUB)  (0xffff5820fee0)
0xffff58210020  constant pool (size 16)
0xffff58210058  runtime entry
0xffff58210064  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4514
type = NORMAL
name = BinaryOpICStub(BIT_AND:Number*Int32->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff5820ff80     0  mov x2, x0
0xffff5820ff84     4  tbnz w2, #0, #+0xac (addr 0xffff58210030)
0xffff5820ff88     8  tbnz w1, #0, #+0x18 (addr 0xffff5820ffa0)
0xffff5820ff8c    12  asr x4, x1, #32
0xffff5820ff90    16  asr x0, x2, #32
0xffff5820ff94    20  and w0, w0, w4
0xffff5820ff98    24  lsl x0, x0, #32
0xffff5820ff9c    28  ret
0xffff5820ffa0    32  sub csp, jssp, #0x10 (16)
0xffff5820ffa4    36  stp fp, lr, [jssp, #-16]!
0xffff5820ffa8    40  movz fp, #0xa00000000
0xffff5820ffac    44  sub csp, jssp, #0x8 (8)
0xffff5820ffb0    48  str fp, [jssp, #-8]!
0xffff5820ffb4    52  add fp, jssp, #0x8 (8)
0xffff5820ffb8    56  ldur x16, [x1, #-1]
0xffff5820ffbc    60  ldr x17, [x26, #120]
0xffff5820ffc0    64  cmp x16, x17
0xffff5820ffc4    68  b.ne #+0x30 (addr 0xffff5820fff4)
0xffff5820ffc8    72  ldur d30, [x1, #7]
0xffff5820ffcc    76  fcvtzs x4, d30
0xffff5820ffd0    80  cmp x4, #0x1 (1)
0xffff5820ffd4    84  ccmn x4, #1, #nzcV, vc
0xffff5820ffd8    88  b.vc #+0x18 (addr 0xffff5820fff0)
0xffff5820ffdc    92  sub csp, jssp, #0x8 (8)
0xffff5820ffe0    96  str lr, [jssp, #-8]!
0xffff5820ffe4   100  ldr x16, pc+68 (addr 0x0000ffff58210028)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff5820ffe8   104  blr x16
0xffff5820ffec   108  ldr lr, [jssp], #8
0xffff5820fff0   112  b #+0x24 (addr 0xffff58210014)
0xffff5820fff4   116  ldp x4, x3, [x26, #64]
0xffff5820fff8   120  cmp x1, x4
0xffff5820fffc   124  cset x4, eq
0xffff58210000   128  ccmp x1, x3, #nZcv, ne
0xffff58210004   132  b.eq #+0x10 (addr 0xffff58210014)
0xffff58210008   136  ldr x16, [x26, #40]
0xffff5821000c   140  cmp x1, x16
0xffff58210010   144  b.ne #+0x30 (addr 0xffff58210040)
0xffff58210014   148  ldr lr, [jssp, #16]
0xffff58210018   152  ldp xzr, fp, [jssp], #24
0xffff5821001c   156  b #-0x8c (addr 0xffff5820ff90)
0xffff58210020   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58210024   164  d63f03e0       constant
0xffff58210028   168  5820fee0       constant
0xffff5821002c   172  0000ffff       constant
0xffff58210030   176  movz x16, #0x0
0xffff58210034   180  sub csp, jssp, #0x10 (16)
0xffff58210038   184  stp fp, lr, [jssp, #-16]!
0xffff5821003c   188  bl #+0xc (addr 0xffff58210048)
0xffff58210040   192  movz x16, #0x8
0xffff58210044   196  bl #+0x14 (addr 0xffff58210058)
0xffff58210048   200  movz x17, #0xa00000000
0xffff5821004c   204  sub csp, jssp, #0x10 (16)
0xffff58210050   208  stp x17, cp, [jssp, #-16]!
0xffff58210054   212  add fp, jssp, #0x10 (16)
0xffff58210058   216  ldr x17, pc+24 (addr 0x0000ffff58210070)    ;; lazy deoptimization bailout 0
0xffff5821005c   220  add x17, x17, x16
0xffff58210060   224  br x17
0xffff58210064   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210068   232  d63f03e0       constant
0xffff5821006c   236  d503201f       constant
0xffff58210070   240  58006000       constant
0xffff58210074   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff5820ffe4  code target (STUB)  (0xffff5820fee0)
0xffff58210020  constant pool (size 16)
0xffff58210058  runtime entry
0xffff58210064  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2450
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff582100e0     0  mov x2, x0
0xffff582100e4     4  tbnz w2, #0, #+0xac (addr 0xffff58210190)
0xffff582100e8     8  tbnz w1, #0, #+0x18 (addr 0xffff58210100)
0xffff582100ec    12  asr x4, x1, #32
0xffff582100f0    16  asr x0, x2, #32
0xffff582100f4    20  and w0, w0, w4
0xffff582100f8    24  lsl x0, x0, #32
0xffff582100fc    28  ret
0xffff58210100    32  sub csp, jssp, #0x10 (16)
0xffff58210104    36  stp fp, lr, [jssp, #-16]!
0xffff58210108    40  movz fp, #0xa00000000
0xffff5821010c    44  sub csp, jssp, #0x8 (8)
0xffff58210110    48  str fp, [jssp, #-8]!
0xffff58210114    52  add fp, jssp, #0x8 (8)
0xffff58210118    56  ldur x16, [x1, #-1]
0xffff5821011c    60  ldr x17, [x26, #120]
0xffff58210120    64  cmp x16, x17
0xffff58210124    68  b.ne #+0x30 (addr 0xffff58210154)
0xffff58210128    72  ldur d30, [x1, #7]
0xffff5821012c    76  fcvtzs x4, d30
0xffff58210130    80  cmp x4, #0x1 (1)
0xffff58210134    84  ccmn x4, #1, #nzcV, vc
0xffff58210138    88  b.vc #+0x18 (addr 0xffff58210150)
0xffff5821013c    92  sub csp, jssp, #0x8 (8)
0xffff58210140    96  str lr, [jssp, #-8]!
0xffff58210144   100  ldr x16, pc+68 (addr 0x0000ffff58210188)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58210148   104  blr x16
0xffff5821014c   108  ldr lr, [jssp], #8
0xffff58210150   112  b #+0x24 (addr 0xffff58210174)
0xffff58210154   116  ldp x4, x3, [x26, #64]
0xffff58210158   120  cmp x1, x4
0xffff5821015c   124  cset x4, eq
0xffff58210160   128  ccmp x1, x3, #nZcv, ne
0xffff58210164   132  b.eq #+0x10 (addr 0xffff58210174)
0xffff58210168   136  ldr x16, [x26, #40]
0xffff5821016c   140  cmp x1, x16
0xffff58210170   144  b.ne #+0x30 (addr 0xffff582101a0)
0xffff58210174   148  ldr lr, [jssp, #16]
0xffff58210178   152  ldp xzr, fp, [jssp], #24
0xffff5821017c   156  b #-0x8c (addr 0xffff582100f0)
0xffff58210180   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58210184   164  d63f03e0       constant
0xffff58210188   168  5820fee0       constant
0xffff5821018c   172  0000ffff       constant
0xffff58210190   176  movz x16, #0x0
0xffff58210194   180  sub csp, jssp, #0x10 (16)
0xffff58210198   184  stp fp, lr, [jssp, #-16]!
0xffff5821019c   188  bl #+0xc (addr 0xffff582101a8)
0xffff582101a0   192  movz x16, #0x8
0xffff582101a4   196  bl #+0x14 (addr 0xffff582101b8)
0xffff582101a8   200  movz x17, #0xa00000000
0xffff582101ac   204  sub csp, jssp, #0x10 (16)
0xffff582101b0   208  stp x17, cp, [jssp, #-16]!
0xffff582101b4   212  add fp, jssp, #0x10 (16)
0xffff582101b8   216  ldr x17, pc+24 (addr 0x0000ffff582101d0)    ;; lazy deoptimization bailout 0
0xffff582101bc   220  add x17, x17, x16
0xffff582101c0   224  br x17
0xffff582101c4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582101c8   232  d63f03e0       constant
0xffff582101cc   236  d503201f       constant
0xffff582101d0   240  58006000       constant
0xffff582101d4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58210144  code target (STUB)  (0xffff5820fee0)
0xffff58210180  constant pool (size 16)
0xffff582101b8  runtime entry
0xffff582101c4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2450
type = NORMAL
name = BinaryOpICStub(BIT_AND:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff582100e0     0  mov x2, x0
0xffff582100e4     4  tbnz w2, #0, #+0xac (addr 0xffff58210190)
0xffff582100e8     8  tbnz w1, #0, #+0x18 (addr 0xffff58210100)
0xffff582100ec    12  asr x4, x1, #32
0xffff582100f0    16  asr x0, x2, #32
0xffff582100f4    20  and w0, w0, w4
0xffff582100f8    24  lsl x0, x0, #32
0xffff582100fc    28  ret
0xffff58210100    32  sub csp, jssp, #0x10 (16)
0xffff58210104    36  stp fp, lr, [jssp, #-16]!
0xffff58210108    40  movz fp, #0xa00000000
0xffff5821010c    44  sub csp, jssp, #0x8 (8)
0xffff58210110    48  str fp, [jssp, #-8]!
0xffff58210114    52  add fp, jssp, #0x8 (8)
0xffff58210118    56  ldur x16, [x1, #-1]
0xffff5821011c    60  ldr x17, [x26, #120]
0xffff58210120    64  cmp x16, x17
0xffff58210124    68  b.ne #+0x30 (addr 0xffff58210154)
0xffff58210128    72  ldur d30, [x1, #7]
0xffff5821012c    76  fcvtzs x4, d30
0xffff58210130    80  cmp x4, #0x1 (1)
0xffff58210134    84  ccmn x4, #1, #nzcV, vc
0xffff58210138    88  b.vc #+0x18 (addr 0xffff58210150)
0xffff5821013c    92  sub csp, jssp, #0x8 (8)
0xffff58210140    96  str lr, [jssp, #-8]!
0xffff58210144   100  ldr x16, pc+68 (addr 0x0000ffff58210188)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58210148   104  blr x16
0xffff5821014c   108  ldr lr, [jssp], #8
0xffff58210150   112  b #+0x24 (addr 0xffff58210174)
0xffff58210154   116  ldp x4, x3, [x26, #64]
0xffff58210158   120  cmp x1, x4
0xffff5821015c   124  cset x4, eq
0xffff58210160   128  ccmp x1, x3, #nZcv, ne
0xffff58210164   132  b.eq #+0x10 (addr 0xffff58210174)
0xffff58210168   136  ldr x16, [x26, #40]
0xffff5821016c   140  cmp x1, x16
0xffff58210170   144  b.ne #+0x30 (addr 0xffff582101a0)
0xffff58210174   148  ldr lr, [jssp, #16]
0xffff58210178   152  ldp xzr, fp, [jssp], #24
0xffff5821017c   156  b #-0x8c (addr 0xffff582100f0)
0xffff58210180   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58210184   164  d63f03e0       constant
0xffff58210188   168  5820fee0       constant
0xffff5821018c   172  0000ffff       constant
0xffff58210190   176  movz x16, #0x0
0xffff58210194   180  sub csp, jssp, #0x10 (16)
0xffff58210198   184  stp fp, lr, [jssp, #-16]!
0xffff5821019c   188  bl #+0xc (addr 0xffff582101a8)
0xffff582101a0   192  movz x16, #0x8
0xffff582101a4   196  bl #+0x14 (addr 0xffff582101b8)
0xffff582101a8   200  movz x17, #0xa00000000
0xffff582101ac   204  sub csp, jssp, #0x10 (16)
0xffff582101b0   208  stp x17, cp, [jssp, #-16]!
0xffff582101b4   212  add fp, jssp, #0x10 (16)
0xffff582101b8   216  ldr x17, pc+24 (addr 0x0000ffff582101d0)    ;; lazy deoptimization bailout 0
0xffff582101bc   220  add x17, x17, x16
0xffff582101c0   224  br x17
0xffff582101c4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582101c8   232  d63f03e0       constant
0xffff582101cc   236  d503201f       constant
0xffff582101d0   240  58006000       constant
0xffff582101d4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58210144  code target (STUB)  (0xffff5820fee0)
0xffff58210180  constant pool (size 16)
0xffff582101b8  runtime entry
0xffff582101c4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4258
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff58210240     0  mov x2, x1
0xffff58210244     4  tbnz w2, #0, #+0x14 (addr 0xffff58210258)
0xffff58210248     8  mov x3, x0
0xffff5821024c    12  tbnz w3, #0, #+0x1c (addr 0xffff58210268)
0xffff58210250    16  and x0, x3, x2
0xffff58210254    20  ret
0xffff58210258    24  movz x16, #0x0
0xffff5821025c    28  sub csp, jssp, #0x10 (16)
0xffff58210260    32  stp fp, lr, [jssp, #-16]!
0xffff58210264    36  bl #+0x14 (addr 0xffff58210278)
0xffff58210268    40  movz x16, #0x8
0xffff5821026c    44  sub csp, jssp, #0x10 (16)
0xffff58210270    48  stp fp, lr, [jssp, #-16]!
0xffff58210274    52  bl #+0x4 (addr 0xffff58210278)
0xffff58210278    56  movz x17, #0xa00000000
0xffff5821027c    60  sub csp, jssp, #0x10 (16)
0xffff58210280    64  stp x17, cp, [jssp, #-16]!
0xffff58210284    68  add fp, jssp, #0x10 (16)
0xffff58210288    72  ldr x17, pc+24 (addr 0x0000ffff582102a0)    ;; lazy deoptimization bailout 0
0xffff5821028c    76  add x17, x17, x16
0xffff58210290    80  br x17
0xffff58210294    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210298    88  d63f03e0       constant
0xffff5821029c    92  d503201f       constant
0xffff582102a0    96  58006000       constant
0xffff582102a4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210288  runtime entry
0xffff58210294  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4258
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff58210240     0  mov x2, x1
0xffff58210244     4  tbnz w2, #0, #+0x14 (addr 0xffff58210258)
0xffff58210248     8  mov x3, x0
0xffff5821024c    12  tbnz w3, #0, #+0x1c (addr 0xffff58210268)
0xffff58210250    16  and x0, x3, x2
0xffff58210254    20  ret
0xffff58210258    24  movz x16, #0x0
0xffff5821025c    28  sub csp, jssp, #0x10 (16)
0xffff58210260    32  stp fp, lr, [jssp, #-16]!
0xffff58210264    36  bl #+0x14 (addr 0xffff58210278)
0xffff58210268    40  movz x16, #0x8
0xffff5821026c    44  sub csp, jssp, #0x10 (16)
0xffff58210270    48  stp fp, lr, [jssp, #-16]!
0xffff58210274    52  bl #+0x4 (addr 0xffff58210278)
0xffff58210278    56  movz x17, #0xa00000000
0xffff5821027c    60  sub csp, jssp, #0x10 (16)
0xffff58210280    64  stp x17, cp, [jssp, #-16]!
0xffff58210284    68  add fp, jssp, #0x10 (16)
0xffff58210288    72  ldr x17, pc+24 (addr 0x0000ffff582102a0)    ;; lazy deoptimization bailout 0
0xffff5821028c    76  add x17, x17, x16
0xffff58210290    80  br x17
0xffff58210294    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210298    88  d63f03e0       constant
0xffff5821029c    92  d503201f       constant
0xffff582102a0    96  58006000       constant
0xffff582102a4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210288  runtime entry
0xffff58210294  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4242
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff58210320     0  mov x2, x1
0xffff58210324     4  tbnz w2, #0, #+0x14 (addr 0xffff58210338)
0xffff58210328     8  mov x3, x0
0xffff5821032c    12  tbnz w3, #0, #+0x1c (addr 0xffff58210348)
0xffff58210330    16  and x0, x3, x2
0xffff58210334    20  ret
0xffff58210338    24  movz x16, #0x0
0xffff5821033c    28  sub csp, jssp, #0x10 (16)
0xffff58210340    32  stp fp, lr, [jssp, #-16]!
0xffff58210344    36  bl #+0x14 (addr 0xffff58210358)
0xffff58210348    40  movz x16, #0x8
0xffff5821034c    44  sub csp, jssp, #0x10 (16)
0xffff58210350    48  stp fp, lr, [jssp, #-16]!
0xffff58210354    52  bl #+0x4 (addr 0xffff58210358)
0xffff58210358    56  movz x17, #0xa00000000
0xffff5821035c    60  sub csp, jssp, #0x10 (16)
0xffff58210360    64  stp x17, cp, [jssp, #-16]!
0xffff58210364    68  add fp, jssp, #0x10 (16)
0xffff58210368    72  ldr x17, pc+24 (addr 0x0000ffff58210380)    ;; lazy deoptimization bailout 0
0xffff5821036c    76  add x17, x17, x16
0xffff58210370    80  br x17
0xffff58210374    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210378    88  d63f03e0       constant
0xffff5821037c    92  d503201f       constant
0xffff58210380    96  58006000       constant
0xffff58210384   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210368  runtime entry
0xffff58210374  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4242
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff58210320     0  mov x2, x1
0xffff58210324     4  tbnz w2, #0, #+0x14 (addr 0xffff58210338)
0xffff58210328     8  mov x3, x0
0xffff5821032c    12  tbnz w3, #0, #+0x1c (addr 0xffff58210348)
0xffff58210330    16  and x0, x3, x2
0xffff58210334    20  ret
0xffff58210338    24  movz x16, #0x0
0xffff5821033c    28  sub csp, jssp, #0x10 (16)
0xffff58210340    32  stp fp, lr, [jssp, #-16]!
0xffff58210344    36  bl #+0x14 (addr 0xffff58210358)
0xffff58210348    40  movz x16, #0x8
0xffff5821034c    44  sub csp, jssp, #0x10 (16)
0xffff58210350    48  stp fp, lr, [jssp, #-16]!
0xffff58210354    52  bl #+0x4 (addr 0xffff58210358)
0xffff58210358    56  movz x17, #0xa00000000
0xffff5821035c    60  sub csp, jssp, #0x10 (16)
0xffff58210360    64  stp x17, cp, [jssp, #-16]!
0xffff58210364    68  add fp, jssp, #0x10 (16)
0xffff58210368    72  ldr x17, pc+24 (addr 0x0000ffff58210380)    ;; lazy deoptimization bailout 0
0xffff5821036c    76  add x17, x17, x16
0xffff58210370    80  br x17
0xffff58210374    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210378    88  d63f03e0       constant
0xffff5821037c    92  d503201f       constant
0xffff58210380    96  58006000       constant
0xffff58210384   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210368  runtime entry
0xffff58210374  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff58210400     0  sub csp, jssp, #0x10 (16)
0xffff58210404     4  stp x2, x1, [jssp, #-16]!
0xffff58210408     8  ldur x4, [x0, #7]
0xffff5821040c    12  ubfx x1, x4, #52, #11
0xffff58210410    16  cmp x1, #0x453 (1107)
0xffff58210414    20  csel x4, xzr, x4, ge
0xffff58210418    24  b.ge #+0x1c (addr 0xffff58210434)
0xffff5821041c    28  ubfx x2, x4, #0, #52
0xffff58210420    32  orr x2, x2, #0x10000000000000
0xffff58210424    36  tst x4, #0x8000000000000000
0xffff58210428    40  cneg x2, x2, ne
0xffff5821042c    44  sub x1, x1, #0x433 (1075)
0xffff58210430    48  lsl x4, x2, x1
0xffff58210434    52  ldp x2, x1, [jssp], #16
0xffff58210438    56  ret


RelocInfo (size = 0)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6290
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff582104a0     0  mov x2, x1
0xffff582104a4     4  tbnz w2, #0, #+0xac (addr 0xffff58210550)
0xffff582104a8     8  tbnz w0, #0, #+0x18 (addr 0xffff582104c0)
0xffff582104ac    12  asr x4, x0, #32
0xffff582104b0    16  asr x0, x2, #32
0xffff582104b4    20  and w0, w4, w0
0xffff582104b8    24  lsl x0, x0, #32
0xffff582104bc    28  ret
0xffff582104c0    32  sub csp, jssp, #0x10 (16)
0xffff582104c4    36  stp fp, lr, [jssp, #-16]!
0xffff582104c8    40  movz fp, #0xa00000000
0xffff582104cc    44  sub csp, jssp, #0x8 (8)
0xffff582104d0    48  str fp, [jssp, #-8]!
0xffff582104d4    52  add fp, jssp, #0x8 (8)
0xffff582104d8    56  ldur x16, [x0, #-1]
0xffff582104dc    60  ldr x17, [x26, #120]
0xffff582104e0    64  cmp x16, x17
0xffff582104e4    68  b.ne #+0x30 (addr 0xffff58210514)
0xffff582104e8    72  ldur d30, [x0, #7]
0xffff582104ec    76  fcvtzs x4, d30
0xffff582104f0    80  cmp x4, #0x1 (1)
0xffff582104f4    84  ccmn x4, #1, #nzcV, vc
0xffff582104f8    88  b.vc #+0x18 (addr 0xffff58210510)
0xffff582104fc    92  sub csp, jssp, #0x8 (8)
0xffff58210500    96  str lr, [jssp, #-8]!
0xffff58210504   100  ldr x16, pc+68 (addr 0x0000ffff58210548)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff58210508   104  blr x16
0xffff5821050c   108  ldr lr, [jssp], #8
0xffff58210510   112  b #+0x24 (addr 0xffff58210534)
0xffff58210514   116  ldp x4, x3, [x26, #64]
0xffff58210518   120  cmp x0, x4
0xffff5821051c   124  cset x4, eq
0xffff58210520   128  ccmp x0, x3, #nZcv, ne
0xffff58210524   132  b.eq #+0x10 (addr 0xffff58210534)
0xffff58210528   136  ldr x16, [x26, #40]
0xffff5821052c   140  cmp x0, x16
0xffff58210530   144  b.ne #+0x30 (addr 0xffff58210560)
0xffff58210534   148  ldr lr, [jssp, #16]
0xffff58210538   152  ldp xzr, fp, [jssp], #24
0xffff5821053c   156  b #-0x8c (addr 0xffff582104b0)
0xffff58210540   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58210544   164  d63f03e0       constant
0xffff58210548   168  58210400       constant
0xffff5821054c   172  0000ffff       constant
0xffff58210550   176  movz x16, #0x0
0xffff58210554   180  sub csp, jssp, #0x10 (16)
0xffff58210558   184  stp fp, lr, [jssp, #-16]!
0xffff5821055c   188  bl #+0xc (addr 0xffff58210568)
0xffff58210560   192  movz x16, #0x8
0xffff58210564   196  bl #+0x14 (addr 0xffff58210578)
0xffff58210568   200  movz x17, #0xa00000000
0xffff5821056c   204  sub csp, jssp, #0x10 (16)
0xffff58210570   208  stp x17, cp, [jssp, #-16]!
0xffff58210574   212  add fp, jssp, #0x10 (16)
0xffff58210578   216  ldr x17, pc+24 (addr 0x0000ffff58210590)    ;; lazy deoptimization bailout 0
0xffff5821057c   220  add x17, x17, x16
0xffff58210580   224  br x17
0xffff58210584   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210588   232  d63f03e0       constant
0xffff5821058c   236  d503201f       constant
0xffff58210590   240  58006000       constant
0xffff58210594   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58210504  code target (STUB)  (0xffff58210400)
0xffff58210540  constant pool (size 16)
0xffff58210578  runtime entry
0xffff58210584  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6290
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Number->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff582104a0     0  mov x2, x1
0xffff582104a4     4  tbnz w2, #0, #+0xac (addr 0xffff58210550)
0xffff582104a8     8  tbnz w0, #0, #+0x18 (addr 0xffff582104c0)
0xffff582104ac    12  asr x4, x0, #32
0xffff582104b0    16  asr x0, x2, #32
0xffff582104b4    20  and w0, w4, w0
0xffff582104b8    24  lsl x0, x0, #32
0xffff582104bc    28  ret
0xffff582104c0    32  sub csp, jssp, #0x10 (16)
0xffff582104c4    36  stp fp, lr, [jssp, #-16]!
0xffff582104c8    40  movz fp, #0xa00000000
0xffff582104cc    44  sub csp, jssp, #0x8 (8)
0xffff582104d0    48  str fp, [jssp, #-8]!
0xffff582104d4    52  add fp, jssp, #0x8 (8)
0xffff582104d8    56  ldur x16, [x0, #-1]
0xffff582104dc    60  ldr x17, [x26, #120]
0xffff582104e0    64  cmp x16, x17
0xffff582104e4    68  b.ne #+0x30 (addr 0xffff58210514)
0xffff582104e8    72  ldur d30, [x0, #7]
0xffff582104ec    76  fcvtzs x4, d30
0xffff582104f0    80  cmp x4, #0x1 (1)
0xffff582104f4    84  ccmn x4, #1, #nzcV, vc
0xffff582104f8    88  b.vc #+0x18 (addr 0xffff58210510)
0xffff582104fc    92  sub csp, jssp, #0x8 (8)
0xffff58210500    96  str lr, [jssp, #-8]!
0xffff58210504   100  ldr x16, pc+68 (addr 0x0000ffff58210548)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff58210508   104  blr x16
0xffff5821050c   108  ldr lr, [jssp], #8
0xffff58210510   112  b #+0x24 (addr 0xffff58210534)
0xffff58210514   116  ldp x4, x3, [x26, #64]
0xffff58210518   120  cmp x0, x4
0xffff5821051c   124  cset x4, eq
0xffff58210520   128  ccmp x0, x3, #nZcv, ne
0xffff58210524   132  b.eq #+0x10 (addr 0xffff58210534)
0xffff58210528   136  ldr x16, [x26, #40]
0xffff5821052c   140  cmp x0, x16
0xffff58210530   144  b.ne #+0x30 (addr 0xffff58210560)
0xffff58210534   148  ldr lr, [jssp, #16]
0xffff58210538   152  ldp xzr, fp, [jssp], #24
0xffff5821053c   156  b #-0x8c (addr 0xffff582104b0)
0xffff58210540   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58210544   164  d63f03e0       constant
0xffff58210548   168  58210400       constant
0xffff5821054c   172  0000ffff       constant
0xffff58210550   176  movz x16, #0x0
0xffff58210554   180  sub csp, jssp, #0x10 (16)
0xffff58210558   184  stp fp, lr, [jssp, #-16]!
0xffff5821055c   188  bl #+0xc (addr 0xffff58210568)
0xffff58210560   192  movz x16, #0x8
0xffff58210564   196  bl #+0x14 (addr 0xffff58210578)
0xffff58210568   200  movz x17, #0xa00000000
0xffff5821056c   204  sub csp, jssp, #0x10 (16)
0xffff58210570   208  stp x17, cp, [jssp, #-16]!
0xffff58210574   212  add fp, jssp, #0x10 (16)
0xffff58210578   216  ldr x17, pc+24 (addr 0x0000ffff58210590)    ;; lazy deoptimization bailout 0
0xffff5821057c   220  add x17, x17, x16
0xffff58210580   224  br x17
0xffff58210584   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210588   232  d63f03e0       constant
0xffff5821058c   236  d503201f       constant
0xffff58210590   240  58006000       constant
0xffff58210594   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58210504  code target (STUB)  (0xffff58210400)
0xffff58210540  constant pool (size 16)
0xffff58210578  runtime entry
0xffff58210584  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2194
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff58210600     0  mov x2, x1
0xffff58210604     4  tbnz w2, #0, #+0x14 (addr 0xffff58210618)
0xffff58210608     8  mov x3, x0
0xffff5821060c    12  tbnz w3, #0, #+0x1c (addr 0xffff58210628)
0xffff58210610    16  and x0, x3, x2
0xffff58210614    20  ret
0xffff58210618    24  movz x16, #0x0
0xffff5821061c    28  sub csp, jssp, #0x10 (16)
0xffff58210620    32  stp fp, lr, [jssp, #-16]!
0xffff58210624    36  bl #+0x14 (addr 0xffff58210638)
0xffff58210628    40  movz x16, #0x8
0xffff5821062c    44  sub csp, jssp, #0x10 (16)
0xffff58210630    48  stp fp, lr, [jssp, #-16]!
0xffff58210634    52  bl #+0x4 (addr 0xffff58210638)
0xffff58210638    56  movz x17, #0xa00000000
0xffff5821063c    60  sub csp, jssp, #0x10 (16)
0xffff58210640    64  stp x17, cp, [jssp, #-16]!
0xffff58210644    68  add fp, jssp, #0x10 (16)
0xffff58210648    72  ldr x17, pc+24 (addr 0x0000ffff58210660)    ;; lazy deoptimization bailout 0
0xffff5821064c    76  add x17, x17, x16
0xffff58210650    80  br x17
0xffff58210654    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210658    88  d63f03e0       constant
0xffff5821065c    92  d503201f       constant
0xffff58210660    96  58006000       constant
0xffff58210664   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210648  runtime entry
0xffff58210654  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2194
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff58210600     0  mov x2, x1
0xffff58210604     4  tbnz w2, #0, #+0x14 (addr 0xffff58210618)
0xffff58210608     8  mov x3, x0
0xffff5821060c    12  tbnz w3, #0, #+0x1c (addr 0xffff58210628)
0xffff58210610    16  and x0, x3, x2
0xffff58210614    20  ret
0xffff58210618    24  movz x16, #0x0
0xffff5821061c    28  sub csp, jssp, #0x10 (16)
0xffff58210620    32  stp fp, lr, [jssp, #-16]!
0xffff58210624    36  bl #+0x14 (addr 0xffff58210638)
0xffff58210628    40  movz x16, #0x8
0xffff5821062c    44  sub csp, jssp, #0x10 (16)
0xffff58210630    48  stp fp, lr, [jssp, #-16]!
0xffff58210634    52  bl #+0x4 (addr 0xffff58210638)
0xffff58210638    56  movz x17, #0xa00000000
0xffff5821063c    60  sub csp, jssp, #0x10 (16)
0xffff58210640    64  stp x17, cp, [jssp, #-16]!
0xffff58210644    68  add fp, jssp, #0x10 (16)
0xffff58210648    72  ldr x17, pc+24 (addr 0x0000ffff58210660)    ;; lazy deoptimization bailout 0
0xffff5821064c    76  add x17, x17, x16
0xffff58210650    80  br x17
0xffff58210654    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210658    88  d63f03e0       constant
0xffff5821065c    92  d503201f       constant
0xffff58210660    96  58006000       constant
0xffff58210664   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210648  runtime entry
0xffff58210654  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4384
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff582106e0     0  mov x2, x1
0xffff582106e4     4  tbnz w2, #0, #+0x14 (addr 0xffff582106f8)
0xffff582106e8     8  mov x3, x0
0xffff582106ec    12  tbnz w3, #0, #+0x1c (addr 0xffff58210708)
0xffff582106f0    16  orr x0, x3, x2
0xffff582106f4    20  ret
0xffff582106f8    24  movz x16, #0x0
0xffff582106fc    28  sub csp, jssp, #0x10 (16)
0xffff58210700    32  stp fp, lr, [jssp, #-16]!
0xffff58210704    36  bl #+0x14 (addr 0xffff58210718)
0xffff58210708    40  movz x16, #0x8
0xffff5821070c    44  sub csp, jssp, #0x10 (16)
0xffff58210710    48  stp fp, lr, [jssp, #-16]!
0xffff58210714    52  bl #+0x4 (addr 0xffff58210718)
0xffff58210718    56  movz x17, #0xa00000000
0xffff5821071c    60  sub csp, jssp, #0x10 (16)
0xffff58210720    64  stp x17, cp, [jssp, #-16]!
0xffff58210724    68  add fp, jssp, #0x10 (16)
0xffff58210728    72  ldr x17, pc+24 (addr 0x0000ffff58210740)    ;; lazy deoptimization bailout 0
0xffff5821072c    76  add x17, x17, x16
0xffff58210730    80  br x17
0xffff58210734    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210738    88  d63f03e0       constant
0xffff5821073c    92  d503201f       constant
0xffff58210740    96  58006000       constant
0xffff58210744   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210728  runtime entry
0xffff58210734  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4384
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff582106e0     0  mov x2, x1
0xffff582106e4     4  tbnz w2, #0, #+0x14 (addr 0xffff582106f8)
0xffff582106e8     8  mov x3, x0
0xffff582106ec    12  tbnz w3, #0, #+0x1c (addr 0xffff58210708)
0xffff582106f0    16  orr x0, x3, x2
0xffff582106f4    20  ret
0xffff582106f8    24  movz x16, #0x0
0xffff582106fc    28  sub csp, jssp, #0x10 (16)
0xffff58210700    32  stp fp, lr, [jssp, #-16]!
0xffff58210704    36  bl #+0x14 (addr 0xffff58210718)
0xffff58210708    40  movz x16, #0x8
0xffff5821070c    44  sub csp, jssp, #0x10 (16)
0xffff58210710    48  stp fp, lr, [jssp, #-16]!
0xffff58210714    52  bl #+0x4 (addr 0xffff58210718)
0xffff58210718    56  movz x17, #0xa00000000
0xffff5821071c    60  sub csp, jssp, #0x10 (16)
0xffff58210720    64  stp x17, cp, [jssp, #-16]!
0xffff58210724    68  add fp, jssp, #0x10 (16)
0xffff58210728    72  ldr x17, pc+24 (addr 0x0000ffff58210740)    ;; lazy deoptimization bailout 0
0xffff5821072c    76  add x17, x17, x16
0xffff58210730    80  br x17
0xffff58210734    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210738    88  d63f03e0       constant
0xffff5821073c    92  d503201f       constant
0xffff58210740    96  58006000       constant
0xffff58210744   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210728  runtime entry
0xffff58210734  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4368
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff582107c0     0  mov x2, x1
0xffff582107c4     4  tbnz w2, #0, #+0x14 (addr 0xffff582107d8)
0xffff582107c8     8  mov x3, x0
0xffff582107cc    12  tbnz w3, #0, #+0x1c (addr 0xffff582107e8)
0xffff582107d0    16  orr x0, x3, x2
0xffff582107d4    20  ret
0xffff582107d8    24  movz x16, #0x0
0xffff582107dc    28  sub csp, jssp, #0x10 (16)
0xffff582107e0    32  stp fp, lr, [jssp, #-16]!
0xffff582107e4    36  bl #+0x14 (addr 0xffff582107f8)
0xffff582107e8    40  movz x16, #0x8
0xffff582107ec    44  sub csp, jssp, #0x10 (16)
0xffff582107f0    48  stp fp, lr, [jssp, #-16]!
0xffff582107f4    52  bl #+0x4 (addr 0xffff582107f8)
0xffff582107f8    56  movz x17, #0xa00000000
0xffff582107fc    60  sub csp, jssp, #0x10 (16)
0xffff58210800    64  stp x17, cp, [jssp, #-16]!
0xffff58210804    68  add fp, jssp, #0x10 (16)
0xffff58210808    72  ldr x17, pc+24 (addr 0x0000ffff58210820)    ;; lazy deoptimization bailout 0
0xffff5821080c    76  add x17, x17, x16
0xffff58210810    80  br x17
0xffff58210814    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210818    88  d63f03e0       constant
0xffff5821081c    92  d503201f       constant
0xffff58210820    96  58006000       constant
0xffff58210824   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210808  runtime entry
0xffff58210814  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4368
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff582107c0     0  mov x2, x1
0xffff582107c4     4  tbnz w2, #0, #+0x14 (addr 0xffff582107d8)
0xffff582107c8     8  mov x3, x0
0xffff582107cc    12  tbnz w3, #0, #+0x1c (addr 0xffff582107e8)
0xffff582107d0    16  orr x0, x3, x2
0xffff582107d4    20  ret
0xffff582107d8    24  movz x16, #0x0
0xffff582107dc    28  sub csp, jssp, #0x10 (16)
0xffff582107e0    32  stp fp, lr, [jssp, #-16]!
0xffff582107e4    36  bl #+0x14 (addr 0xffff582107f8)
0xffff582107e8    40  movz x16, #0x8
0xffff582107ec    44  sub csp, jssp, #0x10 (16)
0xffff582107f0    48  stp fp, lr, [jssp, #-16]!
0xffff582107f4    52  bl #+0x4 (addr 0xffff582107f8)
0xffff582107f8    56  movz x17, #0xa00000000
0xffff582107fc    60  sub csp, jssp, #0x10 (16)
0xffff58210800    64  stp x17, cp, [jssp, #-16]!
0xffff58210804    68  add fp, jssp, #0x10 (16)
0xffff58210808    72  ldr x17, pc+24 (addr 0x0000ffff58210820)    ;; lazy deoptimization bailout 0
0xffff5821080c    76  add x17, x17, x16
0xffff58210810    80  br x17
0xffff58210814    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210818    88  d63f03e0       constant
0xffff5821081c    92  d503201f       constant
0xffff58210820    96  58006000       constant
0xffff58210824   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210808  runtime entry
0xffff58210814  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2336
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff582108a0     0  mov x2, x1
0xffff582108a4     4  tbnz w2, #0, #+0x14 (addr 0xffff582108b8)
0xffff582108a8     8  mov x3, x0
0xffff582108ac    12  tbnz w3, #0, #+0x1c (addr 0xffff582108c8)
0xffff582108b0    16  orr x0, x3, x2
0xffff582108b4    20  ret
0xffff582108b8    24  movz x16, #0x0
0xffff582108bc    28  sub csp, jssp, #0x10 (16)
0xffff582108c0    32  stp fp, lr, [jssp, #-16]!
0xffff582108c4    36  bl #+0x14 (addr 0xffff582108d8)
0xffff582108c8    40  movz x16, #0x8
0xffff582108cc    44  sub csp, jssp, #0x10 (16)
0xffff582108d0    48  stp fp, lr, [jssp, #-16]!
0xffff582108d4    52  bl #+0x4 (addr 0xffff582108d8)
0xffff582108d8    56  movz x17, #0xa00000000
0xffff582108dc    60  sub csp, jssp, #0x10 (16)
0xffff582108e0    64  stp x17, cp, [jssp, #-16]!
0xffff582108e4    68  add fp, jssp, #0x10 (16)
0xffff582108e8    72  ldr x17, pc+24 (addr 0x0000ffff58210900)    ;; lazy deoptimization bailout 0
0xffff582108ec    76  add x17, x17, x16
0xffff582108f0    80  br x17
0xffff582108f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582108f8    88  d63f03e0       constant
0xffff582108fc    92  d503201f       constant
0xffff58210900    96  58006000       constant
0xffff58210904   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582108e8  runtime entry
0xffff582108f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2336
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff582108a0     0  mov x2, x1
0xffff582108a4     4  tbnz w2, #0, #+0x14 (addr 0xffff582108b8)
0xffff582108a8     8  mov x3, x0
0xffff582108ac    12  tbnz w3, #0, #+0x1c (addr 0xffff582108c8)
0xffff582108b0    16  orr x0, x3, x2
0xffff582108b4    20  ret
0xffff582108b8    24  movz x16, #0x0
0xffff582108bc    28  sub csp, jssp, #0x10 (16)
0xffff582108c0    32  stp fp, lr, [jssp, #-16]!
0xffff582108c4    36  bl #+0x14 (addr 0xffff582108d8)
0xffff582108c8    40  movz x16, #0x8
0xffff582108cc    44  sub csp, jssp, #0x10 (16)
0xffff582108d0    48  stp fp, lr, [jssp, #-16]!
0xffff582108d4    52  bl #+0x4 (addr 0xffff582108d8)
0xffff582108d8    56  movz x17, #0xa00000000
0xffff582108dc    60  sub csp, jssp, #0x10 (16)
0xffff582108e0    64  stp x17, cp, [jssp, #-16]!
0xffff582108e4    68  add fp, jssp, #0x10 (16)
0xffff582108e8    72  ldr x17, pc+24 (addr 0x0000ffff58210900)    ;; lazy deoptimization bailout 0
0xffff582108ec    76  add x17, x17, x16
0xffff582108f0    80  br x17
0xffff582108f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582108f8    88  d63f03e0       constant
0xffff582108fc    92  d503201f       constant
0xffff58210900    96  58006000       constant
0xffff58210904   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582108e8  runtime entry
0xffff582108f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2320
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff58210980     0  mov x2, x1
0xffff58210984     4  tbnz w2, #0, #+0x14 (addr 0xffff58210998)
0xffff58210988     8  mov x3, x0
0xffff5821098c    12  tbnz w3, #0, #+0x1c (addr 0xffff582109a8)
0xffff58210990    16  orr x0, x3, x2
0xffff58210994    20  ret
0xffff58210998    24  movz x16, #0x0
0xffff5821099c    28  sub csp, jssp, #0x10 (16)
0xffff582109a0    32  stp fp, lr, [jssp, #-16]!
0xffff582109a4    36  bl #+0x14 (addr 0xffff582109b8)
0xffff582109a8    40  movz x16, #0x8
0xffff582109ac    44  sub csp, jssp, #0x10 (16)
0xffff582109b0    48  stp fp, lr, [jssp, #-16]!
0xffff582109b4    52  bl #+0x4 (addr 0xffff582109b8)
0xffff582109b8    56  movz x17, #0xa00000000
0xffff582109bc    60  sub csp, jssp, #0x10 (16)
0xffff582109c0    64  stp x17, cp, [jssp, #-16]!
0xffff582109c4    68  add fp, jssp, #0x10 (16)
0xffff582109c8    72  ldr x17, pc+24 (addr 0x0000ffff582109e0)    ;; lazy deoptimization bailout 0
0xffff582109cc    76  add x17, x17, x16
0xffff582109d0    80  br x17
0xffff582109d4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582109d8    88  d63f03e0       constant
0xffff582109dc    92  d503201f       constant
0xffff582109e0    96  58006000       constant
0xffff582109e4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582109c8  runtime entry
0xffff582109d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2320
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff58210980     0  mov x2, x1
0xffff58210984     4  tbnz w2, #0, #+0x14 (addr 0xffff58210998)
0xffff58210988     8  mov x3, x0
0xffff5821098c    12  tbnz w3, #0, #+0x1c (addr 0xffff582109a8)
0xffff58210990    16  orr x0, x3, x2
0xffff58210994    20  ret
0xffff58210998    24  movz x16, #0x0
0xffff5821099c    28  sub csp, jssp, #0x10 (16)
0xffff582109a0    32  stp fp, lr, [jssp, #-16]!
0xffff582109a4    36  bl #+0x14 (addr 0xffff582109b8)
0xffff582109a8    40  movz x16, #0x8
0xffff582109ac    44  sub csp, jssp, #0x10 (16)
0xffff582109b0    48  stp fp, lr, [jssp, #-16]!
0xffff582109b4    52  bl #+0x4 (addr 0xffff582109b8)
0xffff582109b8    56  movz x17, #0xa00000000
0xffff582109bc    60  sub csp, jssp, #0x10 (16)
0xffff582109c0    64  stp x17, cp, [jssp, #-16]!
0xffff582109c4    68  add fp, jssp, #0x10 (16)
0xffff582109c8    72  ldr x17, pc+24 (addr 0x0000ffff582109e0)    ;; lazy deoptimization bailout 0
0xffff582109cc    76  add x17, x17, x16
0xffff582109d0    80  br x17
0xffff582109d4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582109d8    88  d63f03e0       constant
0xffff582109dc    92  d503201f       constant
0xffff582109e0    96  58006000       constant
0xffff582109e4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582109c8  runtime entry
0xffff582109d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2464
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff58210a60     0  mov x2, x0
0xffff58210a64     4  tbnz w2, #0, #+0xac (addr 0xffff58210b10)
0xffff58210a68     8  tbnz w1, #0, #+0x18 (addr 0xffff58210a80)
0xffff58210a6c    12  asr x4, x1, #32
0xffff58210a70    16  asr x0, x2, #32
0xffff58210a74    20  orr w0, w0, w4
0xffff58210a78    24  lsl x0, x0, #32
0xffff58210a7c    28  ret
0xffff58210a80    32  sub csp, jssp, #0x10 (16)
0xffff58210a84    36  stp fp, lr, [jssp, #-16]!
0xffff58210a88    40  movz fp, #0xa00000000
0xffff58210a8c    44  sub csp, jssp, #0x8 (8)
0xffff58210a90    48  str fp, [jssp, #-8]!
0xffff58210a94    52  add fp, jssp, #0x8 (8)
0xffff58210a98    56  ldur x16, [x1, #-1]
0xffff58210a9c    60  ldr x17, [x26, #120]
0xffff58210aa0    64  cmp x16, x17
0xffff58210aa4    68  b.ne #+0x30 (addr 0xffff58210ad4)
0xffff58210aa8    72  ldur d30, [x1, #7]
0xffff58210aac    76  fcvtzs x4, d30
0xffff58210ab0    80  cmp x4, #0x1 (1)
0xffff58210ab4    84  ccmn x4, #1, #nzcV, vc
0xffff58210ab8    88  b.vc #+0x18 (addr 0xffff58210ad0)
0xffff58210abc    92  sub csp, jssp, #0x8 (8)
0xffff58210ac0    96  str lr, [jssp, #-8]!
0xffff58210ac4   100  ldr x16, pc+68 (addr 0x0000ffff58210b08)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58210ac8   104  blr x16
0xffff58210acc   108  ldr lr, [jssp], #8
0xffff58210ad0   112  b #+0x24 (addr 0xffff58210af4)
0xffff58210ad4   116  ldp x4, x3, [x26, #64]
0xffff58210ad8   120  cmp x1, x4
0xffff58210adc   124  cset x4, eq
0xffff58210ae0   128  ccmp x1, x3, #nZcv, ne
0xffff58210ae4   132  b.eq #+0x10 (addr 0xffff58210af4)
0xffff58210ae8   136  ldr x16, [x26, #40]
0xffff58210aec   140  cmp x1, x16
0xffff58210af0   144  b.ne #+0x30 (addr 0xffff58210b20)
0xffff58210af4   148  ldr lr, [jssp, #16]
0xffff58210af8   152  ldp xzr, fp, [jssp], #24
0xffff58210afc   156  b #-0x8c (addr 0xffff58210a70)
0xffff58210b00   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58210b04   164  d63f03e0       constant
0xffff58210b08   168  5820fee0       constant
0xffff58210b0c   172  0000ffff       constant
0xffff58210b10   176  movz x16, #0x0
0xffff58210b14   180  sub csp, jssp, #0x10 (16)
0xffff58210b18   184  stp fp, lr, [jssp, #-16]!
0xffff58210b1c   188  bl #+0xc (addr 0xffff58210b28)
0xffff58210b20   192  movz x16, #0x8
0xffff58210b24   196  bl #+0x14 (addr 0xffff58210b38)
0xffff58210b28   200  movz x17, #0xa00000000
0xffff58210b2c   204  sub csp, jssp, #0x10 (16)
0xffff58210b30   208  stp x17, cp, [jssp, #-16]!
0xffff58210b34   212  add fp, jssp, #0x10 (16)
0xffff58210b38   216  ldr x17, pc+24 (addr 0x0000ffff58210b50)    ;; lazy deoptimization bailout 0
0xffff58210b3c   220  add x17, x17, x16
0xffff58210b40   224  br x17
0xffff58210b44   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210b48   232  d63f03e0       constant
0xffff58210b4c   236  d503201f       constant
0xffff58210b50   240  58006000       constant
0xffff58210b54   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58210ac4  code target (STUB)  (0xffff5820fee0)
0xffff58210b00  constant pool (size 16)
0xffff58210b38  runtime entry
0xffff58210b44  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2464
type = NORMAL
name = BinaryOpICStub(BIT_OR:Number*Smi->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff58210a60     0  mov x2, x0
0xffff58210a64     4  tbnz w2, #0, #+0xac (addr 0xffff58210b10)
0xffff58210a68     8  tbnz w1, #0, #+0x18 (addr 0xffff58210a80)
0xffff58210a6c    12  asr x4, x1, #32
0xffff58210a70    16  asr x0, x2, #32
0xffff58210a74    20  orr w0, w0, w4
0xffff58210a78    24  lsl x0, x0, #32
0xffff58210a7c    28  ret
0xffff58210a80    32  sub csp, jssp, #0x10 (16)
0xffff58210a84    36  stp fp, lr, [jssp, #-16]!
0xffff58210a88    40  movz fp, #0xa00000000
0xffff58210a8c    44  sub csp, jssp, #0x8 (8)
0xffff58210a90    48  str fp, [jssp, #-8]!
0xffff58210a94    52  add fp, jssp, #0x8 (8)
0xffff58210a98    56  ldur x16, [x1, #-1]
0xffff58210a9c    60  ldr x17, [x26, #120]
0xffff58210aa0    64  cmp x16, x17
0xffff58210aa4    68  b.ne #+0x30 (addr 0xffff58210ad4)
0xffff58210aa8    72  ldur d30, [x1, #7]
0xffff58210aac    76  fcvtzs x4, d30
0xffff58210ab0    80  cmp x4, #0x1 (1)
0xffff58210ab4    84  ccmn x4, #1, #nzcV, vc
0xffff58210ab8    88  b.vc #+0x18 (addr 0xffff58210ad0)
0xffff58210abc    92  sub csp, jssp, #0x8 (8)
0xffff58210ac0    96  str lr, [jssp, #-8]!
0xffff58210ac4   100  ldr x16, pc+68 (addr 0x0000ffff58210b08)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58210ac8   104  blr x16
0xffff58210acc   108  ldr lr, [jssp], #8
0xffff58210ad0   112  b #+0x24 (addr 0xffff58210af4)
0xffff58210ad4   116  ldp x4, x3, [x26, #64]
0xffff58210ad8   120  cmp x1, x4
0xffff58210adc   124  cset x4, eq
0xffff58210ae0   128  ccmp x1, x3, #nZcv, ne
0xffff58210ae4   132  b.eq #+0x10 (addr 0xffff58210af4)
0xffff58210ae8   136  ldr x16, [x26, #40]
0xffff58210aec   140  cmp x1, x16
0xffff58210af0   144  b.ne #+0x30 (addr 0xffff58210b20)
0xffff58210af4   148  ldr lr, [jssp, #16]
0xffff58210af8   152  ldp xzr, fp, [jssp], #24
0xffff58210afc   156  b #-0x8c (addr 0xffff58210a70)
0xffff58210b00   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58210b04   164  d63f03e0       constant
0xffff58210b08   168  5820fee0       constant
0xffff58210b0c   172  0000ffff       constant
0xffff58210b10   176  movz x16, #0x0
0xffff58210b14   180  sub csp, jssp, #0x10 (16)
0xffff58210b18   184  stp fp, lr, [jssp, #-16]!
0xffff58210b1c   188  bl #+0xc (addr 0xffff58210b28)
0xffff58210b20   192  movz x16, #0x8
0xffff58210b24   196  bl #+0x14 (addr 0xffff58210b38)
0xffff58210b28   200  movz x17, #0xa00000000
0xffff58210b2c   204  sub csp, jssp, #0x10 (16)
0xffff58210b30   208  stp x17, cp, [jssp, #-16]!
0xffff58210b34   212  add fp, jssp, #0x10 (16)
0xffff58210b38   216  ldr x17, pc+24 (addr 0x0000ffff58210b50)    ;; lazy deoptimization bailout 0
0xffff58210b3c   220  add x17, x17, x16
0xffff58210b40   224  br x17
0xffff58210b44   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210b48   232  d63f03e0       constant
0xffff58210b4c   236  d503201f       constant
0xffff58210b50   240  58006000       constant
0xffff58210b54   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58210ac4  code target (STUB)  (0xffff5820fee0)
0xffff58210b00  constant pool (size 16)
0xffff58210b38  runtime entry
0xffff58210b44  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2448
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff58210bc0     0  mov x2, x0
0xffff58210bc4     4  tbnz w2, #0, #+0xac (addr 0xffff58210c70)
0xffff58210bc8     8  tbnz w1, #0, #+0x18 (addr 0xffff58210be0)
0xffff58210bcc    12  asr x4, x1, #32
0xffff58210bd0    16  asr x0, x2, #32
0xffff58210bd4    20  orr w0, w0, w4
0xffff58210bd8    24  lsl x0, x0, #32
0xffff58210bdc    28  ret
0xffff58210be0    32  sub csp, jssp, #0x10 (16)
0xffff58210be4    36  stp fp, lr, [jssp, #-16]!
0xffff58210be8    40  movz fp, #0xa00000000
0xffff58210bec    44  sub csp, jssp, #0x8 (8)
0xffff58210bf0    48  str fp, [jssp, #-8]!
0xffff58210bf4    52  add fp, jssp, #0x8 (8)
0xffff58210bf8    56  ldur x16, [x1, #-1]
0xffff58210bfc    60  ldr x17, [x26, #120]
0xffff58210c00    64  cmp x16, x17
0xffff58210c04    68  b.ne #+0x30 (addr 0xffff58210c34)
0xffff58210c08    72  ldur d30, [x1, #7]
0xffff58210c0c    76  fcvtzs x4, d30
0xffff58210c10    80  cmp x4, #0x1 (1)
0xffff58210c14    84  ccmn x4, #1, #nzcV, vc
0xffff58210c18    88  b.vc #+0x18 (addr 0xffff58210c30)
0xffff58210c1c    92  sub csp, jssp, #0x8 (8)
0xffff58210c20    96  str lr, [jssp, #-8]!
0xffff58210c24   100  ldr x16, pc+68 (addr 0x0000ffff58210c68)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58210c28   104  blr x16
0xffff58210c2c   108  ldr lr, [jssp], #8
0xffff58210c30   112  b #+0x24 (addr 0xffff58210c54)
0xffff58210c34   116  ldp x4, x3, [x26, #64]
0xffff58210c38   120  cmp x1, x4
0xffff58210c3c   124  cset x4, eq
0xffff58210c40   128  ccmp x1, x3, #nZcv, ne
0xffff58210c44   132  b.eq #+0x10 (addr 0xffff58210c54)
0xffff58210c48   136  ldr x16, [x26, #40]
0xffff58210c4c   140  cmp x1, x16
0xffff58210c50   144  b.ne #+0x30 (addr 0xffff58210c80)
0xffff58210c54   148  ldr lr, [jssp, #16]
0xffff58210c58   152  ldp xzr, fp, [jssp], #24
0xffff58210c5c   156  b #-0x8c (addr 0xffff58210bd0)
0xffff58210c60   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58210c64   164  d63f03e0       constant
0xffff58210c68   168  5820fee0       constant
0xffff58210c6c   172  0000ffff       constant
0xffff58210c70   176  movz x16, #0x0
0xffff58210c74   180  sub csp, jssp, #0x10 (16)
0xffff58210c78   184  stp fp, lr, [jssp, #-16]!
0xffff58210c7c   188  bl #+0xc (addr 0xffff58210c88)
0xffff58210c80   192  movz x16, #0x8
0xffff58210c84   196  bl #+0x14 (addr 0xffff58210c98)
0xffff58210c88   200  movz x17, #0xa00000000
0xffff58210c8c   204  sub csp, jssp, #0x10 (16)
0xffff58210c90   208  stp x17, cp, [jssp, #-16]!
0xffff58210c94   212  add fp, jssp, #0x10 (16)
0xffff58210c98   216  ldr x17, pc+24 (addr 0x0000ffff58210cb0)    ;; lazy deoptimization bailout 0
0xffff58210c9c   220  add x17, x17, x16
0xffff58210ca0   224  br x17
0xffff58210ca4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210ca8   232  d63f03e0       constant
0xffff58210cac   236  d503201f       constant
0xffff58210cb0   240  58006000       constant
0xffff58210cb4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58210c24  code target (STUB)  (0xffff5820fee0)
0xffff58210c60  constant pool (size 16)
0xffff58210c98  runtime entry
0xffff58210ca4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2448
type = NORMAL
name = BinaryOpICStub(BIT_OR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff58210bc0     0  mov x2, x0
0xffff58210bc4     4  tbnz w2, #0, #+0xac (addr 0xffff58210c70)
0xffff58210bc8     8  tbnz w1, #0, #+0x18 (addr 0xffff58210be0)
0xffff58210bcc    12  asr x4, x1, #32
0xffff58210bd0    16  asr x0, x2, #32
0xffff58210bd4    20  orr w0, w0, w4
0xffff58210bd8    24  lsl x0, x0, #32
0xffff58210bdc    28  ret
0xffff58210be0    32  sub csp, jssp, #0x10 (16)
0xffff58210be4    36  stp fp, lr, [jssp, #-16]!
0xffff58210be8    40  movz fp, #0xa00000000
0xffff58210bec    44  sub csp, jssp, #0x8 (8)
0xffff58210bf0    48  str fp, [jssp, #-8]!
0xffff58210bf4    52  add fp, jssp, #0x8 (8)
0xffff58210bf8    56  ldur x16, [x1, #-1]
0xffff58210bfc    60  ldr x17, [x26, #120]
0xffff58210c00    64  cmp x16, x17
0xffff58210c04    68  b.ne #+0x30 (addr 0xffff58210c34)
0xffff58210c08    72  ldur d30, [x1, #7]
0xffff58210c0c    76  fcvtzs x4, d30
0xffff58210c10    80  cmp x4, #0x1 (1)
0xffff58210c14    84  ccmn x4, #1, #nzcV, vc
0xffff58210c18    88  b.vc #+0x18 (addr 0xffff58210c30)
0xffff58210c1c    92  sub csp, jssp, #0x8 (8)
0xffff58210c20    96  str lr, [jssp, #-8]!
0xffff58210c24   100  ldr x16, pc+68 (addr 0x0000ffff58210c68)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58210c28   104  blr x16
0xffff58210c2c   108  ldr lr, [jssp], #8
0xffff58210c30   112  b #+0x24 (addr 0xffff58210c54)
0xffff58210c34   116  ldp x4, x3, [x26, #64]
0xffff58210c38   120  cmp x1, x4
0xffff58210c3c   124  cset x4, eq
0xffff58210c40   128  ccmp x1, x3, #nZcv, ne
0xffff58210c44   132  b.eq #+0x10 (addr 0xffff58210c54)
0xffff58210c48   136  ldr x16, [x26, #40]
0xffff58210c4c   140  cmp x1, x16
0xffff58210c50   144  b.ne #+0x30 (addr 0xffff58210c80)
0xffff58210c54   148  ldr lr, [jssp, #16]
0xffff58210c58   152  ldp xzr, fp, [jssp], #24
0xffff58210c5c   156  b #-0x8c (addr 0xffff58210bd0)
0xffff58210c60   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58210c64   164  d63f03e0       constant
0xffff58210c68   168  5820fee0       constant
0xffff58210c6c   172  0000ffff       constant
0xffff58210c70   176  movz x16, #0x0
0xffff58210c74   180  sub csp, jssp, #0x10 (16)
0xffff58210c78   184  stp fp, lr, [jssp, #-16]!
0xffff58210c7c   188  bl #+0xc (addr 0xffff58210c88)
0xffff58210c80   192  movz x16, #0x8
0xffff58210c84   196  bl #+0x14 (addr 0xffff58210c98)
0xffff58210c88   200  movz x17, #0xa00000000
0xffff58210c8c   204  sub csp, jssp, #0x10 (16)
0xffff58210c90   208  stp x17, cp, [jssp, #-16]!
0xffff58210c94   212  add fp, jssp, #0x10 (16)
0xffff58210c98   216  ldr x17, pc+24 (addr 0x0000ffff58210cb0)    ;; lazy deoptimization bailout 0
0xffff58210c9c   220  add x17, x17, x16
0xffff58210ca0   224  br x17
0xffff58210ca4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210ca8   232  d63f03e0       constant
0xffff58210cac   236  d503201f       constant
0xffff58210cb0   240  58006000       constant
0xffff58210cb4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58210c24  code target (STUB)  (0xffff5820fee0)
0xffff58210c60  constant pool (size 16)
0xffff58210c98  runtime entry
0xffff58210ca4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4256
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff58210d20     0  mov x2, x1
0xffff58210d24     4  tbnz w2, #0, #+0x14 (addr 0xffff58210d38)
0xffff58210d28     8  mov x3, x0
0xffff58210d2c    12  tbnz w3, #0, #+0x1c (addr 0xffff58210d48)
0xffff58210d30    16  orr x0, x3, x2
0xffff58210d34    20  ret
0xffff58210d38    24  movz x16, #0x0
0xffff58210d3c    28  sub csp, jssp, #0x10 (16)
0xffff58210d40    32  stp fp, lr, [jssp, #-16]!
0xffff58210d44    36  bl #+0x14 (addr 0xffff58210d58)
0xffff58210d48    40  movz x16, #0x8
0xffff58210d4c    44  sub csp, jssp, #0x10 (16)
0xffff58210d50    48  stp fp, lr, [jssp, #-16]!
0xffff58210d54    52  bl #+0x4 (addr 0xffff58210d58)
0xffff58210d58    56  movz x17, #0xa00000000
0xffff58210d5c    60  sub csp, jssp, #0x10 (16)
0xffff58210d60    64  stp x17, cp, [jssp, #-16]!
0xffff58210d64    68  add fp, jssp, #0x10 (16)
0xffff58210d68    72  ldr x17, pc+24 (addr 0x0000ffff58210d80)    ;; lazy deoptimization bailout 0
0xffff58210d6c    76  add x17, x17, x16
0xffff58210d70    80  br x17
0xffff58210d74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210d78    88  d63f03e0       constant
0xffff58210d7c    92  d503201f       constant
0xffff58210d80    96  58006000       constant
0xffff58210d84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210d68  runtime entry
0xffff58210d74  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4256
type = NORMAL
name = BinaryOpICStub(BIT_OR:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff58210d20     0  mov x2, x1
0xffff58210d24     4  tbnz w2, #0, #+0x14 (addr 0xffff58210d38)
0xffff58210d28     8  mov x3, x0
0xffff58210d2c    12  tbnz w3, #0, #+0x1c (addr 0xffff58210d48)
0xffff58210d30    16  orr x0, x3, x2
0xffff58210d34    20  ret
0xffff58210d38    24  movz x16, #0x0
0xffff58210d3c    28  sub csp, jssp, #0x10 (16)
0xffff58210d40    32  stp fp, lr, [jssp, #-16]!
0xffff58210d44    36  bl #+0x14 (addr 0xffff58210d58)
0xffff58210d48    40  movz x16, #0x8
0xffff58210d4c    44  sub csp, jssp, #0x10 (16)
0xffff58210d50    48  stp fp, lr, [jssp, #-16]!
0xffff58210d54    52  bl #+0x4 (addr 0xffff58210d58)
0xffff58210d58    56  movz x17, #0xa00000000
0xffff58210d5c    60  sub csp, jssp, #0x10 (16)
0xffff58210d60    64  stp x17, cp, [jssp, #-16]!
0xffff58210d64    68  add fp, jssp, #0x10 (16)
0xffff58210d68    72  ldr x17, pc+24 (addr 0x0000ffff58210d80)    ;; lazy deoptimization bailout 0
0xffff58210d6c    76  add x17, x17, x16
0xffff58210d70    80  br x17
0xffff58210d74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210d78    88  d63f03e0       constant
0xffff58210d7c    92  d503201f       constant
0xffff58210d80    96  58006000       constant
0xffff58210d84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210d68  runtime entry
0xffff58210d74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4240
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff58210e00     0  mov x2, x1
0xffff58210e04     4  tbnz w2, #0, #+0x14 (addr 0xffff58210e18)
0xffff58210e08     8  mov x3, x0
0xffff58210e0c    12  tbnz w3, #0, #+0x1c (addr 0xffff58210e28)
0xffff58210e10    16  orr x0, x3, x2
0xffff58210e14    20  ret
0xffff58210e18    24  movz x16, #0x0
0xffff58210e1c    28  sub csp, jssp, #0x10 (16)
0xffff58210e20    32  stp fp, lr, [jssp, #-16]!
0xffff58210e24    36  bl #+0x14 (addr 0xffff58210e38)
0xffff58210e28    40  movz x16, #0x8
0xffff58210e2c    44  sub csp, jssp, #0x10 (16)
0xffff58210e30    48  stp fp, lr, [jssp, #-16]!
0xffff58210e34    52  bl #+0x4 (addr 0xffff58210e38)
0xffff58210e38    56  movz x17, #0xa00000000
0xffff58210e3c    60  sub csp, jssp, #0x10 (16)
0xffff58210e40    64  stp x17, cp, [jssp, #-16]!
0xffff58210e44    68  add fp, jssp, #0x10 (16)
0xffff58210e48    72  ldr x17, pc+24 (addr 0x0000ffff58210e60)    ;; lazy deoptimization bailout 0
0xffff58210e4c    76  add x17, x17, x16
0xffff58210e50    80  br x17
0xffff58210e54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210e58    88  d63f03e0       constant
0xffff58210e5c    92  d503201f       constant
0xffff58210e60    96  58006000       constant
0xffff58210e64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210e48  runtime entry
0xffff58210e54  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4240
type = NORMAL
name = BinaryOpICStub(BIT_OR:Smi*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff58210e00     0  mov x2, x1
0xffff58210e04     4  tbnz w2, #0, #+0x14 (addr 0xffff58210e18)
0xffff58210e08     8  mov x3, x0
0xffff58210e0c    12  tbnz w3, #0, #+0x1c (addr 0xffff58210e28)
0xffff58210e10    16  orr x0, x3, x2
0xffff58210e14    20  ret
0xffff58210e18    24  movz x16, #0x0
0xffff58210e1c    28  sub csp, jssp, #0x10 (16)
0xffff58210e20    32  stp fp, lr, [jssp, #-16]!
0xffff58210e24    36  bl #+0x14 (addr 0xffff58210e38)
0xffff58210e28    40  movz x16, #0x8
0xffff58210e2c    44  sub csp, jssp, #0x10 (16)
0xffff58210e30    48  stp fp, lr, [jssp, #-16]!
0xffff58210e34    52  bl #+0x4 (addr 0xffff58210e38)
0xffff58210e38    56  movz x17, #0xa00000000
0xffff58210e3c    60  sub csp, jssp, #0x10 (16)
0xffff58210e40    64  stp x17, cp, [jssp, #-16]!
0xffff58210e44    68  add fp, jssp, #0x10 (16)
0xffff58210e48    72  ldr x17, pc+24 (addr 0x0000ffff58210e60)    ;; lazy deoptimization bailout 0
0xffff58210e4c    76  add x17, x17, x16
0xffff58210e50    80  br x17
0xffff58210e54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210e58    88  d63f03e0       constant
0xffff58210e5c    92  d503201f       constant
0xffff58210e60    96  58006000       constant
0xffff58210e64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210e48  runtime entry
0xffff58210e54  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2192
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff58210ee0     0  mov x2, x1
0xffff58210ee4     4  tbnz w2, #0, #+0x14 (addr 0xffff58210ef8)
0xffff58210ee8     8  mov x3, x0
0xffff58210eec    12  tbnz w3, #0, #+0x1c (addr 0xffff58210f08)
0xffff58210ef0    16  orr x0, x3, x2
0xffff58210ef4    20  ret
0xffff58210ef8    24  movz x16, #0x0
0xffff58210efc    28  sub csp, jssp, #0x10 (16)
0xffff58210f00    32  stp fp, lr, [jssp, #-16]!
0xffff58210f04    36  bl #+0x14 (addr 0xffff58210f18)
0xffff58210f08    40  movz x16, #0x8
0xffff58210f0c    44  sub csp, jssp, #0x10 (16)
0xffff58210f10    48  stp fp, lr, [jssp, #-16]!
0xffff58210f14    52  bl #+0x4 (addr 0xffff58210f18)
0xffff58210f18    56  movz x17, #0xa00000000
0xffff58210f1c    60  sub csp, jssp, #0x10 (16)
0xffff58210f20    64  stp x17, cp, [jssp, #-16]!
0xffff58210f24    68  add fp, jssp, #0x10 (16)
0xffff58210f28    72  ldr x17, pc+24 (addr 0x0000ffff58210f40)    ;; lazy deoptimization bailout 0
0xffff58210f2c    76  add x17, x17, x16
0xffff58210f30    80  br x17
0xffff58210f34    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210f38    88  d63f03e0       constant
0xffff58210f3c    92  d503201f       constant
0xffff58210f40    96  58006000       constant
0xffff58210f44   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210f28  runtime entry
0xffff58210f34  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2192
type = NORMAL
name = BinaryOpICStub(BIT_OR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff58210ee0     0  mov x2, x1
0xffff58210ee4     4  tbnz w2, #0, #+0x14 (addr 0xffff58210ef8)
0xffff58210ee8     8  mov x3, x0
0xffff58210eec    12  tbnz w3, #0, #+0x1c (addr 0xffff58210f08)
0xffff58210ef0    16  orr x0, x3, x2
0xffff58210ef4    20  ret
0xffff58210ef8    24  movz x16, #0x0
0xffff58210efc    28  sub csp, jssp, #0x10 (16)
0xffff58210f00    32  stp fp, lr, [jssp, #-16]!
0xffff58210f04    36  bl #+0x14 (addr 0xffff58210f18)
0xffff58210f08    40  movz x16, #0x8
0xffff58210f0c    44  sub csp, jssp, #0x10 (16)
0xffff58210f10    48  stp fp, lr, [jssp, #-16]!
0xffff58210f14    52  bl #+0x4 (addr 0xffff58210f18)
0xffff58210f18    56  movz x17, #0xa00000000
0xffff58210f1c    60  sub csp, jssp, #0x10 (16)
0xffff58210f20    64  stp x17, cp, [jssp, #-16]!
0xffff58210f24    68  add fp, jssp, #0x10 (16)
0xffff58210f28    72  ldr x17, pc+24 (addr 0x0000ffff58210f40)    ;; lazy deoptimization bailout 0
0xffff58210f2c    76  add x17, x17, x16
0xffff58210f30    80  br x17
0xffff58210f34    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58210f38    88  d63f03e0       constant
0xffff58210f3c    92  d503201f       constant
0xffff58210f40    96  58006000       constant
0xffff58210f44   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58210f28  runtime entry
0xffff58210f34  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4385
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff58210fc0     0  mov x2, x1
0xffff58210fc4     4  tbnz w2, #0, #+0x14 (addr 0xffff58210fd8)
0xffff58210fc8     8  mov x3, x0
0xffff58210fcc    12  tbnz w3, #0, #+0x1c (addr 0xffff58210fe8)
0xffff58210fd0    16  eor x0, x3, x2
0xffff58210fd4    20  ret
0xffff58210fd8    24  movz x16, #0x0
0xffff58210fdc    28  sub csp, jssp, #0x10 (16)
0xffff58210fe0    32  stp fp, lr, [jssp, #-16]!
0xffff58210fe4    36  bl #+0x14 (addr 0xffff58210ff8)
0xffff58210fe8    40  movz x16, #0x8
0xffff58210fec    44  sub csp, jssp, #0x10 (16)
0xffff58210ff0    48  stp fp, lr, [jssp, #-16]!
0xffff58210ff4    52  bl #+0x4 (addr 0xffff58210ff8)
0xffff58210ff8    56  movz x17, #0xa00000000
0xffff58210ffc    60  sub csp, jssp, #0x10 (16)
0xffff58211000    64  stp x17, cp, [jssp, #-16]!
0xffff58211004    68  add fp, jssp, #0x10 (16)
0xffff58211008    72  ldr x17, pc+24 (addr 0x0000ffff58211020)    ;; lazy deoptimization bailout 0
0xffff5821100c    76  add x17, x17, x16
0xffff58211010    80  br x17
0xffff58211014    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211018    88  d63f03e0       constant
0xffff5821101c    92  d503201f       constant
0xffff58211020    96  58006000       constant
0xffff58211024   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211008  runtime entry
0xffff58211014  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4385
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff58210fc0     0  mov x2, x1
0xffff58210fc4     4  tbnz w2, #0, #+0x14 (addr 0xffff58210fd8)
0xffff58210fc8     8  mov x3, x0
0xffff58210fcc    12  tbnz w3, #0, #+0x1c (addr 0xffff58210fe8)
0xffff58210fd0    16  eor x0, x3, x2
0xffff58210fd4    20  ret
0xffff58210fd8    24  movz x16, #0x0
0xffff58210fdc    28  sub csp, jssp, #0x10 (16)
0xffff58210fe0    32  stp fp, lr, [jssp, #-16]!
0xffff58210fe4    36  bl #+0x14 (addr 0xffff58210ff8)
0xffff58210fe8    40  movz x16, #0x8
0xffff58210fec    44  sub csp, jssp, #0x10 (16)
0xffff58210ff0    48  stp fp, lr, [jssp, #-16]!
0xffff58210ff4    52  bl #+0x4 (addr 0xffff58210ff8)
0xffff58210ff8    56  movz x17, #0xa00000000
0xffff58210ffc    60  sub csp, jssp, #0x10 (16)
0xffff58211000    64  stp x17, cp, [jssp, #-16]!
0xffff58211004    68  add fp, jssp, #0x10 (16)
0xffff58211008    72  ldr x17, pc+24 (addr 0x0000ffff58211020)    ;; lazy deoptimization bailout 0
0xffff5821100c    76  add x17, x17, x16
0xffff58211010    80  br x17
0xffff58211014    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211018    88  d63f03e0       constant
0xffff5821101c    92  d503201f       constant
0xffff58211020    96  58006000       constant
0xffff58211024   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211008  runtime entry
0xffff58211014  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4369
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff582110a0     0  mov x2, x1
0xffff582110a4     4  tbnz w2, #0, #+0x14 (addr 0xffff582110b8)
0xffff582110a8     8  mov x3, x0
0xffff582110ac    12  tbnz w3, #0, #+0x1c (addr 0xffff582110c8)
0xffff582110b0    16  eor x0, x3, x2
0xffff582110b4    20  ret
0xffff582110b8    24  movz x16, #0x0
0xffff582110bc    28  sub csp, jssp, #0x10 (16)
0xffff582110c0    32  stp fp, lr, [jssp, #-16]!
0xffff582110c4    36  bl #+0x14 (addr 0xffff582110d8)
0xffff582110c8    40  movz x16, #0x8
0xffff582110cc    44  sub csp, jssp, #0x10 (16)
0xffff582110d0    48  stp fp, lr, [jssp, #-16]!
0xffff582110d4    52  bl #+0x4 (addr 0xffff582110d8)
0xffff582110d8    56  movz x17, #0xa00000000
0xffff582110dc    60  sub csp, jssp, #0x10 (16)
0xffff582110e0    64  stp x17, cp, [jssp, #-16]!
0xffff582110e4    68  add fp, jssp, #0x10 (16)
0xffff582110e8    72  ldr x17, pc+24 (addr 0x0000ffff58211100)    ;; lazy deoptimization bailout 0
0xffff582110ec    76  add x17, x17, x16
0xffff582110f0    80  br x17
0xffff582110f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582110f8    88  d63f03e0       constant
0xffff582110fc    92  d503201f       constant
0xffff58211100    96  58006000       constant
0xffff58211104   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582110e8  runtime entry
0xffff582110f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4369
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff582110a0     0  mov x2, x1
0xffff582110a4     4  tbnz w2, #0, #+0x14 (addr 0xffff582110b8)
0xffff582110a8     8  mov x3, x0
0xffff582110ac    12  tbnz w3, #0, #+0x1c (addr 0xffff582110c8)
0xffff582110b0    16  eor x0, x3, x2
0xffff582110b4    20  ret
0xffff582110b8    24  movz x16, #0x0
0xffff582110bc    28  sub csp, jssp, #0x10 (16)
0xffff582110c0    32  stp fp, lr, [jssp, #-16]!
0xffff582110c4    36  bl #+0x14 (addr 0xffff582110d8)
0xffff582110c8    40  movz x16, #0x8
0xffff582110cc    44  sub csp, jssp, #0x10 (16)
0xffff582110d0    48  stp fp, lr, [jssp, #-16]!
0xffff582110d4    52  bl #+0x4 (addr 0xffff582110d8)
0xffff582110d8    56  movz x17, #0xa00000000
0xffff582110dc    60  sub csp, jssp, #0x10 (16)
0xffff582110e0    64  stp x17, cp, [jssp, #-16]!
0xffff582110e4    68  add fp, jssp, #0x10 (16)
0xffff582110e8    72  ldr x17, pc+24 (addr 0x0000ffff58211100)    ;; lazy deoptimization bailout 0
0xffff582110ec    76  add x17, x17, x16
0xffff582110f0    80  br x17
0xffff582110f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582110f8    88  d63f03e0       constant
0xffff582110fc    92  d503201f       constant
0xffff58211100    96  58006000       constant
0xffff58211104   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582110e8  runtime entry
0xffff582110f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6417
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff58211180     0  mov x2, x1
0xffff58211184     4  tbnz w2, #0, #+0xac (addr 0xffff58211230)
0xffff58211188     8  tbnz w0, #0, #+0x18 (addr 0xffff582111a0)
0xffff5821118c    12  asr x4, x0, #32
0xffff58211190    16  asr x0, x2, #32
0xffff58211194    20  eor w0, w4, w0
0xffff58211198    24  lsl x0, x0, #32
0xffff5821119c    28  ret
0xffff582111a0    32  sub csp, jssp, #0x10 (16)
0xffff582111a4    36  stp fp, lr, [jssp, #-16]!
0xffff582111a8    40  movz fp, #0xa00000000
0xffff582111ac    44  sub csp, jssp, #0x8 (8)
0xffff582111b0    48  str fp, [jssp, #-8]!
0xffff582111b4    52  add fp, jssp, #0x8 (8)
0xffff582111b8    56  ldur x16, [x0, #-1]
0xffff582111bc    60  ldr x17, [x26, #120]
0xffff582111c0    64  cmp x16, x17
0xffff582111c4    68  b.ne #+0x30 (addr 0xffff582111f4)
0xffff582111c8    72  ldur d30, [x0, #7]
0xffff582111cc    76  fcvtzs x4, d30
0xffff582111d0    80  cmp x4, #0x1 (1)
0xffff582111d4    84  ccmn x4, #1, #nzcV, vc
0xffff582111d8    88  b.vc #+0x18 (addr 0xffff582111f0)
0xffff582111dc    92  sub csp, jssp, #0x8 (8)
0xffff582111e0    96  str lr, [jssp, #-8]!
0xffff582111e4   100  ldr x16, pc+68 (addr 0x0000ffff58211228)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff582111e8   104  blr x16
0xffff582111ec   108  ldr lr, [jssp], #8
0xffff582111f0   112  b #+0x24 (addr 0xffff58211214)
0xffff582111f4   116  ldp x4, x3, [x26, #64]
0xffff582111f8   120  cmp x0, x4
0xffff582111fc   124  cset x4, eq
0xffff58211200   128  ccmp x0, x3, #nZcv, ne
0xffff58211204   132  b.eq #+0x10 (addr 0xffff58211214)
0xffff58211208   136  ldr x16, [x26, #40]
0xffff5821120c   140  cmp x0, x16
0xffff58211210   144  b.ne #+0x30 (addr 0xffff58211240)
0xffff58211214   148  ldr lr, [jssp, #16]
0xffff58211218   152  ldp xzr, fp, [jssp], #24
0xffff5821121c   156  b #-0x8c (addr 0xffff58211190)
0xffff58211220   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58211224   164  d63f03e0       constant
0xffff58211228   168  58210400       constant
0xffff5821122c   172  0000ffff       constant
0xffff58211230   176  movz x16, #0x0
0xffff58211234   180  sub csp, jssp, #0x10 (16)
0xffff58211238   184  stp fp, lr, [jssp, #-16]!
0xffff5821123c   188  bl #+0xc (addr 0xffff58211248)
0xffff58211240   192  movz x16, #0x8
0xffff58211244   196  bl #+0x14 (addr 0xffff58211258)
0xffff58211248   200  movz x17, #0xa00000000
0xffff5821124c   204  sub csp, jssp, #0x10 (16)
0xffff58211250   208  stp x17, cp, [jssp, #-16]!
0xffff58211254   212  add fp, jssp, #0x10 (16)
0xffff58211258   216  ldr x17, pc+24 (addr 0x0000ffff58211270)    ;; lazy deoptimization bailout 0
0xffff5821125c   220  add x17, x17, x16
0xffff58211260   224  br x17
0xffff58211264   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211268   232  d63f03e0       constant
0xffff5821126c   236  d503201f       constant
0xffff58211270   240  58006000       constant
0xffff58211274   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582111e4  code target (STUB)  (0xffff58210400)
0xffff58211220  constant pool (size 16)
0xffff58211258  runtime entry
0xffff58211264  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6417
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Number->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff58211180     0  mov x2, x1
0xffff58211184     4  tbnz w2, #0, #+0xac (addr 0xffff58211230)
0xffff58211188     8  tbnz w0, #0, #+0x18 (addr 0xffff582111a0)
0xffff5821118c    12  asr x4, x0, #32
0xffff58211190    16  asr x0, x2, #32
0xffff58211194    20  eor w0, w4, w0
0xffff58211198    24  lsl x0, x0, #32
0xffff5821119c    28  ret
0xffff582111a0    32  sub csp, jssp, #0x10 (16)
0xffff582111a4    36  stp fp, lr, [jssp, #-16]!
0xffff582111a8    40  movz fp, #0xa00000000
0xffff582111ac    44  sub csp, jssp, #0x8 (8)
0xffff582111b0    48  str fp, [jssp, #-8]!
0xffff582111b4    52  add fp, jssp, #0x8 (8)
0xffff582111b8    56  ldur x16, [x0, #-1]
0xffff582111bc    60  ldr x17, [x26, #120]
0xffff582111c0    64  cmp x16, x17
0xffff582111c4    68  b.ne #+0x30 (addr 0xffff582111f4)
0xffff582111c8    72  ldur d30, [x0, #7]
0xffff582111cc    76  fcvtzs x4, d30
0xffff582111d0    80  cmp x4, #0x1 (1)
0xffff582111d4    84  ccmn x4, #1, #nzcV, vc
0xffff582111d8    88  b.vc #+0x18 (addr 0xffff582111f0)
0xffff582111dc    92  sub csp, jssp, #0x8 (8)
0xffff582111e0    96  str lr, [jssp, #-8]!
0xffff582111e4   100  ldr x16, pc+68 (addr 0x0000ffff58211228)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff582111e8   104  blr x16
0xffff582111ec   108  ldr lr, [jssp], #8
0xffff582111f0   112  b #+0x24 (addr 0xffff58211214)
0xffff582111f4   116  ldp x4, x3, [x26, #64]
0xffff582111f8   120  cmp x0, x4
0xffff582111fc   124  cset x4, eq
0xffff58211200   128  ccmp x0, x3, #nZcv, ne
0xffff58211204   132  b.eq #+0x10 (addr 0xffff58211214)
0xffff58211208   136  ldr x16, [x26, #40]
0xffff5821120c   140  cmp x0, x16
0xffff58211210   144  b.ne #+0x30 (addr 0xffff58211240)
0xffff58211214   148  ldr lr, [jssp, #16]
0xffff58211218   152  ldp xzr, fp, [jssp], #24
0xffff5821121c   156  b #-0x8c (addr 0xffff58211190)
0xffff58211220   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58211224   164  d63f03e0       constant
0xffff58211228   168  58210400       constant
0xffff5821122c   172  0000ffff       constant
0xffff58211230   176  movz x16, #0x0
0xffff58211234   180  sub csp, jssp, #0x10 (16)
0xffff58211238   184  stp fp, lr, [jssp, #-16]!
0xffff5821123c   188  bl #+0xc (addr 0xffff58211248)
0xffff58211240   192  movz x16, #0x8
0xffff58211244   196  bl #+0x14 (addr 0xffff58211258)
0xffff58211248   200  movz x17, #0xa00000000
0xffff5821124c   204  sub csp, jssp, #0x10 (16)
0xffff58211250   208  stp x17, cp, [jssp, #-16]!
0xffff58211254   212  add fp, jssp, #0x10 (16)
0xffff58211258   216  ldr x17, pc+24 (addr 0x0000ffff58211270)    ;; lazy deoptimization bailout 0
0xffff5821125c   220  add x17, x17, x16
0xffff58211260   224  br x17
0xffff58211264   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211268   232  d63f03e0       constant
0xffff5821126c   236  d503201f       constant
0xffff58211270   240  58006000       constant
0xffff58211274   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582111e4  code target (STUB)  (0xffff58210400)
0xffff58211220  constant pool (size 16)
0xffff58211258  runtime entry
0xffff58211264  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2337
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff582112e0     0  mov x2, x1
0xffff582112e4     4  tbnz w2, #0, #+0x14 (addr 0xffff582112f8)
0xffff582112e8     8  mov x3, x0
0xffff582112ec    12  tbnz w3, #0, #+0x1c (addr 0xffff58211308)
0xffff582112f0    16  eor x0, x3, x2
0xffff582112f4    20  ret
0xffff582112f8    24  movz x16, #0x0
0xffff582112fc    28  sub csp, jssp, #0x10 (16)
0xffff58211300    32  stp fp, lr, [jssp, #-16]!
0xffff58211304    36  bl #+0x14 (addr 0xffff58211318)
0xffff58211308    40  movz x16, #0x8
0xffff5821130c    44  sub csp, jssp, #0x10 (16)
0xffff58211310    48  stp fp, lr, [jssp, #-16]!
0xffff58211314    52  bl #+0x4 (addr 0xffff58211318)
0xffff58211318    56  movz x17, #0xa00000000
0xffff5821131c    60  sub csp, jssp, #0x10 (16)
0xffff58211320    64  stp x17, cp, [jssp, #-16]!
0xffff58211324    68  add fp, jssp, #0x10 (16)
0xffff58211328    72  ldr x17, pc+24 (addr 0x0000ffff58211340)    ;; lazy deoptimization bailout 0
0xffff5821132c    76  add x17, x17, x16
0xffff58211330    80  br x17
0xffff58211334    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211338    88  d63f03e0       constant
0xffff5821133c    92  d503201f       constant
0xffff58211340    96  58006000       constant
0xffff58211344   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211328  runtime entry
0xffff58211334  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2337
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff582112e0     0  mov x2, x1
0xffff582112e4     4  tbnz w2, #0, #+0x14 (addr 0xffff582112f8)
0xffff582112e8     8  mov x3, x0
0xffff582112ec    12  tbnz w3, #0, #+0x1c (addr 0xffff58211308)
0xffff582112f0    16  eor x0, x3, x2
0xffff582112f4    20  ret
0xffff582112f8    24  movz x16, #0x0
0xffff582112fc    28  sub csp, jssp, #0x10 (16)
0xffff58211300    32  stp fp, lr, [jssp, #-16]!
0xffff58211304    36  bl #+0x14 (addr 0xffff58211318)
0xffff58211308    40  movz x16, #0x8
0xffff5821130c    44  sub csp, jssp, #0x10 (16)
0xffff58211310    48  stp fp, lr, [jssp, #-16]!
0xffff58211314    52  bl #+0x4 (addr 0xffff58211318)
0xffff58211318    56  movz x17, #0xa00000000
0xffff5821131c    60  sub csp, jssp, #0x10 (16)
0xffff58211320    64  stp x17, cp, [jssp, #-16]!
0xffff58211324    68  add fp, jssp, #0x10 (16)
0xffff58211328    72  ldr x17, pc+24 (addr 0x0000ffff58211340)    ;; lazy deoptimization bailout 0
0xffff5821132c    76  add x17, x17, x16
0xffff58211330    80  br x17
0xffff58211334    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211338    88  d63f03e0       constant
0xffff5821133c    92  d503201f       constant
0xffff58211340    96  58006000       constant
0xffff58211344   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211328  runtime entry
0xffff58211334  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4513
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff582113c0     0  mov x2, x0
0xffff582113c4     4  tbnz w2, #0, #+0xac (addr 0xffff58211470)
0xffff582113c8     8  tbnz w1, #0, #+0x18 (addr 0xffff582113e0)
0xffff582113cc    12  asr x4, x1, #32
0xffff582113d0    16  asr x0, x2, #32
0xffff582113d4    20  eor w0, w0, w4
0xffff582113d8    24  lsl x0, x0, #32
0xffff582113dc    28  ret
0xffff582113e0    32  sub csp, jssp, #0x10 (16)
0xffff582113e4    36  stp fp, lr, [jssp, #-16]!
0xffff582113e8    40  movz fp, #0xa00000000
0xffff582113ec    44  sub csp, jssp, #0x8 (8)
0xffff582113f0    48  str fp, [jssp, #-8]!
0xffff582113f4    52  add fp, jssp, #0x8 (8)
0xffff582113f8    56  ldur x16, [x1, #-1]
0xffff582113fc    60  ldr x17, [x26, #120]
0xffff58211400    64  cmp x16, x17
0xffff58211404    68  b.ne #+0x30 (addr 0xffff58211434)
0xffff58211408    72  ldur d30, [x1, #7]
0xffff5821140c    76  fcvtzs x4, d30
0xffff58211410    80  cmp x4, #0x1 (1)
0xffff58211414    84  ccmn x4, #1, #nzcV, vc
0xffff58211418    88  b.vc #+0x18 (addr 0xffff58211430)
0xffff5821141c    92  sub csp, jssp, #0x8 (8)
0xffff58211420    96  str lr, [jssp, #-8]!
0xffff58211424   100  ldr x16, pc+68 (addr 0x0000ffff58211468)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58211428   104  blr x16
0xffff5821142c   108  ldr lr, [jssp], #8
0xffff58211430   112  b #+0x24 (addr 0xffff58211454)
0xffff58211434   116  ldp x4, x3, [x26, #64]
0xffff58211438   120  cmp x1, x4
0xffff5821143c   124  cset x4, eq
0xffff58211440   128  ccmp x1, x3, #nZcv, ne
0xffff58211444   132  b.eq #+0x10 (addr 0xffff58211454)
0xffff58211448   136  ldr x16, [x26, #40]
0xffff5821144c   140  cmp x1, x16
0xffff58211450   144  b.ne #+0x30 (addr 0xffff58211480)
0xffff58211454   148  ldr lr, [jssp, #16]
0xffff58211458   152  ldp xzr, fp, [jssp], #24
0xffff5821145c   156  b #-0x8c (addr 0xffff582113d0)
0xffff58211460   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58211464   164  d63f03e0       constant
0xffff58211468   168  5820fee0       constant
0xffff5821146c   172  0000ffff       constant
0xffff58211470   176  movz x16, #0x0
0xffff58211474   180  sub csp, jssp, #0x10 (16)
0xffff58211478   184  stp fp, lr, [jssp, #-16]!
0xffff5821147c   188  bl #+0xc (addr 0xffff58211488)
0xffff58211480   192  movz x16, #0x8
0xffff58211484   196  bl #+0x14 (addr 0xffff58211498)
0xffff58211488   200  movz x17, #0xa00000000
0xffff5821148c   204  sub csp, jssp, #0x10 (16)
0xffff58211490   208  stp x17, cp, [jssp, #-16]!
0xffff58211494   212  add fp, jssp, #0x10 (16)
0xffff58211498   216  ldr x17, pc+24 (addr 0x0000ffff582114b0)    ;; lazy deoptimization bailout 0
0xffff5821149c   220  add x17, x17, x16
0xffff582114a0   224  br x17
0xffff582114a4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582114a8   232  d63f03e0       constant
0xffff582114ac   236  d503201f       constant
0xffff582114b0   240  58006000       constant
0xffff582114b4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58211424  code target (STUB)  (0xffff5820fee0)
0xffff58211460  constant pool (size 16)
0xffff58211498  runtime entry
0xffff582114a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4513
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Number*Int32->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff582113c0     0  mov x2, x0
0xffff582113c4     4  tbnz w2, #0, #+0xac (addr 0xffff58211470)
0xffff582113c8     8  tbnz w1, #0, #+0x18 (addr 0xffff582113e0)
0xffff582113cc    12  asr x4, x1, #32
0xffff582113d0    16  asr x0, x2, #32
0xffff582113d4    20  eor w0, w0, w4
0xffff582113d8    24  lsl x0, x0, #32
0xffff582113dc    28  ret
0xffff582113e0    32  sub csp, jssp, #0x10 (16)
0xffff582113e4    36  stp fp, lr, [jssp, #-16]!
0xffff582113e8    40  movz fp, #0xa00000000
0xffff582113ec    44  sub csp, jssp, #0x8 (8)
0xffff582113f0    48  str fp, [jssp, #-8]!
0xffff582113f4    52  add fp, jssp, #0x8 (8)
0xffff582113f8    56  ldur x16, [x1, #-1]
0xffff582113fc    60  ldr x17, [x26, #120]
0xffff58211400    64  cmp x16, x17
0xffff58211404    68  b.ne #+0x30 (addr 0xffff58211434)
0xffff58211408    72  ldur d30, [x1, #7]
0xffff5821140c    76  fcvtzs x4, d30
0xffff58211410    80  cmp x4, #0x1 (1)
0xffff58211414    84  ccmn x4, #1, #nzcV, vc
0xffff58211418    88  b.vc #+0x18 (addr 0xffff58211430)
0xffff5821141c    92  sub csp, jssp, #0x8 (8)
0xffff58211420    96  str lr, [jssp, #-8]!
0xffff58211424   100  ldr x16, pc+68 (addr 0x0000ffff58211468)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58211428   104  blr x16
0xffff5821142c   108  ldr lr, [jssp], #8
0xffff58211430   112  b #+0x24 (addr 0xffff58211454)
0xffff58211434   116  ldp x4, x3, [x26, #64]
0xffff58211438   120  cmp x1, x4
0xffff5821143c   124  cset x4, eq
0xffff58211440   128  ccmp x1, x3, #nZcv, ne
0xffff58211444   132  b.eq #+0x10 (addr 0xffff58211454)
0xffff58211448   136  ldr x16, [x26, #40]
0xffff5821144c   140  cmp x1, x16
0xffff58211450   144  b.ne #+0x30 (addr 0xffff58211480)
0xffff58211454   148  ldr lr, [jssp, #16]
0xffff58211458   152  ldp xzr, fp, [jssp], #24
0xffff5821145c   156  b #-0x8c (addr 0xffff582113d0)
0xffff58211460   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58211464   164  d63f03e0       constant
0xffff58211468   168  5820fee0       constant
0xffff5821146c   172  0000ffff       constant
0xffff58211470   176  movz x16, #0x0
0xffff58211474   180  sub csp, jssp, #0x10 (16)
0xffff58211478   184  stp fp, lr, [jssp, #-16]!
0xffff5821147c   188  bl #+0xc (addr 0xffff58211488)
0xffff58211480   192  movz x16, #0x8
0xffff58211484   196  bl #+0x14 (addr 0xffff58211498)
0xffff58211488   200  movz x17, #0xa00000000
0xffff5821148c   204  sub csp, jssp, #0x10 (16)
0xffff58211490   208  stp x17, cp, [jssp, #-16]!
0xffff58211494   212  add fp, jssp, #0x10 (16)
0xffff58211498   216  ldr x17, pc+24 (addr 0x0000ffff582114b0)    ;; lazy deoptimization bailout 0
0xffff5821149c   220  add x17, x17, x16
0xffff582114a0   224  br x17
0xffff582114a4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582114a8   232  d63f03e0       constant
0xffff582114ac   236  d503201f       constant
0xffff582114b0   240  58006000       constant
0xffff582114b4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58211424  code target (STUB)  (0xffff5820fee0)
0xffff58211460  constant pool (size 16)
0xffff58211498  runtime entry
0xffff582114a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2465
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff58211520     0  mov x2, x0
0xffff58211524     4  tbnz w2, #0, #+0xac (addr 0xffff582115d0)
0xffff58211528     8  tbnz w1, #0, #+0x18 (addr 0xffff58211540)
0xffff5821152c    12  asr x4, x1, #32
0xffff58211530    16  asr x0, x2, #32
0xffff58211534    20  eor w0, w0, w4
0xffff58211538    24  lsl x0, x0, #32
0xffff5821153c    28  ret
0xffff58211540    32  sub csp, jssp, #0x10 (16)
0xffff58211544    36  stp fp, lr, [jssp, #-16]!
0xffff58211548    40  movz fp, #0xa00000000
0xffff5821154c    44  sub csp, jssp, #0x8 (8)
0xffff58211550    48  str fp, [jssp, #-8]!
0xffff58211554    52  add fp, jssp, #0x8 (8)
0xffff58211558    56  ldur x16, [x1, #-1]
0xffff5821155c    60  ldr x17, [x26, #120]
0xffff58211560    64  cmp x16, x17
0xffff58211564    68  b.ne #+0x30 (addr 0xffff58211594)
0xffff58211568    72  ldur d30, [x1, #7]
0xffff5821156c    76  fcvtzs x4, d30
0xffff58211570    80  cmp x4, #0x1 (1)
0xffff58211574    84  ccmn x4, #1, #nzcV, vc
0xffff58211578    88  b.vc #+0x18 (addr 0xffff58211590)
0xffff5821157c    92  sub csp, jssp, #0x8 (8)
0xffff58211580    96  str lr, [jssp, #-8]!
0xffff58211584   100  ldr x16, pc+68 (addr 0x0000ffff582115c8)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58211588   104  blr x16
0xffff5821158c   108  ldr lr, [jssp], #8
0xffff58211590   112  b #+0x24 (addr 0xffff582115b4)
0xffff58211594   116  ldp x4, x3, [x26, #64]
0xffff58211598   120  cmp x1, x4
0xffff5821159c   124  cset x4, eq
0xffff582115a0   128  ccmp x1, x3, #nZcv, ne
0xffff582115a4   132  b.eq #+0x10 (addr 0xffff582115b4)
0xffff582115a8   136  ldr x16, [x26, #40]
0xffff582115ac   140  cmp x1, x16
0xffff582115b0   144  b.ne #+0x30 (addr 0xffff582115e0)
0xffff582115b4   148  ldr lr, [jssp, #16]
0xffff582115b8   152  ldp xzr, fp, [jssp], #24
0xffff582115bc   156  b #-0x8c (addr 0xffff58211530)
0xffff582115c0   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582115c4   164  d63f03e0       constant
0xffff582115c8   168  5820fee0       constant
0xffff582115cc   172  0000ffff       constant
0xffff582115d0   176  movz x16, #0x0
0xffff582115d4   180  sub csp, jssp, #0x10 (16)
0xffff582115d8   184  stp fp, lr, [jssp, #-16]!
0xffff582115dc   188  bl #+0xc (addr 0xffff582115e8)
0xffff582115e0   192  movz x16, #0x8
0xffff582115e4   196  bl #+0x14 (addr 0xffff582115f8)
0xffff582115e8   200  movz x17, #0xa00000000
0xffff582115ec   204  sub csp, jssp, #0x10 (16)
0xffff582115f0   208  stp x17, cp, [jssp, #-16]!
0xffff582115f4   212  add fp, jssp, #0x10 (16)
0xffff582115f8   216  ldr x17, pc+24 (addr 0x0000ffff58211610)    ;; lazy deoptimization bailout 0
0xffff582115fc   220  add x17, x17, x16
0xffff58211600   224  br x17
0xffff58211604   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211608   232  d63f03e0       constant
0xffff5821160c   236  d503201f       constant
0xffff58211610   240  58006000       constant
0xffff58211614   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58211584  code target (STUB)  (0xffff5820fee0)
0xffff582115c0  constant pool (size 16)
0xffff582115f8  runtime entry
0xffff58211604  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2465
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Number*Smi->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff58211520     0  mov x2, x0
0xffff58211524     4  tbnz w2, #0, #+0xac (addr 0xffff582115d0)
0xffff58211528     8  tbnz w1, #0, #+0x18 (addr 0xffff58211540)
0xffff5821152c    12  asr x4, x1, #32
0xffff58211530    16  asr x0, x2, #32
0xffff58211534    20  eor w0, w0, w4
0xffff58211538    24  lsl x0, x0, #32
0xffff5821153c    28  ret
0xffff58211540    32  sub csp, jssp, #0x10 (16)
0xffff58211544    36  stp fp, lr, [jssp, #-16]!
0xffff58211548    40  movz fp, #0xa00000000
0xffff5821154c    44  sub csp, jssp, #0x8 (8)
0xffff58211550    48  str fp, [jssp, #-8]!
0xffff58211554    52  add fp, jssp, #0x8 (8)
0xffff58211558    56  ldur x16, [x1, #-1]
0xffff5821155c    60  ldr x17, [x26, #120]
0xffff58211560    64  cmp x16, x17
0xffff58211564    68  b.ne #+0x30 (addr 0xffff58211594)
0xffff58211568    72  ldur d30, [x1, #7]
0xffff5821156c    76  fcvtzs x4, d30
0xffff58211570    80  cmp x4, #0x1 (1)
0xffff58211574    84  ccmn x4, #1, #nzcV, vc
0xffff58211578    88  b.vc #+0x18 (addr 0xffff58211590)
0xffff5821157c    92  sub csp, jssp, #0x8 (8)
0xffff58211580    96  str lr, [jssp, #-8]!
0xffff58211584   100  ldr x16, pc+68 (addr 0x0000ffff582115c8)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58211588   104  blr x16
0xffff5821158c   108  ldr lr, [jssp], #8
0xffff58211590   112  b #+0x24 (addr 0xffff582115b4)
0xffff58211594   116  ldp x4, x3, [x26, #64]
0xffff58211598   120  cmp x1, x4
0xffff5821159c   124  cset x4, eq
0xffff582115a0   128  ccmp x1, x3, #nZcv, ne
0xffff582115a4   132  b.eq #+0x10 (addr 0xffff582115b4)
0xffff582115a8   136  ldr x16, [x26, #40]
0xffff582115ac   140  cmp x1, x16
0xffff582115b0   144  b.ne #+0x30 (addr 0xffff582115e0)
0xffff582115b4   148  ldr lr, [jssp, #16]
0xffff582115b8   152  ldp xzr, fp, [jssp], #24
0xffff582115bc   156  b #-0x8c (addr 0xffff58211530)
0xffff582115c0   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582115c4   164  d63f03e0       constant
0xffff582115c8   168  5820fee0       constant
0xffff582115cc   172  0000ffff       constant
0xffff582115d0   176  movz x16, #0x0
0xffff582115d4   180  sub csp, jssp, #0x10 (16)
0xffff582115d8   184  stp fp, lr, [jssp, #-16]!
0xffff582115dc   188  bl #+0xc (addr 0xffff582115e8)
0xffff582115e0   192  movz x16, #0x8
0xffff582115e4   196  bl #+0x14 (addr 0xffff582115f8)
0xffff582115e8   200  movz x17, #0xa00000000
0xffff582115ec   204  sub csp, jssp, #0x10 (16)
0xffff582115f0   208  stp x17, cp, [jssp, #-16]!
0xffff582115f4   212  add fp, jssp, #0x10 (16)
0xffff582115f8   216  ldr x17, pc+24 (addr 0x0000ffff58211610)    ;; lazy deoptimization bailout 0
0xffff582115fc   220  add x17, x17, x16
0xffff58211600   224  br x17
0xffff58211604   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211608   232  d63f03e0       constant
0xffff5821160c   236  d503201f       constant
0xffff58211610   240  58006000       constant
0xffff58211614   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58211584  code target (STUB)  (0xffff5820fee0)
0xffff582115c0  constant pool (size 16)
0xffff582115f8  runtime entry
0xffff58211604  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2449
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff58211680     0  mov x2, x0
0xffff58211684     4  tbnz w2, #0, #+0xac (addr 0xffff58211730)
0xffff58211688     8  tbnz w1, #0, #+0x18 (addr 0xffff582116a0)
0xffff5821168c    12  asr x4, x1, #32
0xffff58211690    16  asr x0, x2, #32
0xffff58211694    20  eor w0, w0, w4
0xffff58211698    24  lsl x0, x0, #32
0xffff5821169c    28  ret
0xffff582116a0    32  sub csp, jssp, #0x10 (16)
0xffff582116a4    36  stp fp, lr, [jssp, #-16]!
0xffff582116a8    40  movz fp, #0xa00000000
0xffff582116ac    44  sub csp, jssp, #0x8 (8)
0xffff582116b0    48  str fp, [jssp, #-8]!
0xffff582116b4    52  add fp, jssp, #0x8 (8)
0xffff582116b8    56  ldur x16, [x1, #-1]
0xffff582116bc    60  ldr x17, [x26, #120]
0xffff582116c0    64  cmp x16, x17
0xffff582116c4    68  b.ne #+0x30 (addr 0xffff582116f4)
0xffff582116c8    72  ldur d30, [x1, #7]
0xffff582116cc    76  fcvtzs x4, d30
0xffff582116d0    80  cmp x4, #0x1 (1)
0xffff582116d4    84  ccmn x4, #1, #nzcV, vc
0xffff582116d8    88  b.vc #+0x18 (addr 0xffff582116f0)
0xffff582116dc    92  sub csp, jssp, #0x8 (8)
0xffff582116e0    96  str lr, [jssp, #-8]!
0xffff582116e4   100  ldr x16, pc+68 (addr 0x0000ffff58211728)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff582116e8   104  blr x16
0xffff582116ec   108  ldr lr, [jssp], #8
0xffff582116f0   112  b #+0x24 (addr 0xffff58211714)
0xffff582116f4   116  ldp x4, x3, [x26, #64]
0xffff582116f8   120  cmp x1, x4
0xffff582116fc   124  cset x4, eq
0xffff58211700   128  ccmp x1, x3, #nZcv, ne
0xffff58211704   132  b.eq #+0x10 (addr 0xffff58211714)
0xffff58211708   136  ldr x16, [x26, #40]
0xffff5821170c   140  cmp x1, x16
0xffff58211710   144  b.ne #+0x30 (addr 0xffff58211740)
0xffff58211714   148  ldr lr, [jssp, #16]
0xffff58211718   152  ldp xzr, fp, [jssp], #24
0xffff5821171c   156  b #-0x8c (addr 0xffff58211690)
0xffff58211720   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58211724   164  d63f03e0       constant
0xffff58211728   168  5820fee0       constant
0xffff5821172c   172  0000ffff       constant
0xffff58211730   176  movz x16, #0x0
0xffff58211734   180  sub csp, jssp, #0x10 (16)
0xffff58211738   184  stp fp, lr, [jssp, #-16]!
0xffff5821173c   188  bl #+0xc (addr 0xffff58211748)
0xffff58211740   192  movz x16, #0x8
0xffff58211744   196  bl #+0x14 (addr 0xffff58211758)
0xffff58211748   200  movz x17, #0xa00000000
0xffff5821174c   204  sub csp, jssp, #0x10 (16)
0xffff58211750   208  stp x17, cp, [jssp, #-16]!
0xffff58211754   212  add fp, jssp, #0x10 (16)
0xffff58211758   216  ldr x17, pc+24 (addr 0x0000ffff58211770)    ;; lazy deoptimization bailout 0
0xffff5821175c   220  add x17, x17, x16
0xffff58211760   224  br x17
0xffff58211764   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211768   232  d63f03e0       constant
0xffff5821176c   236  d503201f       constant
0xffff58211770   240  58006000       constant
0xffff58211774   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582116e4  code target (STUB)  (0xffff5820fee0)
0xffff58211720  constant pool (size 16)
0xffff58211758  runtime entry
0xffff58211764  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2449
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff58211680     0  mov x2, x0
0xffff58211684     4  tbnz w2, #0, #+0xac (addr 0xffff58211730)
0xffff58211688     8  tbnz w1, #0, #+0x18 (addr 0xffff582116a0)
0xffff5821168c    12  asr x4, x1, #32
0xffff58211690    16  asr x0, x2, #32
0xffff58211694    20  eor w0, w0, w4
0xffff58211698    24  lsl x0, x0, #32
0xffff5821169c    28  ret
0xffff582116a0    32  sub csp, jssp, #0x10 (16)
0xffff582116a4    36  stp fp, lr, [jssp, #-16]!
0xffff582116a8    40  movz fp, #0xa00000000
0xffff582116ac    44  sub csp, jssp, #0x8 (8)
0xffff582116b0    48  str fp, [jssp, #-8]!
0xffff582116b4    52  add fp, jssp, #0x8 (8)
0xffff582116b8    56  ldur x16, [x1, #-1]
0xffff582116bc    60  ldr x17, [x26, #120]
0xffff582116c0    64  cmp x16, x17
0xffff582116c4    68  b.ne #+0x30 (addr 0xffff582116f4)
0xffff582116c8    72  ldur d30, [x1, #7]
0xffff582116cc    76  fcvtzs x4, d30
0xffff582116d0    80  cmp x4, #0x1 (1)
0xffff582116d4    84  ccmn x4, #1, #nzcV, vc
0xffff582116d8    88  b.vc #+0x18 (addr 0xffff582116f0)
0xffff582116dc    92  sub csp, jssp, #0x8 (8)
0xffff582116e0    96  str lr, [jssp, #-8]!
0xffff582116e4   100  ldr x16, pc+68 (addr 0x0000ffff58211728)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff582116e8   104  blr x16
0xffff582116ec   108  ldr lr, [jssp], #8
0xffff582116f0   112  b #+0x24 (addr 0xffff58211714)
0xffff582116f4   116  ldp x4, x3, [x26, #64]
0xffff582116f8   120  cmp x1, x4
0xffff582116fc   124  cset x4, eq
0xffff58211700   128  ccmp x1, x3, #nZcv, ne
0xffff58211704   132  b.eq #+0x10 (addr 0xffff58211714)
0xffff58211708   136  ldr x16, [x26, #40]
0xffff5821170c   140  cmp x1, x16
0xffff58211710   144  b.ne #+0x30 (addr 0xffff58211740)
0xffff58211714   148  ldr lr, [jssp, #16]
0xffff58211718   152  ldp xzr, fp, [jssp], #24
0xffff5821171c   156  b #-0x8c (addr 0xffff58211690)
0xffff58211720   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58211724   164  d63f03e0       constant
0xffff58211728   168  5820fee0       constant
0xffff5821172c   172  0000ffff       constant
0xffff58211730   176  movz x16, #0x0
0xffff58211734   180  sub csp, jssp, #0x10 (16)
0xffff58211738   184  stp fp, lr, [jssp, #-16]!
0xffff5821173c   188  bl #+0xc (addr 0xffff58211748)
0xffff58211740   192  movz x16, #0x8
0xffff58211744   196  bl #+0x14 (addr 0xffff58211758)
0xffff58211748   200  movz x17, #0xa00000000
0xffff5821174c   204  sub csp, jssp, #0x10 (16)
0xffff58211750   208  stp x17, cp, [jssp, #-16]!
0xffff58211754   212  add fp, jssp, #0x10 (16)
0xffff58211758   216  ldr x17, pc+24 (addr 0x0000ffff58211770)    ;; lazy deoptimization bailout 0
0xffff5821175c   220  add x17, x17, x16
0xffff58211760   224  br x17
0xffff58211764   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211768   232  d63f03e0       constant
0xffff5821176c   236  d503201f       constant
0xffff58211770   240  58006000       constant
0xffff58211774   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582116e4  code target (STUB)  (0xffff5820fee0)
0xffff58211720  constant pool (size 16)
0xffff58211758  runtime entry
0xffff58211764  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4257
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff582117e0     0  mov x2, x1
0xffff582117e4     4  tbnz w2, #0, #+0x14 (addr 0xffff582117f8)
0xffff582117e8     8  mov x3, x0
0xffff582117ec    12  tbnz w3, #0, #+0x1c (addr 0xffff58211808)
0xffff582117f0    16  eor x0, x3, x2
0xffff582117f4    20  ret
0xffff582117f8    24  movz x16, #0x0
0xffff582117fc    28  sub csp, jssp, #0x10 (16)
0xffff58211800    32  stp fp, lr, [jssp, #-16]!
0xffff58211804    36  bl #+0x14 (addr 0xffff58211818)
0xffff58211808    40  movz x16, #0x8
0xffff5821180c    44  sub csp, jssp, #0x10 (16)
0xffff58211810    48  stp fp, lr, [jssp, #-16]!
0xffff58211814    52  bl #+0x4 (addr 0xffff58211818)
0xffff58211818    56  movz x17, #0xa00000000
0xffff5821181c    60  sub csp, jssp, #0x10 (16)
0xffff58211820    64  stp x17, cp, [jssp, #-16]!
0xffff58211824    68  add fp, jssp, #0x10 (16)
0xffff58211828    72  ldr x17, pc+24 (addr 0x0000ffff58211840)    ;; lazy deoptimization bailout 0
0xffff5821182c    76  add x17, x17, x16
0xffff58211830    80  br x17
0xffff58211834    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211838    88  d63f03e0       constant
0xffff5821183c    92  d503201f       constant
0xffff58211840    96  58006000       constant
0xffff58211844   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211828  runtime entry
0xffff58211834  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4257
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff582117e0     0  mov x2, x1
0xffff582117e4     4  tbnz w2, #0, #+0x14 (addr 0xffff582117f8)
0xffff582117e8     8  mov x3, x0
0xffff582117ec    12  tbnz w3, #0, #+0x1c (addr 0xffff58211808)
0xffff582117f0    16  eor x0, x3, x2
0xffff582117f4    20  ret
0xffff582117f8    24  movz x16, #0x0
0xffff582117fc    28  sub csp, jssp, #0x10 (16)
0xffff58211800    32  stp fp, lr, [jssp, #-16]!
0xffff58211804    36  bl #+0x14 (addr 0xffff58211818)
0xffff58211808    40  movz x16, #0x8
0xffff5821180c    44  sub csp, jssp, #0x10 (16)
0xffff58211810    48  stp fp, lr, [jssp, #-16]!
0xffff58211814    52  bl #+0x4 (addr 0xffff58211818)
0xffff58211818    56  movz x17, #0xa00000000
0xffff5821181c    60  sub csp, jssp, #0x10 (16)
0xffff58211820    64  stp x17, cp, [jssp, #-16]!
0xffff58211824    68  add fp, jssp, #0x10 (16)
0xffff58211828    72  ldr x17, pc+24 (addr 0x0000ffff58211840)    ;; lazy deoptimization bailout 0
0xffff5821182c    76  add x17, x17, x16
0xffff58211830    80  br x17
0xffff58211834    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211838    88  d63f03e0       constant
0xffff5821183c    92  d503201f       constant
0xffff58211840    96  58006000       constant
0xffff58211844   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211828  runtime entry
0xffff58211834  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4241
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff582118c0     0  mov x2, x1
0xffff582118c4     4  tbnz w2, #0, #+0x14 (addr 0xffff582118d8)
0xffff582118c8     8  mov x3, x0
0xffff582118cc    12  tbnz w3, #0, #+0x1c (addr 0xffff582118e8)
0xffff582118d0    16  eor x0, x3, x2
0xffff582118d4    20  ret
0xffff582118d8    24  movz x16, #0x0
0xffff582118dc    28  sub csp, jssp, #0x10 (16)
0xffff582118e0    32  stp fp, lr, [jssp, #-16]!
0xffff582118e4    36  bl #+0x14 (addr 0xffff582118f8)
0xffff582118e8    40  movz x16, #0x8
0xffff582118ec    44  sub csp, jssp, #0x10 (16)
0xffff582118f0    48  stp fp, lr, [jssp, #-16]!
0xffff582118f4    52  bl #+0x4 (addr 0xffff582118f8)
0xffff582118f8    56  movz x17, #0xa00000000
0xffff582118fc    60  sub csp, jssp, #0x10 (16)
0xffff58211900    64  stp x17, cp, [jssp, #-16]!
0xffff58211904    68  add fp, jssp, #0x10 (16)
0xffff58211908    72  ldr x17, pc+24 (addr 0x0000ffff58211920)    ;; lazy deoptimization bailout 0
0xffff5821190c    76  add x17, x17, x16
0xffff58211910    80  br x17
0xffff58211914    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211918    88  d63f03e0       constant
0xffff5821191c    92  d503201f       constant
0xffff58211920    96  58006000       constant
0xffff58211924   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211908  runtime entry
0xffff58211914  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4241
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Smi*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff582118c0     0  mov x2, x1
0xffff582118c4     4  tbnz w2, #0, #+0x14 (addr 0xffff582118d8)
0xffff582118c8     8  mov x3, x0
0xffff582118cc    12  tbnz w3, #0, #+0x1c (addr 0xffff582118e8)
0xffff582118d0    16  eor x0, x3, x2
0xffff582118d4    20  ret
0xffff582118d8    24  movz x16, #0x0
0xffff582118dc    28  sub csp, jssp, #0x10 (16)
0xffff582118e0    32  stp fp, lr, [jssp, #-16]!
0xffff582118e4    36  bl #+0x14 (addr 0xffff582118f8)
0xffff582118e8    40  movz x16, #0x8
0xffff582118ec    44  sub csp, jssp, #0x10 (16)
0xffff582118f0    48  stp fp, lr, [jssp, #-16]!
0xffff582118f4    52  bl #+0x4 (addr 0xffff582118f8)
0xffff582118f8    56  movz x17, #0xa00000000
0xffff582118fc    60  sub csp, jssp, #0x10 (16)
0xffff58211900    64  stp x17, cp, [jssp, #-16]!
0xffff58211904    68  add fp, jssp, #0x10 (16)
0xffff58211908    72  ldr x17, pc+24 (addr 0x0000ffff58211920)    ;; lazy deoptimization bailout 0
0xffff5821190c    76  add x17, x17, x16
0xffff58211910    80  br x17
0xffff58211914    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211918    88  d63f03e0       constant
0xffff5821191c    92  d503201f       constant
0xffff58211920    96  58006000       constant
0xffff58211924   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211908  runtime entry
0xffff58211914  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2193
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff582119a0     0  mov x2, x1
0xffff582119a4     4  tbnz w2, #0, #+0x14 (addr 0xffff582119b8)
0xffff582119a8     8  mov x3, x0
0xffff582119ac    12  tbnz w3, #0, #+0x1c (addr 0xffff582119c8)
0xffff582119b0    16  eor x0, x3, x2
0xffff582119b4    20  ret
0xffff582119b8    24  movz x16, #0x0
0xffff582119bc    28  sub csp, jssp, #0x10 (16)
0xffff582119c0    32  stp fp, lr, [jssp, #-16]!
0xffff582119c4    36  bl #+0x14 (addr 0xffff582119d8)
0xffff582119c8    40  movz x16, #0x8
0xffff582119cc    44  sub csp, jssp, #0x10 (16)
0xffff582119d0    48  stp fp, lr, [jssp, #-16]!
0xffff582119d4    52  bl #+0x4 (addr 0xffff582119d8)
0xffff582119d8    56  movz x17, #0xa00000000
0xffff582119dc    60  sub csp, jssp, #0x10 (16)
0xffff582119e0    64  stp x17, cp, [jssp, #-16]!
0xffff582119e4    68  add fp, jssp, #0x10 (16)
0xffff582119e8    72  ldr x17, pc+24 (addr 0x0000ffff58211a00)    ;; lazy deoptimization bailout 0
0xffff582119ec    76  add x17, x17, x16
0xffff582119f0    80  br x17
0xffff582119f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582119f8    88  d63f03e0       constant
0xffff582119fc    92  d503201f       constant
0xffff58211a00    96  58006000       constant
0xffff58211a04   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582119e8  runtime entry
0xffff582119f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2193
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff582119a0     0  mov x2, x1
0xffff582119a4     4  tbnz w2, #0, #+0x14 (addr 0xffff582119b8)
0xffff582119a8     8  mov x3, x0
0xffff582119ac    12  tbnz w3, #0, #+0x1c (addr 0xffff582119c8)
0xffff582119b0    16  eor x0, x3, x2
0xffff582119b4    20  ret
0xffff582119b8    24  movz x16, #0x0
0xffff582119bc    28  sub csp, jssp, #0x10 (16)
0xffff582119c0    32  stp fp, lr, [jssp, #-16]!
0xffff582119c4    36  bl #+0x14 (addr 0xffff582119d8)
0xffff582119c8    40  movz x16, #0x8
0xffff582119cc    44  sub csp, jssp, #0x10 (16)
0xffff582119d0    48  stp fp, lr, [jssp, #-16]!
0xffff582119d4    52  bl #+0x4 (addr 0xffff582119d8)
0xffff582119d8    56  movz x17, #0xa00000000
0xffff582119dc    60  sub csp, jssp, #0x10 (16)
0xffff582119e0    64  stp x17, cp, [jssp, #-16]!
0xffff582119e4    68  add fp, jssp, #0x10 (16)
0xffff582119e8    72  ldr x17, pc+24 (addr 0x0000ffff58211a00)    ;; lazy deoptimization bailout 0
0xffff582119ec    76  add x17, x17, x16
0xffff582119f0    80  br x17
0xffff582119f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582119f8    88  d63f03e0       constant
0xffff582119fc    92  d503201f       constant
0xffff58211a00    96  58006000       constant
0xffff58211a04   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582119e8  runtime entry
0xffff582119f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4394
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff58211a80     0  mov x2, x1
0xffff58211a84     4  tbnz w2, #0, #+0x44 (addr 0xffff58211ac8)
0xffff58211a88     8  mov x3, x0
0xffff58211a8c    12  tbnz w3, #0, #+0x4c (addr 0xffff58211ad8)
0xffff58211a90    16  asr x2, x2, #32
0xffff58211a94    20  asr x3, x3, #32
0xffff58211a98    24  sdiv w5, w2, w3
0xffff58211a9c    28  cbz w3, #+0x4c (addr 0xffff58211ae8)
0xffff58211aa0    32  cmp w3, #0x0 (0)
0xffff58211aa4    36  ccmp w2, #0, #nzcv, mi
0xffff58211aa8    40  b.eq #+0x40 (addr 0xffff58211ae8)
0xffff58211aac    44  cmp w2, #0x1 (1)
0xffff58211ab0    48  ccmn w3, #1, #nzcv, vs
0xffff58211ab4    52  b.eq #+0x34 (addr 0xffff58211ae8)
0xffff58211ab8    56  msub w4, w5, w3, w2
0xffff58211abc    60  cbnz w4, #+0x2c (addr 0xffff58211ae8)
0xffff58211ac0    64  lsl x0, x5, #32
0xffff58211ac4    68  ret
0xffff58211ac8    72  movz x16, #0x0
0xffff58211acc    76  sub csp, jssp, #0x10 (16)
0xffff58211ad0    80  stp fp, lr, [jssp, #-16]!
0xffff58211ad4    84  bl #+0x24 (addr 0xffff58211af8)
0xffff58211ad8    88  movz x16, #0x8
0xffff58211adc    92  sub csp, jssp, #0x10 (16)
0xffff58211ae0    96  stp fp, lr, [jssp, #-16]!
0xffff58211ae4   100  bl #+0x14 (addr 0xffff58211af8)
0xffff58211ae8   104  movz x16, #0x10
0xffff58211aec   108  sub csp, jssp, #0x10 (16)
0xffff58211af0   112  stp fp, lr, [jssp, #-16]!
0xffff58211af4   116  bl #+0x4 (addr 0xffff58211af8)
0xffff58211af8   120  movz x17, #0xa00000000
0xffff58211afc   124  sub csp, jssp, #0x10 (16)
0xffff58211b00   128  stp x17, cp, [jssp, #-16]!
0xffff58211b04   132  add fp, jssp, #0x10 (16)
0xffff58211b08   136  ldr x17, pc+24 (addr 0x0000ffff58211b20)    ;; lazy deoptimization bailout 0
0xffff58211b0c   140  add x17, x17, x16
0xffff58211b10   144  br x17
0xffff58211b14   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211b18   152  d63f03e0       constant
0xffff58211b1c   156  d503201f       constant
0xffff58211b20   160  58006000       constant
0xffff58211b24   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211b08  runtime entry
0xffff58211b14  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4394
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 176)
0xffff58211a80     0  mov x2, x1
0xffff58211a84     4  tbnz w2, #0, #+0x44 (addr 0xffff58211ac8)
0xffff58211a88     8  mov x3, x0
0xffff58211a8c    12  tbnz w3, #0, #+0x4c (addr 0xffff58211ad8)
0xffff58211a90    16  asr x2, x2, #32
0xffff58211a94    20  asr x3, x3, #32
0xffff58211a98    24  sdiv w5, w2, w3
0xffff58211a9c    28  cbz w3, #+0x4c (addr 0xffff58211ae8)
0xffff58211aa0    32  cmp w3, #0x0 (0)
0xffff58211aa4    36  ccmp w2, #0, #nzcv, mi
0xffff58211aa8    40  b.eq #+0x40 (addr 0xffff58211ae8)
0xffff58211aac    44  cmp w2, #0x1 (1)
0xffff58211ab0    48  ccmn w3, #1, #nzcv, vs
0xffff58211ab4    52  b.eq #+0x34 (addr 0xffff58211ae8)
0xffff58211ab8    56  msub w4, w5, w3, w2
0xffff58211abc    60  cbnz w4, #+0x2c (addr 0xffff58211ae8)
0xffff58211ac0    64  lsl x0, x5, #32
0xffff58211ac4    68  ret
0xffff58211ac8    72  movz x16, #0x0
0xffff58211acc    76  sub csp, jssp, #0x10 (16)
0xffff58211ad0    80  stp fp, lr, [jssp, #-16]!
0xffff58211ad4    84  bl #+0x24 (addr 0xffff58211af8)
0xffff58211ad8    88  movz x16, #0x8
0xffff58211adc    92  sub csp, jssp, #0x10 (16)
0xffff58211ae0    96  stp fp, lr, [jssp, #-16]!
0xffff58211ae4   100  bl #+0x14 (addr 0xffff58211af8)
0xffff58211ae8   104  movz x16, #0x10
0xffff58211aec   108  sub csp, jssp, #0x10 (16)
0xffff58211af0   112  stp fp, lr, [jssp, #-16]!
0xffff58211af4   116  bl #+0x4 (addr 0xffff58211af8)
0xffff58211af8   120  movz x17, #0xa00000000
0xffff58211afc   124  sub csp, jssp, #0x10 (16)
0xffff58211b00   128  stp x17, cp, [jssp, #-16]!
0xffff58211b04   132  add fp, jssp, #0x10 (16)
0xffff58211b08   136  ldr x17, pc+24 (addr 0x0000ffff58211b20)    ;; lazy deoptimization bailout 0
0xffff58211b0c   140  add x17, x17, x16
0xffff58211b10   144  br x17
0xffff58211b14   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211b18   152  d63f03e0       constant
0xffff58211b1c   156  d503201f       constant
0xffff58211b20   160  58006000       constant
0xffff58211b24   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211b08  runtime entry
0xffff58211b14  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4410
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff58211ba0     0  mov x2, x1
0xffff58211ba4     4  tbnz w2, #0, #+0xc4 (addr 0xffff58211c68)
0xffff58211ba8     8  mov x3, x0
0xffff58211bac    12  tbnz w3, #0, #+0xcc (addr 0xffff58211c78)
0xffff58211bb0    16  scvtf d0, x2, #32
0xffff58211bb4    20  scvtf d1, x3, #32
0xffff58211bb8    24  fdiv d0, d0, d1
0xffff58211bbc    28  movz x1, #0x92c0
0xffff58211bc0    32  movk x1, #0x16e7, lsl #16
0xffff58211bc4    36  ldp x2, x0, [x1]
0xffff58211bc8    40  adds x16, x2, #0x10 (16)
0xffff58211bcc    44  ccmp x16, x0, #nzCv, lo
0xffff58211bd0    48  b.hi #+0x20 (addr 0xffff58211bf0)
0xffff58211bd4    52  str x16, [x1]
0xffff58211bd8    56  ldr x1, [x26, #120]
0xffff58211bdc    60  str x1, [x2]
0xffff58211be0    64  orr x2, x2, #0x1
0xffff58211be4    68  stur d0, [x2, #7]
0xffff58211be8    72  mov x0, x2
0xffff58211bec    76  ret
0xffff58211bf0    80  sub csp, jssp, #0x10 (16)
0xffff58211bf4    84  stp fp, lr, [jssp, #-16]!
0xffff58211bf8    88  movz fp, #0xa00000000
0xffff58211bfc    92  sub csp, jssp, #0x8 (8)
0xffff58211c00    96  str fp, [jssp, #-8]!
0xffff58211c04   100  add fp, jssp, #0x8 (8)
0xffff58211c08   104  movz x2, #0x0
0xffff58211c0c   108  mov x16, lr
0xffff58211c10   112  ldr x17, pc+64 (addr 0x0000ffff58211c50)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58211c14   116  blr x17
0xffff58211c18   120  ldur cp, [fp, #-8]
0xffff58211c1c   124  movz x0, #0x0
0xffff58211c20   128  movz x1, #0x4b48
0xffff58211c24   132  movk x1, #0xe4, lsl #16
0xffff58211c28   136  ldr x16, pc+48 (addr 0x0000ffff58211c58)    ;; code: STUB, CEntryStub, minor: 5
0xffff58211c2c   140  blr x16
0xffff58211c30   144  str x0, [jssp, #16]
0xffff58211c34   148  ldr x16, pc+44 (addr 0x0000ffff58211c60)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58211c38   152  blr x16
0xffff58211c3c   156  ldr lr, [jssp, #16]
0xffff58211c40   160  ldp xzr, fp, [jssp], #24
0xffff58211c44   164  b #-0x60 (addr 0xffff58211be4)
0xffff58211c48   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58211c4c   172  d63f03e0       constant
0xffff58211c50   176  58206820       constant
0xffff58211c54   180  0000ffff       constant
0xffff58211c58   184  58206260       constant
0xffff58211c5c   188  0000ffff       constant
0xffff58211c60   192  582068e0       constant
0xffff58211c64   196  0000ffff       constant
0xffff58211c68   200  movz x16, #0x0
0xffff58211c6c   204  sub csp, jssp, #0x10 (16)
0xffff58211c70   208  stp fp, lr, [jssp, #-16]!
0xffff58211c74   212  bl #+0x14 (addr 0xffff58211c88)
0xffff58211c78   216  movz x16, #0x8
0xffff58211c7c   220  sub csp, jssp, #0x10 (16)
0xffff58211c80   224  stp fp, lr, [jssp, #-16]!
0xffff58211c84   228  bl #+0x4 (addr 0xffff58211c88)
0xffff58211c88   232  movz x17, #0xa00000000
0xffff58211c8c   236  sub csp, jssp, #0x10 (16)
0xffff58211c90   240  stp x17, cp, [jssp, #-16]!
0xffff58211c94   244  add fp, jssp, #0x10 (16)
0xffff58211c98   248  ldr x17, pc+24 (addr 0x0000ffff58211cb0)    ;; lazy deoptimization bailout 0
0xffff58211c9c   252  add x17, x17, x16
0xffff58211ca0   256  br x17
0xffff58211ca4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211ca8   264  d63f03e0       constant
0xffff58211cac   268  d503201f       constant
0xffff58211cb0   272  58006000       constant
0xffff58211cb4   276  0000ffff       constant


Safepoints (size = 21)
0xffff58211c30   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58211c10  code target (STUB)  (0xffff58206820)
0xffff58211c28  code target (STUB)  (0xffff58206260)
0xffff58211c34  code target (STUB)  (0xffff582068e0)
0xffff58211c48  constant pool (size 32)
0xffff58211c98  runtime entry
0xffff58211ca4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4410
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff58211ba0     0  mov x2, x1
0xffff58211ba4     4  tbnz w2, #0, #+0xc4 (addr 0xffff58211c68)
0xffff58211ba8     8  mov x3, x0
0xffff58211bac    12  tbnz w3, #0, #+0xcc (addr 0xffff58211c78)
0xffff58211bb0    16  scvtf d0, x2, #32
0xffff58211bb4    20  scvtf d1, x3, #32
0xffff58211bb8    24  fdiv d0, d0, d1
0xffff58211bbc    28  movz x1, #0x92c0
0xffff58211bc0    32  movk x1, #0x16e7, lsl #16
0xffff58211bc4    36  ldp x2, x0, [x1]
0xffff58211bc8    40  adds x16, x2, #0x10 (16)
0xffff58211bcc    44  ccmp x16, x0, #nzCv, lo
0xffff58211bd0    48  b.hi #+0x20 (addr 0xffff58211bf0)
0xffff58211bd4    52  str x16, [x1]
0xffff58211bd8    56  ldr x1, [x26, #120]
0xffff58211bdc    60  str x1, [x2]
0xffff58211be0    64  orr x2, x2, #0x1
0xffff58211be4    68  stur d0, [x2, #7]
0xffff58211be8    72  mov x0, x2
0xffff58211bec    76  ret
0xffff58211bf0    80  sub csp, jssp, #0x10 (16)
0xffff58211bf4    84  stp fp, lr, [jssp, #-16]!
0xffff58211bf8    88  movz fp, #0xa00000000
0xffff58211bfc    92  sub csp, jssp, #0x8 (8)
0xffff58211c00    96  str fp, [jssp, #-8]!
0xffff58211c04   100  add fp, jssp, #0x8 (8)
0xffff58211c08   104  movz x2, #0x0
0xffff58211c0c   108  mov x16, lr
0xffff58211c10   112  ldr x17, pc+64 (addr 0x0000ffff58211c50)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58211c14   116  blr x17
0xffff58211c18   120  ldur cp, [fp, #-8]
0xffff58211c1c   124  movz x0, #0x0
0xffff58211c20   128  movz x1, #0x4b48
0xffff58211c24   132  movk x1, #0xe4, lsl #16
0xffff58211c28   136  ldr x16, pc+48 (addr 0x0000ffff58211c58)    ;; code: STUB, CEntryStub, minor: 5
0xffff58211c2c   140  blr x16
0xffff58211c30   144  str x0, [jssp, #16]
0xffff58211c34   148  ldr x16, pc+44 (addr 0x0000ffff58211c60)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58211c38   152  blr x16
0xffff58211c3c   156  ldr lr, [jssp, #16]
0xffff58211c40   160  ldp xzr, fp, [jssp], #24
0xffff58211c44   164  b #-0x60 (addr 0xffff58211be4)
0xffff58211c48   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58211c4c   172  d63f03e0       constant
0xffff58211c50   176  58206820       constant
0xffff58211c54   180  0000ffff       constant
0xffff58211c58   184  58206260       constant
0xffff58211c5c   188  0000ffff       constant
0xffff58211c60   192  582068e0       constant
0xffff58211c64   196  0000ffff       constant
0xffff58211c68   200  movz x16, #0x0
0xffff58211c6c   204  sub csp, jssp, #0x10 (16)
0xffff58211c70   208  stp fp, lr, [jssp, #-16]!
0xffff58211c74   212  bl #+0x14 (addr 0xffff58211c88)
0xffff58211c78   216  movz x16, #0x8
0xffff58211c7c   220  sub csp, jssp, #0x10 (16)
0xffff58211c80   224  stp fp, lr, [jssp, #-16]!
0xffff58211c84   228  bl #+0x4 (addr 0xffff58211c88)
0xffff58211c88   232  movz x17, #0xa00000000
0xffff58211c8c   236  sub csp, jssp, #0x10 (16)
0xffff58211c90   240  stp x17, cp, [jssp, #-16]!
0xffff58211c94   244  add fp, jssp, #0x10 (16)
0xffff58211c98   248  ldr x17, pc+24 (addr 0x0000ffff58211cb0)    ;; lazy deoptimization bailout 0
0xffff58211c9c   252  add x17, x17, x16
0xffff58211ca0   256  br x17
0xffff58211ca4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211ca8   264  d63f03e0       constant
0xffff58211cac   268  d503201f       constant
0xffff58211cb0   272  58006000       constant
0xffff58211cb4   276  0000ffff       constant


Safepoints (size = 21)
0xffff58211c30   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58211c10  code target (STUB)  (0xffff58206820)
0xffff58211c28  code target (STUB)  (0xffff58206260)
0xffff58211c34  code target (STUB)  (0xffff582068e0)
0xffff58211c48  constant pool (size 32)
0xffff58211c98  runtime entry
0xffff58211ca4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6458
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff58211d40     0  mov x2, x1
0xffff58211d44     4  tbnz w2, #0, #+0xf4 (addr 0xffff58211e38)
0xffff58211d48     8  tbz w0, #0, #+0x34 (addr 0xffff58211d7c)
0xffff58211d4c    12  ldur x16, [x0, #-1]
0xffff58211d50    16  ldr x17, [x26, #120]
0xffff58211d54    20  cmp x16, x17
0xffff58211d58    24  b.ne #+0xc (addr 0xffff58211d64)
0xffff58211d5c    28  ldur d0, [x0, #7]
0xffff58211d60    32  b #+0x20 (addr 0xffff58211d80)
0xffff58211d64    36  ldr x16, [x26, #40]
0xffff58211d68    40  cmp x0, x16
0xffff58211d6c    44  b.ne #+0xdc (addr 0xffff58211e48)
0xffff58211d70    48  ldr x3, [x26, #928]
0xffff58211d74    52  ldur d0, [x3, #7]
0xffff58211d78    56  b #+0x8 (addr 0xffff58211d80)
0xffff58211d7c    60  scvtf d0, x0, #32
0xffff58211d80    64  scvtf d1, x2, #32
0xffff58211d84    68  fdiv d0, d1, d0
0xffff58211d88    72  movz x1, #0x92c0
0xffff58211d8c    76  movk x1, #0x16e7, lsl #16
0xffff58211d90    80  ldp x2, x0, [x1]
0xffff58211d94    84  adds x16, x2, #0x10 (16)
0xffff58211d98    88  ccmp x16, x0, #nzCv, lo
0xffff58211d9c    92  b.hi #+0x20 (addr 0xffff58211dbc)
0xffff58211da0    96  str x16, [x1]
0xffff58211da4   100  ldr x1, [x26, #120]
0xffff58211da8   104  str x1, [x2]
0xffff58211dac   108  orr x2, x2, #0x1
0xffff58211db0   112  stur d0, [x2, #7]
0xffff58211db4   116  mov x0, x2
0xffff58211db8   120  ret
0xffff58211dbc   124  sub csp, jssp, #0x10 (16)
0xffff58211dc0   128  stp fp, lr, [jssp, #-16]!
0xffff58211dc4   132  movz fp, #0xa00000000
0xffff58211dc8   136  sub csp, jssp, #0x8 (8)
0xffff58211dcc   140  str fp, [jssp, #-8]!
0xffff58211dd0   144  add fp, jssp, #0x8 (8)
0xffff58211dd4   148  movz x2, #0x0
0xffff58211dd8   152  mov x16, lr
0xffff58211ddc   156  ldr x17, pc+68 (addr 0x0000ffff58211e20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58211de0   160  blr x17
0xffff58211de4   164  ldur cp, [fp, #-8]
0xffff58211de8   168  movz x0, #0x0
0xffff58211dec   172  movz x1, #0x4b48
0xffff58211df0   176  movk x1, #0xe4, lsl #16
0xffff58211df4   180  ldr x16, pc+52 (addr 0x0000ffff58211e28)    ;; code: STUB, CEntryStub, minor: 5
0xffff58211df8   184  blr x16
0xffff58211dfc   188  str x0, [jssp, #16]
0xffff58211e00   192  ldr x16, pc+48 (addr 0x0000ffff58211e30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58211e04   196  blr x16
0xffff58211e08   200  ldr lr, [jssp, #16]
0xffff58211e0c   204  ldp xzr, fp, [jssp], #24
0xffff58211e10   208  b #-0x60 (addr 0xffff58211db0)
0xffff58211e14   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58211e18   216  d63f03e0       constant
0xffff58211e1c   220  d503201f       constant
0xffff58211e20   224  58206820       constant
0xffff58211e24   228  0000ffff       constant
0xffff58211e28   232  58206260       constant
0xffff58211e2c   236  0000ffff       constant
0xffff58211e30   240  582068e0       constant
0xffff58211e34   244  0000ffff       constant
0xffff58211e38   248  movz x16, #0x0
0xffff58211e3c   252  sub csp, jssp, #0x10 (16)
0xffff58211e40   256  stp fp, lr, [jssp, #-16]!
0xffff58211e44   260  bl #+0x14 (addr 0xffff58211e58)
0xffff58211e48   264  movz x16, #0x8
0xffff58211e4c   268  sub csp, jssp, #0x10 (16)
0xffff58211e50   272  stp fp, lr, [jssp, #-16]!
0xffff58211e54   276  bl #+0x4 (addr 0xffff58211e58)
0xffff58211e58   280  movz x17, #0xa00000000
0xffff58211e5c   284  sub csp, jssp, #0x10 (16)
0xffff58211e60   288  stp x17, cp, [jssp, #-16]!
0xffff58211e64   292  add fp, jssp, #0x10 (16)
0xffff58211e68   296  ldr x17, pc+24 (addr 0x0000ffff58211e80)    ;; lazy deoptimization bailout 0
0xffff58211e6c   300  add x17, x17, x16
0xffff58211e70   304  br x17
0xffff58211e74   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211e78   312  d63f03e0       constant
0xffff58211e7c   316  d503201f       constant
0xffff58211e80   320  58006000       constant
0xffff58211e84   324  0000ffff       constant


Safepoints (size = 21)
0xffff58211dfc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58211ddc  code target (STUB)  (0xffff58206820)
0xffff58211df4  code target (STUB)  (0xffff58206260)
0xffff58211e00  code target (STUB)  (0xffff582068e0)
0xffff58211e14  constant pool (size 36)
0xffff58211e68  runtime entry
0xffff58211e74  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6458
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff58211d40     0  mov x2, x1
0xffff58211d44     4  tbnz w2, #0, #+0xf4 (addr 0xffff58211e38)
0xffff58211d48     8  tbz w0, #0, #+0x34 (addr 0xffff58211d7c)
0xffff58211d4c    12  ldur x16, [x0, #-1]
0xffff58211d50    16  ldr x17, [x26, #120]
0xffff58211d54    20  cmp x16, x17
0xffff58211d58    24  b.ne #+0xc (addr 0xffff58211d64)
0xffff58211d5c    28  ldur d0, [x0, #7]
0xffff58211d60    32  b #+0x20 (addr 0xffff58211d80)
0xffff58211d64    36  ldr x16, [x26, #40]
0xffff58211d68    40  cmp x0, x16
0xffff58211d6c    44  b.ne #+0xdc (addr 0xffff58211e48)
0xffff58211d70    48  ldr x3, [x26, #928]
0xffff58211d74    52  ldur d0, [x3, #7]
0xffff58211d78    56  b #+0x8 (addr 0xffff58211d80)
0xffff58211d7c    60  scvtf d0, x0, #32
0xffff58211d80    64  scvtf d1, x2, #32
0xffff58211d84    68  fdiv d0, d1, d0
0xffff58211d88    72  movz x1, #0x92c0
0xffff58211d8c    76  movk x1, #0x16e7, lsl #16
0xffff58211d90    80  ldp x2, x0, [x1]
0xffff58211d94    84  adds x16, x2, #0x10 (16)
0xffff58211d98    88  ccmp x16, x0, #nzCv, lo
0xffff58211d9c    92  b.hi #+0x20 (addr 0xffff58211dbc)
0xffff58211da0    96  str x16, [x1]
0xffff58211da4   100  ldr x1, [x26, #120]
0xffff58211da8   104  str x1, [x2]
0xffff58211dac   108  orr x2, x2, #0x1
0xffff58211db0   112  stur d0, [x2, #7]
0xffff58211db4   116  mov x0, x2
0xffff58211db8   120  ret
0xffff58211dbc   124  sub csp, jssp, #0x10 (16)
0xffff58211dc0   128  stp fp, lr, [jssp, #-16]!
0xffff58211dc4   132  movz fp, #0xa00000000
0xffff58211dc8   136  sub csp, jssp, #0x8 (8)
0xffff58211dcc   140  str fp, [jssp, #-8]!
0xffff58211dd0   144  add fp, jssp, #0x8 (8)
0xffff58211dd4   148  movz x2, #0x0
0xffff58211dd8   152  mov x16, lr
0xffff58211ddc   156  ldr x17, pc+68 (addr 0x0000ffff58211e20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58211de0   160  blr x17
0xffff58211de4   164  ldur cp, [fp, #-8]
0xffff58211de8   168  movz x0, #0x0
0xffff58211dec   172  movz x1, #0x4b48
0xffff58211df0   176  movk x1, #0xe4, lsl #16
0xffff58211df4   180  ldr x16, pc+52 (addr 0x0000ffff58211e28)    ;; code: STUB, CEntryStub, minor: 5
0xffff58211df8   184  blr x16
0xffff58211dfc   188  str x0, [jssp, #16]
0xffff58211e00   192  ldr x16, pc+48 (addr 0x0000ffff58211e30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58211e04   196  blr x16
0xffff58211e08   200  ldr lr, [jssp, #16]
0xffff58211e0c   204  ldp xzr, fp, [jssp], #24
0xffff58211e10   208  b #-0x60 (addr 0xffff58211db0)
0xffff58211e14   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58211e18   216  d63f03e0       constant
0xffff58211e1c   220  d503201f       constant
0xffff58211e20   224  58206820       constant
0xffff58211e24   228  0000ffff       constant
0xffff58211e28   232  58206260       constant
0xffff58211e2c   236  0000ffff       constant
0xffff58211e30   240  582068e0       constant
0xffff58211e34   244  0000ffff       constant
0xffff58211e38   248  movz x16, #0x0
0xffff58211e3c   252  sub csp, jssp, #0x10 (16)
0xffff58211e40   256  stp fp, lr, [jssp, #-16]!
0xffff58211e44   260  bl #+0x14 (addr 0xffff58211e58)
0xffff58211e48   264  movz x16, #0x8
0xffff58211e4c   268  sub csp, jssp, #0x10 (16)
0xffff58211e50   272  stp fp, lr, [jssp, #-16]!
0xffff58211e54   276  bl #+0x4 (addr 0xffff58211e58)
0xffff58211e58   280  movz x17, #0xa00000000
0xffff58211e5c   284  sub csp, jssp, #0x10 (16)
0xffff58211e60   288  stp x17, cp, [jssp, #-16]!
0xffff58211e64   292  add fp, jssp, #0x10 (16)
0xffff58211e68   296  ldr x17, pc+24 (addr 0x0000ffff58211e80)    ;; lazy deoptimization bailout 0
0xffff58211e6c   300  add x17, x17, x16
0xffff58211e70   304  br x17
0xffff58211e74   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211e78   312  d63f03e0       constant
0xffff58211e7c   316  d503201f       constant
0xffff58211e80   320  58006000       constant
0xffff58211e84   324  0000ffff       constant


Safepoints (size = 21)
0xffff58211dfc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58211ddc  code target (STUB)  (0xffff58206820)
0xffff58211df4  code target (STUB)  (0xffff58206260)
0xffff58211e00  code target (STUB)  (0xffff582068e0)
0xffff58211e14  constant pool (size 36)
0xffff58211e68  runtime entry
0xffff58211e74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2346
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff58211f00     0  mov x2, x1
0xffff58211f04     4  tbnz w2, #0, #+0x44 (addr 0xffff58211f48)
0xffff58211f08     8  mov x3, x0
0xffff58211f0c    12  tbnz w3, #0, #+0x4c (addr 0xffff58211f58)
0xffff58211f10    16  asr x2, x2, #32
0xffff58211f14    20  asr x3, x3, #32
0xffff58211f18    24  sdiv w5, w2, w3
0xffff58211f1c    28  cbz w3, #+0x4c (addr 0xffff58211f68)
0xffff58211f20    32  cmp w3, #0x0 (0)
0xffff58211f24    36  ccmp w2, #0, #nzcv, mi
0xffff58211f28    40  b.eq #+0x40 (addr 0xffff58211f68)
0xffff58211f2c    44  cmp w2, #0x1 (1)
0xffff58211f30    48  ccmn w3, #1, #nzcv, vs
0xffff58211f34    52  b.eq #+0x34 (addr 0xffff58211f68)
0xffff58211f38    56  msub w4, w5, w3, w2
0xffff58211f3c    60  cbnz w4, #+0x2c (addr 0xffff58211f68)
0xffff58211f40    64  lsl x0, x5, #32
0xffff58211f44    68  ret
0xffff58211f48    72  movz x16, #0x0
0xffff58211f4c    76  sub csp, jssp, #0x10 (16)
0xffff58211f50    80  stp fp, lr, [jssp, #-16]!
0xffff58211f54    84  bl #+0x24 (addr 0xffff58211f78)
0xffff58211f58    88  movz x16, #0x8
0xffff58211f5c    92  sub csp, jssp, #0x10 (16)
0xffff58211f60    96  stp fp, lr, [jssp, #-16]!
0xffff58211f64   100  bl #+0x14 (addr 0xffff58211f78)
0xffff58211f68   104  movz x16, #0x10
0xffff58211f6c   108  sub csp, jssp, #0x10 (16)
0xffff58211f70   112  stp fp, lr, [jssp, #-16]!
0xffff58211f74   116  bl #+0x4 (addr 0xffff58211f78)
0xffff58211f78   120  movz x17, #0xa00000000
0xffff58211f7c   124  sub csp, jssp, #0x10 (16)
0xffff58211f80   128  stp x17, cp, [jssp, #-16]!
0xffff58211f84   132  add fp, jssp, #0x10 (16)
0xffff58211f88   136  ldr x17, pc+24 (addr 0x0000ffff58211fa0)    ;; lazy deoptimization bailout 0
0xffff58211f8c   140  add x17, x17, x16
0xffff58211f90   144  br x17
0xffff58211f94   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211f98   152  d63f03e0       constant
0xffff58211f9c   156  d503201f       constant
0xffff58211fa0   160  58006000       constant
0xffff58211fa4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211f88  runtime entry
0xffff58211f94  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2346
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 176)
0xffff58211f00     0  mov x2, x1
0xffff58211f04     4  tbnz w2, #0, #+0x44 (addr 0xffff58211f48)
0xffff58211f08     8  mov x3, x0
0xffff58211f0c    12  tbnz w3, #0, #+0x4c (addr 0xffff58211f58)
0xffff58211f10    16  asr x2, x2, #32
0xffff58211f14    20  asr x3, x3, #32
0xffff58211f18    24  sdiv w5, w2, w3
0xffff58211f1c    28  cbz w3, #+0x4c (addr 0xffff58211f68)
0xffff58211f20    32  cmp w3, #0x0 (0)
0xffff58211f24    36  ccmp w2, #0, #nzcv, mi
0xffff58211f28    40  b.eq #+0x40 (addr 0xffff58211f68)
0xffff58211f2c    44  cmp w2, #0x1 (1)
0xffff58211f30    48  ccmn w3, #1, #nzcv, vs
0xffff58211f34    52  b.eq #+0x34 (addr 0xffff58211f68)
0xffff58211f38    56  msub w4, w5, w3, w2
0xffff58211f3c    60  cbnz w4, #+0x2c (addr 0xffff58211f68)
0xffff58211f40    64  lsl x0, x5, #32
0xffff58211f44    68  ret
0xffff58211f48    72  movz x16, #0x0
0xffff58211f4c    76  sub csp, jssp, #0x10 (16)
0xffff58211f50    80  stp fp, lr, [jssp, #-16]!
0xffff58211f54    84  bl #+0x24 (addr 0xffff58211f78)
0xffff58211f58    88  movz x16, #0x8
0xffff58211f5c    92  sub csp, jssp, #0x10 (16)
0xffff58211f60    96  stp fp, lr, [jssp, #-16]!
0xffff58211f64   100  bl #+0x14 (addr 0xffff58211f78)
0xffff58211f68   104  movz x16, #0x10
0xffff58211f6c   108  sub csp, jssp, #0x10 (16)
0xffff58211f70   112  stp fp, lr, [jssp, #-16]!
0xffff58211f74   116  bl #+0x4 (addr 0xffff58211f78)
0xffff58211f78   120  movz x17, #0xa00000000
0xffff58211f7c   124  sub csp, jssp, #0x10 (16)
0xffff58211f80   128  stp x17, cp, [jssp, #-16]!
0xffff58211f84   132  add fp, jssp, #0x10 (16)
0xffff58211f88   136  ldr x17, pc+24 (addr 0x0000ffff58211fa0)    ;; lazy deoptimization bailout 0
0xffff58211f8c   140  add x17, x17, x16
0xffff58211f90   144  br x17
0xffff58211f94   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58211f98   152  d63f03e0       constant
0xffff58211f9c   156  d503201f       constant
0xffff58211fa0   160  58006000       constant
0xffff58211fa4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58211f88  runtime entry
0xffff58211f94  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2362
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff58212020     0  mov x2, x1
0xffff58212024     4  tbnz w2, #0, #+0xc4 (addr 0xffff582120e8)
0xffff58212028     8  mov x3, x0
0xffff5821202c    12  tbnz w3, #0, #+0xcc (addr 0xffff582120f8)
0xffff58212030    16  scvtf d0, x2, #32
0xffff58212034    20  scvtf d1, x3, #32
0xffff58212038    24  fdiv d0, d0, d1
0xffff5821203c    28  movz x1, #0x92c0
0xffff58212040    32  movk x1, #0x16e7, lsl #16
0xffff58212044    36  ldp x2, x0, [x1]
0xffff58212048    40  adds x16, x2, #0x10 (16)
0xffff5821204c    44  ccmp x16, x0, #nzCv, lo
0xffff58212050    48  b.hi #+0x20 (addr 0xffff58212070)
0xffff58212054    52  str x16, [x1]
0xffff58212058    56  ldr x1, [x26, #120]
0xffff5821205c    60  str x1, [x2]
0xffff58212060    64  orr x2, x2, #0x1
0xffff58212064    68  stur d0, [x2, #7]
0xffff58212068    72  mov x0, x2
0xffff5821206c    76  ret
0xffff58212070    80  sub csp, jssp, #0x10 (16)
0xffff58212074    84  stp fp, lr, [jssp, #-16]!
0xffff58212078    88  movz fp, #0xa00000000
0xffff5821207c    92  sub csp, jssp, #0x8 (8)
0xffff58212080    96  str fp, [jssp, #-8]!
0xffff58212084   100  add fp, jssp, #0x8 (8)
0xffff58212088   104  movz x2, #0x0
0xffff5821208c   108  mov x16, lr
0xffff58212090   112  ldr x17, pc+64 (addr 0x0000ffff582120d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212094   116  blr x17
0xffff58212098   120  ldur cp, [fp, #-8]
0xffff5821209c   124  movz x0, #0x0
0xffff582120a0   128  movz x1, #0x4b48
0xffff582120a4   132  movk x1, #0xe4, lsl #16
0xffff582120a8   136  ldr x16, pc+48 (addr 0x0000ffff582120d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582120ac   140  blr x16
0xffff582120b0   144  str x0, [jssp, #16]
0xffff582120b4   148  ldr x16, pc+44 (addr 0x0000ffff582120e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582120b8   152  blr x16
0xffff582120bc   156  ldr lr, [jssp, #16]
0xffff582120c0   160  ldp xzr, fp, [jssp], #24
0xffff582120c4   164  b #-0x60 (addr 0xffff58212064)
0xffff582120c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582120cc   172  d63f03e0       constant
0xffff582120d0   176  58206820       constant
0xffff582120d4   180  0000ffff       constant
0xffff582120d8   184  58206260       constant
0xffff582120dc   188  0000ffff       constant
0xffff582120e0   192  582068e0       constant
0xffff582120e4   196  0000ffff       constant
0xffff582120e8   200  movz x16, #0x0
0xffff582120ec   204  sub csp, jssp, #0x10 (16)
0xffff582120f0   208  stp fp, lr, [jssp, #-16]!
0xffff582120f4   212  bl #+0x14 (addr 0xffff58212108)
0xffff582120f8   216  movz x16, #0x8
0xffff582120fc   220  sub csp, jssp, #0x10 (16)
0xffff58212100   224  stp fp, lr, [jssp, #-16]!
0xffff58212104   228  bl #+0x4 (addr 0xffff58212108)
0xffff58212108   232  movz x17, #0xa00000000
0xffff5821210c   236  sub csp, jssp, #0x10 (16)
0xffff58212110   240  stp x17, cp, [jssp, #-16]!
0xffff58212114   244  add fp, jssp, #0x10 (16)
0xffff58212118   248  ldr x17, pc+24 (addr 0x0000ffff58212130)    ;; lazy deoptimization bailout 0
0xffff5821211c   252  add x17, x17, x16
0xffff58212120   256  br x17
0xffff58212124   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212128   264  d63f03e0       constant
0xffff5821212c   268  d503201f       constant
0xffff58212130   272  58006000       constant
0xffff58212134   276  0000ffff       constant


Safepoints (size = 21)
0xffff582120b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58212090  code target (STUB)  (0xffff58206820)
0xffff582120a8  code target (STUB)  (0xffff58206260)
0xffff582120b4  code target (STUB)  (0xffff582068e0)
0xffff582120c8  constant pool (size 32)
0xffff58212118  runtime entry
0xffff58212124  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2362
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff58212020     0  mov x2, x1
0xffff58212024     4  tbnz w2, #0, #+0xc4 (addr 0xffff582120e8)
0xffff58212028     8  mov x3, x0
0xffff5821202c    12  tbnz w3, #0, #+0xcc (addr 0xffff582120f8)
0xffff58212030    16  scvtf d0, x2, #32
0xffff58212034    20  scvtf d1, x3, #32
0xffff58212038    24  fdiv d0, d0, d1
0xffff5821203c    28  movz x1, #0x92c0
0xffff58212040    32  movk x1, #0x16e7, lsl #16
0xffff58212044    36  ldp x2, x0, [x1]
0xffff58212048    40  adds x16, x2, #0x10 (16)
0xffff5821204c    44  ccmp x16, x0, #nzCv, lo
0xffff58212050    48  b.hi #+0x20 (addr 0xffff58212070)
0xffff58212054    52  str x16, [x1]
0xffff58212058    56  ldr x1, [x26, #120]
0xffff5821205c    60  str x1, [x2]
0xffff58212060    64  orr x2, x2, #0x1
0xffff58212064    68  stur d0, [x2, #7]
0xffff58212068    72  mov x0, x2
0xffff5821206c    76  ret
0xffff58212070    80  sub csp, jssp, #0x10 (16)
0xffff58212074    84  stp fp, lr, [jssp, #-16]!
0xffff58212078    88  movz fp, #0xa00000000
0xffff5821207c    92  sub csp, jssp, #0x8 (8)
0xffff58212080    96  str fp, [jssp, #-8]!
0xffff58212084   100  add fp, jssp, #0x8 (8)
0xffff58212088   104  movz x2, #0x0
0xffff5821208c   108  mov x16, lr
0xffff58212090   112  ldr x17, pc+64 (addr 0x0000ffff582120d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212094   116  blr x17
0xffff58212098   120  ldur cp, [fp, #-8]
0xffff5821209c   124  movz x0, #0x0
0xffff582120a0   128  movz x1, #0x4b48
0xffff582120a4   132  movk x1, #0xe4, lsl #16
0xffff582120a8   136  ldr x16, pc+48 (addr 0x0000ffff582120d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582120ac   140  blr x16
0xffff582120b0   144  str x0, [jssp, #16]
0xffff582120b4   148  ldr x16, pc+44 (addr 0x0000ffff582120e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582120b8   152  blr x16
0xffff582120bc   156  ldr lr, [jssp, #16]
0xffff582120c0   160  ldp xzr, fp, [jssp], #24
0xffff582120c4   164  b #-0x60 (addr 0xffff58212064)
0xffff582120c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582120cc   172  d63f03e0       constant
0xffff582120d0   176  58206820       constant
0xffff582120d4   180  0000ffff       constant
0xffff582120d8   184  58206260       constant
0xffff582120dc   188  0000ffff       constant
0xffff582120e0   192  582068e0       constant
0xffff582120e4   196  0000ffff       constant
0xffff582120e8   200  movz x16, #0x0
0xffff582120ec   204  sub csp, jssp, #0x10 (16)
0xffff582120f0   208  stp fp, lr, [jssp, #-16]!
0xffff582120f4   212  bl #+0x14 (addr 0xffff58212108)
0xffff582120f8   216  movz x16, #0x8
0xffff582120fc   220  sub csp, jssp, #0x10 (16)
0xffff58212100   224  stp fp, lr, [jssp, #-16]!
0xffff58212104   228  bl #+0x4 (addr 0xffff58212108)
0xffff58212108   232  movz x17, #0xa00000000
0xffff5821210c   236  sub csp, jssp, #0x10 (16)
0xffff58212110   240  stp x17, cp, [jssp, #-16]!
0xffff58212114   244  add fp, jssp, #0x10 (16)
0xffff58212118   248  ldr x17, pc+24 (addr 0x0000ffff58212130)    ;; lazy deoptimization bailout 0
0xffff5821211c   252  add x17, x17, x16
0xffff58212120   256  br x17
0xffff58212124   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212128   264  d63f03e0       constant
0xffff5821212c   268  d503201f       constant
0xffff58212130   272  58006000       constant
0xffff58212134   276  0000ffff       constant


Safepoints (size = 21)
0xffff582120b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58212090  code target (STUB)  (0xffff58206820)
0xffff582120a8  code target (STUB)  (0xffff58206260)
0xffff582120b4  code target (STUB)  (0xffff582068e0)
0xffff582120c8  constant pool (size 32)
0xffff58212118  runtime entry
0xffff58212124  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4538
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff582121c0     0  mov x2, x0
0xffff582121c4     4  tbnz w2, #0, #+0xf4 (addr 0xffff582122b8)
0xffff582121c8     8  tbz w1, #0, #+0x34 (addr 0xffff582121fc)
0xffff582121cc    12  ldur x16, [x1, #-1]
0xffff582121d0    16  ldr x17, [x26, #120]
0xffff582121d4    20  cmp x16, x17
0xffff582121d8    24  b.ne #+0xc (addr 0xffff582121e4)
0xffff582121dc    28  ldur d0, [x1, #7]
0xffff582121e0    32  b #+0x20 (addr 0xffff58212200)
0xffff582121e4    36  ldr x16, [x26, #40]
0xffff582121e8    40  cmp x1, x16
0xffff582121ec    44  b.ne #+0xdc (addr 0xffff582122c8)
0xffff582121f0    48  ldr x3, [x26, #928]
0xffff582121f4    52  ldur d0, [x3, #7]
0xffff582121f8    56  b #+0x8 (addr 0xffff58212200)
0xffff582121fc    60  scvtf d0, x1, #32
0xffff58212200    64  scvtf d1, x2, #32
0xffff58212204    68  fdiv d0, d0, d1
0xffff58212208    72  movz x1, #0x92c0
0xffff5821220c    76  movk x1, #0x16e7, lsl #16
0xffff58212210    80  ldp x2, x0, [x1]
0xffff58212214    84  adds x16, x2, #0x10 (16)
0xffff58212218    88  ccmp x16, x0, #nzCv, lo
0xffff5821221c    92  b.hi #+0x20 (addr 0xffff5821223c)
0xffff58212220    96  str x16, [x1]
0xffff58212224   100  ldr x1, [x26, #120]
0xffff58212228   104  str x1, [x2]
0xffff5821222c   108  orr x2, x2, #0x1
0xffff58212230   112  stur d0, [x2, #7]
0xffff58212234   116  mov x0, x2
0xffff58212238   120  ret
0xffff5821223c   124  sub csp, jssp, #0x10 (16)
0xffff58212240   128  stp fp, lr, [jssp, #-16]!
0xffff58212244   132  movz fp, #0xa00000000
0xffff58212248   136  sub csp, jssp, #0x8 (8)
0xffff5821224c   140  str fp, [jssp, #-8]!
0xffff58212250   144  add fp, jssp, #0x8 (8)
0xffff58212254   148  movz x2, #0x0
0xffff58212258   152  mov x16, lr
0xffff5821225c   156  ldr x17, pc+68 (addr 0x0000ffff582122a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212260   160  blr x17
0xffff58212264   164  ldur cp, [fp, #-8]
0xffff58212268   168  movz x0, #0x0
0xffff5821226c   172  movz x1, #0x4b48
0xffff58212270   176  movk x1, #0xe4, lsl #16
0xffff58212274   180  ldr x16, pc+52 (addr 0x0000ffff582122a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212278   184  blr x16
0xffff5821227c   188  str x0, [jssp, #16]
0xffff58212280   192  ldr x16, pc+48 (addr 0x0000ffff582122b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212284   196  blr x16
0xffff58212288   200  ldr lr, [jssp, #16]
0xffff5821228c   204  ldp xzr, fp, [jssp], #24
0xffff58212290   208  b #-0x60 (addr 0xffff58212230)
0xffff58212294   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58212298   216  d63f03e0       constant
0xffff5821229c   220  d503201f       constant
0xffff582122a0   224  58206820       constant
0xffff582122a4   228  0000ffff       constant
0xffff582122a8   232  58206260       constant
0xffff582122ac   236  0000ffff       constant
0xffff582122b0   240  582068e0       constant
0xffff582122b4   244  0000ffff       constant
0xffff582122b8   248  movz x16, #0x0
0xffff582122bc   252  sub csp, jssp, #0x10 (16)
0xffff582122c0   256  stp fp, lr, [jssp, #-16]!
0xffff582122c4   260  bl #+0x14 (addr 0xffff582122d8)
0xffff582122c8   264  movz x16, #0x8
0xffff582122cc   268  sub csp, jssp, #0x10 (16)
0xffff582122d0   272  stp fp, lr, [jssp, #-16]!
0xffff582122d4   276  bl #+0x4 (addr 0xffff582122d8)
0xffff582122d8   280  movz x17, #0xa00000000
0xffff582122dc   284  sub csp, jssp, #0x10 (16)
0xffff582122e0   288  stp x17, cp, [jssp, #-16]!
0xffff582122e4   292  add fp, jssp, #0x10 (16)
0xffff582122e8   296  ldr x17, pc+24 (addr 0x0000ffff58212300)    ;; lazy deoptimization bailout 0
0xffff582122ec   300  add x17, x17, x16
0xffff582122f0   304  br x17
0xffff582122f4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582122f8   312  d63f03e0       constant
0xffff582122fc   316  d503201f       constant
0xffff58212300   320  58006000       constant
0xffff58212304   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821227c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5821225c  code target (STUB)  (0xffff58206820)
0xffff58212274  code target (STUB)  (0xffff58206260)
0xffff58212280  code target (STUB)  (0xffff582068e0)
0xffff58212294  constant pool (size 36)
0xffff582122e8  runtime entry
0xffff582122f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4538
type = NORMAL
name = BinaryOpICStub(DIV:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff582121c0     0  mov x2, x0
0xffff582121c4     4  tbnz w2, #0, #+0xf4 (addr 0xffff582122b8)
0xffff582121c8     8  tbz w1, #0, #+0x34 (addr 0xffff582121fc)
0xffff582121cc    12  ldur x16, [x1, #-1]
0xffff582121d0    16  ldr x17, [x26, #120]
0xffff582121d4    20  cmp x16, x17
0xffff582121d8    24  b.ne #+0xc (addr 0xffff582121e4)
0xffff582121dc    28  ldur d0, [x1, #7]
0xffff582121e0    32  b #+0x20 (addr 0xffff58212200)
0xffff582121e4    36  ldr x16, [x26, #40]
0xffff582121e8    40  cmp x1, x16
0xffff582121ec    44  b.ne #+0xdc (addr 0xffff582122c8)
0xffff582121f0    48  ldr x3, [x26, #928]
0xffff582121f4    52  ldur d0, [x3, #7]
0xffff582121f8    56  b #+0x8 (addr 0xffff58212200)
0xffff582121fc    60  scvtf d0, x1, #32
0xffff58212200    64  scvtf d1, x2, #32
0xffff58212204    68  fdiv d0, d0, d1
0xffff58212208    72  movz x1, #0x92c0
0xffff5821220c    76  movk x1, #0x16e7, lsl #16
0xffff58212210    80  ldp x2, x0, [x1]
0xffff58212214    84  adds x16, x2, #0x10 (16)
0xffff58212218    88  ccmp x16, x0, #nzCv, lo
0xffff5821221c    92  b.hi #+0x20 (addr 0xffff5821223c)
0xffff58212220    96  str x16, [x1]
0xffff58212224   100  ldr x1, [x26, #120]
0xffff58212228   104  str x1, [x2]
0xffff5821222c   108  orr x2, x2, #0x1
0xffff58212230   112  stur d0, [x2, #7]
0xffff58212234   116  mov x0, x2
0xffff58212238   120  ret
0xffff5821223c   124  sub csp, jssp, #0x10 (16)
0xffff58212240   128  stp fp, lr, [jssp, #-16]!
0xffff58212244   132  movz fp, #0xa00000000
0xffff58212248   136  sub csp, jssp, #0x8 (8)
0xffff5821224c   140  str fp, [jssp, #-8]!
0xffff58212250   144  add fp, jssp, #0x8 (8)
0xffff58212254   148  movz x2, #0x0
0xffff58212258   152  mov x16, lr
0xffff5821225c   156  ldr x17, pc+68 (addr 0x0000ffff582122a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212260   160  blr x17
0xffff58212264   164  ldur cp, [fp, #-8]
0xffff58212268   168  movz x0, #0x0
0xffff5821226c   172  movz x1, #0x4b48
0xffff58212270   176  movk x1, #0xe4, lsl #16
0xffff58212274   180  ldr x16, pc+52 (addr 0x0000ffff582122a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212278   184  blr x16
0xffff5821227c   188  str x0, [jssp, #16]
0xffff58212280   192  ldr x16, pc+48 (addr 0x0000ffff582122b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212284   196  blr x16
0xffff58212288   200  ldr lr, [jssp, #16]
0xffff5821228c   204  ldp xzr, fp, [jssp], #24
0xffff58212290   208  b #-0x60 (addr 0xffff58212230)
0xffff58212294   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58212298   216  d63f03e0       constant
0xffff5821229c   220  d503201f       constant
0xffff582122a0   224  58206820       constant
0xffff582122a4   228  0000ffff       constant
0xffff582122a8   232  58206260       constant
0xffff582122ac   236  0000ffff       constant
0xffff582122b0   240  582068e0       constant
0xffff582122b4   244  0000ffff       constant
0xffff582122b8   248  movz x16, #0x0
0xffff582122bc   252  sub csp, jssp, #0x10 (16)
0xffff582122c0   256  stp fp, lr, [jssp, #-16]!
0xffff582122c4   260  bl #+0x14 (addr 0xffff582122d8)
0xffff582122c8   264  movz x16, #0x8
0xffff582122cc   268  sub csp, jssp, #0x10 (16)
0xffff582122d0   272  stp fp, lr, [jssp, #-16]!
0xffff582122d4   276  bl #+0x4 (addr 0xffff582122d8)
0xffff582122d8   280  movz x17, #0xa00000000
0xffff582122dc   284  sub csp, jssp, #0x10 (16)
0xffff582122e0   288  stp x17, cp, [jssp, #-16]!
0xffff582122e4   292  add fp, jssp, #0x10 (16)
0xffff582122e8   296  ldr x17, pc+24 (addr 0x0000ffff58212300)    ;; lazy deoptimization bailout 0
0xffff582122ec   300  add x17, x17, x16
0xffff582122f0   304  br x17
0xffff582122f4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582122f8   312  d63f03e0       constant
0xffff582122fc   316  d503201f       constant
0xffff58212300   320  58006000       constant
0xffff58212304   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821227c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5821225c  code target (STUB)  (0xffff58206820)
0xffff58212274  code target (STUB)  (0xffff58206260)
0xffff58212280  code target (STUB)  (0xffff582068e0)
0xffff58212294  constant pool (size 36)
0xffff582122e8  runtime entry
0xffff582122f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6586
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff58212380     0  tbz w1, #0, #+0x34 (addr 0xffff582123b4)
0xffff58212384     4  ldur x16, [x1, #-1]
0xffff58212388     8  ldr x17, [x26, #120]
0xffff5821238c    12  cmp x16, x17
0xffff58212390    16  b.ne #+0xc (addr 0xffff5821239c)
0xffff58212394    20  ldur d0, [x1, #7]
0xffff58212398    24  b #+0x20 (addr 0xffff582123b8)
0xffff5821239c    28  ldr x16, [x26, #40]
0xffff582123a0    32  cmp x1, x16
0xffff582123a4    36  b.ne #+0xfc (addr 0xffff582124a0)
0xffff582123a8    40  ldr x2, [x26, #928]
0xffff582123ac    44  ldur d0, [x2, #7]
0xffff582123b0    48  b #+0x8 (addr 0xffff582123b8)
0xffff582123b4    52  scvtf d0, x1, #32
0xffff582123b8    56  tbz w0, #0, #+0x34 (addr 0xffff582123ec)
0xffff582123bc    60  ldur x16, [x0, #-1]
0xffff582123c0    64  ldr x17, [x26, #120]
0xffff582123c4    68  cmp x16, x17
0xffff582123c8    72  b.ne #+0xc (addr 0xffff582123d4)
0xffff582123cc    76  ldur d1, [x0, #7]
0xffff582123d0    80  b #+0x20 (addr 0xffff582123f0)
0xffff582123d4    84  ldr x16, [x26, #40]
0xffff582123d8    88  cmp x0, x16
0xffff582123dc    92  b.ne #+0xd4 (addr 0xffff582124b0)
0xffff582123e0    96  ldr x2, [x26, #928]
0xffff582123e4   100  ldur d1, [x2, #7]
0xffff582123e8   104  b #+0x8 (addr 0xffff582123f0)
0xffff582123ec   108  scvtf d1, x0, #32
0xffff582123f0   112  fdiv d0, d0, d1
0xffff582123f4   116  movz x1, #0x92c0
0xffff582123f8   120  movk x1, #0x16e7, lsl #16
0xffff582123fc   124  ldp x2, x0, [x1]
0xffff58212400   128  adds x16, x2, #0x10 (16)
0xffff58212404   132  ccmp x16, x0, #nzCv, lo
0xffff58212408   136  b.hi #+0x20 (addr 0xffff58212428)
0xffff5821240c   140  str x16, [x1]
0xffff58212410   144  ldr x1, [x26, #120]
0xffff58212414   148  str x1, [x2]
0xffff58212418   152  orr x2, x2, #0x1
0xffff5821241c   156  stur d0, [x2, #7]
0xffff58212420   160  mov x0, x2
0xffff58212424   164  ret
0xffff58212428   168  sub csp, jssp, #0x10 (16)
0xffff5821242c   172  stp fp, lr, [jssp, #-16]!
0xffff58212430   176  movz fp, #0xa00000000
0xffff58212434   180  sub csp, jssp, #0x8 (8)
0xffff58212438   184  str fp, [jssp, #-8]!
0xffff5821243c   188  add fp, jssp, #0x8 (8)
0xffff58212440   192  movz x2, #0x0
0xffff58212444   196  mov x16, lr
0xffff58212448   200  ldr x17, pc+64 (addr 0x0000ffff58212488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5821244c   204  blr x17
0xffff58212450   208  ldur cp, [fp, #-8]
0xffff58212454   212  movz x0, #0x0
0xffff58212458   216  movz x1, #0x4b48
0xffff5821245c   220  movk x1, #0xe4, lsl #16
0xffff58212460   224  ldr x16, pc+48 (addr 0x0000ffff58212490)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212464   228  blr x16
0xffff58212468   232  str x0, [jssp, #16]
0xffff5821246c   236  ldr x16, pc+44 (addr 0x0000ffff58212498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212470   240  blr x16
0xffff58212474   244  ldr lr, [jssp, #16]
0xffff58212478   248  ldp xzr, fp, [jssp], #24
0xffff5821247c   252  b #-0x60 (addr 0xffff5821241c)
0xffff58212480   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58212484   260  d63f03e0       constant
0xffff58212488   264  58206820       constant
0xffff5821248c   268  0000ffff       constant
0xffff58212490   272  58206260       constant
0xffff58212494   276  0000ffff       constant
0xffff58212498   280  582068e0       constant
0xffff5821249c   284  0000ffff       constant
0xffff582124a0   288  movz x16, #0x0
0xffff582124a4   292  sub csp, jssp, #0x10 (16)
0xffff582124a8   296  stp fp, lr, [jssp, #-16]!
0xffff582124ac   300  bl #+0x14 (addr 0xffff582124c0)
0xffff582124b0   304  movz x16, #0x8
0xffff582124b4   308  sub csp, jssp, #0x10 (16)
0xffff582124b8   312  stp fp, lr, [jssp, #-16]!
0xffff582124bc   316  bl #+0x4 (addr 0xffff582124c0)
0xffff582124c0   320  movz x17, #0xa00000000
0xffff582124c4   324  sub csp, jssp, #0x10 (16)
0xffff582124c8   328  stp x17, cp, [jssp, #-16]!
0xffff582124cc   332  add fp, jssp, #0x10 (16)
0xffff582124d0   336  ldr x17, pc+24 (addr 0x0000ffff582124e8)    ;; lazy deoptimization bailout 0
0xffff582124d4   340  add x17, x17, x16
0xffff582124d8   344  br x17
0xffff582124dc   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582124e0   352  d63f03e0       constant
0xffff582124e4   356  d503201f       constant
0xffff582124e8   360  58006000       constant
0xffff582124ec   364  0000ffff       constant


Safepoints (size = 21)
0xffff58212468   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58212448  code target (STUB)  (0xffff58206820)
0xffff58212460  code target (STUB)  (0xffff58206260)
0xffff5821246c  code target (STUB)  (0xffff582068e0)
0xffff58212480  constant pool (size 32)
0xffff582124d0  runtime entry
0xffff582124dc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6586
type = NORMAL
name = BinaryOpICStub(DIV:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff58212380     0  tbz w1, #0, #+0x34 (addr 0xffff582123b4)
0xffff58212384     4  ldur x16, [x1, #-1]
0xffff58212388     8  ldr x17, [x26, #120]
0xffff5821238c    12  cmp x16, x17
0xffff58212390    16  b.ne #+0xc (addr 0xffff5821239c)
0xffff58212394    20  ldur d0, [x1, #7]
0xffff58212398    24  b #+0x20 (addr 0xffff582123b8)
0xffff5821239c    28  ldr x16, [x26, #40]
0xffff582123a0    32  cmp x1, x16
0xffff582123a4    36  b.ne #+0xfc (addr 0xffff582124a0)
0xffff582123a8    40  ldr x2, [x26, #928]
0xffff582123ac    44  ldur d0, [x2, #7]
0xffff582123b0    48  b #+0x8 (addr 0xffff582123b8)
0xffff582123b4    52  scvtf d0, x1, #32
0xffff582123b8    56  tbz w0, #0, #+0x34 (addr 0xffff582123ec)
0xffff582123bc    60  ldur x16, [x0, #-1]
0xffff582123c0    64  ldr x17, [x26, #120]
0xffff582123c4    68  cmp x16, x17
0xffff582123c8    72  b.ne #+0xc (addr 0xffff582123d4)
0xffff582123cc    76  ldur d1, [x0, #7]
0xffff582123d0    80  b #+0x20 (addr 0xffff582123f0)
0xffff582123d4    84  ldr x16, [x26, #40]
0xffff582123d8    88  cmp x0, x16
0xffff582123dc    92  b.ne #+0xd4 (addr 0xffff582124b0)
0xffff582123e0    96  ldr x2, [x26, #928]
0xffff582123e4   100  ldur d1, [x2, #7]
0xffff582123e8   104  b #+0x8 (addr 0xffff582123f0)
0xffff582123ec   108  scvtf d1, x0, #32
0xffff582123f0   112  fdiv d0, d0, d1
0xffff582123f4   116  movz x1, #0x92c0
0xffff582123f8   120  movk x1, #0x16e7, lsl #16
0xffff582123fc   124  ldp x2, x0, [x1]
0xffff58212400   128  adds x16, x2, #0x10 (16)
0xffff58212404   132  ccmp x16, x0, #nzCv, lo
0xffff58212408   136  b.hi #+0x20 (addr 0xffff58212428)
0xffff5821240c   140  str x16, [x1]
0xffff58212410   144  ldr x1, [x26, #120]
0xffff58212414   148  str x1, [x2]
0xffff58212418   152  orr x2, x2, #0x1
0xffff5821241c   156  stur d0, [x2, #7]
0xffff58212420   160  mov x0, x2
0xffff58212424   164  ret
0xffff58212428   168  sub csp, jssp, #0x10 (16)
0xffff5821242c   172  stp fp, lr, [jssp, #-16]!
0xffff58212430   176  movz fp, #0xa00000000
0xffff58212434   180  sub csp, jssp, #0x8 (8)
0xffff58212438   184  str fp, [jssp, #-8]!
0xffff5821243c   188  add fp, jssp, #0x8 (8)
0xffff58212440   192  movz x2, #0x0
0xffff58212444   196  mov x16, lr
0xffff58212448   200  ldr x17, pc+64 (addr 0x0000ffff58212488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5821244c   204  blr x17
0xffff58212450   208  ldur cp, [fp, #-8]
0xffff58212454   212  movz x0, #0x0
0xffff58212458   216  movz x1, #0x4b48
0xffff5821245c   220  movk x1, #0xe4, lsl #16
0xffff58212460   224  ldr x16, pc+48 (addr 0x0000ffff58212490)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212464   228  blr x16
0xffff58212468   232  str x0, [jssp, #16]
0xffff5821246c   236  ldr x16, pc+44 (addr 0x0000ffff58212498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212470   240  blr x16
0xffff58212474   244  ldr lr, [jssp, #16]
0xffff58212478   248  ldp xzr, fp, [jssp], #24
0xffff5821247c   252  b #-0x60 (addr 0xffff5821241c)
0xffff58212480   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58212484   260  d63f03e0       constant
0xffff58212488   264  58206820       constant
0xffff5821248c   268  0000ffff       constant
0xffff58212490   272  58206260       constant
0xffff58212494   276  0000ffff       constant
0xffff58212498   280  582068e0       constant
0xffff5821249c   284  0000ffff       constant
0xffff582124a0   288  movz x16, #0x0
0xffff582124a4   292  sub csp, jssp, #0x10 (16)
0xffff582124a8   296  stp fp, lr, [jssp, #-16]!
0xffff582124ac   300  bl #+0x14 (addr 0xffff582124c0)
0xffff582124b0   304  movz x16, #0x8
0xffff582124b4   308  sub csp, jssp, #0x10 (16)
0xffff582124b8   312  stp fp, lr, [jssp, #-16]!
0xffff582124bc   316  bl #+0x4 (addr 0xffff582124c0)
0xffff582124c0   320  movz x17, #0xa00000000
0xffff582124c4   324  sub csp, jssp, #0x10 (16)
0xffff582124c8   328  stp x17, cp, [jssp, #-16]!
0xffff582124cc   332  add fp, jssp, #0x10 (16)
0xffff582124d0   336  ldr x17, pc+24 (addr 0x0000ffff582124e8)    ;; lazy deoptimization bailout 0
0xffff582124d4   340  add x17, x17, x16
0xffff582124d8   344  br x17
0xffff582124dc   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582124e0   352  d63f03e0       constant
0xffff582124e4   356  d503201f       constant
0xffff582124e8   360  58006000       constant
0xffff582124ec   364  0000ffff       constant


Safepoints (size = 21)
0xffff58212468   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58212448  code target (STUB)  (0xffff58206820)
0xffff58212460  code target (STUB)  (0xffff58206260)
0xffff5821246c  code target (STUB)  (0xffff582068e0)
0xffff58212480  constant pool (size 32)
0xffff582124d0  runtime entry
0xffff582124dc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2490
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff58212580     0  mov x2, x0
0xffff58212584     4  tbnz w2, #0, #+0xf4 (addr 0xffff58212678)
0xffff58212588     8  tbz w1, #0, #+0x34 (addr 0xffff582125bc)
0xffff5821258c    12  ldur x16, [x1, #-1]
0xffff58212590    16  ldr x17, [x26, #120]
0xffff58212594    20  cmp x16, x17
0xffff58212598    24  b.ne #+0xc (addr 0xffff582125a4)
0xffff5821259c    28  ldur d0, [x1, #7]
0xffff582125a0    32  b #+0x20 (addr 0xffff582125c0)
0xffff582125a4    36  ldr x16, [x26, #40]
0xffff582125a8    40  cmp x1, x16
0xffff582125ac    44  b.ne #+0xdc (addr 0xffff58212688)
0xffff582125b0    48  ldr x3, [x26, #928]
0xffff582125b4    52  ldur d0, [x3, #7]
0xffff582125b8    56  b #+0x8 (addr 0xffff582125c0)
0xffff582125bc    60  scvtf d0, x1, #32
0xffff582125c0    64  scvtf d1, x2, #32
0xffff582125c4    68  fdiv d0, d0, d1
0xffff582125c8    72  movz x1, #0x92c0
0xffff582125cc    76  movk x1, #0x16e7, lsl #16
0xffff582125d0    80  ldp x2, x0, [x1]
0xffff582125d4    84  adds x16, x2, #0x10 (16)
0xffff582125d8    88  ccmp x16, x0, #nzCv, lo
0xffff582125dc    92  b.hi #+0x20 (addr 0xffff582125fc)
0xffff582125e0    96  str x16, [x1]
0xffff582125e4   100  ldr x1, [x26, #120]
0xffff582125e8   104  str x1, [x2]
0xffff582125ec   108  orr x2, x2, #0x1
0xffff582125f0   112  stur d0, [x2, #7]
0xffff582125f4   116  mov x0, x2
0xffff582125f8   120  ret
0xffff582125fc   124  sub csp, jssp, #0x10 (16)
0xffff58212600   128  stp fp, lr, [jssp, #-16]!
0xffff58212604   132  movz fp, #0xa00000000
0xffff58212608   136  sub csp, jssp, #0x8 (8)
0xffff5821260c   140  str fp, [jssp, #-8]!
0xffff58212610   144  add fp, jssp, #0x8 (8)
0xffff58212614   148  movz x2, #0x0
0xffff58212618   152  mov x16, lr
0xffff5821261c   156  ldr x17, pc+68 (addr 0x0000ffff58212660)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212620   160  blr x17
0xffff58212624   164  ldur cp, [fp, #-8]
0xffff58212628   168  movz x0, #0x0
0xffff5821262c   172  movz x1, #0x4b48
0xffff58212630   176  movk x1, #0xe4, lsl #16
0xffff58212634   180  ldr x16, pc+52 (addr 0x0000ffff58212668)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212638   184  blr x16
0xffff5821263c   188  str x0, [jssp, #16]
0xffff58212640   192  ldr x16, pc+48 (addr 0x0000ffff58212670)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212644   196  blr x16
0xffff58212648   200  ldr lr, [jssp, #16]
0xffff5821264c   204  ldp xzr, fp, [jssp], #24
0xffff58212650   208  b #-0x60 (addr 0xffff582125f0)
0xffff58212654   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58212658   216  d63f03e0       constant
0xffff5821265c   220  d503201f       constant
0xffff58212660   224  58206820       constant
0xffff58212664   228  0000ffff       constant
0xffff58212668   232  58206260       constant
0xffff5821266c   236  0000ffff       constant
0xffff58212670   240  582068e0       constant
0xffff58212674   244  0000ffff       constant
0xffff58212678   248  movz x16, #0x0
0xffff5821267c   252  sub csp, jssp, #0x10 (16)
0xffff58212680   256  stp fp, lr, [jssp, #-16]!
0xffff58212684   260  bl #+0x14 (addr 0xffff58212698)
0xffff58212688   264  movz x16, #0x8
0xffff5821268c   268  sub csp, jssp, #0x10 (16)
0xffff58212690   272  stp fp, lr, [jssp, #-16]!
0xffff58212694   276  bl #+0x4 (addr 0xffff58212698)
0xffff58212698   280  movz x17, #0xa00000000
0xffff5821269c   284  sub csp, jssp, #0x10 (16)
0xffff582126a0   288  stp x17, cp, [jssp, #-16]!
0xffff582126a4   292  add fp, jssp, #0x10 (16)
0xffff582126a8   296  ldr x17, pc+24 (addr 0x0000ffff582126c0)    ;; lazy deoptimization bailout 0
0xffff582126ac   300  add x17, x17, x16
0xffff582126b0   304  br x17
0xffff582126b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582126b8   312  d63f03e0       constant
0xffff582126bc   316  d503201f       constant
0xffff582126c0   320  58006000       constant
0xffff582126c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821263c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5821261c  code target (STUB)  (0xffff58206820)
0xffff58212634  code target (STUB)  (0xffff58206260)
0xffff58212640  code target (STUB)  (0xffff582068e0)
0xffff58212654  constant pool (size 36)
0xffff582126a8  runtime entry
0xffff582126b4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2490
type = NORMAL
name = BinaryOpICStub(DIV:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff58212580     0  mov x2, x0
0xffff58212584     4  tbnz w2, #0, #+0xf4 (addr 0xffff58212678)
0xffff58212588     8  tbz w1, #0, #+0x34 (addr 0xffff582125bc)
0xffff5821258c    12  ldur x16, [x1, #-1]
0xffff58212590    16  ldr x17, [x26, #120]
0xffff58212594    20  cmp x16, x17
0xffff58212598    24  b.ne #+0xc (addr 0xffff582125a4)
0xffff5821259c    28  ldur d0, [x1, #7]
0xffff582125a0    32  b #+0x20 (addr 0xffff582125c0)
0xffff582125a4    36  ldr x16, [x26, #40]
0xffff582125a8    40  cmp x1, x16
0xffff582125ac    44  b.ne #+0xdc (addr 0xffff58212688)
0xffff582125b0    48  ldr x3, [x26, #928]
0xffff582125b4    52  ldur d0, [x3, #7]
0xffff582125b8    56  b #+0x8 (addr 0xffff582125c0)
0xffff582125bc    60  scvtf d0, x1, #32
0xffff582125c0    64  scvtf d1, x2, #32
0xffff582125c4    68  fdiv d0, d0, d1
0xffff582125c8    72  movz x1, #0x92c0
0xffff582125cc    76  movk x1, #0x16e7, lsl #16
0xffff582125d0    80  ldp x2, x0, [x1]
0xffff582125d4    84  adds x16, x2, #0x10 (16)
0xffff582125d8    88  ccmp x16, x0, #nzCv, lo
0xffff582125dc    92  b.hi #+0x20 (addr 0xffff582125fc)
0xffff582125e0    96  str x16, [x1]
0xffff582125e4   100  ldr x1, [x26, #120]
0xffff582125e8   104  str x1, [x2]
0xffff582125ec   108  orr x2, x2, #0x1
0xffff582125f0   112  stur d0, [x2, #7]
0xffff582125f4   116  mov x0, x2
0xffff582125f8   120  ret
0xffff582125fc   124  sub csp, jssp, #0x10 (16)
0xffff58212600   128  stp fp, lr, [jssp, #-16]!
0xffff58212604   132  movz fp, #0xa00000000
0xffff58212608   136  sub csp, jssp, #0x8 (8)
0xffff5821260c   140  str fp, [jssp, #-8]!
0xffff58212610   144  add fp, jssp, #0x8 (8)
0xffff58212614   148  movz x2, #0x0
0xffff58212618   152  mov x16, lr
0xffff5821261c   156  ldr x17, pc+68 (addr 0x0000ffff58212660)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212620   160  blr x17
0xffff58212624   164  ldur cp, [fp, #-8]
0xffff58212628   168  movz x0, #0x0
0xffff5821262c   172  movz x1, #0x4b48
0xffff58212630   176  movk x1, #0xe4, lsl #16
0xffff58212634   180  ldr x16, pc+52 (addr 0x0000ffff58212668)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212638   184  blr x16
0xffff5821263c   188  str x0, [jssp, #16]
0xffff58212640   192  ldr x16, pc+48 (addr 0x0000ffff58212670)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212644   196  blr x16
0xffff58212648   200  ldr lr, [jssp, #16]
0xffff5821264c   204  ldp xzr, fp, [jssp], #24
0xffff58212650   208  b #-0x60 (addr 0xffff582125f0)
0xffff58212654   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58212658   216  d63f03e0       constant
0xffff5821265c   220  d503201f       constant
0xffff58212660   224  58206820       constant
0xffff58212664   228  0000ffff       constant
0xffff58212668   232  58206260       constant
0xffff5821266c   236  0000ffff       constant
0xffff58212670   240  582068e0       constant
0xffff58212674   244  0000ffff       constant
0xffff58212678   248  movz x16, #0x0
0xffff5821267c   252  sub csp, jssp, #0x10 (16)
0xffff58212680   256  stp fp, lr, [jssp, #-16]!
0xffff58212684   260  bl #+0x14 (addr 0xffff58212698)
0xffff58212688   264  movz x16, #0x8
0xffff5821268c   268  sub csp, jssp, #0x10 (16)
0xffff58212690   272  stp fp, lr, [jssp, #-16]!
0xffff58212694   276  bl #+0x4 (addr 0xffff58212698)
0xffff58212698   280  movz x17, #0xa00000000
0xffff5821269c   284  sub csp, jssp, #0x10 (16)
0xffff582126a0   288  stp x17, cp, [jssp, #-16]!
0xffff582126a4   292  add fp, jssp, #0x10 (16)
0xffff582126a8   296  ldr x17, pc+24 (addr 0x0000ffff582126c0)    ;; lazy deoptimization bailout 0
0xffff582126ac   300  add x17, x17, x16
0xffff582126b0   304  br x17
0xffff582126b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582126b8   312  d63f03e0       constant
0xffff582126bc   316  d503201f       constant
0xffff582126c0   320  58006000       constant
0xffff582126c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821263c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5821261c  code target (STUB)  (0xffff58206820)
0xffff58212634  code target (STUB)  (0xffff58206260)
0xffff58212640  code target (STUB)  (0xffff582068e0)
0xffff58212654  constant pool (size 36)
0xffff582126a8  runtime entry
0xffff582126b4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4266
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff58212740     0  mov x2, x1
0xffff58212744     4  tbnz w2, #0, #+0x44 (addr 0xffff58212788)
0xffff58212748     8  mov x3, x0
0xffff5821274c    12  tbnz w3, #0, #+0x4c (addr 0xffff58212798)
0xffff58212750    16  asr x2, x2, #32
0xffff58212754    20  asr x3, x3, #32
0xffff58212758    24  sdiv w5, w2, w3
0xffff5821275c    28  cbz w3, #+0x4c (addr 0xffff582127a8)
0xffff58212760    32  cmp w3, #0x0 (0)
0xffff58212764    36  ccmp w2, #0, #nzcv, mi
0xffff58212768    40  b.eq #+0x40 (addr 0xffff582127a8)
0xffff5821276c    44  cmp w2, #0x1 (1)
0xffff58212770    48  ccmn w3, #1, #nzcv, vs
0xffff58212774    52  b.eq #+0x34 (addr 0xffff582127a8)
0xffff58212778    56  msub w4, w5, w3, w2
0xffff5821277c    60  cbnz w4, #+0x2c (addr 0xffff582127a8)
0xffff58212780    64  lsl x0, x5, #32
0xffff58212784    68  ret
0xffff58212788    72  movz x16, #0x0
0xffff5821278c    76  sub csp, jssp, #0x10 (16)
0xffff58212790    80  stp fp, lr, [jssp, #-16]!
0xffff58212794    84  bl #+0x24 (addr 0xffff582127b8)
0xffff58212798    88  movz x16, #0x8
0xffff5821279c    92  sub csp, jssp, #0x10 (16)
0xffff582127a0    96  stp fp, lr, [jssp, #-16]!
0xffff582127a4   100  bl #+0x14 (addr 0xffff582127b8)
0xffff582127a8   104  movz x16, #0x10
0xffff582127ac   108  sub csp, jssp, #0x10 (16)
0xffff582127b0   112  stp fp, lr, [jssp, #-16]!
0xffff582127b4   116  bl #+0x4 (addr 0xffff582127b8)
0xffff582127b8   120  movz x17, #0xa00000000
0xffff582127bc   124  sub csp, jssp, #0x10 (16)
0xffff582127c0   128  stp x17, cp, [jssp, #-16]!
0xffff582127c4   132  add fp, jssp, #0x10 (16)
0xffff582127c8   136  ldr x17, pc+24 (addr 0x0000ffff582127e0)    ;; lazy deoptimization bailout 0
0xffff582127cc   140  add x17, x17, x16
0xffff582127d0   144  br x17
0xffff582127d4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582127d8   152  d63f03e0       constant
0xffff582127dc   156  d503201f       constant
0xffff582127e0   160  58006000       constant
0xffff582127e4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582127c8  runtime entry
0xffff582127d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4266
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 176)
0xffff58212740     0  mov x2, x1
0xffff58212744     4  tbnz w2, #0, #+0x44 (addr 0xffff58212788)
0xffff58212748     8  mov x3, x0
0xffff5821274c    12  tbnz w3, #0, #+0x4c (addr 0xffff58212798)
0xffff58212750    16  asr x2, x2, #32
0xffff58212754    20  asr x3, x3, #32
0xffff58212758    24  sdiv w5, w2, w3
0xffff5821275c    28  cbz w3, #+0x4c (addr 0xffff582127a8)
0xffff58212760    32  cmp w3, #0x0 (0)
0xffff58212764    36  ccmp w2, #0, #nzcv, mi
0xffff58212768    40  b.eq #+0x40 (addr 0xffff582127a8)
0xffff5821276c    44  cmp w2, #0x1 (1)
0xffff58212770    48  ccmn w3, #1, #nzcv, vs
0xffff58212774    52  b.eq #+0x34 (addr 0xffff582127a8)
0xffff58212778    56  msub w4, w5, w3, w2
0xffff5821277c    60  cbnz w4, #+0x2c (addr 0xffff582127a8)
0xffff58212780    64  lsl x0, x5, #32
0xffff58212784    68  ret
0xffff58212788    72  movz x16, #0x0
0xffff5821278c    76  sub csp, jssp, #0x10 (16)
0xffff58212790    80  stp fp, lr, [jssp, #-16]!
0xffff58212794    84  bl #+0x24 (addr 0xffff582127b8)
0xffff58212798    88  movz x16, #0x8
0xffff5821279c    92  sub csp, jssp, #0x10 (16)
0xffff582127a0    96  stp fp, lr, [jssp, #-16]!
0xffff582127a4   100  bl #+0x14 (addr 0xffff582127b8)
0xffff582127a8   104  movz x16, #0x10
0xffff582127ac   108  sub csp, jssp, #0x10 (16)
0xffff582127b0   112  stp fp, lr, [jssp, #-16]!
0xffff582127b4   116  bl #+0x4 (addr 0xffff582127b8)
0xffff582127b8   120  movz x17, #0xa00000000
0xffff582127bc   124  sub csp, jssp, #0x10 (16)
0xffff582127c0   128  stp x17, cp, [jssp, #-16]!
0xffff582127c4   132  add fp, jssp, #0x10 (16)
0xffff582127c8   136  ldr x17, pc+24 (addr 0x0000ffff582127e0)    ;; lazy deoptimization bailout 0
0xffff582127cc   140  add x17, x17, x16
0xffff582127d0   144  br x17
0xffff582127d4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582127d8   152  d63f03e0       constant
0xffff582127dc   156  d503201f       constant
0xffff582127e0   160  58006000       constant
0xffff582127e4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582127c8  runtime entry
0xffff582127d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4282
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff58212860     0  mov x2, x1
0xffff58212864     4  tbnz w2, #0, #+0xc4 (addr 0xffff58212928)
0xffff58212868     8  mov x3, x0
0xffff5821286c    12  tbnz w3, #0, #+0xcc (addr 0xffff58212938)
0xffff58212870    16  scvtf d0, x2, #32
0xffff58212874    20  scvtf d1, x3, #32
0xffff58212878    24  fdiv d0, d0, d1
0xffff5821287c    28  movz x1, #0x92c0
0xffff58212880    32  movk x1, #0x16e7, lsl #16
0xffff58212884    36  ldp x2, x0, [x1]
0xffff58212888    40  adds x16, x2, #0x10 (16)
0xffff5821288c    44  ccmp x16, x0, #nzCv, lo
0xffff58212890    48  b.hi #+0x20 (addr 0xffff582128b0)
0xffff58212894    52  str x16, [x1]
0xffff58212898    56  ldr x1, [x26, #120]
0xffff5821289c    60  str x1, [x2]
0xffff582128a0    64  orr x2, x2, #0x1
0xffff582128a4    68  stur d0, [x2, #7]
0xffff582128a8    72  mov x0, x2
0xffff582128ac    76  ret
0xffff582128b0    80  sub csp, jssp, #0x10 (16)
0xffff582128b4    84  stp fp, lr, [jssp, #-16]!
0xffff582128b8    88  movz fp, #0xa00000000
0xffff582128bc    92  sub csp, jssp, #0x8 (8)
0xffff582128c0    96  str fp, [jssp, #-8]!
0xffff582128c4   100  add fp, jssp, #0x8 (8)
0xffff582128c8   104  movz x2, #0x0
0xffff582128cc   108  mov x16, lr
0xffff582128d0   112  ldr x17, pc+64 (addr 0x0000ffff58212910)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582128d4   116  blr x17
0xffff582128d8   120  ldur cp, [fp, #-8]
0xffff582128dc   124  movz x0, #0x0
0xffff582128e0   128  movz x1, #0x4b48
0xffff582128e4   132  movk x1, #0xe4, lsl #16
0xffff582128e8   136  ldr x16, pc+48 (addr 0x0000ffff58212918)    ;; code: STUB, CEntryStub, minor: 5
0xffff582128ec   140  blr x16
0xffff582128f0   144  str x0, [jssp, #16]
0xffff582128f4   148  ldr x16, pc+44 (addr 0x0000ffff58212920)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582128f8   152  blr x16
0xffff582128fc   156  ldr lr, [jssp, #16]
0xffff58212900   160  ldp xzr, fp, [jssp], #24
0xffff58212904   164  b #-0x60 (addr 0xffff582128a4)
0xffff58212908   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5821290c   172  d63f03e0       constant
0xffff58212910   176  58206820       constant
0xffff58212914   180  0000ffff       constant
0xffff58212918   184  58206260       constant
0xffff5821291c   188  0000ffff       constant
0xffff58212920   192  582068e0       constant
0xffff58212924   196  0000ffff       constant
0xffff58212928   200  movz x16, #0x0
0xffff5821292c   204  sub csp, jssp, #0x10 (16)
0xffff58212930   208  stp fp, lr, [jssp, #-16]!
0xffff58212934   212  bl #+0x14 (addr 0xffff58212948)
0xffff58212938   216  movz x16, #0x8
0xffff5821293c   220  sub csp, jssp, #0x10 (16)
0xffff58212940   224  stp fp, lr, [jssp, #-16]!
0xffff58212944   228  bl #+0x4 (addr 0xffff58212948)
0xffff58212948   232  movz x17, #0xa00000000
0xffff5821294c   236  sub csp, jssp, #0x10 (16)
0xffff58212950   240  stp x17, cp, [jssp, #-16]!
0xffff58212954   244  add fp, jssp, #0x10 (16)
0xffff58212958   248  ldr x17, pc+24 (addr 0x0000ffff58212970)    ;; lazy deoptimization bailout 0
0xffff5821295c   252  add x17, x17, x16
0xffff58212960   256  br x17
0xffff58212964   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212968   264  d63f03e0       constant
0xffff5821296c   268  d503201f       constant
0xffff58212970   272  58006000       constant
0xffff58212974   276  0000ffff       constant


Safepoints (size = 21)
0xffff582128f0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582128d0  code target (STUB)  (0xffff58206820)
0xffff582128e8  code target (STUB)  (0xffff58206260)
0xffff582128f4  code target (STUB)  (0xffff582068e0)
0xffff58212908  constant pool (size 32)
0xffff58212958  runtime entry
0xffff58212964  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4282
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff58212860     0  mov x2, x1
0xffff58212864     4  tbnz w2, #0, #+0xc4 (addr 0xffff58212928)
0xffff58212868     8  mov x3, x0
0xffff5821286c    12  tbnz w3, #0, #+0xcc (addr 0xffff58212938)
0xffff58212870    16  scvtf d0, x2, #32
0xffff58212874    20  scvtf d1, x3, #32
0xffff58212878    24  fdiv d0, d0, d1
0xffff5821287c    28  movz x1, #0x92c0
0xffff58212880    32  movk x1, #0x16e7, lsl #16
0xffff58212884    36  ldp x2, x0, [x1]
0xffff58212888    40  adds x16, x2, #0x10 (16)
0xffff5821288c    44  ccmp x16, x0, #nzCv, lo
0xffff58212890    48  b.hi #+0x20 (addr 0xffff582128b0)
0xffff58212894    52  str x16, [x1]
0xffff58212898    56  ldr x1, [x26, #120]
0xffff5821289c    60  str x1, [x2]
0xffff582128a0    64  orr x2, x2, #0x1
0xffff582128a4    68  stur d0, [x2, #7]
0xffff582128a8    72  mov x0, x2
0xffff582128ac    76  ret
0xffff582128b0    80  sub csp, jssp, #0x10 (16)
0xffff582128b4    84  stp fp, lr, [jssp, #-16]!
0xffff582128b8    88  movz fp, #0xa00000000
0xffff582128bc    92  sub csp, jssp, #0x8 (8)
0xffff582128c0    96  str fp, [jssp, #-8]!
0xffff582128c4   100  add fp, jssp, #0x8 (8)
0xffff582128c8   104  movz x2, #0x0
0xffff582128cc   108  mov x16, lr
0xffff582128d0   112  ldr x17, pc+64 (addr 0x0000ffff58212910)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582128d4   116  blr x17
0xffff582128d8   120  ldur cp, [fp, #-8]
0xffff582128dc   124  movz x0, #0x0
0xffff582128e0   128  movz x1, #0x4b48
0xffff582128e4   132  movk x1, #0xe4, lsl #16
0xffff582128e8   136  ldr x16, pc+48 (addr 0x0000ffff58212918)    ;; code: STUB, CEntryStub, minor: 5
0xffff582128ec   140  blr x16
0xffff582128f0   144  str x0, [jssp, #16]
0xffff582128f4   148  ldr x16, pc+44 (addr 0x0000ffff58212920)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582128f8   152  blr x16
0xffff582128fc   156  ldr lr, [jssp, #16]
0xffff58212900   160  ldp xzr, fp, [jssp], #24
0xffff58212904   164  b #-0x60 (addr 0xffff582128a4)
0xffff58212908   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5821290c   172  d63f03e0       constant
0xffff58212910   176  58206820       constant
0xffff58212914   180  0000ffff       constant
0xffff58212918   184  58206260       constant
0xffff5821291c   188  0000ffff       constant
0xffff58212920   192  582068e0       constant
0xffff58212924   196  0000ffff       constant
0xffff58212928   200  movz x16, #0x0
0xffff5821292c   204  sub csp, jssp, #0x10 (16)
0xffff58212930   208  stp fp, lr, [jssp, #-16]!
0xffff58212934   212  bl #+0x14 (addr 0xffff58212948)
0xffff58212938   216  movz x16, #0x8
0xffff5821293c   220  sub csp, jssp, #0x10 (16)
0xffff58212940   224  stp fp, lr, [jssp, #-16]!
0xffff58212944   228  bl #+0x4 (addr 0xffff58212948)
0xffff58212948   232  movz x17, #0xa00000000
0xffff5821294c   236  sub csp, jssp, #0x10 (16)
0xffff58212950   240  stp x17, cp, [jssp, #-16]!
0xffff58212954   244  add fp, jssp, #0x10 (16)
0xffff58212958   248  ldr x17, pc+24 (addr 0x0000ffff58212970)    ;; lazy deoptimization bailout 0
0xffff5821295c   252  add x17, x17, x16
0xffff58212960   256  br x17
0xffff58212964   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212968   264  d63f03e0       constant
0xffff5821296c   268  d503201f       constant
0xffff58212970   272  58006000       constant
0xffff58212974   276  0000ffff       constant


Safepoints (size = 21)
0xffff582128f0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582128d0  code target (STUB)  (0xffff58206820)
0xffff582128e8  code target (STUB)  (0xffff58206260)
0xffff582128f4  code target (STUB)  (0xffff582068e0)
0xffff58212908  constant pool (size 32)
0xffff58212958  runtime entry
0xffff58212964  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6330
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff58212a00     0  mov x2, x1
0xffff58212a04     4  tbnz w2, #0, #+0xf4 (addr 0xffff58212af8)
0xffff58212a08     8  tbz w0, #0, #+0x34 (addr 0xffff58212a3c)
0xffff58212a0c    12  ldur x16, [x0, #-1]
0xffff58212a10    16  ldr x17, [x26, #120]
0xffff58212a14    20  cmp x16, x17
0xffff58212a18    24  b.ne #+0xc (addr 0xffff58212a24)
0xffff58212a1c    28  ldur d0, [x0, #7]
0xffff58212a20    32  b #+0x20 (addr 0xffff58212a40)
0xffff58212a24    36  ldr x16, [x26, #40]
0xffff58212a28    40  cmp x0, x16
0xffff58212a2c    44  b.ne #+0xdc (addr 0xffff58212b08)
0xffff58212a30    48  ldr x3, [x26, #928]
0xffff58212a34    52  ldur d0, [x3, #7]
0xffff58212a38    56  b #+0x8 (addr 0xffff58212a40)
0xffff58212a3c    60  scvtf d0, x0, #32
0xffff58212a40    64  scvtf d1, x2, #32
0xffff58212a44    68  fdiv d0, d1, d0
0xffff58212a48    72  movz x1, #0x92c0
0xffff58212a4c    76  movk x1, #0x16e7, lsl #16
0xffff58212a50    80  ldp x2, x0, [x1]
0xffff58212a54    84  adds x16, x2, #0x10 (16)
0xffff58212a58    88  ccmp x16, x0, #nzCv, lo
0xffff58212a5c    92  b.hi #+0x20 (addr 0xffff58212a7c)
0xffff58212a60    96  str x16, [x1]
0xffff58212a64   100  ldr x1, [x26, #120]
0xffff58212a68   104  str x1, [x2]
0xffff58212a6c   108  orr x2, x2, #0x1
0xffff58212a70   112  stur d0, [x2, #7]
0xffff58212a74   116  mov x0, x2
0xffff58212a78   120  ret
0xffff58212a7c   124  sub csp, jssp, #0x10 (16)
0xffff58212a80   128  stp fp, lr, [jssp, #-16]!
0xffff58212a84   132  movz fp, #0xa00000000
0xffff58212a88   136  sub csp, jssp, #0x8 (8)
0xffff58212a8c   140  str fp, [jssp, #-8]!
0xffff58212a90   144  add fp, jssp, #0x8 (8)
0xffff58212a94   148  movz x2, #0x0
0xffff58212a98   152  mov x16, lr
0xffff58212a9c   156  ldr x17, pc+68 (addr 0x0000ffff58212ae0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212aa0   160  blr x17
0xffff58212aa4   164  ldur cp, [fp, #-8]
0xffff58212aa8   168  movz x0, #0x0
0xffff58212aac   172  movz x1, #0x4b48
0xffff58212ab0   176  movk x1, #0xe4, lsl #16
0xffff58212ab4   180  ldr x16, pc+52 (addr 0x0000ffff58212ae8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212ab8   184  blr x16
0xffff58212abc   188  str x0, [jssp, #16]
0xffff58212ac0   192  ldr x16, pc+48 (addr 0x0000ffff58212af0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212ac4   196  blr x16
0xffff58212ac8   200  ldr lr, [jssp, #16]
0xffff58212acc   204  ldp xzr, fp, [jssp], #24
0xffff58212ad0   208  b #-0x60 (addr 0xffff58212a70)
0xffff58212ad4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58212ad8   216  d63f03e0       constant
0xffff58212adc   220  d503201f       constant
0xffff58212ae0   224  58206820       constant
0xffff58212ae4   228  0000ffff       constant
0xffff58212ae8   232  58206260       constant
0xffff58212aec   236  0000ffff       constant
0xffff58212af0   240  582068e0       constant
0xffff58212af4   244  0000ffff       constant
0xffff58212af8   248  movz x16, #0x0
0xffff58212afc   252  sub csp, jssp, #0x10 (16)
0xffff58212b00   256  stp fp, lr, [jssp, #-16]!
0xffff58212b04   260  bl #+0x14 (addr 0xffff58212b18)
0xffff58212b08   264  movz x16, #0x8
0xffff58212b0c   268  sub csp, jssp, #0x10 (16)
0xffff58212b10   272  stp fp, lr, [jssp, #-16]!
0xffff58212b14   276  bl #+0x4 (addr 0xffff58212b18)
0xffff58212b18   280  movz x17, #0xa00000000
0xffff58212b1c   284  sub csp, jssp, #0x10 (16)
0xffff58212b20   288  stp x17, cp, [jssp, #-16]!
0xffff58212b24   292  add fp, jssp, #0x10 (16)
0xffff58212b28   296  ldr x17, pc+24 (addr 0x0000ffff58212b40)    ;; lazy deoptimization bailout 0
0xffff58212b2c   300  add x17, x17, x16
0xffff58212b30   304  br x17
0xffff58212b34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212b38   312  d63f03e0       constant
0xffff58212b3c   316  d503201f       constant
0xffff58212b40   320  58006000       constant
0xffff58212b44   324  0000ffff       constant


Safepoints (size = 21)
0xffff58212abc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58212a9c  code target (STUB)  (0xffff58206820)
0xffff58212ab4  code target (STUB)  (0xffff58206260)
0xffff58212ac0  code target (STUB)  (0xffff582068e0)
0xffff58212ad4  constant pool (size 36)
0xffff58212b28  runtime entry
0xffff58212b34  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6330
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff58212a00     0  mov x2, x1
0xffff58212a04     4  tbnz w2, #0, #+0xf4 (addr 0xffff58212af8)
0xffff58212a08     8  tbz w0, #0, #+0x34 (addr 0xffff58212a3c)
0xffff58212a0c    12  ldur x16, [x0, #-1]
0xffff58212a10    16  ldr x17, [x26, #120]
0xffff58212a14    20  cmp x16, x17
0xffff58212a18    24  b.ne #+0xc (addr 0xffff58212a24)
0xffff58212a1c    28  ldur d0, [x0, #7]
0xffff58212a20    32  b #+0x20 (addr 0xffff58212a40)
0xffff58212a24    36  ldr x16, [x26, #40]
0xffff58212a28    40  cmp x0, x16
0xffff58212a2c    44  b.ne #+0xdc (addr 0xffff58212b08)
0xffff58212a30    48  ldr x3, [x26, #928]
0xffff58212a34    52  ldur d0, [x3, #7]
0xffff58212a38    56  b #+0x8 (addr 0xffff58212a40)
0xffff58212a3c    60  scvtf d0, x0, #32
0xffff58212a40    64  scvtf d1, x2, #32
0xffff58212a44    68  fdiv d0, d1, d0
0xffff58212a48    72  movz x1, #0x92c0
0xffff58212a4c    76  movk x1, #0x16e7, lsl #16
0xffff58212a50    80  ldp x2, x0, [x1]
0xffff58212a54    84  adds x16, x2, #0x10 (16)
0xffff58212a58    88  ccmp x16, x0, #nzCv, lo
0xffff58212a5c    92  b.hi #+0x20 (addr 0xffff58212a7c)
0xffff58212a60    96  str x16, [x1]
0xffff58212a64   100  ldr x1, [x26, #120]
0xffff58212a68   104  str x1, [x2]
0xffff58212a6c   108  orr x2, x2, #0x1
0xffff58212a70   112  stur d0, [x2, #7]
0xffff58212a74   116  mov x0, x2
0xffff58212a78   120  ret
0xffff58212a7c   124  sub csp, jssp, #0x10 (16)
0xffff58212a80   128  stp fp, lr, [jssp, #-16]!
0xffff58212a84   132  movz fp, #0xa00000000
0xffff58212a88   136  sub csp, jssp, #0x8 (8)
0xffff58212a8c   140  str fp, [jssp, #-8]!
0xffff58212a90   144  add fp, jssp, #0x8 (8)
0xffff58212a94   148  movz x2, #0x0
0xffff58212a98   152  mov x16, lr
0xffff58212a9c   156  ldr x17, pc+68 (addr 0x0000ffff58212ae0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212aa0   160  blr x17
0xffff58212aa4   164  ldur cp, [fp, #-8]
0xffff58212aa8   168  movz x0, #0x0
0xffff58212aac   172  movz x1, #0x4b48
0xffff58212ab0   176  movk x1, #0xe4, lsl #16
0xffff58212ab4   180  ldr x16, pc+52 (addr 0x0000ffff58212ae8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212ab8   184  blr x16
0xffff58212abc   188  str x0, [jssp, #16]
0xffff58212ac0   192  ldr x16, pc+48 (addr 0x0000ffff58212af0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212ac4   196  blr x16
0xffff58212ac8   200  ldr lr, [jssp, #16]
0xffff58212acc   204  ldp xzr, fp, [jssp], #24
0xffff58212ad0   208  b #-0x60 (addr 0xffff58212a70)
0xffff58212ad4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58212ad8   216  d63f03e0       constant
0xffff58212adc   220  d503201f       constant
0xffff58212ae0   224  58206820       constant
0xffff58212ae4   228  0000ffff       constant
0xffff58212ae8   232  58206260       constant
0xffff58212aec   236  0000ffff       constant
0xffff58212af0   240  582068e0       constant
0xffff58212af4   244  0000ffff       constant
0xffff58212af8   248  movz x16, #0x0
0xffff58212afc   252  sub csp, jssp, #0x10 (16)
0xffff58212b00   256  stp fp, lr, [jssp, #-16]!
0xffff58212b04   260  bl #+0x14 (addr 0xffff58212b18)
0xffff58212b08   264  movz x16, #0x8
0xffff58212b0c   268  sub csp, jssp, #0x10 (16)
0xffff58212b10   272  stp fp, lr, [jssp, #-16]!
0xffff58212b14   276  bl #+0x4 (addr 0xffff58212b18)
0xffff58212b18   280  movz x17, #0xa00000000
0xffff58212b1c   284  sub csp, jssp, #0x10 (16)
0xffff58212b20   288  stp x17, cp, [jssp, #-16]!
0xffff58212b24   292  add fp, jssp, #0x10 (16)
0xffff58212b28   296  ldr x17, pc+24 (addr 0x0000ffff58212b40)    ;; lazy deoptimization bailout 0
0xffff58212b2c   300  add x17, x17, x16
0xffff58212b30   304  br x17
0xffff58212b34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212b38   312  d63f03e0       constant
0xffff58212b3c   316  d503201f       constant
0xffff58212b40   320  58006000       constant
0xffff58212b44   324  0000ffff       constant


Safepoints (size = 21)
0xffff58212abc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58212a9c  code target (STUB)  (0xffff58206820)
0xffff58212ab4  code target (STUB)  (0xffff58206260)
0xffff58212ac0  code target (STUB)  (0xffff582068e0)
0xffff58212ad4  constant pool (size 36)
0xffff58212b28  runtime entry
0xffff58212b34  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2234
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff58212bc0     0  mov x2, x1
0xffff58212bc4     4  tbnz w2, #0, #+0xc4 (addr 0xffff58212c88)
0xffff58212bc8     8  mov x3, x0
0xffff58212bcc    12  tbnz w3, #0, #+0xcc (addr 0xffff58212c98)
0xffff58212bd0    16  scvtf d0, x2, #32
0xffff58212bd4    20  scvtf d1, x3, #32
0xffff58212bd8    24  fdiv d0, d0, d1
0xffff58212bdc    28  movz x1, #0x92c0
0xffff58212be0    32  movk x1, #0x16e7, lsl #16
0xffff58212be4    36  ldp x2, x0, [x1]
0xffff58212be8    40  adds x16, x2, #0x10 (16)
0xffff58212bec    44  ccmp x16, x0, #nzCv, lo
0xffff58212bf0    48  b.hi #+0x20 (addr 0xffff58212c10)
0xffff58212bf4    52  str x16, [x1]
0xffff58212bf8    56  ldr x1, [x26, #120]
0xffff58212bfc    60  str x1, [x2]
0xffff58212c00    64  orr x2, x2, #0x1
0xffff58212c04    68  stur d0, [x2, #7]
0xffff58212c08    72  mov x0, x2
0xffff58212c0c    76  ret
0xffff58212c10    80  sub csp, jssp, #0x10 (16)
0xffff58212c14    84  stp fp, lr, [jssp, #-16]!
0xffff58212c18    88  movz fp, #0xa00000000
0xffff58212c1c    92  sub csp, jssp, #0x8 (8)
0xffff58212c20    96  str fp, [jssp, #-8]!
0xffff58212c24   100  add fp, jssp, #0x8 (8)
0xffff58212c28   104  movz x2, #0x0
0xffff58212c2c   108  mov x16, lr
0xffff58212c30   112  ldr x17, pc+64 (addr 0x0000ffff58212c70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212c34   116  blr x17
0xffff58212c38   120  ldur cp, [fp, #-8]
0xffff58212c3c   124  movz x0, #0x0
0xffff58212c40   128  movz x1, #0x4b48
0xffff58212c44   132  movk x1, #0xe4, lsl #16
0xffff58212c48   136  ldr x16, pc+48 (addr 0x0000ffff58212c78)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212c4c   140  blr x16
0xffff58212c50   144  str x0, [jssp, #16]
0xffff58212c54   148  ldr x16, pc+44 (addr 0x0000ffff58212c80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212c58   152  blr x16
0xffff58212c5c   156  ldr lr, [jssp, #16]
0xffff58212c60   160  ldp xzr, fp, [jssp], #24
0xffff58212c64   164  b #-0x60 (addr 0xffff58212c04)
0xffff58212c68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58212c6c   172  d63f03e0       constant
0xffff58212c70   176  58206820       constant
0xffff58212c74   180  0000ffff       constant
0xffff58212c78   184  58206260       constant
0xffff58212c7c   188  0000ffff       constant
0xffff58212c80   192  582068e0       constant
0xffff58212c84   196  0000ffff       constant
0xffff58212c88   200  movz x16, #0x0
0xffff58212c8c   204  sub csp, jssp, #0x10 (16)
0xffff58212c90   208  stp fp, lr, [jssp, #-16]!
0xffff58212c94   212  bl #+0x14 (addr 0xffff58212ca8)
0xffff58212c98   216  movz x16, #0x8
0xffff58212c9c   220  sub csp, jssp, #0x10 (16)
0xffff58212ca0   224  stp fp, lr, [jssp, #-16]!
0xffff58212ca4   228  bl #+0x4 (addr 0xffff58212ca8)
0xffff58212ca8   232  movz x17, #0xa00000000
0xffff58212cac   236  sub csp, jssp, #0x10 (16)
0xffff58212cb0   240  stp x17, cp, [jssp, #-16]!
0xffff58212cb4   244  add fp, jssp, #0x10 (16)
0xffff58212cb8   248  ldr x17, pc+24 (addr 0x0000ffff58212cd0)    ;; lazy deoptimization bailout 0
0xffff58212cbc   252  add x17, x17, x16
0xffff58212cc0   256  br x17
0xffff58212cc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212cc8   264  d63f03e0       constant
0xffff58212ccc   268  d503201f       constant
0xffff58212cd0   272  58006000       constant
0xffff58212cd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff58212c50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58212c30  code target (STUB)  (0xffff58206820)
0xffff58212c48  code target (STUB)  (0xffff58206260)
0xffff58212c54  code target (STUB)  (0xffff582068e0)
0xffff58212c68  constant pool (size 32)
0xffff58212cb8  runtime entry
0xffff58212cc4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2234
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff58212bc0     0  mov x2, x1
0xffff58212bc4     4  tbnz w2, #0, #+0xc4 (addr 0xffff58212c88)
0xffff58212bc8     8  mov x3, x0
0xffff58212bcc    12  tbnz w3, #0, #+0xcc (addr 0xffff58212c98)
0xffff58212bd0    16  scvtf d0, x2, #32
0xffff58212bd4    20  scvtf d1, x3, #32
0xffff58212bd8    24  fdiv d0, d0, d1
0xffff58212bdc    28  movz x1, #0x92c0
0xffff58212be0    32  movk x1, #0x16e7, lsl #16
0xffff58212be4    36  ldp x2, x0, [x1]
0xffff58212be8    40  adds x16, x2, #0x10 (16)
0xffff58212bec    44  ccmp x16, x0, #nzCv, lo
0xffff58212bf0    48  b.hi #+0x20 (addr 0xffff58212c10)
0xffff58212bf4    52  str x16, [x1]
0xffff58212bf8    56  ldr x1, [x26, #120]
0xffff58212bfc    60  str x1, [x2]
0xffff58212c00    64  orr x2, x2, #0x1
0xffff58212c04    68  stur d0, [x2, #7]
0xffff58212c08    72  mov x0, x2
0xffff58212c0c    76  ret
0xffff58212c10    80  sub csp, jssp, #0x10 (16)
0xffff58212c14    84  stp fp, lr, [jssp, #-16]!
0xffff58212c18    88  movz fp, #0xa00000000
0xffff58212c1c    92  sub csp, jssp, #0x8 (8)
0xffff58212c20    96  str fp, [jssp, #-8]!
0xffff58212c24   100  add fp, jssp, #0x8 (8)
0xffff58212c28   104  movz x2, #0x0
0xffff58212c2c   108  mov x16, lr
0xffff58212c30   112  ldr x17, pc+64 (addr 0x0000ffff58212c70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212c34   116  blr x17
0xffff58212c38   120  ldur cp, [fp, #-8]
0xffff58212c3c   124  movz x0, #0x0
0xffff58212c40   128  movz x1, #0x4b48
0xffff58212c44   132  movk x1, #0xe4, lsl #16
0xffff58212c48   136  ldr x16, pc+48 (addr 0x0000ffff58212c78)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212c4c   140  blr x16
0xffff58212c50   144  str x0, [jssp, #16]
0xffff58212c54   148  ldr x16, pc+44 (addr 0x0000ffff58212c80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212c58   152  blr x16
0xffff58212c5c   156  ldr lr, [jssp, #16]
0xffff58212c60   160  ldp xzr, fp, [jssp], #24
0xffff58212c64   164  b #-0x60 (addr 0xffff58212c04)
0xffff58212c68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58212c6c   172  d63f03e0       constant
0xffff58212c70   176  58206820       constant
0xffff58212c74   180  0000ffff       constant
0xffff58212c78   184  58206260       constant
0xffff58212c7c   188  0000ffff       constant
0xffff58212c80   192  582068e0       constant
0xffff58212c84   196  0000ffff       constant
0xffff58212c88   200  movz x16, #0x0
0xffff58212c8c   204  sub csp, jssp, #0x10 (16)
0xffff58212c90   208  stp fp, lr, [jssp, #-16]!
0xffff58212c94   212  bl #+0x14 (addr 0xffff58212ca8)
0xffff58212c98   216  movz x16, #0x8
0xffff58212c9c   220  sub csp, jssp, #0x10 (16)
0xffff58212ca0   224  stp fp, lr, [jssp, #-16]!
0xffff58212ca4   228  bl #+0x4 (addr 0xffff58212ca8)
0xffff58212ca8   232  movz x17, #0xa00000000
0xffff58212cac   236  sub csp, jssp, #0x10 (16)
0xffff58212cb0   240  stp x17, cp, [jssp, #-16]!
0xffff58212cb4   244  add fp, jssp, #0x10 (16)
0xffff58212cb8   248  ldr x17, pc+24 (addr 0x0000ffff58212cd0)    ;; lazy deoptimization bailout 0
0xffff58212cbc   252  add x17, x17, x16
0xffff58212cc0   256  br x17
0xffff58212cc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212cc8   264  d63f03e0       constant
0xffff58212ccc   268  d503201f       constant
0xffff58212cd0   272  58006000       constant
0xffff58212cd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff58212c50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58212c30  code target (STUB)  (0xffff58206820)
0xffff58212c48  code target (STUB)  (0xffff58206260)
0xffff58212c54  code target (STUB)  (0xffff582068e0)
0xffff58212c68  constant pool (size 32)
0xffff58212cb8  runtime entry
0xffff58212cc4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2202
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff58212d60     0  mov x2, x1
0xffff58212d64     4  tbnz w2, #0, #+0x44 (addr 0xffff58212da8)
0xffff58212d68     8  mov x3, x0
0xffff58212d6c    12  tbnz w3, #0, #+0x4c (addr 0xffff58212db8)
0xffff58212d70    16  asr x2, x2, #32
0xffff58212d74    20  asr x3, x3, #32
0xffff58212d78    24  sdiv w5, w2, w3
0xffff58212d7c    28  cbz w3, #+0x4c (addr 0xffff58212dc8)
0xffff58212d80    32  cmp w3, #0x0 (0)
0xffff58212d84    36  ccmp w2, #0, #nzcv, mi
0xffff58212d88    40  b.eq #+0x40 (addr 0xffff58212dc8)
0xffff58212d8c    44  cmp w2, #0x1 (1)
0xffff58212d90    48  ccmn w3, #1, #nzcv, vs
0xffff58212d94    52  b.eq #+0x34 (addr 0xffff58212dc8)
0xffff58212d98    56  msub w4, w5, w3, w2
0xffff58212d9c    60  cbnz w4, #+0x2c (addr 0xffff58212dc8)
0xffff58212da0    64  lsl x0, x5, #32
0xffff58212da4    68  ret
0xffff58212da8    72  movz x16, #0x0
0xffff58212dac    76  sub csp, jssp, #0x10 (16)
0xffff58212db0    80  stp fp, lr, [jssp, #-16]!
0xffff58212db4    84  bl #+0x24 (addr 0xffff58212dd8)
0xffff58212db8    88  movz x16, #0x8
0xffff58212dbc    92  sub csp, jssp, #0x10 (16)
0xffff58212dc0    96  stp fp, lr, [jssp, #-16]!
0xffff58212dc4   100  bl #+0x14 (addr 0xffff58212dd8)
0xffff58212dc8   104  movz x16, #0x10
0xffff58212dcc   108  sub csp, jssp, #0x10 (16)
0xffff58212dd0   112  stp fp, lr, [jssp, #-16]!
0xffff58212dd4   116  bl #+0x4 (addr 0xffff58212dd8)
0xffff58212dd8   120  movz x17, #0xa00000000
0xffff58212ddc   124  sub csp, jssp, #0x10 (16)
0xffff58212de0   128  stp x17, cp, [jssp, #-16]!
0xffff58212de4   132  add fp, jssp, #0x10 (16)
0xffff58212de8   136  ldr x17, pc+24 (addr 0x0000ffff58212e00)    ;; lazy deoptimization bailout 0
0xffff58212dec   140  add x17, x17, x16
0xffff58212df0   144  br x17
0xffff58212df4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212df8   152  d63f03e0       constant
0xffff58212dfc   156  d503201f       constant
0xffff58212e00   160  58006000       constant
0xffff58212e04   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58212de8  runtime entry
0xffff58212df4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2202
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 176)
0xffff58212d60     0  mov x2, x1
0xffff58212d64     4  tbnz w2, #0, #+0x44 (addr 0xffff58212da8)
0xffff58212d68     8  mov x3, x0
0xffff58212d6c    12  tbnz w3, #0, #+0x4c (addr 0xffff58212db8)
0xffff58212d70    16  asr x2, x2, #32
0xffff58212d74    20  asr x3, x3, #32
0xffff58212d78    24  sdiv w5, w2, w3
0xffff58212d7c    28  cbz w3, #+0x4c (addr 0xffff58212dc8)
0xffff58212d80    32  cmp w3, #0x0 (0)
0xffff58212d84    36  ccmp w2, #0, #nzcv, mi
0xffff58212d88    40  b.eq #+0x40 (addr 0xffff58212dc8)
0xffff58212d8c    44  cmp w2, #0x1 (1)
0xffff58212d90    48  ccmn w3, #1, #nzcv, vs
0xffff58212d94    52  b.eq #+0x34 (addr 0xffff58212dc8)
0xffff58212d98    56  msub w4, w5, w3, w2
0xffff58212d9c    60  cbnz w4, #+0x2c (addr 0xffff58212dc8)
0xffff58212da0    64  lsl x0, x5, #32
0xffff58212da4    68  ret
0xffff58212da8    72  movz x16, #0x0
0xffff58212dac    76  sub csp, jssp, #0x10 (16)
0xffff58212db0    80  stp fp, lr, [jssp, #-16]!
0xffff58212db4    84  bl #+0x24 (addr 0xffff58212dd8)
0xffff58212db8    88  movz x16, #0x8
0xffff58212dbc    92  sub csp, jssp, #0x10 (16)
0xffff58212dc0    96  stp fp, lr, [jssp, #-16]!
0xffff58212dc4   100  bl #+0x14 (addr 0xffff58212dd8)
0xffff58212dc8   104  movz x16, #0x10
0xffff58212dcc   108  sub csp, jssp, #0x10 (16)
0xffff58212dd0   112  stp fp, lr, [jssp, #-16]!
0xffff58212dd4   116  bl #+0x4 (addr 0xffff58212dd8)
0xffff58212dd8   120  movz x17, #0xa00000000
0xffff58212ddc   124  sub csp, jssp, #0x10 (16)
0xffff58212de0   128  stp x17, cp, [jssp, #-16]!
0xffff58212de4   132  add fp, jssp, #0x10 (16)
0xffff58212de8   136  ldr x17, pc+24 (addr 0x0000ffff58212e00)    ;; lazy deoptimization bailout 0
0xffff58212dec   140  add x17, x17, x16
0xffff58212df0   144  br x17
0xffff58212df4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212df8   152  d63f03e0       constant
0xffff58212dfc   156  d503201f       constant
0xffff58212e00   160  58006000       constant
0xffff58212e04   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58212de8  runtime entry
0xffff58212df4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2491
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff58212e80     0  movz x16, #0xa00000000
0xffff58212e84     4  sub csp, jssp, #0x10 (16)
0xffff58212e88     8  stp fp, lr, [jssp, #-16]!
0xffff58212e8c    12  mov fp, jssp
0xffff58212e90    16  sub csp, jssp, #0x20 (32)
0xffff58212e94    20  sub jssp, jssp, #0x20 (32)
0xffff58212e98    24  stur x16, [fp, #-8]
0xffff58212e9c    28  str x1, [jssp, #16]
0xffff58212ea0    32  str x0, [jssp, #8]
0xffff58212ea4    36  str cp, [jssp]
0xffff58212ea8    40  mov x3, cp
0xffff58212eac    44  mov x2, x0
0xffff58212eb0    48  tbnz w2, #0, #+0xe8 (addr 0xffff58212f98)
0xffff58212eb4    52  tbz w1, #0, #+0x34 (addr 0xffff58212ee8)
0xffff58212eb8    56  ldur x16, [x1, #-1]
0xffff58212ebc    60  ldr x17, [x26, #120]
0xffff58212ec0    64  cmp x16, x17
0xffff58212ec4    68  b.ne #+0xc (addr 0xffff58212ed0)
0xffff58212ec8    72  ldur d0, [x1, #7]
0xffff58212ecc    76  b #+0x20 (addr 0xffff58212eec)
0xffff58212ed0    80  ldr x16, [x26, #40]
0xffff58212ed4    84  cmp x1, x16
0xffff58212ed8    88  b.ne #+0xc8 (addr 0xffff58212fa0)
0xffff58212edc    92  ldr x4, [x26, #928]
0xffff58212ee0    96  ldur d0, [x4, #7]
0xffff58212ee4   100  b #+0x8 (addr 0xffff58212eec)
0xffff58212ee8   104  scvtf d0, x1, #32
0xffff58212eec   108  scvtf d1, x2, #32
0xffff58212ef0   112  movz x16, #0x4c40
0xffff58212ef4   116  movk x16, #0x9c, lsl #16
0xffff58212ef8   120  and csp, jssp, #0xfffffffffffffff0
0xffff58212efc   124  blr x16
0xffff58212f00   128  movz x1, #0x92c0
0xffff58212f04   132  movk x1, #0x16e7, lsl #16
0xffff58212f08   136  ldp x2, x0, [x1]
0xffff58212f0c   140  adds x16, x2, #0x10 (16)
0xffff58212f10   144  ccmp x16, x0, #nzCv, lo
0xffff58212f14   148  b.hi #+0x2c (addr 0xffff58212f40)
0xffff58212f18   152  str x16, [x1]
0xffff58212f1c   156  ldr x1, [x26, #120]
0xffff58212f20   160  str x1, [x2]
0xffff58212f24   164  orr x2, x2, #0x1
0xffff58212f28   168  stur d0, [x2, #7]
0xffff58212f2c   172  mov x0, x2
0xffff58212f30   176  ldr cp, [jssp]
0xffff58212f34   180  mov jssp, fp
0xffff58212f38   184  ldp fp, lr, [jssp], #16
0xffff58212f3c   188  ret
0xffff58212f40   192  movz x2, #0x0
0xffff58212f44   196  mov x16, lr
0xffff58212f48   200  ldr x17, pc+56 (addr 0x0000ffff58212f80)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212f4c   204  blr x17
0xffff58212f50   208  ldur cp, [fp, #-8]
0xffff58212f54   212  movz x0, #0x0
0xffff58212f58   216  movz x1, #0x4b48
0xffff58212f5c   220  movk x1, #0xe4, lsl #16
0xffff58212f60   224  ldr x16, pc+40 (addr 0x0000ffff58212f88)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212f64   228  blr x16
0xffff58212f68   232  str x0, [jssp, #16]
0xffff58212f6c   236  ldr x16, pc+36 (addr 0x0000ffff58212f90)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212f70   240  blr x16
0xffff58212f74   244  b #-0x4c (addr 0xffff58212f28)
0xffff58212f78   248  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58212f7c   252  d63f03e0       constant
0xffff58212f80   256  58206820       constant
0xffff58212f84   260  0000ffff       constant
0xffff58212f88   264  58206260       constant
0xffff58212f8c   268  0000ffff       constant
0xffff58212f90   272  582068e0       constant
0xffff58212f94   276  0000ffff       constant
0xffff58212f98   280  movz x16, #0x0
0xffff58212f9c   284  bl #+0xc (addr 0xffff58212fa8)
0xffff58212fa0   288  movz x16, #0x8
0xffff58212fa4   292  bl #+0x4 (addr 0xffff58212fa8)
0xffff58212fa8   296  ldr x17, pc+24 (addr 0x0000ffff58212fc0)    ;; lazy deoptimization bailout 0
0xffff58212fac   300  add x17, x17, x16
0xffff58212fb0   304  br x17
0xffff58212fb4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212fb8   312  d63f03e0       constant
0xffff58212fbc   316  d503201f       constant
0xffff58212fc0   320  58006000       constant
0xffff58212fc4   324  0000ffff       constant


Safepoints (size = 21)
0xffff58212f68   232  100000 | x2 (sp -> fp)  <none>

RelocInfo (size = 19)
0xffff58212f48  code target (STUB)  (0xffff58206820)
0xffff58212f60  code target (STUB)  (0xffff58206260)
0xffff58212f6c  code target (STUB)  (0xffff582068e0)
0xffff58212f78  constant pool (size 32)
0xffff58212fa8  runtime entry
0xffff58212fb4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2491
type = NORMAL
name = BinaryOpICStub(MOD:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff58212e80     0  movz x16, #0xa00000000
0xffff58212e84     4  sub csp, jssp, #0x10 (16)
0xffff58212e88     8  stp fp, lr, [jssp, #-16]!
0xffff58212e8c    12  mov fp, jssp
0xffff58212e90    16  sub csp, jssp, #0x20 (32)
0xffff58212e94    20  sub jssp, jssp, #0x20 (32)
0xffff58212e98    24  stur x16, [fp, #-8]
0xffff58212e9c    28  str x1, [jssp, #16]
0xffff58212ea0    32  str x0, [jssp, #8]
0xffff58212ea4    36  str cp, [jssp]
0xffff58212ea8    40  mov x3, cp
0xffff58212eac    44  mov x2, x0
0xffff58212eb0    48  tbnz w2, #0, #+0xe8 (addr 0xffff58212f98)
0xffff58212eb4    52  tbz w1, #0, #+0x34 (addr 0xffff58212ee8)
0xffff58212eb8    56  ldur x16, [x1, #-1]
0xffff58212ebc    60  ldr x17, [x26, #120]
0xffff58212ec0    64  cmp x16, x17
0xffff58212ec4    68  b.ne #+0xc (addr 0xffff58212ed0)
0xffff58212ec8    72  ldur d0, [x1, #7]
0xffff58212ecc    76  b #+0x20 (addr 0xffff58212eec)
0xffff58212ed0    80  ldr x16, [x26, #40]
0xffff58212ed4    84  cmp x1, x16
0xffff58212ed8    88  b.ne #+0xc8 (addr 0xffff58212fa0)
0xffff58212edc    92  ldr x4, [x26, #928]
0xffff58212ee0    96  ldur d0, [x4, #7]
0xffff58212ee4   100  b #+0x8 (addr 0xffff58212eec)
0xffff58212ee8   104  scvtf d0, x1, #32
0xffff58212eec   108  scvtf d1, x2, #32
0xffff58212ef0   112  movz x16, #0x4c40
0xffff58212ef4   116  movk x16, #0x9c, lsl #16
0xffff58212ef8   120  and csp, jssp, #0xfffffffffffffff0
0xffff58212efc   124  blr x16
0xffff58212f00   128  movz x1, #0x92c0
0xffff58212f04   132  movk x1, #0x16e7, lsl #16
0xffff58212f08   136  ldp x2, x0, [x1]
0xffff58212f0c   140  adds x16, x2, #0x10 (16)
0xffff58212f10   144  ccmp x16, x0, #nzCv, lo
0xffff58212f14   148  b.hi #+0x2c (addr 0xffff58212f40)
0xffff58212f18   152  str x16, [x1]
0xffff58212f1c   156  ldr x1, [x26, #120]
0xffff58212f20   160  str x1, [x2]
0xffff58212f24   164  orr x2, x2, #0x1
0xffff58212f28   168  stur d0, [x2, #7]
0xffff58212f2c   172  mov x0, x2
0xffff58212f30   176  ldr cp, [jssp]
0xffff58212f34   180  mov jssp, fp
0xffff58212f38   184  ldp fp, lr, [jssp], #16
0xffff58212f3c   188  ret
0xffff58212f40   192  movz x2, #0x0
0xffff58212f44   196  mov x16, lr
0xffff58212f48   200  ldr x17, pc+56 (addr 0x0000ffff58212f80)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58212f4c   204  blr x17
0xffff58212f50   208  ldur cp, [fp, #-8]
0xffff58212f54   212  movz x0, #0x0
0xffff58212f58   216  movz x1, #0x4b48
0xffff58212f5c   220  movk x1, #0xe4, lsl #16
0xffff58212f60   224  ldr x16, pc+40 (addr 0x0000ffff58212f88)    ;; code: STUB, CEntryStub, minor: 5
0xffff58212f64   228  blr x16
0xffff58212f68   232  str x0, [jssp, #16]
0xffff58212f6c   236  ldr x16, pc+36 (addr 0x0000ffff58212f90)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58212f70   240  blr x16
0xffff58212f74   244  b #-0x4c (addr 0xffff58212f28)
0xffff58212f78   248  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58212f7c   252  d63f03e0       constant
0xffff58212f80   256  58206820       constant
0xffff58212f84   260  0000ffff       constant
0xffff58212f88   264  58206260       constant
0xffff58212f8c   268  0000ffff       constant
0xffff58212f90   272  582068e0       constant
0xffff58212f94   276  0000ffff       constant
0xffff58212f98   280  movz x16, #0x0
0xffff58212f9c   284  bl #+0xc (addr 0xffff58212fa8)
0xffff58212fa0   288  movz x16, #0x8
0xffff58212fa4   292  bl #+0x4 (addr 0xffff58212fa8)
0xffff58212fa8   296  ldr x17, pc+24 (addr 0x0000ffff58212fc0)    ;; lazy deoptimization bailout 0
0xffff58212fac   300  add x17, x17, x16
0xffff58212fb0   304  br x17
0xffff58212fb4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58212fb8   312  d63f03e0       constant
0xffff58212fbc   316  d503201f       constant
0xffff58212fc0   320  58006000       constant
0xffff58212fc4   324  0000ffff       constant


Safepoints (size = 21)
0xffff58212f68   232  100000 | x2 (sp -> fp)  <none>

RelocInfo (size = 19)
0xffff58212f48  code target (STUB)  (0xffff58206820)
0xffff58212f60  code target (STUB)  (0xffff58206260)
0xffff58212f6c  code target (STUB)  (0xffff582068e0)
0xffff58212f78  constant pool (size 32)
0xffff58212fa8  runtime entry
0xffff58212fb4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2203
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 152)
0xffff58213040     0  mov x2, x1
0xffff58213044     4  tbnz w2, #0, #+0x30 (addr 0xffff58213074)
0xffff58213048     8  mov x3, x0
0xffff5821304c    12  tbnz w3, #0, #+0x38 (addr 0xffff58213084)
0xffff58213050    16  asr x2, x2, #32
0xffff58213054    20  asr x3, x3, #32
0xffff58213058    24  sdiv w4, w2, w3
0xffff5821305c    28  cbz w3, #+0x38 (addr 0xffff58213094)
0xffff58213060    32  msub w4, w4, w3, w2
0xffff58213064    36  cbnz w4, #+0x8 (addr 0xffff5821306c)
0xffff58213068    40  tbnz w2, #31, #+0x2c (addr 0xffff58213094)
0xffff5821306c    44  lsl x0, x4, #32
0xffff58213070    48  ret
0xffff58213074    52  movz x16, #0x0
0xffff58213078    56  sub csp, jssp, #0x10 (16)
0xffff5821307c    60  stp fp, lr, [jssp, #-16]!
0xffff58213080    64  bl #+0x24 (addr 0xffff582130a4)
0xffff58213084    68  movz x16, #0x8
0xffff58213088    72  sub csp, jssp, #0x10 (16)
0xffff5821308c    76  stp fp, lr, [jssp, #-16]!
0xffff58213090    80  bl #+0x14 (addr 0xffff582130a4)
0xffff58213094    84  movz x16, #0x10
0xffff58213098    88  sub csp, jssp, #0x10 (16)
0xffff5821309c    92  stp fp, lr, [jssp, #-16]!
0xffff582130a0    96  bl #+0x4 (addr 0xffff582130a4)
0xffff582130a4   100  movz x17, #0xa00000000
0xffff582130a8   104  sub csp, jssp, #0x10 (16)
0xffff582130ac   108  stp x17, cp, [jssp, #-16]!
0xffff582130b0   112  add fp, jssp, #0x10 (16)
0xffff582130b4   116  ldr x17, pc+20 (addr 0x0000ffff582130c8)    ;; lazy deoptimization bailout 0
0xffff582130b8   120  add x17, x17, x16
0xffff582130bc   124  br x17
0xffff582130c0   128  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582130c4   132  d63f03e0       constant
0xffff582130c8   136  58006000       constant
0xffff582130cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582130b4  runtime entry
0xffff582130c0  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2203
type = NORMAL
name = BinaryOpICStub(MOD:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 152)
0xffff58213040     0  mov x2, x1
0xffff58213044     4  tbnz w2, #0, #+0x30 (addr 0xffff58213074)
0xffff58213048     8  mov x3, x0
0xffff5821304c    12  tbnz w3, #0, #+0x38 (addr 0xffff58213084)
0xffff58213050    16  asr x2, x2, #32
0xffff58213054    20  asr x3, x3, #32
0xffff58213058    24  sdiv w4, w2, w3
0xffff5821305c    28  cbz w3, #+0x38 (addr 0xffff58213094)
0xffff58213060    32  msub w4, w4, w3, w2
0xffff58213064    36  cbnz w4, #+0x8 (addr 0xffff5821306c)
0xffff58213068    40  tbnz w2, #31, #+0x2c (addr 0xffff58213094)
0xffff5821306c    44  lsl x0, x4, #32
0xffff58213070    48  ret
0xffff58213074    52  movz x16, #0x0
0xffff58213078    56  sub csp, jssp, #0x10 (16)
0xffff5821307c    60  stp fp, lr, [jssp, #-16]!
0xffff58213080    64  bl #+0x24 (addr 0xffff582130a4)
0xffff58213084    68  movz x16, #0x8
0xffff58213088    72  sub csp, jssp, #0x10 (16)
0xffff5821308c    76  stp fp, lr, [jssp, #-16]!
0xffff58213090    80  bl #+0x14 (addr 0xffff582130a4)
0xffff58213094    84  movz x16, #0x10
0xffff58213098    88  sub csp, jssp, #0x10 (16)
0xffff5821309c    92  stp fp, lr, [jssp, #-16]!
0xffff582130a0    96  bl #+0x4 (addr 0xffff582130a4)
0xffff582130a4   100  movz x17, #0xa00000000
0xffff582130a8   104  sub csp, jssp, #0x10 (16)
0xffff582130ac   108  stp x17, cp, [jssp, #-16]!
0xffff582130b0   112  add fp, jssp, #0x10 (16)
0xffff582130b4   116  ldr x17, pc+20 (addr 0x0000ffff582130c8)    ;; lazy deoptimization bailout 0
0xffff582130b8   120  add x17, x17, x16
0xffff582130bc   124  br x17
0xffff582130c0   128  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582130c4   132  d63f03e0       constant
0xffff582130c8   136  58006000       constant
0xffff582130cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582130b4  runtime entry
0xffff582130c0  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4393
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff58213140     0  mov x2, x1
0xffff58213144     4  tbnz w2, #0, #+0x34 (addr 0xffff58213178)
0xffff58213148     8  mov x3, x0
0xffff5821314c    12  tbnz w3, #0, #+0x3c (addr 0xffff58213188)
0xffff58213150    16  cmp x3, #0x0 (0)
0xffff58213154    20  ccmp x2, #0, #nZcv, ne
0xffff58213158    24  ccmn x3, x2, #nzcv, eq
0xffff5821315c    28  b.mi #+0x3c (addr 0xffff58213198)
0xffff58213160    32  smulh x2, x3, x2
0xffff58213164    36  cmp x2, w2, sxtw
0xffff58213168    40  lsl x2, x2, #32
0xffff5821316c    44  b.ne #+0x2c (addr 0xffff58213198)
0xffff58213170    48  mov x0, x2
0xffff58213174    52  ret
0xffff58213178    56  movz x16, #0x0
0xffff5821317c    60  sub csp, jssp, #0x10 (16)
0xffff58213180    64  stp fp, lr, [jssp, #-16]!
0xffff58213184    68  bl #+0x24 (addr 0xffff582131a8)
0xffff58213188    72  movz x16, #0x8
0xffff5821318c    76  sub csp, jssp, #0x10 (16)
0xffff58213190    80  stp fp, lr, [jssp, #-16]!
0xffff58213194    84  bl #+0x14 (addr 0xffff582131a8)
0xffff58213198    88  movz x16, #0x10
0xffff5821319c    92  sub csp, jssp, #0x10 (16)
0xffff582131a0    96  stp fp, lr, [jssp, #-16]!
0xffff582131a4   100  bl #+0x4 (addr 0xffff582131a8)
0xffff582131a8   104  movz x17, #0xa00000000
0xffff582131ac   108  sub csp, jssp, #0x10 (16)
0xffff582131b0   112  stp x17, cp, [jssp, #-16]!
0xffff582131b4   116  add fp, jssp, #0x10 (16)
0xffff582131b8   120  ldr x17, pc+24 (addr 0x0000ffff582131d0)    ;; lazy deoptimization bailout 0
0xffff582131bc   124  add x17, x17, x16
0xffff582131c0   128  br x17
0xffff582131c4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582131c8   136  d63f03e0       constant
0xffff582131cc   140  d503201f       constant
0xffff582131d0   144  58006000       constant
0xffff582131d4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582131b8  runtime entry
0xffff582131c4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4393
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff58213140     0  mov x2, x1
0xffff58213144     4  tbnz w2, #0, #+0x34 (addr 0xffff58213178)
0xffff58213148     8  mov x3, x0
0xffff5821314c    12  tbnz w3, #0, #+0x3c (addr 0xffff58213188)
0xffff58213150    16  cmp x3, #0x0 (0)
0xffff58213154    20  ccmp x2, #0, #nZcv, ne
0xffff58213158    24  ccmn x3, x2, #nzcv, eq
0xffff5821315c    28  b.mi #+0x3c (addr 0xffff58213198)
0xffff58213160    32  smulh x2, x3, x2
0xffff58213164    36  cmp x2, w2, sxtw
0xffff58213168    40  lsl x2, x2, #32
0xffff5821316c    44  b.ne #+0x2c (addr 0xffff58213198)
0xffff58213170    48  mov x0, x2
0xffff58213174    52  ret
0xffff58213178    56  movz x16, #0x0
0xffff5821317c    60  sub csp, jssp, #0x10 (16)
0xffff58213180    64  stp fp, lr, [jssp, #-16]!
0xffff58213184    68  bl #+0x24 (addr 0xffff582131a8)
0xffff58213188    72  movz x16, #0x8
0xffff5821318c    76  sub csp, jssp, #0x10 (16)
0xffff58213190    80  stp fp, lr, [jssp, #-16]!
0xffff58213194    84  bl #+0x14 (addr 0xffff582131a8)
0xffff58213198    88  movz x16, #0x10
0xffff5821319c    92  sub csp, jssp, #0x10 (16)
0xffff582131a0    96  stp fp, lr, [jssp, #-16]!
0xffff582131a4   100  bl #+0x4 (addr 0xffff582131a8)
0xffff582131a8   104  movz x17, #0xa00000000
0xffff582131ac   108  sub csp, jssp, #0x10 (16)
0xffff582131b0   112  stp x17, cp, [jssp, #-16]!
0xffff582131b4   116  add fp, jssp, #0x10 (16)
0xffff582131b8   120  ldr x17, pc+24 (addr 0x0000ffff582131d0)    ;; lazy deoptimization bailout 0
0xffff582131bc   124  add x17, x17, x16
0xffff582131c0   128  br x17
0xffff582131c4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582131c8   136  d63f03e0       constant
0xffff582131cc   140  d503201f       constant
0xffff582131d0   144  58006000       constant
0xffff582131d4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582131b8  runtime entry
0xffff582131c4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4409
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff58213240     0  mov x2, x1
0xffff58213244     4  tbnz w2, #0, #+0xc4 (addr 0xffff58213308)
0xffff58213248     8  mov x3, x0
0xffff5821324c    12  tbnz w3, #0, #+0xcc (addr 0xffff58213318)
0xffff58213250    16  scvtf d0, x2, #32
0xffff58213254    20  scvtf d1, x3, #32
0xffff58213258    24  fmul d0, d0, d1
0xffff5821325c    28  movz x1, #0x92c0
0xffff58213260    32  movk x1, #0x16e7, lsl #16
0xffff58213264    36  ldp x2, x0, [x1]
0xffff58213268    40  adds x16, x2, #0x10 (16)
0xffff5821326c    44  ccmp x16, x0, #nzCv, lo
0xffff58213270    48  b.hi #+0x20 (addr 0xffff58213290)
0xffff58213274    52  str x16, [x1]
0xffff58213278    56  ldr x1, [x26, #120]
0xffff5821327c    60  str x1, [x2]
0xffff58213280    64  orr x2, x2, #0x1
0xffff58213284    68  stur d0, [x2, #7]
0xffff58213288    72  mov x0, x2
0xffff5821328c    76  ret
0xffff58213290    80  sub csp, jssp, #0x10 (16)
0xffff58213294    84  stp fp, lr, [jssp, #-16]!
0xffff58213298    88  movz fp, #0xa00000000
0xffff5821329c    92  sub csp, jssp, #0x8 (8)
0xffff582132a0    96  str fp, [jssp, #-8]!
0xffff582132a4   100  add fp, jssp, #0x8 (8)
0xffff582132a8   104  movz x2, #0x0
0xffff582132ac   108  mov x16, lr
0xffff582132b0   112  ldr x17, pc+64 (addr 0x0000ffff582132f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582132b4   116  blr x17
0xffff582132b8   120  ldur cp, [fp, #-8]
0xffff582132bc   124  movz x0, #0x0
0xffff582132c0   128  movz x1, #0x4b48
0xffff582132c4   132  movk x1, #0xe4, lsl #16
0xffff582132c8   136  ldr x16, pc+48 (addr 0x0000ffff582132f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582132cc   140  blr x16
0xffff582132d0   144  str x0, [jssp, #16]
0xffff582132d4   148  ldr x16, pc+44 (addr 0x0000ffff58213300)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582132d8   152  blr x16
0xffff582132dc   156  ldr lr, [jssp, #16]
0xffff582132e0   160  ldp xzr, fp, [jssp], #24
0xffff582132e4   164  b #-0x60 (addr 0xffff58213284)
0xffff582132e8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582132ec   172  d63f03e0       constant
0xffff582132f0   176  58206820       constant
0xffff582132f4   180  0000ffff       constant
0xffff582132f8   184  58206260       constant
0xffff582132fc   188  0000ffff       constant
0xffff58213300   192  582068e0       constant
0xffff58213304   196  0000ffff       constant
0xffff58213308   200  movz x16, #0x0
0xffff5821330c   204  sub csp, jssp, #0x10 (16)
0xffff58213310   208  stp fp, lr, [jssp, #-16]!
0xffff58213314   212  bl #+0x14 (addr 0xffff58213328)
0xffff58213318   216  movz x16, #0x8
0xffff5821331c   220  sub csp, jssp, #0x10 (16)
0xffff58213320   224  stp fp, lr, [jssp, #-16]!
0xffff58213324   228  bl #+0x4 (addr 0xffff58213328)
0xffff58213328   232  movz x17, #0xa00000000
0xffff5821332c   236  sub csp, jssp, #0x10 (16)
0xffff58213330   240  stp x17, cp, [jssp, #-16]!
0xffff58213334   244  add fp, jssp, #0x10 (16)
0xffff58213338   248  ldr x17, pc+24 (addr 0x0000ffff58213350)    ;; lazy deoptimization bailout 0
0xffff5821333c   252  add x17, x17, x16
0xffff58213340   256  br x17
0xffff58213344   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213348   264  d63f03e0       constant
0xffff5821334c   268  d503201f       constant
0xffff58213350   272  58006000       constant
0xffff58213354   276  0000ffff       constant


Safepoints (size = 21)
0xffff582132d0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582132b0  code target (STUB)  (0xffff58206820)
0xffff582132c8  code target (STUB)  (0xffff58206260)
0xffff582132d4  code target (STUB)  (0xffff582068e0)
0xffff582132e8  constant pool (size 32)
0xffff58213338  runtime entry
0xffff58213344  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4409
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff58213240     0  mov x2, x1
0xffff58213244     4  tbnz w2, #0, #+0xc4 (addr 0xffff58213308)
0xffff58213248     8  mov x3, x0
0xffff5821324c    12  tbnz w3, #0, #+0xcc (addr 0xffff58213318)
0xffff58213250    16  scvtf d0, x2, #32
0xffff58213254    20  scvtf d1, x3, #32
0xffff58213258    24  fmul d0, d0, d1
0xffff5821325c    28  movz x1, #0x92c0
0xffff58213260    32  movk x1, #0x16e7, lsl #16
0xffff58213264    36  ldp x2, x0, [x1]
0xffff58213268    40  adds x16, x2, #0x10 (16)
0xffff5821326c    44  ccmp x16, x0, #nzCv, lo
0xffff58213270    48  b.hi #+0x20 (addr 0xffff58213290)
0xffff58213274    52  str x16, [x1]
0xffff58213278    56  ldr x1, [x26, #120]
0xffff5821327c    60  str x1, [x2]
0xffff58213280    64  orr x2, x2, #0x1
0xffff58213284    68  stur d0, [x2, #7]
0xffff58213288    72  mov x0, x2
0xffff5821328c    76  ret
0xffff58213290    80  sub csp, jssp, #0x10 (16)
0xffff58213294    84  stp fp, lr, [jssp, #-16]!
0xffff58213298    88  movz fp, #0xa00000000
0xffff5821329c    92  sub csp, jssp, #0x8 (8)
0xffff582132a0    96  str fp, [jssp, #-8]!
0xffff582132a4   100  add fp, jssp, #0x8 (8)
0xffff582132a8   104  movz x2, #0x0
0xffff582132ac   108  mov x16, lr
0xffff582132b0   112  ldr x17, pc+64 (addr 0x0000ffff582132f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582132b4   116  blr x17
0xffff582132b8   120  ldur cp, [fp, #-8]
0xffff582132bc   124  movz x0, #0x0
0xffff582132c0   128  movz x1, #0x4b48
0xffff582132c4   132  movk x1, #0xe4, lsl #16
0xffff582132c8   136  ldr x16, pc+48 (addr 0x0000ffff582132f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582132cc   140  blr x16
0xffff582132d0   144  str x0, [jssp, #16]
0xffff582132d4   148  ldr x16, pc+44 (addr 0x0000ffff58213300)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582132d8   152  blr x16
0xffff582132dc   156  ldr lr, [jssp, #16]
0xffff582132e0   160  ldp xzr, fp, [jssp], #24
0xffff582132e4   164  b #-0x60 (addr 0xffff58213284)
0xffff582132e8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582132ec   172  d63f03e0       constant
0xffff582132f0   176  58206820       constant
0xffff582132f4   180  0000ffff       constant
0xffff582132f8   184  58206260       constant
0xffff582132fc   188  0000ffff       constant
0xffff58213300   192  582068e0       constant
0xffff58213304   196  0000ffff       constant
0xffff58213308   200  movz x16, #0x0
0xffff5821330c   204  sub csp, jssp, #0x10 (16)
0xffff58213310   208  stp fp, lr, [jssp, #-16]!
0xffff58213314   212  bl #+0x14 (addr 0xffff58213328)
0xffff58213318   216  movz x16, #0x8
0xffff5821331c   220  sub csp, jssp, #0x10 (16)
0xffff58213320   224  stp fp, lr, [jssp, #-16]!
0xffff58213324   228  bl #+0x4 (addr 0xffff58213328)
0xffff58213328   232  movz x17, #0xa00000000
0xffff5821332c   236  sub csp, jssp, #0x10 (16)
0xffff58213330   240  stp x17, cp, [jssp, #-16]!
0xffff58213334   244  add fp, jssp, #0x10 (16)
0xffff58213338   248  ldr x17, pc+24 (addr 0x0000ffff58213350)    ;; lazy deoptimization bailout 0
0xffff5821333c   252  add x17, x17, x16
0xffff58213340   256  br x17
0xffff58213344   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213348   264  d63f03e0       constant
0xffff5821334c   268  d503201f       constant
0xffff58213350   272  58006000       constant
0xffff58213354   276  0000ffff       constant


Safepoints (size = 21)
0xffff582132d0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582132b0  code target (STUB)  (0xffff58206820)
0xffff582132c8  code target (STUB)  (0xffff58206260)
0xffff582132d4  code target (STUB)  (0xffff582068e0)
0xffff582132e8  constant pool (size 32)
0xffff58213338  runtime entry
0xffff58213344  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6457
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff582133e0     0  mov x2, x1
0xffff582133e4     4  tbnz w2, #0, #+0xf4 (addr 0xffff582134d8)
0xffff582133e8     8  tbz w0, #0, #+0x34 (addr 0xffff5821341c)
0xffff582133ec    12  ldur x16, [x0, #-1]
0xffff582133f0    16  ldr x17, [x26, #120]
0xffff582133f4    20  cmp x16, x17
0xffff582133f8    24  b.ne #+0xc (addr 0xffff58213404)
0xffff582133fc    28  ldur d0, [x0, #7]
0xffff58213400    32  b #+0x20 (addr 0xffff58213420)
0xffff58213404    36  ldr x16, [x26, #40]
0xffff58213408    40  cmp x0, x16
0xffff5821340c    44  b.ne #+0xdc (addr 0xffff582134e8)
0xffff58213410    48  ldr x3, [x26, #928]
0xffff58213414    52  ldur d0, [x3, #7]
0xffff58213418    56  b #+0x8 (addr 0xffff58213420)
0xffff5821341c    60  scvtf d0, x0, #32
0xffff58213420    64  scvtf d1, x2, #32
0xffff58213424    68  fmul d0, d1, d0
0xffff58213428    72  movz x1, #0x92c0
0xffff5821342c    76  movk x1, #0x16e7, lsl #16
0xffff58213430    80  ldp x2, x0, [x1]
0xffff58213434    84  adds x16, x2, #0x10 (16)
0xffff58213438    88  ccmp x16, x0, #nzCv, lo
0xffff5821343c    92  b.hi #+0x20 (addr 0xffff5821345c)
0xffff58213440    96  str x16, [x1]
0xffff58213444   100  ldr x1, [x26, #120]
0xffff58213448   104  str x1, [x2]
0xffff5821344c   108  orr x2, x2, #0x1
0xffff58213450   112  stur d0, [x2, #7]
0xffff58213454   116  mov x0, x2
0xffff58213458   120  ret
0xffff5821345c   124  sub csp, jssp, #0x10 (16)
0xffff58213460   128  stp fp, lr, [jssp, #-16]!
0xffff58213464   132  movz fp, #0xa00000000
0xffff58213468   136  sub csp, jssp, #0x8 (8)
0xffff5821346c   140  str fp, [jssp, #-8]!
0xffff58213470   144  add fp, jssp, #0x8 (8)
0xffff58213474   148  movz x2, #0x0
0xffff58213478   152  mov x16, lr
0xffff5821347c   156  ldr x17, pc+68 (addr 0x0000ffff582134c0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58213480   160  blr x17
0xffff58213484   164  ldur cp, [fp, #-8]
0xffff58213488   168  movz x0, #0x0
0xffff5821348c   172  movz x1, #0x4b48
0xffff58213490   176  movk x1, #0xe4, lsl #16
0xffff58213494   180  ldr x16, pc+52 (addr 0x0000ffff582134c8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58213498   184  blr x16
0xffff5821349c   188  str x0, [jssp, #16]
0xffff582134a0   192  ldr x16, pc+48 (addr 0x0000ffff582134d0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582134a4   196  blr x16
0xffff582134a8   200  ldr lr, [jssp, #16]
0xffff582134ac   204  ldp xzr, fp, [jssp], #24
0xffff582134b0   208  b #-0x60 (addr 0xffff58213450)
0xffff582134b4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff582134b8   216  d63f03e0       constant
0xffff582134bc   220  d503201f       constant
0xffff582134c0   224  58206820       constant
0xffff582134c4   228  0000ffff       constant
0xffff582134c8   232  58206260       constant
0xffff582134cc   236  0000ffff       constant
0xffff582134d0   240  582068e0       constant
0xffff582134d4   244  0000ffff       constant
0xffff582134d8   248  movz x16, #0x0
0xffff582134dc   252  sub csp, jssp, #0x10 (16)
0xffff582134e0   256  stp fp, lr, [jssp, #-16]!
0xffff582134e4   260  bl #+0x14 (addr 0xffff582134f8)
0xffff582134e8   264  movz x16, #0x8
0xffff582134ec   268  sub csp, jssp, #0x10 (16)
0xffff582134f0   272  stp fp, lr, [jssp, #-16]!
0xffff582134f4   276  bl #+0x4 (addr 0xffff582134f8)
0xffff582134f8   280  movz x17, #0xa00000000
0xffff582134fc   284  sub csp, jssp, #0x10 (16)
0xffff58213500   288  stp x17, cp, [jssp, #-16]!
0xffff58213504   292  add fp, jssp, #0x10 (16)
0xffff58213508   296  ldr x17, pc+24 (addr 0x0000ffff58213520)    ;; lazy deoptimization bailout 0
0xffff5821350c   300  add x17, x17, x16
0xffff58213510   304  br x17
0xffff58213514   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213518   312  d63f03e0       constant
0xffff5821351c   316  d503201f       constant
0xffff58213520   320  58006000       constant
0xffff58213524   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821349c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5821347c  code target (STUB)  (0xffff58206820)
0xffff58213494  code target (STUB)  (0xffff58206260)
0xffff582134a0  code target (STUB)  (0xffff582068e0)
0xffff582134b4  constant pool (size 36)
0xffff58213508  runtime entry
0xffff58213514  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6457
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff582133e0     0  mov x2, x1
0xffff582133e4     4  tbnz w2, #0, #+0xf4 (addr 0xffff582134d8)
0xffff582133e8     8  tbz w0, #0, #+0x34 (addr 0xffff5821341c)
0xffff582133ec    12  ldur x16, [x0, #-1]
0xffff582133f0    16  ldr x17, [x26, #120]
0xffff582133f4    20  cmp x16, x17
0xffff582133f8    24  b.ne #+0xc (addr 0xffff58213404)
0xffff582133fc    28  ldur d0, [x0, #7]
0xffff58213400    32  b #+0x20 (addr 0xffff58213420)
0xffff58213404    36  ldr x16, [x26, #40]
0xffff58213408    40  cmp x0, x16
0xffff5821340c    44  b.ne #+0xdc (addr 0xffff582134e8)
0xffff58213410    48  ldr x3, [x26, #928]
0xffff58213414    52  ldur d0, [x3, #7]
0xffff58213418    56  b #+0x8 (addr 0xffff58213420)
0xffff5821341c    60  scvtf d0, x0, #32
0xffff58213420    64  scvtf d1, x2, #32
0xffff58213424    68  fmul d0, d1, d0
0xffff58213428    72  movz x1, #0x92c0
0xffff5821342c    76  movk x1, #0x16e7, lsl #16
0xffff58213430    80  ldp x2, x0, [x1]
0xffff58213434    84  adds x16, x2, #0x10 (16)
0xffff58213438    88  ccmp x16, x0, #nzCv, lo
0xffff5821343c    92  b.hi #+0x20 (addr 0xffff5821345c)
0xffff58213440    96  str x16, [x1]
0xffff58213444   100  ldr x1, [x26, #120]
0xffff58213448   104  str x1, [x2]
0xffff5821344c   108  orr x2, x2, #0x1
0xffff58213450   112  stur d0, [x2, #7]
0xffff58213454   116  mov x0, x2
0xffff58213458   120  ret
0xffff5821345c   124  sub csp, jssp, #0x10 (16)
0xffff58213460   128  stp fp, lr, [jssp, #-16]!
0xffff58213464   132  movz fp, #0xa00000000
0xffff58213468   136  sub csp, jssp, #0x8 (8)
0xffff5821346c   140  str fp, [jssp, #-8]!
0xffff58213470   144  add fp, jssp, #0x8 (8)
0xffff58213474   148  movz x2, #0x0
0xffff58213478   152  mov x16, lr
0xffff5821347c   156  ldr x17, pc+68 (addr 0x0000ffff582134c0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58213480   160  blr x17
0xffff58213484   164  ldur cp, [fp, #-8]
0xffff58213488   168  movz x0, #0x0
0xffff5821348c   172  movz x1, #0x4b48
0xffff58213490   176  movk x1, #0xe4, lsl #16
0xffff58213494   180  ldr x16, pc+52 (addr 0x0000ffff582134c8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58213498   184  blr x16
0xffff5821349c   188  str x0, [jssp, #16]
0xffff582134a0   192  ldr x16, pc+48 (addr 0x0000ffff582134d0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582134a4   196  blr x16
0xffff582134a8   200  ldr lr, [jssp, #16]
0xffff582134ac   204  ldp xzr, fp, [jssp], #24
0xffff582134b0   208  b #-0x60 (addr 0xffff58213450)
0xffff582134b4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff582134b8   216  d63f03e0       constant
0xffff582134bc   220  d503201f       constant
0xffff582134c0   224  58206820       constant
0xffff582134c4   228  0000ffff       constant
0xffff582134c8   232  58206260       constant
0xffff582134cc   236  0000ffff       constant
0xffff582134d0   240  582068e0       constant
0xffff582134d4   244  0000ffff       constant
0xffff582134d8   248  movz x16, #0x0
0xffff582134dc   252  sub csp, jssp, #0x10 (16)
0xffff582134e0   256  stp fp, lr, [jssp, #-16]!
0xffff582134e4   260  bl #+0x14 (addr 0xffff582134f8)
0xffff582134e8   264  movz x16, #0x8
0xffff582134ec   268  sub csp, jssp, #0x10 (16)
0xffff582134f0   272  stp fp, lr, [jssp, #-16]!
0xffff582134f4   276  bl #+0x4 (addr 0xffff582134f8)
0xffff582134f8   280  movz x17, #0xa00000000
0xffff582134fc   284  sub csp, jssp, #0x10 (16)
0xffff58213500   288  stp x17, cp, [jssp, #-16]!
0xffff58213504   292  add fp, jssp, #0x10 (16)
0xffff58213508   296  ldr x17, pc+24 (addr 0x0000ffff58213520)    ;; lazy deoptimization bailout 0
0xffff5821350c   300  add x17, x17, x16
0xffff58213510   304  br x17
0xffff58213514   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213518   312  d63f03e0       constant
0xffff5821351c   316  d503201f       constant
0xffff58213520   320  58006000       constant
0xffff58213524   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821349c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5821347c  code target (STUB)  (0xffff58206820)
0xffff58213494  code target (STUB)  (0xffff58206260)
0xffff582134a0  code target (STUB)  (0xffff582068e0)
0xffff582134b4  constant pool (size 36)
0xffff58213508  runtime entry
0xffff58213514  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2345
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff582135a0     0  mov x2, x1
0xffff582135a4     4  tbnz w2, #0, #+0x34 (addr 0xffff582135d8)
0xffff582135a8     8  mov x3, x0
0xffff582135ac    12  tbnz w3, #0, #+0x3c (addr 0xffff582135e8)
0xffff582135b0    16  cmp x3, #0x0 (0)
0xffff582135b4    20  ccmp x2, #0, #nZcv, ne
0xffff582135b8    24  ccmn x3, x2, #nzcv, eq
0xffff582135bc    28  b.mi #+0x3c (addr 0xffff582135f8)
0xffff582135c0    32  smulh x2, x3, x2
0xffff582135c4    36  cmp x2, w2, sxtw
0xffff582135c8    40  lsl x2, x2, #32
0xffff582135cc    44  b.ne #+0x2c (addr 0xffff582135f8)
0xffff582135d0    48  mov x0, x2
0xffff582135d4    52  ret
0xffff582135d8    56  movz x16, #0x0
0xffff582135dc    60  sub csp, jssp, #0x10 (16)
0xffff582135e0    64  stp fp, lr, [jssp, #-16]!
0xffff582135e4    68  bl #+0x24 (addr 0xffff58213608)
0xffff582135e8    72  movz x16, #0x8
0xffff582135ec    76  sub csp, jssp, #0x10 (16)
0xffff582135f0    80  stp fp, lr, [jssp, #-16]!
0xffff582135f4    84  bl #+0x14 (addr 0xffff58213608)
0xffff582135f8    88  movz x16, #0x10
0xffff582135fc    92  sub csp, jssp, #0x10 (16)
0xffff58213600    96  stp fp, lr, [jssp, #-16]!
0xffff58213604   100  bl #+0x4 (addr 0xffff58213608)
0xffff58213608   104  movz x17, #0xa00000000
0xffff5821360c   108  sub csp, jssp, #0x10 (16)
0xffff58213610   112  stp x17, cp, [jssp, #-16]!
0xffff58213614   116  add fp, jssp, #0x10 (16)
0xffff58213618   120  ldr x17, pc+24 (addr 0x0000ffff58213630)    ;; lazy deoptimization bailout 0
0xffff5821361c   124  add x17, x17, x16
0xffff58213620   128  br x17
0xffff58213624   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213628   136  d63f03e0       constant
0xffff5821362c   140  d503201f       constant
0xffff58213630   144  58006000       constant
0xffff58213634   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58213618  runtime entry
0xffff58213624  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2345
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff582135a0     0  mov x2, x1
0xffff582135a4     4  tbnz w2, #0, #+0x34 (addr 0xffff582135d8)
0xffff582135a8     8  mov x3, x0
0xffff582135ac    12  tbnz w3, #0, #+0x3c (addr 0xffff582135e8)
0xffff582135b0    16  cmp x3, #0x0 (0)
0xffff582135b4    20  ccmp x2, #0, #nZcv, ne
0xffff582135b8    24  ccmn x3, x2, #nzcv, eq
0xffff582135bc    28  b.mi #+0x3c (addr 0xffff582135f8)
0xffff582135c0    32  smulh x2, x3, x2
0xffff582135c4    36  cmp x2, w2, sxtw
0xffff582135c8    40  lsl x2, x2, #32
0xffff582135cc    44  b.ne #+0x2c (addr 0xffff582135f8)
0xffff582135d0    48  mov x0, x2
0xffff582135d4    52  ret
0xffff582135d8    56  movz x16, #0x0
0xffff582135dc    60  sub csp, jssp, #0x10 (16)
0xffff582135e0    64  stp fp, lr, [jssp, #-16]!
0xffff582135e4    68  bl #+0x24 (addr 0xffff58213608)
0xffff582135e8    72  movz x16, #0x8
0xffff582135ec    76  sub csp, jssp, #0x10 (16)
0xffff582135f0    80  stp fp, lr, [jssp, #-16]!
0xffff582135f4    84  bl #+0x14 (addr 0xffff58213608)
0xffff582135f8    88  movz x16, #0x10
0xffff582135fc    92  sub csp, jssp, #0x10 (16)
0xffff58213600    96  stp fp, lr, [jssp, #-16]!
0xffff58213604   100  bl #+0x4 (addr 0xffff58213608)
0xffff58213608   104  movz x17, #0xa00000000
0xffff5821360c   108  sub csp, jssp, #0x10 (16)
0xffff58213610   112  stp x17, cp, [jssp, #-16]!
0xffff58213614   116  add fp, jssp, #0x10 (16)
0xffff58213618   120  ldr x17, pc+24 (addr 0x0000ffff58213630)    ;; lazy deoptimization bailout 0
0xffff5821361c   124  add x17, x17, x16
0xffff58213620   128  br x17
0xffff58213624   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213628   136  d63f03e0       constant
0xffff5821362c   140  d503201f       constant
0xffff58213630   144  58006000       constant
0xffff58213634   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58213618  runtime entry
0xffff58213624  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2361
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff582136a0     0  mov x2, x1
0xffff582136a4     4  tbnz w2, #0, #+0xc4 (addr 0xffff58213768)
0xffff582136a8     8  mov x3, x0
0xffff582136ac    12  tbnz w3, #0, #+0xcc (addr 0xffff58213778)
0xffff582136b0    16  scvtf d0, x2, #32
0xffff582136b4    20  scvtf d1, x3, #32
0xffff582136b8    24  fmul d0, d0, d1
0xffff582136bc    28  movz x1, #0x92c0
0xffff582136c0    32  movk x1, #0x16e7, lsl #16
0xffff582136c4    36  ldp x2, x0, [x1]
0xffff582136c8    40  adds x16, x2, #0x10 (16)
0xffff582136cc    44  ccmp x16, x0, #nzCv, lo
0xffff582136d0    48  b.hi #+0x20 (addr 0xffff582136f0)
0xffff582136d4    52  str x16, [x1]
0xffff582136d8    56  ldr x1, [x26, #120]
0xffff582136dc    60  str x1, [x2]
0xffff582136e0    64  orr x2, x2, #0x1
0xffff582136e4    68  stur d0, [x2, #7]
0xffff582136e8    72  mov x0, x2
0xffff582136ec    76  ret
0xffff582136f0    80  sub csp, jssp, #0x10 (16)
0xffff582136f4    84  stp fp, lr, [jssp, #-16]!
0xffff582136f8    88  movz fp, #0xa00000000
0xffff582136fc    92  sub csp, jssp, #0x8 (8)
0xffff58213700    96  str fp, [jssp, #-8]!
0xffff58213704   100  add fp, jssp, #0x8 (8)
0xffff58213708   104  movz x2, #0x0
0xffff5821370c   108  mov x16, lr
0xffff58213710   112  ldr x17, pc+64 (addr 0x0000ffff58213750)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58213714   116  blr x17
0xffff58213718   120  ldur cp, [fp, #-8]
0xffff5821371c   124  movz x0, #0x0
0xffff58213720   128  movz x1, #0x4b48
0xffff58213724   132  movk x1, #0xe4, lsl #16
0xffff58213728   136  ldr x16, pc+48 (addr 0x0000ffff58213758)    ;; code: STUB, CEntryStub, minor: 5
0xffff5821372c   140  blr x16
0xffff58213730   144  str x0, [jssp, #16]
0xffff58213734   148  ldr x16, pc+44 (addr 0x0000ffff58213760)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58213738   152  blr x16
0xffff5821373c   156  ldr lr, [jssp, #16]
0xffff58213740   160  ldp xzr, fp, [jssp], #24
0xffff58213744   164  b #-0x60 (addr 0xffff582136e4)
0xffff58213748   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5821374c   172  d63f03e0       constant
0xffff58213750   176  58206820       constant
0xffff58213754   180  0000ffff       constant
0xffff58213758   184  58206260       constant
0xffff5821375c   188  0000ffff       constant
0xffff58213760   192  582068e0       constant
0xffff58213764   196  0000ffff       constant
0xffff58213768   200  movz x16, #0x0
0xffff5821376c   204  sub csp, jssp, #0x10 (16)
0xffff58213770   208  stp fp, lr, [jssp, #-16]!
0xffff58213774   212  bl #+0x14 (addr 0xffff58213788)
0xffff58213778   216  movz x16, #0x8
0xffff5821377c   220  sub csp, jssp, #0x10 (16)
0xffff58213780   224  stp fp, lr, [jssp, #-16]!
0xffff58213784   228  bl #+0x4 (addr 0xffff58213788)
0xffff58213788   232  movz x17, #0xa00000000
0xffff5821378c   236  sub csp, jssp, #0x10 (16)
0xffff58213790   240  stp x17, cp, [jssp, #-16]!
0xffff58213794   244  add fp, jssp, #0x10 (16)
0xffff58213798   248  ldr x17, pc+24 (addr 0x0000ffff582137b0)    ;; lazy deoptimization bailout 0
0xffff5821379c   252  add x17, x17, x16
0xffff582137a0   256  br x17
0xffff582137a4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582137a8   264  d63f03e0       constant
0xffff582137ac   268  d503201f       constant
0xffff582137b0   272  58006000       constant
0xffff582137b4   276  0000ffff       constant


Safepoints (size = 21)
0xffff58213730   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58213710  code target (STUB)  (0xffff58206820)
0xffff58213728  code target (STUB)  (0xffff58206260)
0xffff58213734  code target (STUB)  (0xffff582068e0)
0xffff58213748  constant pool (size 32)
0xffff58213798  runtime entry
0xffff582137a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2361
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff582136a0     0  mov x2, x1
0xffff582136a4     4  tbnz w2, #0, #+0xc4 (addr 0xffff58213768)
0xffff582136a8     8  mov x3, x0
0xffff582136ac    12  tbnz w3, #0, #+0xcc (addr 0xffff58213778)
0xffff582136b0    16  scvtf d0, x2, #32
0xffff582136b4    20  scvtf d1, x3, #32
0xffff582136b8    24  fmul d0, d0, d1
0xffff582136bc    28  movz x1, #0x92c0
0xffff582136c0    32  movk x1, #0x16e7, lsl #16
0xffff582136c4    36  ldp x2, x0, [x1]
0xffff582136c8    40  adds x16, x2, #0x10 (16)
0xffff582136cc    44  ccmp x16, x0, #nzCv, lo
0xffff582136d0    48  b.hi #+0x20 (addr 0xffff582136f0)
0xffff582136d4    52  str x16, [x1]
0xffff582136d8    56  ldr x1, [x26, #120]
0xffff582136dc    60  str x1, [x2]
0xffff582136e0    64  orr x2, x2, #0x1
0xffff582136e4    68  stur d0, [x2, #7]
0xffff582136e8    72  mov x0, x2
0xffff582136ec    76  ret
0xffff582136f0    80  sub csp, jssp, #0x10 (16)
0xffff582136f4    84  stp fp, lr, [jssp, #-16]!
0xffff582136f8    88  movz fp, #0xa00000000
0xffff582136fc    92  sub csp, jssp, #0x8 (8)
0xffff58213700    96  str fp, [jssp, #-8]!
0xffff58213704   100  add fp, jssp, #0x8 (8)
0xffff58213708   104  movz x2, #0x0
0xffff5821370c   108  mov x16, lr
0xffff58213710   112  ldr x17, pc+64 (addr 0x0000ffff58213750)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58213714   116  blr x17
0xffff58213718   120  ldur cp, [fp, #-8]
0xffff5821371c   124  movz x0, #0x0
0xffff58213720   128  movz x1, #0x4b48
0xffff58213724   132  movk x1, #0xe4, lsl #16
0xffff58213728   136  ldr x16, pc+48 (addr 0x0000ffff58213758)    ;; code: STUB, CEntryStub, minor: 5
0xffff5821372c   140  blr x16
0xffff58213730   144  str x0, [jssp, #16]
0xffff58213734   148  ldr x16, pc+44 (addr 0x0000ffff58213760)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58213738   152  blr x16
0xffff5821373c   156  ldr lr, [jssp, #16]
0xffff58213740   160  ldp xzr, fp, [jssp], #24
0xffff58213744   164  b #-0x60 (addr 0xffff582136e4)
0xffff58213748   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5821374c   172  d63f03e0       constant
0xffff58213750   176  58206820       constant
0xffff58213754   180  0000ffff       constant
0xffff58213758   184  58206260       constant
0xffff5821375c   188  0000ffff       constant
0xffff58213760   192  582068e0       constant
0xffff58213764   196  0000ffff       constant
0xffff58213768   200  movz x16, #0x0
0xffff5821376c   204  sub csp, jssp, #0x10 (16)
0xffff58213770   208  stp fp, lr, [jssp, #-16]!
0xffff58213774   212  bl #+0x14 (addr 0xffff58213788)
0xffff58213778   216  movz x16, #0x8
0xffff5821377c   220  sub csp, jssp, #0x10 (16)
0xffff58213780   224  stp fp, lr, [jssp, #-16]!
0xffff58213784   228  bl #+0x4 (addr 0xffff58213788)
0xffff58213788   232  movz x17, #0xa00000000
0xffff5821378c   236  sub csp, jssp, #0x10 (16)
0xffff58213790   240  stp x17, cp, [jssp, #-16]!
0xffff58213794   244  add fp, jssp, #0x10 (16)
0xffff58213798   248  ldr x17, pc+24 (addr 0x0000ffff582137b0)    ;; lazy deoptimization bailout 0
0xffff5821379c   252  add x17, x17, x16
0xffff582137a0   256  br x17
0xffff582137a4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582137a8   264  d63f03e0       constant
0xffff582137ac   268  d503201f       constant
0xffff582137b0   272  58006000       constant
0xffff582137b4   276  0000ffff       constant


Safepoints (size = 21)
0xffff58213730   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58213710  code target (STUB)  (0xffff58206820)
0xffff58213728  code target (STUB)  (0xffff58206260)
0xffff58213734  code target (STUB)  (0xffff582068e0)
0xffff58213748  constant pool (size 32)
0xffff58213798  runtime entry
0xffff582137a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4537
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff58213840     0  mov x2, x0
0xffff58213844     4  tbnz w2, #0, #+0xf4 (addr 0xffff58213938)
0xffff58213848     8  tbz w1, #0, #+0x34 (addr 0xffff5821387c)
0xffff5821384c    12  ldur x16, [x1, #-1]
0xffff58213850    16  ldr x17, [x26, #120]
0xffff58213854    20  cmp x16, x17
0xffff58213858    24  b.ne #+0xc (addr 0xffff58213864)
0xffff5821385c    28  ldur d0, [x1, #7]
0xffff58213860    32  b #+0x20 (addr 0xffff58213880)
0xffff58213864    36  ldr x16, [x26, #40]
0xffff58213868    40  cmp x1, x16
0xffff5821386c    44  b.ne #+0xdc (addr 0xffff58213948)
0xffff58213870    48  ldr x3, [x26, #928]
0xffff58213874    52  ldur d0, [x3, #7]
0xffff58213878    56  b #+0x8 (addr 0xffff58213880)
0xffff5821387c    60  scvtf d0, x1, #32
0xffff58213880    64  scvtf d1, x2, #32
0xffff58213884    68  fmul d0, d0, d1
0xffff58213888    72  movz x1, #0x92c0
0xffff5821388c    76  movk x1, #0x16e7, lsl #16
0xffff58213890    80  ldp x2, x0, [x1]
0xffff58213894    84  adds x16, x2, #0x10 (16)
0xffff58213898    88  ccmp x16, x0, #nzCv, lo
0xffff5821389c    92  b.hi #+0x20 (addr 0xffff582138bc)
0xffff582138a0    96  str x16, [x1]
0xffff582138a4   100  ldr x1, [x26, #120]
0xffff582138a8   104  str x1, [x2]
0xffff582138ac   108  orr x2, x2, #0x1
0xffff582138b0   112  stur d0, [x2, #7]
0xffff582138b4   116  mov x0, x2
0xffff582138b8   120  ret
0xffff582138bc   124  sub csp, jssp, #0x10 (16)
0xffff582138c0   128  stp fp, lr, [jssp, #-16]!
0xffff582138c4   132  movz fp, #0xa00000000
0xffff582138c8   136  sub csp, jssp, #0x8 (8)
0xffff582138cc   140  str fp, [jssp, #-8]!
0xffff582138d0   144  add fp, jssp, #0x8 (8)
0xffff582138d4   148  movz x2, #0x0
0xffff582138d8   152  mov x16, lr
0xffff582138dc   156  ldr x17, pc+68 (addr 0x0000ffff58213920)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582138e0   160  blr x17
0xffff582138e4   164  ldur cp, [fp, #-8]
0xffff582138e8   168  movz x0, #0x0
0xffff582138ec   172  movz x1, #0x4b48
0xffff582138f0   176  movk x1, #0xe4, lsl #16
0xffff582138f4   180  ldr x16, pc+52 (addr 0x0000ffff58213928)    ;; code: STUB, CEntryStub, minor: 5
0xffff582138f8   184  blr x16
0xffff582138fc   188  str x0, [jssp, #16]
0xffff58213900   192  ldr x16, pc+48 (addr 0x0000ffff58213930)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58213904   196  blr x16
0xffff58213908   200  ldr lr, [jssp, #16]
0xffff5821390c   204  ldp xzr, fp, [jssp], #24
0xffff58213910   208  b #-0x60 (addr 0xffff582138b0)
0xffff58213914   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58213918   216  d63f03e0       constant
0xffff5821391c   220  d503201f       constant
0xffff58213920   224  58206820       constant
0xffff58213924   228  0000ffff       constant
0xffff58213928   232  58206260       constant
0xffff5821392c   236  0000ffff       constant
0xffff58213930   240  582068e0       constant
0xffff58213934   244  0000ffff       constant
0xffff58213938   248  movz x16, #0x0
0xffff5821393c   252  sub csp, jssp, #0x10 (16)
0xffff58213940   256  stp fp, lr, [jssp, #-16]!
0xffff58213944   260  bl #+0x14 (addr 0xffff58213958)
0xffff58213948   264  movz x16, #0x8
0xffff5821394c   268  sub csp, jssp, #0x10 (16)
0xffff58213950   272  stp fp, lr, [jssp, #-16]!
0xffff58213954   276  bl #+0x4 (addr 0xffff58213958)
0xffff58213958   280  movz x17, #0xa00000000
0xffff5821395c   284  sub csp, jssp, #0x10 (16)
0xffff58213960   288  stp x17, cp, [jssp, #-16]!
0xffff58213964   292  add fp, jssp, #0x10 (16)
0xffff58213968   296  ldr x17, pc+24 (addr 0x0000ffff58213980)    ;; lazy deoptimization bailout 0
0xffff5821396c   300  add x17, x17, x16
0xffff58213970   304  br x17
0xffff58213974   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213978   312  d63f03e0       constant
0xffff5821397c   316  d503201f       constant
0xffff58213980   320  58006000       constant
0xffff58213984   324  0000ffff       constant


Safepoints (size = 21)
0xffff582138fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582138dc  code target (STUB)  (0xffff58206820)
0xffff582138f4  code target (STUB)  (0xffff58206260)
0xffff58213900  code target (STUB)  (0xffff582068e0)
0xffff58213914  constant pool (size 36)
0xffff58213968  runtime entry
0xffff58213974  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4537
type = NORMAL
name = BinaryOpICStub(MUL:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff58213840     0  mov x2, x0
0xffff58213844     4  tbnz w2, #0, #+0xf4 (addr 0xffff58213938)
0xffff58213848     8  tbz w1, #0, #+0x34 (addr 0xffff5821387c)
0xffff5821384c    12  ldur x16, [x1, #-1]
0xffff58213850    16  ldr x17, [x26, #120]
0xffff58213854    20  cmp x16, x17
0xffff58213858    24  b.ne #+0xc (addr 0xffff58213864)
0xffff5821385c    28  ldur d0, [x1, #7]
0xffff58213860    32  b #+0x20 (addr 0xffff58213880)
0xffff58213864    36  ldr x16, [x26, #40]
0xffff58213868    40  cmp x1, x16
0xffff5821386c    44  b.ne #+0xdc (addr 0xffff58213948)
0xffff58213870    48  ldr x3, [x26, #928]
0xffff58213874    52  ldur d0, [x3, #7]
0xffff58213878    56  b #+0x8 (addr 0xffff58213880)
0xffff5821387c    60  scvtf d0, x1, #32
0xffff58213880    64  scvtf d1, x2, #32
0xffff58213884    68  fmul d0, d0, d1
0xffff58213888    72  movz x1, #0x92c0
0xffff5821388c    76  movk x1, #0x16e7, lsl #16
0xffff58213890    80  ldp x2, x0, [x1]
0xffff58213894    84  adds x16, x2, #0x10 (16)
0xffff58213898    88  ccmp x16, x0, #nzCv, lo
0xffff5821389c    92  b.hi #+0x20 (addr 0xffff582138bc)
0xffff582138a0    96  str x16, [x1]
0xffff582138a4   100  ldr x1, [x26, #120]
0xffff582138a8   104  str x1, [x2]
0xffff582138ac   108  orr x2, x2, #0x1
0xffff582138b0   112  stur d0, [x2, #7]
0xffff582138b4   116  mov x0, x2
0xffff582138b8   120  ret
0xffff582138bc   124  sub csp, jssp, #0x10 (16)
0xffff582138c0   128  stp fp, lr, [jssp, #-16]!
0xffff582138c4   132  movz fp, #0xa00000000
0xffff582138c8   136  sub csp, jssp, #0x8 (8)
0xffff582138cc   140  str fp, [jssp, #-8]!
0xffff582138d0   144  add fp, jssp, #0x8 (8)
0xffff582138d4   148  movz x2, #0x0
0xffff582138d8   152  mov x16, lr
0xffff582138dc   156  ldr x17, pc+68 (addr 0x0000ffff58213920)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582138e0   160  blr x17
0xffff582138e4   164  ldur cp, [fp, #-8]
0xffff582138e8   168  movz x0, #0x0
0xffff582138ec   172  movz x1, #0x4b48
0xffff582138f0   176  movk x1, #0xe4, lsl #16
0xffff582138f4   180  ldr x16, pc+52 (addr 0x0000ffff58213928)    ;; code: STUB, CEntryStub, minor: 5
0xffff582138f8   184  blr x16
0xffff582138fc   188  str x0, [jssp, #16]
0xffff58213900   192  ldr x16, pc+48 (addr 0x0000ffff58213930)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58213904   196  blr x16
0xffff58213908   200  ldr lr, [jssp, #16]
0xffff5821390c   204  ldp xzr, fp, [jssp], #24
0xffff58213910   208  b #-0x60 (addr 0xffff582138b0)
0xffff58213914   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58213918   216  d63f03e0       constant
0xffff5821391c   220  d503201f       constant
0xffff58213920   224  58206820       constant
0xffff58213924   228  0000ffff       constant
0xffff58213928   232  58206260       constant
0xffff5821392c   236  0000ffff       constant
0xffff58213930   240  582068e0       constant
0xffff58213934   244  0000ffff       constant
0xffff58213938   248  movz x16, #0x0
0xffff5821393c   252  sub csp, jssp, #0x10 (16)
0xffff58213940   256  stp fp, lr, [jssp, #-16]!
0xffff58213944   260  bl #+0x14 (addr 0xffff58213958)
0xffff58213948   264  movz x16, #0x8
0xffff5821394c   268  sub csp, jssp, #0x10 (16)
0xffff58213950   272  stp fp, lr, [jssp, #-16]!
0xffff58213954   276  bl #+0x4 (addr 0xffff58213958)
0xffff58213958   280  movz x17, #0xa00000000
0xffff5821395c   284  sub csp, jssp, #0x10 (16)
0xffff58213960   288  stp x17, cp, [jssp, #-16]!
0xffff58213964   292  add fp, jssp, #0x10 (16)
0xffff58213968   296  ldr x17, pc+24 (addr 0x0000ffff58213980)    ;; lazy deoptimization bailout 0
0xffff5821396c   300  add x17, x17, x16
0xffff58213970   304  br x17
0xffff58213974   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213978   312  d63f03e0       constant
0xffff5821397c   316  d503201f       constant
0xffff58213980   320  58006000       constant
0xffff58213984   324  0000ffff       constant


Safepoints (size = 21)
0xffff582138fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582138dc  code target (STUB)  (0xffff58206820)
0xffff582138f4  code target (STUB)  (0xffff58206260)
0xffff58213900  code target (STUB)  (0xffff582068e0)
0xffff58213914  constant pool (size 36)
0xffff58213968  runtime entry
0xffff58213974  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6585
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff58213a00     0  tbz w1, #0, #+0x34 (addr 0xffff58213a34)
0xffff58213a04     4  ldur x16, [x1, #-1]
0xffff58213a08     8  ldr x17, [x26, #120]
0xffff58213a0c    12  cmp x16, x17
0xffff58213a10    16  b.ne #+0xc (addr 0xffff58213a1c)
0xffff58213a14    20  ldur d0, [x1, #7]
0xffff58213a18    24  b #+0x20 (addr 0xffff58213a38)
0xffff58213a1c    28  ldr x16, [x26, #40]
0xffff58213a20    32  cmp x1, x16
0xffff58213a24    36  b.ne #+0xfc (addr 0xffff58213b20)
0xffff58213a28    40  ldr x2, [x26, #928]
0xffff58213a2c    44  ldur d0, [x2, #7]
0xffff58213a30    48  b #+0x8 (addr 0xffff58213a38)
0xffff58213a34    52  scvtf d0, x1, #32
0xffff58213a38    56  tbz w0, #0, #+0x34 (addr 0xffff58213a6c)
0xffff58213a3c    60  ldur x16, [x0, #-1]
0xffff58213a40    64  ldr x17, [x26, #120]
0xffff58213a44    68  cmp x16, x17
0xffff58213a48    72  b.ne #+0xc (addr 0xffff58213a54)
0xffff58213a4c    76  ldur d1, [x0, #7]
0xffff58213a50    80  b #+0x20 (addr 0xffff58213a70)
0xffff58213a54    84  ldr x16, [x26, #40]
0xffff58213a58    88  cmp x0, x16
0xffff58213a5c    92  b.ne #+0xd4 (addr 0xffff58213b30)
0xffff58213a60    96  ldr x2, [x26, #928]
0xffff58213a64   100  ldur d1, [x2, #7]
0xffff58213a68   104  b #+0x8 (addr 0xffff58213a70)
0xffff58213a6c   108  scvtf d1, x0, #32
0xffff58213a70   112  fmul d0, d0, d1
0xffff58213a74   116  movz x1, #0x92c0
0xffff58213a78   120  movk x1, #0x16e7, lsl #16
0xffff58213a7c   124  ldp x2, x0, [x1]
0xffff58213a80   128  adds x16, x2, #0x10 (16)
0xffff58213a84   132  ccmp x16, x0, #nzCv, lo
0xffff58213a88   136  b.hi #+0x20 (addr 0xffff58213aa8)
0xffff58213a8c   140  str x16, [x1]
0xffff58213a90   144  ldr x1, [x26, #120]
0xffff58213a94   148  str x1, [x2]
0xffff58213a98   152  orr x2, x2, #0x1
0xffff58213a9c   156  stur d0, [x2, #7]
0xffff58213aa0   160  mov x0, x2
0xffff58213aa4   164  ret
0xffff58213aa8   168  sub csp, jssp, #0x10 (16)
0xffff58213aac   172  stp fp, lr, [jssp, #-16]!
0xffff58213ab0   176  movz fp, #0xa00000000
0xffff58213ab4   180  sub csp, jssp, #0x8 (8)
0xffff58213ab8   184  str fp, [jssp, #-8]!
0xffff58213abc   188  add fp, jssp, #0x8 (8)
0xffff58213ac0   192  movz x2, #0x0
0xffff58213ac4   196  mov x16, lr
0xffff58213ac8   200  ldr x17, pc+64 (addr 0x0000ffff58213b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58213acc   204  blr x17
0xffff58213ad0   208  ldur cp, [fp, #-8]
0xffff58213ad4   212  movz x0, #0x0
0xffff58213ad8   216  movz x1, #0x4b48
0xffff58213adc   220  movk x1, #0xe4, lsl #16
0xffff58213ae0   224  ldr x16, pc+48 (addr 0x0000ffff58213b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff58213ae4   228  blr x16
0xffff58213ae8   232  str x0, [jssp, #16]
0xffff58213aec   236  ldr x16, pc+44 (addr 0x0000ffff58213b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58213af0   240  blr x16
0xffff58213af4   244  ldr lr, [jssp, #16]
0xffff58213af8   248  ldp xzr, fp, [jssp], #24
0xffff58213afc   252  b #-0x60 (addr 0xffff58213a9c)
0xffff58213b00   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58213b04   260  d63f03e0       constant
0xffff58213b08   264  58206820       constant
0xffff58213b0c   268  0000ffff       constant
0xffff58213b10   272  58206260       constant
0xffff58213b14   276  0000ffff       constant
0xffff58213b18   280  582068e0       constant
0xffff58213b1c   284  0000ffff       constant
0xffff58213b20   288  movz x16, #0x0
0xffff58213b24   292  sub csp, jssp, #0x10 (16)
0xffff58213b28   296  stp fp, lr, [jssp, #-16]!
0xffff58213b2c   300  bl #+0x14 (addr 0xffff58213b40)
0xffff58213b30   304  movz x16, #0x8
0xffff58213b34   308  sub csp, jssp, #0x10 (16)
0xffff58213b38   312  stp fp, lr, [jssp, #-16]!
0xffff58213b3c   316  bl #+0x4 (addr 0xffff58213b40)
0xffff58213b40   320  movz x17, #0xa00000000
0xffff58213b44   324  sub csp, jssp, #0x10 (16)
0xffff58213b48   328  stp x17, cp, [jssp, #-16]!
0xffff58213b4c   332  add fp, jssp, #0x10 (16)
0xffff58213b50   336  ldr x17, pc+24 (addr 0x0000ffff58213b68)    ;; lazy deoptimization bailout 0
0xffff58213b54   340  add x17, x17, x16
0xffff58213b58   344  br x17
0xffff58213b5c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213b60   352  d63f03e0       constant
0xffff58213b64   356  d503201f       constant
0xffff58213b68   360  58006000       constant
0xffff58213b6c   364  0000ffff       constant


Safepoints (size = 21)
0xffff58213ae8   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58213ac8  code target (STUB)  (0xffff58206820)
0xffff58213ae0  code target (STUB)  (0xffff58206260)
0xffff58213aec  code target (STUB)  (0xffff582068e0)
0xffff58213b00  constant pool (size 32)
0xffff58213b50  runtime entry
0xffff58213b5c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6585
type = NORMAL
name = BinaryOpICStub(MUL:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff58213a00     0  tbz w1, #0, #+0x34 (addr 0xffff58213a34)
0xffff58213a04     4  ldur x16, [x1, #-1]
0xffff58213a08     8  ldr x17, [x26, #120]
0xffff58213a0c    12  cmp x16, x17
0xffff58213a10    16  b.ne #+0xc (addr 0xffff58213a1c)
0xffff58213a14    20  ldur d0, [x1, #7]
0xffff58213a18    24  b #+0x20 (addr 0xffff58213a38)
0xffff58213a1c    28  ldr x16, [x26, #40]
0xffff58213a20    32  cmp x1, x16
0xffff58213a24    36  b.ne #+0xfc (addr 0xffff58213b20)
0xffff58213a28    40  ldr x2, [x26, #928]
0xffff58213a2c    44  ldur d0, [x2, #7]
0xffff58213a30    48  b #+0x8 (addr 0xffff58213a38)
0xffff58213a34    52  scvtf d0, x1, #32
0xffff58213a38    56  tbz w0, #0, #+0x34 (addr 0xffff58213a6c)
0xffff58213a3c    60  ldur x16, [x0, #-1]
0xffff58213a40    64  ldr x17, [x26, #120]
0xffff58213a44    68  cmp x16, x17
0xffff58213a48    72  b.ne #+0xc (addr 0xffff58213a54)
0xffff58213a4c    76  ldur d1, [x0, #7]
0xffff58213a50    80  b #+0x20 (addr 0xffff58213a70)
0xffff58213a54    84  ldr x16, [x26, #40]
0xffff58213a58    88  cmp x0, x16
0xffff58213a5c    92  b.ne #+0xd4 (addr 0xffff58213b30)
0xffff58213a60    96  ldr x2, [x26, #928]
0xffff58213a64   100  ldur d1, [x2, #7]
0xffff58213a68   104  b #+0x8 (addr 0xffff58213a70)
0xffff58213a6c   108  scvtf d1, x0, #32
0xffff58213a70   112  fmul d0, d0, d1
0xffff58213a74   116  movz x1, #0x92c0
0xffff58213a78   120  movk x1, #0x16e7, lsl #16
0xffff58213a7c   124  ldp x2, x0, [x1]
0xffff58213a80   128  adds x16, x2, #0x10 (16)
0xffff58213a84   132  ccmp x16, x0, #nzCv, lo
0xffff58213a88   136  b.hi #+0x20 (addr 0xffff58213aa8)
0xffff58213a8c   140  str x16, [x1]
0xffff58213a90   144  ldr x1, [x26, #120]
0xffff58213a94   148  str x1, [x2]
0xffff58213a98   152  orr x2, x2, #0x1
0xffff58213a9c   156  stur d0, [x2, #7]
0xffff58213aa0   160  mov x0, x2
0xffff58213aa4   164  ret
0xffff58213aa8   168  sub csp, jssp, #0x10 (16)
0xffff58213aac   172  stp fp, lr, [jssp, #-16]!
0xffff58213ab0   176  movz fp, #0xa00000000
0xffff58213ab4   180  sub csp, jssp, #0x8 (8)
0xffff58213ab8   184  str fp, [jssp, #-8]!
0xffff58213abc   188  add fp, jssp, #0x8 (8)
0xffff58213ac0   192  movz x2, #0x0
0xffff58213ac4   196  mov x16, lr
0xffff58213ac8   200  ldr x17, pc+64 (addr 0x0000ffff58213b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58213acc   204  blr x17
0xffff58213ad0   208  ldur cp, [fp, #-8]
0xffff58213ad4   212  movz x0, #0x0
0xffff58213ad8   216  movz x1, #0x4b48
0xffff58213adc   220  movk x1, #0xe4, lsl #16
0xffff58213ae0   224  ldr x16, pc+48 (addr 0x0000ffff58213b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff58213ae4   228  blr x16
0xffff58213ae8   232  str x0, [jssp, #16]
0xffff58213aec   236  ldr x16, pc+44 (addr 0x0000ffff58213b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58213af0   240  blr x16
0xffff58213af4   244  ldr lr, [jssp, #16]
0xffff58213af8   248  ldp xzr, fp, [jssp], #24
0xffff58213afc   252  b #-0x60 (addr 0xffff58213a9c)
0xffff58213b00   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58213b04   260  d63f03e0       constant
0xffff58213b08   264  58206820       constant
0xffff58213b0c   268  0000ffff       constant
0xffff58213b10   272  58206260       constant
0xffff58213b14   276  0000ffff       constant
0xffff58213b18   280  582068e0       constant
0xffff58213b1c   284  0000ffff       constant
0xffff58213b20   288  movz x16, #0x0
0xffff58213b24   292  sub csp, jssp, #0x10 (16)
0xffff58213b28   296  stp fp, lr, [jssp, #-16]!
0xffff58213b2c   300  bl #+0x14 (addr 0xffff58213b40)
0xffff58213b30   304  movz x16, #0x8
0xffff58213b34   308  sub csp, jssp, #0x10 (16)
0xffff58213b38   312  stp fp, lr, [jssp, #-16]!
0xffff58213b3c   316  bl #+0x4 (addr 0xffff58213b40)
0xffff58213b40   320  movz x17, #0xa00000000
0xffff58213b44   324  sub csp, jssp, #0x10 (16)
0xffff58213b48   328  stp x17, cp, [jssp, #-16]!
0xffff58213b4c   332  add fp, jssp, #0x10 (16)
0xffff58213b50   336  ldr x17, pc+24 (addr 0x0000ffff58213b68)    ;; lazy deoptimization bailout 0
0xffff58213b54   340  add x17, x17, x16
0xffff58213b58   344  br x17
0xffff58213b5c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213b60   352  d63f03e0       constant
0xffff58213b64   356  d503201f       constant
0xffff58213b68   360  58006000       constant
0xffff58213b6c   364  0000ffff       constant


Safepoints (size = 21)
0xffff58213ae8   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58213ac8  code target (STUB)  (0xffff58206820)
0xffff58213ae0  code target (STUB)  (0xffff58206260)
0xffff58213aec  code target (STUB)  (0xffff582068e0)
0xffff58213b00  constant pool (size 32)
0xffff58213b50  runtime entry
0xffff58213b5c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2489
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff58213c00     0  mov x2, x0
0xffff58213c04     4  tbnz w2, #0, #+0xf4 (addr 0xffff58213cf8)
0xffff58213c08     8  tbz w1, #0, #+0x34 (addr 0xffff58213c3c)
0xffff58213c0c    12  ldur x16, [x1, #-1]
0xffff58213c10    16  ldr x17, [x26, #120]
0xffff58213c14    20  cmp x16, x17
0xffff58213c18    24  b.ne #+0xc (addr 0xffff58213c24)
0xffff58213c1c    28  ldur d0, [x1, #7]
0xffff58213c20    32  b #+0x20 (addr 0xffff58213c40)
0xffff58213c24    36  ldr x16, [x26, #40]
0xffff58213c28    40  cmp x1, x16
0xffff58213c2c    44  b.ne #+0xdc (addr 0xffff58213d08)
0xffff58213c30    48  ldr x3, [x26, #928]
0xffff58213c34    52  ldur d0, [x3, #7]
0xffff58213c38    56  b #+0x8 (addr 0xffff58213c40)
0xffff58213c3c    60  scvtf d0, x1, #32
0xffff58213c40    64  scvtf d1, x2, #32
0xffff58213c44    68  fmul d0, d0, d1
0xffff58213c48    72  movz x1, #0x92c0
0xffff58213c4c    76  movk x1, #0x16e7, lsl #16
0xffff58213c50    80  ldp x2, x0, [x1]
0xffff58213c54    84  adds x16, x2, #0x10 (16)
0xffff58213c58    88  ccmp x16, x0, #nzCv, lo
0xffff58213c5c    92  b.hi #+0x20 (addr 0xffff58213c7c)
0xffff58213c60    96  str x16, [x1]
0xffff58213c64   100  ldr x1, [x26, #120]
0xffff58213c68   104  str x1, [x2]
0xffff58213c6c   108  orr x2, x2, #0x1
0xffff58213c70   112  stur d0, [x2, #7]
0xffff58213c74   116  mov x0, x2
0xffff58213c78   120  ret
0xffff58213c7c   124  sub csp, jssp, #0x10 (16)
0xffff58213c80   128  stp fp, lr, [jssp, #-16]!
0xffff58213c84   132  movz fp, #0xa00000000
0xffff58213c88   136  sub csp, jssp, #0x8 (8)
0xffff58213c8c   140  str fp, [jssp, #-8]!
0xffff58213c90   144  add fp, jssp, #0x8 (8)
0xffff58213c94   148  movz x2, #0x0
0xffff58213c98   152  mov x16, lr
0xffff58213c9c   156  ldr x17, pc+68 (addr 0x0000ffff58213ce0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58213ca0   160  blr x17
0xffff58213ca4   164  ldur cp, [fp, #-8]
0xffff58213ca8   168  movz x0, #0x0
0xffff58213cac   172  movz x1, #0x4b48
0xffff58213cb0   176  movk x1, #0xe4, lsl #16
0xffff58213cb4   180  ldr x16, pc+52 (addr 0x0000ffff58213ce8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58213cb8   184  blr x16
0xffff58213cbc   188  str x0, [jssp, #16]
0xffff58213cc0   192  ldr x16, pc+48 (addr 0x0000ffff58213cf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58213cc4   196  blr x16
0xffff58213cc8   200  ldr lr, [jssp, #16]
0xffff58213ccc   204  ldp xzr, fp, [jssp], #24
0xffff58213cd0   208  b #-0x60 (addr 0xffff58213c70)
0xffff58213cd4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58213cd8   216  d63f03e0       constant
0xffff58213cdc   220  d503201f       constant
0xffff58213ce0   224  58206820       constant
0xffff58213ce4   228  0000ffff       constant
0xffff58213ce8   232  58206260       constant
0xffff58213cec   236  0000ffff       constant
0xffff58213cf0   240  582068e0       constant
0xffff58213cf4   244  0000ffff       constant
0xffff58213cf8   248  movz x16, #0x0
0xffff58213cfc   252  sub csp, jssp, #0x10 (16)
0xffff58213d00   256  stp fp, lr, [jssp, #-16]!
0xffff58213d04   260  bl #+0x14 (addr 0xffff58213d18)
0xffff58213d08   264  movz x16, #0x8
0xffff58213d0c   268  sub csp, jssp, #0x10 (16)
0xffff58213d10   272  stp fp, lr, [jssp, #-16]!
0xffff58213d14   276  bl #+0x4 (addr 0xffff58213d18)
0xffff58213d18   280  movz x17, #0xa00000000
0xffff58213d1c   284  sub csp, jssp, #0x10 (16)
0xffff58213d20   288  stp x17, cp, [jssp, #-16]!
0xffff58213d24   292  add fp, jssp, #0x10 (16)
0xffff58213d28   296  ldr x17, pc+24 (addr 0x0000ffff58213d40)    ;; lazy deoptimization bailout 0
0xffff58213d2c   300  add x17, x17, x16
0xffff58213d30   304  br x17
0xffff58213d34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213d38   312  d63f03e0       constant
0xffff58213d3c   316  d503201f       constant
0xffff58213d40   320  58006000       constant
0xffff58213d44   324  0000ffff       constant


Safepoints (size = 21)
0xffff58213cbc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58213c9c  code target (STUB)  (0xffff58206820)
0xffff58213cb4  code target (STUB)  (0xffff58206260)
0xffff58213cc0  code target (STUB)  (0xffff582068e0)
0xffff58213cd4  constant pool (size 36)
0xffff58213d28  runtime entry
0xffff58213d34  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2489
type = NORMAL
name = BinaryOpICStub(MUL:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff58213c00     0  mov x2, x0
0xffff58213c04     4  tbnz w2, #0, #+0xf4 (addr 0xffff58213cf8)
0xffff58213c08     8  tbz w1, #0, #+0x34 (addr 0xffff58213c3c)
0xffff58213c0c    12  ldur x16, [x1, #-1]
0xffff58213c10    16  ldr x17, [x26, #120]
0xffff58213c14    20  cmp x16, x17
0xffff58213c18    24  b.ne #+0xc (addr 0xffff58213c24)
0xffff58213c1c    28  ldur d0, [x1, #7]
0xffff58213c20    32  b #+0x20 (addr 0xffff58213c40)
0xffff58213c24    36  ldr x16, [x26, #40]
0xffff58213c28    40  cmp x1, x16
0xffff58213c2c    44  b.ne #+0xdc (addr 0xffff58213d08)
0xffff58213c30    48  ldr x3, [x26, #928]
0xffff58213c34    52  ldur d0, [x3, #7]
0xffff58213c38    56  b #+0x8 (addr 0xffff58213c40)
0xffff58213c3c    60  scvtf d0, x1, #32
0xffff58213c40    64  scvtf d1, x2, #32
0xffff58213c44    68  fmul d0, d0, d1
0xffff58213c48    72  movz x1, #0x92c0
0xffff58213c4c    76  movk x1, #0x16e7, lsl #16
0xffff58213c50    80  ldp x2, x0, [x1]
0xffff58213c54    84  adds x16, x2, #0x10 (16)
0xffff58213c58    88  ccmp x16, x0, #nzCv, lo
0xffff58213c5c    92  b.hi #+0x20 (addr 0xffff58213c7c)
0xffff58213c60    96  str x16, [x1]
0xffff58213c64   100  ldr x1, [x26, #120]
0xffff58213c68   104  str x1, [x2]
0xffff58213c6c   108  orr x2, x2, #0x1
0xffff58213c70   112  stur d0, [x2, #7]
0xffff58213c74   116  mov x0, x2
0xffff58213c78   120  ret
0xffff58213c7c   124  sub csp, jssp, #0x10 (16)
0xffff58213c80   128  stp fp, lr, [jssp, #-16]!
0xffff58213c84   132  movz fp, #0xa00000000
0xffff58213c88   136  sub csp, jssp, #0x8 (8)
0xffff58213c8c   140  str fp, [jssp, #-8]!
0xffff58213c90   144  add fp, jssp, #0x8 (8)
0xffff58213c94   148  movz x2, #0x0
0xffff58213c98   152  mov x16, lr
0xffff58213c9c   156  ldr x17, pc+68 (addr 0x0000ffff58213ce0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58213ca0   160  blr x17
0xffff58213ca4   164  ldur cp, [fp, #-8]
0xffff58213ca8   168  movz x0, #0x0
0xffff58213cac   172  movz x1, #0x4b48
0xffff58213cb0   176  movk x1, #0xe4, lsl #16
0xffff58213cb4   180  ldr x16, pc+52 (addr 0x0000ffff58213ce8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58213cb8   184  blr x16
0xffff58213cbc   188  str x0, [jssp, #16]
0xffff58213cc0   192  ldr x16, pc+48 (addr 0x0000ffff58213cf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58213cc4   196  blr x16
0xffff58213cc8   200  ldr lr, [jssp, #16]
0xffff58213ccc   204  ldp xzr, fp, [jssp], #24
0xffff58213cd0   208  b #-0x60 (addr 0xffff58213c70)
0xffff58213cd4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58213cd8   216  d63f03e0       constant
0xffff58213cdc   220  d503201f       constant
0xffff58213ce0   224  58206820       constant
0xffff58213ce4   228  0000ffff       constant
0xffff58213ce8   232  58206260       constant
0xffff58213cec   236  0000ffff       constant
0xffff58213cf0   240  582068e0       constant
0xffff58213cf4   244  0000ffff       constant
0xffff58213cf8   248  movz x16, #0x0
0xffff58213cfc   252  sub csp, jssp, #0x10 (16)
0xffff58213d00   256  stp fp, lr, [jssp, #-16]!
0xffff58213d04   260  bl #+0x14 (addr 0xffff58213d18)
0xffff58213d08   264  movz x16, #0x8
0xffff58213d0c   268  sub csp, jssp, #0x10 (16)
0xffff58213d10   272  stp fp, lr, [jssp, #-16]!
0xffff58213d14   276  bl #+0x4 (addr 0xffff58213d18)
0xffff58213d18   280  movz x17, #0xa00000000
0xffff58213d1c   284  sub csp, jssp, #0x10 (16)
0xffff58213d20   288  stp x17, cp, [jssp, #-16]!
0xffff58213d24   292  add fp, jssp, #0x10 (16)
0xffff58213d28   296  ldr x17, pc+24 (addr 0x0000ffff58213d40)    ;; lazy deoptimization bailout 0
0xffff58213d2c   300  add x17, x17, x16
0xffff58213d30   304  br x17
0xffff58213d34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213d38   312  d63f03e0       constant
0xffff58213d3c   316  d503201f       constant
0xffff58213d40   320  58006000       constant
0xffff58213d44   324  0000ffff       constant


Safepoints (size = 21)
0xffff58213cbc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58213c9c  code target (STUB)  (0xffff58206820)
0xffff58213cb4  code target (STUB)  (0xffff58206260)
0xffff58213cc0  code target (STUB)  (0xffff582068e0)
0xffff58213cd4  constant pool (size 36)
0xffff58213d28  runtime entry
0xffff58213d34  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4265
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff58213dc0     0  mov x2, x1
0xffff58213dc4     4  tbnz w2, #0, #+0x34 (addr 0xffff58213df8)
0xffff58213dc8     8  mov x3, x0
0xffff58213dcc    12  tbnz w3, #0, #+0x3c (addr 0xffff58213e08)
0xffff58213dd0    16  cmp x3, #0x0 (0)
0xffff58213dd4    20  ccmp x2, #0, #nZcv, ne
0xffff58213dd8    24  ccmn x3, x2, #nzcv, eq
0xffff58213ddc    28  b.mi #+0x3c (addr 0xffff58213e18)
0xffff58213de0    32  smulh x2, x3, x2
0xffff58213de4    36  cmp x2, w2, sxtw
0xffff58213de8    40  lsl x2, x2, #32
0xffff58213dec    44  b.ne #+0x2c (addr 0xffff58213e18)
0xffff58213df0    48  mov x0, x2
0xffff58213df4    52  ret
0xffff58213df8    56  movz x16, #0x0
0xffff58213dfc    60  sub csp, jssp, #0x10 (16)
0xffff58213e00    64  stp fp, lr, [jssp, #-16]!
0xffff58213e04    68  bl #+0x24 (addr 0xffff58213e28)
0xffff58213e08    72  movz x16, #0x8
0xffff58213e0c    76  sub csp, jssp, #0x10 (16)
0xffff58213e10    80  stp fp, lr, [jssp, #-16]!
0xffff58213e14    84  bl #+0x14 (addr 0xffff58213e28)
0xffff58213e18    88  movz x16, #0x10
0xffff58213e1c    92  sub csp, jssp, #0x10 (16)
0xffff58213e20    96  stp fp, lr, [jssp, #-16]!
0xffff58213e24   100  bl #+0x4 (addr 0xffff58213e28)
0xffff58213e28   104  movz x17, #0xa00000000
0xffff58213e2c   108  sub csp, jssp, #0x10 (16)
0xffff58213e30   112  stp x17, cp, [jssp, #-16]!
0xffff58213e34   116  add fp, jssp, #0x10 (16)
0xffff58213e38   120  ldr x17, pc+24 (addr 0x0000ffff58213e50)    ;; lazy deoptimization bailout 0
0xffff58213e3c   124  add x17, x17, x16
0xffff58213e40   128  br x17
0xffff58213e44   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213e48   136  d63f03e0       constant
0xffff58213e4c   140  d503201f       constant
0xffff58213e50   144  58006000       constant
0xffff58213e54   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58213e38  runtime entry
0xffff58213e44  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4265
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff58213dc0     0  mov x2, x1
0xffff58213dc4     4  tbnz w2, #0, #+0x34 (addr 0xffff58213df8)
0xffff58213dc8     8  mov x3, x0
0xffff58213dcc    12  tbnz w3, #0, #+0x3c (addr 0xffff58213e08)
0xffff58213dd0    16  cmp x3, #0x0 (0)
0xffff58213dd4    20  ccmp x2, #0, #nZcv, ne
0xffff58213dd8    24  ccmn x3, x2, #nzcv, eq
0xffff58213ddc    28  b.mi #+0x3c (addr 0xffff58213e18)
0xffff58213de0    32  smulh x2, x3, x2
0xffff58213de4    36  cmp x2, w2, sxtw
0xffff58213de8    40  lsl x2, x2, #32
0xffff58213dec    44  b.ne #+0x2c (addr 0xffff58213e18)
0xffff58213df0    48  mov x0, x2
0xffff58213df4    52  ret
0xffff58213df8    56  movz x16, #0x0
0xffff58213dfc    60  sub csp, jssp, #0x10 (16)
0xffff58213e00    64  stp fp, lr, [jssp, #-16]!
0xffff58213e04    68  bl #+0x24 (addr 0xffff58213e28)
0xffff58213e08    72  movz x16, #0x8
0xffff58213e0c    76  sub csp, jssp, #0x10 (16)
0xffff58213e10    80  stp fp, lr, [jssp, #-16]!
0xffff58213e14    84  bl #+0x14 (addr 0xffff58213e28)
0xffff58213e18    88  movz x16, #0x10
0xffff58213e1c    92  sub csp, jssp, #0x10 (16)
0xffff58213e20    96  stp fp, lr, [jssp, #-16]!
0xffff58213e24   100  bl #+0x4 (addr 0xffff58213e28)
0xffff58213e28   104  movz x17, #0xa00000000
0xffff58213e2c   108  sub csp, jssp, #0x10 (16)
0xffff58213e30   112  stp x17, cp, [jssp, #-16]!
0xffff58213e34   116  add fp, jssp, #0x10 (16)
0xffff58213e38   120  ldr x17, pc+24 (addr 0x0000ffff58213e50)    ;; lazy deoptimization bailout 0
0xffff58213e3c   124  add x17, x17, x16
0xffff58213e40   128  br x17
0xffff58213e44   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213e48   136  d63f03e0       constant
0xffff58213e4c   140  d503201f       constant
0xffff58213e50   144  58006000       constant
0xffff58213e54   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58213e38  runtime entry
0xffff58213e44  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4281
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff58213ec0     0  mov x2, x1
0xffff58213ec4     4  tbnz w2, #0, #+0xc4 (addr 0xffff58213f88)
0xffff58213ec8     8  mov x3, x0
0xffff58213ecc    12  tbnz w3, #0, #+0xcc (addr 0xffff58213f98)
0xffff58213ed0    16  scvtf d0, x2, #32
0xffff58213ed4    20  scvtf d1, x3, #32
0xffff58213ed8    24  fmul d0, d0, d1
0xffff58213edc    28  movz x1, #0x92c0
0xffff58213ee0    32  movk x1, #0x16e7, lsl #16
0xffff58213ee4    36  ldp x2, x0, [x1]
0xffff58213ee8    40  adds x16, x2, #0x10 (16)
0xffff58213eec    44  ccmp x16, x0, #nzCv, lo
0xffff58213ef0    48  b.hi #+0x20 (addr 0xffff58213f10)
0xffff58213ef4    52  str x16, [x1]
0xffff58213ef8    56  ldr x1, [x26, #120]
0xffff58213efc    60  str x1, [x2]
0xffff58213f00    64  orr x2, x2, #0x1
0xffff58213f04    68  stur d0, [x2, #7]
0xffff58213f08    72  mov x0, x2
0xffff58213f0c    76  ret
0xffff58213f10    80  sub csp, jssp, #0x10 (16)
0xffff58213f14    84  stp fp, lr, [jssp, #-16]!
0xffff58213f18    88  movz fp, #0xa00000000
0xffff58213f1c    92  sub csp, jssp, #0x8 (8)
0xffff58213f20    96  str fp, [jssp, #-8]!
0xffff58213f24   100  add fp, jssp, #0x8 (8)
0xffff58213f28   104  movz x2, #0x0
0xffff58213f2c   108  mov x16, lr
0xffff58213f30   112  ldr x17, pc+64 (addr 0x0000ffff58213f70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58213f34   116  blr x17
0xffff58213f38   120  ldur cp, [fp, #-8]
0xffff58213f3c   124  movz x0, #0x0
0xffff58213f40   128  movz x1, #0x4b48
0xffff58213f44   132  movk x1, #0xe4, lsl #16
0xffff58213f48   136  ldr x16, pc+48 (addr 0x0000ffff58213f78)    ;; code: STUB, CEntryStub, minor: 5
0xffff58213f4c   140  blr x16
0xffff58213f50   144  str x0, [jssp, #16]
0xffff58213f54   148  ldr x16, pc+44 (addr 0x0000ffff58213f80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58213f58   152  blr x16
0xffff58213f5c   156  ldr lr, [jssp, #16]
0xffff58213f60   160  ldp xzr, fp, [jssp], #24
0xffff58213f64   164  b #-0x60 (addr 0xffff58213f04)
0xffff58213f68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58213f6c   172  d63f03e0       constant
0xffff58213f70   176  58206820       constant
0xffff58213f74   180  0000ffff       constant
0xffff58213f78   184  58206260       constant
0xffff58213f7c   188  0000ffff       constant
0xffff58213f80   192  582068e0       constant
0xffff58213f84   196  0000ffff       constant
0xffff58213f88   200  movz x16, #0x0
0xffff58213f8c   204  sub csp, jssp, #0x10 (16)
0xffff58213f90   208  stp fp, lr, [jssp, #-16]!
0xffff58213f94   212  bl #+0x14 (addr 0xffff58213fa8)
0xffff58213f98   216  movz x16, #0x8
0xffff58213f9c   220  sub csp, jssp, #0x10 (16)
0xffff58213fa0   224  stp fp, lr, [jssp, #-16]!
0xffff58213fa4   228  bl #+0x4 (addr 0xffff58213fa8)
0xffff58213fa8   232  movz x17, #0xa00000000
0xffff58213fac   236  sub csp, jssp, #0x10 (16)
0xffff58213fb0   240  stp x17, cp, [jssp, #-16]!
0xffff58213fb4   244  add fp, jssp, #0x10 (16)
0xffff58213fb8   248  ldr x17, pc+24 (addr 0x0000ffff58213fd0)    ;; lazy deoptimization bailout 0
0xffff58213fbc   252  add x17, x17, x16
0xffff58213fc0   256  br x17
0xffff58213fc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213fc8   264  d63f03e0       constant
0xffff58213fcc   268  d503201f       constant
0xffff58213fd0   272  58006000       constant
0xffff58213fd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff58213f50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58213f30  code target (STUB)  (0xffff58206820)
0xffff58213f48  code target (STUB)  (0xffff58206260)
0xffff58213f54  code target (STUB)  (0xffff582068e0)
0xffff58213f68  constant pool (size 32)
0xffff58213fb8  runtime entry
0xffff58213fc4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4281
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff58213ec0     0  mov x2, x1
0xffff58213ec4     4  tbnz w2, #0, #+0xc4 (addr 0xffff58213f88)
0xffff58213ec8     8  mov x3, x0
0xffff58213ecc    12  tbnz w3, #0, #+0xcc (addr 0xffff58213f98)
0xffff58213ed0    16  scvtf d0, x2, #32
0xffff58213ed4    20  scvtf d1, x3, #32
0xffff58213ed8    24  fmul d0, d0, d1
0xffff58213edc    28  movz x1, #0x92c0
0xffff58213ee0    32  movk x1, #0x16e7, lsl #16
0xffff58213ee4    36  ldp x2, x0, [x1]
0xffff58213ee8    40  adds x16, x2, #0x10 (16)
0xffff58213eec    44  ccmp x16, x0, #nzCv, lo
0xffff58213ef0    48  b.hi #+0x20 (addr 0xffff58213f10)
0xffff58213ef4    52  str x16, [x1]
0xffff58213ef8    56  ldr x1, [x26, #120]
0xffff58213efc    60  str x1, [x2]
0xffff58213f00    64  orr x2, x2, #0x1
0xffff58213f04    68  stur d0, [x2, #7]
0xffff58213f08    72  mov x0, x2
0xffff58213f0c    76  ret
0xffff58213f10    80  sub csp, jssp, #0x10 (16)
0xffff58213f14    84  stp fp, lr, [jssp, #-16]!
0xffff58213f18    88  movz fp, #0xa00000000
0xffff58213f1c    92  sub csp, jssp, #0x8 (8)
0xffff58213f20    96  str fp, [jssp, #-8]!
0xffff58213f24   100  add fp, jssp, #0x8 (8)
0xffff58213f28   104  movz x2, #0x0
0xffff58213f2c   108  mov x16, lr
0xffff58213f30   112  ldr x17, pc+64 (addr 0x0000ffff58213f70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58213f34   116  blr x17
0xffff58213f38   120  ldur cp, [fp, #-8]
0xffff58213f3c   124  movz x0, #0x0
0xffff58213f40   128  movz x1, #0x4b48
0xffff58213f44   132  movk x1, #0xe4, lsl #16
0xffff58213f48   136  ldr x16, pc+48 (addr 0x0000ffff58213f78)    ;; code: STUB, CEntryStub, minor: 5
0xffff58213f4c   140  blr x16
0xffff58213f50   144  str x0, [jssp, #16]
0xffff58213f54   148  ldr x16, pc+44 (addr 0x0000ffff58213f80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58213f58   152  blr x16
0xffff58213f5c   156  ldr lr, [jssp, #16]
0xffff58213f60   160  ldp xzr, fp, [jssp], #24
0xffff58213f64   164  b #-0x60 (addr 0xffff58213f04)
0xffff58213f68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58213f6c   172  d63f03e0       constant
0xffff58213f70   176  58206820       constant
0xffff58213f74   180  0000ffff       constant
0xffff58213f78   184  58206260       constant
0xffff58213f7c   188  0000ffff       constant
0xffff58213f80   192  582068e0       constant
0xffff58213f84   196  0000ffff       constant
0xffff58213f88   200  movz x16, #0x0
0xffff58213f8c   204  sub csp, jssp, #0x10 (16)
0xffff58213f90   208  stp fp, lr, [jssp, #-16]!
0xffff58213f94   212  bl #+0x14 (addr 0xffff58213fa8)
0xffff58213f98   216  movz x16, #0x8
0xffff58213f9c   220  sub csp, jssp, #0x10 (16)
0xffff58213fa0   224  stp fp, lr, [jssp, #-16]!
0xffff58213fa4   228  bl #+0x4 (addr 0xffff58213fa8)
0xffff58213fa8   232  movz x17, #0xa00000000
0xffff58213fac   236  sub csp, jssp, #0x10 (16)
0xffff58213fb0   240  stp x17, cp, [jssp, #-16]!
0xffff58213fb4   244  add fp, jssp, #0x10 (16)
0xffff58213fb8   248  ldr x17, pc+24 (addr 0x0000ffff58213fd0)    ;; lazy deoptimization bailout 0
0xffff58213fbc   252  add x17, x17, x16
0xffff58213fc0   256  br x17
0xffff58213fc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58213fc8   264  d63f03e0       constant
0xffff58213fcc   268  d503201f       constant
0xffff58213fd0   272  58006000       constant
0xffff58213fd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff58213f50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58213f30  code target (STUB)  (0xffff58206820)
0xffff58213f48  code target (STUB)  (0xffff58206260)
0xffff58213f54  code target (STUB)  (0xffff582068e0)
0xffff58213f68  constant pool (size 32)
0xffff58213fb8  runtime entry
0xffff58213fc4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6329
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff58214060     0  mov x2, x1
0xffff58214064     4  tbnz w2, #0, #+0xf4 (addr 0xffff58214158)
0xffff58214068     8  tbz w0, #0, #+0x34 (addr 0xffff5821409c)
0xffff5821406c    12  ldur x16, [x0, #-1]
0xffff58214070    16  ldr x17, [x26, #120]
0xffff58214074    20  cmp x16, x17
0xffff58214078    24  b.ne #+0xc (addr 0xffff58214084)
0xffff5821407c    28  ldur d0, [x0, #7]
0xffff58214080    32  b #+0x20 (addr 0xffff582140a0)
0xffff58214084    36  ldr x16, [x26, #40]
0xffff58214088    40  cmp x0, x16
0xffff5821408c    44  b.ne #+0xdc (addr 0xffff58214168)
0xffff58214090    48  ldr x3, [x26, #928]
0xffff58214094    52  ldur d0, [x3, #7]
0xffff58214098    56  b #+0x8 (addr 0xffff582140a0)
0xffff5821409c    60  scvtf d0, x0, #32
0xffff582140a0    64  scvtf d1, x2, #32
0xffff582140a4    68  fmul d0, d1, d0
0xffff582140a8    72  movz x1, #0x92c0
0xffff582140ac    76  movk x1, #0x16e7, lsl #16
0xffff582140b0    80  ldp x2, x0, [x1]
0xffff582140b4    84  adds x16, x2, #0x10 (16)
0xffff582140b8    88  ccmp x16, x0, #nzCv, lo
0xffff582140bc    92  b.hi #+0x20 (addr 0xffff582140dc)
0xffff582140c0    96  str x16, [x1]
0xffff582140c4   100  ldr x1, [x26, #120]
0xffff582140c8   104  str x1, [x2]
0xffff582140cc   108  orr x2, x2, #0x1
0xffff582140d0   112  stur d0, [x2, #7]
0xffff582140d4   116  mov x0, x2
0xffff582140d8   120  ret
0xffff582140dc   124  sub csp, jssp, #0x10 (16)
0xffff582140e0   128  stp fp, lr, [jssp, #-16]!
0xffff582140e4   132  movz fp, #0xa00000000
0xffff582140e8   136  sub csp, jssp, #0x8 (8)
0xffff582140ec   140  str fp, [jssp, #-8]!
0xffff582140f0   144  add fp, jssp, #0x8 (8)
0xffff582140f4   148  movz x2, #0x0
0xffff582140f8   152  mov x16, lr
0xffff582140fc   156  ldr x17, pc+68 (addr 0x0000ffff58214140)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58214100   160  blr x17
0xffff58214104   164  ldur cp, [fp, #-8]
0xffff58214108   168  movz x0, #0x0
0xffff5821410c   172  movz x1, #0x4b48
0xffff58214110   176  movk x1, #0xe4, lsl #16
0xffff58214114   180  ldr x16, pc+52 (addr 0x0000ffff58214148)    ;; code: STUB, CEntryStub, minor: 5
0xffff58214118   184  blr x16
0xffff5821411c   188  str x0, [jssp, #16]
0xffff58214120   192  ldr x16, pc+48 (addr 0x0000ffff58214150)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58214124   196  blr x16
0xffff58214128   200  ldr lr, [jssp, #16]
0xffff5821412c   204  ldp xzr, fp, [jssp], #24
0xffff58214130   208  b #-0x60 (addr 0xffff582140d0)
0xffff58214134   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58214138   216  d63f03e0       constant
0xffff5821413c   220  d503201f       constant
0xffff58214140   224  58206820       constant
0xffff58214144   228  0000ffff       constant
0xffff58214148   232  58206260       constant
0xffff5821414c   236  0000ffff       constant
0xffff58214150   240  582068e0       constant
0xffff58214154   244  0000ffff       constant
0xffff58214158   248  movz x16, #0x0
0xffff5821415c   252  sub csp, jssp, #0x10 (16)
0xffff58214160   256  stp fp, lr, [jssp, #-16]!
0xffff58214164   260  bl #+0x14 (addr 0xffff58214178)
0xffff58214168   264  movz x16, #0x8
0xffff5821416c   268  sub csp, jssp, #0x10 (16)
0xffff58214170   272  stp fp, lr, [jssp, #-16]!
0xffff58214174   276  bl #+0x4 (addr 0xffff58214178)
0xffff58214178   280  movz x17, #0xa00000000
0xffff5821417c   284  sub csp, jssp, #0x10 (16)
0xffff58214180   288  stp x17, cp, [jssp, #-16]!
0xffff58214184   292  add fp, jssp, #0x10 (16)
0xffff58214188   296  ldr x17, pc+24 (addr 0x0000ffff582141a0)    ;; lazy deoptimization bailout 0
0xffff5821418c   300  add x17, x17, x16
0xffff58214190   304  br x17
0xffff58214194   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58214198   312  d63f03e0       constant
0xffff5821419c   316  d503201f       constant
0xffff582141a0   320  58006000       constant
0xffff582141a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821411c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582140fc  code target (STUB)  (0xffff58206820)
0xffff58214114  code target (STUB)  (0xffff58206260)
0xffff58214120  code target (STUB)  (0xffff582068e0)
0xffff58214134  constant pool (size 36)
0xffff58214188  runtime entry
0xffff58214194  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6329
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff58214060     0  mov x2, x1
0xffff58214064     4  tbnz w2, #0, #+0xf4 (addr 0xffff58214158)
0xffff58214068     8  tbz w0, #0, #+0x34 (addr 0xffff5821409c)
0xffff5821406c    12  ldur x16, [x0, #-1]
0xffff58214070    16  ldr x17, [x26, #120]
0xffff58214074    20  cmp x16, x17
0xffff58214078    24  b.ne #+0xc (addr 0xffff58214084)
0xffff5821407c    28  ldur d0, [x0, #7]
0xffff58214080    32  b #+0x20 (addr 0xffff582140a0)
0xffff58214084    36  ldr x16, [x26, #40]
0xffff58214088    40  cmp x0, x16
0xffff5821408c    44  b.ne #+0xdc (addr 0xffff58214168)
0xffff58214090    48  ldr x3, [x26, #928]
0xffff58214094    52  ldur d0, [x3, #7]
0xffff58214098    56  b #+0x8 (addr 0xffff582140a0)
0xffff5821409c    60  scvtf d0, x0, #32
0xffff582140a0    64  scvtf d1, x2, #32
0xffff582140a4    68  fmul d0, d1, d0
0xffff582140a8    72  movz x1, #0x92c0
0xffff582140ac    76  movk x1, #0x16e7, lsl #16
0xffff582140b0    80  ldp x2, x0, [x1]
0xffff582140b4    84  adds x16, x2, #0x10 (16)
0xffff582140b8    88  ccmp x16, x0, #nzCv, lo
0xffff582140bc    92  b.hi #+0x20 (addr 0xffff582140dc)
0xffff582140c0    96  str x16, [x1]
0xffff582140c4   100  ldr x1, [x26, #120]
0xffff582140c8   104  str x1, [x2]
0xffff582140cc   108  orr x2, x2, #0x1
0xffff582140d0   112  stur d0, [x2, #7]
0xffff582140d4   116  mov x0, x2
0xffff582140d8   120  ret
0xffff582140dc   124  sub csp, jssp, #0x10 (16)
0xffff582140e0   128  stp fp, lr, [jssp, #-16]!
0xffff582140e4   132  movz fp, #0xa00000000
0xffff582140e8   136  sub csp, jssp, #0x8 (8)
0xffff582140ec   140  str fp, [jssp, #-8]!
0xffff582140f0   144  add fp, jssp, #0x8 (8)
0xffff582140f4   148  movz x2, #0x0
0xffff582140f8   152  mov x16, lr
0xffff582140fc   156  ldr x17, pc+68 (addr 0x0000ffff58214140)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58214100   160  blr x17
0xffff58214104   164  ldur cp, [fp, #-8]
0xffff58214108   168  movz x0, #0x0
0xffff5821410c   172  movz x1, #0x4b48
0xffff58214110   176  movk x1, #0xe4, lsl #16
0xffff58214114   180  ldr x16, pc+52 (addr 0x0000ffff58214148)    ;; code: STUB, CEntryStub, minor: 5
0xffff58214118   184  blr x16
0xffff5821411c   188  str x0, [jssp, #16]
0xffff58214120   192  ldr x16, pc+48 (addr 0x0000ffff58214150)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58214124   196  blr x16
0xffff58214128   200  ldr lr, [jssp, #16]
0xffff5821412c   204  ldp xzr, fp, [jssp], #24
0xffff58214130   208  b #-0x60 (addr 0xffff582140d0)
0xffff58214134   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58214138   216  d63f03e0       constant
0xffff5821413c   220  d503201f       constant
0xffff58214140   224  58206820       constant
0xffff58214144   228  0000ffff       constant
0xffff58214148   232  58206260       constant
0xffff5821414c   236  0000ffff       constant
0xffff58214150   240  582068e0       constant
0xffff58214154   244  0000ffff       constant
0xffff58214158   248  movz x16, #0x0
0xffff5821415c   252  sub csp, jssp, #0x10 (16)
0xffff58214160   256  stp fp, lr, [jssp, #-16]!
0xffff58214164   260  bl #+0x14 (addr 0xffff58214178)
0xffff58214168   264  movz x16, #0x8
0xffff5821416c   268  sub csp, jssp, #0x10 (16)
0xffff58214170   272  stp fp, lr, [jssp, #-16]!
0xffff58214174   276  bl #+0x4 (addr 0xffff58214178)
0xffff58214178   280  movz x17, #0xa00000000
0xffff5821417c   284  sub csp, jssp, #0x10 (16)
0xffff58214180   288  stp x17, cp, [jssp, #-16]!
0xffff58214184   292  add fp, jssp, #0x10 (16)
0xffff58214188   296  ldr x17, pc+24 (addr 0x0000ffff582141a0)    ;; lazy deoptimization bailout 0
0xffff5821418c   300  add x17, x17, x16
0xffff58214190   304  br x17
0xffff58214194   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58214198   312  d63f03e0       constant
0xffff5821419c   316  d503201f       constant
0xffff582141a0   320  58006000       constant
0xffff582141a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821411c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582140fc  code target (STUB)  (0xffff58206820)
0xffff58214114  code target (STUB)  (0xffff58206260)
0xffff58214120  code target (STUB)  (0xffff582068e0)
0xffff58214134  constant pool (size 36)
0xffff58214188  runtime entry
0xffff58214194  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2217
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff58214220     0  mov x2, x1
0xffff58214224     4  tbnz w2, #0, #+0x34 (addr 0xffff58214258)
0xffff58214228     8  mov x3, x0
0xffff5821422c    12  tbnz w3, #0, #+0x3c (addr 0xffff58214268)
0xffff58214230    16  cmp x3, #0x0 (0)
0xffff58214234    20  ccmp x2, #0, #nZcv, ne
0xffff58214238    24  ccmn x3, x2, #nzcv, eq
0xffff5821423c    28  b.mi #+0x3c (addr 0xffff58214278)
0xffff58214240    32  smulh x2, x3, x2
0xffff58214244    36  cmp x2, w2, sxtw
0xffff58214248    40  lsl x2, x2, #32
0xffff5821424c    44  b.ne #+0x2c (addr 0xffff58214278)
0xffff58214250    48  mov x0, x2
0xffff58214254    52  ret
0xffff58214258    56  movz x16, #0x0
0xffff5821425c    60  sub csp, jssp, #0x10 (16)
0xffff58214260    64  stp fp, lr, [jssp, #-16]!
0xffff58214264    68  bl #+0x24 (addr 0xffff58214288)
0xffff58214268    72  movz x16, #0x8
0xffff5821426c    76  sub csp, jssp, #0x10 (16)
0xffff58214270    80  stp fp, lr, [jssp, #-16]!
0xffff58214274    84  bl #+0x14 (addr 0xffff58214288)
0xffff58214278    88  movz x16, #0x10
0xffff5821427c    92  sub csp, jssp, #0x10 (16)
0xffff58214280    96  stp fp, lr, [jssp, #-16]!
0xffff58214284   100  bl #+0x4 (addr 0xffff58214288)
0xffff58214288   104  movz x17, #0xa00000000
0xffff5821428c   108  sub csp, jssp, #0x10 (16)
0xffff58214290   112  stp x17, cp, [jssp, #-16]!
0xffff58214294   116  add fp, jssp, #0x10 (16)
0xffff58214298   120  ldr x17, pc+24 (addr 0x0000ffff582142b0)    ;; lazy deoptimization bailout 0
0xffff5821429c   124  add x17, x17, x16
0xffff582142a0   128  br x17
0xffff582142a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582142a8   136  d63f03e0       constant
0xffff582142ac   140  d503201f       constant
0xffff582142b0   144  58006000       constant
0xffff582142b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214298  runtime entry
0xffff582142a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2217
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Smi->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff58214220     0  mov x2, x1
0xffff58214224     4  tbnz w2, #0, #+0x34 (addr 0xffff58214258)
0xffff58214228     8  mov x3, x0
0xffff5821422c    12  tbnz w3, #0, #+0x3c (addr 0xffff58214268)
0xffff58214230    16  cmp x3, #0x0 (0)
0xffff58214234    20  ccmp x2, #0, #nZcv, ne
0xffff58214238    24  ccmn x3, x2, #nzcv, eq
0xffff5821423c    28  b.mi #+0x3c (addr 0xffff58214278)
0xffff58214240    32  smulh x2, x3, x2
0xffff58214244    36  cmp x2, w2, sxtw
0xffff58214248    40  lsl x2, x2, #32
0xffff5821424c    44  b.ne #+0x2c (addr 0xffff58214278)
0xffff58214250    48  mov x0, x2
0xffff58214254    52  ret
0xffff58214258    56  movz x16, #0x0
0xffff5821425c    60  sub csp, jssp, #0x10 (16)
0xffff58214260    64  stp fp, lr, [jssp, #-16]!
0xffff58214264    68  bl #+0x24 (addr 0xffff58214288)
0xffff58214268    72  movz x16, #0x8
0xffff5821426c    76  sub csp, jssp, #0x10 (16)
0xffff58214270    80  stp fp, lr, [jssp, #-16]!
0xffff58214274    84  bl #+0x14 (addr 0xffff58214288)
0xffff58214278    88  movz x16, #0x10
0xffff5821427c    92  sub csp, jssp, #0x10 (16)
0xffff58214280    96  stp fp, lr, [jssp, #-16]!
0xffff58214284   100  bl #+0x4 (addr 0xffff58214288)
0xffff58214288   104  movz x17, #0xa00000000
0xffff5821428c   108  sub csp, jssp, #0x10 (16)
0xffff58214290   112  stp x17, cp, [jssp, #-16]!
0xffff58214294   116  add fp, jssp, #0x10 (16)
0xffff58214298   120  ldr x17, pc+24 (addr 0x0000ffff582142b0)    ;; lazy deoptimization bailout 0
0xffff5821429c   124  add x17, x17, x16
0xffff582142a0   128  br x17
0xffff582142a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582142a8   136  d63f03e0       constant
0xffff582142ac   140  d503201f       constant
0xffff582142b0   144  58006000       constant
0xffff582142b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214298  runtime entry
0xffff582142a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2233
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff58214320     0  mov x2, x1
0xffff58214324     4  tbnz w2, #0, #+0xc4 (addr 0xffff582143e8)
0xffff58214328     8  mov x3, x0
0xffff5821432c    12  tbnz w3, #0, #+0xcc (addr 0xffff582143f8)
0xffff58214330    16  scvtf d0, x2, #32
0xffff58214334    20  scvtf d1, x3, #32
0xffff58214338    24  fmul d0, d0, d1
0xffff5821433c    28  movz x1, #0x92c0
0xffff58214340    32  movk x1, #0x16e7, lsl #16
0xffff58214344    36  ldp x2, x0, [x1]
0xffff58214348    40  adds x16, x2, #0x10 (16)
0xffff5821434c    44  ccmp x16, x0, #nzCv, lo
0xffff58214350    48  b.hi #+0x20 (addr 0xffff58214370)
0xffff58214354    52  str x16, [x1]
0xffff58214358    56  ldr x1, [x26, #120]
0xffff5821435c    60  str x1, [x2]
0xffff58214360    64  orr x2, x2, #0x1
0xffff58214364    68  stur d0, [x2, #7]
0xffff58214368    72  mov x0, x2
0xffff5821436c    76  ret
0xffff58214370    80  sub csp, jssp, #0x10 (16)
0xffff58214374    84  stp fp, lr, [jssp, #-16]!
0xffff58214378    88  movz fp, #0xa00000000
0xffff5821437c    92  sub csp, jssp, #0x8 (8)
0xffff58214380    96  str fp, [jssp, #-8]!
0xffff58214384   100  add fp, jssp, #0x8 (8)
0xffff58214388   104  movz x2, #0x0
0xffff5821438c   108  mov x16, lr
0xffff58214390   112  ldr x17, pc+64 (addr 0x0000ffff582143d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58214394   116  blr x17
0xffff58214398   120  ldur cp, [fp, #-8]
0xffff5821439c   124  movz x0, #0x0
0xffff582143a0   128  movz x1, #0x4b48
0xffff582143a4   132  movk x1, #0xe4, lsl #16
0xffff582143a8   136  ldr x16, pc+48 (addr 0x0000ffff582143d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582143ac   140  blr x16
0xffff582143b0   144  str x0, [jssp, #16]
0xffff582143b4   148  ldr x16, pc+44 (addr 0x0000ffff582143e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582143b8   152  blr x16
0xffff582143bc   156  ldr lr, [jssp, #16]
0xffff582143c0   160  ldp xzr, fp, [jssp], #24
0xffff582143c4   164  b #-0x60 (addr 0xffff58214364)
0xffff582143c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582143cc   172  d63f03e0       constant
0xffff582143d0   176  58206820       constant
0xffff582143d4   180  0000ffff       constant
0xffff582143d8   184  58206260       constant
0xffff582143dc   188  0000ffff       constant
0xffff582143e0   192  582068e0       constant
0xffff582143e4   196  0000ffff       constant
0xffff582143e8   200  movz x16, #0x0
0xffff582143ec   204  sub csp, jssp, #0x10 (16)
0xffff582143f0   208  stp fp, lr, [jssp, #-16]!
0xffff582143f4   212  bl #+0x14 (addr 0xffff58214408)
0xffff582143f8   216  movz x16, #0x8
0xffff582143fc   220  sub csp, jssp, #0x10 (16)
0xffff58214400   224  stp fp, lr, [jssp, #-16]!
0xffff58214404   228  bl #+0x4 (addr 0xffff58214408)
0xffff58214408   232  movz x17, #0xa00000000
0xffff5821440c   236  sub csp, jssp, #0x10 (16)
0xffff58214410   240  stp x17, cp, [jssp, #-16]!
0xffff58214414   244  add fp, jssp, #0x10 (16)
0xffff58214418   248  ldr x17, pc+24 (addr 0x0000ffff58214430)    ;; lazy deoptimization bailout 0
0xffff5821441c   252  add x17, x17, x16
0xffff58214420   256  br x17
0xffff58214424   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58214428   264  d63f03e0       constant
0xffff5821442c   268  d503201f       constant
0xffff58214430   272  58006000       constant
0xffff58214434   276  0000ffff       constant


Safepoints (size = 21)
0xffff582143b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58214390  code target (STUB)  (0xffff58206820)
0xffff582143a8  code target (STUB)  (0xffff58206260)
0xffff582143b4  code target (STUB)  (0xffff582068e0)
0xffff582143c8  constant pool (size 32)
0xffff58214418  runtime entry
0xffff58214424  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2233
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff58214320     0  mov x2, x1
0xffff58214324     4  tbnz w2, #0, #+0xc4 (addr 0xffff582143e8)
0xffff58214328     8  mov x3, x0
0xffff5821432c    12  tbnz w3, #0, #+0xcc (addr 0xffff582143f8)
0xffff58214330    16  scvtf d0, x2, #32
0xffff58214334    20  scvtf d1, x3, #32
0xffff58214338    24  fmul d0, d0, d1
0xffff5821433c    28  movz x1, #0x92c0
0xffff58214340    32  movk x1, #0x16e7, lsl #16
0xffff58214344    36  ldp x2, x0, [x1]
0xffff58214348    40  adds x16, x2, #0x10 (16)
0xffff5821434c    44  ccmp x16, x0, #nzCv, lo
0xffff58214350    48  b.hi #+0x20 (addr 0xffff58214370)
0xffff58214354    52  str x16, [x1]
0xffff58214358    56  ldr x1, [x26, #120]
0xffff5821435c    60  str x1, [x2]
0xffff58214360    64  orr x2, x2, #0x1
0xffff58214364    68  stur d0, [x2, #7]
0xffff58214368    72  mov x0, x2
0xffff5821436c    76  ret
0xffff58214370    80  sub csp, jssp, #0x10 (16)
0xffff58214374    84  stp fp, lr, [jssp, #-16]!
0xffff58214378    88  movz fp, #0xa00000000
0xffff5821437c    92  sub csp, jssp, #0x8 (8)
0xffff58214380    96  str fp, [jssp, #-8]!
0xffff58214384   100  add fp, jssp, #0x8 (8)
0xffff58214388   104  movz x2, #0x0
0xffff5821438c   108  mov x16, lr
0xffff58214390   112  ldr x17, pc+64 (addr 0x0000ffff582143d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58214394   116  blr x17
0xffff58214398   120  ldur cp, [fp, #-8]
0xffff5821439c   124  movz x0, #0x0
0xffff582143a0   128  movz x1, #0x4b48
0xffff582143a4   132  movk x1, #0xe4, lsl #16
0xffff582143a8   136  ldr x16, pc+48 (addr 0x0000ffff582143d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582143ac   140  blr x16
0xffff582143b0   144  str x0, [jssp, #16]
0xffff582143b4   148  ldr x16, pc+44 (addr 0x0000ffff582143e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582143b8   152  blr x16
0xffff582143bc   156  ldr lr, [jssp, #16]
0xffff582143c0   160  ldp xzr, fp, [jssp], #24
0xffff582143c4   164  b #-0x60 (addr 0xffff58214364)
0xffff582143c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582143cc   172  d63f03e0       constant
0xffff582143d0   176  58206820       constant
0xffff582143d4   180  0000ffff       constant
0xffff582143d8   184  58206260       constant
0xffff582143dc   188  0000ffff       constant
0xffff582143e0   192  582068e0       constant
0xffff582143e4   196  0000ffff       constant
0xffff582143e8   200  movz x16, #0x0
0xffff582143ec   204  sub csp, jssp, #0x10 (16)
0xffff582143f0   208  stp fp, lr, [jssp, #-16]!
0xffff582143f4   212  bl #+0x14 (addr 0xffff58214408)
0xffff582143f8   216  movz x16, #0x8
0xffff582143fc   220  sub csp, jssp, #0x10 (16)
0xffff58214400   224  stp fp, lr, [jssp, #-16]!
0xffff58214404   228  bl #+0x4 (addr 0xffff58214408)
0xffff58214408   232  movz x17, #0xa00000000
0xffff5821440c   236  sub csp, jssp, #0x10 (16)
0xffff58214410   240  stp x17, cp, [jssp, #-16]!
0xffff58214414   244  add fp, jssp, #0x10 (16)
0xffff58214418   248  ldr x17, pc+24 (addr 0x0000ffff58214430)    ;; lazy deoptimization bailout 0
0xffff5821441c   252  add x17, x17, x16
0xffff58214420   256  br x17
0xffff58214424   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58214428   264  d63f03e0       constant
0xffff5821442c   268  d503201f       constant
0xffff58214430   272  58006000       constant
0xffff58214434   276  0000ffff       constant


Safepoints (size = 21)
0xffff582143b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58214390  code target (STUB)  (0xffff58206820)
0xffff582143a8  code target (STUB)  (0xffff58206260)
0xffff582143b4  code target (STUB)  (0xffff582068e0)
0xffff582143c8  constant pool (size 32)
0xffff58214418  runtime entry
0xffff58214424  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2201
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff582144c0     0  mov x2, x1
0xffff582144c4     4  tbnz w2, #0, #+0x34 (addr 0xffff582144f8)
0xffff582144c8     8  mov x3, x0
0xffff582144cc    12  tbnz w3, #0, #+0x3c (addr 0xffff58214508)
0xffff582144d0    16  cmp x3, #0x0 (0)
0xffff582144d4    20  ccmp x2, #0, #nZcv, ne
0xffff582144d8    24  ccmn x3, x2, #nzcv, eq
0xffff582144dc    28  b.mi #+0x3c (addr 0xffff58214518)
0xffff582144e0    32  smulh x2, x3, x2
0xffff582144e4    36  cmp x2, w2, sxtw
0xffff582144e8    40  lsl x2, x2, #32
0xffff582144ec    44  b.ne #+0x2c (addr 0xffff58214518)
0xffff582144f0    48  mov x0, x2
0xffff582144f4    52  ret
0xffff582144f8    56  movz x16, #0x0
0xffff582144fc    60  sub csp, jssp, #0x10 (16)
0xffff58214500    64  stp fp, lr, [jssp, #-16]!
0xffff58214504    68  bl #+0x24 (addr 0xffff58214528)
0xffff58214508    72  movz x16, #0x8
0xffff5821450c    76  sub csp, jssp, #0x10 (16)
0xffff58214510    80  stp fp, lr, [jssp, #-16]!
0xffff58214514    84  bl #+0x14 (addr 0xffff58214528)
0xffff58214518    88  movz x16, #0x10
0xffff5821451c    92  sub csp, jssp, #0x10 (16)
0xffff58214520    96  stp fp, lr, [jssp, #-16]!
0xffff58214524   100  bl #+0x4 (addr 0xffff58214528)
0xffff58214528   104  movz x17, #0xa00000000
0xffff5821452c   108  sub csp, jssp, #0x10 (16)
0xffff58214530   112  stp x17, cp, [jssp, #-16]!
0xffff58214534   116  add fp, jssp, #0x10 (16)
0xffff58214538   120  ldr x17, pc+24 (addr 0x0000ffff58214550)    ;; lazy deoptimization bailout 0
0xffff5821453c   124  add x17, x17, x16
0xffff58214540   128  br x17
0xffff58214544   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58214548   136  d63f03e0       constant
0xffff5821454c   140  d503201f       constant
0xffff58214550   144  58006000       constant
0xffff58214554   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214538  runtime entry
0xffff58214544  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2201
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 160)
0xffff582144c0     0  mov x2, x1
0xffff582144c4     4  tbnz w2, #0, #+0x34 (addr 0xffff582144f8)
0xffff582144c8     8  mov x3, x0
0xffff582144cc    12  tbnz w3, #0, #+0x3c (addr 0xffff58214508)
0xffff582144d0    16  cmp x3, #0x0 (0)
0xffff582144d4    20  ccmp x2, #0, #nZcv, ne
0xffff582144d8    24  ccmn x3, x2, #nzcv, eq
0xffff582144dc    28  b.mi #+0x3c (addr 0xffff58214518)
0xffff582144e0    32  smulh x2, x3, x2
0xffff582144e4    36  cmp x2, w2, sxtw
0xffff582144e8    40  lsl x2, x2, #32
0xffff582144ec    44  b.ne #+0x2c (addr 0xffff58214518)
0xffff582144f0    48  mov x0, x2
0xffff582144f4    52  ret
0xffff582144f8    56  movz x16, #0x0
0xffff582144fc    60  sub csp, jssp, #0x10 (16)
0xffff58214500    64  stp fp, lr, [jssp, #-16]!
0xffff58214504    68  bl #+0x24 (addr 0xffff58214528)
0xffff58214508    72  movz x16, #0x8
0xffff5821450c    76  sub csp, jssp, #0x10 (16)
0xffff58214510    80  stp fp, lr, [jssp, #-16]!
0xffff58214514    84  bl #+0x14 (addr 0xffff58214528)
0xffff58214518    88  movz x16, #0x10
0xffff5821451c    92  sub csp, jssp, #0x10 (16)
0xffff58214520    96  stp fp, lr, [jssp, #-16]!
0xffff58214524   100  bl #+0x4 (addr 0xffff58214528)
0xffff58214528   104  movz x17, #0xa00000000
0xffff5821452c   108  sub csp, jssp, #0x10 (16)
0xffff58214530   112  stp x17, cp, [jssp, #-16]!
0xffff58214534   116  add fp, jssp, #0x10 (16)
0xffff58214538   120  ldr x17, pc+24 (addr 0x0000ffff58214550)    ;; lazy deoptimization bailout 0
0xffff5821453c   124  add x17, x17, x16
0xffff58214540   128  br x17
0xffff58214544   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58214548   136  d63f03e0       constant
0xffff5821454c   140  d503201f       constant
0xffff58214550   144  58006000       constant
0xffff58214554   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214538  runtime entry
0xffff58214544  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2340
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff582145c0     0  mov x2, x1
0xffff582145c4     4  tbnz w2, #0, #+0x20 (addr 0xffff582145e4)
0xffff582145c8     8  mov x3, x0
0xffff582145cc    12  tbnz w3, #0, #+0x28 (addr 0xffff582145f4)
0xffff582145d0    16  asr x0, x2, #32
0xffff582145d4    20  asr x1, x3, #32
0xffff582145d8    24  asr w0, w0, w1
0xffff582145dc    28  lsl x0, x0, #32
0xffff582145e0    32  ret
0xffff582145e4    36  movz x16, #0x0
0xffff582145e8    40  sub csp, jssp, #0x10 (16)
0xffff582145ec    44  stp fp, lr, [jssp, #-16]!
0xffff582145f0    48  bl #+0x14 (addr 0xffff58214604)
0xffff582145f4    52  movz x16, #0x8
0xffff582145f8    56  sub csp, jssp, #0x10 (16)
0xffff582145fc    60  stp fp, lr, [jssp, #-16]!
0xffff58214600    64  bl #+0x4 (addr 0xffff58214604)
0xffff58214604    68  movz x17, #0xa00000000
0xffff58214608    72  sub csp, jssp, #0x10 (16)
0xffff5821460c    76  stp x17, cp, [jssp, #-16]!
0xffff58214610    80  add fp, jssp, #0x10 (16)
0xffff58214614    84  ldr x17, pc+20 (addr 0x0000ffff58214628)    ;; lazy deoptimization bailout 0
0xffff58214618    88  add x17, x17, x16
0xffff5821461c    92  br x17
0xffff58214620    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214624   100  d63f03e0       constant
0xffff58214628   104  58006000       constant
0xffff5821462c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214614  runtime entry
0xffff58214620  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2340
type = NORMAL
name = BinaryOpICStub(SAR:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 120)
0xffff582145c0     0  mov x2, x1
0xffff582145c4     4  tbnz w2, #0, #+0x20 (addr 0xffff582145e4)
0xffff582145c8     8  mov x3, x0
0xffff582145cc    12  tbnz w3, #0, #+0x28 (addr 0xffff582145f4)
0xffff582145d0    16  asr x0, x2, #32
0xffff582145d4    20  asr x1, x3, #32
0xffff582145d8    24  asr w0, w0, w1
0xffff582145dc    28  lsl x0, x0, #32
0xffff582145e0    32  ret
0xffff582145e4    36  movz x16, #0x0
0xffff582145e8    40  sub csp, jssp, #0x10 (16)
0xffff582145ec    44  stp fp, lr, [jssp, #-16]!
0xffff582145f0    48  bl #+0x14 (addr 0xffff58214604)
0xffff582145f4    52  movz x16, #0x8
0xffff582145f8    56  sub csp, jssp, #0x10 (16)
0xffff582145fc    60  stp fp, lr, [jssp, #-16]!
0xffff58214600    64  bl #+0x4 (addr 0xffff58214604)
0xffff58214604    68  movz x17, #0xa00000000
0xffff58214608    72  sub csp, jssp, #0x10 (16)
0xffff5821460c    76  stp x17, cp, [jssp, #-16]!
0xffff58214610    80  add fp, jssp, #0x10 (16)
0xffff58214614    84  ldr x17, pc+20 (addr 0x0000ffff58214628)    ;; lazy deoptimization bailout 0
0xffff58214618    88  add x17, x17, x16
0xffff5821461c    92  br x17
0xffff58214620    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214624   100  d63f03e0       constant
0xffff58214628   104  58006000       constant
0xffff5821462c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214614  runtime entry
0xffff58214620  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2324
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff582146a0     0  mov x2, x1
0xffff582146a4     4  tbnz w2, #0, #+0x20 (addr 0xffff582146c4)
0xffff582146a8     8  mov x3, x0
0xffff582146ac    12  tbnz w3, #0, #+0x28 (addr 0xffff582146d4)
0xffff582146b0    16  asr x0, x2, #32
0xffff582146b4    20  asr x1, x3, #32
0xffff582146b8    24  asr w0, w0, w1
0xffff582146bc    28  lsl x0, x0, #32
0xffff582146c0    32  ret
0xffff582146c4    36  movz x16, #0x0
0xffff582146c8    40  sub csp, jssp, #0x10 (16)
0xffff582146cc    44  stp fp, lr, [jssp, #-16]!
0xffff582146d0    48  bl #+0x14 (addr 0xffff582146e4)
0xffff582146d4    52  movz x16, #0x8
0xffff582146d8    56  sub csp, jssp, #0x10 (16)
0xffff582146dc    60  stp fp, lr, [jssp, #-16]!
0xffff582146e0    64  bl #+0x4 (addr 0xffff582146e4)
0xffff582146e4    68  movz x17, #0xa00000000
0xffff582146e8    72  sub csp, jssp, #0x10 (16)
0xffff582146ec    76  stp x17, cp, [jssp, #-16]!
0xffff582146f0    80  add fp, jssp, #0x10 (16)
0xffff582146f4    84  ldr x17, pc+20 (addr 0x0000ffff58214708)    ;; lazy deoptimization bailout 0
0xffff582146f8    88  add x17, x17, x16
0xffff582146fc    92  br x17
0xffff58214700    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214704   100  d63f03e0       constant
0xffff58214708   104  58006000       constant
0xffff5821470c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582146f4  runtime entry
0xffff58214700  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2324
type = NORMAL
name = BinaryOpICStub(SAR:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff582146a0     0  mov x2, x1
0xffff582146a4     4  tbnz w2, #0, #+0x20 (addr 0xffff582146c4)
0xffff582146a8     8  mov x3, x0
0xffff582146ac    12  tbnz w3, #0, #+0x28 (addr 0xffff582146d4)
0xffff582146b0    16  asr x0, x2, #32
0xffff582146b4    20  asr x1, x3, #32
0xffff582146b8    24  asr w0, w0, w1
0xffff582146bc    28  lsl x0, x0, #32
0xffff582146c0    32  ret
0xffff582146c4    36  movz x16, #0x0
0xffff582146c8    40  sub csp, jssp, #0x10 (16)
0xffff582146cc    44  stp fp, lr, [jssp, #-16]!
0xffff582146d0    48  bl #+0x14 (addr 0xffff582146e4)
0xffff582146d4    52  movz x16, #0x8
0xffff582146d8    56  sub csp, jssp, #0x10 (16)
0xffff582146dc    60  stp fp, lr, [jssp, #-16]!
0xffff582146e0    64  bl #+0x4 (addr 0xffff582146e4)
0xffff582146e4    68  movz x17, #0xa00000000
0xffff582146e8    72  sub csp, jssp, #0x10 (16)
0xffff582146ec    76  stp x17, cp, [jssp, #-16]!
0xffff582146f0    80  add fp, jssp, #0x10 (16)
0xffff582146f4    84  ldr x17, pc+20 (addr 0x0000ffff58214708)    ;; lazy deoptimization bailout 0
0xffff582146f8    88  add x17, x17, x16
0xffff582146fc    92  br x17
0xffff58214700    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214704   100  d63f03e0       constant
0xffff58214708   104  58006000       constant
0xffff5821470c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582146f4  runtime entry
0xffff58214700  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2452
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff58214780     0  mov x2, x0
0xffff58214784     4  tbnz w2, #0, #+0xac (addr 0xffff58214830)
0xffff58214788     8  tbnz w1, #0, #+0x18 (addr 0xffff582147a0)
0xffff5821478c    12  asr x4, x1, #32
0xffff58214790    16  asr x0, x2, #32
0xffff58214794    20  asr w0, w4, w0
0xffff58214798    24  lsl x0, x0, #32
0xffff5821479c    28  ret
0xffff582147a0    32  sub csp, jssp, #0x10 (16)
0xffff582147a4    36  stp fp, lr, [jssp, #-16]!
0xffff582147a8    40  movz fp, #0xa00000000
0xffff582147ac    44  sub csp, jssp, #0x8 (8)
0xffff582147b0    48  str fp, [jssp, #-8]!
0xffff582147b4    52  add fp, jssp, #0x8 (8)
0xffff582147b8    56  ldur x16, [x1, #-1]
0xffff582147bc    60  ldr x17, [x26, #120]
0xffff582147c0    64  cmp x16, x17
0xffff582147c4    68  b.ne #+0x30 (addr 0xffff582147f4)
0xffff582147c8    72  ldur d30, [x1, #7]
0xffff582147cc    76  fcvtzs x4, d30
0xffff582147d0    80  cmp x4, #0x1 (1)
0xffff582147d4    84  ccmn x4, #1, #nzcV, vc
0xffff582147d8    88  b.vc #+0x18 (addr 0xffff582147f0)
0xffff582147dc    92  sub csp, jssp, #0x8 (8)
0xffff582147e0    96  str lr, [jssp, #-8]!
0xffff582147e4   100  ldr x16, pc+68 (addr 0x0000ffff58214828)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff582147e8   104  blr x16
0xffff582147ec   108  ldr lr, [jssp], #8
0xffff582147f0   112  b #+0x24 (addr 0xffff58214814)
0xffff582147f4   116  ldp x4, x3, [x26, #64]
0xffff582147f8   120  cmp x1, x4
0xffff582147fc   124  cset x4, eq
0xffff58214800   128  ccmp x1, x3, #nZcv, ne
0xffff58214804   132  b.eq #+0x10 (addr 0xffff58214814)
0xffff58214808   136  ldr x16, [x26, #40]
0xffff5821480c   140  cmp x1, x16
0xffff58214810   144  b.ne #+0x30 (addr 0xffff58214840)
0xffff58214814   148  ldr lr, [jssp, #16]
0xffff58214818   152  ldp xzr, fp, [jssp], #24
0xffff5821481c   156  b #-0x8c (addr 0xffff58214790)
0xffff58214820   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214824   164  d63f03e0       constant
0xffff58214828   168  5820fee0       constant
0xffff5821482c   172  0000ffff       constant
0xffff58214830   176  movz x16, #0x0
0xffff58214834   180  sub csp, jssp, #0x10 (16)
0xffff58214838   184  stp fp, lr, [jssp, #-16]!
0xffff5821483c   188  bl #+0xc (addr 0xffff58214848)
0xffff58214840   192  movz x16, #0x8
0xffff58214844   196  bl #+0x14 (addr 0xffff58214858)
0xffff58214848   200  movz x17, #0xa00000000
0xffff5821484c   204  sub csp, jssp, #0x10 (16)
0xffff58214850   208  stp x17, cp, [jssp, #-16]!
0xffff58214854   212  add fp, jssp, #0x10 (16)
0xffff58214858   216  ldr x17, pc+24 (addr 0x0000ffff58214870)    ;; lazy deoptimization bailout 0
0xffff5821485c   220  add x17, x17, x16
0xffff58214860   224  br x17
0xffff58214864   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58214868   232  d63f03e0       constant
0xffff5821486c   236  d503201f       constant
0xffff58214870   240  58006000       constant
0xffff58214874   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582147e4  code target (STUB)  (0xffff5820fee0)
0xffff58214820  constant pool (size 16)
0xffff58214858  runtime entry
0xffff58214864  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2452
type = NORMAL
name = BinaryOpICStub(SAR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff58214780     0  mov x2, x0
0xffff58214784     4  tbnz w2, #0, #+0xac (addr 0xffff58214830)
0xffff58214788     8  tbnz w1, #0, #+0x18 (addr 0xffff582147a0)
0xffff5821478c    12  asr x4, x1, #32
0xffff58214790    16  asr x0, x2, #32
0xffff58214794    20  asr w0, w4, w0
0xffff58214798    24  lsl x0, x0, #32
0xffff5821479c    28  ret
0xffff582147a0    32  sub csp, jssp, #0x10 (16)
0xffff582147a4    36  stp fp, lr, [jssp, #-16]!
0xffff582147a8    40  movz fp, #0xa00000000
0xffff582147ac    44  sub csp, jssp, #0x8 (8)
0xffff582147b0    48  str fp, [jssp, #-8]!
0xffff582147b4    52  add fp, jssp, #0x8 (8)
0xffff582147b8    56  ldur x16, [x1, #-1]
0xffff582147bc    60  ldr x17, [x26, #120]
0xffff582147c0    64  cmp x16, x17
0xffff582147c4    68  b.ne #+0x30 (addr 0xffff582147f4)
0xffff582147c8    72  ldur d30, [x1, #7]
0xffff582147cc    76  fcvtzs x4, d30
0xffff582147d0    80  cmp x4, #0x1 (1)
0xffff582147d4    84  ccmn x4, #1, #nzcV, vc
0xffff582147d8    88  b.vc #+0x18 (addr 0xffff582147f0)
0xffff582147dc    92  sub csp, jssp, #0x8 (8)
0xffff582147e0    96  str lr, [jssp, #-8]!
0xffff582147e4   100  ldr x16, pc+68 (addr 0x0000ffff58214828)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff582147e8   104  blr x16
0xffff582147ec   108  ldr lr, [jssp], #8
0xffff582147f0   112  b #+0x24 (addr 0xffff58214814)
0xffff582147f4   116  ldp x4, x3, [x26, #64]
0xffff582147f8   120  cmp x1, x4
0xffff582147fc   124  cset x4, eq
0xffff58214800   128  ccmp x1, x3, #nZcv, ne
0xffff58214804   132  b.eq #+0x10 (addr 0xffff58214814)
0xffff58214808   136  ldr x16, [x26, #40]
0xffff5821480c   140  cmp x1, x16
0xffff58214810   144  b.ne #+0x30 (addr 0xffff58214840)
0xffff58214814   148  ldr lr, [jssp, #16]
0xffff58214818   152  ldp xzr, fp, [jssp], #24
0xffff5821481c   156  b #-0x8c (addr 0xffff58214790)
0xffff58214820   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214824   164  d63f03e0       constant
0xffff58214828   168  5820fee0       constant
0xffff5821482c   172  0000ffff       constant
0xffff58214830   176  movz x16, #0x0
0xffff58214834   180  sub csp, jssp, #0x10 (16)
0xffff58214838   184  stp fp, lr, [jssp, #-16]!
0xffff5821483c   188  bl #+0xc (addr 0xffff58214848)
0xffff58214840   192  movz x16, #0x8
0xffff58214844   196  bl #+0x14 (addr 0xffff58214858)
0xffff58214848   200  movz x17, #0xa00000000
0xffff5821484c   204  sub csp, jssp, #0x10 (16)
0xffff58214850   208  stp x17, cp, [jssp, #-16]!
0xffff58214854   212  add fp, jssp, #0x10 (16)
0xffff58214858   216  ldr x17, pc+24 (addr 0x0000ffff58214870)    ;; lazy deoptimization bailout 0
0xffff5821485c   220  add x17, x17, x16
0xffff58214860   224  br x17
0xffff58214864   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58214868   232  d63f03e0       constant
0xffff5821486c   236  d503201f       constant
0xffff58214870   240  58006000       constant
0xffff58214874   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582147e4  code target (STUB)  (0xffff5820fee0)
0xffff58214820  constant pool (size 16)
0xffff58214858  runtime entry
0xffff58214864  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2196
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff582148e0     0  mov x2, x1
0xffff582148e4     4  tbnz w2, #0, #+0x20 (addr 0xffff58214904)
0xffff582148e8     8  mov x3, x0
0xffff582148ec    12  tbnz w3, #0, #+0x28 (addr 0xffff58214914)
0xffff582148f0    16  asr x0, x2, #32
0xffff582148f4    20  asr x1, x3, #32
0xffff582148f8    24  asr w0, w0, w1
0xffff582148fc    28  lsl x0, x0, #32
0xffff58214900    32  ret
0xffff58214904    36  movz x16, #0x0
0xffff58214908    40  sub csp, jssp, #0x10 (16)
0xffff5821490c    44  stp fp, lr, [jssp, #-16]!
0xffff58214910    48  bl #+0x14 (addr 0xffff58214924)
0xffff58214914    52  movz x16, #0x8
0xffff58214918    56  sub csp, jssp, #0x10 (16)
0xffff5821491c    60  stp fp, lr, [jssp, #-16]!
0xffff58214920    64  bl #+0x4 (addr 0xffff58214924)
0xffff58214924    68  movz x17, #0xa00000000
0xffff58214928    72  sub csp, jssp, #0x10 (16)
0xffff5821492c    76  stp x17, cp, [jssp, #-16]!
0xffff58214930    80  add fp, jssp, #0x10 (16)
0xffff58214934    84  ldr x17, pc+20 (addr 0x0000ffff58214948)    ;; lazy deoptimization bailout 0
0xffff58214938    88  add x17, x17, x16
0xffff5821493c    92  br x17
0xffff58214940    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214944   100  d63f03e0       constant
0xffff58214948   104  58006000       constant
0xffff5821494c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214934  runtime entry
0xffff58214940  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2196
type = NORMAL
name = BinaryOpICStub(SAR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff582148e0     0  mov x2, x1
0xffff582148e4     4  tbnz w2, #0, #+0x20 (addr 0xffff58214904)
0xffff582148e8     8  mov x3, x0
0xffff582148ec    12  tbnz w3, #0, #+0x28 (addr 0xffff58214914)
0xffff582148f0    16  asr x0, x2, #32
0xffff582148f4    20  asr x1, x3, #32
0xffff582148f8    24  asr w0, w0, w1
0xffff582148fc    28  lsl x0, x0, #32
0xffff58214900    32  ret
0xffff58214904    36  movz x16, #0x0
0xffff58214908    40  sub csp, jssp, #0x10 (16)
0xffff5821490c    44  stp fp, lr, [jssp, #-16]!
0xffff58214910    48  bl #+0x14 (addr 0xffff58214924)
0xffff58214914    52  movz x16, #0x8
0xffff58214918    56  sub csp, jssp, #0x10 (16)
0xffff5821491c    60  stp fp, lr, [jssp, #-16]!
0xffff58214920    64  bl #+0x4 (addr 0xffff58214924)
0xffff58214924    68  movz x17, #0xa00000000
0xffff58214928    72  sub csp, jssp, #0x10 (16)
0xffff5821492c    76  stp x17, cp, [jssp, #-16]!
0xffff58214930    80  add fp, jssp, #0x10 (16)
0xffff58214934    84  ldr x17, pc+20 (addr 0x0000ffff58214948)    ;; lazy deoptimization bailout 0
0xffff58214938    88  add x17, x17, x16
0xffff5821493c    92  br x17
0xffff58214940    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214944   100  d63f03e0       constant
0xffff58214948   104  58006000       constant
0xffff5821494c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214934  runtime entry
0xffff58214940  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2339
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff582149c0     0  mov x2, x1
0xffff582149c4     4  tbnz w2, #0, #+0x20 (addr 0xffff582149e4)
0xffff582149c8     8  mov x3, x0
0xffff582149cc    12  tbnz w3, #0, #+0x28 (addr 0xffff582149f4)
0xffff582149d0    16  asr x0, x2, #32
0xffff582149d4    20  asr x1, x3, #32
0xffff582149d8    24  lsl w0, w0, w1
0xffff582149dc    28  lsl x0, x0, #32
0xffff582149e0    32  ret
0xffff582149e4    36  movz x16, #0x0
0xffff582149e8    40  sub csp, jssp, #0x10 (16)
0xffff582149ec    44  stp fp, lr, [jssp, #-16]!
0xffff582149f0    48  bl #+0x14 (addr 0xffff58214a04)
0xffff582149f4    52  movz x16, #0x8
0xffff582149f8    56  sub csp, jssp, #0x10 (16)
0xffff582149fc    60  stp fp, lr, [jssp, #-16]!
0xffff58214a00    64  bl #+0x4 (addr 0xffff58214a04)
0xffff58214a04    68  movz x17, #0xa00000000
0xffff58214a08    72  sub csp, jssp, #0x10 (16)
0xffff58214a0c    76  stp x17, cp, [jssp, #-16]!
0xffff58214a10    80  add fp, jssp, #0x10 (16)
0xffff58214a14    84  ldr x17, pc+20 (addr 0x0000ffff58214a28)    ;; lazy deoptimization bailout 0
0xffff58214a18    88  add x17, x17, x16
0xffff58214a1c    92  br x17
0xffff58214a20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214a24   100  d63f03e0       constant
0xffff58214a28   104  58006000       constant
0xffff58214a2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214a14  runtime entry
0xffff58214a20  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2339
type = NORMAL
name = BinaryOpICStub(SHL:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 120)
0xffff582149c0     0  mov x2, x1
0xffff582149c4     4  tbnz w2, #0, #+0x20 (addr 0xffff582149e4)
0xffff582149c8     8  mov x3, x0
0xffff582149cc    12  tbnz w3, #0, #+0x28 (addr 0xffff582149f4)
0xffff582149d0    16  asr x0, x2, #32
0xffff582149d4    20  asr x1, x3, #32
0xffff582149d8    24  lsl w0, w0, w1
0xffff582149dc    28  lsl x0, x0, #32
0xffff582149e0    32  ret
0xffff582149e4    36  movz x16, #0x0
0xffff582149e8    40  sub csp, jssp, #0x10 (16)
0xffff582149ec    44  stp fp, lr, [jssp, #-16]!
0xffff582149f0    48  bl #+0x14 (addr 0xffff58214a04)
0xffff582149f4    52  movz x16, #0x8
0xffff582149f8    56  sub csp, jssp, #0x10 (16)
0xffff582149fc    60  stp fp, lr, [jssp, #-16]!
0xffff58214a00    64  bl #+0x4 (addr 0xffff58214a04)
0xffff58214a04    68  movz x17, #0xa00000000
0xffff58214a08    72  sub csp, jssp, #0x10 (16)
0xffff58214a0c    76  stp x17, cp, [jssp, #-16]!
0xffff58214a10    80  add fp, jssp, #0x10 (16)
0xffff58214a14    84  ldr x17, pc+20 (addr 0x0000ffff58214a28)    ;; lazy deoptimization bailout 0
0xffff58214a18    88  add x17, x17, x16
0xffff58214a1c    92  br x17
0xffff58214a20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214a24   100  d63f03e0       constant
0xffff58214a28   104  58006000       constant
0xffff58214a2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214a14  runtime entry
0xffff58214a20  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2323
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff58214aa0     0  mov x2, x1
0xffff58214aa4     4  tbnz w2, #0, #+0x20 (addr 0xffff58214ac4)
0xffff58214aa8     8  mov x3, x0
0xffff58214aac    12  tbnz w3, #0, #+0x28 (addr 0xffff58214ad4)
0xffff58214ab0    16  asr x0, x2, #32
0xffff58214ab4    20  asr x1, x3, #32
0xffff58214ab8    24  lsl w0, w0, w1
0xffff58214abc    28  lsl x0, x0, #32
0xffff58214ac0    32  ret
0xffff58214ac4    36  movz x16, #0x0
0xffff58214ac8    40  sub csp, jssp, #0x10 (16)
0xffff58214acc    44  stp fp, lr, [jssp, #-16]!
0xffff58214ad0    48  bl #+0x14 (addr 0xffff58214ae4)
0xffff58214ad4    52  movz x16, #0x8
0xffff58214ad8    56  sub csp, jssp, #0x10 (16)
0xffff58214adc    60  stp fp, lr, [jssp, #-16]!
0xffff58214ae0    64  bl #+0x4 (addr 0xffff58214ae4)
0xffff58214ae4    68  movz x17, #0xa00000000
0xffff58214ae8    72  sub csp, jssp, #0x10 (16)
0xffff58214aec    76  stp x17, cp, [jssp, #-16]!
0xffff58214af0    80  add fp, jssp, #0x10 (16)
0xffff58214af4    84  ldr x17, pc+20 (addr 0x0000ffff58214b08)    ;; lazy deoptimization bailout 0
0xffff58214af8    88  add x17, x17, x16
0xffff58214afc    92  br x17
0xffff58214b00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214b04   100  d63f03e0       constant
0xffff58214b08   104  58006000       constant
0xffff58214b0c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214af4  runtime entry
0xffff58214b00  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2323
type = NORMAL
name = BinaryOpICStub(SHL:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff58214aa0     0  mov x2, x1
0xffff58214aa4     4  tbnz w2, #0, #+0x20 (addr 0xffff58214ac4)
0xffff58214aa8     8  mov x3, x0
0xffff58214aac    12  tbnz w3, #0, #+0x28 (addr 0xffff58214ad4)
0xffff58214ab0    16  asr x0, x2, #32
0xffff58214ab4    20  asr x1, x3, #32
0xffff58214ab8    24  lsl w0, w0, w1
0xffff58214abc    28  lsl x0, x0, #32
0xffff58214ac0    32  ret
0xffff58214ac4    36  movz x16, #0x0
0xffff58214ac8    40  sub csp, jssp, #0x10 (16)
0xffff58214acc    44  stp fp, lr, [jssp, #-16]!
0xffff58214ad0    48  bl #+0x14 (addr 0xffff58214ae4)
0xffff58214ad4    52  movz x16, #0x8
0xffff58214ad8    56  sub csp, jssp, #0x10 (16)
0xffff58214adc    60  stp fp, lr, [jssp, #-16]!
0xffff58214ae0    64  bl #+0x4 (addr 0xffff58214ae4)
0xffff58214ae4    68  movz x17, #0xa00000000
0xffff58214ae8    72  sub csp, jssp, #0x10 (16)
0xffff58214aec    76  stp x17, cp, [jssp, #-16]!
0xffff58214af0    80  add fp, jssp, #0x10 (16)
0xffff58214af4    84  ldr x17, pc+20 (addr 0x0000ffff58214b08)    ;; lazy deoptimization bailout 0
0xffff58214af8    88  add x17, x17, x16
0xffff58214afc    92  br x17
0xffff58214b00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214b04   100  d63f03e0       constant
0xffff58214b08   104  58006000       constant
0xffff58214b0c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214af4  runtime entry
0xffff58214b00  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2451
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff58214b80     0  mov x2, x0
0xffff58214b84     4  tbnz w2, #0, #+0xac (addr 0xffff58214c30)
0xffff58214b88     8  tbnz w1, #0, #+0x18 (addr 0xffff58214ba0)
0xffff58214b8c    12  asr x4, x1, #32
0xffff58214b90    16  asr x0, x2, #32
0xffff58214b94    20  lsl w0, w4, w0
0xffff58214b98    24  lsl x0, x0, #32
0xffff58214b9c    28  ret
0xffff58214ba0    32  sub csp, jssp, #0x10 (16)
0xffff58214ba4    36  stp fp, lr, [jssp, #-16]!
0xffff58214ba8    40  movz fp, #0xa00000000
0xffff58214bac    44  sub csp, jssp, #0x8 (8)
0xffff58214bb0    48  str fp, [jssp, #-8]!
0xffff58214bb4    52  add fp, jssp, #0x8 (8)
0xffff58214bb8    56  ldur x16, [x1, #-1]
0xffff58214bbc    60  ldr x17, [x26, #120]
0xffff58214bc0    64  cmp x16, x17
0xffff58214bc4    68  b.ne #+0x30 (addr 0xffff58214bf4)
0xffff58214bc8    72  ldur d30, [x1, #7]
0xffff58214bcc    76  fcvtzs x4, d30
0xffff58214bd0    80  cmp x4, #0x1 (1)
0xffff58214bd4    84  ccmn x4, #1, #nzcV, vc
0xffff58214bd8    88  b.vc #+0x18 (addr 0xffff58214bf0)
0xffff58214bdc    92  sub csp, jssp, #0x8 (8)
0xffff58214be0    96  str lr, [jssp, #-8]!
0xffff58214be4   100  ldr x16, pc+68 (addr 0x0000ffff58214c28)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58214be8   104  blr x16
0xffff58214bec   108  ldr lr, [jssp], #8
0xffff58214bf0   112  b #+0x24 (addr 0xffff58214c14)
0xffff58214bf4   116  ldp x4, x3, [x26, #64]
0xffff58214bf8   120  cmp x1, x4
0xffff58214bfc   124  cset x4, eq
0xffff58214c00   128  ccmp x1, x3, #nZcv, ne
0xffff58214c04   132  b.eq #+0x10 (addr 0xffff58214c14)
0xffff58214c08   136  ldr x16, [x26, #40]
0xffff58214c0c   140  cmp x1, x16
0xffff58214c10   144  b.ne #+0x30 (addr 0xffff58214c40)
0xffff58214c14   148  ldr lr, [jssp, #16]
0xffff58214c18   152  ldp xzr, fp, [jssp], #24
0xffff58214c1c   156  b #-0x8c (addr 0xffff58214b90)
0xffff58214c20   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214c24   164  d63f03e0       constant
0xffff58214c28   168  5820fee0       constant
0xffff58214c2c   172  0000ffff       constant
0xffff58214c30   176  movz x16, #0x0
0xffff58214c34   180  sub csp, jssp, #0x10 (16)
0xffff58214c38   184  stp fp, lr, [jssp, #-16]!
0xffff58214c3c   188  bl #+0xc (addr 0xffff58214c48)
0xffff58214c40   192  movz x16, #0x8
0xffff58214c44   196  bl #+0x14 (addr 0xffff58214c58)
0xffff58214c48   200  movz x17, #0xa00000000
0xffff58214c4c   204  sub csp, jssp, #0x10 (16)
0xffff58214c50   208  stp x17, cp, [jssp, #-16]!
0xffff58214c54   212  add fp, jssp, #0x10 (16)
0xffff58214c58   216  ldr x17, pc+24 (addr 0x0000ffff58214c70)    ;; lazy deoptimization bailout 0
0xffff58214c5c   220  add x17, x17, x16
0xffff58214c60   224  br x17
0xffff58214c64   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58214c68   232  d63f03e0       constant
0xffff58214c6c   236  d503201f       constant
0xffff58214c70   240  58006000       constant
0xffff58214c74   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58214be4  code target (STUB)  (0xffff5820fee0)
0xffff58214c20  constant pool (size 16)
0xffff58214c58  runtime entry
0xffff58214c64  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2451
type = NORMAL
name = BinaryOpICStub(SHL:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff58214b80     0  mov x2, x0
0xffff58214b84     4  tbnz w2, #0, #+0xac (addr 0xffff58214c30)
0xffff58214b88     8  tbnz w1, #0, #+0x18 (addr 0xffff58214ba0)
0xffff58214b8c    12  asr x4, x1, #32
0xffff58214b90    16  asr x0, x2, #32
0xffff58214b94    20  lsl w0, w4, w0
0xffff58214b98    24  lsl x0, x0, #32
0xffff58214b9c    28  ret
0xffff58214ba0    32  sub csp, jssp, #0x10 (16)
0xffff58214ba4    36  stp fp, lr, [jssp, #-16]!
0xffff58214ba8    40  movz fp, #0xa00000000
0xffff58214bac    44  sub csp, jssp, #0x8 (8)
0xffff58214bb0    48  str fp, [jssp, #-8]!
0xffff58214bb4    52  add fp, jssp, #0x8 (8)
0xffff58214bb8    56  ldur x16, [x1, #-1]
0xffff58214bbc    60  ldr x17, [x26, #120]
0xffff58214bc0    64  cmp x16, x17
0xffff58214bc4    68  b.ne #+0x30 (addr 0xffff58214bf4)
0xffff58214bc8    72  ldur d30, [x1, #7]
0xffff58214bcc    76  fcvtzs x4, d30
0xffff58214bd0    80  cmp x4, #0x1 (1)
0xffff58214bd4    84  ccmn x4, #1, #nzcV, vc
0xffff58214bd8    88  b.vc #+0x18 (addr 0xffff58214bf0)
0xffff58214bdc    92  sub csp, jssp, #0x8 (8)
0xffff58214be0    96  str lr, [jssp, #-8]!
0xffff58214be4   100  ldr x16, pc+68 (addr 0x0000ffff58214c28)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58214be8   104  blr x16
0xffff58214bec   108  ldr lr, [jssp], #8
0xffff58214bf0   112  b #+0x24 (addr 0xffff58214c14)
0xffff58214bf4   116  ldp x4, x3, [x26, #64]
0xffff58214bf8   120  cmp x1, x4
0xffff58214bfc   124  cset x4, eq
0xffff58214c00   128  ccmp x1, x3, #nZcv, ne
0xffff58214c04   132  b.eq #+0x10 (addr 0xffff58214c14)
0xffff58214c08   136  ldr x16, [x26, #40]
0xffff58214c0c   140  cmp x1, x16
0xffff58214c10   144  b.ne #+0x30 (addr 0xffff58214c40)
0xffff58214c14   148  ldr lr, [jssp, #16]
0xffff58214c18   152  ldp xzr, fp, [jssp], #24
0xffff58214c1c   156  b #-0x8c (addr 0xffff58214b90)
0xffff58214c20   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214c24   164  d63f03e0       constant
0xffff58214c28   168  5820fee0       constant
0xffff58214c2c   172  0000ffff       constant
0xffff58214c30   176  movz x16, #0x0
0xffff58214c34   180  sub csp, jssp, #0x10 (16)
0xffff58214c38   184  stp fp, lr, [jssp, #-16]!
0xffff58214c3c   188  bl #+0xc (addr 0xffff58214c48)
0xffff58214c40   192  movz x16, #0x8
0xffff58214c44   196  bl #+0x14 (addr 0xffff58214c58)
0xffff58214c48   200  movz x17, #0xa00000000
0xffff58214c4c   204  sub csp, jssp, #0x10 (16)
0xffff58214c50   208  stp x17, cp, [jssp, #-16]!
0xffff58214c54   212  add fp, jssp, #0x10 (16)
0xffff58214c58   216  ldr x17, pc+24 (addr 0x0000ffff58214c70)    ;; lazy deoptimization bailout 0
0xffff58214c5c   220  add x17, x17, x16
0xffff58214c60   224  br x17
0xffff58214c64   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58214c68   232  d63f03e0       constant
0xffff58214c6c   236  d503201f       constant
0xffff58214c70   240  58006000       constant
0xffff58214c74   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff58214be4  code target (STUB)  (0xffff5820fee0)
0xffff58214c20  constant pool (size 16)
0xffff58214c58  runtime entry
0xffff58214c64  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2211
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff58214ce0     0  mov x2, x1
0xffff58214ce4     4  tbnz w2, #0, #+0x20 (addr 0xffff58214d04)
0xffff58214ce8     8  mov x3, x0
0xffff58214cec    12  tbnz w3, #0, #+0x28 (addr 0xffff58214d14)
0xffff58214cf0    16  asr x0, x2, #32
0xffff58214cf4    20  asr x1, x3, #32
0xffff58214cf8    24  lsl w0, w0, w1
0xffff58214cfc    28  lsl x0, x0, #32
0xffff58214d00    32  ret
0xffff58214d04    36  movz x16, #0x0
0xffff58214d08    40  sub csp, jssp, #0x10 (16)
0xffff58214d0c    44  stp fp, lr, [jssp, #-16]!
0xffff58214d10    48  bl #+0x14 (addr 0xffff58214d24)
0xffff58214d14    52  movz x16, #0x8
0xffff58214d18    56  sub csp, jssp, #0x10 (16)
0xffff58214d1c    60  stp fp, lr, [jssp, #-16]!
0xffff58214d20    64  bl #+0x4 (addr 0xffff58214d24)
0xffff58214d24    68  movz x17, #0xa00000000
0xffff58214d28    72  sub csp, jssp, #0x10 (16)
0xffff58214d2c    76  stp x17, cp, [jssp, #-16]!
0xffff58214d30    80  add fp, jssp, #0x10 (16)
0xffff58214d34    84  ldr x17, pc+20 (addr 0x0000ffff58214d48)    ;; lazy deoptimization bailout 0
0xffff58214d38    88  add x17, x17, x16
0xffff58214d3c    92  br x17
0xffff58214d40    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214d44   100  d63f03e0       constant
0xffff58214d48   104  58006000       constant
0xffff58214d4c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214d34  runtime entry
0xffff58214d40  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2211
type = NORMAL
name = BinaryOpICStub(SHL:Smi*Smi->Int32)
compiler = crankshaft
Instructions (size = 120)
0xffff58214ce0     0  mov x2, x1
0xffff58214ce4     4  tbnz w2, #0, #+0x20 (addr 0xffff58214d04)
0xffff58214ce8     8  mov x3, x0
0xffff58214cec    12  tbnz w3, #0, #+0x28 (addr 0xffff58214d14)
0xffff58214cf0    16  asr x0, x2, #32
0xffff58214cf4    20  asr x1, x3, #32
0xffff58214cf8    24  lsl w0, w0, w1
0xffff58214cfc    28  lsl x0, x0, #32
0xffff58214d00    32  ret
0xffff58214d04    36  movz x16, #0x0
0xffff58214d08    40  sub csp, jssp, #0x10 (16)
0xffff58214d0c    44  stp fp, lr, [jssp, #-16]!
0xffff58214d10    48  bl #+0x14 (addr 0xffff58214d24)
0xffff58214d14    52  movz x16, #0x8
0xffff58214d18    56  sub csp, jssp, #0x10 (16)
0xffff58214d1c    60  stp fp, lr, [jssp, #-16]!
0xffff58214d20    64  bl #+0x4 (addr 0xffff58214d24)
0xffff58214d24    68  movz x17, #0xa00000000
0xffff58214d28    72  sub csp, jssp, #0x10 (16)
0xffff58214d2c    76  stp x17, cp, [jssp, #-16]!
0xffff58214d30    80  add fp, jssp, #0x10 (16)
0xffff58214d34    84  ldr x17, pc+20 (addr 0x0000ffff58214d48)    ;; lazy deoptimization bailout 0
0xffff58214d38    88  add x17, x17, x16
0xffff58214d3c    92  br x17
0xffff58214d40    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214d44   100  d63f03e0       constant
0xffff58214d48   104  58006000       constant
0xffff58214d4c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214d34  runtime entry
0xffff58214d40  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2195
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff58214dc0     0  mov x2, x1
0xffff58214dc4     4  tbnz w2, #0, #+0x20 (addr 0xffff58214de4)
0xffff58214dc8     8  mov x3, x0
0xffff58214dcc    12  tbnz w3, #0, #+0x28 (addr 0xffff58214df4)
0xffff58214dd0    16  asr x0, x2, #32
0xffff58214dd4    20  asr x1, x3, #32
0xffff58214dd8    24  lsl w0, w0, w1
0xffff58214ddc    28  lsl x0, x0, #32
0xffff58214de0    32  ret
0xffff58214de4    36  movz x16, #0x0
0xffff58214de8    40  sub csp, jssp, #0x10 (16)
0xffff58214dec    44  stp fp, lr, [jssp, #-16]!
0xffff58214df0    48  bl #+0x14 (addr 0xffff58214e04)
0xffff58214df4    52  movz x16, #0x8
0xffff58214df8    56  sub csp, jssp, #0x10 (16)
0xffff58214dfc    60  stp fp, lr, [jssp, #-16]!
0xffff58214e00    64  bl #+0x4 (addr 0xffff58214e04)
0xffff58214e04    68  movz x17, #0xa00000000
0xffff58214e08    72  sub csp, jssp, #0x10 (16)
0xffff58214e0c    76  stp x17, cp, [jssp, #-16]!
0xffff58214e10    80  add fp, jssp, #0x10 (16)
0xffff58214e14    84  ldr x17, pc+20 (addr 0x0000ffff58214e28)    ;; lazy deoptimization bailout 0
0xffff58214e18    88  add x17, x17, x16
0xffff58214e1c    92  br x17
0xffff58214e20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214e24   100  d63f03e0       constant
0xffff58214e28   104  58006000       constant
0xffff58214e2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214e14  runtime entry
0xffff58214e20  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2195
type = NORMAL
name = BinaryOpICStub(SHL:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff58214dc0     0  mov x2, x1
0xffff58214dc4     4  tbnz w2, #0, #+0x20 (addr 0xffff58214de4)
0xffff58214dc8     8  mov x3, x0
0xffff58214dcc    12  tbnz w3, #0, #+0x28 (addr 0xffff58214df4)
0xffff58214dd0    16  asr x0, x2, #32
0xffff58214dd4    20  asr x1, x3, #32
0xffff58214dd8    24  lsl w0, w0, w1
0xffff58214ddc    28  lsl x0, x0, #32
0xffff58214de0    32  ret
0xffff58214de4    36  movz x16, #0x0
0xffff58214de8    40  sub csp, jssp, #0x10 (16)
0xffff58214dec    44  stp fp, lr, [jssp, #-16]!
0xffff58214df0    48  bl #+0x14 (addr 0xffff58214e04)
0xffff58214df4    52  movz x16, #0x8
0xffff58214df8    56  sub csp, jssp, #0x10 (16)
0xffff58214dfc    60  stp fp, lr, [jssp, #-16]!
0xffff58214e00    64  bl #+0x4 (addr 0xffff58214e04)
0xffff58214e04    68  movz x17, #0xa00000000
0xffff58214e08    72  sub csp, jssp, #0x10 (16)
0xffff58214e0c    76  stp x17, cp, [jssp, #-16]!
0xffff58214e10    80  add fp, jssp, #0x10 (16)
0xffff58214e14    84  ldr x17, pc+20 (addr 0x0000ffff58214e28)    ;; lazy deoptimization bailout 0
0xffff58214e18    88  add x17, x17, x16
0xffff58214e1c    92  br x17
0xffff58214e20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214e24   100  d63f03e0       constant
0xffff58214e28   104  58006000       constant
0xffff58214e2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214e14  runtime entry
0xffff58214e20  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2325
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 144)
0xffff58214ea0     0  mov x2, x1
0xffff58214ea4     4  tbnz w2, #0, #+0x28 (addr 0xffff58214ecc)
0xffff58214ea8     8  mov x3, x0
0xffff58214eac    12  tbnz w3, #0, #+0x30 (addr 0xffff58214edc)
0xffff58214eb0    16  asr x2, x2, #32
0xffff58214eb4    20  asr x3, x3, #32
0xffff58214eb8    24  lsr w2, w2, w3
0xffff58214ebc    28  tbnz w2, #31, #+0x30 (addr 0xffff58214eec)
0xffff58214ec0    32  lsl x2, x2, #32
0xffff58214ec4    36  mov x0, x2
0xffff58214ec8    40  ret
0xffff58214ecc    44  movz x16, #0x0
0xffff58214ed0    48  sub csp, jssp, #0x10 (16)
0xffff58214ed4    52  stp fp, lr, [jssp, #-16]!
0xffff58214ed8    56  bl #+0x24 (addr 0xffff58214efc)
0xffff58214edc    60  movz x16, #0x8
0xffff58214ee0    64  sub csp, jssp, #0x10 (16)
0xffff58214ee4    68  stp fp, lr, [jssp, #-16]!
0xffff58214ee8    72  bl #+0x14 (addr 0xffff58214efc)
0xffff58214eec    76  movz x16, #0x10
0xffff58214ef0    80  sub csp, jssp, #0x10 (16)
0xffff58214ef4    84  stp fp, lr, [jssp, #-16]!
0xffff58214ef8    88  bl #+0x4 (addr 0xffff58214efc)
0xffff58214efc    92  movz x17, #0xa00000000
0xffff58214f00    96  sub csp, jssp, #0x10 (16)
0xffff58214f04   100  stp x17, cp, [jssp, #-16]!
0xffff58214f08   104  add fp, jssp, #0x10 (16)
0xffff58214f0c   108  ldr x17, pc+20 (addr 0x0000ffff58214f20)    ;; lazy deoptimization bailout 0
0xffff58214f10   112  add x17, x17, x16
0xffff58214f14   116  br x17
0xffff58214f18   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214f1c   124  d63f03e0       constant
0xffff58214f20   128  58006000       constant
0xffff58214f24   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214f0c  runtime entry
0xffff58214f18  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2325
type = NORMAL
name = BinaryOpICStub(SHR:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 144)
0xffff58214ea0     0  mov x2, x1
0xffff58214ea4     4  tbnz w2, #0, #+0x28 (addr 0xffff58214ecc)
0xffff58214ea8     8  mov x3, x0
0xffff58214eac    12  tbnz w3, #0, #+0x30 (addr 0xffff58214edc)
0xffff58214eb0    16  asr x2, x2, #32
0xffff58214eb4    20  asr x3, x3, #32
0xffff58214eb8    24  lsr w2, w2, w3
0xffff58214ebc    28  tbnz w2, #31, #+0x30 (addr 0xffff58214eec)
0xffff58214ec0    32  lsl x2, x2, #32
0xffff58214ec4    36  mov x0, x2
0xffff58214ec8    40  ret
0xffff58214ecc    44  movz x16, #0x0
0xffff58214ed0    48  sub csp, jssp, #0x10 (16)
0xffff58214ed4    52  stp fp, lr, [jssp, #-16]!
0xffff58214ed8    56  bl #+0x24 (addr 0xffff58214efc)
0xffff58214edc    60  movz x16, #0x8
0xffff58214ee0    64  sub csp, jssp, #0x10 (16)
0xffff58214ee4    68  stp fp, lr, [jssp, #-16]!
0xffff58214ee8    72  bl #+0x14 (addr 0xffff58214efc)
0xffff58214eec    76  movz x16, #0x10
0xffff58214ef0    80  sub csp, jssp, #0x10 (16)
0xffff58214ef4    84  stp fp, lr, [jssp, #-16]!
0xffff58214ef8    88  bl #+0x4 (addr 0xffff58214efc)
0xffff58214efc    92  movz x17, #0xa00000000
0xffff58214f00    96  sub csp, jssp, #0x10 (16)
0xffff58214f04   100  stp x17, cp, [jssp, #-16]!
0xffff58214f08   104  add fp, jssp, #0x10 (16)
0xffff58214f0c   108  ldr x17, pc+20 (addr 0x0000ffff58214f20)    ;; lazy deoptimization bailout 0
0xffff58214f10   112  add x17, x17, x16
0xffff58214f14   116  br x17
0xffff58214f18   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58214f1c   124  d63f03e0       constant
0xffff58214f20   128  58006000       constant
0xffff58214f24   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58214f0c  runtime entry
0xffff58214f18  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2469
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 280)
0xffff58214fa0     0  mov x2, x0
0xffff58214fa4     4  tbnz w2, #0, #+0xb4 (addr 0xffff58215058)
0xffff58214fa8     8  tbnz w1, #0, #+0x20 (addr 0xffff58214fc8)
0xffff58214fac    12  asr x4, x1, #32
0xffff58214fb0    16  asr x2, x2, #32
0xffff58214fb4    20  lsr w2, w4, w2
0xffff58214fb8    24  tbnz w2, #31, #+0xb0 (addr 0xffff58215068)
0xffff58214fbc    28  lsl x2, x2, #32
0xffff58214fc0    32  mov x0, x2
0xffff58214fc4    36  ret
0xffff58214fc8    40  sub csp, jssp, #0x10 (16)
0xffff58214fcc    44  stp fp, lr, [jssp, #-16]!
0xffff58214fd0    48  movz fp, #0xa00000000
0xffff58214fd4    52  sub csp, jssp, #0x8 (8)
0xffff58214fd8    56  str fp, [jssp, #-8]!
0xffff58214fdc    60  add fp, jssp, #0x8 (8)
0xffff58214fe0    64  ldur x16, [x1, #-1]
0xffff58214fe4    68  ldr x17, [x26, #120]
0xffff58214fe8    72  cmp x16, x17
0xffff58214fec    76  b.ne #+0x30 (addr 0xffff5821501c)
0xffff58214ff0    80  ldur d30, [x1, #7]
0xffff58214ff4    84  fcvtzs x4, d30
0xffff58214ff8    88  cmp x4, #0x1 (1)
0xffff58214ffc    92  ccmn x4, #1, #nzcV, vc
0xffff58215000    96  b.vc #+0x18 (addr 0xffff58215018)
0xffff58215004   100  sub csp, jssp, #0x8 (8)
0xffff58215008   104  str lr, [jssp, #-8]!
0xffff5821500c   108  ldr x16, pc+68 (addr 0x0000ffff58215050)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58215010   112  blr x16
0xffff58215014   116  ldr lr, [jssp], #8
0xffff58215018   120  b #+0x24 (addr 0xffff5821503c)
0xffff5821501c   124  ldp x4, x3, [x26, #64]
0xffff58215020   128  cmp x1, x4
0xffff58215024   132  cset x4, eq
0xffff58215028   136  ccmp x1, x3, #nZcv, ne
0xffff5821502c   140  b.eq #+0x10 (addr 0xffff5821503c)
0xffff58215030   144  ldr x16, [x26, #40]
0xffff58215034   148  cmp x1, x16
0xffff58215038   152  b.ne #+0x40 (addr 0xffff58215078)
0xffff5821503c   156  ldr lr, [jssp, #16]
0xffff58215040   160  ldp xzr, fp, [jssp], #24
0xffff58215044   164  b #-0x94 (addr 0xffff58214fb0)
0xffff58215048   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5821504c   172  d63f03e0       constant
0xffff58215050   176  5820fee0       constant
0xffff58215054   180  0000ffff       constant
0xffff58215058   184  movz x16, #0x0
0xffff5821505c   188  sub csp, jssp, #0x10 (16)
0xffff58215060   192  stp fp, lr, [jssp, #-16]!
0xffff58215064   196  bl #+0x1c (addr 0xffff58215080)
0xffff58215068   200  movz x16, #0x8
0xffff5821506c   204  sub csp, jssp, #0x10 (16)
0xffff58215070   208  stp fp, lr, [jssp, #-16]!
0xffff58215074   212  bl #+0xc (addr 0xffff58215080)
0xffff58215078   216  movz x16, #0x10
0xffff5821507c   220  bl #+0x14 (addr 0xffff58215090)
0xffff58215080   224  movz x17, #0xa00000000
0xffff58215084   228  sub csp, jssp, #0x10 (16)
0xffff58215088   232  stp x17, cp, [jssp, #-16]!
0xffff5821508c   236  add fp, jssp, #0x10 (16)
0xffff58215090   240  ldr x17, pc+24 (addr 0x0000ffff582150a8)    ;; lazy deoptimization bailout 0
0xffff58215094   244  add x17, x17, x16
0xffff58215098   248  br x17
0xffff5821509c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582150a0   256  d63f03e0       constant
0xffff582150a4   260  d503201f       constant
0xffff582150a8   264  58006000       constant
0xffff582150ac   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff5821500c  code target (STUB)  (0xffff5820fee0)
0xffff58215048  constant pool (size 16)
0xffff58215090  runtime entry
0xffff5821509c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2469
type = NORMAL
name = BinaryOpICStub(SHR:Number*Smi->Int32)
compiler = crankshaft
Instructions (size = 280)
0xffff58214fa0     0  mov x2, x0
0xffff58214fa4     4  tbnz w2, #0, #+0xb4 (addr 0xffff58215058)
0xffff58214fa8     8  tbnz w1, #0, #+0x20 (addr 0xffff58214fc8)
0xffff58214fac    12  asr x4, x1, #32
0xffff58214fb0    16  asr x2, x2, #32
0xffff58214fb4    20  lsr w2, w4, w2
0xffff58214fb8    24  tbnz w2, #31, #+0xb0 (addr 0xffff58215068)
0xffff58214fbc    28  lsl x2, x2, #32
0xffff58214fc0    32  mov x0, x2
0xffff58214fc4    36  ret
0xffff58214fc8    40  sub csp, jssp, #0x10 (16)
0xffff58214fcc    44  stp fp, lr, [jssp, #-16]!
0xffff58214fd0    48  movz fp, #0xa00000000
0xffff58214fd4    52  sub csp, jssp, #0x8 (8)
0xffff58214fd8    56  str fp, [jssp, #-8]!
0xffff58214fdc    60  add fp, jssp, #0x8 (8)
0xffff58214fe0    64  ldur x16, [x1, #-1]
0xffff58214fe4    68  ldr x17, [x26, #120]
0xffff58214fe8    72  cmp x16, x17
0xffff58214fec    76  b.ne #+0x30 (addr 0xffff5821501c)
0xffff58214ff0    80  ldur d30, [x1, #7]
0xffff58214ff4    84  fcvtzs x4, d30
0xffff58214ff8    88  cmp x4, #0x1 (1)
0xffff58214ffc    92  ccmn x4, #1, #nzcV, vc
0xffff58215000    96  b.vc #+0x18 (addr 0xffff58215018)
0xffff58215004   100  sub csp, jssp, #0x8 (8)
0xffff58215008   104  str lr, [jssp, #-8]!
0xffff5821500c   108  ldr x16, pc+68 (addr 0x0000ffff58215050)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58215010   112  blr x16
0xffff58215014   116  ldr lr, [jssp], #8
0xffff58215018   120  b #+0x24 (addr 0xffff5821503c)
0xffff5821501c   124  ldp x4, x3, [x26, #64]
0xffff58215020   128  cmp x1, x4
0xffff58215024   132  cset x4, eq
0xffff58215028   136  ccmp x1, x3, #nZcv, ne
0xffff5821502c   140  b.eq #+0x10 (addr 0xffff5821503c)
0xffff58215030   144  ldr x16, [x26, #40]
0xffff58215034   148  cmp x1, x16
0xffff58215038   152  b.ne #+0x40 (addr 0xffff58215078)
0xffff5821503c   156  ldr lr, [jssp, #16]
0xffff58215040   160  ldp xzr, fp, [jssp], #24
0xffff58215044   164  b #-0x94 (addr 0xffff58214fb0)
0xffff58215048   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5821504c   172  d63f03e0       constant
0xffff58215050   176  5820fee0       constant
0xffff58215054   180  0000ffff       constant
0xffff58215058   184  movz x16, #0x0
0xffff5821505c   188  sub csp, jssp, #0x10 (16)
0xffff58215060   192  stp fp, lr, [jssp, #-16]!
0xffff58215064   196  bl #+0x1c (addr 0xffff58215080)
0xffff58215068   200  movz x16, #0x8
0xffff5821506c   204  sub csp, jssp, #0x10 (16)
0xffff58215070   208  stp fp, lr, [jssp, #-16]!
0xffff58215074   212  bl #+0xc (addr 0xffff58215080)
0xffff58215078   216  movz x16, #0x10
0xffff5821507c   220  bl #+0x14 (addr 0xffff58215090)
0xffff58215080   224  movz x17, #0xa00000000
0xffff58215084   228  sub csp, jssp, #0x10 (16)
0xffff58215088   232  stp x17, cp, [jssp, #-16]!
0xffff5821508c   236  add fp, jssp, #0x10 (16)
0xffff58215090   240  ldr x17, pc+24 (addr 0x0000ffff582150a8)    ;; lazy deoptimization bailout 0
0xffff58215094   244  add x17, x17, x16
0xffff58215098   248  br x17
0xffff5821509c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582150a0   256  d63f03e0       constant
0xffff582150a4   260  d503201f       constant
0xffff582150a8   264  58006000       constant
0xffff582150ac   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff5821500c  code target (STUB)  (0xffff5820fee0)
0xffff58215048  constant pool (size 16)
0xffff58215090  runtime entry
0xffff5821509c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2453
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 280)
0xffff58215120     0  mov x2, x0
0xffff58215124     4  tbnz w2, #0, #+0xb4 (addr 0xffff582151d8)
0xffff58215128     8  tbnz w1, #0, #+0x20 (addr 0xffff58215148)
0xffff5821512c    12  asr x4, x1, #32
0xffff58215130    16  asr x2, x2, #32
0xffff58215134    20  lsr w2, w4, w2
0xffff58215138    24  tbnz w2, #31, #+0xb0 (addr 0xffff582151e8)
0xffff5821513c    28  lsl x2, x2, #32
0xffff58215140    32  mov x0, x2
0xffff58215144    36  ret
0xffff58215148    40  sub csp, jssp, #0x10 (16)
0xffff5821514c    44  stp fp, lr, [jssp, #-16]!
0xffff58215150    48  movz fp, #0xa00000000
0xffff58215154    52  sub csp, jssp, #0x8 (8)
0xffff58215158    56  str fp, [jssp, #-8]!
0xffff5821515c    60  add fp, jssp, #0x8 (8)
0xffff58215160    64  ldur x16, [x1, #-1]
0xffff58215164    68  ldr x17, [x26, #120]
0xffff58215168    72  cmp x16, x17
0xffff5821516c    76  b.ne #+0x30 (addr 0xffff5821519c)
0xffff58215170    80  ldur d30, [x1, #7]
0xffff58215174    84  fcvtzs x4, d30
0xffff58215178    88  cmp x4, #0x1 (1)
0xffff5821517c    92  ccmn x4, #1, #nzcV, vc
0xffff58215180    96  b.vc #+0x18 (addr 0xffff58215198)
0xffff58215184   100  sub csp, jssp, #0x8 (8)
0xffff58215188   104  str lr, [jssp, #-8]!
0xffff5821518c   108  ldr x16, pc+68 (addr 0x0000ffff582151d0)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58215190   112  blr x16
0xffff58215194   116  ldr lr, [jssp], #8
0xffff58215198   120  b #+0x24 (addr 0xffff582151bc)
0xffff5821519c   124  ldp x4, x3, [x26, #64]
0xffff582151a0   128  cmp x1, x4
0xffff582151a4   132  cset x4, eq
0xffff582151a8   136  ccmp x1, x3, #nZcv, ne
0xffff582151ac   140  b.eq #+0x10 (addr 0xffff582151bc)
0xffff582151b0   144  ldr x16, [x26, #40]
0xffff582151b4   148  cmp x1, x16
0xffff582151b8   152  b.ne #+0x40 (addr 0xffff582151f8)
0xffff582151bc   156  ldr lr, [jssp, #16]
0xffff582151c0   160  ldp xzr, fp, [jssp], #24
0xffff582151c4   164  b #-0x94 (addr 0xffff58215130)
0xffff582151c8   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582151cc   172  d63f03e0       constant
0xffff582151d0   176  5820fee0       constant
0xffff582151d4   180  0000ffff       constant
0xffff582151d8   184  movz x16, #0x0
0xffff582151dc   188  sub csp, jssp, #0x10 (16)
0xffff582151e0   192  stp fp, lr, [jssp, #-16]!
0xffff582151e4   196  bl #+0x1c (addr 0xffff58215200)
0xffff582151e8   200  movz x16, #0x8
0xffff582151ec   204  sub csp, jssp, #0x10 (16)
0xffff582151f0   208  stp fp, lr, [jssp, #-16]!
0xffff582151f4   212  bl #+0xc (addr 0xffff58215200)
0xffff582151f8   216  movz x16, #0x10
0xffff582151fc   220  bl #+0x14 (addr 0xffff58215210)
0xffff58215200   224  movz x17, #0xa00000000
0xffff58215204   228  sub csp, jssp, #0x10 (16)
0xffff58215208   232  stp x17, cp, [jssp, #-16]!
0xffff5821520c   236  add fp, jssp, #0x10 (16)
0xffff58215210   240  ldr x17, pc+24 (addr 0x0000ffff58215228)    ;; lazy deoptimization bailout 0
0xffff58215214   244  add x17, x17, x16
0xffff58215218   248  br x17
0xffff5821521c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215220   256  d63f03e0       constant
0xffff58215224   260  d503201f       constant
0xffff58215228   264  58006000       constant
0xffff5821522c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff5821518c  code target (STUB)  (0xffff5820fee0)
0xffff582151c8  constant pool (size 16)
0xffff58215210  runtime entry
0xffff5821521c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2453
type = NORMAL
name = BinaryOpICStub(SHR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 280)
0xffff58215120     0  mov x2, x0
0xffff58215124     4  tbnz w2, #0, #+0xb4 (addr 0xffff582151d8)
0xffff58215128     8  tbnz w1, #0, #+0x20 (addr 0xffff58215148)
0xffff5821512c    12  asr x4, x1, #32
0xffff58215130    16  asr x2, x2, #32
0xffff58215134    20  lsr w2, w4, w2
0xffff58215138    24  tbnz w2, #31, #+0xb0 (addr 0xffff582151e8)
0xffff5821513c    28  lsl x2, x2, #32
0xffff58215140    32  mov x0, x2
0xffff58215144    36  ret
0xffff58215148    40  sub csp, jssp, #0x10 (16)
0xffff5821514c    44  stp fp, lr, [jssp, #-16]!
0xffff58215150    48  movz fp, #0xa00000000
0xffff58215154    52  sub csp, jssp, #0x8 (8)
0xffff58215158    56  str fp, [jssp, #-8]!
0xffff5821515c    60  add fp, jssp, #0x8 (8)
0xffff58215160    64  ldur x16, [x1, #-1]
0xffff58215164    68  ldr x17, [x26, #120]
0xffff58215168    72  cmp x16, x17
0xffff5821516c    76  b.ne #+0x30 (addr 0xffff5821519c)
0xffff58215170    80  ldur d30, [x1, #7]
0xffff58215174    84  fcvtzs x4, d30
0xffff58215178    88  cmp x4, #0x1 (1)
0xffff5821517c    92  ccmn x4, #1, #nzcV, vc
0xffff58215180    96  b.vc #+0x18 (addr 0xffff58215198)
0xffff58215184   100  sub csp, jssp, #0x8 (8)
0xffff58215188   104  str lr, [jssp, #-8]!
0xffff5821518c   108  ldr x16, pc+68 (addr 0x0000ffff582151d0)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff58215190   112  blr x16
0xffff58215194   116  ldr lr, [jssp], #8
0xffff58215198   120  b #+0x24 (addr 0xffff582151bc)
0xffff5821519c   124  ldp x4, x3, [x26, #64]
0xffff582151a0   128  cmp x1, x4
0xffff582151a4   132  cset x4, eq
0xffff582151a8   136  ccmp x1, x3, #nZcv, ne
0xffff582151ac   140  b.eq #+0x10 (addr 0xffff582151bc)
0xffff582151b0   144  ldr x16, [x26, #40]
0xffff582151b4   148  cmp x1, x16
0xffff582151b8   152  b.ne #+0x40 (addr 0xffff582151f8)
0xffff582151bc   156  ldr lr, [jssp, #16]
0xffff582151c0   160  ldp xzr, fp, [jssp], #24
0xffff582151c4   164  b #-0x94 (addr 0xffff58215130)
0xffff582151c8   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582151cc   172  d63f03e0       constant
0xffff582151d0   176  5820fee0       constant
0xffff582151d4   180  0000ffff       constant
0xffff582151d8   184  movz x16, #0x0
0xffff582151dc   188  sub csp, jssp, #0x10 (16)
0xffff582151e0   192  stp fp, lr, [jssp, #-16]!
0xffff582151e4   196  bl #+0x1c (addr 0xffff58215200)
0xffff582151e8   200  movz x16, #0x8
0xffff582151ec   204  sub csp, jssp, #0x10 (16)
0xffff582151f0   208  stp fp, lr, [jssp, #-16]!
0xffff582151f4   212  bl #+0xc (addr 0xffff58215200)
0xffff582151f8   216  movz x16, #0x10
0xffff582151fc   220  bl #+0x14 (addr 0xffff58215210)
0xffff58215200   224  movz x17, #0xa00000000
0xffff58215204   228  sub csp, jssp, #0x10 (16)
0xffff58215208   232  stp x17, cp, [jssp, #-16]!
0xffff5821520c   236  add fp, jssp, #0x10 (16)
0xffff58215210   240  ldr x17, pc+24 (addr 0x0000ffff58215228)    ;; lazy deoptimization bailout 0
0xffff58215214   244  add x17, x17, x16
0xffff58215218   248  br x17
0xffff5821521c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215220   256  d63f03e0       constant
0xffff58215224   260  d503201f       constant
0xffff58215228   264  58006000       constant
0xffff5821522c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff5821518c  code target (STUB)  (0xffff5820fee0)
0xffff582151c8  constant pool (size 16)
0xffff58215210  runtime entry
0xffff5821521c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2197
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 144)
0xffff582152a0     0  mov x2, x1
0xffff582152a4     4  tbnz w2, #0, #+0x28 (addr 0xffff582152cc)
0xffff582152a8     8  mov x3, x0
0xffff582152ac    12  tbnz w3, #0, #+0x30 (addr 0xffff582152dc)
0xffff582152b0    16  asr x2, x2, #32
0xffff582152b4    20  asr x3, x3, #32
0xffff582152b8    24  lsr w2, w2, w3
0xffff582152bc    28  tbnz w2, #31, #+0x30 (addr 0xffff582152ec)
0xffff582152c0    32  lsl x2, x2, #32
0xffff582152c4    36  mov x0, x2
0xffff582152c8    40  ret
0xffff582152cc    44  movz x16, #0x0
0xffff582152d0    48  sub csp, jssp, #0x10 (16)
0xffff582152d4    52  stp fp, lr, [jssp, #-16]!
0xffff582152d8    56  bl #+0x24 (addr 0xffff582152fc)
0xffff582152dc    60  movz x16, #0x8
0xffff582152e0    64  sub csp, jssp, #0x10 (16)
0xffff582152e4    68  stp fp, lr, [jssp, #-16]!
0xffff582152e8    72  bl #+0x14 (addr 0xffff582152fc)
0xffff582152ec    76  movz x16, #0x10
0xffff582152f0    80  sub csp, jssp, #0x10 (16)
0xffff582152f4    84  stp fp, lr, [jssp, #-16]!
0xffff582152f8    88  bl #+0x4 (addr 0xffff582152fc)
0xffff582152fc    92  movz x17, #0xa00000000
0xffff58215300    96  sub csp, jssp, #0x10 (16)
0xffff58215304   100  stp x17, cp, [jssp, #-16]!
0xffff58215308   104  add fp, jssp, #0x10 (16)
0xffff5821530c   108  ldr x17, pc+20 (addr 0x0000ffff58215320)    ;; lazy deoptimization bailout 0
0xffff58215310   112  add x17, x17, x16
0xffff58215314   116  br x17
0xffff58215318   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5821531c   124  d63f03e0       constant
0xffff58215320   128  58006000       constant
0xffff58215324   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5821530c  runtime entry
0xffff58215318  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2197
type = NORMAL
name = BinaryOpICStub(SHR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 144)
0xffff582152a0     0  mov x2, x1
0xffff582152a4     4  tbnz w2, #0, #+0x28 (addr 0xffff582152cc)
0xffff582152a8     8  mov x3, x0
0xffff582152ac    12  tbnz w3, #0, #+0x30 (addr 0xffff582152dc)
0xffff582152b0    16  asr x2, x2, #32
0xffff582152b4    20  asr x3, x3, #32
0xffff582152b8    24  lsr w2, w2, w3
0xffff582152bc    28  tbnz w2, #31, #+0x30 (addr 0xffff582152ec)
0xffff582152c0    32  lsl x2, x2, #32
0xffff582152c4    36  mov x0, x2
0xffff582152c8    40  ret
0xffff582152cc    44  movz x16, #0x0
0xffff582152d0    48  sub csp, jssp, #0x10 (16)
0xffff582152d4    52  stp fp, lr, [jssp, #-16]!
0xffff582152d8    56  bl #+0x24 (addr 0xffff582152fc)
0xffff582152dc    60  movz x16, #0x8
0xffff582152e0    64  sub csp, jssp, #0x10 (16)
0xffff582152e4    68  stp fp, lr, [jssp, #-16]!
0xffff582152e8    72  bl #+0x14 (addr 0xffff582152fc)
0xffff582152ec    76  movz x16, #0x10
0xffff582152f0    80  sub csp, jssp, #0x10 (16)
0xffff582152f4    84  stp fp, lr, [jssp, #-16]!
0xffff582152f8    88  bl #+0x4 (addr 0xffff582152fc)
0xffff582152fc    92  movz x17, #0xa00000000
0xffff58215300    96  sub csp, jssp, #0x10 (16)
0xffff58215304   100  stp x17, cp, [jssp, #-16]!
0xffff58215308   104  add fp, jssp, #0x10 (16)
0xffff5821530c   108  ldr x17, pc+20 (addr 0x0000ffff58215320)    ;; lazy deoptimization bailout 0
0xffff58215310   112  add x17, x17, x16
0xffff58215314   116  br x17
0xffff58215318   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5821531c   124  d63f03e0       constant
0xffff58215320   128  58006000       constant
0xffff58215324   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5821530c  runtime entry
0xffff58215318  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4392
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff582153a0     0  mov x2, x1
0xffff582153a4     4  tbnz w2, #0, #+0x1c (addr 0xffff582153c0)
0xffff582153a8     8  mov x3, x0
0xffff582153ac    12  tbnz w3, #0, #+0x24 (addr 0xffff582153d0)
0xffff582153b0    16  subs x2, x2, x3
0xffff582153b4    20  b.vs #+0x2c (addr 0xffff582153e0)
0xffff582153b8    24  mov x0, x2
0xffff582153bc    28  ret
0xffff582153c0    32  movz x16, #0x0
0xffff582153c4    36  sub csp, jssp, #0x10 (16)
0xffff582153c8    40  stp fp, lr, [jssp, #-16]!
0xffff582153cc    44  bl #+0x24 (addr 0xffff582153f0)
0xffff582153d0    48  movz x16, #0x8
0xffff582153d4    52  sub csp, jssp, #0x10 (16)
0xffff582153d8    56  stp fp, lr, [jssp, #-16]!
0xffff582153dc    60  bl #+0x14 (addr 0xffff582153f0)
0xffff582153e0    64  movz x16, #0x10
0xffff582153e4    68  sub csp, jssp, #0x10 (16)
0xffff582153e8    72  stp fp, lr, [jssp, #-16]!
0xffff582153ec    76  bl #+0x4 (addr 0xffff582153f0)
0xffff582153f0    80  movz x17, #0xa00000000
0xffff582153f4    84  sub csp, jssp, #0x10 (16)
0xffff582153f8    88  stp x17, cp, [jssp, #-16]!
0xffff582153fc    92  add fp, jssp, #0x10 (16)
0xffff58215400    96  ldr x17, pc+24 (addr 0x0000ffff58215418)    ;; lazy deoptimization bailout 0
0xffff58215404   100  add x17, x17, x16
0xffff58215408   104  br x17
0xffff5821540c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215410   112  d63f03e0       constant
0xffff58215414   116  d503201f       constant
0xffff58215418   120  58006000       constant
0xffff5821541c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58215400  runtime entry
0xffff5821540c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4392
type = NORMAL
name = BinaryOpICStub(SUB:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff582153a0     0  mov x2, x1
0xffff582153a4     4  tbnz w2, #0, #+0x1c (addr 0xffff582153c0)
0xffff582153a8     8  mov x3, x0
0xffff582153ac    12  tbnz w3, #0, #+0x24 (addr 0xffff582153d0)
0xffff582153b0    16  subs x2, x2, x3
0xffff582153b4    20  b.vs #+0x2c (addr 0xffff582153e0)
0xffff582153b8    24  mov x0, x2
0xffff582153bc    28  ret
0xffff582153c0    32  movz x16, #0x0
0xffff582153c4    36  sub csp, jssp, #0x10 (16)
0xffff582153c8    40  stp fp, lr, [jssp, #-16]!
0xffff582153cc    44  bl #+0x24 (addr 0xffff582153f0)
0xffff582153d0    48  movz x16, #0x8
0xffff582153d4    52  sub csp, jssp, #0x10 (16)
0xffff582153d8    56  stp fp, lr, [jssp, #-16]!
0xffff582153dc    60  bl #+0x14 (addr 0xffff582153f0)
0xffff582153e0    64  movz x16, #0x10
0xffff582153e4    68  sub csp, jssp, #0x10 (16)
0xffff582153e8    72  stp fp, lr, [jssp, #-16]!
0xffff582153ec    76  bl #+0x4 (addr 0xffff582153f0)
0xffff582153f0    80  movz x17, #0xa00000000
0xffff582153f4    84  sub csp, jssp, #0x10 (16)
0xffff582153f8    88  stp x17, cp, [jssp, #-16]!
0xffff582153fc    92  add fp, jssp, #0x10 (16)
0xffff58215400    96  ldr x17, pc+24 (addr 0x0000ffff58215418)    ;; lazy deoptimization bailout 0
0xffff58215404   100  add x17, x17, x16
0xffff58215408   104  br x17
0xffff5821540c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215410   112  d63f03e0       constant
0xffff58215414   116  d503201f       constant
0xffff58215418   120  58006000       constant
0xffff5821541c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58215400  runtime entry
0xffff5821540c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6456
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff582154a0     0  mov x2, x1
0xffff582154a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff58215598)
0xffff582154a8     8  tbz w0, #0, #+0x34 (addr 0xffff582154dc)
0xffff582154ac    12  ldur x16, [x0, #-1]
0xffff582154b0    16  ldr x17, [x26, #120]
0xffff582154b4    20  cmp x16, x17
0xffff582154b8    24  b.ne #+0xc (addr 0xffff582154c4)
0xffff582154bc    28  ldur d0, [x0, #7]
0xffff582154c0    32  b #+0x20 (addr 0xffff582154e0)
0xffff582154c4    36  ldr x16, [x26, #40]
0xffff582154c8    40  cmp x0, x16
0xffff582154cc    44  b.ne #+0xdc (addr 0xffff582155a8)
0xffff582154d0    48  ldr x3, [x26, #928]
0xffff582154d4    52  ldur d0, [x3, #7]
0xffff582154d8    56  b #+0x8 (addr 0xffff582154e0)
0xffff582154dc    60  scvtf d0, x0, #32
0xffff582154e0    64  scvtf d1, x2, #32
0xffff582154e4    68  fsub d0, d1, d0
0xffff582154e8    72  movz x1, #0x92c0
0xffff582154ec    76  movk x1, #0x16e7, lsl #16
0xffff582154f0    80  ldp x2, x0, [x1]
0xffff582154f4    84  adds x16, x2, #0x10 (16)
0xffff582154f8    88  ccmp x16, x0, #nzCv, lo
0xffff582154fc    92  b.hi #+0x20 (addr 0xffff5821551c)
0xffff58215500    96  str x16, [x1]
0xffff58215504   100  ldr x1, [x26, #120]
0xffff58215508   104  str x1, [x2]
0xffff5821550c   108  orr x2, x2, #0x1
0xffff58215510   112  stur d0, [x2, #7]
0xffff58215514   116  mov x0, x2
0xffff58215518   120  ret
0xffff5821551c   124  sub csp, jssp, #0x10 (16)
0xffff58215520   128  stp fp, lr, [jssp, #-16]!
0xffff58215524   132  movz fp, #0xa00000000
0xffff58215528   136  sub csp, jssp, #0x8 (8)
0xffff5821552c   140  str fp, [jssp, #-8]!
0xffff58215530   144  add fp, jssp, #0x8 (8)
0xffff58215534   148  movz x2, #0x0
0xffff58215538   152  mov x16, lr
0xffff5821553c   156  ldr x17, pc+68 (addr 0x0000ffff58215580)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58215540   160  blr x17
0xffff58215544   164  ldur cp, [fp, #-8]
0xffff58215548   168  movz x0, #0x0
0xffff5821554c   172  movz x1, #0x4b48
0xffff58215550   176  movk x1, #0xe4, lsl #16
0xffff58215554   180  ldr x16, pc+52 (addr 0x0000ffff58215588)    ;; code: STUB, CEntryStub, minor: 5
0xffff58215558   184  blr x16
0xffff5821555c   188  str x0, [jssp, #16]
0xffff58215560   192  ldr x16, pc+48 (addr 0x0000ffff58215590)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58215564   196  blr x16
0xffff58215568   200  ldr lr, [jssp, #16]
0xffff5821556c   204  ldp xzr, fp, [jssp], #24
0xffff58215570   208  b #-0x60 (addr 0xffff58215510)
0xffff58215574   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58215578   216  d63f03e0       constant
0xffff5821557c   220  d503201f       constant
0xffff58215580   224  58206820       constant
0xffff58215584   228  0000ffff       constant
0xffff58215588   232  58206260       constant
0xffff5821558c   236  0000ffff       constant
0xffff58215590   240  582068e0       constant
0xffff58215594   244  0000ffff       constant
0xffff58215598   248  movz x16, #0x0
0xffff5821559c   252  sub csp, jssp, #0x10 (16)
0xffff582155a0   256  stp fp, lr, [jssp, #-16]!
0xffff582155a4   260  bl #+0x14 (addr 0xffff582155b8)
0xffff582155a8   264  movz x16, #0x8
0xffff582155ac   268  sub csp, jssp, #0x10 (16)
0xffff582155b0   272  stp fp, lr, [jssp, #-16]!
0xffff582155b4   276  bl #+0x4 (addr 0xffff582155b8)
0xffff582155b8   280  movz x17, #0xa00000000
0xffff582155bc   284  sub csp, jssp, #0x10 (16)
0xffff582155c0   288  stp x17, cp, [jssp, #-16]!
0xffff582155c4   292  add fp, jssp, #0x10 (16)
0xffff582155c8   296  ldr x17, pc+24 (addr 0x0000ffff582155e0)    ;; lazy deoptimization bailout 0
0xffff582155cc   300  add x17, x17, x16
0xffff582155d0   304  br x17
0xffff582155d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582155d8   312  d63f03e0       constant
0xffff582155dc   316  d503201f       constant
0xffff582155e0   320  58006000       constant
0xffff582155e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821555c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5821553c  code target (STUB)  (0xffff58206820)
0xffff58215554  code target (STUB)  (0xffff58206260)
0xffff58215560  code target (STUB)  (0xffff582068e0)
0xffff58215574  constant pool (size 36)
0xffff582155c8  runtime entry
0xffff582155d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6456
type = NORMAL
name = BinaryOpICStub(SUB:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff582154a0     0  mov x2, x1
0xffff582154a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff58215598)
0xffff582154a8     8  tbz w0, #0, #+0x34 (addr 0xffff582154dc)
0xffff582154ac    12  ldur x16, [x0, #-1]
0xffff582154b0    16  ldr x17, [x26, #120]
0xffff582154b4    20  cmp x16, x17
0xffff582154b8    24  b.ne #+0xc (addr 0xffff582154c4)
0xffff582154bc    28  ldur d0, [x0, #7]
0xffff582154c0    32  b #+0x20 (addr 0xffff582154e0)
0xffff582154c4    36  ldr x16, [x26, #40]
0xffff582154c8    40  cmp x0, x16
0xffff582154cc    44  b.ne #+0xdc (addr 0xffff582155a8)
0xffff582154d0    48  ldr x3, [x26, #928]
0xffff582154d4    52  ldur d0, [x3, #7]
0xffff582154d8    56  b #+0x8 (addr 0xffff582154e0)
0xffff582154dc    60  scvtf d0, x0, #32
0xffff582154e0    64  scvtf d1, x2, #32
0xffff582154e4    68  fsub d0, d1, d0
0xffff582154e8    72  movz x1, #0x92c0
0xffff582154ec    76  movk x1, #0x16e7, lsl #16
0xffff582154f0    80  ldp x2, x0, [x1]
0xffff582154f4    84  adds x16, x2, #0x10 (16)
0xffff582154f8    88  ccmp x16, x0, #nzCv, lo
0xffff582154fc    92  b.hi #+0x20 (addr 0xffff5821551c)
0xffff58215500    96  str x16, [x1]
0xffff58215504   100  ldr x1, [x26, #120]
0xffff58215508   104  str x1, [x2]
0xffff5821550c   108  orr x2, x2, #0x1
0xffff58215510   112  stur d0, [x2, #7]
0xffff58215514   116  mov x0, x2
0xffff58215518   120  ret
0xffff5821551c   124  sub csp, jssp, #0x10 (16)
0xffff58215520   128  stp fp, lr, [jssp, #-16]!
0xffff58215524   132  movz fp, #0xa00000000
0xffff58215528   136  sub csp, jssp, #0x8 (8)
0xffff5821552c   140  str fp, [jssp, #-8]!
0xffff58215530   144  add fp, jssp, #0x8 (8)
0xffff58215534   148  movz x2, #0x0
0xffff58215538   152  mov x16, lr
0xffff5821553c   156  ldr x17, pc+68 (addr 0x0000ffff58215580)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58215540   160  blr x17
0xffff58215544   164  ldur cp, [fp, #-8]
0xffff58215548   168  movz x0, #0x0
0xffff5821554c   172  movz x1, #0x4b48
0xffff58215550   176  movk x1, #0xe4, lsl #16
0xffff58215554   180  ldr x16, pc+52 (addr 0x0000ffff58215588)    ;; code: STUB, CEntryStub, minor: 5
0xffff58215558   184  blr x16
0xffff5821555c   188  str x0, [jssp, #16]
0xffff58215560   192  ldr x16, pc+48 (addr 0x0000ffff58215590)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58215564   196  blr x16
0xffff58215568   200  ldr lr, [jssp, #16]
0xffff5821556c   204  ldp xzr, fp, [jssp], #24
0xffff58215570   208  b #-0x60 (addr 0xffff58215510)
0xffff58215574   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58215578   216  d63f03e0       constant
0xffff5821557c   220  d503201f       constant
0xffff58215580   224  58206820       constant
0xffff58215584   228  0000ffff       constant
0xffff58215588   232  58206260       constant
0xffff5821558c   236  0000ffff       constant
0xffff58215590   240  582068e0       constant
0xffff58215594   244  0000ffff       constant
0xffff58215598   248  movz x16, #0x0
0xffff5821559c   252  sub csp, jssp, #0x10 (16)
0xffff582155a0   256  stp fp, lr, [jssp, #-16]!
0xffff582155a4   260  bl #+0x14 (addr 0xffff582155b8)
0xffff582155a8   264  movz x16, #0x8
0xffff582155ac   268  sub csp, jssp, #0x10 (16)
0xffff582155b0   272  stp fp, lr, [jssp, #-16]!
0xffff582155b4   276  bl #+0x4 (addr 0xffff582155b8)
0xffff582155b8   280  movz x17, #0xa00000000
0xffff582155bc   284  sub csp, jssp, #0x10 (16)
0xffff582155c0   288  stp x17, cp, [jssp, #-16]!
0xffff582155c4   292  add fp, jssp, #0x10 (16)
0xffff582155c8   296  ldr x17, pc+24 (addr 0x0000ffff582155e0)    ;; lazy deoptimization bailout 0
0xffff582155cc   300  add x17, x17, x16
0xffff582155d0   304  br x17
0xffff582155d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582155d8   312  d63f03e0       constant
0xffff582155dc   316  d503201f       constant
0xffff582155e0   320  58006000       constant
0xffff582155e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821555c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5821553c  code target (STUB)  (0xffff58206820)
0xffff58215554  code target (STUB)  (0xffff58206260)
0xffff58215560  code target (STUB)  (0xffff582068e0)
0xffff58215574  constant pool (size 36)
0xffff582155c8  runtime entry
0xffff582155d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2344
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff58215660     0  mov x2, x1
0xffff58215664     4  tbnz w2, #0, #+0x1c (addr 0xffff58215680)
0xffff58215668     8  mov x3, x0
0xffff5821566c    12  tbnz w3, #0, #+0x24 (addr 0xffff58215690)
0xffff58215670    16  subs x2, x2, x3
0xffff58215674    20  b.vs #+0x2c (addr 0xffff582156a0)
0xffff58215678    24  mov x0, x2
0xffff5821567c    28  ret
0xffff58215680    32  movz x16, #0x0
0xffff58215684    36  sub csp, jssp, #0x10 (16)
0xffff58215688    40  stp fp, lr, [jssp, #-16]!
0xffff5821568c    44  bl #+0x24 (addr 0xffff582156b0)
0xffff58215690    48  movz x16, #0x8
0xffff58215694    52  sub csp, jssp, #0x10 (16)
0xffff58215698    56  stp fp, lr, [jssp, #-16]!
0xffff5821569c    60  bl #+0x14 (addr 0xffff582156b0)
0xffff582156a0    64  movz x16, #0x10
0xffff582156a4    68  sub csp, jssp, #0x10 (16)
0xffff582156a8    72  stp fp, lr, [jssp, #-16]!
0xffff582156ac    76  bl #+0x4 (addr 0xffff582156b0)
0xffff582156b0    80  movz x17, #0xa00000000
0xffff582156b4    84  sub csp, jssp, #0x10 (16)
0xffff582156b8    88  stp x17, cp, [jssp, #-16]!
0xffff582156bc    92  add fp, jssp, #0x10 (16)
0xffff582156c0    96  ldr x17, pc+24 (addr 0x0000ffff582156d8)    ;; lazy deoptimization bailout 0
0xffff582156c4   100  add x17, x17, x16
0xffff582156c8   104  br x17
0xffff582156cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582156d0   112  d63f03e0       constant
0xffff582156d4   116  d503201f       constant
0xffff582156d8   120  58006000       constant
0xffff582156dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582156c0  runtime entry
0xffff582156cc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2344
type = NORMAL
name = BinaryOpICStub(SUB:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff58215660     0  mov x2, x1
0xffff58215664     4  tbnz w2, #0, #+0x1c (addr 0xffff58215680)
0xffff58215668     8  mov x3, x0
0xffff5821566c    12  tbnz w3, #0, #+0x24 (addr 0xffff58215690)
0xffff58215670    16  subs x2, x2, x3
0xffff58215674    20  b.vs #+0x2c (addr 0xffff582156a0)
0xffff58215678    24  mov x0, x2
0xffff5821567c    28  ret
0xffff58215680    32  movz x16, #0x0
0xffff58215684    36  sub csp, jssp, #0x10 (16)
0xffff58215688    40  stp fp, lr, [jssp, #-16]!
0xffff5821568c    44  bl #+0x24 (addr 0xffff582156b0)
0xffff58215690    48  movz x16, #0x8
0xffff58215694    52  sub csp, jssp, #0x10 (16)
0xffff58215698    56  stp fp, lr, [jssp, #-16]!
0xffff5821569c    60  bl #+0x14 (addr 0xffff582156b0)
0xffff582156a0    64  movz x16, #0x10
0xffff582156a4    68  sub csp, jssp, #0x10 (16)
0xffff582156a8    72  stp fp, lr, [jssp, #-16]!
0xffff582156ac    76  bl #+0x4 (addr 0xffff582156b0)
0xffff582156b0    80  movz x17, #0xa00000000
0xffff582156b4    84  sub csp, jssp, #0x10 (16)
0xffff582156b8    88  stp x17, cp, [jssp, #-16]!
0xffff582156bc    92  add fp, jssp, #0x10 (16)
0xffff582156c0    96  ldr x17, pc+24 (addr 0x0000ffff582156d8)    ;; lazy deoptimization bailout 0
0xffff582156c4   100  add x17, x17, x16
0xffff582156c8   104  br x17
0xffff582156cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582156d0   112  d63f03e0       constant
0xffff582156d4   116  d503201f       constant
0xffff582156d8   120  58006000       constant
0xffff582156dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582156c0  runtime entry
0xffff582156cc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4536
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff58215760     0  mov x2, x0
0xffff58215764     4  tbnz w2, #0, #+0xf4 (addr 0xffff58215858)
0xffff58215768     8  tbz w1, #0, #+0x34 (addr 0xffff5821579c)
0xffff5821576c    12  ldur x16, [x1, #-1]
0xffff58215770    16  ldr x17, [x26, #120]
0xffff58215774    20  cmp x16, x17
0xffff58215778    24  b.ne #+0xc (addr 0xffff58215784)
0xffff5821577c    28  ldur d0, [x1, #7]
0xffff58215780    32  b #+0x20 (addr 0xffff582157a0)
0xffff58215784    36  ldr x16, [x26, #40]
0xffff58215788    40  cmp x1, x16
0xffff5821578c    44  b.ne #+0xdc (addr 0xffff58215868)
0xffff58215790    48  ldr x3, [x26, #928]
0xffff58215794    52  ldur d0, [x3, #7]
0xffff58215798    56  b #+0x8 (addr 0xffff582157a0)
0xffff5821579c    60  scvtf d0, x1, #32
0xffff582157a0    64  scvtf d1, x2, #32
0xffff582157a4    68  fsub d0, d0, d1
0xffff582157a8    72  movz x1, #0x92c0
0xffff582157ac    76  movk x1, #0x16e7, lsl #16
0xffff582157b0    80  ldp x2, x0, [x1]
0xffff582157b4    84  adds x16, x2, #0x10 (16)
0xffff582157b8    88  ccmp x16, x0, #nzCv, lo
0xffff582157bc    92  b.hi #+0x20 (addr 0xffff582157dc)
0xffff582157c0    96  str x16, [x1]
0xffff582157c4   100  ldr x1, [x26, #120]
0xffff582157c8   104  str x1, [x2]
0xffff582157cc   108  orr x2, x2, #0x1
0xffff582157d0   112  stur d0, [x2, #7]
0xffff582157d4   116  mov x0, x2
0xffff582157d8   120  ret
0xffff582157dc   124  sub csp, jssp, #0x10 (16)
0xffff582157e0   128  stp fp, lr, [jssp, #-16]!
0xffff582157e4   132  movz fp, #0xa00000000
0xffff582157e8   136  sub csp, jssp, #0x8 (8)
0xffff582157ec   140  str fp, [jssp, #-8]!
0xffff582157f0   144  add fp, jssp, #0x8 (8)
0xffff582157f4   148  movz x2, #0x0
0xffff582157f8   152  mov x16, lr
0xffff582157fc   156  ldr x17, pc+68 (addr 0x0000ffff58215840)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58215800   160  blr x17
0xffff58215804   164  ldur cp, [fp, #-8]
0xffff58215808   168  movz x0, #0x0
0xffff5821580c   172  movz x1, #0x4b48
0xffff58215810   176  movk x1, #0xe4, lsl #16
0xffff58215814   180  ldr x16, pc+52 (addr 0x0000ffff58215848)    ;; code: STUB, CEntryStub, minor: 5
0xffff58215818   184  blr x16
0xffff5821581c   188  str x0, [jssp, #16]
0xffff58215820   192  ldr x16, pc+48 (addr 0x0000ffff58215850)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58215824   196  blr x16
0xffff58215828   200  ldr lr, [jssp, #16]
0xffff5821582c   204  ldp xzr, fp, [jssp], #24
0xffff58215830   208  b #-0x60 (addr 0xffff582157d0)
0xffff58215834   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58215838   216  d63f03e0       constant
0xffff5821583c   220  d503201f       constant
0xffff58215840   224  58206820       constant
0xffff58215844   228  0000ffff       constant
0xffff58215848   232  58206260       constant
0xffff5821584c   236  0000ffff       constant
0xffff58215850   240  582068e0       constant
0xffff58215854   244  0000ffff       constant
0xffff58215858   248  movz x16, #0x0
0xffff5821585c   252  sub csp, jssp, #0x10 (16)
0xffff58215860   256  stp fp, lr, [jssp, #-16]!
0xffff58215864   260  bl #+0x14 (addr 0xffff58215878)
0xffff58215868   264  movz x16, #0x8
0xffff5821586c   268  sub csp, jssp, #0x10 (16)
0xffff58215870   272  stp fp, lr, [jssp, #-16]!
0xffff58215874   276  bl #+0x4 (addr 0xffff58215878)
0xffff58215878   280  movz x17, #0xa00000000
0xffff5821587c   284  sub csp, jssp, #0x10 (16)
0xffff58215880   288  stp x17, cp, [jssp, #-16]!
0xffff58215884   292  add fp, jssp, #0x10 (16)
0xffff58215888   296  ldr x17, pc+24 (addr 0x0000ffff582158a0)    ;; lazy deoptimization bailout 0
0xffff5821588c   300  add x17, x17, x16
0xffff58215890   304  br x17
0xffff58215894   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215898   312  d63f03e0       constant
0xffff5821589c   316  d503201f       constant
0xffff582158a0   320  58006000       constant
0xffff582158a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821581c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582157fc  code target (STUB)  (0xffff58206820)
0xffff58215814  code target (STUB)  (0xffff58206260)
0xffff58215820  code target (STUB)  (0xffff582068e0)
0xffff58215834  constant pool (size 36)
0xffff58215888  runtime entry
0xffff58215894  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4536
type = NORMAL
name = BinaryOpICStub(SUB:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff58215760     0  mov x2, x0
0xffff58215764     4  tbnz w2, #0, #+0xf4 (addr 0xffff58215858)
0xffff58215768     8  tbz w1, #0, #+0x34 (addr 0xffff5821579c)
0xffff5821576c    12  ldur x16, [x1, #-1]
0xffff58215770    16  ldr x17, [x26, #120]
0xffff58215774    20  cmp x16, x17
0xffff58215778    24  b.ne #+0xc (addr 0xffff58215784)
0xffff5821577c    28  ldur d0, [x1, #7]
0xffff58215780    32  b #+0x20 (addr 0xffff582157a0)
0xffff58215784    36  ldr x16, [x26, #40]
0xffff58215788    40  cmp x1, x16
0xffff5821578c    44  b.ne #+0xdc (addr 0xffff58215868)
0xffff58215790    48  ldr x3, [x26, #928]
0xffff58215794    52  ldur d0, [x3, #7]
0xffff58215798    56  b #+0x8 (addr 0xffff582157a0)
0xffff5821579c    60  scvtf d0, x1, #32
0xffff582157a0    64  scvtf d1, x2, #32
0xffff582157a4    68  fsub d0, d0, d1
0xffff582157a8    72  movz x1, #0x92c0
0xffff582157ac    76  movk x1, #0x16e7, lsl #16
0xffff582157b0    80  ldp x2, x0, [x1]
0xffff582157b4    84  adds x16, x2, #0x10 (16)
0xffff582157b8    88  ccmp x16, x0, #nzCv, lo
0xffff582157bc    92  b.hi #+0x20 (addr 0xffff582157dc)
0xffff582157c0    96  str x16, [x1]
0xffff582157c4   100  ldr x1, [x26, #120]
0xffff582157c8   104  str x1, [x2]
0xffff582157cc   108  orr x2, x2, #0x1
0xffff582157d0   112  stur d0, [x2, #7]
0xffff582157d4   116  mov x0, x2
0xffff582157d8   120  ret
0xffff582157dc   124  sub csp, jssp, #0x10 (16)
0xffff582157e0   128  stp fp, lr, [jssp, #-16]!
0xffff582157e4   132  movz fp, #0xa00000000
0xffff582157e8   136  sub csp, jssp, #0x8 (8)
0xffff582157ec   140  str fp, [jssp, #-8]!
0xffff582157f0   144  add fp, jssp, #0x8 (8)
0xffff582157f4   148  movz x2, #0x0
0xffff582157f8   152  mov x16, lr
0xffff582157fc   156  ldr x17, pc+68 (addr 0x0000ffff58215840)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58215800   160  blr x17
0xffff58215804   164  ldur cp, [fp, #-8]
0xffff58215808   168  movz x0, #0x0
0xffff5821580c   172  movz x1, #0x4b48
0xffff58215810   176  movk x1, #0xe4, lsl #16
0xffff58215814   180  ldr x16, pc+52 (addr 0x0000ffff58215848)    ;; code: STUB, CEntryStub, minor: 5
0xffff58215818   184  blr x16
0xffff5821581c   188  str x0, [jssp, #16]
0xffff58215820   192  ldr x16, pc+48 (addr 0x0000ffff58215850)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58215824   196  blr x16
0xffff58215828   200  ldr lr, [jssp, #16]
0xffff5821582c   204  ldp xzr, fp, [jssp], #24
0xffff58215830   208  b #-0x60 (addr 0xffff582157d0)
0xffff58215834   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58215838   216  d63f03e0       constant
0xffff5821583c   220  d503201f       constant
0xffff58215840   224  58206820       constant
0xffff58215844   228  0000ffff       constant
0xffff58215848   232  58206260       constant
0xffff5821584c   236  0000ffff       constant
0xffff58215850   240  582068e0       constant
0xffff58215854   244  0000ffff       constant
0xffff58215858   248  movz x16, #0x0
0xffff5821585c   252  sub csp, jssp, #0x10 (16)
0xffff58215860   256  stp fp, lr, [jssp, #-16]!
0xffff58215864   260  bl #+0x14 (addr 0xffff58215878)
0xffff58215868   264  movz x16, #0x8
0xffff5821586c   268  sub csp, jssp, #0x10 (16)
0xffff58215870   272  stp fp, lr, [jssp, #-16]!
0xffff58215874   276  bl #+0x4 (addr 0xffff58215878)
0xffff58215878   280  movz x17, #0xa00000000
0xffff5821587c   284  sub csp, jssp, #0x10 (16)
0xffff58215880   288  stp x17, cp, [jssp, #-16]!
0xffff58215884   292  add fp, jssp, #0x10 (16)
0xffff58215888   296  ldr x17, pc+24 (addr 0x0000ffff582158a0)    ;; lazy deoptimization bailout 0
0xffff5821588c   300  add x17, x17, x16
0xffff58215890   304  br x17
0xffff58215894   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215898   312  d63f03e0       constant
0xffff5821589c   316  d503201f       constant
0xffff582158a0   320  58006000       constant
0xffff582158a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff5821581c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582157fc  code target (STUB)  (0xffff58206820)
0xffff58215814  code target (STUB)  (0xffff58206260)
0xffff58215820  code target (STUB)  (0xffff582068e0)
0xffff58215834  constant pool (size 36)
0xffff58215888  runtime entry
0xffff58215894  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6584
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff58215920     0  tbz w1, #0, #+0x34 (addr 0xffff58215954)
0xffff58215924     4  ldur x16, [x1, #-1]
0xffff58215928     8  ldr x17, [x26, #120]
0xffff5821592c    12  cmp x16, x17
0xffff58215930    16  b.ne #+0xc (addr 0xffff5821593c)
0xffff58215934    20  ldur d0, [x1, #7]
0xffff58215938    24  b #+0x20 (addr 0xffff58215958)
0xffff5821593c    28  ldr x16, [x26, #40]
0xffff58215940    32  cmp x1, x16
0xffff58215944    36  b.ne #+0xfc (addr 0xffff58215a40)
0xffff58215948    40  ldr x2, [x26, #928]
0xffff5821594c    44  ldur d0, [x2, #7]
0xffff58215950    48  b #+0x8 (addr 0xffff58215958)
0xffff58215954    52  scvtf d0, x1, #32
0xffff58215958    56  tbz w0, #0, #+0x34 (addr 0xffff5821598c)
0xffff5821595c    60  ldur x16, [x0, #-1]
0xffff58215960    64  ldr x17, [x26, #120]
0xffff58215964    68  cmp x16, x17
0xffff58215968    72  b.ne #+0xc (addr 0xffff58215974)
0xffff5821596c    76  ldur d1, [x0, #7]
0xffff58215970    80  b #+0x20 (addr 0xffff58215990)
0xffff58215974    84  ldr x16, [x26, #40]
0xffff58215978    88  cmp x0, x16
0xffff5821597c    92  b.ne #+0xd4 (addr 0xffff58215a50)
0xffff58215980    96  ldr x2, [x26, #928]
0xffff58215984   100  ldur d1, [x2, #7]
0xffff58215988   104  b #+0x8 (addr 0xffff58215990)
0xffff5821598c   108  scvtf d1, x0, #32
0xffff58215990   112  fsub d0, d0, d1
0xffff58215994   116  movz x1, #0x92c0
0xffff58215998   120  movk x1, #0x16e7, lsl #16
0xffff5821599c   124  ldp x2, x0, [x1]
0xffff582159a0   128  adds x16, x2, #0x10 (16)
0xffff582159a4   132  ccmp x16, x0, #nzCv, lo
0xffff582159a8   136  b.hi #+0x20 (addr 0xffff582159c8)
0xffff582159ac   140  str x16, [x1]
0xffff582159b0   144  ldr x1, [x26, #120]
0xffff582159b4   148  str x1, [x2]
0xffff582159b8   152  orr x2, x2, #0x1
0xffff582159bc   156  stur d0, [x2, #7]
0xffff582159c0   160  mov x0, x2
0xffff582159c4   164  ret
0xffff582159c8   168  sub csp, jssp, #0x10 (16)
0xffff582159cc   172  stp fp, lr, [jssp, #-16]!
0xffff582159d0   176  movz fp, #0xa00000000
0xffff582159d4   180  sub csp, jssp, #0x8 (8)
0xffff582159d8   184  str fp, [jssp, #-8]!
0xffff582159dc   188  add fp, jssp, #0x8 (8)
0xffff582159e0   192  movz x2, #0x0
0xffff582159e4   196  mov x16, lr
0xffff582159e8   200  ldr x17, pc+64 (addr 0x0000ffff58215a28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582159ec   204  blr x17
0xffff582159f0   208  ldur cp, [fp, #-8]
0xffff582159f4   212  movz x0, #0x0
0xffff582159f8   216  movz x1, #0x4b48
0xffff582159fc   220  movk x1, #0xe4, lsl #16
0xffff58215a00   224  ldr x16, pc+48 (addr 0x0000ffff58215a30)    ;; code: STUB, CEntryStub, minor: 5
0xffff58215a04   228  blr x16
0xffff58215a08   232  str x0, [jssp, #16]
0xffff58215a0c   236  ldr x16, pc+44 (addr 0x0000ffff58215a38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58215a10   240  blr x16
0xffff58215a14   244  ldr lr, [jssp, #16]
0xffff58215a18   248  ldp xzr, fp, [jssp], #24
0xffff58215a1c   252  b #-0x60 (addr 0xffff582159bc)
0xffff58215a20   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58215a24   260  d63f03e0       constant
0xffff58215a28   264  58206820       constant
0xffff58215a2c   268  0000ffff       constant
0xffff58215a30   272  58206260       constant
0xffff58215a34   276  0000ffff       constant
0xffff58215a38   280  582068e0       constant
0xffff58215a3c   284  0000ffff       constant
0xffff58215a40   288  movz x16, #0x0
0xffff58215a44   292  sub csp, jssp, #0x10 (16)
0xffff58215a48   296  stp fp, lr, [jssp, #-16]!
0xffff58215a4c   300  bl #+0x14 (addr 0xffff58215a60)
0xffff58215a50   304  movz x16, #0x8
0xffff58215a54   308  sub csp, jssp, #0x10 (16)
0xffff58215a58   312  stp fp, lr, [jssp, #-16]!
0xffff58215a5c   316  bl #+0x4 (addr 0xffff58215a60)
0xffff58215a60   320  movz x17, #0xa00000000
0xffff58215a64   324  sub csp, jssp, #0x10 (16)
0xffff58215a68   328  stp x17, cp, [jssp, #-16]!
0xffff58215a6c   332  add fp, jssp, #0x10 (16)
0xffff58215a70   336  ldr x17, pc+24 (addr 0x0000ffff58215a88)    ;; lazy deoptimization bailout 0
0xffff58215a74   340  add x17, x17, x16
0xffff58215a78   344  br x17
0xffff58215a7c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215a80   352  d63f03e0       constant
0xffff58215a84   356  d503201f       constant
0xffff58215a88   360  58006000       constant
0xffff58215a8c   364  0000ffff       constant


Safepoints (size = 21)
0xffff58215a08   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582159e8  code target (STUB)  (0xffff58206820)
0xffff58215a00  code target (STUB)  (0xffff58206260)
0xffff58215a0c  code target (STUB)  (0xffff582068e0)
0xffff58215a20  constant pool (size 32)
0xffff58215a70  runtime entry
0xffff58215a7c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6584
type = NORMAL
name = BinaryOpICStub(SUB:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff58215920     0  tbz w1, #0, #+0x34 (addr 0xffff58215954)
0xffff58215924     4  ldur x16, [x1, #-1]
0xffff58215928     8  ldr x17, [x26, #120]
0xffff5821592c    12  cmp x16, x17
0xffff58215930    16  b.ne #+0xc (addr 0xffff5821593c)
0xffff58215934    20  ldur d0, [x1, #7]
0xffff58215938    24  b #+0x20 (addr 0xffff58215958)
0xffff5821593c    28  ldr x16, [x26, #40]
0xffff58215940    32  cmp x1, x16
0xffff58215944    36  b.ne #+0xfc (addr 0xffff58215a40)
0xffff58215948    40  ldr x2, [x26, #928]
0xffff5821594c    44  ldur d0, [x2, #7]
0xffff58215950    48  b #+0x8 (addr 0xffff58215958)
0xffff58215954    52  scvtf d0, x1, #32
0xffff58215958    56  tbz w0, #0, #+0x34 (addr 0xffff5821598c)
0xffff5821595c    60  ldur x16, [x0, #-1]
0xffff58215960    64  ldr x17, [x26, #120]
0xffff58215964    68  cmp x16, x17
0xffff58215968    72  b.ne #+0xc (addr 0xffff58215974)
0xffff5821596c    76  ldur d1, [x0, #7]
0xffff58215970    80  b #+0x20 (addr 0xffff58215990)
0xffff58215974    84  ldr x16, [x26, #40]
0xffff58215978    88  cmp x0, x16
0xffff5821597c    92  b.ne #+0xd4 (addr 0xffff58215a50)
0xffff58215980    96  ldr x2, [x26, #928]
0xffff58215984   100  ldur d1, [x2, #7]
0xffff58215988   104  b #+0x8 (addr 0xffff58215990)
0xffff5821598c   108  scvtf d1, x0, #32
0xffff58215990   112  fsub d0, d0, d1
0xffff58215994   116  movz x1, #0x92c0
0xffff58215998   120  movk x1, #0x16e7, lsl #16
0xffff5821599c   124  ldp x2, x0, [x1]
0xffff582159a0   128  adds x16, x2, #0x10 (16)
0xffff582159a4   132  ccmp x16, x0, #nzCv, lo
0xffff582159a8   136  b.hi #+0x20 (addr 0xffff582159c8)
0xffff582159ac   140  str x16, [x1]
0xffff582159b0   144  ldr x1, [x26, #120]
0xffff582159b4   148  str x1, [x2]
0xffff582159b8   152  orr x2, x2, #0x1
0xffff582159bc   156  stur d0, [x2, #7]
0xffff582159c0   160  mov x0, x2
0xffff582159c4   164  ret
0xffff582159c8   168  sub csp, jssp, #0x10 (16)
0xffff582159cc   172  stp fp, lr, [jssp, #-16]!
0xffff582159d0   176  movz fp, #0xa00000000
0xffff582159d4   180  sub csp, jssp, #0x8 (8)
0xffff582159d8   184  str fp, [jssp, #-8]!
0xffff582159dc   188  add fp, jssp, #0x8 (8)
0xffff582159e0   192  movz x2, #0x0
0xffff582159e4   196  mov x16, lr
0xffff582159e8   200  ldr x17, pc+64 (addr 0x0000ffff58215a28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582159ec   204  blr x17
0xffff582159f0   208  ldur cp, [fp, #-8]
0xffff582159f4   212  movz x0, #0x0
0xffff582159f8   216  movz x1, #0x4b48
0xffff582159fc   220  movk x1, #0xe4, lsl #16
0xffff58215a00   224  ldr x16, pc+48 (addr 0x0000ffff58215a30)    ;; code: STUB, CEntryStub, minor: 5
0xffff58215a04   228  blr x16
0xffff58215a08   232  str x0, [jssp, #16]
0xffff58215a0c   236  ldr x16, pc+44 (addr 0x0000ffff58215a38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58215a10   240  blr x16
0xffff58215a14   244  ldr lr, [jssp, #16]
0xffff58215a18   248  ldp xzr, fp, [jssp], #24
0xffff58215a1c   252  b #-0x60 (addr 0xffff582159bc)
0xffff58215a20   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58215a24   260  d63f03e0       constant
0xffff58215a28   264  58206820       constant
0xffff58215a2c   268  0000ffff       constant
0xffff58215a30   272  58206260       constant
0xffff58215a34   276  0000ffff       constant
0xffff58215a38   280  582068e0       constant
0xffff58215a3c   284  0000ffff       constant
0xffff58215a40   288  movz x16, #0x0
0xffff58215a44   292  sub csp, jssp, #0x10 (16)
0xffff58215a48   296  stp fp, lr, [jssp, #-16]!
0xffff58215a4c   300  bl #+0x14 (addr 0xffff58215a60)
0xffff58215a50   304  movz x16, #0x8
0xffff58215a54   308  sub csp, jssp, #0x10 (16)
0xffff58215a58   312  stp fp, lr, [jssp, #-16]!
0xffff58215a5c   316  bl #+0x4 (addr 0xffff58215a60)
0xffff58215a60   320  movz x17, #0xa00000000
0xffff58215a64   324  sub csp, jssp, #0x10 (16)
0xffff58215a68   328  stp x17, cp, [jssp, #-16]!
0xffff58215a6c   332  add fp, jssp, #0x10 (16)
0xffff58215a70   336  ldr x17, pc+24 (addr 0x0000ffff58215a88)    ;; lazy deoptimization bailout 0
0xffff58215a74   340  add x17, x17, x16
0xffff58215a78   344  br x17
0xffff58215a7c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215a80   352  d63f03e0       constant
0xffff58215a84   356  d503201f       constant
0xffff58215a88   360  58006000       constant
0xffff58215a8c   364  0000ffff       constant


Safepoints (size = 21)
0xffff58215a08   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582159e8  code target (STUB)  (0xffff58206820)
0xffff58215a00  code target (STUB)  (0xffff58206260)
0xffff58215a0c  code target (STUB)  (0xffff582068e0)
0xffff58215a20  constant pool (size 32)
0xffff58215a70  runtime entry
0xffff58215a7c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2488
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff58215b20     0  mov x2, x0
0xffff58215b24     4  tbnz w2, #0, #+0xf4 (addr 0xffff58215c18)
0xffff58215b28     8  tbz w1, #0, #+0x34 (addr 0xffff58215b5c)
0xffff58215b2c    12  ldur x16, [x1, #-1]
0xffff58215b30    16  ldr x17, [x26, #120]
0xffff58215b34    20  cmp x16, x17
0xffff58215b38    24  b.ne #+0xc (addr 0xffff58215b44)
0xffff58215b3c    28  ldur d0, [x1, #7]
0xffff58215b40    32  b #+0x20 (addr 0xffff58215b60)
0xffff58215b44    36  ldr x16, [x26, #40]
0xffff58215b48    40  cmp x1, x16
0xffff58215b4c    44  b.ne #+0xdc (addr 0xffff58215c28)
0xffff58215b50    48  ldr x3, [x26, #928]
0xffff58215b54    52  ldur d0, [x3, #7]
0xffff58215b58    56  b #+0x8 (addr 0xffff58215b60)
0xffff58215b5c    60  scvtf d0, x1, #32
0xffff58215b60    64  scvtf d1, x2, #32
0xffff58215b64    68  fsub d0, d0, d1
0xffff58215b68    72  movz x1, #0x92c0
0xffff58215b6c    76  movk x1, #0x16e7, lsl #16
0xffff58215b70    80  ldp x2, x0, [x1]
0xffff58215b74    84  adds x16, x2, #0x10 (16)
0xffff58215b78    88  ccmp x16, x0, #nzCv, lo
0xffff58215b7c    92  b.hi #+0x20 (addr 0xffff58215b9c)
0xffff58215b80    96  str x16, [x1]
0xffff58215b84   100  ldr x1, [x26, #120]
0xffff58215b88   104  str x1, [x2]
0xffff58215b8c   108  orr x2, x2, #0x1
0xffff58215b90   112  stur d0, [x2, #7]
0xffff58215b94   116  mov x0, x2
0xffff58215b98   120  ret
0xffff58215b9c   124  sub csp, jssp, #0x10 (16)
0xffff58215ba0   128  stp fp, lr, [jssp, #-16]!
0xffff58215ba4   132  movz fp, #0xa00000000
0xffff58215ba8   136  sub csp, jssp, #0x8 (8)
0xffff58215bac   140  str fp, [jssp, #-8]!
0xffff58215bb0   144  add fp, jssp, #0x8 (8)
0xffff58215bb4   148  movz x2, #0x0
0xffff58215bb8   152  mov x16, lr
0xffff58215bbc   156  ldr x17, pc+68 (addr 0x0000ffff58215c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58215bc0   160  blr x17
0xffff58215bc4   164  ldur cp, [fp, #-8]
0xffff58215bc8   168  movz x0, #0x0
0xffff58215bcc   172  movz x1, #0x4b48
0xffff58215bd0   176  movk x1, #0xe4, lsl #16
0xffff58215bd4   180  ldr x16, pc+52 (addr 0x0000ffff58215c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff58215bd8   184  blr x16
0xffff58215bdc   188  str x0, [jssp, #16]
0xffff58215be0   192  ldr x16, pc+48 (addr 0x0000ffff58215c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58215be4   196  blr x16
0xffff58215be8   200  ldr lr, [jssp, #16]
0xffff58215bec   204  ldp xzr, fp, [jssp], #24
0xffff58215bf0   208  b #-0x60 (addr 0xffff58215b90)
0xffff58215bf4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58215bf8   216  d63f03e0       constant
0xffff58215bfc   220  d503201f       constant
0xffff58215c00   224  58206820       constant
0xffff58215c04   228  0000ffff       constant
0xffff58215c08   232  58206260       constant
0xffff58215c0c   236  0000ffff       constant
0xffff58215c10   240  582068e0       constant
0xffff58215c14   244  0000ffff       constant
0xffff58215c18   248  movz x16, #0x0
0xffff58215c1c   252  sub csp, jssp, #0x10 (16)
0xffff58215c20   256  stp fp, lr, [jssp, #-16]!
0xffff58215c24   260  bl #+0x14 (addr 0xffff58215c38)
0xffff58215c28   264  movz x16, #0x8
0xffff58215c2c   268  sub csp, jssp, #0x10 (16)
0xffff58215c30   272  stp fp, lr, [jssp, #-16]!
0xffff58215c34   276  bl #+0x4 (addr 0xffff58215c38)
0xffff58215c38   280  movz x17, #0xa00000000
0xffff58215c3c   284  sub csp, jssp, #0x10 (16)
0xffff58215c40   288  stp x17, cp, [jssp, #-16]!
0xffff58215c44   292  add fp, jssp, #0x10 (16)
0xffff58215c48   296  ldr x17, pc+24 (addr 0x0000ffff58215c60)    ;; lazy deoptimization bailout 0
0xffff58215c4c   300  add x17, x17, x16
0xffff58215c50   304  br x17
0xffff58215c54   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215c58   312  d63f03e0       constant
0xffff58215c5c   316  d503201f       constant
0xffff58215c60   320  58006000       constant
0xffff58215c64   324  0000ffff       constant


Safepoints (size = 21)
0xffff58215bdc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58215bbc  code target (STUB)  (0xffff58206820)
0xffff58215bd4  code target (STUB)  (0xffff58206260)
0xffff58215be0  code target (STUB)  (0xffff582068e0)
0xffff58215bf4  constant pool (size 36)
0xffff58215c48  runtime entry
0xffff58215c54  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2488
type = NORMAL
name = BinaryOpICStub(SUB:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff58215b20     0  mov x2, x0
0xffff58215b24     4  tbnz w2, #0, #+0xf4 (addr 0xffff58215c18)
0xffff58215b28     8  tbz w1, #0, #+0x34 (addr 0xffff58215b5c)
0xffff58215b2c    12  ldur x16, [x1, #-1]
0xffff58215b30    16  ldr x17, [x26, #120]
0xffff58215b34    20  cmp x16, x17
0xffff58215b38    24  b.ne #+0xc (addr 0xffff58215b44)
0xffff58215b3c    28  ldur d0, [x1, #7]
0xffff58215b40    32  b #+0x20 (addr 0xffff58215b60)
0xffff58215b44    36  ldr x16, [x26, #40]
0xffff58215b48    40  cmp x1, x16
0xffff58215b4c    44  b.ne #+0xdc (addr 0xffff58215c28)
0xffff58215b50    48  ldr x3, [x26, #928]
0xffff58215b54    52  ldur d0, [x3, #7]
0xffff58215b58    56  b #+0x8 (addr 0xffff58215b60)
0xffff58215b5c    60  scvtf d0, x1, #32
0xffff58215b60    64  scvtf d1, x2, #32
0xffff58215b64    68  fsub d0, d0, d1
0xffff58215b68    72  movz x1, #0x92c0
0xffff58215b6c    76  movk x1, #0x16e7, lsl #16
0xffff58215b70    80  ldp x2, x0, [x1]
0xffff58215b74    84  adds x16, x2, #0x10 (16)
0xffff58215b78    88  ccmp x16, x0, #nzCv, lo
0xffff58215b7c    92  b.hi #+0x20 (addr 0xffff58215b9c)
0xffff58215b80    96  str x16, [x1]
0xffff58215b84   100  ldr x1, [x26, #120]
0xffff58215b88   104  str x1, [x2]
0xffff58215b8c   108  orr x2, x2, #0x1
0xffff58215b90   112  stur d0, [x2, #7]
0xffff58215b94   116  mov x0, x2
0xffff58215b98   120  ret
0xffff58215b9c   124  sub csp, jssp, #0x10 (16)
0xffff58215ba0   128  stp fp, lr, [jssp, #-16]!
0xffff58215ba4   132  movz fp, #0xa00000000
0xffff58215ba8   136  sub csp, jssp, #0x8 (8)
0xffff58215bac   140  str fp, [jssp, #-8]!
0xffff58215bb0   144  add fp, jssp, #0x8 (8)
0xffff58215bb4   148  movz x2, #0x0
0xffff58215bb8   152  mov x16, lr
0xffff58215bbc   156  ldr x17, pc+68 (addr 0x0000ffff58215c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58215bc0   160  blr x17
0xffff58215bc4   164  ldur cp, [fp, #-8]
0xffff58215bc8   168  movz x0, #0x0
0xffff58215bcc   172  movz x1, #0x4b48
0xffff58215bd0   176  movk x1, #0xe4, lsl #16
0xffff58215bd4   180  ldr x16, pc+52 (addr 0x0000ffff58215c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff58215bd8   184  blr x16
0xffff58215bdc   188  str x0, [jssp, #16]
0xffff58215be0   192  ldr x16, pc+48 (addr 0x0000ffff58215c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58215be4   196  blr x16
0xffff58215be8   200  ldr lr, [jssp, #16]
0xffff58215bec   204  ldp xzr, fp, [jssp], #24
0xffff58215bf0   208  b #-0x60 (addr 0xffff58215b90)
0xffff58215bf4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58215bf8   216  d63f03e0       constant
0xffff58215bfc   220  d503201f       constant
0xffff58215c00   224  58206820       constant
0xffff58215c04   228  0000ffff       constant
0xffff58215c08   232  58206260       constant
0xffff58215c0c   236  0000ffff       constant
0xffff58215c10   240  582068e0       constant
0xffff58215c14   244  0000ffff       constant
0xffff58215c18   248  movz x16, #0x0
0xffff58215c1c   252  sub csp, jssp, #0x10 (16)
0xffff58215c20   256  stp fp, lr, [jssp, #-16]!
0xffff58215c24   260  bl #+0x14 (addr 0xffff58215c38)
0xffff58215c28   264  movz x16, #0x8
0xffff58215c2c   268  sub csp, jssp, #0x10 (16)
0xffff58215c30   272  stp fp, lr, [jssp, #-16]!
0xffff58215c34   276  bl #+0x4 (addr 0xffff58215c38)
0xffff58215c38   280  movz x17, #0xa00000000
0xffff58215c3c   284  sub csp, jssp, #0x10 (16)
0xffff58215c40   288  stp x17, cp, [jssp, #-16]!
0xffff58215c44   292  add fp, jssp, #0x10 (16)
0xffff58215c48   296  ldr x17, pc+24 (addr 0x0000ffff58215c60)    ;; lazy deoptimization bailout 0
0xffff58215c4c   300  add x17, x17, x16
0xffff58215c50   304  br x17
0xffff58215c54   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215c58   312  d63f03e0       constant
0xffff58215c5c   316  d503201f       constant
0xffff58215c60   320  58006000       constant
0xffff58215c64   324  0000ffff       constant


Safepoints (size = 21)
0xffff58215bdc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58215bbc  code target (STUB)  (0xffff58206820)
0xffff58215bd4  code target (STUB)  (0xffff58206260)
0xffff58215be0  code target (STUB)  (0xffff582068e0)
0xffff58215bf4  constant pool (size 36)
0xffff58215c48  runtime entry
0xffff58215c54  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4264
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff58215ce0     0  mov x2, x1
0xffff58215ce4     4  tbnz w2, #0, #+0x1c (addr 0xffff58215d00)
0xffff58215ce8     8  mov x3, x0
0xffff58215cec    12  tbnz w3, #0, #+0x24 (addr 0xffff58215d10)
0xffff58215cf0    16  subs x2, x2, x3
0xffff58215cf4    20  b.vs #+0x2c (addr 0xffff58215d20)
0xffff58215cf8    24  mov x0, x2
0xffff58215cfc    28  ret
0xffff58215d00    32  movz x16, #0x0
0xffff58215d04    36  sub csp, jssp, #0x10 (16)
0xffff58215d08    40  stp fp, lr, [jssp, #-16]!
0xffff58215d0c    44  bl #+0x24 (addr 0xffff58215d30)
0xffff58215d10    48  movz x16, #0x8
0xffff58215d14    52  sub csp, jssp, #0x10 (16)
0xffff58215d18    56  stp fp, lr, [jssp, #-16]!
0xffff58215d1c    60  bl #+0x14 (addr 0xffff58215d30)
0xffff58215d20    64  movz x16, #0x10
0xffff58215d24    68  sub csp, jssp, #0x10 (16)
0xffff58215d28    72  stp fp, lr, [jssp, #-16]!
0xffff58215d2c    76  bl #+0x4 (addr 0xffff58215d30)
0xffff58215d30    80  movz x17, #0xa00000000
0xffff58215d34    84  sub csp, jssp, #0x10 (16)
0xffff58215d38    88  stp x17, cp, [jssp, #-16]!
0xffff58215d3c    92  add fp, jssp, #0x10 (16)
0xffff58215d40    96  ldr x17, pc+24 (addr 0x0000ffff58215d58)    ;; lazy deoptimization bailout 0
0xffff58215d44   100  add x17, x17, x16
0xffff58215d48   104  br x17
0xffff58215d4c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215d50   112  d63f03e0       constant
0xffff58215d54   116  d503201f       constant
0xffff58215d58   120  58006000       constant
0xffff58215d5c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58215d40  runtime entry
0xffff58215d4c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4264
type = NORMAL
name = BinaryOpICStub(SUB:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff58215ce0     0  mov x2, x1
0xffff58215ce4     4  tbnz w2, #0, #+0x1c (addr 0xffff58215d00)
0xffff58215ce8     8  mov x3, x0
0xffff58215cec    12  tbnz w3, #0, #+0x24 (addr 0xffff58215d10)
0xffff58215cf0    16  subs x2, x2, x3
0xffff58215cf4    20  b.vs #+0x2c (addr 0xffff58215d20)
0xffff58215cf8    24  mov x0, x2
0xffff58215cfc    28  ret
0xffff58215d00    32  movz x16, #0x0
0xffff58215d04    36  sub csp, jssp, #0x10 (16)
0xffff58215d08    40  stp fp, lr, [jssp, #-16]!
0xffff58215d0c    44  bl #+0x24 (addr 0xffff58215d30)
0xffff58215d10    48  movz x16, #0x8
0xffff58215d14    52  sub csp, jssp, #0x10 (16)
0xffff58215d18    56  stp fp, lr, [jssp, #-16]!
0xffff58215d1c    60  bl #+0x14 (addr 0xffff58215d30)
0xffff58215d20    64  movz x16, #0x10
0xffff58215d24    68  sub csp, jssp, #0x10 (16)
0xffff58215d28    72  stp fp, lr, [jssp, #-16]!
0xffff58215d2c    76  bl #+0x4 (addr 0xffff58215d30)
0xffff58215d30    80  movz x17, #0xa00000000
0xffff58215d34    84  sub csp, jssp, #0x10 (16)
0xffff58215d38    88  stp x17, cp, [jssp, #-16]!
0xffff58215d3c    92  add fp, jssp, #0x10 (16)
0xffff58215d40    96  ldr x17, pc+24 (addr 0x0000ffff58215d58)    ;; lazy deoptimization bailout 0
0xffff58215d44   100  add x17, x17, x16
0xffff58215d48   104  br x17
0xffff58215d4c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215d50   112  d63f03e0       constant
0xffff58215d54   116  d503201f       constant
0xffff58215d58   120  58006000       constant
0xffff58215d5c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58215d40  runtime entry
0xffff58215d4c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6328
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff58215de0     0  mov x2, x1
0xffff58215de4     4  tbnz w2, #0, #+0xf4 (addr 0xffff58215ed8)
0xffff58215de8     8  tbz w0, #0, #+0x34 (addr 0xffff58215e1c)
0xffff58215dec    12  ldur x16, [x0, #-1]
0xffff58215df0    16  ldr x17, [x26, #120]
0xffff58215df4    20  cmp x16, x17
0xffff58215df8    24  b.ne #+0xc (addr 0xffff58215e04)
0xffff58215dfc    28  ldur d0, [x0, #7]
0xffff58215e00    32  b #+0x20 (addr 0xffff58215e20)
0xffff58215e04    36  ldr x16, [x26, #40]
0xffff58215e08    40  cmp x0, x16
0xffff58215e0c    44  b.ne #+0xdc (addr 0xffff58215ee8)
0xffff58215e10    48  ldr x3, [x26, #928]
0xffff58215e14    52  ldur d0, [x3, #7]
0xffff58215e18    56  b #+0x8 (addr 0xffff58215e20)
0xffff58215e1c    60  scvtf d0, x0, #32
0xffff58215e20    64  scvtf d1, x2, #32
0xffff58215e24    68  fsub d0, d1, d0
0xffff58215e28    72  movz x1, #0x92c0
0xffff58215e2c    76  movk x1, #0x16e7, lsl #16
0xffff58215e30    80  ldp x2, x0, [x1]
0xffff58215e34    84  adds x16, x2, #0x10 (16)
0xffff58215e38    88  ccmp x16, x0, #nzCv, lo
0xffff58215e3c    92  b.hi #+0x20 (addr 0xffff58215e5c)
0xffff58215e40    96  str x16, [x1]
0xffff58215e44   100  ldr x1, [x26, #120]
0xffff58215e48   104  str x1, [x2]
0xffff58215e4c   108  orr x2, x2, #0x1
0xffff58215e50   112  stur d0, [x2, #7]
0xffff58215e54   116  mov x0, x2
0xffff58215e58   120  ret
0xffff58215e5c   124  sub csp, jssp, #0x10 (16)
0xffff58215e60   128  stp fp, lr, [jssp, #-16]!
0xffff58215e64   132  movz fp, #0xa00000000
0xffff58215e68   136  sub csp, jssp, #0x8 (8)
0xffff58215e6c   140  str fp, [jssp, #-8]!
0xffff58215e70   144  add fp, jssp, #0x8 (8)
0xffff58215e74   148  movz x2, #0x0
0xffff58215e78   152  mov x16, lr
0xffff58215e7c   156  ldr x17, pc+68 (addr 0x0000ffff58215ec0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58215e80   160  blr x17
0xffff58215e84   164  ldur cp, [fp, #-8]
0xffff58215e88   168  movz x0, #0x0
0xffff58215e8c   172  movz x1, #0x4b48
0xffff58215e90   176  movk x1, #0xe4, lsl #16
0xffff58215e94   180  ldr x16, pc+52 (addr 0x0000ffff58215ec8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58215e98   184  blr x16
0xffff58215e9c   188  str x0, [jssp, #16]
0xffff58215ea0   192  ldr x16, pc+48 (addr 0x0000ffff58215ed0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58215ea4   196  blr x16
0xffff58215ea8   200  ldr lr, [jssp, #16]
0xffff58215eac   204  ldp xzr, fp, [jssp], #24
0xffff58215eb0   208  b #-0x60 (addr 0xffff58215e50)
0xffff58215eb4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58215eb8   216  d63f03e0       constant
0xffff58215ebc   220  d503201f       constant
0xffff58215ec0   224  58206820       constant
0xffff58215ec4   228  0000ffff       constant
0xffff58215ec8   232  58206260       constant
0xffff58215ecc   236  0000ffff       constant
0xffff58215ed0   240  582068e0       constant
0xffff58215ed4   244  0000ffff       constant
0xffff58215ed8   248  movz x16, #0x0
0xffff58215edc   252  sub csp, jssp, #0x10 (16)
0xffff58215ee0   256  stp fp, lr, [jssp, #-16]!
0xffff58215ee4   260  bl #+0x14 (addr 0xffff58215ef8)
0xffff58215ee8   264  movz x16, #0x8
0xffff58215eec   268  sub csp, jssp, #0x10 (16)
0xffff58215ef0   272  stp fp, lr, [jssp, #-16]!
0xffff58215ef4   276  bl #+0x4 (addr 0xffff58215ef8)
0xffff58215ef8   280  movz x17, #0xa00000000
0xffff58215efc   284  sub csp, jssp, #0x10 (16)
0xffff58215f00   288  stp x17, cp, [jssp, #-16]!
0xffff58215f04   292  add fp, jssp, #0x10 (16)
0xffff58215f08   296  ldr x17, pc+24 (addr 0x0000ffff58215f20)    ;; lazy deoptimization bailout 0
0xffff58215f0c   300  add x17, x17, x16
0xffff58215f10   304  br x17
0xffff58215f14   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215f18   312  d63f03e0       constant
0xffff58215f1c   316  d503201f       constant
0xffff58215f20   320  58006000       constant
0xffff58215f24   324  0000ffff       constant


Safepoints (size = 21)
0xffff58215e9c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58215e7c  code target (STUB)  (0xffff58206820)
0xffff58215e94  code target (STUB)  (0xffff58206260)
0xffff58215ea0  code target (STUB)  (0xffff582068e0)
0xffff58215eb4  constant pool (size 36)
0xffff58215f08  runtime entry
0xffff58215f14  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6328
type = NORMAL
name = BinaryOpICStub(SUB:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff58215de0     0  mov x2, x1
0xffff58215de4     4  tbnz w2, #0, #+0xf4 (addr 0xffff58215ed8)
0xffff58215de8     8  tbz w0, #0, #+0x34 (addr 0xffff58215e1c)
0xffff58215dec    12  ldur x16, [x0, #-1]
0xffff58215df0    16  ldr x17, [x26, #120]
0xffff58215df4    20  cmp x16, x17
0xffff58215df8    24  b.ne #+0xc (addr 0xffff58215e04)
0xffff58215dfc    28  ldur d0, [x0, #7]
0xffff58215e00    32  b #+0x20 (addr 0xffff58215e20)
0xffff58215e04    36  ldr x16, [x26, #40]
0xffff58215e08    40  cmp x0, x16
0xffff58215e0c    44  b.ne #+0xdc (addr 0xffff58215ee8)
0xffff58215e10    48  ldr x3, [x26, #928]
0xffff58215e14    52  ldur d0, [x3, #7]
0xffff58215e18    56  b #+0x8 (addr 0xffff58215e20)
0xffff58215e1c    60  scvtf d0, x0, #32
0xffff58215e20    64  scvtf d1, x2, #32
0xffff58215e24    68  fsub d0, d1, d0
0xffff58215e28    72  movz x1, #0x92c0
0xffff58215e2c    76  movk x1, #0x16e7, lsl #16
0xffff58215e30    80  ldp x2, x0, [x1]
0xffff58215e34    84  adds x16, x2, #0x10 (16)
0xffff58215e38    88  ccmp x16, x0, #nzCv, lo
0xffff58215e3c    92  b.hi #+0x20 (addr 0xffff58215e5c)
0xffff58215e40    96  str x16, [x1]
0xffff58215e44   100  ldr x1, [x26, #120]
0xffff58215e48   104  str x1, [x2]
0xffff58215e4c   108  orr x2, x2, #0x1
0xffff58215e50   112  stur d0, [x2, #7]
0xffff58215e54   116  mov x0, x2
0xffff58215e58   120  ret
0xffff58215e5c   124  sub csp, jssp, #0x10 (16)
0xffff58215e60   128  stp fp, lr, [jssp, #-16]!
0xffff58215e64   132  movz fp, #0xa00000000
0xffff58215e68   136  sub csp, jssp, #0x8 (8)
0xffff58215e6c   140  str fp, [jssp, #-8]!
0xffff58215e70   144  add fp, jssp, #0x8 (8)
0xffff58215e74   148  movz x2, #0x0
0xffff58215e78   152  mov x16, lr
0xffff58215e7c   156  ldr x17, pc+68 (addr 0x0000ffff58215ec0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58215e80   160  blr x17
0xffff58215e84   164  ldur cp, [fp, #-8]
0xffff58215e88   168  movz x0, #0x0
0xffff58215e8c   172  movz x1, #0x4b48
0xffff58215e90   176  movk x1, #0xe4, lsl #16
0xffff58215e94   180  ldr x16, pc+52 (addr 0x0000ffff58215ec8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58215e98   184  blr x16
0xffff58215e9c   188  str x0, [jssp, #16]
0xffff58215ea0   192  ldr x16, pc+48 (addr 0x0000ffff58215ed0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58215ea4   196  blr x16
0xffff58215ea8   200  ldr lr, [jssp, #16]
0xffff58215eac   204  ldp xzr, fp, [jssp], #24
0xffff58215eb0   208  b #-0x60 (addr 0xffff58215e50)
0xffff58215eb4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58215eb8   216  d63f03e0       constant
0xffff58215ebc   220  d503201f       constant
0xffff58215ec0   224  58206820       constant
0xffff58215ec4   228  0000ffff       constant
0xffff58215ec8   232  58206260       constant
0xffff58215ecc   236  0000ffff       constant
0xffff58215ed0   240  582068e0       constant
0xffff58215ed4   244  0000ffff       constant
0xffff58215ed8   248  movz x16, #0x0
0xffff58215edc   252  sub csp, jssp, #0x10 (16)
0xffff58215ee0   256  stp fp, lr, [jssp, #-16]!
0xffff58215ee4   260  bl #+0x14 (addr 0xffff58215ef8)
0xffff58215ee8   264  movz x16, #0x8
0xffff58215eec   268  sub csp, jssp, #0x10 (16)
0xffff58215ef0   272  stp fp, lr, [jssp, #-16]!
0xffff58215ef4   276  bl #+0x4 (addr 0xffff58215ef8)
0xffff58215ef8   280  movz x17, #0xa00000000
0xffff58215efc   284  sub csp, jssp, #0x10 (16)
0xffff58215f00   288  stp x17, cp, [jssp, #-16]!
0xffff58215f04   292  add fp, jssp, #0x10 (16)
0xffff58215f08   296  ldr x17, pc+24 (addr 0x0000ffff58215f20)    ;; lazy deoptimization bailout 0
0xffff58215f0c   300  add x17, x17, x16
0xffff58215f10   304  br x17
0xffff58215f14   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58215f18   312  d63f03e0       constant
0xffff58215f1c   316  d503201f       constant
0xffff58215f20   320  58006000       constant
0xffff58215f24   324  0000ffff       constant


Safepoints (size = 21)
0xffff58215e9c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff58215e7c  code target (STUB)  (0xffff58206820)
0xffff58215e94  code target (STUB)  (0xffff58206260)
0xffff58215ea0  code target (STUB)  (0xffff582068e0)
0xffff58215eb4  constant pool (size 36)
0xffff58215f08  runtime entry
0xffff58215f14  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2200
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff58215fa0     0  mov x2, x1
0xffff58215fa4     4  tbnz w2, #0, #+0x1c (addr 0xffff58215fc0)
0xffff58215fa8     8  mov x3, x0
0xffff58215fac    12  tbnz w3, #0, #+0x24 (addr 0xffff58215fd0)
0xffff58215fb0    16  subs x2, x2, x3
0xffff58215fb4    20  b.vs #+0x2c (addr 0xffff58215fe0)
0xffff58215fb8    24  mov x0, x2
0xffff58215fbc    28  ret
0xffff58215fc0    32  movz x16, #0x0
0xffff58215fc4    36  sub csp, jssp, #0x10 (16)
0xffff58215fc8    40  stp fp, lr, [jssp, #-16]!
0xffff58215fcc    44  bl #+0x24 (addr 0xffff58215ff0)
0xffff58215fd0    48  movz x16, #0x8
0xffff58215fd4    52  sub csp, jssp, #0x10 (16)
0xffff58215fd8    56  stp fp, lr, [jssp, #-16]!
0xffff58215fdc    60  bl #+0x14 (addr 0xffff58215ff0)
0xffff58215fe0    64  movz x16, #0x10
0xffff58215fe4    68  sub csp, jssp, #0x10 (16)
0xffff58215fe8    72  stp fp, lr, [jssp, #-16]!
0xffff58215fec    76  bl #+0x4 (addr 0xffff58215ff0)
0xffff58215ff0    80  movz x17, #0xa00000000
0xffff58215ff4    84  sub csp, jssp, #0x10 (16)
0xffff58215ff8    88  stp x17, cp, [jssp, #-16]!
0xffff58215ffc    92  add fp, jssp, #0x10 (16)
0xffff58216000    96  ldr x17, pc+24 (addr 0x0000ffff58216018)    ;; lazy deoptimization bailout 0
0xffff58216004   100  add x17, x17, x16
0xffff58216008   104  br x17
0xffff5821600c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58216010   112  d63f03e0       constant
0xffff58216014   116  d503201f       constant
0xffff58216018   120  58006000       constant
0xffff5821601c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58216000  runtime entry
0xffff5821600c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2200
type = NORMAL
name = BinaryOpICStub(SUB:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 136)
0xffff58215fa0     0  mov x2, x1
0xffff58215fa4     4  tbnz w2, #0, #+0x1c (addr 0xffff58215fc0)
0xffff58215fa8     8  mov x3, x0
0xffff58215fac    12  tbnz w3, #0, #+0x24 (addr 0xffff58215fd0)
0xffff58215fb0    16  subs x2, x2, x3
0xffff58215fb4    20  b.vs #+0x2c (addr 0xffff58215fe0)
0xffff58215fb8    24  mov x0, x2
0xffff58215fbc    28  ret
0xffff58215fc0    32  movz x16, #0x0
0xffff58215fc4    36  sub csp, jssp, #0x10 (16)
0xffff58215fc8    40  stp fp, lr, [jssp, #-16]!
0xffff58215fcc    44  bl #+0x24 (addr 0xffff58215ff0)
0xffff58215fd0    48  movz x16, #0x8
0xffff58215fd4    52  sub csp, jssp, #0x10 (16)
0xffff58215fd8    56  stp fp, lr, [jssp, #-16]!
0xffff58215fdc    60  bl #+0x14 (addr 0xffff58215ff0)
0xffff58215fe0    64  movz x16, #0x10
0xffff58215fe4    68  sub csp, jssp, #0x10 (16)
0xffff58215fe8    72  stp fp, lr, [jssp, #-16]!
0xffff58215fec    76  bl #+0x4 (addr 0xffff58215ff0)
0xffff58215ff0    80  movz x17, #0xa00000000
0xffff58215ff4    84  sub csp, jssp, #0x10 (16)
0xffff58215ff8    88  stp x17, cp, [jssp, #-16]!
0xffff58215ffc    92  add fp, jssp, #0x10 (16)
0xffff58216000    96  ldr x17, pc+24 (addr 0x0000ffff58216018)    ;; lazy deoptimization bailout 0
0xffff58216004   100  add x17, x17, x16
0xffff58216008   104  br x17
0xffff5821600c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58216010   112  d63f03e0       constant
0xffff58216014   116  d503201f       constant
0xffff58216018   120  58006000       constant
0xffff5821601c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58216000  runtime entry
0xffff5821600c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 3227
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff582160a0     0  mov x2, x1
0xffff582160a4     4  tbnz w2, #0, #+0x44 (addr 0xffff582160e8)
0xffff582160a8     8  mov x3, x0
0xffff582160ac    12  tbnz w3, #0, #+0x4c (addr 0xffff582160f8)
0xffff582160b0    16  asr x3, x3, #32
0xffff582160b4    20  cmp w3, #0x2 (2)
0xffff582160b8    24  b.eq #+0x8 (addr 0xffff582160c0)
0xffff582160bc    28  b #+0x4c (addr 0xffff58216108)
0xffff582160c0    32  asr x2, x2, #32
0xffff582160c4    36  tbz w2, #31, #+0x18 (addr 0xffff582160dc)
0xffff582160c8    40  neg w2, w2
0xffff582160cc    44  and w2, w2, #0x1
0xffff582160d0    48  negs w2, w2
0xffff582160d4    52  b.eq #+0x44 (addr 0xffff58216118)
0xffff582160d8    56  b #+0x8 (addr 0xffff582160e0)
0xffff582160dc    60  and w2, w2, #0x1
0xffff582160e0    64  lsl x0, x2, #32
0xffff582160e4    68  ret
0xffff582160e8    72  movz x16, #0x0
0xffff582160ec    76  sub csp, jssp, #0x10 (16)
0xffff582160f0    80  stp fp, lr, [jssp, #-16]!
0xffff582160f4    84  bl #+0x34 (addr 0xffff58216128)
0xffff582160f8    88  movz x16, #0x8
0xffff582160fc    92  sub csp, jssp, #0x10 (16)
0xffff58216100    96  stp fp, lr, [jssp, #-16]!
0xffff58216104   100  bl #+0x24 (addr 0xffff58216128)
0xffff58216108   104  movz x16, #0x10
0xffff5821610c   108  sub csp, jssp, #0x10 (16)
0xffff58216110   112  stp fp, lr, [jssp, #-16]!
0xffff58216114   116  bl #+0x14 (addr 0xffff58216128)
0xffff58216118   120  movz x16, #0x18
0xffff5821611c   124  sub csp, jssp, #0x10 (16)
0xffff58216120   128  stp fp, lr, [jssp, #-16]!
0xffff58216124   132  bl #+0x4 (addr 0xffff58216128)
0xffff58216128   136  movz x17, #0xa00000000
0xffff5821612c   140  sub csp, jssp, #0x10 (16)
0xffff58216130   144  stp x17, cp, [jssp, #-16]!
0xffff58216134   148  add fp, jssp, #0x10 (16)
0xffff58216138   152  ldr x17, pc+24 (addr 0x0000ffff58216150)    ;; lazy deoptimization bailout 0
0xffff5821613c   156  add x17, x17, x16
0xffff58216140   160  br x17
0xffff58216144   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58216148   168  d63f03e0       constant
0xffff5821614c   172  d503201f       constant
0xffff58216150   176  58006000       constant
0xffff58216154   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58216138  runtime entry
0xffff58216144  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 3227
type = NORMAL
name = BinaryOpICStub(MOD:Smi*2->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff582160a0     0  mov x2, x1
0xffff582160a4     4  tbnz w2, #0, #+0x44 (addr 0xffff582160e8)
0xffff582160a8     8  mov x3, x0
0xffff582160ac    12  tbnz w3, #0, #+0x4c (addr 0xffff582160f8)
0xffff582160b0    16  asr x3, x3, #32
0xffff582160b4    20  cmp w3, #0x2 (2)
0xffff582160b8    24  b.eq #+0x8 (addr 0xffff582160c0)
0xffff582160bc    28  b #+0x4c (addr 0xffff58216108)
0xffff582160c0    32  asr x2, x2, #32
0xffff582160c4    36  tbz w2, #31, #+0x18 (addr 0xffff582160dc)
0xffff582160c8    40  neg w2, w2
0xffff582160cc    44  and w2, w2, #0x1
0xffff582160d0    48  negs w2, w2
0xffff582160d4    52  b.eq #+0x44 (addr 0xffff58216118)
0xffff582160d8    56  b #+0x8 (addr 0xffff582160e0)
0xffff582160dc    60  and w2, w2, #0x1
0xffff582160e0    64  lsl x0, x2, #32
0xffff582160e4    68  ret
0xffff582160e8    72  movz x16, #0x0
0xffff582160ec    76  sub csp, jssp, #0x10 (16)
0xffff582160f0    80  stp fp, lr, [jssp, #-16]!
0xffff582160f4    84  bl #+0x34 (addr 0xffff58216128)
0xffff582160f8    88  movz x16, #0x8
0xffff582160fc    92  sub csp, jssp, #0x10 (16)
0xffff58216100    96  stp fp, lr, [jssp, #-16]!
0xffff58216104   100  bl #+0x24 (addr 0xffff58216128)
0xffff58216108   104  movz x16, #0x10
0xffff5821610c   108  sub csp, jssp, #0x10 (16)
0xffff58216110   112  stp fp, lr, [jssp, #-16]!
0xffff58216114   116  bl #+0x14 (addr 0xffff58216128)
0xffff58216118   120  movz x16, #0x18
0xffff5821611c   124  sub csp, jssp, #0x10 (16)
0xffff58216120   128  stp fp, lr, [jssp, #-16]!
0xffff58216124   132  bl #+0x4 (addr 0xffff58216128)
0xffff58216128   136  movz x17, #0xa00000000
0xffff5821612c   140  sub csp, jssp, #0x10 (16)
0xffff58216130   144  stp x17, cp, [jssp, #-16]!
0xffff58216134   148  add fp, jssp, #0x10 (16)
0xffff58216138   152  ldr x17, pc+24 (addr 0x0000ffff58216150)    ;; lazy deoptimization bailout 0
0xffff5821613c   156  add x17, x17, x16
0xffff58216140   160  br x17
0xffff58216144   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58216148   168  d63f03e0       constant
0xffff5821614c   172  d503201f       constant
0xffff58216150   176  58006000       constant
0xffff58216154   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58216138  runtime entry
0xffff58216144  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 5275
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff582161c0     0  mov x2, x1
0xffff582161c4     4  tbnz w2, #0, #+0x44 (addr 0xffff58216208)
0xffff582161c8     8  mov x3, x0
0xffff582161cc    12  tbnz w3, #0, #+0x4c (addr 0xffff58216218)
0xffff582161d0    16  asr x3, x3, #32
0xffff582161d4    20  cmp w3, #0x4 (4)
0xffff582161d8    24  b.eq #+0x8 (addr 0xffff582161e0)
0xffff582161dc    28  b #+0x4c (addr 0xffff58216228)
0xffff582161e0    32  asr x2, x2, #32
0xffff582161e4    36  tbz w2, #31, #+0x18 (addr 0xffff582161fc)
0xffff582161e8    40  neg w2, w2
0xffff582161ec    44  and w2, w2, #0x3
0xffff582161f0    48  negs w2, w2
0xffff582161f4    52  b.eq #+0x44 (addr 0xffff58216238)
0xffff582161f8    56  b #+0x8 (addr 0xffff58216200)
0xffff582161fc    60  and w2, w2, #0x3
0xffff58216200    64  lsl x0, x2, #32
0xffff58216204    68  ret
0xffff58216208    72  movz x16, #0x0
0xffff5821620c    76  sub csp, jssp, #0x10 (16)
0xffff58216210    80  stp fp, lr, [jssp, #-16]!
0xffff58216214    84  bl #+0x34 (addr 0xffff58216248)
0xffff58216218    88  movz x16, #0x8
0xffff5821621c    92  sub csp, jssp, #0x10 (16)
0xffff58216220    96  stp fp, lr, [jssp, #-16]!
0xffff58216224   100  bl #+0x24 (addr 0xffff58216248)
0xffff58216228   104  movz x16, #0x10
0xffff5821622c   108  sub csp, jssp, #0x10 (16)
0xffff58216230   112  stp fp, lr, [jssp, #-16]!
0xffff58216234   116  bl #+0x14 (addr 0xffff58216248)
0xffff58216238   120  movz x16, #0x18
0xffff5821623c   124  sub csp, jssp, #0x10 (16)
0xffff58216240   128  stp fp, lr, [jssp, #-16]!
0xffff58216244   132  bl #+0x4 (addr 0xffff58216248)
0xffff58216248   136  movz x17, #0xa00000000
0xffff5821624c   140  sub csp, jssp, #0x10 (16)
0xffff58216250   144  stp x17, cp, [jssp, #-16]!
0xffff58216254   148  add fp, jssp, #0x10 (16)
0xffff58216258   152  ldr x17, pc+24 (addr 0x0000ffff58216270)    ;; lazy deoptimization bailout 0
0xffff5821625c   156  add x17, x17, x16
0xffff58216260   160  br x17
0xffff58216264   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58216268   168  d63f03e0       constant
0xffff5821626c   172  d503201f       constant
0xffff58216270   176  58006000       constant
0xffff58216274   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58216258  runtime entry
0xffff58216264  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 5275
type = NORMAL
name = BinaryOpICStub(MOD:Smi*4->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff582161c0     0  mov x2, x1
0xffff582161c4     4  tbnz w2, #0, #+0x44 (addr 0xffff58216208)
0xffff582161c8     8  mov x3, x0
0xffff582161cc    12  tbnz w3, #0, #+0x4c (addr 0xffff58216218)
0xffff582161d0    16  asr x3, x3, #32
0xffff582161d4    20  cmp w3, #0x4 (4)
0xffff582161d8    24  b.eq #+0x8 (addr 0xffff582161e0)
0xffff582161dc    28  b #+0x4c (addr 0xffff58216228)
0xffff582161e0    32  asr x2, x2, #32
0xffff582161e4    36  tbz w2, #31, #+0x18 (addr 0xffff582161fc)
0xffff582161e8    40  neg w2, w2
0xffff582161ec    44  and w2, w2, #0x3
0xffff582161f0    48  negs w2, w2
0xffff582161f4    52  b.eq #+0x44 (addr 0xffff58216238)
0xffff582161f8    56  b #+0x8 (addr 0xffff58216200)
0xffff582161fc    60  and w2, w2, #0x3
0xffff58216200    64  lsl x0, x2, #32
0xffff58216204    68  ret
0xffff58216208    72  movz x16, #0x0
0xffff5821620c    76  sub csp, jssp, #0x10 (16)
0xffff58216210    80  stp fp, lr, [jssp, #-16]!
0xffff58216214    84  bl #+0x34 (addr 0xffff58216248)
0xffff58216218    88  movz x16, #0x8
0xffff5821621c    92  sub csp, jssp, #0x10 (16)
0xffff58216220    96  stp fp, lr, [jssp, #-16]!
0xffff58216224   100  bl #+0x24 (addr 0xffff58216248)
0xffff58216228   104  movz x16, #0x10
0xffff5821622c   108  sub csp, jssp, #0x10 (16)
0xffff58216230   112  stp fp, lr, [jssp, #-16]!
0xffff58216234   116  bl #+0x14 (addr 0xffff58216248)
0xffff58216238   120  movz x16, #0x18
0xffff5821623c   124  sub csp, jssp, #0x10 (16)
0xffff58216240   128  stp fp, lr, [jssp, #-16]!
0xffff58216244   132  bl #+0x4 (addr 0xffff58216248)
0xffff58216248   136  movz x17, #0xa00000000
0xffff5821624c   140  sub csp, jssp, #0x10 (16)
0xffff58216250   144  stp x17, cp, [jssp, #-16]!
0xffff58216254   148  add fp, jssp, #0x10 (16)
0xffff58216258   152  ldr x17, pc+24 (addr 0x0000ffff58216270)    ;; lazy deoptimization bailout 0
0xffff5821625c   156  add x17, x17, x16
0xffff58216260   160  br x17
0xffff58216264   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58216268   168  d63f03e0       constant
0xffff5821626c   172  d503201f       constant
0xffff58216270   176  58006000       constant
0xffff58216274   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58216258  runtime entry
0xffff58216264  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 7323
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff582162e0     0  mov x2, x1
0xffff582162e4     4  tbnz w2, #0, #+0x44 (addr 0xffff58216328)
0xffff582162e8     8  mov x3, x0
0xffff582162ec    12  tbnz w3, #0, #+0x4c (addr 0xffff58216338)
0xffff582162f0    16  asr x3, x3, #32
0xffff582162f4    20  cmp w3, #0x8 (8)
0xffff582162f8    24  b.eq #+0x8 (addr 0xffff58216300)
0xffff582162fc    28  b #+0x4c (addr 0xffff58216348)
0xffff58216300    32  asr x2, x2, #32
0xffff58216304    36  tbz w2, #31, #+0x18 (addr 0xffff5821631c)
0xffff58216308    40  neg w2, w2
0xffff5821630c    44  and w2, w2, #0x7
0xffff58216310    48  negs w2, w2
0xffff58216314    52  b.eq #+0x44 (addr 0xffff58216358)
0xffff58216318    56  b #+0x8 (addr 0xffff58216320)
0xffff5821631c    60  and w2, w2, #0x7
0xffff58216320    64  lsl x0, x2, #32
0xffff58216324    68  ret
0xffff58216328    72  movz x16, #0x0
0xffff5821632c    76  sub csp, jssp, #0x10 (16)
0xffff58216330    80  stp fp, lr, [jssp, #-16]!
0xffff58216334    84  bl #+0x34 (addr 0xffff58216368)
0xffff58216338    88  movz x16, #0x8
0xffff5821633c    92  sub csp, jssp, #0x10 (16)
0xffff58216340    96  stp fp, lr, [jssp, #-16]!
0xffff58216344   100  bl #+0x24 (addr 0xffff58216368)
0xffff58216348   104  movz x16, #0x10
0xffff5821634c   108  sub csp, jssp, #0x10 (16)
0xffff58216350   112  stp fp, lr, [jssp, #-16]!
0xffff58216354   116  bl #+0x14 (addr 0xffff58216368)
0xffff58216358   120  movz x16, #0x18
0xffff5821635c   124  sub csp, jssp, #0x10 (16)
0xffff58216360   128  stp fp, lr, [jssp, #-16]!
0xffff58216364   132  bl #+0x4 (addr 0xffff58216368)
0xffff58216368   136  movz x17, #0xa00000000
0xffff5821636c   140  sub csp, jssp, #0x10 (16)
0xffff58216370   144  stp x17, cp, [jssp, #-16]!
0xffff58216374   148  add fp, jssp, #0x10 (16)
0xffff58216378   152  ldr x17, pc+24 (addr 0x0000ffff58216390)    ;; lazy deoptimization bailout 0
0xffff5821637c   156  add x17, x17, x16
0xffff58216380   160  br x17
0xffff58216384   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58216388   168  d63f03e0       constant
0xffff5821638c   172  d503201f       constant
0xffff58216390   176  58006000       constant
0xffff58216394   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58216378  runtime entry
0xffff58216384  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 7323
type = NORMAL
name = BinaryOpICStub(MOD:Smi*8->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff582162e0     0  mov x2, x1
0xffff582162e4     4  tbnz w2, #0, #+0x44 (addr 0xffff58216328)
0xffff582162e8     8  mov x3, x0
0xffff582162ec    12  tbnz w3, #0, #+0x4c (addr 0xffff58216338)
0xffff582162f0    16  asr x3, x3, #32
0xffff582162f4    20  cmp w3, #0x8 (8)
0xffff582162f8    24  b.eq #+0x8 (addr 0xffff58216300)
0xffff582162fc    28  b #+0x4c (addr 0xffff58216348)
0xffff58216300    32  asr x2, x2, #32
0xffff58216304    36  tbz w2, #31, #+0x18 (addr 0xffff5821631c)
0xffff58216308    40  neg w2, w2
0xffff5821630c    44  and w2, w2, #0x7
0xffff58216310    48  negs w2, w2
0xffff58216314    52  b.eq #+0x44 (addr 0xffff58216358)
0xffff58216318    56  b #+0x8 (addr 0xffff58216320)
0xffff5821631c    60  and w2, w2, #0x7
0xffff58216320    64  lsl x0, x2, #32
0xffff58216324    68  ret
0xffff58216328    72  movz x16, #0x0
0xffff5821632c    76  sub csp, jssp, #0x10 (16)
0xffff58216330    80  stp fp, lr, [jssp, #-16]!
0xffff58216334    84  bl #+0x34 (addr 0xffff58216368)
0xffff58216338    88  movz x16, #0x8
0xffff5821633c    92  sub csp, jssp, #0x10 (16)
0xffff58216340    96  stp fp, lr, [jssp, #-16]!
0xffff58216344   100  bl #+0x24 (addr 0xffff58216368)
0xffff58216348   104  movz x16, #0x10
0xffff5821634c   108  sub csp, jssp, #0x10 (16)
0xffff58216350   112  stp fp, lr, [jssp, #-16]!
0xffff58216354   116  bl #+0x14 (addr 0xffff58216368)
0xffff58216358   120  movz x16, #0x18
0xffff5821635c   124  sub csp, jssp, #0x10 (16)
0xffff58216360   128  stp fp, lr, [jssp, #-16]!
0xffff58216364   132  bl #+0x4 (addr 0xffff58216368)
0xffff58216368   136  movz x17, #0xa00000000
0xffff5821636c   140  sub csp, jssp, #0x10 (16)
0xffff58216370   144  stp x17, cp, [jssp, #-16]!
0xffff58216374   148  add fp, jssp, #0x10 (16)
0xffff58216378   152  ldr x17, pc+24 (addr 0x0000ffff58216390)    ;; lazy deoptimization bailout 0
0xffff5821637c   156  add x17, x17, x16
0xffff58216380   160  br x17
0xffff58216384   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58216388   168  d63f03e0       constant
0xffff5821638c   172  d503201f       constant
0xffff58216390   176  58006000       constant
0xffff58216394   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58216378  runtime entry
0xffff58216384  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 9371
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff58216400     0  mov x2, x1
0xffff58216404     4  tbnz w2, #0, #+0x44 (addr 0xffff58216448)
0xffff58216408     8  mov x3, x0
0xffff5821640c    12  tbnz w3, #0, #+0x4c (addr 0xffff58216458)
0xffff58216410    16  asr x3, x3, #32
0xffff58216414    20  cmp w3, #0x10 (16)
0xffff58216418    24  b.eq #+0x8 (addr 0xffff58216420)
0xffff5821641c    28  b #+0x4c (addr 0xffff58216468)
0xffff58216420    32  asr x2, x2, #32
0xffff58216424    36  tbz w2, #31, #+0x18 (addr 0xffff5821643c)
0xffff58216428    40  neg w2, w2
0xffff5821642c    44  and w2, w2, #0xf
0xffff58216430    48  negs w2, w2
0xffff58216434    52  b.eq #+0x44 (addr 0xffff58216478)
0xffff58216438    56  b #+0x8 (addr 0xffff58216440)
0xffff5821643c    60  and w2, w2, #0xf
0xffff58216440    64  lsl x0, x2, #32
0xffff58216444    68  ret
0xffff58216448    72  movz x16, #0x0
0xffff5821644c    76  sub csp, jssp, #0x10 (16)
0xffff58216450    80  stp fp, lr, [jssp, #-16]!
0xffff58216454    84  bl #+0x34 (addr 0xffff58216488)
0xffff58216458    88  movz x16, #0x8
0xffff5821645c    92  sub csp, jssp, #0x10 (16)
0xffff58216460    96  stp fp, lr, [jssp, #-16]!
0xffff58216464   100  bl #+0x24 (addr 0xffff58216488)
0xffff58216468   104  movz x16, #0x10
0xffff5821646c   108  sub csp, jssp, #0x10 (16)
0xffff58216470   112  stp fp, lr, [jssp, #-16]!
0xffff58216474   116  bl #+0x14 (addr 0xffff58216488)
0xffff58216478   120  movz x16, #0x18
0xffff5821647c   124  sub csp, jssp, #0x10 (16)
0xffff58216480   128  stp fp, lr, [jssp, #-16]!
0xffff58216484   132  bl #+0x4 (addr 0xffff58216488)
0xffff58216488   136  movz x17, #0xa00000000
0xffff5821648c   140  sub csp, jssp, #0x10 (16)
0xffff58216490   144  stp x17, cp, [jssp, #-16]!
0xffff58216494   148  add fp, jssp, #0x10 (16)
0xffff58216498   152  ldr x17, pc+24 (addr 0x0000ffff582164b0)    ;; lazy deoptimization bailout 0
0xffff5821649c   156  add x17, x17, x16
0xffff582164a0   160  br x17
0xffff582164a4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582164a8   168  d63f03e0       constant
0xffff582164ac   172  d503201f       constant
0xffff582164b0   176  58006000       constant
0xffff582164b4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58216498  runtime entry
0xffff582164a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 9371
type = NORMAL
name = BinaryOpICStub(MOD:Smi*16->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff58216400     0  mov x2, x1
0xffff58216404     4  tbnz w2, #0, #+0x44 (addr 0xffff58216448)
0xffff58216408     8  mov x3, x0
0xffff5821640c    12  tbnz w3, #0, #+0x4c (addr 0xffff58216458)
0xffff58216410    16  asr x3, x3, #32
0xffff58216414    20  cmp w3, #0x10 (16)
0xffff58216418    24  b.eq #+0x8 (addr 0xffff58216420)
0xffff5821641c    28  b #+0x4c (addr 0xffff58216468)
0xffff58216420    32  asr x2, x2, #32
0xffff58216424    36  tbz w2, #31, #+0x18 (addr 0xffff5821643c)
0xffff58216428    40  neg w2, w2
0xffff5821642c    44  and w2, w2, #0xf
0xffff58216430    48  negs w2, w2
0xffff58216434    52  b.eq #+0x44 (addr 0xffff58216478)
0xffff58216438    56  b #+0x8 (addr 0xffff58216440)
0xffff5821643c    60  and w2, w2, #0xf
0xffff58216440    64  lsl x0, x2, #32
0xffff58216444    68  ret
0xffff58216448    72  movz x16, #0x0
0xffff5821644c    76  sub csp, jssp, #0x10 (16)
0xffff58216450    80  stp fp, lr, [jssp, #-16]!
0xffff58216454    84  bl #+0x34 (addr 0xffff58216488)
0xffff58216458    88  movz x16, #0x8
0xffff5821645c    92  sub csp, jssp, #0x10 (16)
0xffff58216460    96  stp fp, lr, [jssp, #-16]!
0xffff58216464   100  bl #+0x24 (addr 0xffff58216488)
0xffff58216468   104  movz x16, #0x10
0xffff5821646c   108  sub csp, jssp, #0x10 (16)
0xffff58216470   112  stp fp, lr, [jssp, #-16]!
0xffff58216474   116  bl #+0x14 (addr 0xffff58216488)
0xffff58216478   120  movz x16, #0x18
0xffff5821647c   124  sub csp, jssp, #0x10 (16)
0xffff58216480   128  stp fp, lr, [jssp, #-16]!
0xffff58216484   132  bl #+0x4 (addr 0xffff58216488)
0xffff58216488   136  movz x17, #0xa00000000
0xffff5821648c   140  sub csp, jssp, #0x10 (16)
0xffff58216490   144  stp x17, cp, [jssp, #-16]!
0xffff58216494   148  add fp, jssp, #0x10 (16)
0xffff58216498   152  ldr x17, pc+24 (addr 0x0000ffff582164b0)    ;; lazy deoptimization bailout 0
0xffff5821649c   156  add x17, x17, x16
0xffff582164a0   160  br x17
0xffff582164a4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582164a8   168  d63f03e0       constant
0xffff582164ac   172  d503201f       constant
0xffff582164b0   176  58006000       constant
0xffff582164b4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff58216498  runtime entry
0xffff582164a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 11419
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff58216520     0  mov x2, x1
0xffff58216524     4  tbnz w2, #0, #+0x44 (addr 0xffff58216568)
0xffff58216528     8  mov x3, x0
0xffff5821652c    12  tbnz w3, #0, #+0x4c (addr 0xffff58216578)
0xffff58216530    16  asr x3, x3, #32
0xffff58216534    20  cmp w3, #0x20 (32)
0xffff58216538    24  b.eq #+0x8 (addr 0xffff58216540)
0xffff5821653c    28  b #+0x4c (addr 0xffff58216588)
0xffff58216540    32  asr x2, x2, #32
0xffff58216544    36  tbz w2, #31, #+0x18 (addr 0xffff5821655c)
0xffff58216548    40  neg w2, w2
0xffff5821654c    44  and w2, w2, #0x1f
0xffff58216550    48  negs w2, w2
0xffff58216554    52  b.eq #+0x44 (addr 0xffff58216598)
0xffff58216558    56  b #+0x8 (addr 0xffff58216560)
0xffff5821655c    60  and w2, w2, #0x1f
0xffff58216560    64  lsl x0, x2, #32
0xffff58216564    68  ret
0xffff58216568    72  movz x16, #0x0
0xffff5821656c    76  sub csp, jssp, #0x10 (16)
0xffff58216570    80  stp fp, lr, [jssp, #-16]!
0xffff58216574    84  bl #+0x34 (addr 0xffff582165a8)
0xffff58216578    88  movz x16, #0x8
0xffff5821657c    92  sub csp, jssp, #0x10 (16)
0xffff58216580    96  stp fp, lr, [jssp, #-16]!
0xffff58216584   100  bl #+0x24 (addr 0xffff582165a8)
0xffff58216588   104  movz x16, #0x10
0xffff5821658c   108  sub csp, jssp, #0x10 (16)
0xffff58216590   112  stp fp, lr, [jssp, #-16]!
0xffff58216594   116  bl #+0x14 (addr 0xffff582165a8)
0xffff58216598   120  movz x16, #0x18
0xffff5821659c   124  sub csp, jssp, #0x10 (16)
0xffff582165a0   128  stp fp, lr, [jssp, #-16]!
0xffff582165a4   132  bl #+0x4 (addr 0xffff582165a8)
0xffff582165a8   136  movz x17, #0xa00000000
0xffff582165ac   140  sub csp, jssp, #0x10 (16)
0xffff582165b0   144  stp x17, cp, [jssp, #-16]!
0xffff582165b4   148  add fp, jssp, #0x10 (16)
0xffff582165b8   152  ldr x17, pc+24 (addr 0x0000ffff582165d0)    ;; lazy deoptimization bailout 0
0xffff582165bc   156  add x17, x17, x16
0xffff582165c0   160  br x17
0xffff582165c4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582165c8   168  d63f03e0       constant
0xffff582165cc   172  d503201f       constant
0xffff582165d0   176  58006000       constant
0xffff582165d4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582165b8  runtime entry
0xffff582165c4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 11419
type = NORMAL
name = BinaryOpICStub(MOD:Smi*32->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff58216520     0  mov x2, x1
0xffff58216524     4  tbnz w2, #0, #+0x44 (addr 0xffff58216568)
0xffff58216528     8  mov x3, x0
0xffff5821652c    12  tbnz w3, #0, #+0x4c (addr 0xffff58216578)
0xffff58216530    16  asr x3, x3, #32
0xffff58216534    20  cmp w3, #0x20 (32)
0xffff58216538    24  b.eq #+0x8 (addr 0xffff58216540)
0xffff5821653c    28  b #+0x4c (addr 0xffff58216588)
0xffff58216540    32  asr x2, x2, #32
0xffff58216544    36  tbz w2, #31, #+0x18 (addr 0xffff5821655c)
0xffff58216548    40  neg w2, w2
0xffff5821654c    44  and w2, w2, #0x1f
0xffff58216550    48  negs w2, w2
0xffff58216554    52  b.eq #+0x44 (addr 0xffff58216598)
0xffff58216558    56  b #+0x8 (addr 0xffff58216560)
0xffff5821655c    60  and w2, w2, #0x1f
0xffff58216560    64  lsl x0, x2, #32
0xffff58216564    68  ret
0xffff58216568    72  movz x16, #0x0
0xffff5821656c    76  sub csp, jssp, #0x10 (16)
0xffff58216570    80  stp fp, lr, [jssp, #-16]!
0xffff58216574    84  bl #+0x34 (addr 0xffff582165a8)
0xffff58216578    88  movz x16, #0x8
0xffff5821657c    92  sub csp, jssp, #0x10 (16)
0xffff58216580    96  stp fp, lr, [jssp, #-16]!
0xffff58216584   100  bl #+0x24 (addr 0xffff582165a8)
0xffff58216588   104  movz x16, #0x10
0xffff5821658c   108  sub csp, jssp, #0x10 (16)
0xffff58216590   112  stp fp, lr, [jssp, #-16]!
0xffff58216594   116  bl #+0x14 (addr 0xffff582165a8)
0xffff58216598   120  movz x16, #0x18
0xffff5821659c   124  sub csp, jssp, #0x10 (16)
0xffff582165a0   128  stp fp, lr, [jssp, #-16]!
0xffff582165a4   132  bl #+0x4 (addr 0xffff582165a8)
0xffff582165a8   136  movz x17, #0xa00000000
0xffff582165ac   140  sub csp, jssp, #0x10 (16)
0xffff582165b0   144  stp x17, cp, [jssp, #-16]!
0xffff582165b4   148  add fp, jssp, #0x10 (16)
0xffff582165b8   152  ldr x17, pc+24 (addr 0x0000ffff582165d0)    ;; lazy deoptimization bailout 0
0xffff582165bc   156  add x17, x17, x16
0xffff582165c0   160  br x17
0xffff582165c4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582165c8   168  d63f03e0       constant
0xffff582165cc   172  d503201f       constant
0xffff582165d0   176  58006000       constant
0xffff582165d4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582165b8  runtime entry
0xffff582165c4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 23707
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff58216640     0  mov x2, x1
0xffff58216644     4  tbnz w2, #0, #+0x44 (addr 0xffff58216688)
0xffff58216648     8  mov x3, x0
0xffff5821664c    12  tbnz w3, #0, #+0x4c (addr 0xffff58216698)
0xffff58216650    16  asr x3, x3, #32
0xffff58216654    20  cmp w3, #0x800 (2048)
0xffff58216658    24  b.eq #+0x8 (addr 0xffff58216660)
0xffff5821665c    28  b #+0x4c (addr 0xffff582166a8)
0xffff58216660    32  asr x2, x2, #32
0xffff58216664    36  tbz w2, #31, #+0x18 (addr 0xffff5821667c)
0xffff58216668    40  neg w2, w2
0xffff5821666c    44  and w2, w2, #0x7ff
0xffff58216670    48  negs w2, w2
0xffff58216674    52  b.eq #+0x44 (addr 0xffff582166b8)
0xffff58216678    56  b #+0x8 (addr 0xffff58216680)
0xffff5821667c    60  and w2, w2, #0x7ff
0xffff58216680    64  lsl x0, x2, #32
0xffff58216684    68  ret
0xffff58216688    72  movz x16, #0x0
0xffff5821668c    76  sub csp, jssp, #0x10 (16)
0xffff58216690    80  stp fp, lr, [jssp, #-16]!
0xffff58216694    84  bl #+0x34 (addr 0xffff582166c8)
0xffff58216698    88  movz x16, #0x8
0xffff5821669c    92  sub csp, jssp, #0x10 (16)
0xffff582166a0    96  stp fp, lr, [jssp, #-16]!
0xffff582166a4   100  bl #+0x24 (addr 0xffff582166c8)
0xffff582166a8   104  movz x16, #0x10
0xffff582166ac   108  sub csp, jssp, #0x10 (16)
0xffff582166b0   112  stp fp, lr, [jssp, #-16]!
0xffff582166b4   116  bl #+0x14 (addr 0xffff582166c8)
0xffff582166b8   120  movz x16, #0x18
0xffff582166bc   124  sub csp, jssp, #0x10 (16)
0xffff582166c0   128  stp fp, lr, [jssp, #-16]!
0xffff582166c4   132  bl #+0x4 (addr 0xffff582166c8)
0xffff582166c8   136  movz x17, #0xa00000000
0xffff582166cc   140  sub csp, jssp, #0x10 (16)
0xffff582166d0   144  stp x17, cp, [jssp, #-16]!
0xffff582166d4   148  add fp, jssp, #0x10 (16)
0xffff582166d8   152  ldr x17, pc+24 (addr 0x0000ffff582166f0)    ;; lazy deoptimization bailout 0
0xffff582166dc   156  add x17, x17, x16
0xffff582166e0   160  br x17
0xffff582166e4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582166e8   168  d63f03e0       constant
0xffff582166ec   172  d503201f       constant
0xffff582166f0   176  58006000       constant
0xffff582166f4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582166d8  runtime entry
0xffff582166e4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 23707
type = NORMAL
name = BinaryOpICStub(MOD:Smi*2048->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff58216640     0  mov x2, x1
0xffff58216644     4  tbnz w2, #0, #+0x44 (addr 0xffff58216688)
0xffff58216648     8  mov x3, x0
0xffff5821664c    12  tbnz w3, #0, #+0x4c (addr 0xffff58216698)
0xffff58216650    16  asr x3, x3, #32
0xffff58216654    20  cmp w3, #0x800 (2048)
0xffff58216658    24  b.eq #+0x8 (addr 0xffff58216660)
0xffff5821665c    28  b #+0x4c (addr 0xffff582166a8)
0xffff58216660    32  asr x2, x2, #32
0xffff58216664    36  tbz w2, #31, #+0x18 (addr 0xffff5821667c)
0xffff58216668    40  neg w2, w2
0xffff5821666c    44  and w2, w2, #0x7ff
0xffff58216670    48  negs w2, w2
0xffff58216674    52  b.eq #+0x44 (addr 0xffff582166b8)
0xffff58216678    56  b #+0x8 (addr 0xffff58216680)
0xffff5821667c    60  and w2, w2, #0x7ff
0xffff58216680    64  lsl x0, x2, #32
0xffff58216684    68  ret
0xffff58216688    72  movz x16, #0x0
0xffff5821668c    76  sub csp, jssp, #0x10 (16)
0xffff58216690    80  stp fp, lr, [jssp, #-16]!
0xffff58216694    84  bl #+0x34 (addr 0xffff582166c8)
0xffff58216698    88  movz x16, #0x8
0xffff5821669c    92  sub csp, jssp, #0x10 (16)
0xffff582166a0    96  stp fp, lr, [jssp, #-16]!
0xffff582166a4   100  bl #+0x24 (addr 0xffff582166c8)
0xffff582166a8   104  movz x16, #0x10
0xffff582166ac   108  sub csp, jssp, #0x10 (16)
0xffff582166b0   112  stp fp, lr, [jssp, #-16]!
0xffff582166b4   116  bl #+0x14 (addr 0xffff582166c8)
0xffff582166b8   120  movz x16, #0x18
0xffff582166bc   124  sub csp, jssp, #0x10 (16)
0xffff582166c0   128  stp fp, lr, [jssp, #-16]!
0xffff582166c4   132  bl #+0x4 (addr 0xffff582166c8)
0xffff582166c8   136  movz x17, #0xa00000000
0xffff582166cc   140  sub csp, jssp, #0x10 (16)
0xffff582166d0   144  stp x17, cp, [jssp, #-16]!
0xffff582166d4   148  add fp, jssp, #0x10 (16)
0xffff582166d8   152  ldr x17, pc+24 (addr 0x0000ffff582166f0)    ;; lazy deoptimization bailout 0
0xffff582166dc   156  add x17, x17, x16
0xffff582166e0   160  br x17
0xffff582166e4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582166e8   168  d63f03e0       constant
0xffff582166ec   172  d503201f       constant
0xffff582166f0   176  58006000       constant
0xffff582166f4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582166d8  runtime entry
0xffff582166e4  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff58216760     0  adr xzr, #+0x40 (addr 0xffff582167a0)
0xffff58216764     4  adr xzr, #+0x360 (addr 0xffff58216ac4)
0xffff58216768     8  ldr x16, pc+1736 (addr 0x0000ffff58216e30)    ;; external reference (store_buffer_top)
0xffff5821676c    12  ldr x1, [x16]
0xffff58216770    16  str x2, [x1], #8
0xffff58216774    20  str x1, [x16]
0xffff58216778    24  tst x1, #0x1ffff
0xffff5821677c    28  b.eq #+0x8 (addr 0xffff58216784)
0xffff58216780    32  ret
0xffff58216784    36  sub csp, jssp, #0x8 (8)
0xffff58216788    40  str lr, [jssp, #-8]!
0xffff5821678c    44  ldr x17, pc+1708 (addr 0x0000ffff58216e38)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58216790    48  blr x17
0xffff58216794    52  ldr lr, [jssp], #8
0xffff58216798    56  ret
0xffff5821679c    60  ret
0xffff582167a0    64  sub csp, jssp, #0x10 (16)
0xffff582167a4    68  stp x3, x0, [jssp, #-16]!
0xffff582167a8    72  ldr x1, [x2]
0xffff582167ac    76  and x16, x1, #0xfffffffffff00000
0xffff582167b0    80  ldr x16, [x16, #8]
0xffff582167b4    84  tst x16, #0x18
0xffff582167b8    88  b.eq #+0x1d8 (addr 0xffff58216990)
0xffff582167bc    92  and x16, x5, #0xfffffffffff00000
0xffff582167c0    96  ldr x16, [x16, #8]
0xffff582167c4   100  tst x16, #0x18
0xffff582167c8   104  b.ne #+0x1c8 (addr 0xffff58216990)
0xffff582167cc   108  and x1, x5, #0xfffffffffff00000
0xffff582167d0   112  ldr x0, [x1, #104]
0xffff582167d4   116  subs x0, x0, #0x1 (1)
0xffff582167d8   120  str x0, [x1, #104]
0xffff582167dc   124  b.mi #+0xc4 (addr 0xffff582168a0)
0xffff582167e0   128  ubfx x16, x5, #8, #12
0xffff582167e4   132  and x1, x5, #0xfffffffffff00000
0xffff582167e8   136  add x1, x1, x16, lsl #2
0xffff582167ec   140  ubfx x0, x5, #3, #5
0xffff582167f0   144  ldr x1, [x1, #360]
0xffff582167f4   148  lsr x1, x1, x0
0xffff582167f8   152  tbz w1, #0, #+0x8 (addr 0xffff58216800)
0xffff582167fc   156  tbnz w1, #1, #+0x3c (addr 0xffff58216838)
0xffff58216800   160  ldp x3, x0, [jssp], #16
0xffff58216804   164  ldr x16, pc+1596 (addr 0x0000ffff58216e40)    ;; external reference (store_buffer_top)
0xffff58216808   168  ldr x1, [x16]
0xffff5821680c   172  str x2, [x1], #8
0xffff58216810   176  str x1, [x16]
0xffff58216814   180  tst x1, #0x1ffff
0xffff58216818   184  b.eq #+0x8 (addr 0xffff58216820)
0xffff5821681c   188  ret
0xffff58216820   192  sub csp, jssp, #0x8 (8)
0xffff58216824   196  str lr, [jssp, #-8]!
0xffff58216828   200  ldr x17, pc+1568 (addr 0x0000ffff58216e48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5821682c   204  blr x17
0xffff58216830   208  ldr lr, [jssp], #8
0xffff58216834   212  ret
0xffff58216838   216  ldr x1, [x2]
0xffff5821683c   220  sub csp, jssp, #0x10 (16)
0xffff58216840   224  stp x5, x2, [jssp, #-16]!
0xffff58216844   228  ubfx x16, x1, #8, #12
0xffff58216848   232  and x0, x1, #0xfffffffffff00000
0xffff5821684c   236  add x0, x0, x16, lsl #2
0xffff58216850   240  ubfx x5, x1, #3, #5
0xffff58216854   244  ldr x2, [x0, #360]
0xffff58216858   248  lsr x2, x2, x5
0xffff5821685c   252  tbz w2, #0, #+0x40 (addr 0xffff5821689c)
0xffff58216860   256  ldp x5, x2, [jssp], #16
0xffff58216864   260  ldp x3, x0, [jssp], #16
0xffff58216868   264  ldr x16, pc+1512 (addr 0x0000ffff58216e50)    ;; external reference (store_buffer_top)
0xffff5821686c   268  ldr x1, [x16]
0xffff58216870   272  str x2, [x1], #8
0xffff58216874   276  str x1, [x16]
0xffff58216878   280  tst x1, #0x1ffff
0xffff5821687c   284  b.eq #+0x8 (addr 0xffff58216884)
0xffff58216880   288  ret
0xffff58216884   292  sub csp, jssp, #0x8 (8)
0xffff58216888   296  str lr, [jssp, #-8]!
0xffff5821688c   300  ldr x17, pc+1484 (addr 0x0000ffff58216e58)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58216890   304  blr x17
0xffff58216894   308  ldr lr, [jssp], #8
0xffff58216898   312  ret
0xffff5821689c   316  ldp x5, x2, [jssp], #16
0xffff582168a0   320  sub csp, jssp, #0x78 (120)
0xffff582168a4   324  stp x14, x15, [jssp, #-32]!
0xffff582168a8   328  stp x18, lr, [jssp, #16]
0xffff582168ac   332  stp x10, x11, [jssp, #-32]!
0xffff582168b0   336  stp x12, x13, [jssp, #16]
0xffff582168b4   340  stp x6, x7, [jssp, #-32]!
0xffff582168b8   344  stp x8, x9, [jssp, #16]
0xffff582168bc   348  stp x2, x4, [jssp, #-24]!
0xffff582168c0   352  str x5, [jssp, #16]
0xffff582168c4   356  sub csp, jssp, #0xb0 (176)
0xffff582168c8   360  stp d26, d27, [jssp, #-32]!
0xffff582168cc   364  stp d28, d29, [jssp, #16]
0xffff582168d0   368  stp d22, d23, [jssp, #-32]!
0xffff582168d4   372  stp d24, d25, [jssp, #16]
0xffff582168d8   376  stp d18, d19, [jssp, #-32]!
0xffff582168dc   380  stp d20, d21, [jssp, #16]
0xffff582168e0   384  stp d6, d7, [jssp, #-32]!
0xffff582168e4   388  stp d16, d17, [jssp, #16]
0xffff582168e8   392  stp d2, d3, [jssp, #-32]!
0xffff582168ec   396  stp d4, d5, [jssp, #16]
0xffff582168f0   400  stp d0, d1, [jssp, #-16]!
0xffff582168f4   404  mov x0, x5
0xffff582168f8   408  mov x1, x2
0xffff582168fc   412  ldr x2, pc+1380 (addr 0x0000ffff58216e60)    ;; external reference (isolate)
0xffff58216900   416  ldr x16, pc+1384 (addr 0x0000ffff58216e68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58216904   420  and csp, jssp, #0xfffffffffffffff0
0xffff58216908   424  blr x16
0xffff5821690c   428  ldp d2, d3, [jssp, #16]
0xffff58216910   432  ldp d0, d1, [jssp], #32
0xffff58216914   436  ldp d6, d7, [jssp, #16]
0xffff58216918   440  ldp d4, d5, [jssp], #32
0xffff5821691c   444  ldp d18, d19, [jssp, #16]
0xffff58216920   448  ldp d16, d17, [jssp], #32
0xffff58216924   452  ldp d22, d23, [jssp, #16]
0xffff58216928   456  ldp d20, d21, [jssp], #32
0xffff5821692c   460  ldp d26, d27, [jssp, #16]
0xffff58216930   464  ldp d24, d25, [jssp], #32
0xffff58216934   468  ldp d28, d29, [jssp], #16
0xffff58216938   472  ldp x5, x6, [jssp, #16]
0xffff5821693c   476  ldp x2, x4, [jssp], #32
0xffff58216940   480  ldp x9, x10, [jssp, #16]
0xffff58216944   484  ldp x7, x8, [jssp], #32
0xffff58216948   488  ldp x13, x14, [jssp, #16]
0xffff5821694c   492  ldp x11, x12, [jssp], #32
0xffff58216950   496  ldr lr, [jssp, #16]
0xffff58216954   500  ldp x15, x18, [jssp], #24
0xffff58216958   504  ldp x3, x0, [jssp], #16
0xffff5821695c   508  ldr x16, pc+1300 (addr 0x0000ffff58216e70)    ;; external reference (store_buffer_top)
0xffff58216960   512  ldr x1, [x16]
0xffff58216964   516  str x2, [x1], #8
0xffff58216968   520  str x1, [x16]
0xffff5821696c   524  tst x1, #0x1ffff
0xffff58216970   528  b.eq #+0x8 (addr 0xffff58216978)
0xffff58216974   532  ret
0xffff58216978   536  sub csp, jssp, #0x8 (8)
0xffff5821697c   540  str lr, [jssp, #-8]!
0xffff58216980   544  ldr x17, pc+1272 (addr 0x0000ffff58216e78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58216984   548  blr x17
0xffff58216988   552  ldr lr, [jssp], #8
0xffff5821698c   556  ret
0xffff58216990   560  and x1, x5, #0xfffffffffff00000
0xffff58216994   564  ldr x0, [x1, #104]
0xffff58216998   568  subs x0, x0, #0x1 (1)
0xffff5821699c   572  str x0, [x1, #104]
0xffff582169a0   576  b.mi #+0x64 (addr 0xffff58216a04)
0xffff582169a4   580  ubfx x16, x5, #8, #12
0xffff582169a8   584  and x1, x5, #0xfffffffffff00000
0xffff582169ac   588  add x1, x1, x16, lsl #2
0xffff582169b0   592  ubfx x0, x5, #3, #5
0xffff582169b4   596  ldr x1, [x1, #360]
0xffff582169b8   600  lsr x1, x1, x0
0xffff582169bc   604  tbz w1, #0, #+0x8 (addr 0xffff582169c4)
0xffff582169c0   608  tbnz w1, #1, #+0xc (addr 0xffff582169cc)
0xffff582169c4   612  ldp x3, x0, [jssp], #16
0xffff582169c8   616  ret
0xffff582169cc   620  ldr x1, [x2]
0xffff582169d0   624  sub csp, jssp, #0x10 (16)
0xffff582169d4   628  stp x5, x2, [jssp, #-16]!
0xffff582169d8   632  ubfx x16, x1, #8, #12
0xffff582169dc   636  and x0, x1, #0xfffffffffff00000
0xffff582169e0   640  add x0, x0, x16, lsl #2
0xffff582169e4   644  ubfx x5, x1, #3, #5
0xffff582169e8   648  ldr x2, [x0, #360]
0xffff582169ec   652  lsr x2, x2, x5
0xffff582169f0   656  tbz w2, #0, #+0x10 (addr 0xffff58216a00)
0xffff582169f4   660  ldp x5, x2, [jssp], #16
0xffff582169f8   664  ldp x3, x0, [jssp], #16
0xffff582169fc   668  ret
0xffff58216a00   672  ldp x5, x2, [jssp], #16
0xffff58216a04   676  sub csp, jssp, #0x78 (120)
0xffff58216a08   680  stp x14, x15, [jssp, #-32]!
0xffff58216a0c   684  stp x18, lr, [jssp, #16]
0xffff58216a10   688  stp x10, x11, [jssp, #-32]!
0xffff58216a14   692  stp x12, x13, [jssp, #16]
0xffff58216a18   696  stp x6, x7, [jssp, #-32]!
0xffff58216a1c   700  stp x8, x9, [jssp, #16]
0xffff58216a20   704  stp x2, x4, [jssp, #-24]!
0xffff58216a24   708  str x5, [jssp, #16]
0xffff58216a28   712  sub csp, jssp, #0xb0 (176)
0xffff58216a2c   716  stp d26, d27, [jssp, #-32]!
0xffff58216a30   720  stp d28, d29, [jssp, #16]
0xffff58216a34   724  stp d22, d23, [jssp, #-32]!
0xffff58216a38   728  stp d24, d25, [jssp, #16]
0xffff58216a3c   732  stp d18, d19, [jssp, #-32]!
0xffff58216a40   736  stp d20, d21, [jssp, #16]
0xffff58216a44   740  stp d6, d7, [jssp, #-32]!
0xffff58216a48   744  stp d16, d17, [jssp, #16]
0xffff58216a4c   748  stp d2, d3, [jssp, #-32]!
0xffff58216a50   752  stp d4, d5, [jssp, #16]
0xffff58216a54   756  stp d0, d1, [jssp, #-16]!
0xffff58216a58   760  mov x0, x5
0xffff58216a5c   764  mov x1, x2
0xffff58216a60   768  ldr x2, pc+1056 (addr 0x0000ffff58216e80)    ;; external reference (isolate)
0xffff58216a64   772  ldr x16, pc+1060 (addr 0x0000ffff58216e88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58216a68   776  and csp, jssp, #0xfffffffffffffff0
0xffff58216a6c   780  blr x16
0xffff58216a70   784  ldp d2, d3, [jssp, #16]
0xffff58216a74   788  ldp d0, d1, [jssp], #32
0xffff58216a78   792  ldp d6, d7, [jssp, #16]
0xffff58216a7c   796  ldp d4, d5, [jssp], #32
0xffff58216a80   800  ldp d18, d19, [jssp, #16]
0xffff58216a84   804  ldp d16, d17, [jssp], #32
0xffff58216a88   808  ldp d22, d23, [jssp, #16]
0xffff58216a8c   812  ldp d20, d21, [jssp], #32
0xffff58216a90   816  ldp d26, d27, [jssp, #16]
0xffff58216a94   820  ldp d24, d25, [jssp], #32
0xffff58216a98   824  ldp d28, d29, [jssp], #16
0xffff58216a9c   828  ldp x5, x6, [jssp, #16]
0xffff58216aa0   832  ldp x2, x4, [jssp], #32
0xffff58216aa4   836  ldp x9, x10, [jssp, #16]
0xffff58216aa8   840  ldp x7, x8, [jssp], #32
0xffff58216aac   844  ldp x13, x14, [jssp, #16]
0xffff58216ab0   848  ldp x11, x12, [jssp], #32
0xffff58216ab4   852  ldr lr, [jssp, #16]
0xffff58216ab8   856  ldp x15, x18, [jssp], #24
0xffff58216abc   860  ldp x3, x0, [jssp], #16
0xffff58216ac0   864  ret
0xffff58216ac4   868  sub csp, jssp, #0x10 (16)
0xffff58216ac8   872  stp x3, x0, [jssp, #-16]!
0xffff58216acc   876  ldr x1, [x2]
0xffff58216ad0   880  and x16, x1, #0xfffffffffff00000
0xffff58216ad4   884  ldr x16, [x16, #8]
0xffff58216ad8   888  tst x16, #0x18
0xffff58216adc   892  b.eq #+0x1f8 (addr 0xffff58216cd4)
0xffff58216ae0   896  and x16, x5, #0xfffffffffff00000
0xffff58216ae4   900  ldr x16, [x16, #8]
0xffff58216ae8   904  tst x16, #0x18
0xffff58216aec   908  b.ne #+0x1e8 (addr 0xffff58216cd4)
0xffff58216af0   912  and x1, x5, #0xfffffffffff00000
0xffff58216af4   916  ldr x0, [x1, #104]
0xffff58216af8   920  subs x0, x0, #0x1 (1)
0xffff58216afc   924  str x0, [x1, #104]
0xffff58216b00   928  b.mi #+0xe4 (addr 0xffff58216be4)
0xffff58216b04   932  ubfx x16, x5, #8, #12
0xffff58216b08   936  and x1, x5, #0xfffffffffff00000
0xffff58216b0c   940  add x1, x1, x16, lsl #2
0xffff58216b10   944  ubfx x0, x5, #3, #5
0xffff58216b14   948  ldr x1, [x1, #360]
0xffff58216b18   952  lsr x1, x1, x0
0xffff58216b1c   956  tbz w1, #0, #+0x8 (addr 0xffff58216b24)
0xffff58216b20   960  tbnz w1, #1, #+0x3c (addr 0xffff58216b5c)
0xffff58216b24   964  ldp x3, x0, [jssp], #16
0xffff58216b28   968  ldr x16, pc+872 (addr 0x0000ffff58216e90)    ;; external reference (store_buffer_top)
0xffff58216b2c   972  ldr x1, [x16]
0xffff58216b30   976  str x2, [x1], #8
0xffff58216b34   980  str x1, [x16]
0xffff58216b38   984  tst x1, #0x1ffff
0xffff58216b3c   988  b.eq #+0x8 (addr 0xffff58216b44)
0xffff58216b40   992  ret
0xffff58216b44   996  sub csp, jssp, #0x8 (8)
0xffff58216b48  1000  str lr, [jssp, #-8]!
0xffff58216b4c  1004  ldr x17, pc+844 (addr 0x0000ffff58216e98)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58216b50  1008  blr x17
0xffff58216b54  1012  ldr lr, [jssp], #8
0xffff58216b58  1016  ret
0xffff58216b5c  1020  ldr x1, [x2]
0xffff58216b60  1024  and x0, x1, #0xfffffffffff00000
0xffff58216b64  1028  ldr x0, [x0, #8]
0xffff58216b68  1032  tbz w0, #6, #+0x18 (addr 0xffff58216b80)
0xffff58216b6c  1036  and x0, x5, #0xfffffffffff00000
0xffff58216b70  1040  ldr x0, [x0, #8]
0xffff58216b74  1044  movz x16, #0x58
0xffff58216b78  1048  tst x0, x16
0xffff58216b7c  1052  b.eq #+0x68 (addr 0xffff58216be4)
0xffff58216b80  1056  sub csp, jssp, #0x10 (16)
0xffff58216b84  1060  stp x5, x2, [jssp, #-16]!
0xffff58216b88  1064  ubfx x16, x1, #8, #12
0xffff58216b8c  1068  and x0, x1, #0xfffffffffff00000
0xffff58216b90  1072  add x0, x0, x16, lsl #2
0xffff58216b94  1076  ubfx x5, x1, #3, #5
0xffff58216b98  1080  ldr x2, [x0, #360]
0xffff58216b9c  1084  lsr x2, x2, x5
0xffff58216ba0  1088  tbz w2, #0, #+0x40 (addr 0xffff58216be0)
0xffff58216ba4  1092  ldp x5, x2, [jssp], #16
0xffff58216ba8  1096  ldp x3, x0, [jssp], #16
0xffff58216bac  1100  ldr x16, pc+756 (addr 0x0000ffff58216ea0)    ;; external reference (store_buffer_top)
0xffff58216bb0  1104  ldr x1, [x16]
0xffff58216bb4  1108  str x2, [x1], #8
0xffff58216bb8  1112  str x1, [x16]
0xffff58216bbc  1116  tst x1, #0x1ffff
0xffff58216bc0  1120  b.eq #+0x8 (addr 0xffff58216bc8)
0xffff58216bc4  1124  ret
0xffff58216bc8  1128  sub csp, jssp, #0x8 (8)
0xffff58216bcc  1132  str lr, [jssp, #-8]!
0xffff58216bd0  1136  ldr x17, pc+728 (addr 0x0000ffff58216ea8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58216bd4  1140  blr x17
0xffff58216bd8  1144  ldr lr, [jssp], #8
0xffff58216bdc  1148  ret
0xffff58216be0  1152  ldp x5, x2, [jssp], #16
0xffff58216be4  1156  sub csp, jssp, #0x78 (120)
0xffff58216be8  1160  stp x14, x15, [jssp, #-32]!
0xffff58216bec  1164  stp x18, lr, [jssp, #16]
0xffff58216bf0  1168  stp x10, x11, [jssp, #-32]!
0xffff58216bf4  1172  stp x12, x13, [jssp, #16]
0xffff58216bf8  1176  stp x6, x7, [jssp, #-32]!
0xffff58216bfc  1180  stp x8, x9, [jssp, #16]
0xffff58216c00  1184  stp x2, x4, [jssp, #-24]!
0xffff58216c04  1188  str x5, [jssp, #16]
0xffff58216c08  1192  sub csp, jssp, #0xb0 (176)
0xffff58216c0c  1196  stp d26, d27, [jssp, #-32]!
0xffff58216c10  1200  stp d28, d29, [jssp, #16]
0xffff58216c14  1204  stp d22, d23, [jssp, #-32]!
0xffff58216c18  1208  stp d24, d25, [jssp, #16]
0xffff58216c1c  1212  stp d18, d19, [jssp, #-32]!
0xffff58216c20  1216  stp d20, d21, [jssp, #16]
0xffff58216c24  1220  stp d6, d7, [jssp, #-32]!
0xffff58216c28  1224  stp d16, d17, [jssp, #16]
0xffff58216c2c  1228  stp d2, d3, [jssp, #-32]!
0xffff58216c30  1232  stp d4, d5, [jssp, #16]
0xffff58216c34  1236  stp d0, d1, [jssp, #-16]!
0xffff58216c38  1240  mov x0, x5
0xffff58216c3c  1244  mov x1, x2
0xffff58216c40  1248  ldr x2, pc+624 (addr 0x0000ffff58216eb0)    ;; external reference (isolate)
0xffff58216c44  1252  ldr x16, pc+628 (addr 0x0000ffff58216eb8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58216c48  1256  and csp, jssp, #0xfffffffffffffff0
0xffff58216c4c  1260  blr x16
0xffff58216c50  1264  ldp d2, d3, [jssp, #16]
0xffff58216c54  1268  ldp d0, d1, [jssp], #32
0xffff58216c58  1272  ldp d6, d7, [jssp, #16]
0xffff58216c5c  1276  ldp d4, d5, [jssp], #32
0xffff58216c60  1280  ldp d18, d19, [jssp, #16]
0xffff58216c64  1284  ldp d16, d17, [jssp], #32
0xffff58216c68  1288  ldp d22, d23, [jssp, #16]
0xffff58216c6c  1292  ldp d20, d21, [jssp], #32
0xffff58216c70  1296  ldp d26, d27, [jssp, #16]
0xffff58216c74  1300  ldp d24, d25, [jssp], #32
0xffff58216c78  1304  ldp d28, d29, [jssp], #16
0xffff58216c7c  1308  ldp x5, x6, [jssp, #16]
0xffff58216c80  1312  ldp x2, x4, [jssp], #32
0xffff58216c84  1316  ldp x9, x10, [jssp, #16]
0xffff58216c88  1320  ldp x7, x8, [jssp], #32
0xffff58216c8c  1324  ldp x13, x14, [jssp, #16]
0xffff58216c90  1328  ldp x11, x12, [jssp], #32
0xffff58216c94  1332  ldr lr, [jssp, #16]
0xffff58216c98  1336  ldp x15, x18, [jssp], #24
0xffff58216c9c  1340  ldp x3, x0, [jssp], #16
0xffff58216ca0  1344  ldr x16, pc+544 (addr 0x0000ffff58216ec0)    ;; external reference (store_buffer_top)
0xffff58216ca4  1348  ldr x1, [x16]
0xffff58216ca8  1352  str x2, [x1], #8
0xffff58216cac  1356  str x1, [x16]
0xffff58216cb0  1360  tst x1, #0x1ffff
0xffff58216cb4  1364  b.eq #+0x8 (addr 0xffff58216cbc)
0xffff58216cb8  1368  ret
0xffff58216cbc  1372  sub csp, jssp, #0x8 (8)
0xffff58216cc0  1376  str lr, [jssp, #-8]!
0xffff58216cc4  1380  ldr x17, pc+516 (addr 0x0000ffff58216ec8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58216cc8  1384  blr x17
0xffff58216ccc  1388  ldr lr, [jssp], #8
0xffff58216cd0  1392  ret
0xffff58216cd4  1396  and x1, x5, #0xfffffffffff00000
0xffff58216cd8  1400  ldr x0, [x1, #104]
0xffff58216cdc  1404  subs x0, x0, #0x1 (1)
0xffff58216ce0  1408  str x0, [x1, #104]
0xffff58216ce4  1412  b.mi #+0x84 (addr 0xffff58216d68)
0xffff58216ce8  1416  ubfx x16, x5, #8, #12
0xffff58216cec  1420  and x1, x5, #0xfffffffffff00000
0xffff58216cf0  1424  add x1, x1, x16, lsl #2
0xffff58216cf4  1428  ubfx x0, x5, #3, #5
0xffff58216cf8  1432  ldr x1, [x1, #360]
0xffff58216cfc  1436  lsr x1, x1, x0
0xffff58216d00  1440  tbz w1, #0, #+0x8 (addr 0xffff58216d08)
0xffff58216d04  1444  tbnz w1, #1, #+0xc (addr 0xffff58216d10)
0xffff58216d08  1448  ldp x3, x0, [jssp], #16
0xffff58216d0c  1452  ret
0xffff58216d10  1456  ldr x1, [x2]
0xffff58216d14  1460  and x0, x1, #0xfffffffffff00000
0xffff58216d18  1464  ldr x0, [x0, #8]
0xffff58216d1c  1468  tbz w0, #6, #+0x18 (addr 0xffff58216d34)
0xffff58216d20  1472  and x0, x5, #0xfffffffffff00000
0xffff58216d24  1476  ldr x0, [x0, #8]
0xffff58216d28  1480  movz x16, #0x58
0xffff58216d2c  1484  tst x0, x16
0xffff58216d30  1488  b.eq #+0x38 (addr 0xffff58216d68)
0xffff58216d34  1492  sub csp, jssp, #0x10 (16)
0xffff58216d38  1496  stp x5, x2, [jssp, #-16]!
0xffff58216d3c  1500  ubfx x16, x1, #8, #12
0xffff58216d40  1504  and x0, x1, #0xfffffffffff00000
0xffff58216d44  1508  add x0, x0, x16, lsl #2
0xffff58216d48  1512  ubfx x5, x1, #3, #5
0xffff58216d4c  1516  ldr x2, [x0, #360]
0xffff58216d50  1520  lsr x2, x2, x5
0xffff58216d54  1524  tbz w2, #0, #+0x10 (addr 0xffff58216d64)
0xffff58216d58  1528  ldp x5, x2, [jssp], #16
0xffff58216d5c  1532  ldp x3, x0, [jssp], #16
0xffff58216d60  1536  ret
0xffff58216d64  1540  ldp x5, x2, [jssp], #16
0xffff58216d68  1544  sub csp, jssp, #0x78 (120)
0xffff58216d6c  1548  stp x14, x15, [jssp, #-32]!
0xffff58216d70  1552  stp x18, lr, [jssp, #16]
0xffff58216d74  1556  stp x10, x11, [jssp, #-32]!
0xffff58216d78  1560  stp x12, x13, [jssp, #16]
0xffff58216d7c  1564  stp x6, x7, [jssp, #-32]!
0xffff58216d80  1568  stp x8, x9, [jssp, #16]
0xffff58216d84  1572  stp x2, x4, [jssp, #-24]!
0xffff58216d88  1576  str x5, [jssp, #16]
0xffff58216d8c  1580  sub csp, jssp, #0xb0 (176)
0xffff58216d90  1584  stp d26, d27, [jssp, #-32]!
0xffff58216d94  1588  stp d28, d29, [jssp, #16]
0xffff58216d98  1592  stp d22, d23, [jssp, #-32]!
0xffff58216d9c  1596  stp d24, d25, [jssp, #16]
0xffff58216da0  1600  stp d18, d19, [jssp, #-32]!
0xffff58216da4  1604  stp d20, d21, [jssp, #16]
0xffff58216da8  1608  stp d6, d7, [jssp, #-32]!
0xffff58216dac  1612  stp d16, d17, [jssp, #16]
0xffff58216db0  1616  stp d2, d3, [jssp, #-32]!
0xffff58216db4  1620  stp d4, d5, [jssp, #16]
0xffff58216db8  1624  stp d0, d1, [jssp, #-16]!
0xffff58216dbc  1628  mov x0, x5
0xffff58216dc0  1632  mov x1, x2
0xffff58216dc4  1636  ldr x2, pc+268 (addr 0x0000ffff58216ed0)    ;; external reference (isolate)
0xffff58216dc8  1640  ldr x16, pc+272 (addr 0x0000ffff58216ed8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58216dcc  1644  and csp, jssp, #0xfffffffffffffff0
0xffff58216dd0  1648  blr x16
0xffff58216dd4  1652  ldp d2, d3, [jssp, #16]
0xffff58216dd8  1656  ldp d0, d1, [jssp], #32
0xffff58216ddc  1660  ldp d6, d7, [jssp, #16]
0xffff58216de0  1664  ldp d4, d5, [jssp], #32
0xffff58216de4  1668  ldp d18, d19, [jssp, #16]
0xffff58216de8  1672  ldp d16, d17, [jssp], #32
0xffff58216dec  1676  ldp d22, d23, [jssp, #16]
0xffff58216df0  1680  ldp d20, d21, [jssp], #32
0xffff58216df4  1684  ldp d26, d27, [jssp, #16]
0xffff58216df8  1688  ldp d24, d25, [jssp], #32
0xffff58216dfc  1692  ldp d28, d29, [jssp], #16
0xffff58216e00  1696  ldp x5, x6, [jssp, #16]
0xffff58216e04  1700  ldp x2, x4, [jssp], #32
0xffff58216e08  1704  ldp x9, x10, [jssp, #16]
0xffff58216e0c  1708  ldp x7, x8, [jssp], #32
0xffff58216e10  1712  ldp x13, x14, [jssp, #16]
0xffff58216e14  1716  ldp x11, x12, [jssp], #32
0xffff58216e18  1720  ldr lr, [jssp, #16]
0xffff58216e1c  1724  ldp x15, x18, [jssp], #24
0xffff58216e20  1728  ldp x3, x0, [jssp], #16
0xffff58216e24  1732  ret
0xffff58216e28  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff58216e2c  1740  d63f03e0       constant
0xffff58216e30  1744  16e798c0       constant
0xffff58216e34  1748  00000000       constant
0xffff58216e38  1752  582065a0       constant
0xffff58216e3c  1756  0000ffff       constant
0xffff58216e40  1760  16e798c0       constant
0xffff58216e44  1764  00000000       constant
0xffff58216e48  1768  582065a0       constant
0xffff58216e4c  1772  0000ffff       constant
0xffff58216e50  1776  16e798c0       constant
0xffff58216e54  1780  00000000       constant
0xffff58216e58  1784  582065a0       constant
0xffff58216e5c  1788  0000ffff       constant
0xffff58216e60  1792  16e782d0       constant
0xffff58216e64  1796  00000000       constant
0xffff58216e68  1800  00c2d958       constant
0xffff58216e6c  1804  00000000       constant
0xffff58216e70  1808  16e798c0       constant
0xffff58216e74  1812  00000000       constant
0xffff58216e78  1816  582065a0       constant
0xffff58216e7c  1820  0000ffff       constant
0xffff58216e80  1824  16e782d0       constant
0xffff58216e84  1828  00000000       constant
0xffff58216e88  1832  00c2d958       constant
0xffff58216e8c  1836  00000000       constant
0xffff58216e90  1840  16e798c0       constant
0xffff58216e94  1844  00000000       constant
0xffff58216e98  1848  582065a0       constant
0xffff58216e9c  1852  0000ffff       constant
0xffff58216ea0  1856  16e798c0       constant
0xffff58216ea4  1860  00000000       constant
0xffff58216ea8  1864  582065a0       constant
0xffff58216eac  1868  0000ffff       constant
0xffff58216eb0  1872  16e782d0       constant
0xffff58216eb4  1876  00000000       constant
0xffff58216eb8  1880  00c2d958       constant
0xffff58216ebc  1884  00000000       constant
0xffff58216ec0  1888  16e798c0       constant
0xffff58216ec4  1892  00000000       constant
0xffff58216ec8  1896  582065a0       constant
0xffff58216ecc  1900  0000ffff       constant
0xffff58216ed0  1904  16e782d0       constant
0xffff58216ed4  1908  00000000       constant
0xffff58216ed8  1912  00c2d958       constant
0xffff58216edc  1916  00000000       constant


RelocInfo (size = 65)
0xffff58216768  external reference (store_buffer_top)  (0x16e798c0)
0xffff5821678c  code target (STUB)  (0xffff582065a0)
0xffff58216804  external reference (store_buffer_top)  (0x16e798c0)
0xffff58216828  code target (STUB)  (0xffff582065a0)
0xffff58216868  external reference (store_buffer_top)  (0x16e798c0)
0xffff5821688c  code target (STUB)  (0xffff582065a0)
0xffff582168fc  external reference (isolate)  (0x16e782d0)
0xffff58216900  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5821695c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58216980  code target (STUB)  (0xffff582065a0)
0xffff58216a60  external reference (isolate)  (0x16e782d0)
0xffff58216a64  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58216b28  external reference (store_buffer_top)  (0x16e798c0)
0xffff58216b4c  code target (STUB)  (0xffff582065a0)
0xffff58216bac  external reference (store_buffer_top)  (0x16e798c0)
0xffff58216bd0  code target (STUB)  (0xffff582065a0)
0xffff58216c40  external reference (isolate)  (0x16e782d0)
0xffff58216c44  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58216ca0  external reference (store_buffer_top)  (0x16e798c0)
0xffff58216cc4  code target (STUB)  (0xffff582065a0)
0xffff58216dc4  external reference (isolate)  (0x16e782d0)
0xffff58216dc8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58216e28  constant pool (size 184)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff58216f40     0  ldur x5, [x1, #15]
0xffff58216f44     4  ldur x6, [x5, #-1]
0xffff58216f48     8  ldr x16, pc+152 (addr 0x0000ffff58216fe0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58216f4c    12  cmp x6, x16
0xffff58216f50    16  b.ne #+0xa0 (addr 0xffff58216ff0)
0xffff58216f54    20  ldur w6, [x5, #11]
0xffff58216f58    24  tbnz w2, #0, #+0x54 (addr 0xffff58216fac)
0xffff58216f5c    28  asr x8, x2, #32
0xffff58216f60    32  cmp w8, w6
0xffff58216f64    36  b.hs #+0x9c (addr 0xffff58217000)
0xffff58216f68    40  mov x1, x0
0xffff58216f6c    44  add x2, x5, #0xf (15)
0xffff58216f70    48  str x1, [x2, w8, sxtw #3]
0xffff58216f74    52  add x2, x2, w8, sxtw #3
0xffff58216f78    56  tbz w1, #0, #+0x30 (addr 0xffff58216fa8)
0xffff58216f7c    60  and x1, x1, #0xfffffffffff00000
0xffff58216f80    64  ldr x1, [x1, #8]
0xffff58216f84    68  tbz w1, #1, #+0x24 (addr 0xffff58216fa8)
0xffff58216f88    72  and x1, x5, #0xfffffffffff00000
0xffff58216f8c    76  ldr x1, [x1, #8]
0xffff58216f90    80  tbz w1, #2, #+0x18 (addr 0xffff58216fa8)
0xffff58216f94    84  sub csp, jssp, #0x8 (8)
0xffff58216f98    88  str lr, [jssp, #-8]!
0xffff58216f9c    92  ldr x16, pc+76 (addr 0x0000ffff58216fe8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff58216fa0    96  blr x16
0xffff58216fa4   100  ldr lr, [jssp], #8
0xffff58216fa8   104  ret
0xffff58216fac   108  ldur x16, [x2, #-1]
0xffff58216fb0   112  ldr x17, [x26, #120]
0xffff58216fb4   116  cmp x16, x17
0xffff58216fb8   120  b.ne #+0x58 (addr 0xffff58217010)
0xffff58216fbc   124  ldur d29, [x2, #7]
0xffff58216fc0   128  fcvtzs w8, d29
0xffff58216fc4   132  scvtf d0, w8
0xffff58216fc8   136  fcmp d29, d0
0xffff58216fcc   140  b.ne #+0x44 (addr 0xffff58217010)
0xffff58216fd0   144  b #-0x70 (addr 0xffff58216f60)
0xffff58216fd4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58216fd8   152  d63f03e0       constant
0xffff58216fdc   156  d503201f       constant
0xffff58216fe0   160  32b04259       constant
0xffff58216fe4   164  00000000       constant
0xffff58216fe8   168  58216760       constant
0xffff58216fec   172  0000ffff       constant
0xffff58216ff0   176  movz x16, #0x0
0xffff58216ff4   180  sub csp, jssp, #0x10 (16)
0xffff58216ff8   184  stp fp, lr, [jssp, #-16]!
0xffff58216ffc   188  bl #+0x24 (addr 0xffff58217020)
0xffff58217000   192  movz x16, #0x8
0xffff58217004   196  sub csp, jssp, #0x10 (16)
0xffff58217008   200  stp fp, lr, [jssp, #-16]!
0xffff5821700c   204  bl #+0x14 (addr 0xffff58217020)
0xffff58217010   208  movz x16, #0x10
0xffff58217014   212  sub csp, jssp, #0x10 (16)
0xffff58217018   216  stp fp, lr, [jssp, #-16]!
0xffff5821701c   220  bl #+0x4 (addr 0xffff58217020)
0xffff58217020   224  movz x17, #0xa00000000
0xffff58217024   228  sub csp, jssp, #0x10 (16)
0xffff58217028   232  stp x17, cp, [jssp, #-16]!
0xffff5821702c   236  add fp, jssp, #0x10 (16)
0xffff58217030   240  ldr x17, pc+24 (addr 0x0000ffff58217048)    ;; lazy deoptimization bailout 0
0xffff58217034   244  add x17, x17, x16
0xffff58217038   248  br x17
0xffff5821703c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58217040   256  d63f03e0       constant
0xffff58217044   260  d503201f       constant
0xffff58217048   264  58006000       constant
0xffff5821704c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff58216f48  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58216f9c  code target (STUB)  (0xffff58216760)
0xffff58216fd4  constant pool (size 28)
0xffff58217030  runtime entry
0xffff5821703c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff58216f40     0  ldur x5, [x1, #15]
0xffff58216f44     4  ldur x6, [x5, #-1]
0xffff58216f48     8  ldr x16, pc+152 (addr 0x0000ffff58216fe0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58216f4c    12  cmp x6, x16
0xffff58216f50    16  b.ne #+0xa0 (addr 0xffff58216ff0)
0xffff58216f54    20  ldur w6, [x5, #11]
0xffff58216f58    24  tbnz w2, #0, #+0x54 (addr 0xffff58216fac)
0xffff58216f5c    28  asr x8, x2, #32
0xffff58216f60    32  cmp w8, w6
0xffff58216f64    36  b.hs #+0x9c (addr 0xffff58217000)
0xffff58216f68    40  mov x1, x0
0xffff58216f6c    44  add x2, x5, #0xf (15)
0xffff58216f70    48  str x1, [x2, w8, sxtw #3]
0xffff58216f74    52  add x2, x2, w8, sxtw #3
0xffff58216f78    56  tbz w1, #0, #+0x30 (addr 0xffff58216fa8)
0xffff58216f7c    60  and x1, x1, #0xfffffffffff00000
0xffff58216f80    64  ldr x1, [x1, #8]
0xffff58216f84    68  tbz w1, #1, #+0x24 (addr 0xffff58216fa8)
0xffff58216f88    72  and x1, x5, #0xfffffffffff00000
0xffff58216f8c    76  ldr x1, [x1, #8]
0xffff58216f90    80  tbz w1, #2, #+0x18 (addr 0xffff58216fa8)
0xffff58216f94    84  sub csp, jssp, #0x8 (8)
0xffff58216f98    88  str lr, [jssp, #-8]!
0xffff58216f9c    92  ldr x16, pc+76 (addr 0x0000ffff58216fe8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff58216fa0    96  blr x16
0xffff58216fa4   100  ldr lr, [jssp], #8
0xffff58216fa8   104  ret
0xffff58216fac   108  ldur x16, [x2, #-1]
0xffff58216fb0   112  ldr x17, [x26, #120]
0xffff58216fb4   116  cmp x16, x17
0xffff58216fb8   120  b.ne #+0x58 (addr 0xffff58217010)
0xffff58216fbc   124  ldur d29, [x2, #7]
0xffff58216fc0   128  fcvtzs w8, d29
0xffff58216fc4   132  scvtf d0, w8
0xffff58216fc8   136  fcmp d29, d0
0xffff58216fcc   140  b.ne #+0x44 (addr 0xffff58217010)
0xffff58216fd0   144  b #-0x70 (addr 0xffff58216f60)
0xffff58216fd4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58216fd8   152  d63f03e0       constant
0xffff58216fdc   156  d503201f       constant
0xffff58216fe0   160  32b04259       constant
0xffff58216fe4   164  00000000       constant
0xffff58216fe8   168  58216760       constant
0xffff58216fec   172  0000ffff       constant
0xffff58216ff0   176  movz x16, #0x0
0xffff58216ff4   180  sub csp, jssp, #0x10 (16)
0xffff58216ff8   184  stp fp, lr, [jssp, #-16]!
0xffff58216ffc   188  bl #+0x24 (addr 0xffff58217020)
0xffff58217000   192  movz x16, #0x8
0xffff58217004   196  sub csp, jssp, #0x10 (16)
0xffff58217008   200  stp fp, lr, [jssp, #-16]!
0xffff5821700c   204  bl #+0x14 (addr 0xffff58217020)
0xffff58217010   208  movz x16, #0x10
0xffff58217014   212  sub csp, jssp, #0x10 (16)
0xffff58217018   216  stp fp, lr, [jssp, #-16]!
0xffff5821701c   220  bl #+0x4 (addr 0xffff58217020)
0xffff58217020   224  movz x17, #0xa00000000
0xffff58217024   228  sub csp, jssp, #0x10 (16)
0xffff58217028   232  stp x17, cp, [jssp, #-16]!
0xffff5821702c   236  add fp, jssp, #0x10 (16)
0xffff58217030   240  ldr x17, pc+24 (addr 0x0000ffff58217048)    ;; lazy deoptimization bailout 0
0xffff58217034   244  add x17, x17, x16
0xffff58217038   248  br x17
0xffff5821703c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58217040   256  d63f03e0       constant
0xffff58217044   260  d503201f       constant
0xffff58217048   264  58006000       constant
0xffff5821704c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff58216f48  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58216f9c  code target (STUB)  (0xffff58216760)
0xffff58216fd4  constant pool (size 28)
0xffff58217030  runtime entry
0xffff5821703c  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff582170c0     0  adr xzr, #+0x40 (addr 0xffff58217100)
0xffff582170c4     4  adr xzr, #+0x360 (addr 0xffff58217424)
0xffff582170c8     8  ldr x16, pc+1736 (addr 0x0000ffff58217790)    ;; external reference (store_buffer_top)
0xffff582170cc    12  ldr x2, [x16]
0xffff582170d0    16  str x3, [x2], #8
0xffff582170d4    20  str x2, [x16]
0xffff582170d8    24  tst x2, #0x1ffff
0xffff582170dc    28  b.eq #+0x8 (addr 0xffff582170e4)
0xffff582170e0    32  ret
0xffff582170e4    36  sub csp, jssp, #0x8 (8)
0xffff582170e8    40  str lr, [jssp, #-8]!
0xffff582170ec    44  ldr x17, pc+1708 (addr 0x0000ffff58217798)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582170f0    48  blr x17
0xffff582170f4    52  ldr lr, [jssp], #8
0xffff582170f8    56  ret
0xffff582170fc    60  ret
0xffff58217100    64  sub csp, jssp, #0x10 (16)
0xffff58217104    68  stp x4, x0, [jssp, #-16]!
0xffff58217108    72  ldr x2, [x3]
0xffff5821710c    76  and x16, x2, #0xfffffffffff00000
0xffff58217110    80  ldr x16, [x16, #8]
0xffff58217114    84  tst x16, #0x18
0xffff58217118    88  b.eq #+0x1d8 (addr 0xffff582172f0)
0xffff5821711c    92  and x16, x1, #0xfffffffffff00000
0xffff58217120    96  ldr x16, [x16, #8]
0xffff58217124   100  tst x16, #0x18
0xffff58217128   104  b.ne #+0x1c8 (addr 0xffff582172f0)
0xffff5821712c   108  and x2, x1, #0xfffffffffff00000
0xffff58217130   112  ldr x0, [x2, #104]
0xffff58217134   116  subs x0, x0, #0x1 (1)
0xffff58217138   120  str x0, [x2, #104]
0xffff5821713c   124  b.mi #+0xc4 (addr 0xffff58217200)
0xffff58217140   128  ubfx x16, x1, #8, #12
0xffff58217144   132  and x2, x1, #0xfffffffffff00000
0xffff58217148   136  add x2, x2, x16, lsl #2
0xffff5821714c   140  ubfx x0, x1, #3, #5
0xffff58217150   144  ldr x2, [x2, #360]
0xffff58217154   148  lsr x2, x2, x0
0xffff58217158   152  tbz w2, #0, #+0x8 (addr 0xffff58217160)
0xffff5821715c   156  tbnz w2, #1, #+0x3c (addr 0xffff58217198)
0xffff58217160   160  ldp x4, x0, [jssp], #16
0xffff58217164   164  ldr x16, pc+1596 (addr 0x0000ffff582177a0)    ;; external reference (store_buffer_top)
0xffff58217168   168  ldr x2, [x16]
0xffff5821716c   172  str x3, [x2], #8
0xffff58217170   176  str x2, [x16]
0xffff58217174   180  tst x2, #0x1ffff
0xffff58217178   184  b.eq #+0x8 (addr 0xffff58217180)
0xffff5821717c   188  ret
0xffff58217180   192  sub csp, jssp, #0x8 (8)
0xffff58217184   196  str lr, [jssp, #-8]!
0xffff58217188   200  ldr x17, pc+1568 (addr 0x0000ffff582177a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5821718c   204  blr x17
0xffff58217190   208  ldr lr, [jssp], #8
0xffff58217194   212  ret
0xffff58217198   216  ldr x2, [x3]
0xffff5821719c   220  sub csp, jssp, #0x10 (16)
0xffff582171a0   224  stp x1, x3, [jssp, #-16]!
0xffff582171a4   228  ubfx x16, x2, #8, #12
0xffff582171a8   232  and x0, x2, #0xfffffffffff00000
0xffff582171ac   236  add x0, x0, x16, lsl #2
0xffff582171b0   240  ubfx x1, x2, #3, #5
0xffff582171b4   244  ldr x3, [x0, #360]
0xffff582171b8   248  lsr x3, x3, x1
0xffff582171bc   252  tbz w3, #0, #+0x40 (addr 0xffff582171fc)
0xffff582171c0   256  ldp x1, x3, [jssp], #16
0xffff582171c4   260  ldp x4, x0, [jssp], #16
0xffff582171c8   264  ldr x16, pc+1512 (addr 0x0000ffff582177b0)    ;; external reference (store_buffer_top)
0xffff582171cc   268  ldr x2, [x16]
0xffff582171d0   272  str x3, [x2], #8
0xffff582171d4   276  str x2, [x16]
0xffff582171d8   280  tst x2, #0x1ffff
0xffff582171dc   284  b.eq #+0x8 (addr 0xffff582171e4)
0xffff582171e0   288  ret
0xffff582171e4   292  sub csp, jssp, #0x8 (8)
0xffff582171e8   296  str lr, [jssp, #-8]!
0xffff582171ec   300  ldr x17, pc+1484 (addr 0x0000ffff582177b8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582171f0   304  blr x17
0xffff582171f4   308  ldr lr, [jssp], #8
0xffff582171f8   312  ret
0xffff582171fc   316  ldp x1, x3, [jssp], #16
0xffff58217200   320  sub csp, jssp, #0x78 (120)
0xffff58217204   324  stp x14, x15, [jssp, #-32]!
0xffff58217208   328  stp x18, lr, [jssp, #16]
0xffff5821720c   332  stp x10, x11, [jssp, #-32]!
0xffff58217210   336  stp x12, x13, [jssp, #16]
0xffff58217214   340  stp x6, x7, [jssp, #-32]!
0xffff58217218   344  stp x8, x9, [jssp, #16]
0xffff5821721c   348  stp x1, x3, [jssp, #-24]!
0xffff58217220   352  str x5, [jssp, #16]
0xffff58217224   356  sub csp, jssp, #0xb0 (176)
0xffff58217228   360  stp d26, d27, [jssp, #-32]!
0xffff5821722c   364  stp d28, d29, [jssp, #16]
0xffff58217230   368  stp d22, d23, [jssp, #-32]!
0xffff58217234   372  stp d24, d25, [jssp, #16]
0xffff58217238   376  stp d18, d19, [jssp, #-32]!
0xffff5821723c   380  stp d20, d21, [jssp, #16]
0xffff58217240   384  stp d6, d7, [jssp, #-32]!
0xffff58217244   388  stp d16, d17, [jssp, #16]
0xffff58217248   392  stp d2, d3, [jssp, #-32]!
0xffff5821724c   396  stp d4, d5, [jssp, #16]
0xffff58217250   400  stp d0, d1, [jssp, #-16]!
0xffff58217254   404  mov x0, x1
0xffff58217258   408  mov x1, x3
0xffff5821725c   412  ldr x2, pc+1380 (addr 0x0000ffff582177c0)    ;; external reference (isolate)
0xffff58217260   416  ldr x16, pc+1384 (addr 0x0000ffff582177c8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58217264   420  and csp, jssp, #0xfffffffffffffff0
0xffff58217268   424  blr x16
0xffff5821726c   428  ldp d2, d3, [jssp, #16]
0xffff58217270   432  ldp d0, d1, [jssp], #32
0xffff58217274   436  ldp d6, d7, [jssp, #16]
0xffff58217278   440  ldp d4, d5, [jssp], #32
0xffff5821727c   444  ldp d18, d19, [jssp, #16]
0xffff58217280   448  ldp d16, d17, [jssp], #32
0xffff58217284   452  ldp d22, d23, [jssp, #16]
0xffff58217288   456  ldp d20, d21, [jssp], #32
0xffff5821728c   460  ldp d26, d27, [jssp, #16]
0xffff58217290   464  ldp d24, d25, [jssp], #32
0xffff58217294   468  ldp d28, d29, [jssp], #16
0xffff58217298   472  ldp x5, x6, [jssp, #16]
0xffff5821729c   476  ldp x1, x3, [jssp], #32
0xffff582172a0   480  ldp x9, x10, [jssp, #16]
0xffff582172a4   484  ldp x7, x8, [jssp], #32
0xffff582172a8   488  ldp x13, x14, [jssp, #16]
0xffff582172ac   492  ldp x11, x12, [jssp], #32
0xffff582172b0   496  ldr lr, [jssp, #16]
0xffff582172b4   500  ldp x15, x18, [jssp], #24
0xffff582172b8   504  ldp x4, x0, [jssp], #16
0xffff582172bc   508  ldr x16, pc+1300 (addr 0x0000ffff582177d0)    ;; external reference (store_buffer_top)
0xffff582172c0   512  ldr x2, [x16]
0xffff582172c4   516  str x3, [x2], #8
0xffff582172c8   520  str x2, [x16]
0xffff582172cc   524  tst x2, #0x1ffff
0xffff582172d0   528  b.eq #+0x8 (addr 0xffff582172d8)
0xffff582172d4   532  ret
0xffff582172d8   536  sub csp, jssp, #0x8 (8)
0xffff582172dc   540  str lr, [jssp, #-8]!
0xffff582172e0   544  ldr x17, pc+1272 (addr 0x0000ffff582177d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582172e4   548  blr x17
0xffff582172e8   552  ldr lr, [jssp], #8
0xffff582172ec   556  ret
0xffff582172f0   560  and x2, x1, #0xfffffffffff00000
0xffff582172f4   564  ldr x0, [x2, #104]
0xffff582172f8   568  subs x0, x0, #0x1 (1)
0xffff582172fc   572  str x0, [x2, #104]
0xffff58217300   576  b.mi #+0x64 (addr 0xffff58217364)
0xffff58217304   580  ubfx x16, x1, #8, #12
0xffff58217308   584  and x2, x1, #0xfffffffffff00000
0xffff5821730c   588  add x2, x2, x16, lsl #2
0xffff58217310   592  ubfx x0, x1, #3, #5
0xffff58217314   596  ldr x2, [x2, #360]
0xffff58217318   600  lsr x2, x2, x0
0xffff5821731c   604  tbz w2, #0, #+0x8 (addr 0xffff58217324)
0xffff58217320   608  tbnz w2, #1, #+0xc (addr 0xffff5821732c)
0xffff58217324   612  ldp x4, x0, [jssp], #16
0xffff58217328   616  ret
0xffff5821732c   620  ldr x2, [x3]
0xffff58217330   624  sub csp, jssp, #0x10 (16)
0xffff58217334   628  stp x1, x3, [jssp, #-16]!
0xffff58217338   632  ubfx x16, x2, #8, #12
0xffff5821733c   636  and x0, x2, #0xfffffffffff00000
0xffff58217340   640  add x0, x0, x16, lsl #2
0xffff58217344   644  ubfx x1, x2, #3, #5
0xffff58217348   648  ldr x3, [x0, #360]
0xffff5821734c   652  lsr x3, x3, x1
0xffff58217350   656  tbz w3, #0, #+0x10 (addr 0xffff58217360)
0xffff58217354   660  ldp x1, x3, [jssp], #16
0xffff58217358   664  ldp x4, x0, [jssp], #16
0xffff5821735c   668  ret
0xffff58217360   672  ldp x1, x3, [jssp], #16
0xffff58217364   676  sub csp, jssp, #0x78 (120)
0xffff58217368   680  stp x14, x15, [jssp, #-32]!
0xffff5821736c   684  stp x18, lr, [jssp, #16]
0xffff58217370   688  stp x10, x11, [jssp, #-32]!
0xffff58217374   692  stp x12, x13, [jssp, #16]
0xffff58217378   696  stp x6, x7, [jssp, #-32]!
0xffff5821737c   700  stp x8, x9, [jssp, #16]
0xffff58217380   704  stp x1, x3, [jssp, #-24]!
0xffff58217384   708  str x5, [jssp, #16]
0xffff58217388   712  sub csp, jssp, #0xb0 (176)
0xffff5821738c   716  stp d26, d27, [jssp, #-32]!
0xffff58217390   720  stp d28, d29, [jssp, #16]
0xffff58217394   724  stp d22, d23, [jssp, #-32]!
0xffff58217398   728  stp d24, d25, [jssp, #16]
0xffff5821739c   732  stp d18, d19, [jssp, #-32]!
0xffff582173a0   736  stp d20, d21, [jssp, #16]
0xffff582173a4   740  stp d6, d7, [jssp, #-32]!
0xffff582173a8   744  stp d16, d17, [jssp, #16]
0xffff582173ac   748  stp d2, d3, [jssp, #-32]!
0xffff582173b0   752  stp d4, d5, [jssp, #16]
0xffff582173b4   756  stp d0, d1, [jssp, #-16]!
0xffff582173b8   760  mov x0, x1
0xffff582173bc   764  mov x1, x3
0xffff582173c0   768  ldr x2, pc+1056 (addr 0x0000ffff582177e0)    ;; external reference (isolate)
0xffff582173c4   772  ldr x16, pc+1060 (addr 0x0000ffff582177e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582173c8   776  and csp, jssp, #0xfffffffffffffff0
0xffff582173cc   780  blr x16
0xffff582173d0   784  ldp d2, d3, [jssp, #16]
0xffff582173d4   788  ldp d0, d1, [jssp], #32
0xffff582173d8   792  ldp d6, d7, [jssp, #16]
0xffff582173dc   796  ldp d4, d5, [jssp], #32
0xffff582173e0   800  ldp d18, d19, [jssp, #16]
0xffff582173e4   804  ldp d16, d17, [jssp], #32
0xffff582173e8   808  ldp d22, d23, [jssp, #16]
0xffff582173ec   812  ldp d20, d21, [jssp], #32
0xffff582173f0   816  ldp d26, d27, [jssp, #16]
0xffff582173f4   820  ldp d24, d25, [jssp], #32
0xffff582173f8   824  ldp d28, d29, [jssp], #16
0xffff582173fc   828  ldp x5, x6, [jssp, #16]
0xffff58217400   832  ldp x1, x3, [jssp], #32
0xffff58217404   836  ldp x9, x10, [jssp, #16]
0xffff58217408   840  ldp x7, x8, [jssp], #32
0xffff5821740c   844  ldp x13, x14, [jssp, #16]
0xffff58217410   848  ldp x11, x12, [jssp], #32
0xffff58217414   852  ldr lr, [jssp, #16]
0xffff58217418   856  ldp x15, x18, [jssp], #24
0xffff5821741c   860  ldp x4, x0, [jssp], #16
0xffff58217420   864  ret
0xffff58217424   868  sub csp, jssp, #0x10 (16)
0xffff58217428   872  stp x4, x0, [jssp, #-16]!
0xffff5821742c   876  ldr x2, [x3]
0xffff58217430   880  and x16, x2, #0xfffffffffff00000
0xffff58217434   884  ldr x16, [x16, #8]
0xffff58217438   888  tst x16, #0x18
0xffff5821743c   892  b.eq #+0x1f8 (addr 0xffff58217634)
0xffff58217440   896  and x16, x1, #0xfffffffffff00000
0xffff58217444   900  ldr x16, [x16, #8]
0xffff58217448   904  tst x16, #0x18
0xffff5821744c   908  b.ne #+0x1e8 (addr 0xffff58217634)
0xffff58217450   912  and x2, x1, #0xfffffffffff00000
0xffff58217454   916  ldr x0, [x2, #104]
0xffff58217458   920  subs x0, x0, #0x1 (1)
0xffff5821745c   924  str x0, [x2, #104]
0xffff58217460   928  b.mi #+0xe4 (addr 0xffff58217544)
0xffff58217464   932  ubfx x16, x1, #8, #12
0xffff58217468   936  and x2, x1, #0xfffffffffff00000
0xffff5821746c   940  add x2, x2, x16, lsl #2
0xffff58217470   944  ubfx x0, x1, #3, #5
0xffff58217474   948  ldr x2, [x2, #360]
0xffff58217478   952  lsr x2, x2, x0
0xffff5821747c   956  tbz w2, #0, #+0x8 (addr 0xffff58217484)
0xffff58217480   960  tbnz w2, #1, #+0x3c (addr 0xffff582174bc)
0xffff58217484   964  ldp x4, x0, [jssp], #16
0xffff58217488   968  ldr x16, pc+872 (addr 0x0000ffff582177f0)    ;; external reference (store_buffer_top)
0xffff5821748c   972  ldr x2, [x16]
0xffff58217490   976  str x3, [x2], #8
0xffff58217494   980  str x2, [x16]
0xffff58217498   984  tst x2, #0x1ffff
0xffff5821749c   988  b.eq #+0x8 (addr 0xffff582174a4)
0xffff582174a0   992  ret
0xffff582174a4   996  sub csp, jssp, #0x8 (8)
0xffff582174a8  1000  str lr, [jssp, #-8]!
0xffff582174ac  1004  ldr x17, pc+844 (addr 0x0000ffff582177f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582174b0  1008  blr x17
0xffff582174b4  1012  ldr lr, [jssp], #8
0xffff582174b8  1016  ret
0xffff582174bc  1020  ldr x2, [x3]
0xffff582174c0  1024  and x0, x2, #0xfffffffffff00000
0xffff582174c4  1028  ldr x0, [x0, #8]
0xffff582174c8  1032  tbz w0, #6, #+0x18 (addr 0xffff582174e0)
0xffff582174cc  1036  and x0, x1, #0xfffffffffff00000
0xffff582174d0  1040  ldr x0, [x0, #8]
0xffff582174d4  1044  movz x16, #0x58
0xffff582174d8  1048  tst x0, x16
0xffff582174dc  1052  b.eq #+0x68 (addr 0xffff58217544)
0xffff582174e0  1056  sub csp, jssp, #0x10 (16)
0xffff582174e4  1060  stp x1, x3, [jssp, #-16]!
0xffff582174e8  1064  ubfx x16, x2, #8, #12
0xffff582174ec  1068  and x0, x2, #0xfffffffffff00000
0xffff582174f0  1072  add x0, x0, x16, lsl #2
0xffff582174f4  1076  ubfx x1, x2, #3, #5
0xffff582174f8  1080  ldr x3, [x0, #360]
0xffff582174fc  1084  lsr x3, x3, x1
0xffff58217500  1088  tbz w3, #0, #+0x40 (addr 0xffff58217540)
0xffff58217504  1092  ldp x1, x3, [jssp], #16
0xffff58217508  1096  ldp x4, x0, [jssp], #16
0xffff5821750c  1100  ldr x16, pc+756 (addr 0x0000ffff58217800)    ;; external reference (store_buffer_top)
0xffff58217510  1104  ldr x2, [x16]
0xffff58217514  1108  str x3, [x2], #8
0xffff58217518  1112  str x2, [x16]
0xffff5821751c  1116  tst x2, #0x1ffff
0xffff58217520  1120  b.eq #+0x8 (addr 0xffff58217528)
0xffff58217524  1124  ret
0xffff58217528  1128  sub csp, jssp, #0x8 (8)
0xffff5821752c  1132  str lr, [jssp, #-8]!
0xffff58217530  1136  ldr x17, pc+728 (addr 0x0000ffff58217808)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58217534  1140  blr x17
0xffff58217538  1144  ldr lr, [jssp], #8
0xffff5821753c  1148  ret
0xffff58217540  1152  ldp x1, x3, [jssp], #16
0xffff58217544  1156  sub csp, jssp, #0x78 (120)
0xffff58217548  1160  stp x14, x15, [jssp, #-32]!
0xffff5821754c  1164  stp x18, lr, [jssp, #16]
0xffff58217550  1168  stp x10, x11, [jssp, #-32]!
0xffff58217554  1172  stp x12, x13, [jssp, #16]
0xffff58217558  1176  stp x6, x7, [jssp, #-32]!
0xffff5821755c  1180  stp x8, x9, [jssp, #16]
0xffff58217560  1184  stp x1, x3, [jssp, #-24]!
0xffff58217564  1188  str x5, [jssp, #16]
0xffff58217568  1192  sub csp, jssp, #0xb0 (176)
0xffff5821756c  1196  stp d26, d27, [jssp, #-32]!
0xffff58217570  1200  stp d28, d29, [jssp, #16]
0xffff58217574  1204  stp d22, d23, [jssp, #-32]!
0xffff58217578  1208  stp d24, d25, [jssp, #16]
0xffff5821757c  1212  stp d18, d19, [jssp, #-32]!
0xffff58217580  1216  stp d20, d21, [jssp, #16]
0xffff58217584  1220  stp d6, d7, [jssp, #-32]!
0xffff58217588  1224  stp d16, d17, [jssp, #16]
0xffff5821758c  1228  stp d2, d3, [jssp, #-32]!
0xffff58217590  1232  stp d4, d5, [jssp, #16]
0xffff58217594  1236  stp d0, d1, [jssp, #-16]!
0xffff58217598  1240  mov x0, x1
0xffff5821759c  1244  mov x1, x3
0xffff582175a0  1248  ldr x2, pc+624 (addr 0x0000ffff58217810)    ;; external reference (isolate)
0xffff582175a4  1252  ldr x16, pc+628 (addr 0x0000ffff58217818)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582175a8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff582175ac  1260  blr x16
0xffff582175b0  1264  ldp d2, d3, [jssp, #16]
0xffff582175b4  1268  ldp d0, d1, [jssp], #32
0xffff582175b8  1272  ldp d6, d7, [jssp, #16]
0xffff582175bc  1276  ldp d4, d5, [jssp], #32
0xffff582175c0  1280  ldp d18, d19, [jssp, #16]
0xffff582175c4  1284  ldp d16, d17, [jssp], #32
0xffff582175c8  1288  ldp d22, d23, [jssp, #16]
0xffff582175cc  1292  ldp d20, d21, [jssp], #32
0xffff582175d0  1296  ldp d26, d27, [jssp, #16]
0xffff582175d4  1300  ldp d24, d25, [jssp], #32
0xffff582175d8  1304  ldp d28, d29, [jssp], #16
0xffff582175dc  1308  ldp x5, x6, [jssp, #16]
0xffff582175e0  1312  ldp x1, x3, [jssp], #32
0xffff582175e4  1316  ldp x9, x10, [jssp, #16]
0xffff582175e8  1320  ldp x7, x8, [jssp], #32
0xffff582175ec  1324  ldp x13, x14, [jssp, #16]
0xffff582175f0  1328  ldp x11, x12, [jssp], #32
0xffff582175f4  1332  ldr lr, [jssp, #16]
0xffff582175f8  1336  ldp x15, x18, [jssp], #24
0xffff582175fc  1340  ldp x4, x0, [jssp], #16
0xffff58217600  1344  ldr x16, pc+544 (addr 0x0000ffff58217820)    ;; external reference (store_buffer_top)
0xffff58217604  1348  ldr x2, [x16]
0xffff58217608  1352  str x3, [x2], #8
0xffff5821760c  1356  str x2, [x16]
0xffff58217610  1360  tst x2, #0x1ffff
0xffff58217614  1364  b.eq #+0x8 (addr 0xffff5821761c)
0xffff58217618  1368  ret
0xffff5821761c  1372  sub csp, jssp, #0x8 (8)
0xffff58217620  1376  str lr, [jssp, #-8]!
0xffff58217624  1380  ldr x17, pc+516 (addr 0x0000ffff58217828)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58217628  1384  blr x17
0xffff5821762c  1388  ldr lr, [jssp], #8
0xffff58217630  1392  ret
0xffff58217634  1396  and x2, x1, #0xfffffffffff00000
0xffff58217638  1400  ldr x0, [x2, #104]
0xffff5821763c  1404  subs x0, x0, #0x1 (1)
0xffff58217640  1408  str x0, [x2, #104]
0xffff58217644  1412  b.mi #+0x84 (addr 0xffff582176c8)
0xffff58217648  1416  ubfx x16, x1, #8, #12
0xffff5821764c  1420  and x2, x1, #0xfffffffffff00000
0xffff58217650  1424  add x2, x2, x16, lsl #2
0xffff58217654  1428  ubfx x0, x1, #3, #5
0xffff58217658  1432  ldr x2, [x2, #360]
0xffff5821765c  1436  lsr x2, x2, x0
0xffff58217660  1440  tbz w2, #0, #+0x8 (addr 0xffff58217668)
0xffff58217664  1444  tbnz w2, #1, #+0xc (addr 0xffff58217670)
0xffff58217668  1448  ldp x4, x0, [jssp], #16
0xffff5821766c  1452  ret
0xffff58217670  1456  ldr x2, [x3]
0xffff58217674  1460  and x0, x2, #0xfffffffffff00000
0xffff58217678  1464  ldr x0, [x0, #8]
0xffff5821767c  1468  tbz w0, #6, #+0x18 (addr 0xffff58217694)
0xffff58217680  1472  and x0, x1, #0xfffffffffff00000
0xffff58217684  1476  ldr x0, [x0, #8]
0xffff58217688  1480  movz x16, #0x58
0xffff5821768c  1484  tst x0, x16
0xffff58217690  1488  b.eq #+0x38 (addr 0xffff582176c8)
0xffff58217694  1492  sub csp, jssp, #0x10 (16)
0xffff58217698  1496  stp x1, x3, [jssp, #-16]!
0xffff5821769c  1500  ubfx x16, x2, #8, #12
0xffff582176a0  1504  and x0, x2, #0xfffffffffff00000
0xffff582176a4  1508  add x0, x0, x16, lsl #2
0xffff582176a8  1512  ubfx x1, x2, #3, #5
0xffff582176ac  1516  ldr x3, [x0, #360]
0xffff582176b0  1520  lsr x3, x3, x1
0xffff582176b4  1524  tbz w3, #0, #+0x10 (addr 0xffff582176c4)
0xffff582176b8  1528  ldp x1, x3, [jssp], #16
0xffff582176bc  1532  ldp x4, x0, [jssp], #16
0xffff582176c0  1536  ret
0xffff582176c4  1540  ldp x1, x3, [jssp], #16
0xffff582176c8  1544  sub csp, jssp, #0x78 (120)
0xffff582176cc  1548  stp x14, x15, [jssp, #-32]!
0xffff582176d0  1552  stp x18, lr, [jssp, #16]
0xffff582176d4  1556  stp x10, x11, [jssp, #-32]!
0xffff582176d8  1560  stp x12, x13, [jssp, #16]
0xffff582176dc  1564  stp x6, x7, [jssp, #-32]!
0xffff582176e0  1568  stp x8, x9, [jssp, #16]
0xffff582176e4  1572  stp x1, x3, [jssp, #-24]!
0xffff582176e8  1576  str x5, [jssp, #16]
0xffff582176ec  1580  sub csp, jssp, #0xb0 (176)
0xffff582176f0  1584  stp d26, d27, [jssp, #-32]!
0xffff582176f4  1588  stp d28, d29, [jssp, #16]
0xffff582176f8  1592  stp d22, d23, [jssp, #-32]!
0xffff582176fc  1596  stp d24, d25, [jssp, #16]
0xffff58217700  1600  stp d18, d19, [jssp, #-32]!
0xffff58217704  1604  stp d20, d21, [jssp, #16]
0xffff58217708  1608  stp d6, d7, [jssp, #-32]!
0xffff5821770c  1612  stp d16, d17, [jssp, #16]
0xffff58217710  1616  stp d2, d3, [jssp, #-32]!
0xffff58217714  1620  stp d4, d5, [jssp, #16]
0xffff58217718  1624  stp d0, d1, [jssp, #-16]!
0xffff5821771c  1628  mov x0, x1
0xffff58217720  1632  mov x1, x3
0xffff58217724  1636  ldr x2, pc+268 (addr 0x0000ffff58217830)    ;; external reference (isolate)
0xffff58217728  1640  ldr x16, pc+272 (addr 0x0000ffff58217838)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5821772c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff58217730  1648  blr x16
0xffff58217734  1652  ldp d2, d3, [jssp, #16]
0xffff58217738  1656  ldp d0, d1, [jssp], #32
0xffff5821773c  1660  ldp d6, d7, [jssp, #16]
0xffff58217740  1664  ldp d4, d5, [jssp], #32
0xffff58217744  1668  ldp d18, d19, [jssp, #16]
0xffff58217748  1672  ldp d16, d17, [jssp], #32
0xffff5821774c  1676  ldp d22, d23, [jssp, #16]
0xffff58217750  1680  ldp d20, d21, [jssp], #32
0xffff58217754  1684  ldp d26, d27, [jssp, #16]
0xffff58217758  1688  ldp d24, d25, [jssp], #32
0xffff5821775c  1692  ldp d28, d29, [jssp], #16
0xffff58217760  1696  ldp x5, x6, [jssp, #16]
0xffff58217764  1700  ldp x1, x3, [jssp], #32
0xffff58217768  1704  ldp x9, x10, [jssp, #16]
0xffff5821776c  1708  ldp x7, x8, [jssp], #32
0xffff58217770  1712  ldp x13, x14, [jssp, #16]
0xffff58217774  1716  ldp x11, x12, [jssp], #32
0xffff58217778  1720  ldr lr, [jssp, #16]
0xffff5821777c  1724  ldp x15, x18, [jssp], #24
0xffff58217780  1728  ldp x4, x0, [jssp], #16
0xffff58217784  1732  ret
0xffff58217788  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5821778c  1740  d63f03e0       constant
0xffff58217790  1744  16e798c0       constant
0xffff58217794  1748  00000000       constant
0xffff58217798  1752  582065a0       constant
0xffff5821779c  1756  0000ffff       constant
0xffff582177a0  1760  16e798c0       constant
0xffff582177a4  1764  00000000       constant
0xffff582177a8  1768  582065a0       constant
0xffff582177ac  1772  0000ffff       constant
0xffff582177b0  1776  16e798c0       constant
0xffff582177b4  1780  00000000       constant
0xffff582177b8  1784  582065a0       constant
0xffff582177bc  1788  0000ffff       constant
0xffff582177c0  1792  16e782d0       constant
0xffff582177c4  1796  00000000       constant
0xffff582177c8  1800  00c2d958       constant
0xffff582177cc  1804  00000000       constant
0xffff582177d0  1808  16e798c0       constant
0xffff582177d4  1812  00000000       constant
0xffff582177d8  1816  582065a0       constant
0xffff582177dc  1820  0000ffff       constant
0xffff582177e0  1824  16e782d0       constant
0xffff582177e4  1828  00000000       constant
0xffff582177e8  1832  00c2d958       constant
0xffff582177ec  1836  00000000       constant
0xffff582177f0  1840  16e798c0       constant
0xffff582177f4  1844  00000000       constant
0xffff582177f8  1848  582065a0       constant
0xffff582177fc  1852  0000ffff       constant
0xffff58217800  1856  16e798c0       constant
0xffff58217804  1860  00000000       constant
0xffff58217808  1864  582065a0       constant
0xffff5821780c  1868  0000ffff       constant
0xffff58217810  1872  16e782d0       constant
0xffff58217814  1876  00000000       constant
0xffff58217818  1880  00c2d958       constant
0xffff5821781c  1884  00000000       constant
0xffff58217820  1888  16e798c0       constant
0xffff58217824  1892  00000000       constant
0xffff58217828  1896  582065a0       constant
0xffff5821782c  1900  0000ffff       constant
0xffff58217830  1904  16e782d0       constant
0xffff58217834  1908  00000000       constant
0xffff58217838  1912  00c2d958       constant
0xffff5821783c  1916  00000000       constant


RelocInfo (size = 65)
0xffff582170c8  external reference (store_buffer_top)  (0x16e798c0)
0xffff582170ec  code target (STUB)  (0xffff582065a0)
0xffff58217164  external reference (store_buffer_top)  (0x16e798c0)
0xffff58217188  code target (STUB)  (0xffff582065a0)
0xffff582171c8  external reference (store_buffer_top)  (0x16e798c0)
0xffff582171ec  code target (STUB)  (0xffff582065a0)
0xffff5821725c  external reference (isolate)  (0x16e782d0)
0xffff58217260  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582172bc  external reference (store_buffer_top)  (0x16e798c0)
0xffff582172e0  code target (STUB)  (0xffff582065a0)
0xffff582173c0  external reference (isolate)  (0x16e782d0)
0xffff582173c4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58217488  external reference (store_buffer_top)  (0x16e798c0)
0xffff582174ac  code target (STUB)  (0xffff582065a0)
0xffff5821750c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58217530  code target (STUB)  (0xffff582065a0)
0xffff582175a0  external reference (isolate)  (0x16e782d0)
0xffff582175a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58217600  external reference (store_buffer_top)  (0x16e798c0)
0xffff58217624  code target (STUB)  (0xffff582065a0)
0xffff58217724  external reference (isolate)  (0x16e782d0)
0xffff58217728  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58217788  constant pool (size 184)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff582178a0     0  sub csp, jssp, #0x10 (16)
0xffff582178a4     4  stp x1, x0, [jssp, #-16]!
0xffff582178a8     8  ldur x9, [x2, #7]
0xffff582178ac    12  ubfx x0, x9, #52, #11
0xffff582178b0    16  cmp x0, #0x453 (1107)
0xffff582178b4    20  csel x9, xzr, x9, ge
0xffff582178b8    24  b.ge #+0x1c (addr 0xffff582178d4)
0xffff582178bc    28  ubfx x1, x9, #0, #52
0xffff582178c0    32  orr x1, x1, #0x10000000000000
0xffff582178c4    36  tst x9, #0x8000000000000000
0xffff582178c8    40  cneg x1, x1, ne
0xffff582178cc    44  sub x0, x0, #0x433 (1075)
0xffff582178d0    48  lsl x9, x1, x0
0xffff582178d4    52  ldp x1, x0, [jssp], #16
0xffff582178d8    56  ret


RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 893)
0xffff58217940     0  ldur x5, [x1, #15]
0xffff58217944     4  ldur x6, [x5, #-1]
0xffff58217948     8  ldr x16, pc+648 (addr 0x0000ffff58217bd0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5821794c    12  cmp x6, x16
0xffff58217950    16  b.ne #+0x2c8 (addr 0xffff58217c18)
0xffff58217954    20  ldur w6, [x5, #11]
0xffff58217958    24  tbnz w2, #0, #+0x140 (addr 0xffff58217a98)
0xffff5821795c    28  asr x8, x2, #32
0xffff58217960    32  cmp w6, w8
0xffff58217964    36  b.le #+0x10 (addr 0xffff58217974)
0xffff58217968    40  cmp w8, w6
0xffff5821796c    44  b.hs #+0x2bc (addr 0xffff58217c28)
0xffff58217970    48  b #+0xe4 (addr 0xffff58217a54)
0xffff58217974    52  cmp w6, w8
0xffff58217978    56  b.gt #+0xdc (addr 0xffff58217a54)
0xffff5821797c    60  adds w7, w6, #0x400 (1024)
0xffff58217980    64  b.vs #+0x2b8 (addr 0xffff58217c38)
0xffff58217984    68  cmp w8, w7
0xffff58217988    72  b.hs #+0x2c0 (addr 0xffff58217c48)
0xffff5821798c    76  tbnz w2, #0, #+0x154 (addr 0xffff58217ae0)
0xffff58217990    80  asr x9, x2, #32
0xffff58217994    84  add w7, w8, w9, lsr #1
0xffff58217998    88  add w7, w7, #0x10 (16)
0xffff5821799c    92  movz w16, #0x95ff
0xffff582179a0    96  cmp w7, w16, lsl #1
0xffff582179a4   100  b.hs #+0x2b4 (addr 0xffff58217c58)
0xffff582179a8   104  lsl x2, x7, #32
0xffff582179ac   108  lsl w3, w7, #3
0xffff582179b0   112  add w3, w3, #0x10 (16)
0xffff582179b4   116  sxtw x3, w3
0xffff582179b8   120  movz x4, #0x92c0
0xffff582179bc   124  movk x4, #0x16e7, lsl #16
0xffff582179c0   128  ldp x9, x16, [x4]
0xffff582179c4   132  adds x7, x9, x3
0xffff582179c8   136  ccmp x7, x16, #nzCv, lo
0xffff582179cc   140  b.hi #+0x194 (addr 0xffff58217b60)
0xffff582179d0   144  str x7, [x4]
0xffff582179d4   148  orr x9, x9, #0x1
0xffff582179d8   152  ldr x3, pc+512 (addr 0x0000ffff58217bd8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582179dc   156  stur x3, [x9, #-1]
0xffff582179e0   160  stur x2, [x9, #7]
0xffff582179e4   164  ldur w2, [x9, #11]
0xffff582179e8   168  cmp w6, w2
0xffff582179ec   172  b.ge #+0x18 (addr 0xffff58217a04)
0xffff582179f0   176  sub w2, w2, #0x1 (1)
0xffff582179f4   180  ldr x3, pc+492 (addr 0x0000ffff58217be0)    ;; object: 0x39c04519 <the hole>
0xffff582179f8   184  add x4, x9, #0xf (15)
0xffff582179fc   188  str x3, [x4, w2, sxtw #3]
0xffff58217a00   192  b #-0x18 (addr 0xffff582179e8)
0xffff58217a04   196  cmp w6, #0x0 (0)
0xffff58217a08   200  b.le #+0x1c (addr 0xffff58217a24)
0xffff58217a0c   204  sub w6, w6, #0x1 (1)
0xffff58217a10   208  add x2, x5, #0xf (15)
0xffff58217a14   212  ldr x3, [x2, w6, sxtw #3]
0xffff58217a18   216  add x2, x9, #0xf (15)
0xffff58217a1c   220  str x3, [x2, w6, sxtw #3]
0xffff58217a20   224  b #-0x1c (addr 0xffff58217a04)
0xffff58217a24   228  mov x2, x9
0xffff58217a28   232  stur x2, [x1, #15]
0xffff58217a2c   236  add x3, x1, #0xf (15)
0xffff58217a30   240  and x2, x1, #0xfffffffffff00000
0xffff58217a34   244  ldr x2, [x2, #8]
0xffff58217a38   248  tbz w2, #2, #+0x18 (addr 0xffff58217a50)
0xffff58217a3c   252  sub csp, jssp, #0x8 (8)
0xffff58217a40   256  str lr, [jssp, #-8]!
0xffff58217a44   260  ldr x16, pc+420 (addr 0x0000ffff58217be8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58217a48   264  blr x16
0xffff58217a4c   268  ldr lr, [jssp], #8
0xffff58217a50   272  mov x5, x9
0xffff58217a54   276  mov x1, x0
0xffff58217a58   280  add x2, x5, #0xf (15)
0xffff58217a5c   284  str x1, [x2, w8, sxtw #3]
0xffff58217a60   288  add x2, x2, w8, sxtw #3
0xffff58217a64   292  tbz w1, #0, #+0x30 (addr 0xffff58217a94)
0xffff58217a68   296  and x1, x1, #0xfffffffffff00000
0xffff58217a6c   300  ldr x1, [x1, #8]
0xffff58217a70   304  tbz w1, #1, #+0x24 (addr 0xffff58217a94)
0xffff58217a74   308  and x1, x5, #0xfffffffffff00000
0xffff58217a78   312  ldr x1, [x1, #8]
0xffff58217a7c   316  tbz w1, #2, #+0x18 (addr 0xffff58217a94)
0xffff58217a80   320  sub csp, jssp, #0x8 (8)
0xffff58217a84   324  str lr, [jssp, #-8]!
0xffff58217a88   328  ldr x16, pc+360 (addr 0x0000ffff58217bf0)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff58217a8c   332  blr x16
0xffff58217a90   336  ldr lr, [jssp], #8
0xffff58217a94   340  ret
0xffff58217a98   344  sub csp, jssp, #0x10 (16)
0xffff58217a9c   348  stp fp, lr, [jssp, #-16]!
0xffff58217aa0   352  movz fp, #0xa00000000
0xffff58217aa4   356  sub csp, jssp, #0x8 (8)
0xffff58217aa8   360  str fp, [jssp, #-8]!
0xffff58217aac   364  add fp, jssp, #0x8 (8)
0xffff58217ab0   368  ldur x16, [x2, #-1]
0xffff58217ab4   372  ldr x17, [x26, #120]
0xffff58217ab8   376  cmp x16, x17
0xffff58217abc   380  b.ne #+0x1ac (addr 0xffff58217c68)
0xffff58217ac0   384  ldur d29, [x2, #7]
0xffff58217ac4   388  fcvtzs w8, d29
0xffff58217ac8   392  scvtf d0, w8
0xffff58217acc   396  fcmp d29, d0
0xffff58217ad0   400  b.ne #+0x198 (addr 0xffff58217c68)
0xffff58217ad4   404  ldr lr, [jssp, #16]
0xffff58217ad8   408  ldp xzr, fp, [jssp], #24
0xffff58217adc   412  b #-0x17c (addr 0xffff58217960)
0xffff58217ae0   416  sub csp, jssp, #0x10 (16)
0xffff58217ae4   420  stp fp, lr, [jssp, #-16]!
0xffff58217ae8   424  movz fp, #0xa00000000
0xffff58217aec   428  sub csp, jssp, #0x8 (8)
0xffff58217af0   432  str fp, [jssp, #-8]!
0xffff58217af4   436  add fp, jssp, #0x8 (8)
0xffff58217af8   440  ldur x16, [x2, #-1]
0xffff58217afc   444  ldr x17, [x26, #120]
0xffff58217b00   448  cmp x16, x17
0xffff58217b04   452  b.ne #+0x30 (addr 0xffff58217b34)
0xffff58217b08   456  ldur d30, [x2, #7]
0xffff58217b0c   460  fcvtzs x9, d30
0xffff58217b10   464  cmp x9, #0x1 (1)
0xffff58217b14   468  ccmn x9, #1, #nzcV, vc
0xffff58217b18   472  b.vc #+0x18 (addr 0xffff58217b30)
0xffff58217b1c   476  sub csp, jssp, #0x8 (8)
0xffff58217b20   480  str lr, [jssp, #-8]!
0xffff58217b24   484  ldr x16, pc+212 (addr 0x0000ffff58217bf8)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff58217b28   488  blr x16
0xffff58217b2c   492  ldr lr, [jssp], #8
0xffff58217b30   496  b #+0x24 (addr 0xffff58217b54)
0xffff58217b34   500  ldp x9, x7, [x26, #64]
0xffff58217b38   504  cmp x2, x9
0xffff58217b3c   508  cset x9, eq
0xffff58217b40   512  ccmp x2, x7, #nZcv, ne
0xffff58217b44   516  b.eq #+0x10 (addr 0xffff58217b54)
0xffff58217b48   520  ldr x16, [x26, #40]
0xffff58217b4c   524  cmp x2, x16
0xffff58217b50   528  b.ne #+0x120 (addr 0xffff58217c70)
0xffff58217b54   532  ldr lr, [jssp, #16]
0xffff58217b58   536  ldp xzr, fp, [jssp], #24
0xffff58217b5c   540  b #-0x1c8 (addr 0xffff58217994)
0xffff58217b60   544  sub csp, jssp, #0x10 (16)
0xffff58217b64   548  stp fp, lr, [jssp, #-16]!
0xffff58217b68   552  movz fp, #0xa00000000
0xffff58217b6c   556  sub csp, jssp, #0x8 (8)
0xffff58217b70   560  str fp, [jssp, #-8]!
0xffff58217b74   564  add fp, jssp, #0x8 (8)
0xffff58217b78   568  movz x9, #0x0
0xffff58217b7c   572  mov x16, lr
0xffff58217b80   576  ldr x17, pc+128 (addr 0x0000ffff58217c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58217b84   580  blr x17
0xffff58217b88   584  lsl x0, x3, #32
0xffff58217b8c   588  movz x10, #0x0
0xffff58217b90   592  sub csp, jssp, #0x10 (16)
0xffff58217b94   596  stp x10, x0, [jssp, #-16]!
0xffff58217b98   600  movz x0, #0x2
0xffff58217b9c   604  movz x1, #0x5b88
0xffff58217ba0   608  movk x1, #0xe2, lsl #16
0xffff58217ba4   612  ldr x16, pc+100 (addr 0x0000ffff58217c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff58217ba8   616  blr x16
0xffff58217bac   620  str x0, [jssp, #72]
0xffff58217bb0   624  ldr x16, pc+96 (addr 0x0000ffff58217c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58217bb4   628  blr x16
0xffff58217bb8   632  ldr lr, [jssp, #16]
0xffff58217bbc   636  ldp xzr, fp, [jssp], #24
0xffff58217bc0   640  b #-0x1e8 (addr 0xffff582179d8)
0xffff58217bc4   644  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff58217bc8   648  d63f03e0       constant
0xffff58217bcc   652  d503201f       constant
0xffff58217bd0   656  32b04259       constant
0xffff58217bd4   660  00000000       constant
0xffff58217bd8   664  32b04259       constant
0xffff58217bdc   668  00000000       constant
0xffff58217be0   672  39c04519       constant
0xffff58217be4   676  00000000       constant
0xffff58217be8   680  582170c0       constant
0xffff58217bec   684  0000ffff       constant
0xffff58217bf0   688  58216760       constant
0xffff58217bf4   692  0000ffff       constant
0xffff58217bf8   696  582178a0       constant
0xffff58217bfc   700  0000ffff       constant
0xffff58217c00   704  58206820       constant
0xffff58217c04   708  0000ffff       constant
0xffff58217c08   712  58206260       constant
0xffff58217c0c   716  0000ffff       constant
0xffff58217c10   720  582068e0       constant
0xffff58217c14   724  0000ffff       constant
0xffff58217c18   728  movz x16, #0x0
0xffff58217c1c   732  sub csp, jssp, #0x10 (16)
0xffff58217c20   736  stp fp, lr, [jssp, #-16]!
0xffff58217c24   740  bl #+0x54 (addr 0xffff58217c78)
0xffff58217c28   744  movz x16, #0x8
0xffff58217c2c   748  sub csp, jssp, #0x10 (16)
0xffff58217c30   752  stp fp, lr, [jssp, #-16]!
0xffff58217c34   756  bl #+0x44 (addr 0xffff58217c78)
0xffff58217c38   760  movz x16, #0x10
0xffff58217c3c   764  sub csp, jssp, #0x10 (16)
0xffff58217c40   768  stp fp, lr, [jssp, #-16]!
0xffff58217c44   772  bl #+0x34 (addr 0xffff58217c78)
0xffff58217c48   776  movz x16, #0x18
0xffff58217c4c   780  sub csp, jssp, #0x10 (16)
0xffff58217c50   784  stp fp, lr, [jssp, #-16]!
0xffff58217c54   788  bl #+0x24 (addr 0xffff58217c78)
0xffff58217c58   792  movz x16, #0x20
0xffff58217c5c   796  sub csp, jssp, #0x10 (16)
0xffff58217c60   800  stp fp, lr, [jssp, #-16]!
0xffff58217c64   804  bl #+0x14 (addr 0xffff58217c78)
0xffff58217c68   808  movz x16, #0x28
0xffff58217c6c   812  bl #+0x1c (addr 0xffff58217c88)
0xffff58217c70   816  movz x16, #0x30
0xffff58217c74   820  bl #+0x14 (addr 0xffff58217c88)
0xffff58217c78   824  movz x17, #0xa00000000
0xffff58217c7c   828  sub csp, jssp, #0x10 (16)
0xffff58217c80   832  stp x17, cp, [jssp, #-16]!
0xffff58217c84   836  add fp, jssp, #0x10 (16)
0xffff58217c88   840  ldr x17, pc+24 (addr 0x0000ffff58217ca0)    ;; lazy deoptimization bailout 0
0xffff58217c8c   844  add x17, x17, x16
0xffff58217c90   848  br x17
0xffff58217c94   852  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58217c98   856  d63f03e0       constant
0xffff58217c9c   860  d503201f       constant
0xffff58217ca0   864  58006000       constant
0xffff58217ca4   868  0000ffff       constant


Safepoints (size = 21)
0xffff58217bac   620  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff58217948  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582179d8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582179f4  embedded object  (0x39c04519 <the hole>)
0xffff58217a44  code target (STUB)  (0xffff582170c0)
0xffff58217a88  code target (STUB)  (0xffff58216760)
0xffff58217b24  code target (STUB)  (0xffff582178a0)
0xffff58217b80  code target (STUB)  (0xffff58206820)
0xffff58217ba4  code target (STUB)  (0xffff58206260)
0xffff58217bb0  code target (STUB)  (0xffff582068e0)
0xffff58217bc4  constant pool (size 84)
0xffff58217c88  runtime entry
0xffff58217c94  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 893)
0xffff58217940     0  ldur x5, [x1, #15]
0xffff58217944     4  ldur x6, [x5, #-1]
0xffff58217948     8  ldr x16, pc+648 (addr 0x0000ffff58217bd0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5821794c    12  cmp x6, x16
0xffff58217950    16  b.ne #+0x2c8 (addr 0xffff58217c18)
0xffff58217954    20  ldur w6, [x5, #11]
0xffff58217958    24  tbnz w2, #0, #+0x140 (addr 0xffff58217a98)
0xffff5821795c    28  asr x8, x2, #32
0xffff58217960    32  cmp w6, w8
0xffff58217964    36  b.le #+0x10 (addr 0xffff58217974)
0xffff58217968    40  cmp w8, w6
0xffff5821796c    44  b.hs #+0x2bc (addr 0xffff58217c28)
0xffff58217970    48  b #+0xe4 (addr 0xffff58217a54)
0xffff58217974    52  cmp w6, w8
0xffff58217978    56  b.gt #+0xdc (addr 0xffff58217a54)
0xffff5821797c    60  adds w7, w6, #0x400 (1024)
0xffff58217980    64  b.vs #+0x2b8 (addr 0xffff58217c38)
0xffff58217984    68  cmp w8, w7
0xffff58217988    72  b.hs #+0x2c0 (addr 0xffff58217c48)
0xffff5821798c    76  tbnz w2, #0, #+0x154 (addr 0xffff58217ae0)
0xffff58217990    80  asr x9, x2, #32
0xffff58217994    84  add w7, w8, w9, lsr #1
0xffff58217998    88  add w7, w7, #0x10 (16)
0xffff5821799c    92  movz w16, #0x95ff
0xffff582179a0    96  cmp w7, w16, lsl #1
0xffff582179a4   100  b.hs #+0x2b4 (addr 0xffff58217c58)
0xffff582179a8   104  lsl x2, x7, #32
0xffff582179ac   108  lsl w3, w7, #3
0xffff582179b0   112  add w3, w3, #0x10 (16)
0xffff582179b4   116  sxtw x3, w3
0xffff582179b8   120  movz x4, #0x92c0
0xffff582179bc   124  movk x4, #0x16e7, lsl #16
0xffff582179c0   128  ldp x9, x16, [x4]
0xffff582179c4   132  adds x7, x9, x3
0xffff582179c8   136  ccmp x7, x16, #nzCv, lo
0xffff582179cc   140  b.hi #+0x194 (addr 0xffff58217b60)
0xffff582179d0   144  str x7, [x4]
0xffff582179d4   148  orr x9, x9, #0x1
0xffff582179d8   152  ldr x3, pc+512 (addr 0x0000ffff58217bd8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582179dc   156  stur x3, [x9, #-1]
0xffff582179e0   160  stur x2, [x9, #7]
0xffff582179e4   164  ldur w2, [x9, #11]
0xffff582179e8   168  cmp w6, w2
0xffff582179ec   172  b.ge #+0x18 (addr 0xffff58217a04)
0xffff582179f0   176  sub w2, w2, #0x1 (1)
0xffff582179f4   180  ldr x3, pc+492 (addr 0x0000ffff58217be0)    ;; object: 0x39c04519 <the hole>
0xffff582179f8   184  add x4, x9, #0xf (15)
0xffff582179fc   188  str x3, [x4, w2, sxtw #3]
0xffff58217a00   192  b #-0x18 (addr 0xffff582179e8)
0xffff58217a04   196  cmp w6, #0x0 (0)
0xffff58217a08   200  b.le #+0x1c (addr 0xffff58217a24)
0xffff58217a0c   204  sub w6, w6, #0x1 (1)
0xffff58217a10   208  add x2, x5, #0xf (15)
0xffff58217a14   212  ldr x3, [x2, w6, sxtw #3]
0xffff58217a18   216  add x2, x9, #0xf (15)
0xffff58217a1c   220  str x3, [x2, w6, sxtw #3]
0xffff58217a20   224  b #-0x1c (addr 0xffff58217a04)
0xffff58217a24   228  mov x2, x9
0xffff58217a28   232  stur x2, [x1, #15]
0xffff58217a2c   236  add x3, x1, #0xf (15)
0xffff58217a30   240  and x2, x1, #0xfffffffffff00000
0xffff58217a34   244  ldr x2, [x2, #8]
0xffff58217a38   248  tbz w2, #2, #+0x18 (addr 0xffff58217a50)
0xffff58217a3c   252  sub csp, jssp, #0x8 (8)
0xffff58217a40   256  str lr, [jssp, #-8]!
0xffff58217a44   260  ldr x16, pc+420 (addr 0x0000ffff58217be8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58217a48   264  blr x16
0xffff58217a4c   268  ldr lr, [jssp], #8
0xffff58217a50   272  mov x5, x9
0xffff58217a54   276  mov x1, x0
0xffff58217a58   280  add x2, x5, #0xf (15)
0xffff58217a5c   284  str x1, [x2, w8, sxtw #3]
0xffff58217a60   288  add x2, x2, w8, sxtw #3
0xffff58217a64   292  tbz w1, #0, #+0x30 (addr 0xffff58217a94)
0xffff58217a68   296  and x1, x1, #0xfffffffffff00000
0xffff58217a6c   300  ldr x1, [x1, #8]
0xffff58217a70   304  tbz w1, #1, #+0x24 (addr 0xffff58217a94)
0xffff58217a74   308  and x1, x5, #0xfffffffffff00000
0xffff58217a78   312  ldr x1, [x1, #8]
0xffff58217a7c   316  tbz w1, #2, #+0x18 (addr 0xffff58217a94)
0xffff58217a80   320  sub csp, jssp, #0x8 (8)
0xffff58217a84   324  str lr, [jssp, #-8]!
0xffff58217a88   328  ldr x16, pc+360 (addr 0x0000ffff58217bf0)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff58217a8c   332  blr x16
0xffff58217a90   336  ldr lr, [jssp], #8
0xffff58217a94   340  ret
0xffff58217a98   344  sub csp, jssp, #0x10 (16)
0xffff58217a9c   348  stp fp, lr, [jssp, #-16]!
0xffff58217aa0   352  movz fp, #0xa00000000
0xffff58217aa4   356  sub csp, jssp, #0x8 (8)
0xffff58217aa8   360  str fp, [jssp, #-8]!
0xffff58217aac   364  add fp, jssp, #0x8 (8)
0xffff58217ab0   368  ldur x16, [x2, #-1]
0xffff58217ab4   372  ldr x17, [x26, #120]
0xffff58217ab8   376  cmp x16, x17
0xffff58217abc   380  b.ne #+0x1ac (addr 0xffff58217c68)
0xffff58217ac0   384  ldur d29, [x2, #7]
0xffff58217ac4   388  fcvtzs w8, d29
0xffff58217ac8   392  scvtf d0, w8
0xffff58217acc   396  fcmp d29, d0
0xffff58217ad0   400  b.ne #+0x198 (addr 0xffff58217c68)
0xffff58217ad4   404  ldr lr, [jssp, #16]
0xffff58217ad8   408  ldp xzr, fp, [jssp], #24
0xffff58217adc   412  b #-0x17c (addr 0xffff58217960)
0xffff58217ae0   416  sub csp, jssp, #0x10 (16)
0xffff58217ae4   420  stp fp, lr, [jssp, #-16]!
0xffff58217ae8   424  movz fp, #0xa00000000
0xffff58217aec   428  sub csp, jssp, #0x8 (8)
0xffff58217af0   432  str fp, [jssp, #-8]!
0xffff58217af4   436  add fp, jssp, #0x8 (8)
0xffff58217af8   440  ldur x16, [x2, #-1]
0xffff58217afc   444  ldr x17, [x26, #120]
0xffff58217b00   448  cmp x16, x17
0xffff58217b04   452  b.ne #+0x30 (addr 0xffff58217b34)
0xffff58217b08   456  ldur d30, [x2, #7]
0xffff58217b0c   460  fcvtzs x9, d30
0xffff58217b10   464  cmp x9, #0x1 (1)
0xffff58217b14   468  ccmn x9, #1, #nzcV, vc
0xffff58217b18   472  b.vc #+0x18 (addr 0xffff58217b30)
0xffff58217b1c   476  sub csp, jssp, #0x8 (8)
0xffff58217b20   480  str lr, [jssp, #-8]!
0xffff58217b24   484  ldr x16, pc+212 (addr 0x0000ffff58217bf8)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff58217b28   488  blr x16
0xffff58217b2c   492  ldr lr, [jssp], #8
0xffff58217b30   496  b #+0x24 (addr 0xffff58217b54)
0xffff58217b34   500  ldp x9, x7, [x26, #64]
0xffff58217b38   504  cmp x2, x9
0xffff58217b3c   508  cset x9, eq
0xffff58217b40   512  ccmp x2, x7, #nZcv, ne
0xffff58217b44   516  b.eq #+0x10 (addr 0xffff58217b54)
0xffff58217b48   520  ldr x16, [x26, #40]
0xffff58217b4c   524  cmp x2, x16
0xffff58217b50   528  b.ne #+0x120 (addr 0xffff58217c70)
0xffff58217b54   532  ldr lr, [jssp, #16]
0xffff58217b58   536  ldp xzr, fp, [jssp], #24
0xffff58217b5c   540  b #-0x1c8 (addr 0xffff58217994)
0xffff58217b60   544  sub csp, jssp, #0x10 (16)
0xffff58217b64   548  stp fp, lr, [jssp, #-16]!
0xffff58217b68   552  movz fp, #0xa00000000
0xffff58217b6c   556  sub csp, jssp, #0x8 (8)
0xffff58217b70   560  str fp, [jssp, #-8]!
0xffff58217b74   564  add fp, jssp, #0x8 (8)
0xffff58217b78   568  movz x9, #0x0
0xffff58217b7c   572  mov x16, lr
0xffff58217b80   576  ldr x17, pc+128 (addr 0x0000ffff58217c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58217b84   580  blr x17
0xffff58217b88   584  lsl x0, x3, #32
0xffff58217b8c   588  movz x10, #0x0
0xffff58217b90   592  sub csp, jssp, #0x10 (16)
0xffff58217b94   596  stp x10, x0, [jssp, #-16]!
0xffff58217b98   600  movz x0, #0x2
0xffff58217b9c   604  movz x1, #0x5b88
0xffff58217ba0   608  movk x1, #0xe2, lsl #16
0xffff58217ba4   612  ldr x16, pc+100 (addr 0x0000ffff58217c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff58217ba8   616  blr x16
0xffff58217bac   620  str x0, [jssp, #72]
0xffff58217bb0   624  ldr x16, pc+96 (addr 0x0000ffff58217c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58217bb4   628  blr x16
0xffff58217bb8   632  ldr lr, [jssp, #16]
0xffff58217bbc   636  ldp xzr, fp, [jssp], #24
0xffff58217bc0   640  b #-0x1e8 (addr 0xffff582179d8)
0xffff58217bc4   644  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff58217bc8   648  d63f03e0       constant
0xffff58217bcc   652  d503201f       constant
0xffff58217bd0   656  32b04259       constant
0xffff58217bd4   660  00000000       constant
0xffff58217bd8   664  32b04259       constant
0xffff58217bdc   668  00000000       constant
0xffff58217be0   672  39c04519       constant
0xffff58217be4   676  00000000       constant
0xffff58217be8   680  582170c0       constant
0xffff58217bec   684  0000ffff       constant
0xffff58217bf0   688  58216760       constant
0xffff58217bf4   692  0000ffff       constant
0xffff58217bf8   696  582178a0       constant
0xffff58217bfc   700  0000ffff       constant
0xffff58217c00   704  58206820       constant
0xffff58217c04   708  0000ffff       constant
0xffff58217c08   712  58206260       constant
0xffff58217c0c   716  0000ffff       constant
0xffff58217c10   720  582068e0       constant
0xffff58217c14   724  0000ffff       constant
0xffff58217c18   728  movz x16, #0x0
0xffff58217c1c   732  sub csp, jssp, #0x10 (16)
0xffff58217c20   736  stp fp, lr, [jssp, #-16]!
0xffff58217c24   740  bl #+0x54 (addr 0xffff58217c78)
0xffff58217c28   744  movz x16, #0x8
0xffff58217c2c   748  sub csp, jssp, #0x10 (16)
0xffff58217c30   752  stp fp, lr, [jssp, #-16]!
0xffff58217c34   756  bl #+0x44 (addr 0xffff58217c78)
0xffff58217c38   760  movz x16, #0x10
0xffff58217c3c   764  sub csp, jssp, #0x10 (16)
0xffff58217c40   768  stp fp, lr, [jssp, #-16]!
0xffff58217c44   772  bl #+0x34 (addr 0xffff58217c78)
0xffff58217c48   776  movz x16, #0x18
0xffff58217c4c   780  sub csp, jssp, #0x10 (16)
0xffff58217c50   784  stp fp, lr, [jssp, #-16]!
0xffff58217c54   788  bl #+0x24 (addr 0xffff58217c78)
0xffff58217c58   792  movz x16, #0x20
0xffff58217c5c   796  sub csp, jssp, #0x10 (16)
0xffff58217c60   800  stp fp, lr, [jssp, #-16]!
0xffff58217c64   804  bl #+0x14 (addr 0xffff58217c78)
0xffff58217c68   808  movz x16, #0x28
0xffff58217c6c   812  bl #+0x1c (addr 0xffff58217c88)
0xffff58217c70   816  movz x16, #0x30
0xffff58217c74   820  bl #+0x14 (addr 0xffff58217c88)
0xffff58217c78   824  movz x17, #0xa00000000
0xffff58217c7c   828  sub csp, jssp, #0x10 (16)
0xffff58217c80   832  stp x17, cp, [jssp, #-16]!
0xffff58217c84   836  add fp, jssp, #0x10 (16)
0xffff58217c88   840  ldr x17, pc+24 (addr 0x0000ffff58217ca0)    ;; lazy deoptimization bailout 0
0xffff58217c8c   844  add x17, x17, x16
0xffff58217c90   848  br x17
0xffff58217c94   852  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58217c98   856  d63f03e0       constant
0xffff58217c9c   860  d503201f       constant
0xffff58217ca0   864  58006000       constant
0xffff58217ca4   868  0000ffff       constant


Safepoints (size = 21)
0xffff58217bac   620  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff58217948  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582179d8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582179f4  embedded object  (0x39c04519 <the hole>)
0xffff58217a44  code target (STUB)  (0xffff582170c0)
0xffff58217a88  code target (STUB)  (0xffff58216760)
0xffff58217b24  code target (STUB)  (0xffff582178a0)
0xffff58217b80  code target (STUB)  (0xffff58206820)
0xffff58217ba4  code target (STUB)  (0xffff58206260)
0xffff58217bb0  code target (STUB)  (0xffff582068e0)
0xffff58217bc4  constant pool (size 84)
0xffff58217c88  runtime entry
0xffff58217c94  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff58217d20     0  ldur x5, [x1, #15]
0xffff58217d24     4  ldur x6, [x5, #-1]
0xffff58217d28     8  ldr x16, pc+104 (addr 0x0000ffff58217d90)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58217d2c    12  cmp x6, x16
0xffff58217d30    16  b.ne #+0x68 (addr 0xffff58217d98)
0xffff58217d34    20  ldur w6, [x1, #27]
0xffff58217d38    24  mov x7, x0
0xffff58217d3c    28  tbnz w7, #0, #+0x6c (addr 0xffff58217da8)
0xffff58217d40    32  tbnz w2, #0, #+0x20 (addr 0xffff58217d60)
0xffff58217d44    36  asr x9, x2, #32
0xffff58217d48    40  cmp w9, w6
0xffff58217d4c    44  b.hs #+0x6c (addr 0xffff58217db8)
0xffff58217d50    48  asr x1, x7, #32
0xffff58217d54    52  add x2, x5, w9, sxtw #3
0xffff58217d58    56  stur w1, [x2, #19]
0xffff58217d5c    60  ret
0xffff58217d60    64  ldur x16, [x2, #-1]
0xffff58217d64    68  ldr x17, [x26, #120]
0xffff58217d68    72  cmp x16, x17
0xffff58217d6c    76  b.ne #+0x5c (addr 0xffff58217dc8)
0xffff58217d70    80  ldur d29, [x2, #7]
0xffff58217d74    84  fcvtzs w9, d29
0xffff58217d78    88  scvtf d0, w9
0xffff58217d7c    92  fcmp d29, d0
0xffff58217d80    96  b.ne #+0x48 (addr 0xffff58217dc8)
0xffff58217d84   100  b #-0x3c (addr 0xffff58217d48)
0xffff58217d88   104  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58217d8c   108  d63f03e0       constant
0xffff58217d90   112  32b04259       constant
0xffff58217d94   116  00000000       constant
0xffff58217d98   120  movz x16, #0x0
0xffff58217d9c   124  sub csp, jssp, #0x10 (16)
0xffff58217da0   128  stp fp, lr, [jssp, #-16]!
0xffff58217da4   132  bl #+0x34 (addr 0xffff58217dd8)
0xffff58217da8   136  movz x16, #0x8
0xffff58217dac   140  sub csp, jssp, #0x10 (16)
0xffff58217db0   144  stp fp, lr, [jssp, #-16]!
0xffff58217db4   148  bl #+0x24 (addr 0xffff58217dd8)
0xffff58217db8   152  movz x16, #0x10
0xffff58217dbc   156  sub csp, jssp, #0x10 (16)
0xffff58217dc0   160  stp fp, lr, [jssp, #-16]!
0xffff58217dc4   164  bl #+0x14 (addr 0xffff58217dd8)
0xffff58217dc8   168  movz x16, #0x18
0xffff58217dcc   172  sub csp, jssp, #0x10 (16)
0xffff58217dd0   176  stp fp, lr, [jssp, #-16]!
0xffff58217dd4   180  bl #+0x4 (addr 0xffff58217dd8)
0xffff58217dd8   184  movz x17, #0xa00000000
0xffff58217ddc   188  sub csp, jssp, #0x10 (16)
0xffff58217de0   192  stp x17, cp, [jssp, #-16]!
0xffff58217de4   196  add fp, jssp, #0x10 (16)
0xffff58217de8   200  ldr x17, pc+24 (addr 0x0000ffff58217e00)    ;; lazy deoptimization bailout 0
0xffff58217dec   204  add x17, x17, x16
0xffff58217df0   208  br x17
0xffff58217df4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58217df8   216  d63f03e0       constant
0xffff58217dfc   220  d503201f       constant
0xffff58217e00   224  58006000       constant
0xffff58217e04   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff58217d28  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58217d88  constant pool (size 16)
0xffff58217de8  runtime entry
0xffff58217df4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff58217d20     0  ldur x5, [x1, #15]
0xffff58217d24     4  ldur x6, [x5, #-1]
0xffff58217d28     8  ldr x16, pc+104 (addr 0x0000ffff58217d90)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58217d2c    12  cmp x6, x16
0xffff58217d30    16  b.ne #+0x68 (addr 0xffff58217d98)
0xffff58217d34    20  ldur w6, [x1, #27]
0xffff58217d38    24  mov x7, x0
0xffff58217d3c    28  tbnz w7, #0, #+0x6c (addr 0xffff58217da8)
0xffff58217d40    32  tbnz w2, #0, #+0x20 (addr 0xffff58217d60)
0xffff58217d44    36  asr x9, x2, #32
0xffff58217d48    40  cmp w9, w6
0xffff58217d4c    44  b.hs #+0x6c (addr 0xffff58217db8)
0xffff58217d50    48  asr x1, x7, #32
0xffff58217d54    52  add x2, x5, w9, sxtw #3
0xffff58217d58    56  stur w1, [x2, #19]
0xffff58217d5c    60  ret
0xffff58217d60    64  ldur x16, [x2, #-1]
0xffff58217d64    68  ldr x17, [x26, #120]
0xffff58217d68    72  cmp x16, x17
0xffff58217d6c    76  b.ne #+0x5c (addr 0xffff58217dc8)
0xffff58217d70    80  ldur d29, [x2, #7]
0xffff58217d74    84  fcvtzs w9, d29
0xffff58217d78    88  scvtf d0, w9
0xffff58217d7c    92  fcmp d29, d0
0xffff58217d80    96  b.ne #+0x48 (addr 0xffff58217dc8)
0xffff58217d84   100  b #-0x3c (addr 0xffff58217d48)
0xffff58217d88   104  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58217d8c   108  d63f03e0       constant
0xffff58217d90   112  32b04259       constant
0xffff58217d94   116  00000000       constant
0xffff58217d98   120  movz x16, #0x0
0xffff58217d9c   124  sub csp, jssp, #0x10 (16)
0xffff58217da0   128  stp fp, lr, [jssp, #-16]!
0xffff58217da4   132  bl #+0x34 (addr 0xffff58217dd8)
0xffff58217da8   136  movz x16, #0x8
0xffff58217dac   140  sub csp, jssp, #0x10 (16)
0xffff58217db0   144  stp fp, lr, [jssp, #-16]!
0xffff58217db4   148  bl #+0x24 (addr 0xffff58217dd8)
0xffff58217db8   152  movz x16, #0x10
0xffff58217dbc   156  sub csp, jssp, #0x10 (16)
0xffff58217dc0   160  stp fp, lr, [jssp, #-16]!
0xffff58217dc4   164  bl #+0x14 (addr 0xffff58217dd8)
0xffff58217dc8   168  movz x16, #0x18
0xffff58217dcc   172  sub csp, jssp, #0x10 (16)
0xffff58217dd0   176  stp fp, lr, [jssp, #-16]!
0xffff58217dd4   180  bl #+0x4 (addr 0xffff58217dd8)
0xffff58217dd8   184  movz x17, #0xa00000000
0xffff58217ddc   188  sub csp, jssp, #0x10 (16)
0xffff58217de0   192  stp x17, cp, [jssp, #-16]!
0xffff58217de4   196  add fp, jssp, #0x10 (16)
0xffff58217de8   200  ldr x17, pc+24 (addr 0x0000ffff58217e00)    ;; lazy deoptimization bailout 0
0xffff58217dec   204  add x17, x17, x16
0xffff58217df0   208  br x17
0xffff58217df4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58217df8   216  d63f03e0       constant
0xffff58217dfc   220  d503201f       constant
0xffff58217e00   224  58006000       constant
0xffff58217e04   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff58217d28  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58217d88  constant pool (size 16)
0xffff58217de8  runtime entry
0xffff58217df4  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff58217e80     0  sub csp, jssp, #0x10 (16)
0xffff58217e84     4  stp x1, x0, [jssp, #-16]!
0xffff58217e88     8  ldur x10, [x2, #7]
0xffff58217e8c    12  ubfx x0, x10, #52, #11
0xffff58217e90    16  cmp x0, #0x453 (1107)
0xffff58217e94    20  csel x10, xzr, x10, ge
0xffff58217e98    24  b.ge #+0x1c (addr 0xffff58217eb4)
0xffff58217e9c    28  ubfx x1, x10, #0, #52
0xffff58217ea0    32  orr x1, x1, #0x10000000000000
0xffff58217ea4    36  tst x10, #0x8000000000000000
0xffff58217ea8    40  cneg x1, x1, ne
0xffff58217eac    44  sub x0, x0, #0x433 (1075)
0xffff58217eb0    48  lsl x10, x1, x0
0xffff58217eb4    52  ldp x1, x0, [jssp], #16
0xffff58217eb8    56  ret


RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 885)
0xffff58217f20     0  ldur x5, [x1, #15]
0xffff58217f24     4  ldur x6, [x5, #-1]
0xffff58217f28     8  ldr x16, pc+632 (addr 0x0000ffff582181a0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58217f2c    12  cmp x6, x16
0xffff58217f30    16  b.ne #+0x2b0 (addr 0xffff582181e0)
0xffff58217f34    20  ldur w6, [x1, #27]
0xffff58217f38    24  mov x7, x0
0xffff58217f3c    28  tbnz w7, #0, #+0x2b4 (addr 0xffff582181f0)
0xffff58217f40    32  asr x7, x7, #32
0xffff58217f44    36  tbnz w2, #0, #+0x128 (addr 0xffff5821806c)
0xffff58217f48    40  asr x9, x2, #32
0xffff58217f4c    44  cmp w6, w9
0xffff58217f50    48  b.eq #+0x10 (addr 0xffff58217f60)
0xffff58217f54    52  cmp w9, w6
0xffff58217f58    56  b.hs #+0x2a8 (addr 0xffff58218200)
0xffff58217f5c    60  b #+0x104 (addr 0xffff58218060)
0xffff58217f60    64  ldur w8, [x5, #11]
0xffff58217f64    68  cmp w8, w9
0xffff58217f68    72  b.gt #+0xe0 (addr 0xffff58218048)
0xffff58217f6c    76  adds w8, w8, #0x400 (1024)
0xffff58217f70    80  b.vs #+0x2a0 (addr 0xffff58218210)
0xffff58217f74    84  cmp w9, w8
0xffff58217f78    88  b.hs #+0x2a8 (addr 0xffff58218220)
0xffff58217f7c    92  tbnz w2, #0, #+0x138 (addr 0xffff582180b4)
0xffff58217f80    96  asr x10, x2, #32
0xffff58217f84   100  add w8, w9, w10, lsr #1
0xffff58217f88   104  add w8, w8, #0x10 (16)
0xffff58217f8c   108  movz w16, #0x95ff
0xffff58217f90   112  cmp w8, w16, lsl #1
0xffff58217f94   116  b.hs #+0x29c (addr 0xffff58218230)
0xffff58217f98   120  lsl x2, x8, #32
0xffff58217f9c   124  lsl w3, w8, #3
0xffff58217fa0   128  add w3, w3, #0x10 (16)
0xffff58217fa4   132  sxtw x3, w3
0xffff58217fa8   136  movz x4, #0x92c0
0xffff58217fac   140  movk x4, #0x16e7, lsl #16
0xffff58217fb0   144  ldp x10, x16, [x4]
0xffff58217fb4   148  adds x8, x10, x3
0xffff58217fb8   152  ccmp x8, x16, #nzCv, lo
0xffff58217fbc   156  b.hi #+0x178 (addr 0xffff58218134)
0xffff58217fc0   160  str x8, [x4]
0xffff58217fc4   164  orr x10, x10, #0x1
0xffff58217fc8   168  ldr x3, pc+480 (addr 0x0000ffff582181a8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58217fcc   172  stur x3, [x10, #-1]
0xffff58217fd0   176  stur x2, [x10, #7]
0xffff58217fd4   180  ldur w2, [x10, #11]
0xffff58217fd8   184  cmp w6, w2
0xffff58217fdc   188  b.ge #+0x18 (addr 0xffff58217ff4)
0xffff58217fe0   192  sub w2, w2, #0x1 (1)
0xffff58217fe4   196  ldr x3, pc+460 (addr 0x0000ffff582181b0)    ;; object: 0x39c04519 <the hole>
0xffff58217fe8   200  add x4, x10, #0xf (15)
0xffff58217fec   204  str x3, [x4, w2, sxtw #3]
0xffff58217ff0   208  b #-0x18 (addr 0xffff58217fd8)
0xffff58217ff4   212  cmp w6, #0x0 (0)
0xffff58217ff8   216  b.le #+0x20 (addr 0xffff58218018)
0xffff58217ffc   220  sub w6, w6, #0x1 (1)
0xffff58218000   224  add x2, x5, w6, sxtw #3
0xffff58218004   228  ldur w3, [x2, #19]
0xffff58218008   232  lsl x2, x3, #32
0xffff5821800c   236  add x3, x10, #0xf (15)
0xffff58218010   240  str x2, [x3, w6, sxtw #3]
0xffff58218014   244  b #-0x20 (addr 0xffff58217ff4)
0xffff58218018   248  mov x2, x10
0xffff5821801c   252  stur x2, [x1, #15]
0xffff58218020   256  add x3, x1, #0xf (15)
0xffff58218024   260  and x2, x1, #0xfffffffffff00000
0xffff58218028   264  ldr x2, [x2, #8]
0xffff5821802c   268  tbz w2, #2, #+0x18 (addr 0xffff58218044)
0xffff58218030   272  sub csp, jssp, #0x8 (8)
0xffff58218034   276  str lr, [jssp, #-8]!
0xffff58218038   280  ldr x16, pc+384 (addr 0x0000ffff582181b8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5821803c   284  blr x16
0xffff58218040   288  ldr lr, [jssp], #8
0xffff58218044   292  mov x5, x10
0xffff58218048   296  add w2, w9, #0x1 (1)
0xffff5821804c   300  lsl x2, x2, #32
0xffff58218050   304  stur x2, [x1, #23]
0xffff58218054   308  movz x1, #0x0
0xffff58218058   312  add x2, x5, #0xf (15)
0xffff5821805c   316  str x1, [x2, w9, sxtw #3]
0xffff58218060   320  add x1, x5, w9, sxtw #3
0xffff58218064   324  stur w7, [x1, #19]
0xffff58218068   328  ret
0xffff5821806c   332  sub csp, jssp, #0x10 (16)
0xffff58218070   336  stp fp, lr, [jssp, #-16]!
0xffff58218074   340  movz fp, #0xa00000000
0xffff58218078   344  sub csp, jssp, #0x8 (8)
0xffff5821807c   348  str fp, [jssp, #-8]!
0xffff58218080   352  add fp, jssp, #0x8 (8)
0xffff58218084   356  ldur x16, [x2, #-1]
0xffff58218088   360  ldr x17, [x26, #120]
0xffff5821808c   364  cmp x16, x17
0xffff58218090   368  b.ne #+0x1b0 (addr 0xffff58218240)
0xffff58218094   372  ldur d29, [x2, #7]
0xffff58218098   376  fcvtzs w9, d29
0xffff5821809c   380  scvtf d0, w9
0xffff582180a0   384  fcmp d29, d0
0xffff582180a4   388  b.ne #+0x19c (addr 0xffff58218240)
0xffff582180a8   392  ldr lr, [jssp, #16]
0xffff582180ac   396  ldp xzr, fp, [jssp], #24
0xffff582180b0   400  b #-0x164 (addr 0xffff58217f4c)
0xffff582180b4   404  sub csp, jssp, #0x10 (16)
0xffff582180b8   408  stp fp, lr, [jssp, #-16]!
0xffff582180bc   412  movz fp, #0xa00000000
0xffff582180c0   416  sub csp, jssp, #0x8 (8)
0xffff582180c4   420  str fp, [jssp, #-8]!
0xffff582180c8   424  add fp, jssp, #0x8 (8)
0xffff582180cc   428  ldur x16, [x2, #-1]
0xffff582180d0   432  ldr x17, [x26, #120]
0xffff582180d4   436  cmp x16, x17
0xffff582180d8   440  b.ne #+0x30 (addr 0xffff58218108)
0xffff582180dc   444  ldur d30, [x2, #7]
0xffff582180e0   448  fcvtzs x10, d30
0xffff582180e4   452  cmp x10, #0x1 (1)
0xffff582180e8   456  ccmn x10, #1, #nzcV, vc
0xffff582180ec   460  b.vc #+0x18 (addr 0xffff58218104)
0xffff582180f0   464  sub csp, jssp, #0x8 (8)
0xffff582180f4   468  str lr, [jssp, #-8]!
0xffff582180f8   472  ldr x16, pc+200 (addr 0x0000ffff582181c0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff582180fc   476  blr x16
0xffff58218100   480  ldr lr, [jssp], #8
0xffff58218104   484  b #+0x24 (addr 0xffff58218128)
0xffff58218108   488  ldp x10, x8, [x26, #64]
0xffff5821810c   492  cmp x2, x10
0xffff58218110   496  cset x10, eq
0xffff58218114   500  ccmp x2, x8, #nZcv, ne
0xffff58218118   504  b.eq #+0x10 (addr 0xffff58218128)
0xffff5821811c   508  ldr x16, [x26, #40]
0xffff58218120   512  cmp x2, x16
0xffff58218124   516  b.ne #+0x124 (addr 0xffff58218248)
0xffff58218128   520  ldr lr, [jssp, #16]
0xffff5821812c   524  ldp xzr, fp, [jssp], #24
0xffff58218130   528  b #-0x1ac (addr 0xffff58217f84)
0xffff58218134   532  sub csp, jssp, #0x10 (16)
0xffff58218138   536  stp fp, lr, [jssp, #-16]!
0xffff5821813c   540  movz fp, #0xa00000000
0xffff58218140   544  sub csp, jssp, #0x8 (8)
0xffff58218144   548  str fp, [jssp, #-8]!
0xffff58218148   552  add fp, jssp, #0x8 (8)
0xffff5821814c   556  movz x10, #0x0
0xffff58218150   560  mov x16, lr
0xffff58218154   564  ldr x17, pc+116 (addr 0x0000ffff582181c8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58218158   568  blr x17
0xffff5821815c   572  lsl x0, x3, #32
0xffff58218160   576  movz x10, #0x0
0xffff58218164   580  sub csp, jssp, #0x10 (16)
0xffff58218168   584  stp x10, x0, [jssp, #-16]!
0xffff5821816c   588  movz x0, #0x2
0xffff58218170   592  movz x1, #0x5b88
0xffff58218174   596  movk x1, #0xe2, lsl #16
0xffff58218178   600  ldr x16, pc+88 (addr 0x0000ffff582181d0)    ;; code: STUB, CEntryStub, minor: 5
0xffff5821817c   604  blr x16
0xffff58218180   608  str x0, [jssp, #80]
0xffff58218184   612  ldr x16, pc+84 (addr 0x0000ffff582181d8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58218188   616  blr x16
0xffff5821818c   620  ldr lr, [jssp, #16]
0xffff58218190   624  ldp xzr, fp, [jssp], #24
0xffff58218194   628  b #-0x1cc (addr 0xffff58217fc8)
0xffff58218198   632  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff5821819c   636  d63f03e0       constant
0xffff582181a0   640  32b04259       constant
0xffff582181a4   644  00000000       constant
0xffff582181a8   648  32b04259       constant
0xffff582181ac   652  00000000       constant
0xffff582181b0   656  39c04519       constant
0xffff582181b4   660  00000000       constant
0xffff582181b8   664  582170c0       constant
0xffff582181bc   668  0000ffff       constant
0xffff582181c0   672  58217e80       constant
0xffff582181c4   676  0000ffff       constant
0xffff582181c8   680  58206820       constant
0xffff582181cc   684  0000ffff       constant
0xffff582181d0   688  58206260       constant
0xffff582181d4   692  0000ffff       constant
0xffff582181d8   696  582068e0       constant
0xffff582181dc   700  0000ffff       constant
0xffff582181e0   704  movz x16, #0x0
0xffff582181e4   708  sub csp, jssp, #0x10 (16)
0xffff582181e8   712  stp fp, lr, [jssp, #-16]!
0xffff582181ec   716  bl #+0x64 (addr 0xffff58218250)
0xffff582181f0   720  movz x16, #0x8
0xffff582181f4   724  sub csp, jssp, #0x10 (16)
0xffff582181f8   728  stp fp, lr, [jssp, #-16]!
0xffff582181fc   732  bl #+0x54 (addr 0xffff58218250)
0xffff58218200   736  movz x16, #0x10
0xffff58218204   740  sub csp, jssp, #0x10 (16)
0xffff58218208   744  stp fp, lr, [jssp, #-16]!
0xffff5821820c   748  bl #+0x44 (addr 0xffff58218250)
0xffff58218210   752  movz x16, #0x18
0xffff58218214   756  sub csp, jssp, #0x10 (16)
0xffff58218218   760  stp fp, lr, [jssp, #-16]!
0xffff5821821c   764  bl #+0x34 (addr 0xffff58218250)
0xffff58218220   768  movz x16, #0x20
0xffff58218224   772  sub csp, jssp, #0x10 (16)
0xffff58218228   776  stp fp, lr, [jssp, #-16]!
0xffff5821822c   780  bl #+0x24 (addr 0xffff58218250)
0xffff58218230   784  movz x16, #0x28
0xffff58218234   788  sub csp, jssp, #0x10 (16)
0xffff58218238   792  stp fp, lr, [jssp, #-16]!
0xffff5821823c   796  bl #+0x14 (addr 0xffff58218250)
0xffff58218240   800  movz x16, #0x30
0xffff58218244   804  bl #+0x1c (addr 0xffff58218260)
0xffff58218248   808  movz x16, #0x38
0xffff5821824c   812  bl #+0x14 (addr 0xffff58218260)
0xffff58218250   816  movz x17, #0xa00000000
0xffff58218254   820  sub csp, jssp, #0x10 (16)
0xffff58218258   824  stp x17, cp, [jssp, #-16]!
0xffff5821825c   828  add fp, jssp, #0x10 (16)
0xffff58218260   832  ldr x17, pc+24 (addr 0x0000ffff58218278)    ;; lazy deoptimization bailout 0
0xffff58218264   836  add x17, x17, x16
0xffff58218268   840  br x17
0xffff5821826c   844  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58218270   848  d63f03e0       constant
0xffff58218274   852  d503201f       constant
0xffff58218278   856  58006000       constant
0xffff5821827c   860  0000ffff       constant


Safepoints (size = 21)
0xffff58218180   608  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff58217f28  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58217fc8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58217fe4  embedded object  (0x39c04519 <the hole>)
0xffff58218038  code target (STUB)  (0xffff582170c0)
0xffff582180f8  code target (STUB)  (0xffff58217e80)
0xffff58218154  code target (STUB)  (0xffff58206820)
0xffff58218178  code target (STUB)  (0xffff58206260)
0xffff58218184  code target (STUB)  (0xffff582068e0)
0xffff58218198  constant pool (size 72)
0xffff58218260  runtime entry
0xffff5821826c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 885)
0xffff58217f20     0  ldur x5, [x1, #15]
0xffff58217f24     4  ldur x6, [x5, #-1]
0xffff58217f28     8  ldr x16, pc+632 (addr 0x0000ffff582181a0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58217f2c    12  cmp x6, x16
0xffff58217f30    16  b.ne #+0x2b0 (addr 0xffff582181e0)
0xffff58217f34    20  ldur w6, [x1, #27]
0xffff58217f38    24  mov x7, x0
0xffff58217f3c    28  tbnz w7, #0, #+0x2b4 (addr 0xffff582181f0)
0xffff58217f40    32  asr x7, x7, #32
0xffff58217f44    36  tbnz w2, #0, #+0x128 (addr 0xffff5821806c)
0xffff58217f48    40  asr x9, x2, #32
0xffff58217f4c    44  cmp w6, w9
0xffff58217f50    48  b.eq #+0x10 (addr 0xffff58217f60)
0xffff58217f54    52  cmp w9, w6
0xffff58217f58    56  b.hs #+0x2a8 (addr 0xffff58218200)
0xffff58217f5c    60  b #+0x104 (addr 0xffff58218060)
0xffff58217f60    64  ldur w8, [x5, #11]
0xffff58217f64    68  cmp w8, w9
0xffff58217f68    72  b.gt #+0xe0 (addr 0xffff58218048)
0xffff58217f6c    76  adds w8, w8, #0x400 (1024)
0xffff58217f70    80  b.vs #+0x2a0 (addr 0xffff58218210)
0xffff58217f74    84  cmp w9, w8
0xffff58217f78    88  b.hs #+0x2a8 (addr 0xffff58218220)
0xffff58217f7c    92  tbnz w2, #0, #+0x138 (addr 0xffff582180b4)
0xffff58217f80    96  asr x10, x2, #32
0xffff58217f84   100  add w8, w9, w10, lsr #1
0xffff58217f88   104  add w8, w8, #0x10 (16)
0xffff58217f8c   108  movz w16, #0x95ff
0xffff58217f90   112  cmp w8, w16, lsl #1
0xffff58217f94   116  b.hs #+0x29c (addr 0xffff58218230)
0xffff58217f98   120  lsl x2, x8, #32
0xffff58217f9c   124  lsl w3, w8, #3
0xffff58217fa0   128  add w3, w3, #0x10 (16)
0xffff58217fa4   132  sxtw x3, w3
0xffff58217fa8   136  movz x4, #0x92c0
0xffff58217fac   140  movk x4, #0x16e7, lsl #16
0xffff58217fb0   144  ldp x10, x16, [x4]
0xffff58217fb4   148  adds x8, x10, x3
0xffff58217fb8   152  ccmp x8, x16, #nzCv, lo
0xffff58217fbc   156  b.hi #+0x178 (addr 0xffff58218134)
0xffff58217fc0   160  str x8, [x4]
0xffff58217fc4   164  orr x10, x10, #0x1
0xffff58217fc8   168  ldr x3, pc+480 (addr 0x0000ffff582181a8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58217fcc   172  stur x3, [x10, #-1]
0xffff58217fd0   176  stur x2, [x10, #7]
0xffff58217fd4   180  ldur w2, [x10, #11]
0xffff58217fd8   184  cmp w6, w2
0xffff58217fdc   188  b.ge #+0x18 (addr 0xffff58217ff4)
0xffff58217fe0   192  sub w2, w2, #0x1 (1)
0xffff58217fe4   196  ldr x3, pc+460 (addr 0x0000ffff582181b0)    ;; object: 0x39c04519 <the hole>
0xffff58217fe8   200  add x4, x10, #0xf (15)
0xffff58217fec   204  str x3, [x4, w2, sxtw #3]
0xffff58217ff0   208  b #-0x18 (addr 0xffff58217fd8)
0xffff58217ff4   212  cmp w6, #0x0 (0)
0xffff58217ff8   216  b.le #+0x20 (addr 0xffff58218018)
0xffff58217ffc   220  sub w6, w6, #0x1 (1)
0xffff58218000   224  add x2, x5, w6, sxtw #3
0xffff58218004   228  ldur w3, [x2, #19]
0xffff58218008   232  lsl x2, x3, #32
0xffff5821800c   236  add x3, x10, #0xf (15)
0xffff58218010   240  str x2, [x3, w6, sxtw #3]
0xffff58218014   244  b #-0x20 (addr 0xffff58217ff4)
0xffff58218018   248  mov x2, x10
0xffff5821801c   252  stur x2, [x1, #15]
0xffff58218020   256  add x3, x1, #0xf (15)
0xffff58218024   260  and x2, x1, #0xfffffffffff00000
0xffff58218028   264  ldr x2, [x2, #8]
0xffff5821802c   268  tbz w2, #2, #+0x18 (addr 0xffff58218044)
0xffff58218030   272  sub csp, jssp, #0x8 (8)
0xffff58218034   276  str lr, [jssp, #-8]!
0xffff58218038   280  ldr x16, pc+384 (addr 0x0000ffff582181b8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5821803c   284  blr x16
0xffff58218040   288  ldr lr, [jssp], #8
0xffff58218044   292  mov x5, x10
0xffff58218048   296  add w2, w9, #0x1 (1)
0xffff5821804c   300  lsl x2, x2, #32
0xffff58218050   304  stur x2, [x1, #23]
0xffff58218054   308  movz x1, #0x0
0xffff58218058   312  add x2, x5, #0xf (15)
0xffff5821805c   316  str x1, [x2, w9, sxtw #3]
0xffff58218060   320  add x1, x5, w9, sxtw #3
0xffff58218064   324  stur w7, [x1, #19]
0xffff58218068   328  ret
0xffff5821806c   332  sub csp, jssp, #0x10 (16)
0xffff58218070   336  stp fp, lr, [jssp, #-16]!
0xffff58218074   340  movz fp, #0xa00000000
0xffff58218078   344  sub csp, jssp, #0x8 (8)
0xffff5821807c   348  str fp, [jssp, #-8]!
0xffff58218080   352  add fp, jssp, #0x8 (8)
0xffff58218084   356  ldur x16, [x2, #-1]
0xffff58218088   360  ldr x17, [x26, #120]
0xffff5821808c   364  cmp x16, x17
0xffff58218090   368  b.ne #+0x1b0 (addr 0xffff58218240)
0xffff58218094   372  ldur d29, [x2, #7]
0xffff58218098   376  fcvtzs w9, d29
0xffff5821809c   380  scvtf d0, w9
0xffff582180a0   384  fcmp d29, d0
0xffff582180a4   388  b.ne #+0x19c (addr 0xffff58218240)
0xffff582180a8   392  ldr lr, [jssp, #16]
0xffff582180ac   396  ldp xzr, fp, [jssp], #24
0xffff582180b0   400  b #-0x164 (addr 0xffff58217f4c)
0xffff582180b4   404  sub csp, jssp, #0x10 (16)
0xffff582180b8   408  stp fp, lr, [jssp, #-16]!
0xffff582180bc   412  movz fp, #0xa00000000
0xffff582180c0   416  sub csp, jssp, #0x8 (8)
0xffff582180c4   420  str fp, [jssp, #-8]!
0xffff582180c8   424  add fp, jssp, #0x8 (8)
0xffff582180cc   428  ldur x16, [x2, #-1]
0xffff582180d0   432  ldr x17, [x26, #120]
0xffff582180d4   436  cmp x16, x17
0xffff582180d8   440  b.ne #+0x30 (addr 0xffff58218108)
0xffff582180dc   444  ldur d30, [x2, #7]
0xffff582180e0   448  fcvtzs x10, d30
0xffff582180e4   452  cmp x10, #0x1 (1)
0xffff582180e8   456  ccmn x10, #1, #nzcV, vc
0xffff582180ec   460  b.vc #+0x18 (addr 0xffff58218104)
0xffff582180f0   464  sub csp, jssp, #0x8 (8)
0xffff582180f4   468  str lr, [jssp, #-8]!
0xffff582180f8   472  ldr x16, pc+200 (addr 0x0000ffff582181c0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff582180fc   476  blr x16
0xffff58218100   480  ldr lr, [jssp], #8
0xffff58218104   484  b #+0x24 (addr 0xffff58218128)
0xffff58218108   488  ldp x10, x8, [x26, #64]
0xffff5821810c   492  cmp x2, x10
0xffff58218110   496  cset x10, eq
0xffff58218114   500  ccmp x2, x8, #nZcv, ne
0xffff58218118   504  b.eq #+0x10 (addr 0xffff58218128)
0xffff5821811c   508  ldr x16, [x26, #40]
0xffff58218120   512  cmp x2, x16
0xffff58218124   516  b.ne #+0x124 (addr 0xffff58218248)
0xffff58218128   520  ldr lr, [jssp, #16]
0xffff5821812c   524  ldp xzr, fp, [jssp], #24
0xffff58218130   528  b #-0x1ac (addr 0xffff58217f84)
0xffff58218134   532  sub csp, jssp, #0x10 (16)
0xffff58218138   536  stp fp, lr, [jssp, #-16]!
0xffff5821813c   540  movz fp, #0xa00000000
0xffff58218140   544  sub csp, jssp, #0x8 (8)
0xffff58218144   548  str fp, [jssp, #-8]!
0xffff58218148   552  add fp, jssp, #0x8 (8)
0xffff5821814c   556  movz x10, #0x0
0xffff58218150   560  mov x16, lr
0xffff58218154   564  ldr x17, pc+116 (addr 0x0000ffff582181c8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58218158   568  blr x17
0xffff5821815c   572  lsl x0, x3, #32
0xffff58218160   576  movz x10, #0x0
0xffff58218164   580  sub csp, jssp, #0x10 (16)
0xffff58218168   584  stp x10, x0, [jssp, #-16]!
0xffff5821816c   588  movz x0, #0x2
0xffff58218170   592  movz x1, #0x5b88
0xffff58218174   596  movk x1, #0xe2, lsl #16
0xffff58218178   600  ldr x16, pc+88 (addr 0x0000ffff582181d0)    ;; code: STUB, CEntryStub, minor: 5
0xffff5821817c   604  blr x16
0xffff58218180   608  str x0, [jssp, #80]
0xffff58218184   612  ldr x16, pc+84 (addr 0x0000ffff582181d8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58218188   616  blr x16
0xffff5821818c   620  ldr lr, [jssp, #16]
0xffff58218190   624  ldp xzr, fp, [jssp], #24
0xffff58218194   628  b #-0x1cc (addr 0xffff58217fc8)
0xffff58218198   632  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff5821819c   636  d63f03e0       constant
0xffff582181a0   640  32b04259       constant
0xffff582181a4   644  00000000       constant
0xffff582181a8   648  32b04259       constant
0xffff582181ac   652  00000000       constant
0xffff582181b0   656  39c04519       constant
0xffff582181b4   660  00000000       constant
0xffff582181b8   664  582170c0       constant
0xffff582181bc   668  0000ffff       constant
0xffff582181c0   672  58217e80       constant
0xffff582181c4   676  0000ffff       constant
0xffff582181c8   680  58206820       constant
0xffff582181cc   684  0000ffff       constant
0xffff582181d0   688  58206260       constant
0xffff582181d4   692  0000ffff       constant
0xffff582181d8   696  582068e0       constant
0xffff582181dc   700  0000ffff       constant
0xffff582181e0   704  movz x16, #0x0
0xffff582181e4   708  sub csp, jssp, #0x10 (16)
0xffff582181e8   712  stp fp, lr, [jssp, #-16]!
0xffff582181ec   716  bl #+0x64 (addr 0xffff58218250)
0xffff582181f0   720  movz x16, #0x8
0xffff582181f4   724  sub csp, jssp, #0x10 (16)
0xffff582181f8   728  stp fp, lr, [jssp, #-16]!
0xffff582181fc   732  bl #+0x54 (addr 0xffff58218250)
0xffff58218200   736  movz x16, #0x10
0xffff58218204   740  sub csp, jssp, #0x10 (16)
0xffff58218208   744  stp fp, lr, [jssp, #-16]!
0xffff5821820c   748  bl #+0x44 (addr 0xffff58218250)
0xffff58218210   752  movz x16, #0x18
0xffff58218214   756  sub csp, jssp, #0x10 (16)
0xffff58218218   760  stp fp, lr, [jssp, #-16]!
0xffff5821821c   764  bl #+0x34 (addr 0xffff58218250)
0xffff58218220   768  movz x16, #0x20
0xffff58218224   772  sub csp, jssp, #0x10 (16)
0xffff58218228   776  stp fp, lr, [jssp, #-16]!
0xffff5821822c   780  bl #+0x24 (addr 0xffff58218250)
0xffff58218230   784  movz x16, #0x28
0xffff58218234   788  sub csp, jssp, #0x10 (16)
0xffff58218238   792  stp fp, lr, [jssp, #-16]!
0xffff5821823c   796  bl #+0x14 (addr 0xffff58218250)
0xffff58218240   800  movz x16, #0x30
0xffff58218244   804  bl #+0x1c (addr 0xffff58218260)
0xffff58218248   808  movz x16, #0x38
0xffff5821824c   812  bl #+0x14 (addr 0xffff58218260)
0xffff58218250   816  movz x17, #0xa00000000
0xffff58218254   820  sub csp, jssp, #0x10 (16)
0xffff58218258   824  stp x17, cp, [jssp, #-16]!
0xffff5821825c   828  add fp, jssp, #0x10 (16)
0xffff58218260   832  ldr x17, pc+24 (addr 0x0000ffff58218278)    ;; lazy deoptimization bailout 0
0xffff58218264   836  add x17, x17, x16
0xffff58218268   840  br x17
0xffff5821826c   844  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58218270   848  d63f03e0       constant
0xffff58218274   852  d503201f       constant
0xffff58218278   856  58006000       constant
0xffff5821827c   860  0000ffff       constant


Safepoints (size = 21)
0xffff58218180   608  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff58217f28  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58217fc8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58217fe4  embedded object  (0x39c04519 <the hole>)
0xffff58218038  code target (STUB)  (0xffff582170c0)
0xffff582180f8  code target (STUB)  (0xffff58217e80)
0xffff58218154  code target (STUB)  (0xffff58206820)
0xffff58218178  code target (STUB)  (0xffff58206260)
0xffff58218184  code target (STUB)  (0xffff582068e0)
0xffff58218198  constant pool (size 72)
0xffff58218260  runtime entry
0xffff5821826c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff58218300     0  ldur x5, [x1, #15]
0xffff58218304     4  ldur x6, [x5, #-1]
0xffff58218308     8  ldr x16, pc+104 (addr 0x0000ffff58218370)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5821830c    12  cmp x6, x16
0xffff58218310    16  b.ne #+0x68 (addr 0xffff58218378)
0xffff58218314    20  ldur w6, [x1, #27]
0xffff58218318    24  mov x7, x0
0xffff5821831c    28  tbnz w7, #0, #+0x6c (addr 0xffff58218388)
0xffff58218320    32  tbnz w2, #0, #+0x1c (addr 0xffff5821833c)
0xffff58218324    36  asr x9, x2, #32
0xffff58218328    40  cmp w9, w6
0xffff5821832c    44  b.hs #+0x6c (addr 0xffff58218398)
0xffff58218330    48  add x1, x5, #0xf (15)
0xffff58218334    52  str x7, [x1, w9, sxtw #3]
0xffff58218338    56  ret
0xffff5821833c    60  ldur x16, [x2, #-1]
0xffff58218340    64  ldr x17, [x26, #120]
0xffff58218344    68  cmp x16, x17
0xffff58218348    72  b.ne #+0x60 (addr 0xffff582183a8)
0xffff5821834c    76  ldur d29, [x2, #7]
0xffff58218350    80  fcvtzs w9, d29
0xffff58218354    84  scvtf d0, w9
0xffff58218358    88  fcmp d29, d0
0xffff5821835c    92  b.ne #+0x4c (addr 0xffff582183a8)
0xffff58218360    96  b #-0x38 (addr 0xffff58218328)
0xffff58218364   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58218368   104  d63f03e0       constant
0xffff5821836c   108  d503201f       constant
0xffff58218370   112  32b04259       constant
0xffff58218374   116  00000000       constant
0xffff58218378   120  movz x16, #0x0
0xffff5821837c   124  sub csp, jssp, #0x10 (16)
0xffff58218380   128  stp fp, lr, [jssp, #-16]!
0xffff58218384   132  bl #+0x34 (addr 0xffff582183b8)
0xffff58218388   136  movz x16, #0x8
0xffff5821838c   140  sub csp, jssp, #0x10 (16)
0xffff58218390   144  stp fp, lr, [jssp, #-16]!
0xffff58218394   148  bl #+0x24 (addr 0xffff582183b8)
0xffff58218398   152  movz x16, #0x10
0xffff5821839c   156  sub csp, jssp, #0x10 (16)
0xffff582183a0   160  stp fp, lr, [jssp, #-16]!
0xffff582183a4   164  bl #+0x14 (addr 0xffff582183b8)
0xffff582183a8   168  movz x16, #0x18
0xffff582183ac   172  sub csp, jssp, #0x10 (16)
0xffff582183b0   176  stp fp, lr, [jssp, #-16]!
0xffff582183b4   180  bl #+0x4 (addr 0xffff582183b8)
0xffff582183b8   184  movz x17, #0xa00000000
0xffff582183bc   188  sub csp, jssp, #0x10 (16)
0xffff582183c0   192  stp x17, cp, [jssp, #-16]!
0xffff582183c4   196  add fp, jssp, #0x10 (16)
0xffff582183c8   200  ldr x17, pc+24 (addr 0x0000ffff582183e0)    ;; lazy deoptimization bailout 0
0xffff582183cc   204  add x17, x17, x16
0xffff582183d0   208  br x17
0xffff582183d4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582183d8   216  d63f03e0       constant
0xffff582183dc   220  d503201f       constant
0xffff582183e0   224  58006000       constant
0xffff582183e4   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff58218308  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218364  constant pool (size 20)
0xffff582183c8  runtime entry
0xffff582183d4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff58218300     0  ldur x5, [x1, #15]
0xffff58218304     4  ldur x6, [x5, #-1]
0xffff58218308     8  ldr x16, pc+104 (addr 0x0000ffff58218370)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5821830c    12  cmp x6, x16
0xffff58218310    16  b.ne #+0x68 (addr 0xffff58218378)
0xffff58218314    20  ldur w6, [x1, #27]
0xffff58218318    24  mov x7, x0
0xffff5821831c    28  tbnz w7, #0, #+0x6c (addr 0xffff58218388)
0xffff58218320    32  tbnz w2, #0, #+0x1c (addr 0xffff5821833c)
0xffff58218324    36  asr x9, x2, #32
0xffff58218328    40  cmp w9, w6
0xffff5821832c    44  b.hs #+0x6c (addr 0xffff58218398)
0xffff58218330    48  add x1, x5, #0xf (15)
0xffff58218334    52  str x7, [x1, w9, sxtw #3]
0xffff58218338    56  ret
0xffff5821833c    60  ldur x16, [x2, #-1]
0xffff58218340    64  ldr x17, [x26, #120]
0xffff58218344    68  cmp x16, x17
0xffff58218348    72  b.ne #+0x60 (addr 0xffff582183a8)
0xffff5821834c    76  ldur d29, [x2, #7]
0xffff58218350    80  fcvtzs w9, d29
0xffff58218354    84  scvtf d0, w9
0xffff58218358    88  fcmp d29, d0
0xffff5821835c    92  b.ne #+0x4c (addr 0xffff582183a8)
0xffff58218360    96  b #-0x38 (addr 0xffff58218328)
0xffff58218364   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58218368   104  d63f03e0       constant
0xffff5821836c   108  d503201f       constant
0xffff58218370   112  32b04259       constant
0xffff58218374   116  00000000       constant
0xffff58218378   120  movz x16, #0x0
0xffff5821837c   124  sub csp, jssp, #0x10 (16)
0xffff58218380   128  stp fp, lr, [jssp, #-16]!
0xffff58218384   132  bl #+0x34 (addr 0xffff582183b8)
0xffff58218388   136  movz x16, #0x8
0xffff5821838c   140  sub csp, jssp, #0x10 (16)
0xffff58218390   144  stp fp, lr, [jssp, #-16]!
0xffff58218394   148  bl #+0x24 (addr 0xffff582183b8)
0xffff58218398   152  movz x16, #0x10
0xffff5821839c   156  sub csp, jssp, #0x10 (16)
0xffff582183a0   160  stp fp, lr, [jssp, #-16]!
0xffff582183a4   164  bl #+0x14 (addr 0xffff582183b8)
0xffff582183a8   168  movz x16, #0x18
0xffff582183ac   172  sub csp, jssp, #0x10 (16)
0xffff582183b0   176  stp fp, lr, [jssp, #-16]!
0xffff582183b4   180  bl #+0x4 (addr 0xffff582183b8)
0xffff582183b8   184  movz x17, #0xa00000000
0xffff582183bc   188  sub csp, jssp, #0x10 (16)
0xffff582183c0   192  stp x17, cp, [jssp, #-16]!
0xffff582183c4   196  add fp, jssp, #0x10 (16)
0xffff582183c8   200  ldr x17, pc+24 (addr 0x0000ffff582183e0)    ;; lazy deoptimization bailout 0
0xffff582183cc   204  add x17, x17, x16
0xffff582183d0   208  br x17
0xffff582183d4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582183d8   216  d63f03e0       constant
0xffff582183dc   220  d503201f       constant
0xffff582183e0   224  58006000       constant
0xffff582183e4   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff58218308  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218364  constant pool (size 20)
0xffff582183c8  runtime entry
0xffff582183d4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 869)
0xffff58218460     0  ldur x5, [x1, #15]
0xffff58218464     4  ldur x6, [x5, #-1]
0xffff58218468     8  ldr x16, pc+616 (addr 0x0000ffff582186d0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5821846c    12  cmp x6, x16
0xffff58218470    16  b.ne #+0x2a0 (addr 0xffff58218710)
0xffff58218474    20  ldur w6, [x1, #27]
0xffff58218478    24  mov x7, x0
0xffff5821847c    28  tbnz w7, #0, #+0x2a4 (addr 0xffff58218720)
0xffff58218480    32  tbnz w2, #0, #+0x118 (addr 0xffff58218598)
0xffff58218484    36  asr x9, x2, #32
0xffff58218488    40  cmp w6, w9
0xffff5821848c    44  b.le #+0x10 (addr 0xffff5821849c)
0xffff58218490    48  cmp w9, w6
0xffff58218494    52  b.hs #+0x29c (addr 0xffff58218730)
0xffff58218498    56  b #+0xf4 (addr 0xffff5821858c)
0xffff5821849c    60  ldur w8, [x5, #11]
0xffff582184a0    64  cmp w8, w9
0xffff582184a4    68  b.gt #+0xdc (addr 0xffff58218580)
0xffff582184a8    72  adds w8, w8, #0x400 (1024)
0xffff582184ac    76  b.vs #+0x294 (addr 0xffff58218740)
0xffff582184b0    80  cmp w9, w8
0xffff582184b4    84  b.hs #+0x29c (addr 0xffff58218750)
0xffff582184b8    88  tbnz w2, #0, #+0x128 (addr 0xffff582185e0)
0xffff582184bc    92  asr x10, x2, #32
0xffff582184c0    96  add w8, w9, w10, lsr #1
0xffff582184c4   100  add w8, w8, #0x10 (16)
0xffff582184c8   104  movz w16, #0x95ff
0xffff582184cc   108  cmp w8, w16, lsl #1
0xffff582184d0   112  b.hs #+0x290 (addr 0xffff58218760)
0xffff582184d4   116  lsl x2, x8, #32
0xffff582184d8   120  lsl w3, w8, #3
0xffff582184dc   124  add w3, w3, #0x10 (16)
0xffff582184e0   128  sxtw x3, w3
0xffff582184e4   132  movz x4, #0x92c0
0xffff582184e8   136  movk x4, #0x16e7, lsl #16
0xffff582184ec   140  ldp x10, x16, [x4]
0xffff582184f0   144  adds x8, x10, x3
0xffff582184f4   148  ccmp x8, x16, #nzCv, lo
0xffff582184f8   152  b.hi #+0x168 (addr 0xffff58218660)
0xffff582184fc   156  str x8, [x4]
0xffff58218500   160  orr x10, x10, #0x1
0xffff58218504   164  ldr x3, pc+468 (addr 0x0000ffff582186d8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58218508   168  stur x3, [x10, #-1]
0xffff5821850c   172  stur x2, [x10, #7]
0xffff58218510   176  ldur w2, [x10, #11]
0xffff58218514   180  cmp w6, w2
0xffff58218518   184  b.ge #+0x18 (addr 0xffff58218530)
0xffff5821851c   188  sub w2, w2, #0x1 (1)
0xffff58218520   192  ldr x3, pc+448 (addr 0x0000ffff582186e0)    ;; object: 0x39c04519 <the hole>
0xffff58218524   196  add x4, x10, #0xf (15)
0xffff58218528   200  str x3, [x4, w2, sxtw #3]
0xffff5821852c   204  b #-0x18 (addr 0xffff58218514)
0xffff58218530   208  cmp w6, #0x0 (0)
0xffff58218534   212  b.le #+0x1c (addr 0xffff58218550)
0xffff58218538   216  sub w6, w6, #0x1 (1)
0xffff5821853c   220  add x2, x5, #0xf (15)
0xffff58218540   224  ldr x3, [x2, w6, sxtw #3]
0xffff58218544   228  add x2, x10, #0xf (15)
0xffff58218548   232  str x3, [x2, w6, sxtw #3]
0xffff5821854c   236  b #-0x1c (addr 0xffff58218530)
0xffff58218550   240  mov x2, x10
0xffff58218554   244  stur x2, [x1, #15]
0xffff58218558   248  add x3, x1, #0xf (15)
0xffff5821855c   252  and x2, x1, #0xfffffffffff00000
0xffff58218560   256  ldr x2, [x2, #8]
0xffff58218564   260  tbz w2, #2, #+0x18 (addr 0xffff5821857c)
0xffff58218568   264  sub csp, jssp, #0x8 (8)
0xffff5821856c   268  str lr, [jssp, #-8]!
0xffff58218570   272  ldr x16, pc+376 (addr 0x0000ffff582186e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58218574   276  blr x16
0xffff58218578   280  ldr lr, [jssp], #8
0xffff5821857c   284  mov x5, x10
0xffff58218580   288  add w2, w9, #0x1 (1)
0xffff58218584   292  lsl x2, x2, #32
0xffff58218588   296  stur x2, [x1, #23]
0xffff5821858c   300  add x1, x5, #0xf (15)
0xffff58218590   304  str x7, [x1, w9, sxtw #3]
0xffff58218594   308  ret
0xffff58218598   312  sub csp, jssp, #0x10 (16)
0xffff5821859c   316  stp fp, lr, [jssp, #-16]!
0xffff582185a0   320  movz fp, #0xa00000000
0xffff582185a4   324  sub csp, jssp, #0x8 (8)
0xffff582185a8   328  str fp, [jssp, #-8]!
0xffff582185ac   332  add fp, jssp, #0x8 (8)
0xffff582185b0   336  ldur x16, [x2, #-1]
0xffff582185b4   340  ldr x17, [x26, #120]
0xffff582185b8   344  cmp x16, x17
0xffff582185bc   348  b.ne #+0x1b4 (addr 0xffff58218770)
0xffff582185c0   352  ldur d29, [x2, #7]
0xffff582185c4   356  fcvtzs w9, d29
0xffff582185c8   360  scvtf d0, w9
0xffff582185cc   364  fcmp d29, d0
0xffff582185d0   368  b.ne #+0x1a0 (addr 0xffff58218770)
0xffff582185d4   372  ldr lr, [jssp, #16]
0xffff582185d8   376  ldp xzr, fp, [jssp], #24
0xffff582185dc   380  b #-0x154 (addr 0xffff58218488)
0xffff582185e0   384  sub csp, jssp, #0x10 (16)
0xffff582185e4   388  stp fp, lr, [jssp, #-16]!
0xffff582185e8   392  movz fp, #0xa00000000
0xffff582185ec   396  sub csp, jssp, #0x8 (8)
0xffff582185f0   400  str fp, [jssp, #-8]!
0xffff582185f4   404  add fp, jssp, #0x8 (8)
0xffff582185f8   408  ldur x16, [x2, #-1]
0xffff582185fc   412  ldr x17, [x26, #120]
0xffff58218600   416  cmp x16, x17
0xffff58218604   420  b.ne #+0x30 (addr 0xffff58218634)
0xffff58218608   424  ldur d30, [x2, #7]
0xffff5821860c   428  fcvtzs x10, d30
0xffff58218610   432  cmp x10, #0x1 (1)
0xffff58218614   436  ccmn x10, #1, #nzcV, vc
0xffff58218618   440  b.vc #+0x18 (addr 0xffff58218630)
0xffff5821861c   444  sub csp, jssp, #0x8 (8)
0xffff58218620   448  str lr, [jssp, #-8]!
0xffff58218624   452  ldr x16, pc+204 (addr 0x0000ffff582186f0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff58218628   456  blr x16
0xffff5821862c   460  ldr lr, [jssp], #8
0xffff58218630   464  b #+0x24 (addr 0xffff58218654)
0xffff58218634   468  ldp x10, x8, [x26, #64]
0xffff58218638   472  cmp x2, x10
0xffff5821863c   476  cset x10, eq
0xffff58218640   480  ccmp x2, x8, #nZcv, ne
0xffff58218644   484  b.eq #+0x10 (addr 0xffff58218654)
0xffff58218648   488  ldr x16, [x26, #40]
0xffff5821864c   492  cmp x2, x16
0xffff58218650   496  b.ne #+0x128 (addr 0xffff58218778)
0xffff58218654   500  ldr lr, [jssp, #16]
0xffff58218658   504  ldp xzr, fp, [jssp], #24
0xffff5821865c   508  b #-0x19c (addr 0xffff582184c0)
0xffff58218660   512  sub csp, jssp, #0x10 (16)
0xffff58218664   516  stp fp, lr, [jssp, #-16]!
0xffff58218668   520  movz fp, #0xa00000000
0xffff5821866c   524  sub csp, jssp, #0x8 (8)
0xffff58218670   528  str fp, [jssp, #-8]!
0xffff58218674   532  add fp, jssp, #0x8 (8)
0xffff58218678   536  movz x10, #0x0
0xffff5821867c   540  mov x16, lr
0xffff58218680   544  ldr x17, pc+120 (addr 0x0000ffff582186f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58218684   548  blr x17
0xffff58218688   552  lsl x0, x3, #32
0xffff5821868c   556  movz x10, #0x0
0xffff58218690   560  sub csp, jssp, #0x10 (16)
0xffff58218694   564  stp x10, x0, [jssp, #-16]!
0xffff58218698   568  movz x0, #0x2
0xffff5821869c   572  movz x1, #0x5b88
0xffff582186a0   576  movk x1, #0xe2, lsl #16
0xffff582186a4   580  ldr x16, pc+92 (addr 0x0000ffff58218700)    ;; code: STUB, CEntryStub, minor: 5
0xffff582186a8   584  blr x16
0xffff582186ac   588  str x0, [jssp, #80]
0xffff582186b0   592  ldr x16, pc+88 (addr 0x0000ffff58218708)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582186b4   596  blr x16
0xffff582186b8   600  ldr lr, [jssp, #16]
0xffff582186bc   604  ldp xzr, fp, [jssp], #24
0xffff582186c0   608  b #-0x1bc (addr 0xffff58218504)
0xffff582186c4   612  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff582186c8   616  d63f03e0       constant
0xffff582186cc   620  d503201f       constant
0xffff582186d0   624  32b04259       constant
0xffff582186d4   628  00000000       constant
0xffff582186d8   632  32b04259       constant
0xffff582186dc   636  00000000       constant
0xffff582186e0   640  39c04519       constant
0xffff582186e4   644  00000000       constant
0xffff582186e8   648  582170c0       constant
0xffff582186ec   652  0000ffff       constant
0xffff582186f0   656  58217e80       constant
0xffff582186f4   660  0000ffff       constant
0xffff582186f8   664  58206820       constant
0xffff582186fc   668  0000ffff       constant
0xffff58218700   672  58206260       constant
0xffff58218704   676  0000ffff       constant
0xffff58218708   680  582068e0       constant
0xffff5821870c   684  0000ffff       constant
0xffff58218710   688  movz x16, #0x0
0xffff58218714   692  sub csp, jssp, #0x10 (16)
0xffff58218718   696  stp fp, lr, [jssp, #-16]!
0xffff5821871c   700  bl #+0x64 (addr 0xffff58218780)
0xffff58218720   704  movz x16, #0x8
0xffff58218724   708  sub csp, jssp, #0x10 (16)
0xffff58218728   712  stp fp, lr, [jssp, #-16]!
0xffff5821872c   716  bl #+0x54 (addr 0xffff58218780)
0xffff58218730   720  movz x16, #0x10
0xffff58218734   724  sub csp, jssp, #0x10 (16)
0xffff58218738   728  stp fp, lr, [jssp, #-16]!
0xffff5821873c   732  bl #+0x44 (addr 0xffff58218780)
0xffff58218740   736  movz x16, #0x18
0xffff58218744   740  sub csp, jssp, #0x10 (16)
0xffff58218748   744  stp fp, lr, [jssp, #-16]!
0xffff5821874c   748  bl #+0x34 (addr 0xffff58218780)
0xffff58218750   752  movz x16, #0x20
0xffff58218754   756  sub csp, jssp, #0x10 (16)
0xffff58218758   760  stp fp, lr, [jssp, #-16]!
0xffff5821875c   764  bl #+0x24 (addr 0xffff58218780)
0xffff58218760   768  movz x16, #0x28
0xffff58218764   772  sub csp, jssp, #0x10 (16)
0xffff58218768   776  stp fp, lr, [jssp, #-16]!
0xffff5821876c   780  bl #+0x14 (addr 0xffff58218780)
0xffff58218770   784  movz x16, #0x30
0xffff58218774   788  bl #+0x1c (addr 0xffff58218790)
0xffff58218778   792  movz x16, #0x38
0xffff5821877c   796  bl #+0x14 (addr 0xffff58218790)
0xffff58218780   800  movz x17, #0xa00000000
0xffff58218784   804  sub csp, jssp, #0x10 (16)
0xffff58218788   808  stp x17, cp, [jssp, #-16]!
0xffff5821878c   812  add fp, jssp, #0x10 (16)
0xffff58218790   816  ldr x17, pc+24 (addr 0x0000ffff582187a8)    ;; lazy deoptimization bailout 0
0xffff58218794   820  add x17, x17, x16
0xffff58218798   824  br x17
0xffff5821879c   828  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582187a0   832  d63f03e0       constant
0xffff582187a4   836  d503201f       constant
0xffff582187a8   840  58006000       constant
0xffff582187ac   844  0000ffff       constant


Safepoints (size = 21)
0xffff582186ac   588  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff58218468  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218504  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218520  embedded object  (0x39c04519 <the hole>)
0xffff58218570  code target (STUB)  (0xffff582170c0)
0xffff58218624  code target (STUB)  (0xffff58217e80)
0xffff58218680  code target (STUB)  (0xffff58206820)
0xffff582186a4  code target (STUB)  (0xffff58206260)
0xffff582186b0  code target (STUB)  (0xffff582068e0)
0xffff582186c4  constant pool (size 76)
0xffff58218790  runtime entry
0xffff5821879c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 869)
0xffff58218460     0  ldur x5, [x1, #15]
0xffff58218464     4  ldur x6, [x5, #-1]
0xffff58218468     8  ldr x16, pc+616 (addr 0x0000ffff582186d0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5821846c    12  cmp x6, x16
0xffff58218470    16  b.ne #+0x2a0 (addr 0xffff58218710)
0xffff58218474    20  ldur w6, [x1, #27]
0xffff58218478    24  mov x7, x0
0xffff5821847c    28  tbnz w7, #0, #+0x2a4 (addr 0xffff58218720)
0xffff58218480    32  tbnz w2, #0, #+0x118 (addr 0xffff58218598)
0xffff58218484    36  asr x9, x2, #32
0xffff58218488    40  cmp w6, w9
0xffff5821848c    44  b.le #+0x10 (addr 0xffff5821849c)
0xffff58218490    48  cmp w9, w6
0xffff58218494    52  b.hs #+0x29c (addr 0xffff58218730)
0xffff58218498    56  b #+0xf4 (addr 0xffff5821858c)
0xffff5821849c    60  ldur w8, [x5, #11]
0xffff582184a0    64  cmp w8, w9
0xffff582184a4    68  b.gt #+0xdc (addr 0xffff58218580)
0xffff582184a8    72  adds w8, w8, #0x400 (1024)
0xffff582184ac    76  b.vs #+0x294 (addr 0xffff58218740)
0xffff582184b0    80  cmp w9, w8
0xffff582184b4    84  b.hs #+0x29c (addr 0xffff58218750)
0xffff582184b8    88  tbnz w2, #0, #+0x128 (addr 0xffff582185e0)
0xffff582184bc    92  asr x10, x2, #32
0xffff582184c0    96  add w8, w9, w10, lsr #1
0xffff582184c4   100  add w8, w8, #0x10 (16)
0xffff582184c8   104  movz w16, #0x95ff
0xffff582184cc   108  cmp w8, w16, lsl #1
0xffff582184d0   112  b.hs #+0x290 (addr 0xffff58218760)
0xffff582184d4   116  lsl x2, x8, #32
0xffff582184d8   120  lsl w3, w8, #3
0xffff582184dc   124  add w3, w3, #0x10 (16)
0xffff582184e0   128  sxtw x3, w3
0xffff582184e4   132  movz x4, #0x92c0
0xffff582184e8   136  movk x4, #0x16e7, lsl #16
0xffff582184ec   140  ldp x10, x16, [x4]
0xffff582184f0   144  adds x8, x10, x3
0xffff582184f4   148  ccmp x8, x16, #nzCv, lo
0xffff582184f8   152  b.hi #+0x168 (addr 0xffff58218660)
0xffff582184fc   156  str x8, [x4]
0xffff58218500   160  orr x10, x10, #0x1
0xffff58218504   164  ldr x3, pc+468 (addr 0x0000ffff582186d8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58218508   168  stur x3, [x10, #-1]
0xffff5821850c   172  stur x2, [x10, #7]
0xffff58218510   176  ldur w2, [x10, #11]
0xffff58218514   180  cmp w6, w2
0xffff58218518   184  b.ge #+0x18 (addr 0xffff58218530)
0xffff5821851c   188  sub w2, w2, #0x1 (1)
0xffff58218520   192  ldr x3, pc+448 (addr 0x0000ffff582186e0)    ;; object: 0x39c04519 <the hole>
0xffff58218524   196  add x4, x10, #0xf (15)
0xffff58218528   200  str x3, [x4, w2, sxtw #3]
0xffff5821852c   204  b #-0x18 (addr 0xffff58218514)
0xffff58218530   208  cmp w6, #0x0 (0)
0xffff58218534   212  b.le #+0x1c (addr 0xffff58218550)
0xffff58218538   216  sub w6, w6, #0x1 (1)
0xffff5821853c   220  add x2, x5, #0xf (15)
0xffff58218540   224  ldr x3, [x2, w6, sxtw #3]
0xffff58218544   228  add x2, x10, #0xf (15)
0xffff58218548   232  str x3, [x2, w6, sxtw #3]
0xffff5821854c   236  b #-0x1c (addr 0xffff58218530)
0xffff58218550   240  mov x2, x10
0xffff58218554   244  stur x2, [x1, #15]
0xffff58218558   248  add x3, x1, #0xf (15)
0xffff5821855c   252  and x2, x1, #0xfffffffffff00000
0xffff58218560   256  ldr x2, [x2, #8]
0xffff58218564   260  tbz w2, #2, #+0x18 (addr 0xffff5821857c)
0xffff58218568   264  sub csp, jssp, #0x8 (8)
0xffff5821856c   268  str lr, [jssp, #-8]!
0xffff58218570   272  ldr x16, pc+376 (addr 0x0000ffff582186e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58218574   276  blr x16
0xffff58218578   280  ldr lr, [jssp], #8
0xffff5821857c   284  mov x5, x10
0xffff58218580   288  add w2, w9, #0x1 (1)
0xffff58218584   292  lsl x2, x2, #32
0xffff58218588   296  stur x2, [x1, #23]
0xffff5821858c   300  add x1, x5, #0xf (15)
0xffff58218590   304  str x7, [x1, w9, sxtw #3]
0xffff58218594   308  ret
0xffff58218598   312  sub csp, jssp, #0x10 (16)
0xffff5821859c   316  stp fp, lr, [jssp, #-16]!
0xffff582185a0   320  movz fp, #0xa00000000
0xffff582185a4   324  sub csp, jssp, #0x8 (8)
0xffff582185a8   328  str fp, [jssp, #-8]!
0xffff582185ac   332  add fp, jssp, #0x8 (8)
0xffff582185b0   336  ldur x16, [x2, #-1]
0xffff582185b4   340  ldr x17, [x26, #120]
0xffff582185b8   344  cmp x16, x17
0xffff582185bc   348  b.ne #+0x1b4 (addr 0xffff58218770)
0xffff582185c0   352  ldur d29, [x2, #7]
0xffff582185c4   356  fcvtzs w9, d29
0xffff582185c8   360  scvtf d0, w9
0xffff582185cc   364  fcmp d29, d0
0xffff582185d0   368  b.ne #+0x1a0 (addr 0xffff58218770)
0xffff582185d4   372  ldr lr, [jssp, #16]
0xffff582185d8   376  ldp xzr, fp, [jssp], #24
0xffff582185dc   380  b #-0x154 (addr 0xffff58218488)
0xffff582185e0   384  sub csp, jssp, #0x10 (16)
0xffff582185e4   388  stp fp, lr, [jssp, #-16]!
0xffff582185e8   392  movz fp, #0xa00000000
0xffff582185ec   396  sub csp, jssp, #0x8 (8)
0xffff582185f0   400  str fp, [jssp, #-8]!
0xffff582185f4   404  add fp, jssp, #0x8 (8)
0xffff582185f8   408  ldur x16, [x2, #-1]
0xffff582185fc   412  ldr x17, [x26, #120]
0xffff58218600   416  cmp x16, x17
0xffff58218604   420  b.ne #+0x30 (addr 0xffff58218634)
0xffff58218608   424  ldur d30, [x2, #7]
0xffff5821860c   428  fcvtzs x10, d30
0xffff58218610   432  cmp x10, #0x1 (1)
0xffff58218614   436  ccmn x10, #1, #nzcV, vc
0xffff58218618   440  b.vc #+0x18 (addr 0xffff58218630)
0xffff5821861c   444  sub csp, jssp, #0x8 (8)
0xffff58218620   448  str lr, [jssp, #-8]!
0xffff58218624   452  ldr x16, pc+204 (addr 0x0000ffff582186f0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff58218628   456  blr x16
0xffff5821862c   460  ldr lr, [jssp], #8
0xffff58218630   464  b #+0x24 (addr 0xffff58218654)
0xffff58218634   468  ldp x10, x8, [x26, #64]
0xffff58218638   472  cmp x2, x10
0xffff5821863c   476  cset x10, eq
0xffff58218640   480  ccmp x2, x8, #nZcv, ne
0xffff58218644   484  b.eq #+0x10 (addr 0xffff58218654)
0xffff58218648   488  ldr x16, [x26, #40]
0xffff5821864c   492  cmp x2, x16
0xffff58218650   496  b.ne #+0x128 (addr 0xffff58218778)
0xffff58218654   500  ldr lr, [jssp, #16]
0xffff58218658   504  ldp xzr, fp, [jssp], #24
0xffff5821865c   508  b #-0x19c (addr 0xffff582184c0)
0xffff58218660   512  sub csp, jssp, #0x10 (16)
0xffff58218664   516  stp fp, lr, [jssp, #-16]!
0xffff58218668   520  movz fp, #0xa00000000
0xffff5821866c   524  sub csp, jssp, #0x8 (8)
0xffff58218670   528  str fp, [jssp, #-8]!
0xffff58218674   532  add fp, jssp, #0x8 (8)
0xffff58218678   536  movz x10, #0x0
0xffff5821867c   540  mov x16, lr
0xffff58218680   544  ldr x17, pc+120 (addr 0x0000ffff582186f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58218684   548  blr x17
0xffff58218688   552  lsl x0, x3, #32
0xffff5821868c   556  movz x10, #0x0
0xffff58218690   560  sub csp, jssp, #0x10 (16)
0xffff58218694   564  stp x10, x0, [jssp, #-16]!
0xffff58218698   568  movz x0, #0x2
0xffff5821869c   572  movz x1, #0x5b88
0xffff582186a0   576  movk x1, #0xe2, lsl #16
0xffff582186a4   580  ldr x16, pc+92 (addr 0x0000ffff58218700)    ;; code: STUB, CEntryStub, minor: 5
0xffff582186a8   584  blr x16
0xffff582186ac   588  str x0, [jssp, #80]
0xffff582186b0   592  ldr x16, pc+88 (addr 0x0000ffff58218708)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582186b4   596  blr x16
0xffff582186b8   600  ldr lr, [jssp, #16]
0xffff582186bc   604  ldp xzr, fp, [jssp], #24
0xffff582186c0   608  b #-0x1bc (addr 0xffff58218504)
0xffff582186c4   612  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff582186c8   616  d63f03e0       constant
0xffff582186cc   620  d503201f       constant
0xffff582186d0   624  32b04259       constant
0xffff582186d4   628  00000000       constant
0xffff582186d8   632  32b04259       constant
0xffff582186dc   636  00000000       constant
0xffff582186e0   640  39c04519       constant
0xffff582186e4   644  00000000       constant
0xffff582186e8   648  582170c0       constant
0xffff582186ec   652  0000ffff       constant
0xffff582186f0   656  58217e80       constant
0xffff582186f4   660  0000ffff       constant
0xffff582186f8   664  58206820       constant
0xffff582186fc   668  0000ffff       constant
0xffff58218700   672  58206260       constant
0xffff58218704   676  0000ffff       constant
0xffff58218708   680  582068e0       constant
0xffff5821870c   684  0000ffff       constant
0xffff58218710   688  movz x16, #0x0
0xffff58218714   692  sub csp, jssp, #0x10 (16)
0xffff58218718   696  stp fp, lr, [jssp, #-16]!
0xffff5821871c   700  bl #+0x64 (addr 0xffff58218780)
0xffff58218720   704  movz x16, #0x8
0xffff58218724   708  sub csp, jssp, #0x10 (16)
0xffff58218728   712  stp fp, lr, [jssp, #-16]!
0xffff5821872c   716  bl #+0x54 (addr 0xffff58218780)
0xffff58218730   720  movz x16, #0x10
0xffff58218734   724  sub csp, jssp, #0x10 (16)
0xffff58218738   728  stp fp, lr, [jssp, #-16]!
0xffff5821873c   732  bl #+0x44 (addr 0xffff58218780)
0xffff58218740   736  movz x16, #0x18
0xffff58218744   740  sub csp, jssp, #0x10 (16)
0xffff58218748   744  stp fp, lr, [jssp, #-16]!
0xffff5821874c   748  bl #+0x34 (addr 0xffff58218780)
0xffff58218750   752  movz x16, #0x20
0xffff58218754   756  sub csp, jssp, #0x10 (16)
0xffff58218758   760  stp fp, lr, [jssp, #-16]!
0xffff5821875c   764  bl #+0x24 (addr 0xffff58218780)
0xffff58218760   768  movz x16, #0x28
0xffff58218764   772  sub csp, jssp, #0x10 (16)
0xffff58218768   776  stp fp, lr, [jssp, #-16]!
0xffff5821876c   780  bl #+0x14 (addr 0xffff58218780)
0xffff58218770   784  movz x16, #0x30
0xffff58218774   788  bl #+0x1c (addr 0xffff58218790)
0xffff58218778   792  movz x16, #0x38
0xffff5821877c   796  bl #+0x14 (addr 0xffff58218790)
0xffff58218780   800  movz x17, #0xa00000000
0xffff58218784   804  sub csp, jssp, #0x10 (16)
0xffff58218788   808  stp x17, cp, [jssp, #-16]!
0xffff5821878c   812  add fp, jssp, #0x10 (16)
0xffff58218790   816  ldr x17, pc+24 (addr 0x0000ffff582187a8)    ;; lazy deoptimization bailout 0
0xffff58218794   820  add x17, x17, x16
0xffff58218798   824  br x17
0xffff5821879c   828  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582187a0   832  d63f03e0       constant
0xffff582187a4   836  d503201f       constant
0xffff582187a8   840  58006000       constant
0xffff582187ac   844  0000ffff       constant


Safepoints (size = 21)
0xffff582186ac   588  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff58218468  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218504  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218520  embedded object  (0x39c04519 <the hole>)
0xffff58218570  code target (STUB)  (0xffff582170c0)
0xffff58218624  code target (STUB)  (0xffff58217e80)
0xffff58218680  code target (STUB)  (0xffff58206820)
0xffff582186a4  code target (STUB)  (0xffff58206260)
0xffff582186b0  code target (STUB)  (0xffff582068e0)
0xffff582186c4  constant pool (size 76)
0xffff58218790  runtime entry
0xffff5821879c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff58218840     0  ldur x5, [x1, #15]
0xffff58218844     4  ldur x6, [x5, #-1]
0xffff58218848     8  ldr x16, pc+152 (addr 0x0000ffff582188e0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5821884c    12  cmp x6, x16
0xffff58218850    16  b.ne #+0xa0 (addr 0xffff582188f0)
0xffff58218854    20  ldur w6, [x1, #27]
0xffff58218858    24  tbnz w2, #0, #+0x54 (addr 0xffff582188ac)
0xffff5821885c    28  asr x8, x2, #32
0xffff58218860    32  cmp w8, w6
0xffff58218864    36  b.hs #+0x9c (addr 0xffff58218900)
0xffff58218868    40  mov x1, x0
0xffff5821886c    44  add x2, x5, #0xf (15)
0xffff58218870    48  str x1, [x2, w8, sxtw #3]
0xffff58218874    52  add x2, x2, w8, sxtw #3
0xffff58218878    56  tbz w1, #0, #+0x30 (addr 0xffff582188a8)
0xffff5821887c    60  and x1, x1, #0xfffffffffff00000
0xffff58218880    64  ldr x1, [x1, #8]
0xffff58218884    68  tbz w1, #1, #+0x24 (addr 0xffff582188a8)
0xffff58218888    72  and x1, x5, #0xfffffffffff00000
0xffff5821888c    76  ldr x1, [x1, #8]
0xffff58218890    80  tbz w1, #2, #+0x18 (addr 0xffff582188a8)
0xffff58218894    84  sub csp, jssp, #0x8 (8)
0xffff58218898    88  str lr, [jssp, #-8]!
0xffff5821889c    92  ldr x16, pc+76 (addr 0x0000ffff582188e8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff582188a0    96  blr x16
0xffff582188a4   100  ldr lr, [jssp], #8
0xffff582188a8   104  ret
0xffff582188ac   108  ldur x16, [x2, #-1]
0xffff582188b0   112  ldr x17, [x26, #120]
0xffff582188b4   116  cmp x16, x17
0xffff582188b8   120  b.ne #+0x58 (addr 0xffff58218910)
0xffff582188bc   124  ldur d29, [x2, #7]
0xffff582188c0   128  fcvtzs w8, d29
0xffff582188c4   132  scvtf d0, w8
0xffff582188c8   136  fcmp d29, d0
0xffff582188cc   140  b.ne #+0x44 (addr 0xffff58218910)
0xffff582188d0   144  b #-0x70 (addr 0xffff58218860)
0xffff582188d4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582188d8   152  d63f03e0       constant
0xffff582188dc   156  d503201f       constant
0xffff582188e0   160  32b04259       constant
0xffff582188e4   164  00000000       constant
0xffff582188e8   168  58216760       constant
0xffff582188ec   172  0000ffff       constant
0xffff582188f0   176  movz x16, #0x0
0xffff582188f4   180  sub csp, jssp, #0x10 (16)
0xffff582188f8   184  stp fp, lr, [jssp, #-16]!
0xffff582188fc   188  bl #+0x24 (addr 0xffff58218920)
0xffff58218900   192  movz x16, #0x8
0xffff58218904   196  sub csp, jssp, #0x10 (16)
0xffff58218908   200  stp fp, lr, [jssp, #-16]!
0xffff5821890c   204  bl #+0x14 (addr 0xffff58218920)
0xffff58218910   208  movz x16, #0x10
0xffff58218914   212  sub csp, jssp, #0x10 (16)
0xffff58218918   216  stp fp, lr, [jssp, #-16]!
0xffff5821891c   220  bl #+0x4 (addr 0xffff58218920)
0xffff58218920   224  movz x17, #0xa00000000
0xffff58218924   228  sub csp, jssp, #0x10 (16)
0xffff58218928   232  stp x17, cp, [jssp, #-16]!
0xffff5821892c   236  add fp, jssp, #0x10 (16)
0xffff58218930   240  ldr x17, pc+24 (addr 0x0000ffff58218948)    ;; lazy deoptimization bailout 0
0xffff58218934   244  add x17, x17, x16
0xffff58218938   248  br x17
0xffff5821893c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58218940   256  d63f03e0       constant
0xffff58218944   260  d503201f       constant
0xffff58218948   264  58006000       constant
0xffff5821894c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff58218848  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5821889c  code target (STUB)  (0xffff58216760)
0xffff582188d4  constant pool (size 28)
0xffff58218930  runtime entry
0xffff5821893c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff58218840     0  ldur x5, [x1, #15]
0xffff58218844     4  ldur x6, [x5, #-1]
0xffff58218848     8  ldr x16, pc+152 (addr 0x0000ffff582188e0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5821884c    12  cmp x6, x16
0xffff58218850    16  b.ne #+0xa0 (addr 0xffff582188f0)
0xffff58218854    20  ldur w6, [x1, #27]
0xffff58218858    24  tbnz w2, #0, #+0x54 (addr 0xffff582188ac)
0xffff5821885c    28  asr x8, x2, #32
0xffff58218860    32  cmp w8, w6
0xffff58218864    36  b.hs #+0x9c (addr 0xffff58218900)
0xffff58218868    40  mov x1, x0
0xffff5821886c    44  add x2, x5, #0xf (15)
0xffff58218870    48  str x1, [x2, w8, sxtw #3]
0xffff58218874    52  add x2, x2, w8, sxtw #3
0xffff58218878    56  tbz w1, #0, #+0x30 (addr 0xffff582188a8)
0xffff5821887c    60  and x1, x1, #0xfffffffffff00000
0xffff58218880    64  ldr x1, [x1, #8]
0xffff58218884    68  tbz w1, #1, #+0x24 (addr 0xffff582188a8)
0xffff58218888    72  and x1, x5, #0xfffffffffff00000
0xffff5821888c    76  ldr x1, [x1, #8]
0xffff58218890    80  tbz w1, #2, #+0x18 (addr 0xffff582188a8)
0xffff58218894    84  sub csp, jssp, #0x8 (8)
0xffff58218898    88  str lr, [jssp, #-8]!
0xffff5821889c    92  ldr x16, pc+76 (addr 0x0000ffff582188e8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff582188a0    96  blr x16
0xffff582188a4   100  ldr lr, [jssp], #8
0xffff582188a8   104  ret
0xffff582188ac   108  ldur x16, [x2, #-1]
0xffff582188b0   112  ldr x17, [x26, #120]
0xffff582188b4   116  cmp x16, x17
0xffff582188b8   120  b.ne #+0x58 (addr 0xffff58218910)
0xffff582188bc   124  ldur d29, [x2, #7]
0xffff582188c0   128  fcvtzs w8, d29
0xffff582188c4   132  scvtf d0, w8
0xffff582188c8   136  fcmp d29, d0
0xffff582188cc   140  b.ne #+0x44 (addr 0xffff58218910)
0xffff582188d0   144  b #-0x70 (addr 0xffff58218860)
0xffff582188d4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582188d8   152  d63f03e0       constant
0xffff582188dc   156  d503201f       constant
0xffff582188e0   160  32b04259       constant
0xffff582188e4   164  00000000       constant
0xffff582188e8   168  58216760       constant
0xffff582188ec   172  0000ffff       constant
0xffff582188f0   176  movz x16, #0x0
0xffff582188f4   180  sub csp, jssp, #0x10 (16)
0xffff582188f8   184  stp fp, lr, [jssp, #-16]!
0xffff582188fc   188  bl #+0x24 (addr 0xffff58218920)
0xffff58218900   192  movz x16, #0x8
0xffff58218904   196  sub csp, jssp, #0x10 (16)
0xffff58218908   200  stp fp, lr, [jssp, #-16]!
0xffff5821890c   204  bl #+0x14 (addr 0xffff58218920)
0xffff58218910   208  movz x16, #0x10
0xffff58218914   212  sub csp, jssp, #0x10 (16)
0xffff58218918   216  stp fp, lr, [jssp, #-16]!
0xffff5821891c   220  bl #+0x4 (addr 0xffff58218920)
0xffff58218920   224  movz x17, #0xa00000000
0xffff58218924   228  sub csp, jssp, #0x10 (16)
0xffff58218928   232  stp x17, cp, [jssp, #-16]!
0xffff5821892c   236  add fp, jssp, #0x10 (16)
0xffff58218930   240  ldr x17, pc+24 (addr 0x0000ffff58218948)    ;; lazy deoptimization bailout 0
0xffff58218934   244  add x17, x17, x16
0xffff58218938   248  br x17
0xffff5821893c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58218940   256  d63f03e0       constant
0xffff58218944   260  d503201f       constant
0xffff58218948   264  58006000       constant
0xffff5821894c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff58218848  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5821889c  code target (STUB)  (0xffff58216760)
0xffff582188d4  constant pool (size 28)
0xffff58218930  runtime entry
0xffff5821893c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff582189c0     0  ldur x5, [x1, #15]
0xffff582189c4     4  ldur x6, [x5, #-1]
0xffff582189c8     8  ldr x16, pc+664 (addr 0x0000ffff58218c60)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582189cc    12  cmp x6, x16
0xffff582189d0    16  b.ne #+0x2d8 (addr 0xffff58218ca8)
0xffff582189d4    20  ldur w6, [x1, #27]
0xffff582189d8    24  tbnz w2, #0, #+0x150 (addr 0xffff58218b28)
0xffff582189dc    28  asr x8, x2, #32
0xffff582189e0    32  cmp w6, w8
0xffff582189e4    36  b.eq #+0x10 (addr 0xffff582189f4)
0xffff582189e8    40  cmp w8, w6
0xffff582189ec    44  b.hs #+0x2cc (addr 0xffff58218cb8)
0xffff582189f0    48  b #+0xf4 (addr 0xffff58218ae4)
0xffff582189f4    52  ldur w7, [x5, #11]
0xffff582189f8    56  cmp w7, w8
0xffff582189fc    60  b.gt #+0xdc (addr 0xffff58218ad8)
0xffff58218a00    64  adds w7, w7, #0x400 (1024)
0xffff58218a04    68  b.vs #+0x2c4 (addr 0xffff58218cc8)
0xffff58218a08    72  cmp w8, w7
0xffff58218a0c    76  b.hs #+0x2cc (addr 0xffff58218cd8)
0xffff58218a10    80  tbnz w2, #0, #+0x160 (addr 0xffff58218b70)
0xffff58218a14    84  asr x9, x2, #32
0xffff58218a18    88  add w7, w8, w9, lsr #1
0xffff58218a1c    92  add w7, w7, #0x10 (16)
0xffff58218a20    96  movz w16, #0x95ff
0xffff58218a24   100  cmp w7, w16, lsl #1
0xffff58218a28   104  b.hs #+0x2c0 (addr 0xffff58218ce8)
0xffff58218a2c   108  lsl x2, x7, #32
0xffff58218a30   112  lsl w3, w7, #3
0xffff58218a34   116  add w3, w3, #0x10 (16)
0xffff58218a38   120  sxtw x3, w3
0xffff58218a3c   124  movz x4, #0x92c0
0xffff58218a40   128  movk x4, #0x16e7, lsl #16
0xffff58218a44   132  ldp x9, x16, [x4]
0xffff58218a48   136  adds x7, x9, x3
0xffff58218a4c   140  ccmp x7, x16, #nzCv, lo
0xffff58218a50   144  b.hi #+0x1a0 (addr 0xffff58218bf0)
0xffff58218a54   148  str x7, [x4]
0xffff58218a58   152  orr x9, x9, #0x1
0xffff58218a5c   156  ldr x3, pc+524 (addr 0x0000ffff58218c68)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58218a60   160  stur x3, [x9, #-1]
0xffff58218a64   164  stur x2, [x9, #7]
0xffff58218a68   168  ldur w2, [x9, #11]
0xffff58218a6c   172  cmp w6, w2
0xffff58218a70   176  b.ge #+0x18 (addr 0xffff58218a88)
0xffff58218a74   180  sub w2, w2, #0x1 (1)
0xffff58218a78   184  ldr x3, pc+504 (addr 0x0000ffff58218c70)    ;; object: 0x39c04519 <the hole>
0xffff58218a7c   188  add x4, x9, #0xf (15)
0xffff58218a80   192  str x3, [x4, w2, sxtw #3]
0xffff58218a84   196  b #-0x18 (addr 0xffff58218a6c)
0xffff58218a88   200  cmp w6, #0x0 (0)
0xffff58218a8c   204  b.le #+0x1c (addr 0xffff58218aa8)
0xffff58218a90   208  sub w6, w6, #0x1 (1)
0xffff58218a94   212  add x2, x5, #0xf (15)
0xffff58218a98   216  ldr x3, [x2, w6, sxtw #3]
0xffff58218a9c   220  add x2, x9, #0xf (15)
0xffff58218aa0   224  str x3, [x2, w6, sxtw #3]
0xffff58218aa4   228  b #-0x1c (addr 0xffff58218a88)
0xffff58218aa8   232  mov x2, x9
0xffff58218aac   236  stur x2, [x1, #15]
0xffff58218ab0   240  add x3, x1, #0xf (15)
0xffff58218ab4   244  and x2, x1, #0xfffffffffff00000
0xffff58218ab8   248  ldr x2, [x2, #8]
0xffff58218abc   252  tbz w2, #2, #+0x18 (addr 0xffff58218ad4)
0xffff58218ac0   256  sub csp, jssp, #0x8 (8)
0xffff58218ac4   260  str lr, [jssp, #-8]!
0xffff58218ac8   264  ldr x16, pc+432 (addr 0x0000ffff58218c78)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58218acc   268  blr x16
0xffff58218ad0   272  ldr lr, [jssp], #8
0xffff58218ad4   276  mov x5, x9
0xffff58218ad8   280  add w2, w8, #0x1 (1)
0xffff58218adc   284  lsl x2, x2, #32
0xffff58218ae0   288  stur x2, [x1, #23]
0xffff58218ae4   292  mov x1, x0
0xffff58218ae8   296  add x2, x5, #0xf (15)
0xffff58218aec   300  str x1, [x2, w8, sxtw #3]
0xffff58218af0   304  add x2, x2, w8, sxtw #3
0xffff58218af4   308  tbz w1, #0, #+0x30 (addr 0xffff58218b24)
0xffff58218af8   312  and x1, x1, #0xfffffffffff00000
0xffff58218afc   316  ldr x1, [x1, #8]
0xffff58218b00   320  tbz w1, #1, #+0x24 (addr 0xffff58218b24)
0xffff58218b04   324  and x1, x5, #0xfffffffffff00000
0xffff58218b08   328  ldr x1, [x1, #8]
0xffff58218b0c   332  tbz w1, #2, #+0x18 (addr 0xffff58218b24)
0xffff58218b10   336  sub csp, jssp, #0x8 (8)
0xffff58218b14   340  str lr, [jssp, #-8]!
0xffff58218b18   344  ldr x16, pc+360 (addr 0x0000ffff58218c80)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff58218b1c   348  blr x16
0xffff58218b20   352  ldr lr, [jssp], #8
0xffff58218b24   356  ret
0xffff58218b28   360  sub csp, jssp, #0x10 (16)
0xffff58218b2c   364  stp fp, lr, [jssp, #-16]!
0xffff58218b30   368  movz fp, #0xa00000000
0xffff58218b34   372  sub csp, jssp, #0x8 (8)
0xffff58218b38   376  str fp, [jssp, #-8]!
0xffff58218b3c   380  add fp, jssp, #0x8 (8)
0xffff58218b40   384  ldur x16, [x2, #-1]
0xffff58218b44   388  ldr x17, [x26, #120]
0xffff58218b48   392  cmp x16, x17
0xffff58218b4c   396  b.ne #+0x1ac (addr 0xffff58218cf8)
0xffff58218b50   400  ldur d29, [x2, #7]
0xffff58218b54   404  fcvtzs w8, d29
0xffff58218b58   408  scvtf d0, w8
0xffff58218b5c   412  fcmp d29, d0
0xffff58218b60   416  b.ne #+0x198 (addr 0xffff58218cf8)
0xffff58218b64   420  ldr lr, [jssp, #16]
0xffff58218b68   424  ldp xzr, fp, [jssp], #24
0xffff58218b6c   428  b #-0x18c (addr 0xffff582189e0)
0xffff58218b70   432  sub csp, jssp, #0x10 (16)
0xffff58218b74   436  stp fp, lr, [jssp, #-16]!
0xffff58218b78   440  movz fp, #0xa00000000
0xffff58218b7c   444  sub csp, jssp, #0x8 (8)
0xffff58218b80   448  str fp, [jssp, #-8]!
0xffff58218b84   452  add fp, jssp, #0x8 (8)
0xffff58218b88   456  ldur x16, [x2, #-1]
0xffff58218b8c   460  ldr x17, [x26, #120]
0xffff58218b90   464  cmp x16, x17
0xffff58218b94   468  b.ne #+0x30 (addr 0xffff58218bc4)
0xffff58218b98   472  ldur d30, [x2, #7]
0xffff58218b9c   476  fcvtzs x9, d30
0xffff58218ba0   480  cmp x9, #0x1 (1)
0xffff58218ba4   484  ccmn x9, #1, #nzcV, vc
0xffff58218ba8   488  b.vc #+0x18 (addr 0xffff58218bc0)
0xffff58218bac   492  sub csp, jssp, #0x8 (8)
0xffff58218bb0   496  str lr, [jssp, #-8]!
0xffff58218bb4   500  ldr x16, pc+212 (addr 0x0000ffff58218c88)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff58218bb8   504  blr x16
0xffff58218bbc   508  ldr lr, [jssp], #8
0xffff58218bc0   512  b #+0x24 (addr 0xffff58218be4)
0xffff58218bc4   516  ldp x9, x7, [x26, #64]
0xffff58218bc8   520  cmp x2, x9
0xffff58218bcc   524  cset x9, eq
0xffff58218bd0   528  ccmp x2, x7, #nZcv, ne
0xffff58218bd4   532  b.eq #+0x10 (addr 0xffff58218be4)
0xffff58218bd8   536  ldr x16, [x26, #40]
0xffff58218bdc   540  cmp x2, x16
0xffff58218be0   544  b.ne #+0x120 (addr 0xffff58218d00)
0xffff58218be4   548  ldr lr, [jssp, #16]
0xffff58218be8   552  ldp xzr, fp, [jssp], #24
0xffff58218bec   556  b #-0x1d4 (addr 0xffff58218a18)
0xffff58218bf0   560  sub csp, jssp, #0x10 (16)
0xffff58218bf4   564  stp fp, lr, [jssp, #-16]!
0xffff58218bf8   568  movz fp, #0xa00000000
0xffff58218bfc   572  sub csp, jssp, #0x8 (8)
0xffff58218c00   576  str fp, [jssp, #-8]!
0xffff58218c04   580  add fp, jssp, #0x8 (8)
0xffff58218c08   584  movz x9, #0x0
0xffff58218c0c   588  mov x16, lr
0xffff58218c10   592  ldr x17, pc+128 (addr 0x0000ffff58218c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58218c14   596  blr x17
0xffff58218c18   600  lsl x0, x3, #32
0xffff58218c1c   604  movz x10, #0x0
0xffff58218c20   608  sub csp, jssp, #0x10 (16)
0xffff58218c24   612  stp x10, x0, [jssp, #-16]!
0xffff58218c28   616  movz x0, #0x2
0xffff58218c2c   620  movz x1, #0x5b88
0xffff58218c30   624  movk x1, #0xe2, lsl #16
0xffff58218c34   628  ldr x16, pc+100 (addr 0x0000ffff58218c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff58218c38   632  blr x16
0xffff58218c3c   636  str x0, [jssp, #72]
0xffff58218c40   640  ldr x16, pc+96 (addr 0x0000ffff58218ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58218c44   644  blr x16
0xffff58218c48   648  ldr lr, [jssp, #16]
0xffff58218c4c   652  ldp xzr, fp, [jssp], #24
0xffff58218c50   656  b #-0x1f4 (addr 0xffff58218a5c)
0xffff58218c54   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff58218c58   664  d63f03e0       constant
0xffff58218c5c   668  d503201f       constant
0xffff58218c60   672  32b04259       constant
0xffff58218c64   676  00000000       constant
0xffff58218c68   680  32b04259       constant
0xffff58218c6c   684  00000000       constant
0xffff58218c70   688  39c04519       constant
0xffff58218c74   692  00000000       constant
0xffff58218c78   696  582170c0       constant
0xffff58218c7c   700  0000ffff       constant
0xffff58218c80   704  58216760       constant
0xffff58218c84   708  0000ffff       constant
0xffff58218c88   712  582178a0       constant
0xffff58218c8c   716  0000ffff       constant
0xffff58218c90   720  58206820       constant
0xffff58218c94   724  0000ffff       constant
0xffff58218c98   728  58206260       constant
0xffff58218c9c   732  0000ffff       constant
0xffff58218ca0   736  582068e0       constant
0xffff58218ca4   740  0000ffff       constant
0xffff58218ca8   744  movz x16, #0x0
0xffff58218cac   748  sub csp, jssp, #0x10 (16)
0xffff58218cb0   752  stp fp, lr, [jssp, #-16]!
0xffff58218cb4   756  bl #+0x54 (addr 0xffff58218d08)
0xffff58218cb8   760  movz x16, #0x8
0xffff58218cbc   764  sub csp, jssp, #0x10 (16)
0xffff58218cc0   768  stp fp, lr, [jssp, #-16]!
0xffff58218cc4   772  bl #+0x44 (addr 0xffff58218d08)
0xffff58218cc8   776  movz x16, #0x10
0xffff58218ccc   780  sub csp, jssp, #0x10 (16)
0xffff58218cd0   784  stp fp, lr, [jssp, #-16]!
0xffff58218cd4   788  bl #+0x34 (addr 0xffff58218d08)
0xffff58218cd8   792  movz x16, #0x18
0xffff58218cdc   796  sub csp, jssp, #0x10 (16)
0xffff58218ce0   800  stp fp, lr, [jssp, #-16]!
0xffff58218ce4   804  bl #+0x24 (addr 0xffff58218d08)
0xffff58218ce8   808  movz x16, #0x20
0xffff58218cec   812  sub csp, jssp, #0x10 (16)
0xffff58218cf0   816  stp fp, lr, [jssp, #-16]!
0xffff58218cf4   820  bl #+0x14 (addr 0xffff58218d08)
0xffff58218cf8   824  movz x16, #0x28
0xffff58218cfc   828  bl #+0x1c (addr 0xffff58218d18)
0xffff58218d00   832  movz x16, #0x30
0xffff58218d04   836  bl #+0x14 (addr 0xffff58218d18)
0xffff58218d08   840  movz x17, #0xa00000000
0xffff58218d0c   844  sub csp, jssp, #0x10 (16)
0xffff58218d10   848  stp x17, cp, [jssp, #-16]!
0xffff58218d14   852  add fp, jssp, #0x10 (16)
0xffff58218d18   856  ldr x17, pc+24 (addr 0x0000ffff58218d30)    ;; lazy deoptimization bailout 0
0xffff58218d1c   860  add x17, x17, x16
0xffff58218d20   864  br x17
0xffff58218d24   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58218d28   872  d63f03e0       constant
0xffff58218d2c   876  d503201f       constant
0xffff58218d30   880  58006000       constant
0xffff58218d34   884  0000ffff       constant


Safepoints (size = 21)
0xffff58218c3c   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff582189c8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218a5c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218a78  embedded object  (0x39c04519 <the hole>)
0xffff58218ac8  code target (STUB)  (0xffff582170c0)
0xffff58218b18  code target (STUB)  (0xffff58216760)
0xffff58218bb4  code target (STUB)  (0xffff582178a0)
0xffff58218c10  code target (STUB)  (0xffff58206820)
0xffff58218c34  code target (STUB)  (0xffff58206260)
0xffff58218c40  code target (STUB)  (0xffff582068e0)
0xffff58218c54  constant pool (size 84)
0xffff58218d18  runtime entry
0xffff58218d24  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff582189c0     0  ldur x5, [x1, #15]
0xffff582189c4     4  ldur x6, [x5, #-1]
0xffff582189c8     8  ldr x16, pc+664 (addr 0x0000ffff58218c60)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582189cc    12  cmp x6, x16
0xffff582189d0    16  b.ne #+0x2d8 (addr 0xffff58218ca8)
0xffff582189d4    20  ldur w6, [x1, #27]
0xffff582189d8    24  tbnz w2, #0, #+0x150 (addr 0xffff58218b28)
0xffff582189dc    28  asr x8, x2, #32
0xffff582189e0    32  cmp w6, w8
0xffff582189e4    36  b.eq #+0x10 (addr 0xffff582189f4)
0xffff582189e8    40  cmp w8, w6
0xffff582189ec    44  b.hs #+0x2cc (addr 0xffff58218cb8)
0xffff582189f0    48  b #+0xf4 (addr 0xffff58218ae4)
0xffff582189f4    52  ldur w7, [x5, #11]
0xffff582189f8    56  cmp w7, w8
0xffff582189fc    60  b.gt #+0xdc (addr 0xffff58218ad8)
0xffff58218a00    64  adds w7, w7, #0x400 (1024)
0xffff58218a04    68  b.vs #+0x2c4 (addr 0xffff58218cc8)
0xffff58218a08    72  cmp w8, w7
0xffff58218a0c    76  b.hs #+0x2cc (addr 0xffff58218cd8)
0xffff58218a10    80  tbnz w2, #0, #+0x160 (addr 0xffff58218b70)
0xffff58218a14    84  asr x9, x2, #32
0xffff58218a18    88  add w7, w8, w9, lsr #1
0xffff58218a1c    92  add w7, w7, #0x10 (16)
0xffff58218a20    96  movz w16, #0x95ff
0xffff58218a24   100  cmp w7, w16, lsl #1
0xffff58218a28   104  b.hs #+0x2c0 (addr 0xffff58218ce8)
0xffff58218a2c   108  lsl x2, x7, #32
0xffff58218a30   112  lsl w3, w7, #3
0xffff58218a34   116  add w3, w3, #0x10 (16)
0xffff58218a38   120  sxtw x3, w3
0xffff58218a3c   124  movz x4, #0x92c0
0xffff58218a40   128  movk x4, #0x16e7, lsl #16
0xffff58218a44   132  ldp x9, x16, [x4]
0xffff58218a48   136  adds x7, x9, x3
0xffff58218a4c   140  ccmp x7, x16, #nzCv, lo
0xffff58218a50   144  b.hi #+0x1a0 (addr 0xffff58218bf0)
0xffff58218a54   148  str x7, [x4]
0xffff58218a58   152  orr x9, x9, #0x1
0xffff58218a5c   156  ldr x3, pc+524 (addr 0x0000ffff58218c68)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58218a60   160  stur x3, [x9, #-1]
0xffff58218a64   164  stur x2, [x9, #7]
0xffff58218a68   168  ldur w2, [x9, #11]
0xffff58218a6c   172  cmp w6, w2
0xffff58218a70   176  b.ge #+0x18 (addr 0xffff58218a88)
0xffff58218a74   180  sub w2, w2, #0x1 (1)
0xffff58218a78   184  ldr x3, pc+504 (addr 0x0000ffff58218c70)    ;; object: 0x39c04519 <the hole>
0xffff58218a7c   188  add x4, x9, #0xf (15)
0xffff58218a80   192  str x3, [x4, w2, sxtw #3]
0xffff58218a84   196  b #-0x18 (addr 0xffff58218a6c)
0xffff58218a88   200  cmp w6, #0x0 (0)
0xffff58218a8c   204  b.le #+0x1c (addr 0xffff58218aa8)
0xffff58218a90   208  sub w6, w6, #0x1 (1)
0xffff58218a94   212  add x2, x5, #0xf (15)
0xffff58218a98   216  ldr x3, [x2, w6, sxtw #3]
0xffff58218a9c   220  add x2, x9, #0xf (15)
0xffff58218aa0   224  str x3, [x2, w6, sxtw #3]
0xffff58218aa4   228  b #-0x1c (addr 0xffff58218a88)
0xffff58218aa8   232  mov x2, x9
0xffff58218aac   236  stur x2, [x1, #15]
0xffff58218ab0   240  add x3, x1, #0xf (15)
0xffff58218ab4   244  and x2, x1, #0xfffffffffff00000
0xffff58218ab8   248  ldr x2, [x2, #8]
0xffff58218abc   252  tbz w2, #2, #+0x18 (addr 0xffff58218ad4)
0xffff58218ac0   256  sub csp, jssp, #0x8 (8)
0xffff58218ac4   260  str lr, [jssp, #-8]!
0xffff58218ac8   264  ldr x16, pc+432 (addr 0x0000ffff58218c78)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58218acc   268  blr x16
0xffff58218ad0   272  ldr lr, [jssp], #8
0xffff58218ad4   276  mov x5, x9
0xffff58218ad8   280  add w2, w8, #0x1 (1)
0xffff58218adc   284  lsl x2, x2, #32
0xffff58218ae0   288  stur x2, [x1, #23]
0xffff58218ae4   292  mov x1, x0
0xffff58218ae8   296  add x2, x5, #0xf (15)
0xffff58218aec   300  str x1, [x2, w8, sxtw #3]
0xffff58218af0   304  add x2, x2, w8, sxtw #3
0xffff58218af4   308  tbz w1, #0, #+0x30 (addr 0xffff58218b24)
0xffff58218af8   312  and x1, x1, #0xfffffffffff00000
0xffff58218afc   316  ldr x1, [x1, #8]
0xffff58218b00   320  tbz w1, #1, #+0x24 (addr 0xffff58218b24)
0xffff58218b04   324  and x1, x5, #0xfffffffffff00000
0xffff58218b08   328  ldr x1, [x1, #8]
0xffff58218b0c   332  tbz w1, #2, #+0x18 (addr 0xffff58218b24)
0xffff58218b10   336  sub csp, jssp, #0x8 (8)
0xffff58218b14   340  str lr, [jssp, #-8]!
0xffff58218b18   344  ldr x16, pc+360 (addr 0x0000ffff58218c80)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff58218b1c   348  blr x16
0xffff58218b20   352  ldr lr, [jssp], #8
0xffff58218b24   356  ret
0xffff58218b28   360  sub csp, jssp, #0x10 (16)
0xffff58218b2c   364  stp fp, lr, [jssp, #-16]!
0xffff58218b30   368  movz fp, #0xa00000000
0xffff58218b34   372  sub csp, jssp, #0x8 (8)
0xffff58218b38   376  str fp, [jssp, #-8]!
0xffff58218b3c   380  add fp, jssp, #0x8 (8)
0xffff58218b40   384  ldur x16, [x2, #-1]
0xffff58218b44   388  ldr x17, [x26, #120]
0xffff58218b48   392  cmp x16, x17
0xffff58218b4c   396  b.ne #+0x1ac (addr 0xffff58218cf8)
0xffff58218b50   400  ldur d29, [x2, #7]
0xffff58218b54   404  fcvtzs w8, d29
0xffff58218b58   408  scvtf d0, w8
0xffff58218b5c   412  fcmp d29, d0
0xffff58218b60   416  b.ne #+0x198 (addr 0xffff58218cf8)
0xffff58218b64   420  ldr lr, [jssp, #16]
0xffff58218b68   424  ldp xzr, fp, [jssp], #24
0xffff58218b6c   428  b #-0x18c (addr 0xffff582189e0)
0xffff58218b70   432  sub csp, jssp, #0x10 (16)
0xffff58218b74   436  stp fp, lr, [jssp, #-16]!
0xffff58218b78   440  movz fp, #0xa00000000
0xffff58218b7c   444  sub csp, jssp, #0x8 (8)
0xffff58218b80   448  str fp, [jssp, #-8]!
0xffff58218b84   452  add fp, jssp, #0x8 (8)
0xffff58218b88   456  ldur x16, [x2, #-1]
0xffff58218b8c   460  ldr x17, [x26, #120]
0xffff58218b90   464  cmp x16, x17
0xffff58218b94   468  b.ne #+0x30 (addr 0xffff58218bc4)
0xffff58218b98   472  ldur d30, [x2, #7]
0xffff58218b9c   476  fcvtzs x9, d30
0xffff58218ba0   480  cmp x9, #0x1 (1)
0xffff58218ba4   484  ccmn x9, #1, #nzcV, vc
0xffff58218ba8   488  b.vc #+0x18 (addr 0xffff58218bc0)
0xffff58218bac   492  sub csp, jssp, #0x8 (8)
0xffff58218bb0   496  str lr, [jssp, #-8]!
0xffff58218bb4   500  ldr x16, pc+212 (addr 0x0000ffff58218c88)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff58218bb8   504  blr x16
0xffff58218bbc   508  ldr lr, [jssp], #8
0xffff58218bc0   512  b #+0x24 (addr 0xffff58218be4)
0xffff58218bc4   516  ldp x9, x7, [x26, #64]
0xffff58218bc8   520  cmp x2, x9
0xffff58218bcc   524  cset x9, eq
0xffff58218bd0   528  ccmp x2, x7, #nZcv, ne
0xffff58218bd4   532  b.eq #+0x10 (addr 0xffff58218be4)
0xffff58218bd8   536  ldr x16, [x26, #40]
0xffff58218bdc   540  cmp x2, x16
0xffff58218be0   544  b.ne #+0x120 (addr 0xffff58218d00)
0xffff58218be4   548  ldr lr, [jssp, #16]
0xffff58218be8   552  ldp xzr, fp, [jssp], #24
0xffff58218bec   556  b #-0x1d4 (addr 0xffff58218a18)
0xffff58218bf0   560  sub csp, jssp, #0x10 (16)
0xffff58218bf4   564  stp fp, lr, [jssp, #-16]!
0xffff58218bf8   568  movz fp, #0xa00000000
0xffff58218bfc   572  sub csp, jssp, #0x8 (8)
0xffff58218c00   576  str fp, [jssp, #-8]!
0xffff58218c04   580  add fp, jssp, #0x8 (8)
0xffff58218c08   584  movz x9, #0x0
0xffff58218c0c   588  mov x16, lr
0xffff58218c10   592  ldr x17, pc+128 (addr 0x0000ffff58218c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58218c14   596  blr x17
0xffff58218c18   600  lsl x0, x3, #32
0xffff58218c1c   604  movz x10, #0x0
0xffff58218c20   608  sub csp, jssp, #0x10 (16)
0xffff58218c24   612  stp x10, x0, [jssp, #-16]!
0xffff58218c28   616  movz x0, #0x2
0xffff58218c2c   620  movz x1, #0x5b88
0xffff58218c30   624  movk x1, #0xe2, lsl #16
0xffff58218c34   628  ldr x16, pc+100 (addr 0x0000ffff58218c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff58218c38   632  blr x16
0xffff58218c3c   636  str x0, [jssp, #72]
0xffff58218c40   640  ldr x16, pc+96 (addr 0x0000ffff58218ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58218c44   644  blr x16
0xffff58218c48   648  ldr lr, [jssp, #16]
0xffff58218c4c   652  ldp xzr, fp, [jssp], #24
0xffff58218c50   656  b #-0x1f4 (addr 0xffff58218a5c)
0xffff58218c54   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff58218c58   664  d63f03e0       constant
0xffff58218c5c   668  d503201f       constant
0xffff58218c60   672  32b04259       constant
0xffff58218c64   676  00000000       constant
0xffff58218c68   680  32b04259       constant
0xffff58218c6c   684  00000000       constant
0xffff58218c70   688  39c04519       constant
0xffff58218c74   692  00000000       constant
0xffff58218c78   696  582170c0       constant
0xffff58218c7c   700  0000ffff       constant
0xffff58218c80   704  58216760       constant
0xffff58218c84   708  0000ffff       constant
0xffff58218c88   712  582178a0       constant
0xffff58218c8c   716  0000ffff       constant
0xffff58218c90   720  58206820       constant
0xffff58218c94   724  0000ffff       constant
0xffff58218c98   728  58206260       constant
0xffff58218c9c   732  0000ffff       constant
0xffff58218ca0   736  582068e0       constant
0xffff58218ca4   740  0000ffff       constant
0xffff58218ca8   744  movz x16, #0x0
0xffff58218cac   748  sub csp, jssp, #0x10 (16)
0xffff58218cb0   752  stp fp, lr, [jssp, #-16]!
0xffff58218cb4   756  bl #+0x54 (addr 0xffff58218d08)
0xffff58218cb8   760  movz x16, #0x8
0xffff58218cbc   764  sub csp, jssp, #0x10 (16)
0xffff58218cc0   768  stp fp, lr, [jssp, #-16]!
0xffff58218cc4   772  bl #+0x44 (addr 0xffff58218d08)
0xffff58218cc8   776  movz x16, #0x10
0xffff58218ccc   780  sub csp, jssp, #0x10 (16)
0xffff58218cd0   784  stp fp, lr, [jssp, #-16]!
0xffff58218cd4   788  bl #+0x34 (addr 0xffff58218d08)
0xffff58218cd8   792  movz x16, #0x18
0xffff58218cdc   796  sub csp, jssp, #0x10 (16)
0xffff58218ce0   800  stp fp, lr, [jssp, #-16]!
0xffff58218ce4   804  bl #+0x24 (addr 0xffff58218d08)
0xffff58218ce8   808  movz x16, #0x20
0xffff58218cec   812  sub csp, jssp, #0x10 (16)
0xffff58218cf0   816  stp fp, lr, [jssp, #-16]!
0xffff58218cf4   820  bl #+0x14 (addr 0xffff58218d08)
0xffff58218cf8   824  movz x16, #0x28
0xffff58218cfc   828  bl #+0x1c (addr 0xffff58218d18)
0xffff58218d00   832  movz x16, #0x30
0xffff58218d04   836  bl #+0x14 (addr 0xffff58218d18)
0xffff58218d08   840  movz x17, #0xa00000000
0xffff58218d0c   844  sub csp, jssp, #0x10 (16)
0xffff58218d10   848  stp x17, cp, [jssp, #-16]!
0xffff58218d14   852  add fp, jssp, #0x10 (16)
0xffff58218d18   856  ldr x17, pc+24 (addr 0x0000ffff58218d30)    ;; lazy deoptimization bailout 0
0xffff58218d1c   860  add x17, x17, x16
0xffff58218d20   864  br x17
0xffff58218d24   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58218d28   872  d63f03e0       constant
0xffff58218d2c   876  d503201f       constant
0xffff58218d30   880  58006000       constant
0xffff58218d34   884  0000ffff       constant


Safepoints (size = 21)
0xffff58218c3c   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff582189c8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218a5c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218a78  embedded object  (0x39c04519 <the hole>)
0xffff58218ac8  code target (STUB)  (0xffff582170c0)
0xffff58218b18  code target (STUB)  (0xffff58216760)
0xffff58218bb4  code target (STUB)  (0xffff582178a0)
0xffff58218c10  code target (STUB)  (0xffff58206820)
0xffff58218c34  code target (STUB)  (0xffff58206260)
0xffff58218c40  code target (STUB)  (0xffff582068e0)
0xffff58218c54  constant pool (size 84)
0xffff58218d18  runtime entry
0xffff58218d24  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff58218dc0     0  ldur x5, [x1, #15]
0xffff58218dc4     4  ldur x6, [x5, #-1]
0xffff58218dc8     8  ldr x16, pc+152 (addr 0x0000ffff58218e60)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58218dcc    12  cmp x6, x16
0xffff58218dd0    16  b.ne #+0xa0 (addr 0xffff58218e70)
0xffff58218dd4    20  ldur w6, [x1, #27]
0xffff58218dd8    24  tbnz w2, #0, #+0x54 (addr 0xffff58218e2c)
0xffff58218ddc    28  asr x8, x2, #32
0xffff58218de0    32  cmp w8, w6
0xffff58218de4    36  b.hs #+0x9c (addr 0xffff58218e80)
0xffff58218de8    40  mov x1, x0
0xffff58218dec    44  add x2, x5, #0xf (15)
0xffff58218df0    48  str x1, [x2, w8, sxtw #3]
0xffff58218df4    52  add x2, x2, w8, sxtw #3
0xffff58218df8    56  tbz w1, #0, #+0x30 (addr 0xffff58218e28)
0xffff58218dfc    60  and x1, x1, #0xfffffffffff00000
0xffff58218e00    64  ldr x1, [x1, #8]
0xffff58218e04    68  tbz w1, #1, #+0x24 (addr 0xffff58218e28)
0xffff58218e08    72  and x1, x5, #0xfffffffffff00000
0xffff58218e0c    76  ldr x1, [x1, #8]
0xffff58218e10    80  tbz w1, #2, #+0x18 (addr 0xffff58218e28)
0xffff58218e14    84  sub csp, jssp, #0x8 (8)
0xffff58218e18    88  str lr, [jssp, #-8]!
0xffff58218e1c    92  ldr x16, pc+76 (addr 0x0000ffff58218e68)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff58218e20    96  blr x16
0xffff58218e24   100  ldr lr, [jssp], #8
0xffff58218e28   104  ret
0xffff58218e2c   108  ldur x16, [x2, #-1]
0xffff58218e30   112  ldr x17, [x26, #120]
0xffff58218e34   116  cmp x16, x17
0xffff58218e38   120  b.ne #+0x58 (addr 0xffff58218e90)
0xffff58218e3c   124  ldur d29, [x2, #7]
0xffff58218e40   128  fcvtzs w8, d29
0xffff58218e44   132  scvtf d0, w8
0xffff58218e48   136  fcmp d29, d0
0xffff58218e4c   140  b.ne #+0x44 (addr 0xffff58218e90)
0xffff58218e50   144  b #-0x70 (addr 0xffff58218de0)
0xffff58218e54   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58218e58   152  d63f03e0       constant
0xffff58218e5c   156  d503201f       constant
0xffff58218e60   160  32b04259       constant
0xffff58218e64   164  00000000       constant
0xffff58218e68   168  58216760       constant
0xffff58218e6c   172  0000ffff       constant
0xffff58218e70   176  movz x16, #0x0
0xffff58218e74   180  sub csp, jssp, #0x10 (16)
0xffff58218e78   184  stp fp, lr, [jssp, #-16]!
0xffff58218e7c   188  bl #+0x24 (addr 0xffff58218ea0)
0xffff58218e80   192  movz x16, #0x8
0xffff58218e84   196  sub csp, jssp, #0x10 (16)
0xffff58218e88   200  stp fp, lr, [jssp, #-16]!
0xffff58218e8c   204  bl #+0x14 (addr 0xffff58218ea0)
0xffff58218e90   208  movz x16, #0x10
0xffff58218e94   212  sub csp, jssp, #0x10 (16)
0xffff58218e98   216  stp fp, lr, [jssp, #-16]!
0xffff58218e9c   220  bl #+0x4 (addr 0xffff58218ea0)
0xffff58218ea0   224  movz x17, #0xa00000000
0xffff58218ea4   228  sub csp, jssp, #0x10 (16)
0xffff58218ea8   232  stp x17, cp, [jssp, #-16]!
0xffff58218eac   236  add fp, jssp, #0x10 (16)
0xffff58218eb0   240  ldr x17, pc+24 (addr 0x0000ffff58218ec8)    ;; lazy deoptimization bailout 0
0xffff58218eb4   244  add x17, x17, x16
0xffff58218eb8   248  br x17
0xffff58218ebc   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58218ec0   256  d63f03e0       constant
0xffff58218ec4   260  d503201f       constant
0xffff58218ec8   264  58006000       constant
0xffff58218ecc   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff58218dc8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218e1c  code target (STUB)  (0xffff58216760)
0xffff58218e54  constant pool (size 28)
0xffff58218eb0  runtime entry
0xffff58218ebc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff58218dc0     0  ldur x5, [x1, #15]
0xffff58218dc4     4  ldur x6, [x5, #-1]
0xffff58218dc8     8  ldr x16, pc+152 (addr 0x0000ffff58218e60)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58218dcc    12  cmp x6, x16
0xffff58218dd0    16  b.ne #+0xa0 (addr 0xffff58218e70)
0xffff58218dd4    20  ldur w6, [x1, #27]
0xffff58218dd8    24  tbnz w2, #0, #+0x54 (addr 0xffff58218e2c)
0xffff58218ddc    28  asr x8, x2, #32
0xffff58218de0    32  cmp w8, w6
0xffff58218de4    36  b.hs #+0x9c (addr 0xffff58218e80)
0xffff58218de8    40  mov x1, x0
0xffff58218dec    44  add x2, x5, #0xf (15)
0xffff58218df0    48  str x1, [x2, w8, sxtw #3]
0xffff58218df4    52  add x2, x2, w8, sxtw #3
0xffff58218df8    56  tbz w1, #0, #+0x30 (addr 0xffff58218e28)
0xffff58218dfc    60  and x1, x1, #0xfffffffffff00000
0xffff58218e00    64  ldr x1, [x1, #8]
0xffff58218e04    68  tbz w1, #1, #+0x24 (addr 0xffff58218e28)
0xffff58218e08    72  and x1, x5, #0xfffffffffff00000
0xffff58218e0c    76  ldr x1, [x1, #8]
0xffff58218e10    80  tbz w1, #2, #+0x18 (addr 0xffff58218e28)
0xffff58218e14    84  sub csp, jssp, #0x8 (8)
0xffff58218e18    88  str lr, [jssp, #-8]!
0xffff58218e1c    92  ldr x16, pc+76 (addr 0x0000ffff58218e68)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff58218e20    96  blr x16
0xffff58218e24   100  ldr lr, [jssp], #8
0xffff58218e28   104  ret
0xffff58218e2c   108  ldur x16, [x2, #-1]
0xffff58218e30   112  ldr x17, [x26, #120]
0xffff58218e34   116  cmp x16, x17
0xffff58218e38   120  b.ne #+0x58 (addr 0xffff58218e90)
0xffff58218e3c   124  ldur d29, [x2, #7]
0xffff58218e40   128  fcvtzs w8, d29
0xffff58218e44   132  scvtf d0, w8
0xffff58218e48   136  fcmp d29, d0
0xffff58218e4c   140  b.ne #+0x44 (addr 0xffff58218e90)
0xffff58218e50   144  b #-0x70 (addr 0xffff58218de0)
0xffff58218e54   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58218e58   152  d63f03e0       constant
0xffff58218e5c   156  d503201f       constant
0xffff58218e60   160  32b04259       constant
0xffff58218e64   164  00000000       constant
0xffff58218e68   168  58216760       constant
0xffff58218e6c   172  0000ffff       constant
0xffff58218e70   176  movz x16, #0x0
0xffff58218e74   180  sub csp, jssp, #0x10 (16)
0xffff58218e78   184  stp fp, lr, [jssp, #-16]!
0xffff58218e7c   188  bl #+0x24 (addr 0xffff58218ea0)
0xffff58218e80   192  movz x16, #0x8
0xffff58218e84   196  sub csp, jssp, #0x10 (16)
0xffff58218e88   200  stp fp, lr, [jssp, #-16]!
0xffff58218e8c   204  bl #+0x14 (addr 0xffff58218ea0)
0xffff58218e90   208  movz x16, #0x10
0xffff58218e94   212  sub csp, jssp, #0x10 (16)
0xffff58218e98   216  stp fp, lr, [jssp, #-16]!
0xffff58218e9c   220  bl #+0x4 (addr 0xffff58218ea0)
0xffff58218ea0   224  movz x17, #0xa00000000
0xffff58218ea4   228  sub csp, jssp, #0x10 (16)
0xffff58218ea8   232  stp x17, cp, [jssp, #-16]!
0xffff58218eac   236  add fp, jssp, #0x10 (16)
0xffff58218eb0   240  ldr x17, pc+24 (addr 0x0000ffff58218ec8)    ;; lazy deoptimization bailout 0
0xffff58218eb4   244  add x17, x17, x16
0xffff58218eb8   248  br x17
0xffff58218ebc   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58218ec0   256  d63f03e0       constant
0xffff58218ec4   260  d503201f       constant
0xffff58218ec8   264  58006000       constant
0xffff58218ecc   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff58218dc8  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218e1c  code target (STUB)  (0xffff58216760)
0xffff58218e54  constant pool (size 28)
0xffff58218eb0  runtime entry
0xffff58218ebc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff58218f40     0  ldur x5, [x1, #15]
0xffff58218f44     4  ldur x6, [x5, #-1]
0xffff58218f48     8  ldr x16, pc+664 (addr 0x0000ffff582191e0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58218f4c    12  cmp x6, x16
0xffff58218f50    16  b.ne #+0x2d8 (addr 0xffff58219228)
0xffff58218f54    20  ldur w6, [x1, #27]
0xffff58218f58    24  tbnz w2, #0, #+0x150 (addr 0xffff582190a8)
0xffff58218f5c    28  asr x8, x2, #32
0xffff58218f60    32  cmp w6, w8
0xffff58218f64    36  b.le #+0x10 (addr 0xffff58218f74)
0xffff58218f68    40  cmp w8, w6
0xffff58218f6c    44  b.hs #+0x2cc (addr 0xffff58219238)
0xffff58218f70    48  b #+0xf4 (addr 0xffff58219064)
0xffff58218f74    52  ldur w7, [x5, #11]
0xffff58218f78    56  cmp w7, w8
0xffff58218f7c    60  b.gt #+0xdc (addr 0xffff58219058)
0xffff58218f80    64  adds w7, w7, #0x400 (1024)
0xffff58218f84    68  b.vs #+0x2c4 (addr 0xffff58219248)
0xffff58218f88    72  cmp w8, w7
0xffff58218f8c    76  b.hs #+0x2cc (addr 0xffff58219258)
0xffff58218f90    80  tbnz w2, #0, #+0x160 (addr 0xffff582190f0)
0xffff58218f94    84  asr x9, x2, #32
0xffff58218f98    88  add w7, w8, w9, lsr #1
0xffff58218f9c    92  add w7, w7, #0x10 (16)
0xffff58218fa0    96  movz w16, #0x95ff
0xffff58218fa4   100  cmp w7, w16, lsl #1
0xffff58218fa8   104  b.hs #+0x2c0 (addr 0xffff58219268)
0xffff58218fac   108  lsl x2, x7, #32
0xffff58218fb0   112  lsl w3, w7, #3
0xffff58218fb4   116  add w3, w3, #0x10 (16)
0xffff58218fb8   120  sxtw x3, w3
0xffff58218fbc   124  movz x4, #0x92c0
0xffff58218fc0   128  movk x4, #0x16e7, lsl #16
0xffff58218fc4   132  ldp x9, x16, [x4]
0xffff58218fc8   136  adds x7, x9, x3
0xffff58218fcc   140  ccmp x7, x16, #nzCv, lo
0xffff58218fd0   144  b.hi #+0x1a0 (addr 0xffff58219170)
0xffff58218fd4   148  str x7, [x4]
0xffff58218fd8   152  orr x9, x9, #0x1
0xffff58218fdc   156  ldr x3, pc+524 (addr 0x0000ffff582191e8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58218fe0   160  stur x3, [x9, #-1]
0xffff58218fe4   164  stur x2, [x9, #7]
0xffff58218fe8   168  ldur w2, [x9, #11]
0xffff58218fec   172  cmp w6, w2
0xffff58218ff0   176  b.ge #+0x18 (addr 0xffff58219008)
0xffff58218ff4   180  sub w2, w2, #0x1 (1)
0xffff58218ff8   184  ldr x3, pc+504 (addr 0x0000ffff582191f0)    ;; object: 0x39c04519 <the hole>
0xffff58218ffc   188  add x4, x9, #0xf (15)
0xffff58219000   192  str x3, [x4, w2, sxtw #3]
0xffff58219004   196  b #-0x18 (addr 0xffff58218fec)
0xffff58219008   200  cmp w6, #0x0 (0)
0xffff5821900c   204  b.le #+0x1c (addr 0xffff58219028)
0xffff58219010   208  sub w6, w6, #0x1 (1)
0xffff58219014   212  add x2, x5, #0xf (15)
0xffff58219018   216  ldr x3, [x2, w6, sxtw #3]
0xffff5821901c   220  add x2, x9, #0xf (15)
0xffff58219020   224  str x3, [x2, w6, sxtw #3]
0xffff58219024   228  b #-0x1c (addr 0xffff58219008)
0xffff58219028   232  mov x2, x9
0xffff5821902c   236  stur x2, [x1, #15]
0xffff58219030   240  add x3, x1, #0xf (15)
0xffff58219034   244  and x2, x1, #0xfffffffffff00000
0xffff58219038   248  ldr x2, [x2, #8]
0xffff5821903c   252  tbz w2, #2, #+0x18 (addr 0xffff58219054)
0xffff58219040   256  sub csp, jssp, #0x8 (8)
0xffff58219044   260  str lr, [jssp, #-8]!
0xffff58219048   264  ldr x16, pc+432 (addr 0x0000ffff582191f8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5821904c   268  blr x16
0xffff58219050   272  ldr lr, [jssp], #8
0xffff58219054   276  mov x5, x9
0xffff58219058   280  add w2, w8, #0x1 (1)
0xffff5821905c   284  lsl x2, x2, #32
0xffff58219060   288  stur x2, [x1, #23]
0xffff58219064   292  mov x1, x0
0xffff58219068   296  add x2, x5, #0xf (15)
0xffff5821906c   300  str x1, [x2, w8, sxtw #3]
0xffff58219070   304  add x2, x2, w8, sxtw #3
0xffff58219074   308  tbz w1, #0, #+0x30 (addr 0xffff582190a4)
0xffff58219078   312  and x1, x1, #0xfffffffffff00000
0xffff5821907c   316  ldr x1, [x1, #8]
0xffff58219080   320  tbz w1, #1, #+0x24 (addr 0xffff582190a4)
0xffff58219084   324  and x1, x5, #0xfffffffffff00000
0xffff58219088   328  ldr x1, [x1, #8]
0xffff5821908c   332  tbz w1, #2, #+0x18 (addr 0xffff582190a4)
0xffff58219090   336  sub csp, jssp, #0x8 (8)
0xffff58219094   340  str lr, [jssp, #-8]!
0xffff58219098   344  ldr x16, pc+360 (addr 0x0000ffff58219200)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff5821909c   348  blr x16
0xffff582190a0   352  ldr lr, [jssp], #8
0xffff582190a4   356  ret
0xffff582190a8   360  sub csp, jssp, #0x10 (16)
0xffff582190ac   364  stp fp, lr, [jssp, #-16]!
0xffff582190b0   368  movz fp, #0xa00000000
0xffff582190b4   372  sub csp, jssp, #0x8 (8)
0xffff582190b8   376  str fp, [jssp, #-8]!
0xffff582190bc   380  add fp, jssp, #0x8 (8)
0xffff582190c0   384  ldur x16, [x2, #-1]
0xffff582190c4   388  ldr x17, [x26, #120]
0xffff582190c8   392  cmp x16, x17
0xffff582190cc   396  b.ne #+0x1ac (addr 0xffff58219278)
0xffff582190d0   400  ldur d29, [x2, #7]
0xffff582190d4   404  fcvtzs w8, d29
0xffff582190d8   408  scvtf d0, w8
0xffff582190dc   412  fcmp d29, d0
0xffff582190e0   416  b.ne #+0x198 (addr 0xffff58219278)
0xffff582190e4   420  ldr lr, [jssp, #16]
0xffff582190e8   424  ldp xzr, fp, [jssp], #24
0xffff582190ec   428  b #-0x18c (addr 0xffff58218f60)
0xffff582190f0   432  sub csp, jssp, #0x10 (16)
0xffff582190f4   436  stp fp, lr, [jssp, #-16]!
0xffff582190f8   440  movz fp, #0xa00000000
0xffff582190fc   444  sub csp, jssp, #0x8 (8)
0xffff58219100   448  str fp, [jssp, #-8]!
0xffff58219104   452  add fp, jssp, #0x8 (8)
0xffff58219108   456  ldur x16, [x2, #-1]
0xffff5821910c   460  ldr x17, [x26, #120]
0xffff58219110   464  cmp x16, x17
0xffff58219114   468  b.ne #+0x30 (addr 0xffff58219144)
0xffff58219118   472  ldur d30, [x2, #7]
0xffff5821911c   476  fcvtzs x9, d30
0xffff58219120   480  cmp x9, #0x1 (1)
0xffff58219124   484  ccmn x9, #1, #nzcV, vc
0xffff58219128   488  b.vc #+0x18 (addr 0xffff58219140)
0xffff5821912c   492  sub csp, jssp, #0x8 (8)
0xffff58219130   496  str lr, [jssp, #-8]!
0xffff58219134   500  ldr x16, pc+212 (addr 0x0000ffff58219208)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff58219138   504  blr x16
0xffff5821913c   508  ldr lr, [jssp], #8
0xffff58219140   512  b #+0x24 (addr 0xffff58219164)
0xffff58219144   516  ldp x9, x7, [x26, #64]
0xffff58219148   520  cmp x2, x9
0xffff5821914c   524  cset x9, eq
0xffff58219150   528  ccmp x2, x7, #nZcv, ne
0xffff58219154   532  b.eq #+0x10 (addr 0xffff58219164)
0xffff58219158   536  ldr x16, [x26, #40]
0xffff5821915c   540  cmp x2, x16
0xffff58219160   544  b.ne #+0x120 (addr 0xffff58219280)
0xffff58219164   548  ldr lr, [jssp, #16]
0xffff58219168   552  ldp xzr, fp, [jssp], #24
0xffff5821916c   556  b #-0x1d4 (addr 0xffff58218f98)
0xffff58219170   560  sub csp, jssp, #0x10 (16)
0xffff58219174   564  stp fp, lr, [jssp, #-16]!
0xffff58219178   568  movz fp, #0xa00000000
0xffff5821917c   572  sub csp, jssp, #0x8 (8)
0xffff58219180   576  str fp, [jssp, #-8]!
0xffff58219184   580  add fp, jssp, #0x8 (8)
0xffff58219188   584  movz x9, #0x0
0xffff5821918c   588  mov x16, lr
0xffff58219190   592  ldr x17, pc+128 (addr 0x0000ffff58219210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58219194   596  blr x17
0xffff58219198   600  lsl x0, x3, #32
0xffff5821919c   604  movz x10, #0x0
0xffff582191a0   608  sub csp, jssp, #0x10 (16)
0xffff582191a4   612  stp x10, x0, [jssp, #-16]!
0xffff582191a8   616  movz x0, #0x2
0xffff582191ac   620  movz x1, #0x5b88
0xffff582191b0   624  movk x1, #0xe2, lsl #16
0xffff582191b4   628  ldr x16, pc+100 (addr 0x0000ffff58219218)    ;; code: STUB, CEntryStub, minor: 5
0xffff582191b8   632  blr x16
0xffff582191bc   636  str x0, [jssp, #72]
0xffff582191c0   640  ldr x16, pc+96 (addr 0x0000ffff58219220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582191c4   644  blr x16
0xffff582191c8   648  ldr lr, [jssp, #16]
0xffff582191cc   652  ldp xzr, fp, [jssp], #24
0xffff582191d0   656  b #-0x1f4 (addr 0xffff58218fdc)
0xffff582191d4   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff582191d8   664  d63f03e0       constant
0xffff582191dc   668  d503201f       constant
0xffff582191e0   672  32b04259       constant
0xffff582191e4   676  00000000       constant
0xffff582191e8   680  32b04259       constant
0xffff582191ec   684  00000000       constant
0xffff582191f0   688  39c04519       constant
0xffff582191f4   692  00000000       constant
0xffff582191f8   696  582170c0       constant
0xffff582191fc   700  0000ffff       constant
0xffff58219200   704  58216760       constant
0xffff58219204   708  0000ffff       constant
0xffff58219208   712  582178a0       constant
0xffff5821920c   716  0000ffff       constant
0xffff58219210   720  58206820       constant
0xffff58219214   724  0000ffff       constant
0xffff58219218   728  58206260       constant
0xffff5821921c   732  0000ffff       constant
0xffff58219220   736  582068e0       constant
0xffff58219224   740  0000ffff       constant
0xffff58219228   744  movz x16, #0x0
0xffff5821922c   748  sub csp, jssp, #0x10 (16)
0xffff58219230   752  stp fp, lr, [jssp, #-16]!
0xffff58219234   756  bl #+0x54 (addr 0xffff58219288)
0xffff58219238   760  movz x16, #0x8
0xffff5821923c   764  sub csp, jssp, #0x10 (16)
0xffff58219240   768  stp fp, lr, [jssp, #-16]!
0xffff58219244   772  bl #+0x44 (addr 0xffff58219288)
0xffff58219248   776  movz x16, #0x10
0xffff5821924c   780  sub csp, jssp, #0x10 (16)
0xffff58219250   784  stp fp, lr, [jssp, #-16]!
0xffff58219254   788  bl #+0x34 (addr 0xffff58219288)
0xffff58219258   792  movz x16, #0x18
0xffff5821925c   796  sub csp, jssp, #0x10 (16)
0xffff58219260   800  stp fp, lr, [jssp, #-16]!
0xffff58219264   804  bl #+0x24 (addr 0xffff58219288)
0xffff58219268   808  movz x16, #0x20
0xffff5821926c   812  sub csp, jssp, #0x10 (16)
0xffff58219270   816  stp fp, lr, [jssp, #-16]!
0xffff58219274   820  bl #+0x14 (addr 0xffff58219288)
0xffff58219278   824  movz x16, #0x28
0xffff5821927c   828  bl #+0x1c (addr 0xffff58219298)
0xffff58219280   832  movz x16, #0x30
0xffff58219284   836  bl #+0x14 (addr 0xffff58219298)
0xffff58219288   840  movz x17, #0xa00000000
0xffff5821928c   844  sub csp, jssp, #0x10 (16)
0xffff58219290   848  stp x17, cp, [jssp, #-16]!
0xffff58219294   852  add fp, jssp, #0x10 (16)
0xffff58219298   856  ldr x17, pc+24 (addr 0x0000ffff582192b0)    ;; lazy deoptimization bailout 0
0xffff5821929c   860  add x17, x17, x16
0xffff582192a0   864  br x17
0xffff582192a4   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582192a8   872  d63f03e0       constant
0xffff582192ac   876  d503201f       constant
0xffff582192b0   880  58006000       constant
0xffff582192b4   884  0000ffff       constant


Safepoints (size = 21)
0xffff582191bc   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff58218f48  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218fdc  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218ff8  embedded object  (0x39c04519 <the hole>)
0xffff58219048  code target (STUB)  (0xffff582170c0)
0xffff58219098  code target (STUB)  (0xffff58216760)
0xffff58219134  code target (STUB)  (0xffff582178a0)
0xffff58219190  code target (STUB)  (0xffff58206820)
0xffff582191b4  code target (STUB)  (0xffff58206260)
0xffff582191c0  code target (STUB)  (0xffff582068e0)
0xffff582191d4  constant pool (size 84)
0xffff58219298  runtime entry
0xffff582192a4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff58218f40     0  ldur x5, [x1, #15]
0xffff58218f44     4  ldur x6, [x5, #-1]
0xffff58218f48     8  ldr x16, pc+664 (addr 0x0000ffff582191e0)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58218f4c    12  cmp x6, x16
0xffff58218f50    16  b.ne #+0x2d8 (addr 0xffff58219228)
0xffff58218f54    20  ldur w6, [x1, #27]
0xffff58218f58    24  tbnz w2, #0, #+0x150 (addr 0xffff582190a8)
0xffff58218f5c    28  asr x8, x2, #32
0xffff58218f60    32  cmp w6, w8
0xffff58218f64    36  b.le #+0x10 (addr 0xffff58218f74)
0xffff58218f68    40  cmp w8, w6
0xffff58218f6c    44  b.hs #+0x2cc (addr 0xffff58219238)
0xffff58218f70    48  b #+0xf4 (addr 0xffff58219064)
0xffff58218f74    52  ldur w7, [x5, #11]
0xffff58218f78    56  cmp w7, w8
0xffff58218f7c    60  b.gt #+0xdc (addr 0xffff58219058)
0xffff58218f80    64  adds w7, w7, #0x400 (1024)
0xffff58218f84    68  b.vs #+0x2c4 (addr 0xffff58219248)
0xffff58218f88    72  cmp w8, w7
0xffff58218f8c    76  b.hs #+0x2cc (addr 0xffff58219258)
0xffff58218f90    80  tbnz w2, #0, #+0x160 (addr 0xffff582190f0)
0xffff58218f94    84  asr x9, x2, #32
0xffff58218f98    88  add w7, w8, w9, lsr #1
0xffff58218f9c    92  add w7, w7, #0x10 (16)
0xffff58218fa0    96  movz w16, #0x95ff
0xffff58218fa4   100  cmp w7, w16, lsl #1
0xffff58218fa8   104  b.hs #+0x2c0 (addr 0xffff58219268)
0xffff58218fac   108  lsl x2, x7, #32
0xffff58218fb0   112  lsl w3, w7, #3
0xffff58218fb4   116  add w3, w3, #0x10 (16)
0xffff58218fb8   120  sxtw x3, w3
0xffff58218fbc   124  movz x4, #0x92c0
0xffff58218fc0   128  movk x4, #0x16e7, lsl #16
0xffff58218fc4   132  ldp x9, x16, [x4]
0xffff58218fc8   136  adds x7, x9, x3
0xffff58218fcc   140  ccmp x7, x16, #nzCv, lo
0xffff58218fd0   144  b.hi #+0x1a0 (addr 0xffff58219170)
0xffff58218fd4   148  str x7, [x4]
0xffff58218fd8   152  orr x9, x9, #0x1
0xffff58218fdc   156  ldr x3, pc+524 (addr 0x0000ffff582191e8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58218fe0   160  stur x3, [x9, #-1]
0xffff58218fe4   164  stur x2, [x9, #7]
0xffff58218fe8   168  ldur w2, [x9, #11]
0xffff58218fec   172  cmp w6, w2
0xffff58218ff0   176  b.ge #+0x18 (addr 0xffff58219008)
0xffff58218ff4   180  sub w2, w2, #0x1 (1)
0xffff58218ff8   184  ldr x3, pc+504 (addr 0x0000ffff582191f0)    ;; object: 0x39c04519 <the hole>
0xffff58218ffc   188  add x4, x9, #0xf (15)
0xffff58219000   192  str x3, [x4, w2, sxtw #3]
0xffff58219004   196  b #-0x18 (addr 0xffff58218fec)
0xffff58219008   200  cmp w6, #0x0 (0)
0xffff5821900c   204  b.le #+0x1c (addr 0xffff58219028)
0xffff58219010   208  sub w6, w6, #0x1 (1)
0xffff58219014   212  add x2, x5, #0xf (15)
0xffff58219018   216  ldr x3, [x2, w6, sxtw #3]
0xffff5821901c   220  add x2, x9, #0xf (15)
0xffff58219020   224  str x3, [x2, w6, sxtw #3]
0xffff58219024   228  b #-0x1c (addr 0xffff58219008)
0xffff58219028   232  mov x2, x9
0xffff5821902c   236  stur x2, [x1, #15]
0xffff58219030   240  add x3, x1, #0xf (15)
0xffff58219034   244  and x2, x1, #0xfffffffffff00000
0xffff58219038   248  ldr x2, [x2, #8]
0xffff5821903c   252  tbz w2, #2, #+0x18 (addr 0xffff58219054)
0xffff58219040   256  sub csp, jssp, #0x8 (8)
0xffff58219044   260  str lr, [jssp, #-8]!
0xffff58219048   264  ldr x16, pc+432 (addr 0x0000ffff582191f8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5821904c   268  blr x16
0xffff58219050   272  ldr lr, [jssp], #8
0xffff58219054   276  mov x5, x9
0xffff58219058   280  add w2, w8, #0x1 (1)
0xffff5821905c   284  lsl x2, x2, #32
0xffff58219060   288  stur x2, [x1, #23]
0xffff58219064   292  mov x1, x0
0xffff58219068   296  add x2, x5, #0xf (15)
0xffff5821906c   300  str x1, [x2, w8, sxtw #3]
0xffff58219070   304  add x2, x2, w8, sxtw #3
0xffff58219074   308  tbz w1, #0, #+0x30 (addr 0xffff582190a4)
0xffff58219078   312  and x1, x1, #0xfffffffffff00000
0xffff5821907c   316  ldr x1, [x1, #8]
0xffff58219080   320  tbz w1, #1, #+0x24 (addr 0xffff582190a4)
0xffff58219084   324  and x1, x5, #0xfffffffffff00000
0xffff58219088   328  ldr x1, [x1, #8]
0xffff5821908c   332  tbz w1, #2, #+0x18 (addr 0xffff582190a4)
0xffff58219090   336  sub csp, jssp, #0x8 (8)
0xffff58219094   340  str lr, [jssp, #-8]!
0xffff58219098   344  ldr x16, pc+360 (addr 0x0000ffff58219200)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff5821909c   348  blr x16
0xffff582190a0   352  ldr lr, [jssp], #8
0xffff582190a4   356  ret
0xffff582190a8   360  sub csp, jssp, #0x10 (16)
0xffff582190ac   364  stp fp, lr, [jssp, #-16]!
0xffff582190b0   368  movz fp, #0xa00000000
0xffff582190b4   372  sub csp, jssp, #0x8 (8)
0xffff582190b8   376  str fp, [jssp, #-8]!
0xffff582190bc   380  add fp, jssp, #0x8 (8)
0xffff582190c0   384  ldur x16, [x2, #-1]
0xffff582190c4   388  ldr x17, [x26, #120]
0xffff582190c8   392  cmp x16, x17
0xffff582190cc   396  b.ne #+0x1ac (addr 0xffff58219278)
0xffff582190d0   400  ldur d29, [x2, #7]
0xffff582190d4   404  fcvtzs w8, d29
0xffff582190d8   408  scvtf d0, w8
0xffff582190dc   412  fcmp d29, d0
0xffff582190e0   416  b.ne #+0x198 (addr 0xffff58219278)
0xffff582190e4   420  ldr lr, [jssp, #16]
0xffff582190e8   424  ldp xzr, fp, [jssp], #24
0xffff582190ec   428  b #-0x18c (addr 0xffff58218f60)
0xffff582190f0   432  sub csp, jssp, #0x10 (16)
0xffff582190f4   436  stp fp, lr, [jssp, #-16]!
0xffff582190f8   440  movz fp, #0xa00000000
0xffff582190fc   444  sub csp, jssp, #0x8 (8)
0xffff58219100   448  str fp, [jssp, #-8]!
0xffff58219104   452  add fp, jssp, #0x8 (8)
0xffff58219108   456  ldur x16, [x2, #-1]
0xffff5821910c   460  ldr x17, [x26, #120]
0xffff58219110   464  cmp x16, x17
0xffff58219114   468  b.ne #+0x30 (addr 0xffff58219144)
0xffff58219118   472  ldur d30, [x2, #7]
0xffff5821911c   476  fcvtzs x9, d30
0xffff58219120   480  cmp x9, #0x1 (1)
0xffff58219124   484  ccmn x9, #1, #nzcV, vc
0xffff58219128   488  b.vc #+0x18 (addr 0xffff58219140)
0xffff5821912c   492  sub csp, jssp, #0x8 (8)
0xffff58219130   496  str lr, [jssp, #-8]!
0xffff58219134   500  ldr x16, pc+212 (addr 0x0000ffff58219208)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff58219138   504  blr x16
0xffff5821913c   508  ldr lr, [jssp], #8
0xffff58219140   512  b #+0x24 (addr 0xffff58219164)
0xffff58219144   516  ldp x9, x7, [x26, #64]
0xffff58219148   520  cmp x2, x9
0xffff5821914c   524  cset x9, eq
0xffff58219150   528  ccmp x2, x7, #nZcv, ne
0xffff58219154   532  b.eq #+0x10 (addr 0xffff58219164)
0xffff58219158   536  ldr x16, [x26, #40]
0xffff5821915c   540  cmp x2, x16
0xffff58219160   544  b.ne #+0x120 (addr 0xffff58219280)
0xffff58219164   548  ldr lr, [jssp, #16]
0xffff58219168   552  ldp xzr, fp, [jssp], #24
0xffff5821916c   556  b #-0x1d4 (addr 0xffff58218f98)
0xffff58219170   560  sub csp, jssp, #0x10 (16)
0xffff58219174   564  stp fp, lr, [jssp, #-16]!
0xffff58219178   568  movz fp, #0xa00000000
0xffff5821917c   572  sub csp, jssp, #0x8 (8)
0xffff58219180   576  str fp, [jssp, #-8]!
0xffff58219184   580  add fp, jssp, #0x8 (8)
0xffff58219188   584  movz x9, #0x0
0xffff5821918c   588  mov x16, lr
0xffff58219190   592  ldr x17, pc+128 (addr 0x0000ffff58219210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58219194   596  blr x17
0xffff58219198   600  lsl x0, x3, #32
0xffff5821919c   604  movz x10, #0x0
0xffff582191a0   608  sub csp, jssp, #0x10 (16)
0xffff582191a4   612  stp x10, x0, [jssp, #-16]!
0xffff582191a8   616  movz x0, #0x2
0xffff582191ac   620  movz x1, #0x5b88
0xffff582191b0   624  movk x1, #0xe2, lsl #16
0xffff582191b4   628  ldr x16, pc+100 (addr 0x0000ffff58219218)    ;; code: STUB, CEntryStub, minor: 5
0xffff582191b8   632  blr x16
0xffff582191bc   636  str x0, [jssp, #72]
0xffff582191c0   640  ldr x16, pc+96 (addr 0x0000ffff58219220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582191c4   644  blr x16
0xffff582191c8   648  ldr lr, [jssp, #16]
0xffff582191cc   652  ldp xzr, fp, [jssp], #24
0xffff582191d0   656  b #-0x1f4 (addr 0xffff58218fdc)
0xffff582191d4   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff582191d8   664  d63f03e0       constant
0xffff582191dc   668  d503201f       constant
0xffff582191e0   672  32b04259       constant
0xffff582191e4   676  00000000       constant
0xffff582191e8   680  32b04259       constant
0xffff582191ec   684  00000000       constant
0xffff582191f0   688  39c04519       constant
0xffff582191f4   692  00000000       constant
0xffff582191f8   696  582170c0       constant
0xffff582191fc   700  0000ffff       constant
0xffff58219200   704  58216760       constant
0xffff58219204   708  0000ffff       constant
0xffff58219208   712  582178a0       constant
0xffff5821920c   716  0000ffff       constant
0xffff58219210   720  58206820       constant
0xffff58219214   724  0000ffff       constant
0xffff58219218   728  58206260       constant
0xffff5821921c   732  0000ffff       constant
0xffff58219220   736  582068e0       constant
0xffff58219224   740  0000ffff       constant
0xffff58219228   744  movz x16, #0x0
0xffff5821922c   748  sub csp, jssp, #0x10 (16)
0xffff58219230   752  stp fp, lr, [jssp, #-16]!
0xffff58219234   756  bl #+0x54 (addr 0xffff58219288)
0xffff58219238   760  movz x16, #0x8
0xffff5821923c   764  sub csp, jssp, #0x10 (16)
0xffff58219240   768  stp fp, lr, [jssp, #-16]!
0xffff58219244   772  bl #+0x44 (addr 0xffff58219288)
0xffff58219248   776  movz x16, #0x10
0xffff5821924c   780  sub csp, jssp, #0x10 (16)
0xffff58219250   784  stp fp, lr, [jssp, #-16]!
0xffff58219254   788  bl #+0x34 (addr 0xffff58219288)
0xffff58219258   792  movz x16, #0x18
0xffff5821925c   796  sub csp, jssp, #0x10 (16)
0xffff58219260   800  stp fp, lr, [jssp, #-16]!
0xffff58219264   804  bl #+0x24 (addr 0xffff58219288)
0xffff58219268   808  movz x16, #0x20
0xffff5821926c   812  sub csp, jssp, #0x10 (16)
0xffff58219270   816  stp fp, lr, [jssp, #-16]!
0xffff58219274   820  bl #+0x14 (addr 0xffff58219288)
0xffff58219278   824  movz x16, #0x28
0xffff5821927c   828  bl #+0x1c (addr 0xffff58219298)
0xffff58219280   832  movz x16, #0x30
0xffff58219284   836  bl #+0x14 (addr 0xffff58219298)
0xffff58219288   840  movz x17, #0xa00000000
0xffff5821928c   844  sub csp, jssp, #0x10 (16)
0xffff58219290   848  stp x17, cp, [jssp, #-16]!
0xffff58219294   852  add fp, jssp, #0x10 (16)
0xffff58219298   856  ldr x17, pc+24 (addr 0x0000ffff582192b0)    ;; lazy deoptimization bailout 0
0xffff5821929c   860  add x17, x17, x16
0xffff582192a0   864  br x17
0xffff582192a4   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582192a8   872  d63f03e0       constant
0xffff582192ac   876  d503201f       constant
0xffff582192b0   880  58006000       constant
0xffff582192b4   884  0000ffff       constant


Safepoints (size = 21)
0xffff582191bc   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff58218f48  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218fdc  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58218ff8  embedded object  (0x39c04519 <the hole>)
0xffff58219048  code target (STUB)  (0xffff582170c0)
0xffff58219098  code target (STUB)  (0xffff58216760)
0xffff58219134  code target (STUB)  (0xffff582178a0)
0xffff58219190  code target (STUB)  (0xffff58206820)
0xffff582191b4  code target (STUB)  (0xffff58206260)
0xffff582191c0  code target (STUB)  (0xffff582068e0)
0xffff582191d4  constant pool (size 84)
0xffff58219298  runtime entry
0xffff582192a4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff58219340     0  ldur x5, [x1, #15]
0xffff58219344     4  ldur w6, [x1, #27]
0xffff58219348     8  tbnz w2, #0, #+0x40 (addr 0xffff58219388)
0xffff5821934c    12  asr x8, x2, #32
0xffff58219350    16  cmp w8, w6
0xffff58219354    20  b.hs #+0x5c (addr 0xffff582193b0)
0xffff58219358    24  tbz w0, #0, #+0x1c (addr 0xffff58219374)
0xffff5821935c    28  ldur x16, [x0, #-1]
0xffff58219360    32  ldr x17, [x26, #120]
0xffff58219364    36  cmp x16, x17
0xffff58219368    40  b.ne #+0x58 (addr 0xffff582193c0)
0xffff5821936c    44  ldur d0, [x0, #7]
0xffff58219370    48  b #+0x8 (addr 0xffff58219378)
0xffff58219374    52  scvtf d0, x0, #32
0xffff58219378    56  add x1, x5, #0xf (15)
0xffff5821937c    60  fsub d29, d0, d15
0xffff58219380    64  str d29, [x1, w8, sxtw #3]
0xffff58219384    68  ret
0xffff58219388    72  ldur x16, [x2, #-1]
0xffff5821938c    76  ldr x17, [x26, #120]
0xffff58219390    80  cmp x16, x17
0xffff58219394    84  b.ne #+0x3c (addr 0xffff582193d0)
0xffff58219398    88  ldur d29, [x2, #7]
0xffff5821939c    92  fcvtzs w8, d29
0xffff582193a0    96  scvtf d0, w8
0xffff582193a4   100  fcmp d29, d0
0xffff582193a8   104  b.ne #+0x28 (addr 0xffff582193d0)
0xffff582193ac   108  b #-0x5c (addr 0xffff58219350)
0xffff582193b0   112  movz x16, #0x0
0xffff582193b4   116  sub csp, jssp, #0x10 (16)
0xffff582193b8   120  stp fp, lr, [jssp, #-16]!
0xffff582193bc   124  bl #+0x24 (addr 0xffff582193e0)
0xffff582193c0   128  movz x16, #0x8
0xffff582193c4   132  sub csp, jssp, #0x10 (16)
0xffff582193c8   136  stp fp, lr, [jssp, #-16]!
0xffff582193cc   140  bl #+0x14 (addr 0xffff582193e0)
0xffff582193d0   144  movz x16, #0x10
0xffff582193d4   148  sub csp, jssp, #0x10 (16)
0xffff582193d8   152  stp fp, lr, [jssp, #-16]!
0xffff582193dc   156  bl #+0x4 (addr 0xffff582193e0)
0xffff582193e0   160  movz x17, #0xa00000000
0xffff582193e4   164  sub csp, jssp, #0x10 (16)
0xffff582193e8   168  stp x17, cp, [jssp, #-16]!
0xffff582193ec   172  add fp, jssp, #0x10 (16)
0xffff582193f0   176  ldr x17, pc+24 (addr 0x0000ffff58219408)    ;; lazy deoptimization bailout 0
0xffff582193f4   180  add x17, x17, x16
0xffff582193f8   184  br x17
0xffff582193fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58219400   192  d63f03e0       constant
0xffff58219404   196  d503201f       constant
0xffff58219408   200  58006000       constant
0xffff5821940c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582193f0  runtime entry
0xffff582193fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff58219340     0  ldur x5, [x1, #15]
0xffff58219344     4  ldur w6, [x1, #27]
0xffff58219348     8  tbnz w2, #0, #+0x40 (addr 0xffff58219388)
0xffff5821934c    12  asr x8, x2, #32
0xffff58219350    16  cmp w8, w6
0xffff58219354    20  b.hs #+0x5c (addr 0xffff582193b0)
0xffff58219358    24  tbz w0, #0, #+0x1c (addr 0xffff58219374)
0xffff5821935c    28  ldur x16, [x0, #-1]
0xffff58219360    32  ldr x17, [x26, #120]
0xffff58219364    36  cmp x16, x17
0xffff58219368    40  b.ne #+0x58 (addr 0xffff582193c0)
0xffff5821936c    44  ldur d0, [x0, #7]
0xffff58219370    48  b #+0x8 (addr 0xffff58219378)
0xffff58219374    52  scvtf d0, x0, #32
0xffff58219378    56  add x1, x5, #0xf (15)
0xffff5821937c    60  fsub d29, d0, d15
0xffff58219380    64  str d29, [x1, w8, sxtw #3]
0xffff58219384    68  ret
0xffff58219388    72  ldur x16, [x2, #-1]
0xffff5821938c    76  ldr x17, [x26, #120]
0xffff58219390    80  cmp x16, x17
0xffff58219394    84  b.ne #+0x3c (addr 0xffff582193d0)
0xffff58219398    88  ldur d29, [x2, #7]
0xffff5821939c    92  fcvtzs w8, d29
0xffff582193a0    96  scvtf d0, w8
0xffff582193a4   100  fcmp d29, d0
0xffff582193a8   104  b.ne #+0x28 (addr 0xffff582193d0)
0xffff582193ac   108  b #-0x5c (addr 0xffff58219350)
0xffff582193b0   112  movz x16, #0x0
0xffff582193b4   116  sub csp, jssp, #0x10 (16)
0xffff582193b8   120  stp fp, lr, [jssp, #-16]!
0xffff582193bc   124  bl #+0x24 (addr 0xffff582193e0)
0xffff582193c0   128  movz x16, #0x8
0xffff582193c4   132  sub csp, jssp, #0x10 (16)
0xffff582193c8   136  stp fp, lr, [jssp, #-16]!
0xffff582193cc   140  bl #+0x14 (addr 0xffff582193e0)
0xffff582193d0   144  movz x16, #0x10
0xffff582193d4   148  sub csp, jssp, #0x10 (16)
0xffff582193d8   152  stp fp, lr, [jssp, #-16]!
0xffff582193dc   156  bl #+0x4 (addr 0xffff582193e0)
0xffff582193e0   160  movz x17, #0xa00000000
0xffff582193e4   164  sub csp, jssp, #0x10 (16)
0xffff582193e8   168  stp x17, cp, [jssp, #-16]!
0xffff582193ec   172  add fp, jssp, #0x10 (16)
0xffff582193f0   176  ldr x17, pc+24 (addr 0x0000ffff58219408)    ;; lazy deoptimization bailout 0
0xffff582193f4   180  add x17, x17, x16
0xffff582193f8   184  br x17
0xffff582193fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58219400   192  d63f03e0       constant
0xffff58219404   196  d503201f       constant
0xffff58219408   200  58006000       constant
0xffff5821940c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582193f0  runtime entry
0xffff582193fc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff58219480     0  ldur x5, [x1, #15]
0xffff58219484     4  ldur w6, [x1, #27]
0xffff58219488     8  tbz w0, #0, #+0x1c (addr 0xffff582194a4)
0xffff5821948c    12  ldur x16, [x0, #-1]
0xffff58219490    16  ldr x17, [x26, #120]
0xffff58219494    20  cmp x16, x17
0xffff58219498    24  b.ne #+0x298 (addr 0xffff58219730)
0xffff5821949c    28  ldur d0, [x0, #7]
0xffff582194a0    32  b #+0x8 (addr 0xffff582194a8)
0xffff582194a4    36  scvtf d0, x0, #32
0xffff582194a8    40  tbnz w2, #0, #+0x11c (addr 0xffff582195c4)
0xffff582194ac    44  asr x8, x2, #32
0xffff582194b0    48  cmp w6, w8
0xffff582194b4    52  b.eq #+0x10 (addr 0xffff582194c4)
0xffff582194b8    56  cmp w8, w6
0xffff582194bc    60  b.hs #+0x284 (addr 0xffff58219740)
0xffff582194c0    64  b #+0xf4 (addr 0xffff582195b4)
0xffff582194c4    68  ldur w7, [x5, #11]
0xffff582194c8    72  cmp w7, w8
0xffff582194cc    76  b.gt #+0xdc (addr 0xffff582195a8)
0xffff582194d0    80  adds w7, w7, #0x400 (1024)
0xffff582194d4    84  b.vs #+0x27c (addr 0xffff58219750)
0xffff582194d8    88  cmp w8, w7
0xffff582194dc    92  b.hs #+0x284 (addr 0xffff58219760)
0xffff582194e0    96  tbnz w2, #0, #+0x12c (addr 0xffff5821960c)
0xffff582194e4   100  asr x9, x2, #32
0xffff582194e8   104  add w7, w8, w9, lsr #1
0xffff582194ec   108  add w7, w7, #0x10 (16)
0xffff582194f0   112  movz w16, #0x95ff
0xffff582194f4   116  cmp w7, w16, lsl #1
0xffff582194f8   120  b.hs #+0x278 (addr 0xffff58219770)
0xffff582194fc   124  lsl x2, x7, #32
0xffff58219500   128  lsl w3, w7, #3
0xffff58219504   132  add w3, w3, #0x10 (16)
0xffff58219508   136  sxtw x3, w3
0xffff5821950c   140  movz x4, #0x92c0
0xffff58219510   144  movk x4, #0x16e7, lsl #16
0xffff58219514   148  ldp x9, x16, [x4]
0xffff58219518   152  adds x7, x9, x3
0xffff5821951c   156  ccmp x7, x16, #nzCv, lo
0xffff58219520   160  b.hi #+0x16c (addr 0xffff5821968c)
0xffff58219524   164  str x7, [x4]
0xffff58219528   168  orr x9, x9, #0x1
0xffff5821952c   172  ldr x3, pc+468 (addr 0x0000ffff58219700)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219530   176  stur x3, [x9, #-1]
0xffff58219534   180  stur x2, [x9, #7]
0xffff58219538   184  ldr d1, pc+448 (addr 0x0000ffff582196f8)
0xffff5821953c   188  ldur w2, [x9, #11]
0xffff58219540   192  cmp w6, w2
0xffff58219544   196  b.ge #+0x14 (addr 0xffff58219558)
0xffff58219548   200  sub w2, w2, #0x1 (1)
0xffff5821954c   204  add x3, x9, #0xf (15)
0xffff58219550   208  str d1, [x3, w2, sxtw #3]
0xffff58219554   212  b #-0x14 (addr 0xffff58219540)
0xffff58219558   216  cmp w6, #0x0 (0)
0xffff5821955c   220  b.le #+0x1c (addr 0xffff58219578)
0xffff58219560   224  sub w6, w6, #0x1 (1)
0xffff58219564   228  add x2, x5, #0xf (15)
0xffff58219568   232  ldr d1, [x2, w6, sxtw #3]
0xffff5821956c   236  add x2, x9, #0xf (15)
0xffff58219570   240  str d1, [x2, w6, sxtw #3]
0xffff58219574   244  b #-0x1c (addr 0xffff58219558)
0xffff58219578   248  mov x2, x9
0xffff5821957c   252  stur x2, [x1, #15]
0xffff58219580   256  add x3, x1, #0xf (15)
0xffff58219584   260  and x2, x1, #0xfffffffffff00000
0xffff58219588   264  ldr x2, [x2, #8]
0xffff5821958c   268  tbz w2, #2, #+0x18 (addr 0xffff582195a4)
0xffff58219590   272  sub csp, jssp, #0x8 (8)
0xffff58219594   276  str lr, [jssp, #-8]!
0xffff58219598   280  ldr x16, pc+368 (addr 0x0000ffff58219708)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5821959c   284  blr x16
0xffff582195a0   288  ldr lr, [jssp], #8
0xffff582195a4   292  mov x5, x9
0xffff582195a8   296  add w2, w8, #0x1 (1)
0xffff582195ac   300  lsl x2, x2, #32
0xffff582195b0   304  stur x2, [x1, #23]
0xffff582195b4   308  add x1, x5, #0xf (15)
0xffff582195b8   312  fsub d29, d0, d15
0xffff582195bc   316  str d29, [x1, w8, sxtw #3]
0xffff582195c0   320  ret
0xffff582195c4   324  sub csp, jssp, #0x10 (16)
0xffff582195c8   328  stp fp, lr, [jssp, #-16]!
0xffff582195cc   332  movz fp, #0xa00000000
0xffff582195d0   336  sub csp, jssp, #0x8 (8)
0xffff582195d4   340  str fp, [jssp, #-8]!
0xffff582195d8   344  add fp, jssp, #0x8 (8)
0xffff582195dc   348  ldur x16, [x2, #-1]
0xffff582195e0   352  ldr x17, [x26, #120]
0xffff582195e4   356  cmp x16, x17
0xffff582195e8   360  b.ne #+0x198 (addr 0xffff58219780)
0xffff582195ec   364  ldur d29, [x2, #7]
0xffff582195f0   368  fcvtzs w8, d29
0xffff582195f4   372  scvtf d1, w8
0xffff582195f8   376  fcmp d29, d1
0xffff582195fc   380  b.ne #+0x184 (addr 0xffff58219780)
0xffff58219600   384  ldr lr, [jssp, #16]
0xffff58219604   388  ldp xzr, fp, [jssp], #24
0xffff58219608   392  b #-0x158 (addr 0xffff582194b0)
0xffff5821960c   396  sub csp, jssp, #0x10 (16)
0xffff58219610   400  stp fp, lr, [jssp, #-16]!
0xffff58219614   404  movz fp, #0xa00000000
0xffff58219618   408  sub csp, jssp, #0x8 (8)
0xffff5821961c   412  str fp, [jssp, #-8]!
0xffff58219620   416  add fp, jssp, #0x8 (8)
0xffff58219624   420  ldur x16, [x2, #-1]
0xffff58219628   424  ldr x17, [x26, #120]
0xffff5821962c   428  cmp x16, x17
0xffff58219630   432  b.ne #+0x30 (addr 0xffff58219660)
0xffff58219634   436  ldur d30, [x2, #7]
0xffff58219638   440  fcvtzs x9, d30
0xffff5821963c   444  cmp x9, #0x1 (1)
0xffff58219640   448  ccmn x9, #1, #nzcV, vc
0xffff58219644   452  b.vc #+0x18 (addr 0xffff5821965c)
0xffff58219648   456  sub csp, jssp, #0x8 (8)
0xffff5821964c   460  str lr, [jssp, #-8]!
0xffff58219650   464  ldr x16, pc+192 (addr 0x0000ffff58219710)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff58219654   468  blr x16
0xffff58219658   472  ldr lr, [jssp], #8
0xffff5821965c   476  b #+0x24 (addr 0xffff58219680)
0xffff58219660   480  ldp x9, x7, [x26, #64]
0xffff58219664   484  cmp x2, x9
0xffff58219668   488  cset x9, eq
0xffff5821966c   492  ccmp x2, x7, #nZcv, ne
0xffff58219670   496  b.eq #+0x10 (addr 0xffff58219680)
0xffff58219674   500  ldr x16, [x26, #40]
0xffff58219678   504  cmp x2, x16
0xffff5821967c   508  b.ne #+0x10c (addr 0xffff58219788)
0xffff58219680   512  ldr lr, [jssp, #16]
0xffff58219684   516  ldp xzr, fp, [jssp], #24
0xffff58219688   520  b #-0x1a0 (addr 0xffff582194e8)
0xffff5821968c   524  sub csp, jssp, #0x10 (16)
0xffff58219690   528  stp fp, lr, [jssp, #-16]!
0xffff58219694   532  movz fp, #0xa00000000
0xffff58219698   536  sub csp, jssp, #0x8 (8)
0xffff5821969c   540  str fp, [jssp, #-8]!
0xffff582196a0   544  add fp, jssp, #0x8 (8)
0xffff582196a4   548  movz x9, #0x0
0xffff582196a8   552  mov x16, lr
0xffff582196ac   556  ldr x17, pc+108 (addr 0x0000ffff58219718)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582196b0   560  blr x17
0xffff582196b4   564  lsl x0, x3, #32
0xffff582196b8   568  movz x10, #0x100000000
0xffff582196bc   572  sub csp, jssp, #0x10 (16)
0xffff582196c0   576  stp x10, x0, [jssp, #-16]!
0xffff582196c4   580  movz x0, #0x2
0xffff582196c8   584  movz x1, #0x5b88
0xffff582196cc   588  movk x1, #0xe2, lsl #16
0xffff582196d0   592  ldr x16, pc+80 (addr 0x0000ffff58219720)    ;; code: STUB, CEntryStub, minor: 5
0xffff582196d4   596  blr x16
0xffff582196d8   600  str x0, [jssp, #72]
0xffff582196dc   604  ldr x16, pc+76 (addr 0x0000ffff58219728)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582196e0   608  blr x16
0xffff582196e4   612  ldr lr, [jssp, #16]
0xffff582196e8   616  ldp xzr, fp, [jssp], #24
0xffff582196ec   620  b #-0x1c0 (addr 0xffff5821952c)
0xffff582196f0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff582196f4   628  d63f03e0       constant
0xffff582196f8   632  fff7ffff       constant
0xffff582196fc   636  fff7ffff       constant
0xffff58219700   640  32b052d9       constant
0xffff58219704   644  00000000       constant
0xffff58219708   648  582170c0       constant
0xffff5821970c   652  0000ffff       constant
0xffff58219710   656  582178a0       constant
0xffff58219714   660  0000ffff       constant
0xffff58219718   664  58206820       constant
0xffff5821971c   668  0000ffff       constant
0xffff58219720   672  58206260       constant
0xffff58219724   676  0000ffff       constant
0xffff58219728   680  582068e0       constant
0xffff5821972c   684  0000ffff       constant
0xffff58219730   688  movz x16, #0x0
0xffff58219734   692  sub csp, jssp, #0x10 (16)
0xffff58219738   696  stp fp, lr, [jssp, #-16]!
0xffff5821973c   700  bl #+0x54 (addr 0xffff58219790)
0xffff58219740   704  movz x16, #0x8
0xffff58219744   708  sub csp, jssp, #0x10 (16)
0xffff58219748   712  stp fp, lr, [jssp, #-16]!
0xffff5821974c   716  bl #+0x44 (addr 0xffff58219790)
0xffff58219750   720  movz x16, #0x10
0xffff58219754   724  sub csp, jssp, #0x10 (16)
0xffff58219758   728  stp fp, lr, [jssp, #-16]!
0xffff5821975c   732  bl #+0x34 (addr 0xffff58219790)
0xffff58219760   736  movz x16, #0x18
0xffff58219764   740  sub csp, jssp, #0x10 (16)
0xffff58219768   744  stp fp, lr, [jssp, #-16]!
0xffff5821976c   748  bl #+0x24 (addr 0xffff58219790)
0xffff58219770   752  movz x16, #0x20
0xffff58219774   756  sub csp, jssp, #0x10 (16)
0xffff58219778   760  stp fp, lr, [jssp, #-16]!
0xffff5821977c   764  bl #+0x14 (addr 0xffff58219790)
0xffff58219780   768  movz x16, #0x28
0xffff58219784   772  bl #+0x1c (addr 0xffff582197a0)
0xffff58219788   776  movz x16, #0x30
0xffff5821978c   780  bl #+0x14 (addr 0xffff582197a0)
0xffff58219790   784  movz x17, #0xa00000000
0xffff58219794   788  sub csp, jssp, #0x10 (16)
0xffff58219798   792  stp x17, cp, [jssp, #-16]!
0xffff5821979c   796  add fp, jssp, #0x10 (16)
0xffff582197a0   800  ldr x17, pc+24 (addr 0x0000ffff582197b8)    ;; lazy deoptimization bailout 0
0xffff582197a4   804  add x17, x17, x16
0xffff582197a8   808  br x17
0xffff582197ac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582197b0   816  d63f03e0       constant
0xffff582197b4   820  d503201f       constant
0xffff582197b8   824  58006000       constant
0xffff582197bc   828  0000ffff       constant


Safepoints (size = 21)
0xffff582196d8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff5821952c  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219598  code target (STUB)  (0xffff582170c0)
0xffff58219650  code target (STUB)  (0xffff582178a0)
0xffff582196ac  code target (STUB)  (0xffff58206820)
0xffff582196d0  code target (STUB)  (0xffff58206260)
0xffff582196dc  code target (STUB)  (0xffff582068e0)
0xffff582196f0  constant pool (size 64)
0xffff582197a0  runtime entry
0xffff582197ac  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff58219480     0  ldur x5, [x1, #15]
0xffff58219484     4  ldur w6, [x1, #27]
0xffff58219488     8  tbz w0, #0, #+0x1c (addr 0xffff582194a4)
0xffff5821948c    12  ldur x16, [x0, #-1]
0xffff58219490    16  ldr x17, [x26, #120]
0xffff58219494    20  cmp x16, x17
0xffff58219498    24  b.ne #+0x298 (addr 0xffff58219730)
0xffff5821949c    28  ldur d0, [x0, #7]
0xffff582194a0    32  b #+0x8 (addr 0xffff582194a8)
0xffff582194a4    36  scvtf d0, x0, #32
0xffff582194a8    40  tbnz w2, #0, #+0x11c (addr 0xffff582195c4)
0xffff582194ac    44  asr x8, x2, #32
0xffff582194b0    48  cmp w6, w8
0xffff582194b4    52  b.eq #+0x10 (addr 0xffff582194c4)
0xffff582194b8    56  cmp w8, w6
0xffff582194bc    60  b.hs #+0x284 (addr 0xffff58219740)
0xffff582194c0    64  b #+0xf4 (addr 0xffff582195b4)
0xffff582194c4    68  ldur w7, [x5, #11]
0xffff582194c8    72  cmp w7, w8
0xffff582194cc    76  b.gt #+0xdc (addr 0xffff582195a8)
0xffff582194d0    80  adds w7, w7, #0x400 (1024)
0xffff582194d4    84  b.vs #+0x27c (addr 0xffff58219750)
0xffff582194d8    88  cmp w8, w7
0xffff582194dc    92  b.hs #+0x284 (addr 0xffff58219760)
0xffff582194e0    96  tbnz w2, #0, #+0x12c (addr 0xffff5821960c)
0xffff582194e4   100  asr x9, x2, #32
0xffff582194e8   104  add w7, w8, w9, lsr #1
0xffff582194ec   108  add w7, w7, #0x10 (16)
0xffff582194f0   112  movz w16, #0x95ff
0xffff582194f4   116  cmp w7, w16, lsl #1
0xffff582194f8   120  b.hs #+0x278 (addr 0xffff58219770)
0xffff582194fc   124  lsl x2, x7, #32
0xffff58219500   128  lsl w3, w7, #3
0xffff58219504   132  add w3, w3, #0x10 (16)
0xffff58219508   136  sxtw x3, w3
0xffff5821950c   140  movz x4, #0x92c0
0xffff58219510   144  movk x4, #0x16e7, lsl #16
0xffff58219514   148  ldp x9, x16, [x4]
0xffff58219518   152  adds x7, x9, x3
0xffff5821951c   156  ccmp x7, x16, #nzCv, lo
0xffff58219520   160  b.hi #+0x16c (addr 0xffff5821968c)
0xffff58219524   164  str x7, [x4]
0xffff58219528   168  orr x9, x9, #0x1
0xffff5821952c   172  ldr x3, pc+468 (addr 0x0000ffff58219700)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219530   176  stur x3, [x9, #-1]
0xffff58219534   180  stur x2, [x9, #7]
0xffff58219538   184  ldr d1, pc+448 (addr 0x0000ffff582196f8)
0xffff5821953c   188  ldur w2, [x9, #11]
0xffff58219540   192  cmp w6, w2
0xffff58219544   196  b.ge #+0x14 (addr 0xffff58219558)
0xffff58219548   200  sub w2, w2, #0x1 (1)
0xffff5821954c   204  add x3, x9, #0xf (15)
0xffff58219550   208  str d1, [x3, w2, sxtw #3]
0xffff58219554   212  b #-0x14 (addr 0xffff58219540)
0xffff58219558   216  cmp w6, #0x0 (0)
0xffff5821955c   220  b.le #+0x1c (addr 0xffff58219578)
0xffff58219560   224  sub w6, w6, #0x1 (1)
0xffff58219564   228  add x2, x5, #0xf (15)
0xffff58219568   232  ldr d1, [x2, w6, sxtw #3]
0xffff5821956c   236  add x2, x9, #0xf (15)
0xffff58219570   240  str d1, [x2, w6, sxtw #3]
0xffff58219574   244  b #-0x1c (addr 0xffff58219558)
0xffff58219578   248  mov x2, x9
0xffff5821957c   252  stur x2, [x1, #15]
0xffff58219580   256  add x3, x1, #0xf (15)
0xffff58219584   260  and x2, x1, #0xfffffffffff00000
0xffff58219588   264  ldr x2, [x2, #8]
0xffff5821958c   268  tbz w2, #2, #+0x18 (addr 0xffff582195a4)
0xffff58219590   272  sub csp, jssp, #0x8 (8)
0xffff58219594   276  str lr, [jssp, #-8]!
0xffff58219598   280  ldr x16, pc+368 (addr 0x0000ffff58219708)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5821959c   284  blr x16
0xffff582195a0   288  ldr lr, [jssp], #8
0xffff582195a4   292  mov x5, x9
0xffff582195a8   296  add w2, w8, #0x1 (1)
0xffff582195ac   300  lsl x2, x2, #32
0xffff582195b0   304  stur x2, [x1, #23]
0xffff582195b4   308  add x1, x5, #0xf (15)
0xffff582195b8   312  fsub d29, d0, d15
0xffff582195bc   316  str d29, [x1, w8, sxtw #3]
0xffff582195c0   320  ret
0xffff582195c4   324  sub csp, jssp, #0x10 (16)
0xffff582195c8   328  stp fp, lr, [jssp, #-16]!
0xffff582195cc   332  movz fp, #0xa00000000
0xffff582195d0   336  sub csp, jssp, #0x8 (8)
0xffff582195d4   340  str fp, [jssp, #-8]!
0xffff582195d8   344  add fp, jssp, #0x8 (8)
0xffff582195dc   348  ldur x16, [x2, #-1]
0xffff582195e0   352  ldr x17, [x26, #120]
0xffff582195e4   356  cmp x16, x17
0xffff582195e8   360  b.ne #+0x198 (addr 0xffff58219780)
0xffff582195ec   364  ldur d29, [x2, #7]
0xffff582195f0   368  fcvtzs w8, d29
0xffff582195f4   372  scvtf d1, w8
0xffff582195f8   376  fcmp d29, d1
0xffff582195fc   380  b.ne #+0x184 (addr 0xffff58219780)
0xffff58219600   384  ldr lr, [jssp, #16]
0xffff58219604   388  ldp xzr, fp, [jssp], #24
0xffff58219608   392  b #-0x158 (addr 0xffff582194b0)
0xffff5821960c   396  sub csp, jssp, #0x10 (16)
0xffff58219610   400  stp fp, lr, [jssp, #-16]!
0xffff58219614   404  movz fp, #0xa00000000
0xffff58219618   408  sub csp, jssp, #0x8 (8)
0xffff5821961c   412  str fp, [jssp, #-8]!
0xffff58219620   416  add fp, jssp, #0x8 (8)
0xffff58219624   420  ldur x16, [x2, #-1]
0xffff58219628   424  ldr x17, [x26, #120]
0xffff5821962c   428  cmp x16, x17
0xffff58219630   432  b.ne #+0x30 (addr 0xffff58219660)
0xffff58219634   436  ldur d30, [x2, #7]
0xffff58219638   440  fcvtzs x9, d30
0xffff5821963c   444  cmp x9, #0x1 (1)
0xffff58219640   448  ccmn x9, #1, #nzcV, vc
0xffff58219644   452  b.vc #+0x18 (addr 0xffff5821965c)
0xffff58219648   456  sub csp, jssp, #0x8 (8)
0xffff5821964c   460  str lr, [jssp, #-8]!
0xffff58219650   464  ldr x16, pc+192 (addr 0x0000ffff58219710)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff58219654   468  blr x16
0xffff58219658   472  ldr lr, [jssp], #8
0xffff5821965c   476  b #+0x24 (addr 0xffff58219680)
0xffff58219660   480  ldp x9, x7, [x26, #64]
0xffff58219664   484  cmp x2, x9
0xffff58219668   488  cset x9, eq
0xffff5821966c   492  ccmp x2, x7, #nZcv, ne
0xffff58219670   496  b.eq #+0x10 (addr 0xffff58219680)
0xffff58219674   500  ldr x16, [x26, #40]
0xffff58219678   504  cmp x2, x16
0xffff5821967c   508  b.ne #+0x10c (addr 0xffff58219788)
0xffff58219680   512  ldr lr, [jssp, #16]
0xffff58219684   516  ldp xzr, fp, [jssp], #24
0xffff58219688   520  b #-0x1a0 (addr 0xffff582194e8)
0xffff5821968c   524  sub csp, jssp, #0x10 (16)
0xffff58219690   528  stp fp, lr, [jssp, #-16]!
0xffff58219694   532  movz fp, #0xa00000000
0xffff58219698   536  sub csp, jssp, #0x8 (8)
0xffff5821969c   540  str fp, [jssp, #-8]!
0xffff582196a0   544  add fp, jssp, #0x8 (8)
0xffff582196a4   548  movz x9, #0x0
0xffff582196a8   552  mov x16, lr
0xffff582196ac   556  ldr x17, pc+108 (addr 0x0000ffff58219718)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582196b0   560  blr x17
0xffff582196b4   564  lsl x0, x3, #32
0xffff582196b8   568  movz x10, #0x100000000
0xffff582196bc   572  sub csp, jssp, #0x10 (16)
0xffff582196c0   576  stp x10, x0, [jssp, #-16]!
0xffff582196c4   580  movz x0, #0x2
0xffff582196c8   584  movz x1, #0x5b88
0xffff582196cc   588  movk x1, #0xe2, lsl #16
0xffff582196d0   592  ldr x16, pc+80 (addr 0x0000ffff58219720)    ;; code: STUB, CEntryStub, minor: 5
0xffff582196d4   596  blr x16
0xffff582196d8   600  str x0, [jssp, #72]
0xffff582196dc   604  ldr x16, pc+76 (addr 0x0000ffff58219728)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582196e0   608  blr x16
0xffff582196e4   612  ldr lr, [jssp, #16]
0xffff582196e8   616  ldp xzr, fp, [jssp], #24
0xffff582196ec   620  b #-0x1c0 (addr 0xffff5821952c)
0xffff582196f0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff582196f4   628  d63f03e0       constant
0xffff582196f8   632  fff7ffff       constant
0xffff582196fc   636  fff7ffff       constant
0xffff58219700   640  32b052d9       constant
0xffff58219704   644  00000000       constant
0xffff58219708   648  582170c0       constant
0xffff5821970c   652  0000ffff       constant
0xffff58219710   656  582178a0       constant
0xffff58219714   660  0000ffff       constant
0xffff58219718   664  58206820       constant
0xffff5821971c   668  0000ffff       constant
0xffff58219720   672  58206260       constant
0xffff58219724   676  0000ffff       constant
0xffff58219728   680  582068e0       constant
0xffff5821972c   684  0000ffff       constant
0xffff58219730   688  movz x16, #0x0
0xffff58219734   692  sub csp, jssp, #0x10 (16)
0xffff58219738   696  stp fp, lr, [jssp, #-16]!
0xffff5821973c   700  bl #+0x54 (addr 0xffff58219790)
0xffff58219740   704  movz x16, #0x8
0xffff58219744   708  sub csp, jssp, #0x10 (16)
0xffff58219748   712  stp fp, lr, [jssp, #-16]!
0xffff5821974c   716  bl #+0x44 (addr 0xffff58219790)
0xffff58219750   720  movz x16, #0x10
0xffff58219754   724  sub csp, jssp, #0x10 (16)
0xffff58219758   728  stp fp, lr, [jssp, #-16]!
0xffff5821975c   732  bl #+0x34 (addr 0xffff58219790)
0xffff58219760   736  movz x16, #0x18
0xffff58219764   740  sub csp, jssp, #0x10 (16)
0xffff58219768   744  stp fp, lr, [jssp, #-16]!
0xffff5821976c   748  bl #+0x24 (addr 0xffff58219790)
0xffff58219770   752  movz x16, #0x20
0xffff58219774   756  sub csp, jssp, #0x10 (16)
0xffff58219778   760  stp fp, lr, [jssp, #-16]!
0xffff5821977c   764  bl #+0x14 (addr 0xffff58219790)
0xffff58219780   768  movz x16, #0x28
0xffff58219784   772  bl #+0x1c (addr 0xffff582197a0)
0xffff58219788   776  movz x16, #0x30
0xffff5821978c   780  bl #+0x14 (addr 0xffff582197a0)
0xffff58219790   784  movz x17, #0xa00000000
0xffff58219794   788  sub csp, jssp, #0x10 (16)
0xffff58219798   792  stp x17, cp, [jssp, #-16]!
0xffff5821979c   796  add fp, jssp, #0x10 (16)
0xffff582197a0   800  ldr x17, pc+24 (addr 0x0000ffff582197b8)    ;; lazy deoptimization bailout 0
0xffff582197a4   804  add x17, x17, x16
0xffff582197a8   808  br x17
0xffff582197ac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582197b0   816  d63f03e0       constant
0xffff582197b4   820  d503201f       constant
0xffff582197b8   824  58006000       constant
0xffff582197bc   828  0000ffff       constant


Safepoints (size = 21)
0xffff582196d8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff5821952c  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219598  code target (STUB)  (0xffff582170c0)
0xffff58219650  code target (STUB)  (0xffff582178a0)
0xffff582196ac  code target (STUB)  (0xffff58206820)
0xffff582196d0  code target (STUB)  (0xffff58206260)
0xffff582196dc  code target (STUB)  (0xffff582068e0)
0xffff582196f0  constant pool (size 64)
0xffff582197a0  runtime entry
0xffff582197ac  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff58219840     0  ldur x5, [x1, #15]
0xffff58219844     4  ldur w6, [x1, #27]
0xffff58219848     8  tbnz w2, #0, #+0x40 (addr 0xffff58219888)
0xffff5821984c    12  asr x8, x2, #32
0xffff58219850    16  cmp w8, w6
0xffff58219854    20  b.hs #+0x5c (addr 0xffff582198b0)
0xffff58219858    24  tbz w0, #0, #+0x1c (addr 0xffff58219874)
0xffff5821985c    28  ldur x16, [x0, #-1]
0xffff58219860    32  ldr x17, [x26, #120]
0xffff58219864    36  cmp x16, x17
0xffff58219868    40  b.ne #+0x58 (addr 0xffff582198c0)
0xffff5821986c    44  ldur d0, [x0, #7]
0xffff58219870    48  b #+0x8 (addr 0xffff58219878)
0xffff58219874    52  scvtf d0, x0, #32
0xffff58219878    56  add x1, x5, #0xf (15)
0xffff5821987c    60  fsub d29, d0, d15
0xffff58219880    64  str d29, [x1, w8, sxtw #3]
0xffff58219884    68  ret
0xffff58219888    72  ldur x16, [x2, #-1]
0xffff5821988c    76  ldr x17, [x26, #120]
0xffff58219890    80  cmp x16, x17
0xffff58219894    84  b.ne #+0x3c (addr 0xffff582198d0)
0xffff58219898    88  ldur d29, [x2, #7]
0xffff5821989c    92  fcvtzs w8, d29
0xffff582198a0    96  scvtf d0, w8
0xffff582198a4   100  fcmp d29, d0
0xffff582198a8   104  b.ne #+0x28 (addr 0xffff582198d0)
0xffff582198ac   108  b #-0x5c (addr 0xffff58219850)
0xffff582198b0   112  movz x16, #0x0
0xffff582198b4   116  sub csp, jssp, #0x10 (16)
0xffff582198b8   120  stp fp, lr, [jssp, #-16]!
0xffff582198bc   124  bl #+0x24 (addr 0xffff582198e0)
0xffff582198c0   128  movz x16, #0x8
0xffff582198c4   132  sub csp, jssp, #0x10 (16)
0xffff582198c8   136  stp fp, lr, [jssp, #-16]!
0xffff582198cc   140  bl #+0x14 (addr 0xffff582198e0)
0xffff582198d0   144  movz x16, #0x10
0xffff582198d4   148  sub csp, jssp, #0x10 (16)
0xffff582198d8   152  stp fp, lr, [jssp, #-16]!
0xffff582198dc   156  bl #+0x4 (addr 0xffff582198e0)
0xffff582198e0   160  movz x17, #0xa00000000
0xffff582198e4   164  sub csp, jssp, #0x10 (16)
0xffff582198e8   168  stp x17, cp, [jssp, #-16]!
0xffff582198ec   172  add fp, jssp, #0x10 (16)
0xffff582198f0   176  ldr x17, pc+24 (addr 0x0000ffff58219908)    ;; lazy deoptimization bailout 0
0xffff582198f4   180  add x17, x17, x16
0xffff582198f8   184  br x17
0xffff582198fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58219900   192  d63f03e0       constant
0xffff58219904   196  d503201f       constant
0xffff58219908   200  58006000       constant
0xffff5821990c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582198f0  runtime entry
0xffff582198fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff58219840     0  ldur x5, [x1, #15]
0xffff58219844     4  ldur w6, [x1, #27]
0xffff58219848     8  tbnz w2, #0, #+0x40 (addr 0xffff58219888)
0xffff5821984c    12  asr x8, x2, #32
0xffff58219850    16  cmp w8, w6
0xffff58219854    20  b.hs #+0x5c (addr 0xffff582198b0)
0xffff58219858    24  tbz w0, #0, #+0x1c (addr 0xffff58219874)
0xffff5821985c    28  ldur x16, [x0, #-1]
0xffff58219860    32  ldr x17, [x26, #120]
0xffff58219864    36  cmp x16, x17
0xffff58219868    40  b.ne #+0x58 (addr 0xffff582198c0)
0xffff5821986c    44  ldur d0, [x0, #7]
0xffff58219870    48  b #+0x8 (addr 0xffff58219878)
0xffff58219874    52  scvtf d0, x0, #32
0xffff58219878    56  add x1, x5, #0xf (15)
0xffff5821987c    60  fsub d29, d0, d15
0xffff58219880    64  str d29, [x1, w8, sxtw #3]
0xffff58219884    68  ret
0xffff58219888    72  ldur x16, [x2, #-1]
0xffff5821988c    76  ldr x17, [x26, #120]
0xffff58219890    80  cmp x16, x17
0xffff58219894    84  b.ne #+0x3c (addr 0xffff582198d0)
0xffff58219898    88  ldur d29, [x2, #7]
0xffff5821989c    92  fcvtzs w8, d29
0xffff582198a0    96  scvtf d0, w8
0xffff582198a4   100  fcmp d29, d0
0xffff582198a8   104  b.ne #+0x28 (addr 0xffff582198d0)
0xffff582198ac   108  b #-0x5c (addr 0xffff58219850)
0xffff582198b0   112  movz x16, #0x0
0xffff582198b4   116  sub csp, jssp, #0x10 (16)
0xffff582198b8   120  stp fp, lr, [jssp, #-16]!
0xffff582198bc   124  bl #+0x24 (addr 0xffff582198e0)
0xffff582198c0   128  movz x16, #0x8
0xffff582198c4   132  sub csp, jssp, #0x10 (16)
0xffff582198c8   136  stp fp, lr, [jssp, #-16]!
0xffff582198cc   140  bl #+0x14 (addr 0xffff582198e0)
0xffff582198d0   144  movz x16, #0x10
0xffff582198d4   148  sub csp, jssp, #0x10 (16)
0xffff582198d8   152  stp fp, lr, [jssp, #-16]!
0xffff582198dc   156  bl #+0x4 (addr 0xffff582198e0)
0xffff582198e0   160  movz x17, #0xa00000000
0xffff582198e4   164  sub csp, jssp, #0x10 (16)
0xffff582198e8   168  stp x17, cp, [jssp, #-16]!
0xffff582198ec   172  add fp, jssp, #0x10 (16)
0xffff582198f0   176  ldr x17, pc+24 (addr 0x0000ffff58219908)    ;; lazy deoptimization bailout 0
0xffff582198f4   180  add x17, x17, x16
0xffff582198f8   184  br x17
0xffff582198fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58219900   192  d63f03e0       constant
0xffff58219904   196  d503201f       constant
0xffff58219908   200  58006000       constant
0xffff5821990c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582198f0  runtime entry
0xffff582198fc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff58219980     0  ldur x5, [x1, #15]
0xffff58219984     4  ldur w6, [x1, #27]
0xffff58219988     8  tbz w0, #0, #+0x1c (addr 0xffff582199a4)
0xffff5821998c    12  ldur x16, [x0, #-1]
0xffff58219990    16  ldr x17, [x26, #120]
0xffff58219994    20  cmp x16, x17
0xffff58219998    24  b.ne #+0x298 (addr 0xffff58219c30)
0xffff5821999c    28  ldur d0, [x0, #7]
0xffff582199a0    32  b #+0x8 (addr 0xffff582199a8)
0xffff582199a4    36  scvtf d0, x0, #32
0xffff582199a8    40  tbnz w2, #0, #+0x11c (addr 0xffff58219ac4)
0xffff582199ac    44  asr x8, x2, #32
0xffff582199b0    48  cmp w6, w8
0xffff582199b4    52  b.le #+0x10 (addr 0xffff582199c4)
0xffff582199b8    56  cmp w8, w6
0xffff582199bc    60  b.hs #+0x284 (addr 0xffff58219c40)
0xffff582199c0    64  b #+0xf4 (addr 0xffff58219ab4)
0xffff582199c4    68  ldur w7, [x5, #11]
0xffff582199c8    72  cmp w7, w8
0xffff582199cc    76  b.gt #+0xdc (addr 0xffff58219aa8)
0xffff582199d0    80  adds w7, w7, #0x400 (1024)
0xffff582199d4    84  b.vs #+0x27c (addr 0xffff58219c50)
0xffff582199d8    88  cmp w8, w7
0xffff582199dc    92  b.hs #+0x284 (addr 0xffff58219c60)
0xffff582199e0    96  tbnz w2, #0, #+0x12c (addr 0xffff58219b0c)
0xffff582199e4   100  asr x9, x2, #32
0xffff582199e8   104  add w7, w8, w9, lsr #1
0xffff582199ec   108  add w7, w7, #0x10 (16)
0xffff582199f0   112  movz w16, #0x95ff
0xffff582199f4   116  cmp w7, w16, lsl #1
0xffff582199f8   120  b.hs #+0x278 (addr 0xffff58219c70)
0xffff582199fc   124  lsl x2, x7, #32
0xffff58219a00   128  lsl w3, w7, #3
0xffff58219a04   132  add w3, w3, #0x10 (16)
0xffff58219a08   136  sxtw x3, w3
0xffff58219a0c   140  movz x4, #0x92c0
0xffff58219a10   144  movk x4, #0x16e7, lsl #16
0xffff58219a14   148  ldp x9, x16, [x4]
0xffff58219a18   152  adds x7, x9, x3
0xffff58219a1c   156  ccmp x7, x16, #nzCv, lo
0xffff58219a20   160  b.hi #+0x16c (addr 0xffff58219b8c)
0xffff58219a24   164  str x7, [x4]
0xffff58219a28   168  orr x9, x9, #0x1
0xffff58219a2c   172  ldr x3, pc+468 (addr 0x0000ffff58219c00)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219a30   176  stur x3, [x9, #-1]
0xffff58219a34   180  stur x2, [x9, #7]
0xffff58219a38   184  ldr d1, pc+448 (addr 0x0000ffff58219bf8)
0xffff58219a3c   188  ldur w2, [x9, #11]
0xffff58219a40   192  cmp w6, w2
0xffff58219a44   196  b.ge #+0x14 (addr 0xffff58219a58)
0xffff58219a48   200  sub w2, w2, #0x1 (1)
0xffff58219a4c   204  add x3, x9, #0xf (15)
0xffff58219a50   208  str d1, [x3, w2, sxtw #3]
0xffff58219a54   212  b #-0x14 (addr 0xffff58219a40)
0xffff58219a58   216  cmp w6, #0x0 (0)
0xffff58219a5c   220  b.le #+0x1c (addr 0xffff58219a78)
0xffff58219a60   224  sub w6, w6, #0x1 (1)
0xffff58219a64   228  add x2, x5, #0xf (15)
0xffff58219a68   232  ldr d1, [x2, w6, sxtw #3]
0xffff58219a6c   236  add x2, x9, #0xf (15)
0xffff58219a70   240  str d1, [x2, w6, sxtw #3]
0xffff58219a74   244  b #-0x1c (addr 0xffff58219a58)
0xffff58219a78   248  mov x2, x9
0xffff58219a7c   252  stur x2, [x1, #15]
0xffff58219a80   256  add x3, x1, #0xf (15)
0xffff58219a84   260  and x2, x1, #0xfffffffffff00000
0xffff58219a88   264  ldr x2, [x2, #8]
0xffff58219a8c   268  tbz w2, #2, #+0x18 (addr 0xffff58219aa4)
0xffff58219a90   272  sub csp, jssp, #0x8 (8)
0xffff58219a94   276  str lr, [jssp, #-8]!
0xffff58219a98   280  ldr x16, pc+368 (addr 0x0000ffff58219c08)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58219a9c   284  blr x16
0xffff58219aa0   288  ldr lr, [jssp], #8
0xffff58219aa4   292  mov x5, x9
0xffff58219aa8   296  add w2, w8, #0x1 (1)
0xffff58219aac   300  lsl x2, x2, #32
0xffff58219ab0   304  stur x2, [x1, #23]
0xffff58219ab4   308  add x1, x5, #0xf (15)
0xffff58219ab8   312  fsub d29, d0, d15
0xffff58219abc   316  str d29, [x1, w8, sxtw #3]
0xffff58219ac0   320  ret
0xffff58219ac4   324  sub csp, jssp, #0x10 (16)
0xffff58219ac8   328  stp fp, lr, [jssp, #-16]!
0xffff58219acc   332  movz fp, #0xa00000000
0xffff58219ad0   336  sub csp, jssp, #0x8 (8)
0xffff58219ad4   340  str fp, [jssp, #-8]!
0xffff58219ad8   344  add fp, jssp, #0x8 (8)
0xffff58219adc   348  ldur x16, [x2, #-1]
0xffff58219ae0   352  ldr x17, [x26, #120]
0xffff58219ae4   356  cmp x16, x17
0xffff58219ae8   360  b.ne #+0x198 (addr 0xffff58219c80)
0xffff58219aec   364  ldur d29, [x2, #7]
0xffff58219af0   368  fcvtzs w8, d29
0xffff58219af4   372  scvtf d1, w8
0xffff58219af8   376  fcmp d29, d1
0xffff58219afc   380  b.ne #+0x184 (addr 0xffff58219c80)
0xffff58219b00   384  ldr lr, [jssp, #16]
0xffff58219b04   388  ldp xzr, fp, [jssp], #24
0xffff58219b08   392  b #-0x158 (addr 0xffff582199b0)
0xffff58219b0c   396  sub csp, jssp, #0x10 (16)
0xffff58219b10   400  stp fp, lr, [jssp, #-16]!
0xffff58219b14   404  movz fp, #0xa00000000
0xffff58219b18   408  sub csp, jssp, #0x8 (8)
0xffff58219b1c   412  str fp, [jssp, #-8]!
0xffff58219b20   416  add fp, jssp, #0x8 (8)
0xffff58219b24   420  ldur x16, [x2, #-1]
0xffff58219b28   424  ldr x17, [x26, #120]
0xffff58219b2c   428  cmp x16, x17
0xffff58219b30   432  b.ne #+0x30 (addr 0xffff58219b60)
0xffff58219b34   436  ldur d30, [x2, #7]
0xffff58219b38   440  fcvtzs x9, d30
0xffff58219b3c   444  cmp x9, #0x1 (1)
0xffff58219b40   448  ccmn x9, #1, #nzcV, vc
0xffff58219b44   452  b.vc #+0x18 (addr 0xffff58219b5c)
0xffff58219b48   456  sub csp, jssp, #0x8 (8)
0xffff58219b4c   460  str lr, [jssp, #-8]!
0xffff58219b50   464  ldr x16, pc+192 (addr 0x0000ffff58219c10)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff58219b54   468  blr x16
0xffff58219b58   472  ldr lr, [jssp], #8
0xffff58219b5c   476  b #+0x24 (addr 0xffff58219b80)
0xffff58219b60   480  ldp x9, x7, [x26, #64]
0xffff58219b64   484  cmp x2, x9
0xffff58219b68   488  cset x9, eq
0xffff58219b6c   492  ccmp x2, x7, #nZcv, ne
0xffff58219b70   496  b.eq #+0x10 (addr 0xffff58219b80)
0xffff58219b74   500  ldr x16, [x26, #40]
0xffff58219b78   504  cmp x2, x16
0xffff58219b7c   508  b.ne #+0x10c (addr 0xffff58219c88)
0xffff58219b80   512  ldr lr, [jssp, #16]
0xffff58219b84   516  ldp xzr, fp, [jssp], #24
0xffff58219b88   520  b #-0x1a0 (addr 0xffff582199e8)
0xffff58219b8c   524  sub csp, jssp, #0x10 (16)
0xffff58219b90   528  stp fp, lr, [jssp, #-16]!
0xffff58219b94   532  movz fp, #0xa00000000
0xffff58219b98   536  sub csp, jssp, #0x8 (8)
0xffff58219b9c   540  str fp, [jssp, #-8]!
0xffff58219ba0   544  add fp, jssp, #0x8 (8)
0xffff58219ba4   548  movz x9, #0x0
0xffff58219ba8   552  mov x16, lr
0xffff58219bac   556  ldr x17, pc+108 (addr 0x0000ffff58219c18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58219bb0   560  blr x17
0xffff58219bb4   564  lsl x0, x3, #32
0xffff58219bb8   568  movz x10, #0x100000000
0xffff58219bbc   572  sub csp, jssp, #0x10 (16)
0xffff58219bc0   576  stp x10, x0, [jssp, #-16]!
0xffff58219bc4   580  movz x0, #0x2
0xffff58219bc8   584  movz x1, #0x5b88
0xffff58219bcc   588  movk x1, #0xe2, lsl #16
0xffff58219bd0   592  ldr x16, pc+80 (addr 0x0000ffff58219c20)    ;; code: STUB, CEntryStub, minor: 5
0xffff58219bd4   596  blr x16
0xffff58219bd8   600  str x0, [jssp, #72]
0xffff58219bdc   604  ldr x16, pc+76 (addr 0x0000ffff58219c28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58219be0   608  blr x16
0xffff58219be4   612  ldr lr, [jssp, #16]
0xffff58219be8   616  ldp xzr, fp, [jssp], #24
0xffff58219bec   620  b #-0x1c0 (addr 0xffff58219a2c)
0xffff58219bf0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58219bf4   628  d63f03e0       constant
0xffff58219bf8   632  fff7ffff       constant
0xffff58219bfc   636  fff7ffff       constant
0xffff58219c00   640  32b052d9       constant
0xffff58219c04   644  00000000       constant
0xffff58219c08   648  582170c0       constant
0xffff58219c0c   652  0000ffff       constant
0xffff58219c10   656  582178a0       constant
0xffff58219c14   660  0000ffff       constant
0xffff58219c18   664  58206820       constant
0xffff58219c1c   668  0000ffff       constant
0xffff58219c20   672  58206260       constant
0xffff58219c24   676  0000ffff       constant
0xffff58219c28   680  582068e0       constant
0xffff58219c2c   684  0000ffff       constant
0xffff58219c30   688  movz x16, #0x0
0xffff58219c34   692  sub csp, jssp, #0x10 (16)
0xffff58219c38   696  stp fp, lr, [jssp, #-16]!
0xffff58219c3c   700  bl #+0x54 (addr 0xffff58219c90)
0xffff58219c40   704  movz x16, #0x8
0xffff58219c44   708  sub csp, jssp, #0x10 (16)
0xffff58219c48   712  stp fp, lr, [jssp, #-16]!
0xffff58219c4c   716  bl #+0x44 (addr 0xffff58219c90)
0xffff58219c50   720  movz x16, #0x10
0xffff58219c54   724  sub csp, jssp, #0x10 (16)
0xffff58219c58   728  stp fp, lr, [jssp, #-16]!
0xffff58219c5c   732  bl #+0x34 (addr 0xffff58219c90)
0xffff58219c60   736  movz x16, #0x18
0xffff58219c64   740  sub csp, jssp, #0x10 (16)
0xffff58219c68   744  stp fp, lr, [jssp, #-16]!
0xffff58219c6c   748  bl #+0x24 (addr 0xffff58219c90)
0xffff58219c70   752  movz x16, #0x20
0xffff58219c74   756  sub csp, jssp, #0x10 (16)
0xffff58219c78   760  stp fp, lr, [jssp, #-16]!
0xffff58219c7c   764  bl #+0x14 (addr 0xffff58219c90)
0xffff58219c80   768  movz x16, #0x28
0xffff58219c84   772  bl #+0x1c (addr 0xffff58219ca0)
0xffff58219c88   776  movz x16, #0x30
0xffff58219c8c   780  bl #+0x14 (addr 0xffff58219ca0)
0xffff58219c90   784  movz x17, #0xa00000000
0xffff58219c94   788  sub csp, jssp, #0x10 (16)
0xffff58219c98   792  stp x17, cp, [jssp, #-16]!
0xffff58219c9c   796  add fp, jssp, #0x10 (16)
0xffff58219ca0   800  ldr x17, pc+24 (addr 0x0000ffff58219cb8)    ;; lazy deoptimization bailout 0
0xffff58219ca4   804  add x17, x17, x16
0xffff58219ca8   808  br x17
0xffff58219cac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58219cb0   816  d63f03e0       constant
0xffff58219cb4   820  d503201f       constant
0xffff58219cb8   824  58006000       constant
0xffff58219cbc   828  0000ffff       constant


Safepoints (size = 21)
0xffff58219bd8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff58219a2c  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219a98  code target (STUB)  (0xffff582170c0)
0xffff58219b50  code target (STUB)  (0xffff582178a0)
0xffff58219bac  code target (STUB)  (0xffff58206820)
0xffff58219bd0  code target (STUB)  (0xffff58206260)
0xffff58219bdc  code target (STUB)  (0xffff582068e0)
0xffff58219bf0  constant pool (size 64)
0xffff58219ca0  runtime entry
0xffff58219cac  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff58219980     0  ldur x5, [x1, #15]
0xffff58219984     4  ldur w6, [x1, #27]
0xffff58219988     8  tbz w0, #0, #+0x1c (addr 0xffff582199a4)
0xffff5821998c    12  ldur x16, [x0, #-1]
0xffff58219990    16  ldr x17, [x26, #120]
0xffff58219994    20  cmp x16, x17
0xffff58219998    24  b.ne #+0x298 (addr 0xffff58219c30)
0xffff5821999c    28  ldur d0, [x0, #7]
0xffff582199a0    32  b #+0x8 (addr 0xffff582199a8)
0xffff582199a4    36  scvtf d0, x0, #32
0xffff582199a8    40  tbnz w2, #0, #+0x11c (addr 0xffff58219ac4)
0xffff582199ac    44  asr x8, x2, #32
0xffff582199b0    48  cmp w6, w8
0xffff582199b4    52  b.le #+0x10 (addr 0xffff582199c4)
0xffff582199b8    56  cmp w8, w6
0xffff582199bc    60  b.hs #+0x284 (addr 0xffff58219c40)
0xffff582199c0    64  b #+0xf4 (addr 0xffff58219ab4)
0xffff582199c4    68  ldur w7, [x5, #11]
0xffff582199c8    72  cmp w7, w8
0xffff582199cc    76  b.gt #+0xdc (addr 0xffff58219aa8)
0xffff582199d0    80  adds w7, w7, #0x400 (1024)
0xffff582199d4    84  b.vs #+0x27c (addr 0xffff58219c50)
0xffff582199d8    88  cmp w8, w7
0xffff582199dc    92  b.hs #+0x284 (addr 0xffff58219c60)
0xffff582199e0    96  tbnz w2, #0, #+0x12c (addr 0xffff58219b0c)
0xffff582199e4   100  asr x9, x2, #32
0xffff582199e8   104  add w7, w8, w9, lsr #1
0xffff582199ec   108  add w7, w7, #0x10 (16)
0xffff582199f0   112  movz w16, #0x95ff
0xffff582199f4   116  cmp w7, w16, lsl #1
0xffff582199f8   120  b.hs #+0x278 (addr 0xffff58219c70)
0xffff582199fc   124  lsl x2, x7, #32
0xffff58219a00   128  lsl w3, w7, #3
0xffff58219a04   132  add w3, w3, #0x10 (16)
0xffff58219a08   136  sxtw x3, w3
0xffff58219a0c   140  movz x4, #0x92c0
0xffff58219a10   144  movk x4, #0x16e7, lsl #16
0xffff58219a14   148  ldp x9, x16, [x4]
0xffff58219a18   152  adds x7, x9, x3
0xffff58219a1c   156  ccmp x7, x16, #nzCv, lo
0xffff58219a20   160  b.hi #+0x16c (addr 0xffff58219b8c)
0xffff58219a24   164  str x7, [x4]
0xffff58219a28   168  orr x9, x9, #0x1
0xffff58219a2c   172  ldr x3, pc+468 (addr 0x0000ffff58219c00)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219a30   176  stur x3, [x9, #-1]
0xffff58219a34   180  stur x2, [x9, #7]
0xffff58219a38   184  ldr d1, pc+448 (addr 0x0000ffff58219bf8)
0xffff58219a3c   188  ldur w2, [x9, #11]
0xffff58219a40   192  cmp w6, w2
0xffff58219a44   196  b.ge #+0x14 (addr 0xffff58219a58)
0xffff58219a48   200  sub w2, w2, #0x1 (1)
0xffff58219a4c   204  add x3, x9, #0xf (15)
0xffff58219a50   208  str d1, [x3, w2, sxtw #3]
0xffff58219a54   212  b #-0x14 (addr 0xffff58219a40)
0xffff58219a58   216  cmp w6, #0x0 (0)
0xffff58219a5c   220  b.le #+0x1c (addr 0xffff58219a78)
0xffff58219a60   224  sub w6, w6, #0x1 (1)
0xffff58219a64   228  add x2, x5, #0xf (15)
0xffff58219a68   232  ldr d1, [x2, w6, sxtw #3]
0xffff58219a6c   236  add x2, x9, #0xf (15)
0xffff58219a70   240  str d1, [x2, w6, sxtw #3]
0xffff58219a74   244  b #-0x1c (addr 0xffff58219a58)
0xffff58219a78   248  mov x2, x9
0xffff58219a7c   252  stur x2, [x1, #15]
0xffff58219a80   256  add x3, x1, #0xf (15)
0xffff58219a84   260  and x2, x1, #0xfffffffffff00000
0xffff58219a88   264  ldr x2, [x2, #8]
0xffff58219a8c   268  tbz w2, #2, #+0x18 (addr 0xffff58219aa4)
0xffff58219a90   272  sub csp, jssp, #0x8 (8)
0xffff58219a94   276  str lr, [jssp, #-8]!
0xffff58219a98   280  ldr x16, pc+368 (addr 0x0000ffff58219c08)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58219a9c   284  blr x16
0xffff58219aa0   288  ldr lr, [jssp], #8
0xffff58219aa4   292  mov x5, x9
0xffff58219aa8   296  add w2, w8, #0x1 (1)
0xffff58219aac   300  lsl x2, x2, #32
0xffff58219ab0   304  stur x2, [x1, #23]
0xffff58219ab4   308  add x1, x5, #0xf (15)
0xffff58219ab8   312  fsub d29, d0, d15
0xffff58219abc   316  str d29, [x1, w8, sxtw #3]
0xffff58219ac0   320  ret
0xffff58219ac4   324  sub csp, jssp, #0x10 (16)
0xffff58219ac8   328  stp fp, lr, [jssp, #-16]!
0xffff58219acc   332  movz fp, #0xa00000000
0xffff58219ad0   336  sub csp, jssp, #0x8 (8)
0xffff58219ad4   340  str fp, [jssp, #-8]!
0xffff58219ad8   344  add fp, jssp, #0x8 (8)
0xffff58219adc   348  ldur x16, [x2, #-1]
0xffff58219ae0   352  ldr x17, [x26, #120]
0xffff58219ae4   356  cmp x16, x17
0xffff58219ae8   360  b.ne #+0x198 (addr 0xffff58219c80)
0xffff58219aec   364  ldur d29, [x2, #7]
0xffff58219af0   368  fcvtzs w8, d29
0xffff58219af4   372  scvtf d1, w8
0xffff58219af8   376  fcmp d29, d1
0xffff58219afc   380  b.ne #+0x184 (addr 0xffff58219c80)
0xffff58219b00   384  ldr lr, [jssp, #16]
0xffff58219b04   388  ldp xzr, fp, [jssp], #24
0xffff58219b08   392  b #-0x158 (addr 0xffff582199b0)
0xffff58219b0c   396  sub csp, jssp, #0x10 (16)
0xffff58219b10   400  stp fp, lr, [jssp, #-16]!
0xffff58219b14   404  movz fp, #0xa00000000
0xffff58219b18   408  sub csp, jssp, #0x8 (8)
0xffff58219b1c   412  str fp, [jssp, #-8]!
0xffff58219b20   416  add fp, jssp, #0x8 (8)
0xffff58219b24   420  ldur x16, [x2, #-1]
0xffff58219b28   424  ldr x17, [x26, #120]
0xffff58219b2c   428  cmp x16, x17
0xffff58219b30   432  b.ne #+0x30 (addr 0xffff58219b60)
0xffff58219b34   436  ldur d30, [x2, #7]
0xffff58219b38   440  fcvtzs x9, d30
0xffff58219b3c   444  cmp x9, #0x1 (1)
0xffff58219b40   448  ccmn x9, #1, #nzcV, vc
0xffff58219b44   452  b.vc #+0x18 (addr 0xffff58219b5c)
0xffff58219b48   456  sub csp, jssp, #0x8 (8)
0xffff58219b4c   460  str lr, [jssp, #-8]!
0xffff58219b50   464  ldr x16, pc+192 (addr 0x0000ffff58219c10)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff58219b54   468  blr x16
0xffff58219b58   472  ldr lr, [jssp], #8
0xffff58219b5c   476  b #+0x24 (addr 0xffff58219b80)
0xffff58219b60   480  ldp x9, x7, [x26, #64]
0xffff58219b64   484  cmp x2, x9
0xffff58219b68   488  cset x9, eq
0xffff58219b6c   492  ccmp x2, x7, #nZcv, ne
0xffff58219b70   496  b.eq #+0x10 (addr 0xffff58219b80)
0xffff58219b74   500  ldr x16, [x26, #40]
0xffff58219b78   504  cmp x2, x16
0xffff58219b7c   508  b.ne #+0x10c (addr 0xffff58219c88)
0xffff58219b80   512  ldr lr, [jssp, #16]
0xffff58219b84   516  ldp xzr, fp, [jssp], #24
0xffff58219b88   520  b #-0x1a0 (addr 0xffff582199e8)
0xffff58219b8c   524  sub csp, jssp, #0x10 (16)
0xffff58219b90   528  stp fp, lr, [jssp, #-16]!
0xffff58219b94   532  movz fp, #0xa00000000
0xffff58219b98   536  sub csp, jssp, #0x8 (8)
0xffff58219b9c   540  str fp, [jssp, #-8]!
0xffff58219ba0   544  add fp, jssp, #0x8 (8)
0xffff58219ba4   548  movz x9, #0x0
0xffff58219ba8   552  mov x16, lr
0xffff58219bac   556  ldr x17, pc+108 (addr 0x0000ffff58219c18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58219bb0   560  blr x17
0xffff58219bb4   564  lsl x0, x3, #32
0xffff58219bb8   568  movz x10, #0x100000000
0xffff58219bbc   572  sub csp, jssp, #0x10 (16)
0xffff58219bc0   576  stp x10, x0, [jssp, #-16]!
0xffff58219bc4   580  movz x0, #0x2
0xffff58219bc8   584  movz x1, #0x5b88
0xffff58219bcc   588  movk x1, #0xe2, lsl #16
0xffff58219bd0   592  ldr x16, pc+80 (addr 0x0000ffff58219c20)    ;; code: STUB, CEntryStub, minor: 5
0xffff58219bd4   596  blr x16
0xffff58219bd8   600  str x0, [jssp, #72]
0xffff58219bdc   604  ldr x16, pc+76 (addr 0x0000ffff58219c28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58219be0   608  blr x16
0xffff58219be4   612  ldr lr, [jssp, #16]
0xffff58219be8   616  ldp xzr, fp, [jssp], #24
0xffff58219bec   620  b #-0x1c0 (addr 0xffff58219a2c)
0xffff58219bf0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58219bf4   628  d63f03e0       constant
0xffff58219bf8   632  fff7ffff       constant
0xffff58219bfc   636  fff7ffff       constant
0xffff58219c00   640  32b052d9       constant
0xffff58219c04   644  00000000       constant
0xffff58219c08   648  582170c0       constant
0xffff58219c0c   652  0000ffff       constant
0xffff58219c10   656  582178a0       constant
0xffff58219c14   660  0000ffff       constant
0xffff58219c18   664  58206820       constant
0xffff58219c1c   668  0000ffff       constant
0xffff58219c20   672  58206260       constant
0xffff58219c24   676  0000ffff       constant
0xffff58219c28   680  582068e0       constant
0xffff58219c2c   684  0000ffff       constant
0xffff58219c30   688  movz x16, #0x0
0xffff58219c34   692  sub csp, jssp, #0x10 (16)
0xffff58219c38   696  stp fp, lr, [jssp, #-16]!
0xffff58219c3c   700  bl #+0x54 (addr 0xffff58219c90)
0xffff58219c40   704  movz x16, #0x8
0xffff58219c44   708  sub csp, jssp, #0x10 (16)
0xffff58219c48   712  stp fp, lr, [jssp, #-16]!
0xffff58219c4c   716  bl #+0x44 (addr 0xffff58219c90)
0xffff58219c50   720  movz x16, #0x10
0xffff58219c54   724  sub csp, jssp, #0x10 (16)
0xffff58219c58   728  stp fp, lr, [jssp, #-16]!
0xffff58219c5c   732  bl #+0x34 (addr 0xffff58219c90)
0xffff58219c60   736  movz x16, #0x18
0xffff58219c64   740  sub csp, jssp, #0x10 (16)
0xffff58219c68   744  stp fp, lr, [jssp, #-16]!
0xffff58219c6c   748  bl #+0x24 (addr 0xffff58219c90)
0xffff58219c70   752  movz x16, #0x20
0xffff58219c74   756  sub csp, jssp, #0x10 (16)
0xffff58219c78   760  stp fp, lr, [jssp, #-16]!
0xffff58219c7c   764  bl #+0x14 (addr 0xffff58219c90)
0xffff58219c80   768  movz x16, #0x28
0xffff58219c84   772  bl #+0x1c (addr 0xffff58219ca0)
0xffff58219c88   776  movz x16, #0x30
0xffff58219c8c   780  bl #+0x14 (addr 0xffff58219ca0)
0xffff58219c90   784  movz x17, #0xa00000000
0xffff58219c94   788  sub csp, jssp, #0x10 (16)
0xffff58219c98   792  stp x17, cp, [jssp, #-16]!
0xffff58219c9c   796  add fp, jssp, #0x10 (16)
0xffff58219ca0   800  ldr x17, pc+24 (addr 0x0000ffff58219cb8)    ;; lazy deoptimization bailout 0
0xffff58219ca4   804  add x17, x17, x16
0xffff58219ca8   808  br x17
0xffff58219cac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58219cb0   816  d63f03e0       constant
0xffff58219cb4   820  d503201f       constant
0xffff58219cb8   824  58006000       constant
0xffff58219cbc   828  0000ffff       constant


Safepoints (size = 21)
0xffff58219bd8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff58219a2c  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219a98  code target (STUB)  (0xffff582170c0)
0xffff58219b50  code target (STUB)  (0xffff582178a0)
0xffff58219bac  code target (STUB)  (0xffff58206820)
0xffff58219bd0  code target (STUB)  (0xffff58206260)
0xffff58219bdc  code target (STUB)  (0xffff582068e0)
0xffff58219bf0  constant pool (size 64)
0xffff58219ca0  runtime entry
0xffff58219cac  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = TypeofStub
compiler = crankshaft
Instructions (size = 584)
0xffff58219d40     0  tbz w3, #0, #+0x14c (addr 0xffff58219e8c)
0xffff58219d44     4  ldur x0, [x3, #-1]
0xffff58219d48     8  ldr x16, pc+344 (addr 0x0000ffff58219ea0)    ;; object: 0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219d4c    12  cmp x0, x16
0xffff58219d50    16  b.eq #+0x134 (addr 0xffff58219e84)
0xffff58219d54    20  ldur x0, [x3, #-1]
0xffff58219d58    24  ldrb w1, [x0, #11]
0xffff58219d5c    28  cmp w1, #0x80 (128)
0xffff58219d60    32  b.lt #+0x11c (addr 0xffff58219e7c)
0xffff58219d64    36  cmp w1, #0x83 (131)
0xffff58219d68    40  b.eq #+0x10c (addr 0xffff58219e74)
0xffff58219d6c    44  cmp w1, #0x80 (128)
0xffff58219d70    48  b.eq #+0xfc (addr 0xffff58219e6c)
0xffff58219d74    52  ldrb w1, [x0, #12]
0xffff58219d78    56  movz w16, #0x12
0xffff58219d7c    60  and w1, w1, w16
0xffff58219d80    64  cmp w1, #0x2 (2)
0xffff58219d84    68  b.eq #+0xe0 (addr 0xffff58219e64)
0xffff58219d88    72  ldr x2, pc+288 (addr 0x0000ffff58219ea8)    ;; object: 0x32b04519 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219d8c    76  cmp x0, x2
0xffff58219d90    80  b.eq #+0xcc (addr 0xffff58219e5c)
0xffff58219d94    84  ldr x2, pc+284 (addr 0x0000ffff58219eb0)    ;; object: 0x32b04571 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219d98    88  cmp x0, x2
0xffff58219d9c    92  b.eq #+0xb8 (addr 0xffff58219e54)
0xffff58219da0    96  ldr x2, pc+280 (addr 0x0000ffff58219eb8)    ;; object: 0x32b045c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219da4   100  cmp x0, x2
0xffff58219da8   104  b.eq #+0xa4 (addr 0xffff58219e4c)
0xffff58219dac   108  ldr x2, pc+276 (addr 0x0000ffff58219ec0)    ;; object: 0x32b04621 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219db0   112  cmp x0, x2
0xffff58219db4   116  b.eq #+0x90 (addr 0xffff58219e44)
0xffff58219db8   120  ldr x2, pc+272 (addr 0x0000ffff58219ec8)    ;; object: 0x32b04679 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219dbc   124  cmp x0, x2
0xffff58219dc0   128  b.eq #+0x7c (addr 0xffff58219e3c)
0xffff58219dc4   132  ldr x2, pc+268 (addr 0x0000ffff58219ed0)    ;; object: 0x32b046d1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219dc8   136  cmp x0, x2
0xffff58219dcc   140  b.eq #+0x68 (addr 0xffff58219e34)
0xffff58219dd0   144  ldr x2, pc+264 (addr 0x0000ffff58219ed8)    ;; object: 0x32b04729 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219dd4   148  cmp x0, x2
0xffff58219dd8   152  b.eq #+0x54 (addr 0xffff58219e2c)
0xffff58219ddc   156  ldr x2, pc+260 (addr 0x0000ffff58219ee0)    ;; object: 0x32b04781 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219de0   160  cmp x0, x2
0xffff58219de4   164  b.eq #+0x40 (addr 0xffff58219e24)
0xffff58219de8   168  ldr x2, pc+256 (addr 0x0000ffff58219ee8)    ;; object: 0x32b047d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219dec   172  cmp x0, x2
0xffff58219df0   176  b.eq #+0x2c (addr 0xffff58219e1c)
0xffff58219df4   180  ldr x2, pc+252 (addr 0x0000ffff58219ef0)    ;; object: 0x32b04831 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219df8   184  cmp x0, x2
0xffff58219dfc   188  b.eq #+0x18 (addr 0xffff58219e14)
0xffff58219e00   192  cbnz w1, #+0xc (addr 0xffff58219e0c)
0xffff58219e04   196  ldr x0, pc+244 (addr 0x0000ffff58219ef8)    ;; object: 0x39c04499 <String[6]: object>
0xffff58219e08   200  b #+0x88 (addr 0xffff58219e90)
0xffff58219e0c   204  ldr x0, pc+244 (addr 0x0000ffff58219f00)    ;; object: 0x39c04451 <String[9]: undefined>
0xffff58219e10   208  b #+0x80 (addr 0xffff58219e90)
0xffff58219e14   212  ldr x0, pc+244 (addr 0x0000ffff58219f08)    ;; object: 0x39c04921 <String[8]: bool8x16>
0xffff58219e18   216  b #+0x78 (addr 0xffff58219e90)
0xffff58219e1c   220  ldr x0, pc+244 (addr 0x0000ffff58219f10)    ;; object: 0x39c05699 <String[8]: uint8x16>
0xffff58219e20   224  b #+0x70 (addr 0xffff58219e90)
0xffff58219e24   228  ldr x0, pc+244 (addr 0x0000ffff58219f18)    ;; object: 0x39c05031 <String[7]: int8x16>
0xffff58219e28   232  b #+0x68 (addr 0xffff58219e90)
0xffff58219e2c   236  ldr x0, pc+244 (addr 0x0000ffff58219f20)    ;; object: 0x39c048a1 <String[8]: bool16x8>
0xffff58219e30   240  b #+0x60 (addr 0xffff58219e90)
0xffff58219e34   244  ldr x0, pc+244 (addr 0x0000ffff58219f28)    ;; object: 0x39c05619 <String[8]: uint16x8>
0xffff58219e38   248  b #+0x58 (addr 0xffff58219e90)
0xffff58219e3c   252  ldr x0, pc+244 (addr 0x0000ffff58219f30)    ;; object: 0x39c04fb1 <String[7]: int16x8>
0xffff58219e40   256  b #+0x50 (addr 0xffff58219e90)
0xffff58219e44   260  ldr x0, pc+244 (addr 0x0000ffff58219f38)    ;; object: 0x39c048e1 <String[8]: bool32x4>
0xffff58219e48   264  b #+0x48 (addr 0xffff58219e90)
0xffff58219e4c   268  ldr x0, pc+244 (addr 0x0000ffff58219f40)    ;; object: 0x39c05659 <String[8]: uint32x4>
0xffff58219e50   272  b #+0x40 (addr 0xffff58219e90)
0xffff58219e54   276  ldr x0, pc+244 (addr 0x0000ffff58219f48)    ;; object: 0x39c04ff1 <String[7]: int32x4>
0xffff58219e58   280  b #+0x38 (addr 0xffff58219e90)
0xffff58219e5c   284  ldr x0, pc+244 (addr 0x0000ffff58219f50)    ;; object: 0x39c04d19 <String[9]: float32x4>
0xffff58219e60   288  b #+0x30 (addr 0xffff58219e90)
0xffff58219e64   292  ldr x0, pc+244 (addr 0x0000ffff58219f58)    ;; object: 0x39c04da9 <String[8]: function>
0xffff58219e68   296  b #+0x28 (addr 0xffff58219e90)
0xffff58219e6c   300  ldr x0, pc+244 (addr 0x0000ffff58219f60)    ;; object: 0x39c05559 <String[6]: symbol>
0xffff58219e70   304  b #+0x20 (addr 0xffff58219e90)
0xffff58219e74   308  ldur x0, [x3, #39]
0xffff58219e78   312  b #+0x18 (addr 0xffff58219e90)
0xffff58219e7c   316  ldr x0, pc+236 (addr 0x0000ffff58219f68)    ;; object: 0x39c05519 <String[6]: string>
0xffff58219e80   320  b #+0x10 (addr 0xffff58219e90)
0xffff58219e84   324  ldr x0, pc+236 (addr 0x0000ffff58219f70)    ;; object: 0x39c05251 <String[6]: number>
0xffff58219e88   328  b #+0x8 (addr 0xffff58219e90)
0xffff58219e8c   332  ldr x0, pc+236 (addr 0x0000ffff58219f78)    ;; object: 0x39c05251 <String[6]: number>
0xffff58219e90   336  ret
0xffff58219e94   340  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff58219e98   344  d63f03e0       constant
0xffff58219e9c   348  d503201f       constant
0xffff58219ea0   352  32b04411       constant
0xffff58219ea4   356  00000000       constant
0xffff58219ea8   360  32b04519       constant
0xffff58219eac   364  00000000       constant
0xffff58219eb0   368  32b04571       constant
0xffff58219eb4   372  00000000       constant
0xffff58219eb8   376  32b045c9       constant
0xffff58219ebc   380  00000000       constant
0xffff58219ec0   384  32b04621       constant
0xffff58219ec4   388  00000000       constant
0xffff58219ec8   392  32b04679       constant
0xffff58219ecc   396  00000000       constant
0xffff58219ed0   400  32b046d1       constant
0xffff58219ed4   404  00000000       constant
0xffff58219ed8   408  32b04729       constant
0xffff58219edc   412  00000000       constant
0xffff58219ee0   416  32b04781       constant
0xffff58219ee4   420  00000000       constant
0xffff58219ee8   424  32b047d9       constant
0xffff58219eec   428  00000000       constant
0xffff58219ef0   432  32b04831       constant
0xffff58219ef4   436  00000000       constant
0xffff58219ef8   440  39c04499       constant
0xffff58219efc   444  00000000       constant
0xffff58219f00   448  39c04451       constant
0xffff58219f04   452  00000000       constant
0xffff58219f08   456  39c04921       constant
0xffff58219f0c   460  00000000       constant
0xffff58219f10   464  39c05699       constant
0xffff58219f14   468  00000000       constant
0xffff58219f18   472  39c05031       constant
0xffff58219f1c   476  00000000       constant
0xffff58219f20   480  39c048a1       constant
0xffff58219f24   484  00000000       constant
0xffff58219f28   488  39c05619       constant
0xffff58219f2c   492  00000000       constant
0xffff58219f30   496  39c04fb1       constant
0xffff58219f34   500  00000000       constant
0xffff58219f38   504  39c048e1       constant
0xffff58219f3c   508  00000000       constant
0xffff58219f40   512  39c05659       constant
0xffff58219f44   516  00000000       constant
0xffff58219f48   520  39c04ff1       constant
0xffff58219f4c   524  00000000       constant
0xffff58219f50   528  39c04d19       constant
0xffff58219f54   532  00000000       constant
0xffff58219f58   536  39c04da9       constant
0xffff58219f5c   540  00000000       constant
0xffff58219f60   544  39c05559       constant
0xffff58219f64   548  00000000       constant
0xffff58219f68   552  39c05519       constant
0xffff58219f6c   556  00000000       constant
0xffff58219f70   560  39c05251       constant
0xffff58219f74   564  00000000       constant
0xffff58219f78   568  39c05251       constant
0xffff58219f7c   572  00000000       constant


Safepoints (size = 8)

RelocInfo (size = 36)
0xffff58219d48  embedded object  (0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219d88  embedded object  (0x32b04519 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219d94  embedded object  (0x32b04571 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219da0  embedded object  (0x32b045c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219dac  embedded object  (0x32b04621 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219db8  embedded object  (0x32b04679 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219dc4  embedded object  (0x32b046d1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219dd0  embedded object  (0x32b04729 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219ddc  embedded object  (0x32b04781 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219de8  embedded object  (0x32b047d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219df4  embedded object  (0x32b04831 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219e04  embedded object  (0x39c04499 <String[6]: object>)
0xffff58219e0c  embedded object  (0x39c04451 <String[9]: undefined>)
0xffff58219e14  embedded object  (0x39c04921 <String[8]: bool8x16>)
0xffff58219e1c  embedded object  (0x39c05699 <String[8]: uint8x16>)
0xffff58219e24  embedded object  (0x39c05031 <String[7]: int8x16>)
0xffff58219e2c  embedded object  (0x39c048a1 <String[8]: bool16x8>)
0xffff58219e34  embedded object  (0x39c05619 <String[8]: uint16x8>)
0xffff58219e3c  embedded object  (0x39c04fb1 <String[7]: int16x8>)
0xffff58219e44  embedded object  (0x39c048e1 <String[8]: bool32x4>)
0xffff58219e4c  embedded object  (0x39c05659 <String[8]: uint32x4>)
0xffff58219e54  embedded object  (0x39c04ff1 <String[7]: int32x4>)
0xffff58219e5c  embedded object  (0x39c04d19 <String[9]: float32x4>)
0xffff58219e64  embedded object  (0x39c04da9 <String[8]: function>)
0xffff58219e6c  embedded object  (0x39c05559 <String[6]: symbol>)
0xffff58219e7c  embedded object  (0x39c05519 <String[6]: string>)
0xffff58219e84  embedded object  (0x39c05251 <String[6]: number>)
0xffff58219e8c  embedded object  (0x39c05251 <String[6]: number>)
0xffff58219e94  constant pool (size 236)

--- End code ---
kind = STUB
major_key = TypeofStub
name = TypeofStub
compiler = crankshaft
Instructions (size = 584)
0xffff58219d40     0  tbz w3, #0, #+0x14c (addr 0xffff58219e8c)
0xffff58219d44     4  ldur x0, [x3, #-1]
0xffff58219d48     8  ldr x16, pc+344 (addr 0x0000ffff58219ea0)    ;; object: 0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219d4c    12  cmp x0, x16
0xffff58219d50    16  b.eq #+0x134 (addr 0xffff58219e84)
0xffff58219d54    20  ldur x0, [x3, #-1]
0xffff58219d58    24  ldrb w1, [x0, #11]
0xffff58219d5c    28  cmp w1, #0x80 (128)
0xffff58219d60    32  b.lt #+0x11c (addr 0xffff58219e7c)
0xffff58219d64    36  cmp w1, #0x83 (131)
0xffff58219d68    40  b.eq #+0x10c (addr 0xffff58219e74)
0xffff58219d6c    44  cmp w1, #0x80 (128)
0xffff58219d70    48  b.eq #+0xfc (addr 0xffff58219e6c)
0xffff58219d74    52  ldrb w1, [x0, #12]
0xffff58219d78    56  movz w16, #0x12
0xffff58219d7c    60  and w1, w1, w16
0xffff58219d80    64  cmp w1, #0x2 (2)
0xffff58219d84    68  b.eq #+0xe0 (addr 0xffff58219e64)
0xffff58219d88    72  ldr x2, pc+288 (addr 0x0000ffff58219ea8)    ;; object: 0x32b04519 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219d8c    76  cmp x0, x2
0xffff58219d90    80  b.eq #+0xcc (addr 0xffff58219e5c)
0xffff58219d94    84  ldr x2, pc+284 (addr 0x0000ffff58219eb0)    ;; object: 0x32b04571 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219d98    88  cmp x0, x2
0xffff58219d9c    92  b.eq #+0xb8 (addr 0xffff58219e54)
0xffff58219da0    96  ldr x2, pc+280 (addr 0x0000ffff58219eb8)    ;; object: 0x32b045c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219da4   100  cmp x0, x2
0xffff58219da8   104  b.eq #+0xa4 (addr 0xffff58219e4c)
0xffff58219dac   108  ldr x2, pc+276 (addr 0x0000ffff58219ec0)    ;; object: 0x32b04621 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219db0   112  cmp x0, x2
0xffff58219db4   116  b.eq #+0x90 (addr 0xffff58219e44)
0xffff58219db8   120  ldr x2, pc+272 (addr 0x0000ffff58219ec8)    ;; object: 0x32b04679 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219dbc   124  cmp x0, x2
0xffff58219dc0   128  b.eq #+0x7c (addr 0xffff58219e3c)
0xffff58219dc4   132  ldr x2, pc+268 (addr 0x0000ffff58219ed0)    ;; object: 0x32b046d1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219dc8   136  cmp x0, x2
0xffff58219dcc   140  b.eq #+0x68 (addr 0xffff58219e34)
0xffff58219dd0   144  ldr x2, pc+264 (addr 0x0000ffff58219ed8)    ;; object: 0x32b04729 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219dd4   148  cmp x0, x2
0xffff58219dd8   152  b.eq #+0x54 (addr 0xffff58219e2c)
0xffff58219ddc   156  ldr x2, pc+260 (addr 0x0000ffff58219ee0)    ;; object: 0x32b04781 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219de0   160  cmp x0, x2
0xffff58219de4   164  b.eq #+0x40 (addr 0xffff58219e24)
0xffff58219de8   168  ldr x2, pc+256 (addr 0x0000ffff58219ee8)    ;; object: 0x32b047d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219dec   172  cmp x0, x2
0xffff58219df0   176  b.eq #+0x2c (addr 0xffff58219e1c)
0xffff58219df4   180  ldr x2, pc+252 (addr 0x0000ffff58219ef0)    ;; object: 0x32b04831 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58219df8   184  cmp x0, x2
0xffff58219dfc   188  b.eq #+0x18 (addr 0xffff58219e14)
0xffff58219e00   192  cbnz w1, #+0xc (addr 0xffff58219e0c)
0xffff58219e04   196  ldr x0, pc+244 (addr 0x0000ffff58219ef8)    ;; object: 0x39c04499 <String[6]: object>
0xffff58219e08   200  b #+0x88 (addr 0xffff58219e90)
0xffff58219e0c   204  ldr x0, pc+244 (addr 0x0000ffff58219f00)    ;; object: 0x39c04451 <String[9]: undefined>
0xffff58219e10   208  b #+0x80 (addr 0xffff58219e90)
0xffff58219e14   212  ldr x0, pc+244 (addr 0x0000ffff58219f08)    ;; object: 0x39c04921 <String[8]: bool8x16>
0xffff58219e18   216  b #+0x78 (addr 0xffff58219e90)
0xffff58219e1c   220  ldr x0, pc+244 (addr 0x0000ffff58219f10)    ;; object: 0x39c05699 <String[8]: uint8x16>
0xffff58219e20   224  b #+0x70 (addr 0xffff58219e90)
0xffff58219e24   228  ldr x0, pc+244 (addr 0x0000ffff58219f18)    ;; object: 0x39c05031 <String[7]: int8x16>
0xffff58219e28   232  b #+0x68 (addr 0xffff58219e90)
0xffff58219e2c   236  ldr x0, pc+244 (addr 0x0000ffff58219f20)    ;; object: 0x39c048a1 <String[8]: bool16x8>
0xffff58219e30   240  b #+0x60 (addr 0xffff58219e90)
0xffff58219e34   244  ldr x0, pc+244 (addr 0x0000ffff58219f28)    ;; object: 0x39c05619 <String[8]: uint16x8>
0xffff58219e38   248  b #+0x58 (addr 0xffff58219e90)
0xffff58219e3c   252  ldr x0, pc+244 (addr 0x0000ffff58219f30)    ;; object: 0x39c04fb1 <String[7]: int16x8>
0xffff58219e40   256  b #+0x50 (addr 0xffff58219e90)
0xffff58219e44   260  ldr x0, pc+244 (addr 0x0000ffff58219f38)    ;; object: 0x39c048e1 <String[8]: bool32x4>
0xffff58219e48   264  b #+0x48 (addr 0xffff58219e90)
0xffff58219e4c   268  ldr x0, pc+244 (addr 0x0000ffff58219f40)    ;; object: 0x39c05659 <String[8]: uint32x4>
0xffff58219e50   272  b #+0x40 (addr 0xffff58219e90)
0xffff58219e54   276  ldr x0, pc+244 (addr 0x0000ffff58219f48)    ;; object: 0x39c04ff1 <String[7]: int32x4>
0xffff58219e58   280  b #+0x38 (addr 0xffff58219e90)
0xffff58219e5c   284  ldr x0, pc+244 (addr 0x0000ffff58219f50)    ;; object: 0x39c04d19 <String[9]: float32x4>
0xffff58219e60   288  b #+0x30 (addr 0xffff58219e90)
0xffff58219e64   292  ldr x0, pc+244 (addr 0x0000ffff58219f58)    ;; object: 0x39c04da9 <String[8]: function>
0xffff58219e68   296  b #+0x28 (addr 0xffff58219e90)
0xffff58219e6c   300  ldr x0, pc+244 (addr 0x0000ffff58219f60)    ;; object: 0x39c05559 <String[6]: symbol>
0xffff58219e70   304  b #+0x20 (addr 0xffff58219e90)
0xffff58219e74   308  ldur x0, [x3, #39]
0xffff58219e78   312  b #+0x18 (addr 0xffff58219e90)
0xffff58219e7c   316  ldr x0, pc+236 (addr 0x0000ffff58219f68)    ;; object: 0x39c05519 <String[6]: string>
0xffff58219e80   320  b #+0x10 (addr 0xffff58219e90)
0xffff58219e84   324  ldr x0, pc+236 (addr 0x0000ffff58219f70)    ;; object: 0x39c05251 <String[6]: number>
0xffff58219e88   328  b #+0x8 (addr 0xffff58219e90)
0xffff58219e8c   332  ldr x0, pc+236 (addr 0x0000ffff58219f78)    ;; object: 0x39c05251 <String[6]: number>
0xffff58219e90   336  ret
0xffff58219e94   340  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff58219e98   344  d63f03e0       constant
0xffff58219e9c   348  d503201f       constant
0xffff58219ea0   352  32b04411       constant
0xffff58219ea4   356  00000000       constant
0xffff58219ea8   360  32b04519       constant
0xffff58219eac   364  00000000       constant
0xffff58219eb0   368  32b04571       constant
0xffff58219eb4   372  00000000       constant
0xffff58219eb8   376  32b045c9       constant
0xffff58219ebc   380  00000000       constant
0xffff58219ec0   384  32b04621       constant
0xffff58219ec4   388  00000000       constant
0xffff58219ec8   392  32b04679       constant
0xffff58219ecc   396  00000000       constant
0xffff58219ed0   400  32b046d1       constant
0xffff58219ed4   404  00000000       constant
0xffff58219ed8   408  32b04729       constant
0xffff58219edc   412  00000000       constant
0xffff58219ee0   416  32b04781       constant
0xffff58219ee4   420  00000000       constant
0xffff58219ee8   424  32b047d9       constant
0xffff58219eec   428  00000000       constant
0xffff58219ef0   432  32b04831       constant
0xffff58219ef4   436  00000000       constant
0xffff58219ef8   440  39c04499       constant
0xffff58219efc   444  00000000       constant
0xffff58219f00   448  39c04451       constant
0xffff58219f04   452  00000000       constant
0xffff58219f08   456  39c04921       constant
0xffff58219f0c   460  00000000       constant
0xffff58219f10   464  39c05699       constant
0xffff58219f14   468  00000000       constant
0xffff58219f18   472  39c05031       constant
0xffff58219f1c   476  00000000       constant
0xffff58219f20   480  39c048a1       constant
0xffff58219f24   484  00000000       constant
0xffff58219f28   488  39c05619       constant
0xffff58219f2c   492  00000000       constant
0xffff58219f30   496  39c04fb1       constant
0xffff58219f34   500  00000000       constant
0xffff58219f38   504  39c048e1       constant
0xffff58219f3c   508  00000000       constant
0xffff58219f40   512  39c05659       constant
0xffff58219f44   516  00000000       constant
0xffff58219f48   520  39c04ff1       constant
0xffff58219f4c   524  00000000       constant
0xffff58219f50   528  39c04d19       constant
0xffff58219f54   532  00000000       constant
0xffff58219f58   536  39c04da9       constant
0xffff58219f5c   540  00000000       constant
0xffff58219f60   544  39c05559       constant
0xffff58219f64   548  00000000       constant
0xffff58219f68   552  39c05519       constant
0xffff58219f6c   556  00000000       constant
0xffff58219f70   560  39c05251       constant
0xffff58219f74   564  00000000       constant
0xffff58219f78   568  39c05251       constant
0xffff58219f7c   572  00000000       constant


Safepoints (size = 8)

RelocInfo (size = 36)
0xffff58219d48  embedded object  (0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219d88  embedded object  (0x32b04519 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219d94  embedded object  (0x32b04571 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219da0  embedded object  (0x32b045c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219dac  embedded object  (0x32b04621 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219db8  embedded object  (0x32b04679 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219dc4  embedded object  (0x32b046d1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219dd0  embedded object  (0x32b04729 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219ddc  embedded object  (0x32b04781 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219de8  embedded object  (0x32b047d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219df4  embedded object  (0x32b04831 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58219e04  embedded object  (0x39c04499 <String[6]: object>)
0xffff58219e0c  embedded object  (0x39c04451 <String[9]: undefined>)
0xffff58219e14  embedded object  (0x39c04921 <String[8]: bool8x16>)
0xffff58219e1c  embedded object  (0x39c05699 <String[8]: uint8x16>)
0xffff58219e24  embedded object  (0x39c05031 <String[7]: int8x16>)
0xffff58219e2c  embedded object  (0x39c048a1 <String[8]: bool16x8>)
0xffff58219e34  embedded object  (0x39c05619 <String[8]: uint16x8>)
0xffff58219e3c  embedded object  (0x39c04fb1 <String[7]: int16x8>)
0xffff58219e44  embedded object  (0x39c048e1 <String[8]: bool32x4>)
0xffff58219e4c  embedded object  (0x39c05659 <String[8]: uint32x4>)
0xffff58219e54  embedded object  (0x39c04ff1 <String[7]: int32x4>)
0xffff58219e5c  embedded object  (0x39c04d19 <String[9]: float32x4>)
0xffff58219e64  embedded object  (0x39c04da9 <String[8]: function>)
0xffff58219e6c  embedded object  (0x39c05559 <String[6]: symbol>)
0xffff58219e7c  embedded object  (0x39c05519 <String[6]: string>)
0xffff58219e84  embedded object  (0x39c05251 <String[6]: number>)
0xffff58219e8c  embedded object  (0x39c05251 <String[6]: number>)
0xffff58219e94  constant pool (size 236)


kind = STUB
major_key = JSEntryStub
name = JSEntryStub
compiler = unknown
Instructions (size = 400)
0xffff5821a000     0  movn xzr, #0x1
0xffff5821a004     4  stp d14, d15, [csp, #-16]!
0xffff5821a008     8  stp d12, d13, [csp, #-16]!
0xffff5821a00c    12  stp d10, d11, [csp, #-16]!
0xffff5821a010    16  stp d8, d9, [csp, #-16]!
0xffff5821a014    20  stp fp, lr, [csp, #-16]!
0xffff5821a018    24  stp cp, jssp, [csp, #-16]!
0xffff5821a01c    28  stp x25, x26, [csp, #-16]!
0xffff5821a020    32  stp x23, x24, [csp, #-16]!
0xffff5821a024    36  stp x21, x22, [csp, #-16]!
0xffff5821a028    40  stp x19, x20, [csp, #-16]!
0xffff5821a02c    44  mov jssp, csp
0xffff5821a030    48  mrs x16, fpcr
0xffff5821a034    52  tbnz w16, #25, #+0xc (addr 0xffff5821a040)
0xffff5821a038    56  orr x16, x16, #0x2000000
0xffff5821a03c    60  msr fpcr, x16
0xffff5821a040    64  fmov d15, xzr
0xffff5821a044    68  movn x13, #0x0
0xffff5821a048    72  movz x12, #0x100000000
0xffff5821a04c    76  ldr x11, pc+244 (addr 0x0000ffff5821a140)    ;; external reference (Isolate::c_entry_fp_address)
0xffff5821a050    80  ldr x10, [x11]
0xffff5821a054    84  sub csp, jssp, #0x20 (32)
0xffff5821a058    88  stp x10, xzr, [jssp, #-32]!
0xffff5821a05c    92  stp x12, x13, [jssp, #16]
0xffff5821a060    96  add fp, jssp, #0x18 (24)
0xffff5821a064   100  ldr x10, pc+228 (addr 0x0000ffff5821a148)    ;; external reference (Isolate::js_entry_sp_address)
0xffff5821a068   104  ldr x11, [x10]
0xffff5821a06c   108  cbnz x11, #+0x18 (addr 0xffff5821a084)
0xffff5821a070   112  str fp, [x10]
0xffff5821a074   116  movz x12, #0x100000000
0xffff5821a078   120  sub csp, jssp, #0x8 (8)
0xffff5821a07c   124  str x12, [jssp, #-8]!
0xffff5821a080   128  b #+0xc (addr 0xffff5821a08c)
0xffff5821a084   132  sub csp, jssp, #0x8 (8)
0xffff5821a088   136  str xzr, [jssp, #-8]!
0xffff5821a08c   140  b #+0x14 (addr 0xffff5821a0a0)
0xffff5821a090   144  ldr x10, pc+192 (addr 0x0000ffff5821a150)    ;; external reference (Isolate::pending_exception_address)
0xffff5821a094   148  str x0, [x10]
0xffff5821a098   152  ldr x0, [x26, #344]
0xffff5821a09c   156  b #+0x40 (addr 0xffff5821a0dc)
0xffff5821a0a0   160  ldr x11, pc+184 (addr 0x0000ffff5821a158)    ;; external reference (Isolate::handler_address)
0xffff5821a0a4   164  ldr x10, [x11]
0xffff5821a0a8   168  sub csp, jssp, #0x8 (8)
0xffff5821a0ac   172  str x10, [jssp, #-8]!
0xffff5821a0b0   176  str jssp, [x11]
0xffff5821a0b4   180  ldr x10, pc+172 (addr 0x0000ffff5821a160)    ;; object: 0x39c04519 <the hole>
0xffff5821a0b8   184  ldr x11, pc+176 (addr 0x0000ffff5821a168)    ;; external reference (Isolate::pending_exception_address)
0xffff5821a0bc   188  str x10, [x11]
0xffff5821a0c0   192  ldr x10, pc+176 (addr 0x0000ffff5821a170)    ;; external reference (Builtins::JSEntryTrampoline)
0xffff5821a0c4   196  ldr x11, [x10]
0xffff5821a0c8   200  add x12, x11, #0x5f (95)
0xffff5821a0cc   204  blr x12
0xffff5821a0d0   208  ldr x10, [jssp], #8
0xffff5821a0d4   212  ldr x11, pc+164 (addr 0x0000ffff5821a178)    ;; external reference (Isolate::handler_address)
0xffff5821a0d8   216  str x10, [x11]
0xffff5821a0dc   220  ldr x10, [jssp], #8
0xffff5821a0e0   224  movz x16, #0x100000000
0xffff5821a0e4   228  cmp x10, x16
0xffff5821a0e8   232  b.ne #+0xc (addr 0xffff5821a0f4)
0xffff5821a0ec   236  ldr x11, pc+148 (addr 0x0000ffff5821a180)    ;; external reference (Isolate::js_entry_sp_address)
0xffff5821a0f0   240  str xzr, [x11]
0xffff5821a0f4   244  ldr x10, [jssp], #8
0xffff5821a0f8   248  ldr x11, pc+144 (addr 0x0000ffff5821a188)    ;; external reference (Isolate::c_entry_fp_address)
0xffff5821a0fc   252  str x10, [x11]
0xffff5821a100   256  add jssp, jssp, #0x18 (24)
0xffff5821a104   260  mov csp, jssp
0xffff5821a108   264  ldp x19, x20, [csp], #16
0xffff5821a10c   268  ldp x21, x22, [csp], #16
0xffff5821a110   272  ldp x23, x24, [csp], #16
0xffff5821a114   276  ldp x25, x26, [csp], #16
0xffff5821a118   280  ldp cp, jssp, [csp], #16
0xffff5821a11c   284  ldp fp, lr, [csp], #16
0xffff5821a120   288  ldp d8, d9, [csp], #16
0xffff5821a124   292  ldp d10, d11, [csp], #16
0xffff5821a128   296  ldp d12, d13, [csp], #16
0xffff5821a12c   300  ldp d14, d15, [csp], #16
0xffff5821a130   304  ret
0xffff5821a134   308  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff5821a138   312  d63f03e0       constant
0xffff5821a13c   316  d503201f       constant
0xffff5821a140   320  16e79df8       constant
0xffff5821a144   324  00000000       constant
0xffff5821a148   328  16e79e18       constant
0xffff5821a14c   332  00000000       constant
0xffff5821a150   336  16e79da0       constant
0xffff5821a154   340  00000000       constant
0xffff5821a158   344  16e79e00       constant
0xffff5821a15c   348  00000000       constant
0xffff5821a160   352  39c04519       constant
0xffff5821a164   356  00000000       constant
0xffff5821a168   360  16e79da0       constant
0xffff5821a16c   364  00000000       constant
0xffff5821a170   368  16e7ab08       constant
0xffff5821a174   372  00000000       constant
0xffff5821a178   376  16e79e00       constant
0xffff5821a17c   380  00000000       constant
0xffff5821a180   384  16e79e18       constant
0xffff5821a184   388  00000000       constant
0xffff5821a188   392  16e79df8       constant
0xffff5821a18c   396  00000000       constant


Handler Table (size = 24)

RelocInfo (size = 27)
0xffff5821a04c  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff5821a064  external reference (Isolate::js_entry_sp_address)  (0x16e79e18)
0xffff5821a090  external reference (Isolate::pending_exception_address)  (0x16e79da0)
0xffff5821a0a0  external reference (Isolate::handler_address)  (0x16e79e00)
0xffff5821a0b4  embedded object  (0x39c04519 <the hole>)
0xffff5821a0b8  external reference (Isolate::pending_exception_address)  (0x16e79da0)
0xffff5821a0c0  external reference (Builtins::JSEntryTrampoline)  (0x16e7ab08)
0xffff5821a0d4  external reference (Isolate::handler_address)  (0x16e79e00)
0xffff5821a0ec  external reference (Isolate::js_entry_sp_address)  (0x16e79e18)
0xffff5821a0f8  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff5821a134  constant pool (size 92)


kind = STUB
major_key = JSEntryStub
name = JSConstructEntryStub
compiler = unknown
Instructions (size = 400)
0xffff5821a200     0  movn xzr, #0x1
0xffff5821a204     4  stp d14, d15, [csp, #-16]!
0xffff5821a208     8  stp d12, d13, [csp, #-16]!
0xffff5821a20c    12  stp d10, d11, [csp, #-16]!
0xffff5821a210    16  stp d8, d9, [csp, #-16]!
0xffff5821a214    20  stp fp, lr, [csp, #-16]!
0xffff5821a218    24  stp cp, jssp, [csp, #-16]!
0xffff5821a21c    28  stp x25, x26, [csp, #-16]!
0xffff5821a220    32  stp x23, x24, [csp, #-16]!
0xffff5821a224    36  stp x21, x22, [csp, #-16]!
0xffff5821a228    40  stp x19, x20, [csp, #-16]!
0xffff5821a22c    44  mov jssp, csp
0xffff5821a230    48  mrs x16, fpcr
0xffff5821a234    52  tbnz w16, #25, #+0xc (addr 0xffff5821a240)
0xffff5821a238    56  orr x16, x16, #0x2000000
0xffff5821a23c    60  msr fpcr, x16
0xffff5821a240    64  fmov d15, xzr
0xffff5821a244    68  movn x13, #0x0
0xffff5821a248    72  movz x12, #0x200000000
0xffff5821a24c    76  ldr x11, pc+244 (addr 0x0000ffff5821a340)    ;; external reference (Isolate::c_entry_fp_address)
0xffff5821a250    80  ldr x10, [x11]
0xffff5821a254    84  sub csp, jssp, #0x20 (32)
0xffff5821a258    88  stp x10, xzr, [jssp, #-32]!
0xffff5821a25c    92  stp x12, x13, [jssp, #16]
0xffff5821a260    96  add fp, jssp, #0x18 (24)
0xffff5821a264   100  ldr x10, pc+228 (addr 0x0000ffff5821a348)    ;; external reference (Isolate::js_entry_sp_address)
0xffff5821a268   104  ldr x11, [x10]
0xffff5821a26c   108  cbnz x11, #+0x18 (addr 0xffff5821a284)
0xffff5821a270   112  str fp, [x10]
0xffff5821a274   116  movz x12, #0x100000000
0xffff5821a278   120  sub csp, jssp, #0x8 (8)
0xffff5821a27c   124  str x12, [jssp, #-8]!
0xffff5821a280   128  b #+0xc (addr 0xffff5821a28c)
0xffff5821a284   132  sub csp, jssp, #0x8 (8)
0xffff5821a288   136  str xzr, [jssp, #-8]!
0xffff5821a28c   140  b #+0x14 (addr 0xffff5821a2a0)
0xffff5821a290   144  ldr x10, pc+192 (addr 0x0000ffff5821a350)    ;; external reference (Isolate::pending_exception_address)
0xffff5821a294   148  str x0, [x10]
0xffff5821a298   152  ldr x0, [x26, #344]
0xffff5821a29c   156  b #+0x40 (addr 0xffff5821a2dc)
0xffff5821a2a0   160  ldr x11, pc+184 (addr 0x0000ffff5821a358)    ;; external reference (Isolate::handler_address)
0xffff5821a2a4   164  ldr x10, [x11]
0xffff5821a2a8   168  sub csp, jssp, #0x8 (8)
0xffff5821a2ac   172  str x10, [jssp, #-8]!
0xffff5821a2b0   176  str jssp, [x11]
0xffff5821a2b4   180  ldr x10, pc+172 (addr 0x0000ffff5821a360)    ;; object: 0x39c04519 <the hole>
0xffff5821a2b8   184  ldr x11, pc+176 (addr 0x0000ffff5821a368)    ;; external reference (Isolate::pending_exception_address)
0xffff5821a2bc   188  str x10, [x11]
0xffff5821a2c0   192  ldr x10, pc+176 (addr 0x0000ffff5821a370)    ;; external reference (Builtins::JSConstructEntryTrampoline)
0xffff5821a2c4   196  ldr x11, [x10]
0xffff5821a2c8   200  add x12, x11, #0x5f (95)
0xffff5821a2cc   204  blr x12
0xffff5821a2d0   208  ldr x10, [jssp], #8
0xffff5821a2d4   212  ldr x11, pc+164 (addr 0x0000ffff5821a378)    ;; external reference (Isolate::handler_address)
0xffff5821a2d8   216  str x10, [x11]
0xffff5821a2dc   220  ldr x10, [jssp], #8
0xffff5821a2e0   224  movz x16, #0x100000000
0xffff5821a2e4   228  cmp x10, x16
0xffff5821a2e8   232  b.ne #+0xc (addr 0xffff5821a2f4)
0xffff5821a2ec   236  ldr x11, pc+148 (addr 0x0000ffff5821a380)    ;; external reference (Isolate::js_entry_sp_address)
0xffff5821a2f0   240  str xzr, [x11]
0xffff5821a2f4   244  ldr x10, [jssp], #8
0xffff5821a2f8   248  ldr x11, pc+144 (addr 0x0000ffff5821a388)    ;; external reference (Isolate::c_entry_fp_address)
0xffff5821a2fc   252  str x10, [x11]
0xffff5821a300   256  add jssp, jssp, #0x18 (24)
0xffff5821a304   260  mov csp, jssp
0xffff5821a308   264  ldp x19, x20, [csp], #16
0xffff5821a30c   268  ldp x21, x22, [csp], #16
0xffff5821a310   272  ldp x23, x24, [csp], #16
0xffff5821a314   276  ldp x25, x26, [csp], #16
0xffff5821a318   280  ldp cp, jssp, [csp], #16
0xffff5821a31c   284  ldp fp, lr, [csp], #16
0xffff5821a320   288  ldp d8, d9, [csp], #16
0xffff5821a324   292  ldp d10, d11, [csp], #16
0xffff5821a328   296  ldp d12, d13, [csp], #16
0xffff5821a32c   300  ldp d14, d15, [csp], #16
0xffff5821a330   304  ret
0xffff5821a334   308  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff5821a338   312  d63f03e0       constant
0xffff5821a33c   316  d503201f       constant
0xffff5821a340   320  16e79df8       constant
0xffff5821a344   324  00000000       constant
0xffff5821a348   328  16e79e18       constant
0xffff5821a34c   332  00000000       constant
0xffff5821a350   336  16e79da0       constant
0xffff5821a354   340  00000000       constant
0xffff5821a358   344  16e79e00       constant
0xffff5821a35c   348  00000000       constant
0xffff5821a360   352  39c04519       constant
0xffff5821a364   356  00000000       constant
0xffff5821a368   360  16e79da0       constant
0xffff5821a36c   364  00000000       constant
0xffff5821a370   368  16e7ab10       constant
0xffff5821a374   372  00000000       constant
0xffff5821a378   376  16e79e00       constant
0xffff5821a37c   380  00000000       constant
0xffff5821a380   384  16e79e18       constant
0xffff5821a384   388  00000000       constant
0xffff5821a388   392  16e79df8       constant
0xffff5821a38c   396  00000000       constant


Handler Table (size = 24)

RelocInfo (size = 27)
0xffff5821a24c  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff5821a264  external reference (Isolate::js_entry_sp_address)  (0x16e79e18)
0xffff5821a290  external reference (Isolate::pending_exception_address)  (0x16e79da0)
0xffff5821a2a0  external reference (Isolate::handler_address)  (0x16e79e00)
0xffff5821a2b4  embedded object  (0x39c04519 <the hole>)
0xffff5821a2b8  external reference (Isolate::pending_exception_address)  (0x16e79da0)
0xffff5821a2c0  external reference (Builtins::JSConstructEntryTrampoline)  (0x16e7ab10)
0xffff5821a2d4  external reference (Isolate::handler_address)  (0x16e79e00)
0xffff5821a2ec  external reference (Isolate::js_entry_sp_address)  (0x16e79e18)
0xffff5821a2f8  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff5821a334  constant pool (size 92)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ToObjectStub
compiler = crankshaft
Instructions (size = 333)
0xffff5821e440     0  tbz w0, #0, #+0x20 (addr 0xffff5821e460)
0xffff5821e444     4  ldur x1, [x0, #-1]
0xffff5821e448     8  ldrb w2, [x1, #11]
0xffff5821e44c    12  cmp w2, #0xb1 (177)
0xffff5821e450    16  b.ge #+0x5c (addr 0xffff5821e4ac)
0xffff5821e454    20  ldrb w1, [x1, #8]
0xffff5821e458    24  cbnz w1, #+0xc (addr 0xffff5821e464)
0xffff5821e45c    28  b #+0xdc (addr 0xffff5821e538)
0xffff5821e460    32  movz x1, #0x3f
0xffff5821e464    36  ldur x2, [cp, #39]
0xffff5821e468    40  add x3, x2, #0xf (15)
0xffff5821e46c    44  ldr x4, [x3, w1, sxtw #3]
0xffff5821e470    48  ldur x1, [x4, #23]
0xffff5821e474    52  movz x3, #0x92c0
0xffff5821e478    56  movk x3, #0x16e7, lsl #16
0xffff5821e47c    60  ldp x4, x2, [x3]
0xffff5821e480    64  adds x16, x4, #0x20 (32)
0xffff5821e484    68  ccmp x16, x2, #nzCv, lo
0xffff5821e488    72  b.hi #+0x28 (addr 0xffff5821e4b0)
0xffff5821e48c    76  str x16, [x3]
0xffff5821e490    80  orr x4, x4, #0x1
0xffff5821e494    84  stur x1, [x4, #-1]
0xffff5821e498    88  ldr x1, [x26, #304]
0xffff5821e49c    92  stur x1, [x4, #7]
0xffff5821e4a0    96  stur x1, [x4, #15]
0xffff5821e4a4   100  stur x0, [x4, #23]
0xffff5821e4a8   104  mov x0, x4
0xffff5821e4ac   108  ret
0xffff5821e4b0   112  sub csp, jssp, #0x10 (16)
0xffff5821e4b4   116  stp fp, lr, [jssp, #-16]!
0xffff5821e4b8   120  movz fp, #0xa00000000
0xffff5821e4bc   124  sub csp, jssp, #0x8 (8)
0xffff5821e4c0   128  str fp, [jssp, #-8]!
0xffff5821e4c4   132  add fp, jssp, #0x8 (8)
0xffff5821e4c8   136  movz x4, #0x0
0xffff5821e4cc   140  mov x16, lr
0xffff5821e4d0   144  ldr x17, pc+80 (addr 0x0000ffff5821e520)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5821e4d4   148  blr x17
0xffff5821e4d8   152  movz x0, #0x2000000000
0xffff5821e4dc   156  movz x10, #0x0
0xffff5821e4e0   160  sub csp, jssp, #0x10 (16)
0xffff5821e4e4   164  stp x10, x0, [jssp, #-16]!
0xffff5821e4e8   168  movz x0, #0x2
0xffff5821e4ec   172  movz x1, #0x5b88
0xffff5821e4f0   176  movk x1, #0xe2, lsl #16
0xffff5821e4f4   180  ldr x16, pc+52 (addr 0x0000ffff5821e528)    ;; code: STUB, CEntryStub, minor: 5
0xffff5821e4f8   184  blr x16
0xffff5821e4fc   188  str x0, [jssp, #32]
0xffff5821e500   192  ldr x16, pc+48 (addr 0x0000ffff5821e530)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5821e504   196  blr x16
0xffff5821e508   200  ldr lr, [jssp, #16]
0xffff5821e50c   204  ldp xzr, fp, [jssp], #24
0xffff5821e510   208  b #-0x7c (addr 0xffff5821e494)
0xffff5821e514   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5821e518   216  d63f03e0       constant
0xffff5821e51c   220  d503201f       constant
0xffff5821e520   224  58206820       constant
0xffff5821e524   228  0000ffff       constant
0xffff5821e528   232  58206260       constant
0xffff5821e52c   236  0000ffff       constant
0xffff5821e530   240  582068e0       constant
0xffff5821e534   244  0000ffff       constant
0xffff5821e538   248  movz x16, #0x0
0xffff5821e53c   252  sub csp, jssp, #0x10 (16)
0xffff5821e540   256  stp fp, lr, [jssp, #-16]!
0xffff5821e544   260  bl #+0x4 (addr 0xffff5821e548)
0xffff5821e548   264  movz x17, #0xa00000000
0xffff5821e54c   268  sub csp, jssp, #0x10 (16)
0xffff5821e550   272  stp x17, cp, [jssp, #-16]!
0xffff5821e554   276  add fp, jssp, #0x10 (16)
0xffff5821e558   280  ldr x17, pc+24 (addr 0x0000ffff5821e570)    ;; lazy deoptimization bailout 0
0xffff5821e55c   284  add x17, x17, x16
0xffff5821e560   288  br x17
0xffff5821e564   292  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5821e568   296  d63f03e0       constant
0xffff5821e56c   300  d503201f       constant
0xffff5821e570   304  58006000       constant
0xffff5821e574   308  0000ffff       constant


Safepoints (size = 21)
0xffff5821e4fc   188  000 | x0 | x1 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 21)
0xffff5821e4d0  code target (STUB)  (0xffff58206820)
0xffff5821e4f4  code target (STUB)  (0xffff58206260)
0xffff5821e500  code target (STUB)  (0xffff582068e0)
0xffff5821e514  constant pool (size 36)
0xffff5821e558  runtime entry
0xffff5821e564  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ToObjectStub
name = ToObjectStub
compiler = crankshaft
Instructions (size = 333)
0xffff5821e440     0  tbz w0, #0, #+0x20 (addr 0xffff5821e460)
0xffff5821e444     4  ldur x1, [x0, #-1]
0xffff5821e448     8  ldrb w2, [x1, #11]
0xffff5821e44c    12  cmp w2, #0xb1 (177)
0xffff5821e450    16  b.ge #+0x5c (addr 0xffff5821e4ac)
0xffff5821e454    20  ldrb w1, [x1, #8]
0xffff5821e458    24  cbnz w1, #+0xc (addr 0xffff5821e464)
0xffff5821e45c    28  b #+0xdc (addr 0xffff5821e538)
0xffff5821e460    32  movz x1, #0x3f
0xffff5821e464    36  ldur x2, [cp, #39]
0xffff5821e468    40  add x3, x2, #0xf (15)
0xffff5821e46c    44  ldr x4, [x3, w1, sxtw #3]
0xffff5821e470    48  ldur x1, [x4, #23]
0xffff5821e474    52  movz x3, #0x92c0
0xffff5821e478    56  movk x3, #0x16e7, lsl #16
0xffff5821e47c    60  ldp x4, x2, [x3]
0xffff5821e480    64  adds x16, x4, #0x20 (32)
0xffff5821e484    68  ccmp x16, x2, #nzCv, lo
0xffff5821e488    72  b.hi #+0x28 (addr 0xffff5821e4b0)
0xffff5821e48c    76  str x16, [x3]
0xffff5821e490    80  orr x4, x4, #0x1
0xffff5821e494    84  stur x1, [x4, #-1]
0xffff5821e498    88  ldr x1, [x26, #304]
0xffff5821e49c    92  stur x1, [x4, #7]
0xffff5821e4a0    96  stur x1, [x4, #15]
0xffff5821e4a4   100  stur x0, [x4, #23]
0xffff5821e4a8   104  mov x0, x4
0xffff5821e4ac   108  ret
0xffff5821e4b0   112  sub csp, jssp, #0x10 (16)
0xffff5821e4b4   116  stp fp, lr, [jssp, #-16]!
0xffff5821e4b8   120  movz fp, #0xa00000000
0xffff5821e4bc   124  sub csp, jssp, #0x8 (8)
0xffff5821e4c0   128  str fp, [jssp, #-8]!
0xffff5821e4c4   132  add fp, jssp, #0x8 (8)
0xffff5821e4c8   136  movz x4, #0x0
0xffff5821e4cc   140  mov x16, lr
0xffff5821e4d0   144  ldr x17, pc+80 (addr 0x0000ffff5821e520)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5821e4d4   148  blr x17
0xffff5821e4d8   152  movz x0, #0x2000000000
0xffff5821e4dc   156  movz x10, #0x0
0xffff5821e4e0   160  sub csp, jssp, #0x10 (16)
0xffff5821e4e4   164  stp x10, x0, [jssp, #-16]!
0xffff5821e4e8   168  movz x0, #0x2
0xffff5821e4ec   172  movz x1, #0x5b88
0xffff5821e4f0   176  movk x1, #0xe2, lsl #16
0xffff5821e4f4   180  ldr x16, pc+52 (addr 0x0000ffff5821e528)    ;; code: STUB, CEntryStub, minor: 5
0xffff5821e4f8   184  blr x16
0xffff5821e4fc   188  str x0, [jssp, #32]
0xffff5821e500   192  ldr x16, pc+48 (addr 0x0000ffff5821e530)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5821e504   196  blr x16
0xffff5821e508   200  ldr lr, [jssp, #16]
0xffff5821e50c   204  ldp xzr, fp, [jssp], #24
0xffff5821e510   208  b #-0x7c (addr 0xffff5821e494)
0xffff5821e514   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5821e518   216  d63f03e0       constant
0xffff5821e51c   220  d503201f       constant
0xffff5821e520   224  58206820       constant
0xffff5821e524   228  0000ffff       constant
0xffff5821e528   232  58206260       constant
0xffff5821e52c   236  0000ffff       constant
0xffff5821e530   240  582068e0       constant
0xffff5821e534   244  0000ffff       constant
0xffff5821e538   248  movz x16, #0x0
0xffff5821e53c   252  sub csp, jssp, #0x10 (16)
0xffff5821e540   256  stp fp, lr, [jssp, #-16]!
0xffff5821e544   260  bl #+0x4 (addr 0xffff5821e548)
0xffff5821e548   264  movz x17, #0xa00000000
0xffff5821e54c   268  sub csp, jssp, #0x10 (16)
0xffff5821e550   272  stp x17, cp, [jssp, #-16]!
0xffff5821e554   276  add fp, jssp, #0x10 (16)
0xffff5821e558   280  ldr x17, pc+24 (addr 0x0000ffff5821e570)    ;; lazy deoptimization bailout 0
0xffff5821e55c   284  add x17, x17, x16
0xffff5821e560   288  br x17
0xffff5821e564   292  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5821e568   296  d63f03e0       constant
0xffff5821e56c   300  d503201f       constant
0xffff5821e570   304  58006000       constant
0xffff5821e574   308  0000ffff       constant


Safepoints (size = 21)
0xffff5821e4fc   188  000 | x0 | x1 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 21)
0xffff5821e4d0  code target (STUB)  (0xffff58206820)
0xffff5821e4f4  code target (STUB)  (0xffff58206260)
0xffff5821e500  code target (STUB)  (0xffff582068e0)
0xffff5821e514  constant pool (size 36)
0xffff5821e558  runtime entry
0xffff5821e564  constant pool (size 20)


kind = STUB
major_key = FastNewObjectStub
name = FastNewObjectStub
compiler = unknown
Instructions (size = 544)
0xffff58220680     0  ldur x2, [x3, #-1]
0xffff58220684     4  ldrb w2, [x2, #11]
0xffff58220688     8  cmp x2, #0xc9 (201)
0xffff5822068c    12  b.ne #+0x1a8 (addr 0xffff58220834)
0xffff58220690    16  ldur x2, [x3, #23]
0xffff58220694    20  tbz w2, #0, #+0x1a0 (addr 0xffff58220834)
0xffff58220698    24  ldur x0, [x2, #-1]
0xffff5822069c    28  ldrb w0, [x0, #11]
0xffff582206a0    32  cmp x0, #0x84 (132)
0xffff582206a4    36  b.ne #+0x190 (addr 0xffff58220834)
0xffff582206a8    40  ldur x0, [x2, #31]
0xffff582206ac    44  cmp x0, x1
0xffff582206b0    48  b.ne #+0x184 (addr 0xffff58220834)
0xffff582206b4    52  ldrb w4, [x2, #7]
0xffff582206b8    56  ldr x6, pc+416 (addr 0x0000ffff58220858)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff582206bc    60  ldp x0, x16, [x6]
0xffff582206c0    64  adds x5, x0, x4, lsl #3
0xffff582206c4    68  ccmp x5, x16, #nzCv, lo
0xffff582206c8    72  b.hi #+0x110 (addr 0xffff582207d8)
0xffff582206cc    76  str x5, [x6]
0xffff582206d0    80  mov x1, x0
0xffff582206d4    84  str x2, [x1], #8
0xffff582206d8    88  ldr x3, [x26, #304]
0xffff582206dc    92  stp x3, x3, [x1], #16
0xffff582206e0    96  ldr x6, [x26, #40]
0xffff582206e4   100  ldur w3, [x2, #15]
0xffff582206e8   104  tst w3, #0xe0000000
0xffff582206ec   108  b.ne #+0x30 (addr 0xffff5822071c)
0xffff582206f0   112  subs x16, x5, x1
0xffff582206f4   116  b.le #+0x20 (addr 0xffff58220714)
0xffff582206f8   120  str x6, [x1]
0xffff582206fc   124  and x16, x16, #0x8
0xffff58220700   128  add x1, x1, x16
0xffff58220704   132  b #+0x8 (addr 0xffff5822070c)
0xffff58220708   136  stp x6, x6, [x1], #16
0xffff5822070c   140  cmp x1, x5
0xffff58220710   144  b.lo #-0x8 (addr 0xffff58220708)
0xffff58220714   148  add x0, x0, #0x1 (1)
0xffff58220718   152  ret
0xffff5822071c   156  movz w16, #0x20000000
0xffff58220720   160  sub w3, w3, w16
0xffff58220724   164  stur w3, [x2, #15]
0xffff58220728   168  ldrb w4, [x2, #14]
0xffff5822072c   172  sub x4, x5, x4, lsl #3
0xffff58220730   176  subs x16, x4, x1
0xffff58220734   180  b.le #+0x20 (addr 0xffff58220754)
0xffff58220738   184  str x6, [x1]
0xffff5822073c   188  and x16, x16, #0x8
0xffff58220740   192  add x1, x1, x16
0xffff58220744   196  b #+0x8 (addr 0xffff5822074c)
0xffff58220748   200  stp x6, x6, [x1], #16
0xffff5822074c   204  cmp x1, x4
0xffff58220750   208  b.lo #-0x8 (addr 0xffff58220748)
0xffff58220754   212  ldr x6, [x26, #16]
0xffff58220758   216  subs x16, x5, x1
0xffff5822075c   220  b.le #+0x20 (addr 0xffff5822077c)
0xffff58220760   224  str x6, [x1]
0xffff58220764   228  and x16, x16, #0x8
0xffff58220768   232  add x1, x1, x16
0xffff5822076c   236  b #+0x8 (addr 0xffff58220774)
0xffff58220770   240  stp x6, x6, [x1], #16
0xffff58220774   244  cmp x1, x5
0xffff58220778   248  b.lo #-0x8 (addr 0xffff58220770)
0xffff5822077c   252  add x0, x0, #0x1 (1)
0xffff58220780   256  tst w3, #0xe0000000
0xffff58220784   260  b.eq #+0x8 (addr 0xffff5822078c)
0xffff58220788   264  ret
0xffff5822078c   268  movz x16, #0xc00000000
0xffff58220790   272  sub csp, jssp, #0x10 (16)
0xffff58220794   276  stp fp, lr, [jssp, #-16]!
0xffff58220798   280  sub csp, jssp, #0x10 (16)
0xffff5822079c   284  str x16, [jssp, #-8]!
0xffff582207a0   288  ldr x17, pc+192 (addr 0x0000ffff58220860)    ;; object: 0xffff58220621 <Code: STUB>
0xffff582207a4   292  sub csp, jssp, #0x10 (16)
0xffff582207a8   296  str x17, [jssp, #-8]!
0xffff582207ac   300  add fp, jssp, #0x10 (16)
0xffff582207b0   304  sub csp, jssp, #0x10 (16)
0xffff582207b4   308  stp x2, x0, [jssp, #-16]!
0xffff582207b8   312  movz x0, #0x1
0xffff582207bc   316  ldr x1, pc+172 (addr 0x0000ffff58220868)    ;; external reference (Runtime::FinalizeInstanceSize)
0xffff582207c0   320  ldr x16, pc+176 (addr 0x0000ffff58220870)    ;; code: STUB, CEntryStub, minor: 4
0xffff582207c4   324  blr x16
0xffff582207c8   328  ldr x0, [jssp], #8
0xffff582207cc   332  mov jssp, fp
0xffff582207d0   336  ldp fp, lr, [jssp], #16
0xffff582207d4   340  ret
0xffff582207d8   344  movz x16, #0xc00000000
0xffff582207dc   348  sub csp, jssp, #0x10 (16)
0xffff582207e0   352  stp fp, lr, [jssp, #-16]!
0xffff582207e4   356  sub csp, jssp, #0x10 (16)
0xffff582207e8   360  str x16, [jssp, #-8]!
0xffff582207ec   364  ldr x17, pc+140 (addr 0x0000ffff58220878)    ;; object: 0xffff58220621 <Code: STUB>
0xffff582207f0   368  sub csp, jssp, #0x10 (16)
0xffff582207f4   372  str x17, [jssp, #-8]!
0xffff582207f8   376  add fp, jssp, #0x10 (16)
0xffff582207fc   380  lsl x4, x4, #35
0xffff58220800   384  sub csp, jssp, #0x10 (16)
0xffff58220804   388  stp x4, x2, [jssp, #-16]!
0xffff58220808   392  movz x0, #0x1
0xffff5822080c   396  ldr x1, pc+116 (addr 0x0000ffff58220880)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff58220810   400  ldr x16, pc+120 (addr 0x0000ffff58220888)    ;; code: STUB, CEntryStub, minor: 4
0xffff58220814   404  blr x16
0xffff58220818   408  ldr x2, [jssp], #8
0xffff5822081c   412  mov jssp, fp
0xffff58220820   416  ldp fp, lr, [jssp], #16
0xffff58220824   420  sub x0, x0, #0x1 (1)
0xffff58220828   424  ldrb w5, [x2, #7]
0xffff5822082c   428  add x5, x0, x5, lsl #3
0xffff58220830   432  b #-0x160 (addr 0xffff582206d0)
0xffff58220834   436  sub csp, jssp, #0x10 (16)
0xffff58220838   440  stp x3, x1, [jssp, #-16]!
0xffff5822083c   444  movz x0, #0x2
0xffff58220840   448  ldr x1, pc+80 (addr 0x0000ffff58220890)    ;; external reference (Runtime::NewObject)
0xffff58220844   452  ldr x16, pc+84 (addr 0x0000ffff58220898)    ;; code: STUB, CEntryStub, minor: 4
0xffff58220848   456  br x16
0xffff5822084c   460  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff58220850   464  d63f03e0       constant
0xffff58220854   468  d503201f       constant
0xffff58220858   472  16e792c0       constant
0xffff5822085c   476  00000000       constant
0xffff58220860   480  58220621       constant
0xffff58220864   484  0000ffff       constant
0xffff58220868   488  00e450e0       constant
0xffff5822086c   492  00000000       constant
0xffff58220870   496  58206060       constant
0xffff58220874   500  0000ffff       constant
0xffff58220878   504  58220621       constant
0xffff5822087c   508  0000ffff       constant
0xffff58220880   512  00e25898       constant
0xffff58220884   516  00000000       constant
0xffff58220888   520  58206060       constant
0xffff5822088c   524  0000ffff       constant
0xffff58220890   528  00e44dc0       constant
0xffff58220894   532  00000000       constant
0xffff58220898   536  58206060       constant
0xffff5822089c   540  0000ffff       constant


RelocInfo (size = 21)
0xffff582206b8  external reference (Heap::NewSpaceAllocationTopAddress())  (0x16e792c0)
0xffff582207a0  embedded object  (0xffff58220621 <Code: STUB>)
0xffff582207bc  external reference (Runtime::FinalizeInstanceSize)  (0xe450e0)
0xffff582207c0  code target (STUB)  (0xffff58206060)
0xffff582207ec  embedded object  (0xffff58220621 <Code: STUB>)
0xffff5822080c  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff58220810  code target (STUB)  (0xffff58206060)
0xffff58220840  external reference (Runtime::NewObject)  (0xe44dc0)
0xffff58220844  code target (STUB)  (0xffff58206060)
0xffff5822084c  constant pool (size 84)


kind = STUB
major_key = NameDictionaryLookupStub
name = NameDictionaryLookupStub
compiler = unknown
Instructions (size = 616)
0xffff58222620     0  ldursw x3, [x0, #35]
0xffff58222624     4  sub x3, x3, #0x1 (1)
0xffff58222628     8  ldur x4, [x1, #7]
0xffff5822262c    12  ldr x5, [x26, #40]
0xffff58222630    16  add x2, x4, #0x28 (40)
0xffff58222634    20  and x2, x3, x2, lsr #2
0xffff58222638    24  add x2, x2, x2, lsl #1
0xffff5822263c    28  add x2, x0, x2, lsl #3
0xffff58222640    32  ldur x6, [x2, #55]
0xffff58222644    36  cmp x6, x5
0xffff58222648    40  b.eq #+0x238 (addr 0xffff58222880)
0xffff5822264c    44  cmp x6, x1
0xffff58222650    48  b.eq #+0x228 (addr 0xffff58222878)
0xffff58222654    52  add x2, x4, #0x3c (60)
0xffff58222658    56  and x2, x3, x2, lsr #2
0xffff5822265c    60  add x2, x2, x2, lsl #1
0xffff58222660    64  add x2, x0, x2, lsl #3
0xffff58222664    68  ldur x6, [x2, #55]
0xffff58222668    72  cmp x6, x5
0xffff5822266c    76  b.eq #+0x214 (addr 0xffff58222880)
0xffff58222670    80  cmp x6, x1
0xffff58222674    84  b.eq #+0x204 (addr 0xffff58222878)
0xffff58222678    88  add x2, x4, #0x54 (84)
0xffff5822267c    92  and x2, x3, x2, lsr #2
0xffff58222680    96  add x2, x2, x2, lsl #1
0xffff58222684   100  add x2, x0, x2, lsl #3
0xffff58222688   104  ldur x6, [x2, #55]
0xffff5822268c   108  cmp x6, x5
0xffff58222690   112  b.eq #+0x1f0 (addr 0xffff58222880)
0xffff58222694   116  cmp x6, x1
0xffff58222698   120  b.eq #+0x1e0 (addr 0xffff58222878)
0xffff5822269c   124  add x2, x4, #0x70 (112)
0xffff582226a0   128  and x2, x3, x2, lsr #2
0xffff582226a4   132  add x2, x2, x2, lsl #1
0xffff582226a8   136  add x2, x0, x2, lsl #3
0xffff582226ac   140  ldur x6, [x2, #55]
0xffff582226b0   144  cmp x6, x5
0xffff582226b4   148  b.eq #+0x1cc (addr 0xffff58222880)
0xffff582226b8   152  cmp x6, x1
0xffff582226bc   156  b.eq #+0x1bc (addr 0xffff58222878)
0xffff582226c0   160  add x2, x4, #0x90 (144)
0xffff582226c4   164  and x2, x3, x2, lsr #2
0xffff582226c8   168  add x2, x2, x2, lsl #1
0xffff582226cc   172  add x2, x0, x2, lsl #3
0xffff582226d0   176  ldur x6, [x2, #55]
0xffff582226d4   180  cmp x6, x5
0xffff582226d8   184  b.eq #+0x1a8 (addr 0xffff58222880)
0xffff582226dc   188  cmp x6, x1
0xffff582226e0   192  b.eq #+0x198 (addr 0xffff58222878)
0xffff582226e4   196  add x2, x4, #0xb4 (180)
0xffff582226e8   200  and x2, x3, x2, lsr #2
0xffff582226ec   204  add x2, x2, x2, lsl #1
0xffff582226f0   208  add x2, x0, x2, lsl #3
0xffff582226f4   212  ldur x6, [x2, #55]
0xffff582226f8   216  cmp x6, x5
0xffff582226fc   220  b.eq #+0x184 (addr 0xffff58222880)
0xffff58222700   224  cmp x6, x1
0xffff58222704   228  b.eq #+0x174 (addr 0xffff58222878)
0xffff58222708   232  add x2, x4, #0xdc (220)
0xffff5822270c   236  and x2, x3, x2, lsr #2
0xffff58222710   240  add x2, x2, x2, lsl #1
0xffff58222714   244  add x2, x0, x2, lsl #3
0xffff58222718   248  ldur x6, [x2, #55]
0xffff5822271c   252  cmp x6, x5
0xffff58222720   256  b.eq #+0x160 (addr 0xffff58222880)
0xffff58222724   260  cmp x6, x1
0xffff58222728   264  b.eq #+0x150 (addr 0xffff58222878)
0xffff5822272c   268  add x2, x4, #0x108 (264)
0xffff58222730   272  and x2, x3, x2, lsr #2
0xffff58222734   276  add x2, x2, x2, lsl #1
0xffff58222738   280  add x2, x0, x2, lsl #3
0xffff5822273c   284  ldur x6, [x2, #55]
0xffff58222740   288  cmp x6, x5
0xffff58222744   292  b.eq #+0x13c (addr 0xffff58222880)
0xffff58222748   296  cmp x6, x1
0xffff5822274c   300  b.eq #+0x12c (addr 0xffff58222878)
0xffff58222750   304  add x2, x4, #0x138 (312)
0xffff58222754   308  and x2, x3, x2, lsr #2
0xffff58222758   312  add x2, x2, x2, lsl #1
0xffff5822275c   316  add x2, x0, x2, lsl #3
0xffff58222760   320  ldur x6, [x2, #55]
0xffff58222764   324  cmp x6, x5
0xffff58222768   328  b.eq #+0x118 (addr 0xffff58222880)
0xffff5822276c   332  cmp x6, x1
0xffff58222770   336  b.eq #+0x108 (addr 0xffff58222878)
0xffff58222774   340  add x2, x4, #0x16c (364)
0xffff58222778   344  and x2, x3, x2, lsr #2
0xffff5822277c   348  add x2, x2, x2, lsl #1
0xffff58222780   352  add x2, x0, x2, lsl #3
0xffff58222784   356  ldur x6, [x2, #55]
0xffff58222788   360  cmp x6, x5
0xffff5822278c   364  b.eq #+0xf4 (addr 0xffff58222880)
0xffff58222790   368  cmp x6, x1
0xffff58222794   372  b.eq #+0xe4 (addr 0xffff58222878)
0xffff58222798   376  add x2, x4, #0x1a4 (420)
0xffff5822279c   380  and x2, x3, x2, lsr #2
0xffff582227a0   384  add x2, x2, x2, lsl #1
0xffff582227a4   388  add x2, x0, x2, lsl #3
0xffff582227a8   392  ldur x6, [x2, #55]
0xffff582227ac   396  cmp x6, x5
0xffff582227b0   400  b.eq #+0xd0 (addr 0xffff58222880)
0xffff582227b4   404  cmp x6, x1
0xffff582227b8   408  b.eq #+0xc0 (addr 0xffff58222878)
0xffff582227bc   412  add x2, x4, #0x1e0 (480)
0xffff582227c0   416  and x2, x3, x2, lsr #2
0xffff582227c4   420  add x2, x2, x2, lsl #1
0xffff582227c8   424  add x2, x0, x2, lsl #3
0xffff582227cc   428  ldur x6, [x2, #55]
0xffff582227d0   432  cmp x6, x5
0xffff582227d4   436  b.eq #+0xac (addr 0xffff58222880)
0xffff582227d8   440  cmp x6, x1
0xffff582227dc   444  b.eq #+0x9c (addr 0xffff58222878)
0xffff582227e0   448  add x2, x4, #0x220 (544)
0xffff582227e4   452  and x2, x3, x2, lsr #2
0xffff582227e8   456  add x2, x2, x2, lsl #1
0xffff582227ec   460  add x2, x0, x2, lsl #3
0xffff582227f0   464  ldur x6, [x2, #55]
0xffff582227f4   468  cmp x6, x5
0xffff582227f8   472  b.eq #+0x88 (addr 0xffff58222880)
0xffff582227fc   476  cmp x6, x1
0xffff58222800   480  b.eq #+0x78 (addr 0xffff58222878)
0xffff58222804   484  add x2, x4, #0x264 (612)
0xffff58222808   488  and x2, x3, x2, lsr #2
0xffff5822280c   492  add x2, x2, x2, lsl #1
0xffff58222810   496  add x2, x0, x2, lsl #3
0xffff58222814   500  ldur x6, [x2, #55]
0xffff58222818   504  cmp x6, x5
0xffff5822281c   508  b.eq #+0x64 (addr 0xffff58222880)
0xffff58222820   512  cmp x6, x1
0xffff58222824   516  b.eq #+0x54 (addr 0xffff58222878)
0xffff58222828   520  add x2, x4, #0x2ac (684)
0xffff5822282c   524  and x2, x3, x2, lsr #2
0xffff58222830   528  add x2, x2, x2, lsl #1
0xffff58222834   532  add x2, x0, x2, lsl #3
0xffff58222838   536  ldur x6, [x2, #55]
0xffff5822283c   540  cmp x6, x5
0xffff58222840   544  b.eq #+0x40 (addr 0xffff58222880)
0xffff58222844   548  cmp x6, x1
0xffff58222848   552  b.eq #+0x30 (addr 0xffff58222878)
0xffff5822284c   556  add x2, x4, #0x2f8 (760)
0xffff58222850   560  and x2, x3, x2, lsr #2
0xffff58222854   564  add x2, x2, x2, lsl #1
0xffff58222858   568  add x2, x0, x2, lsl #3
0xffff5822285c   572  ldur x6, [x2, #55]
0xffff58222860   576  cmp x6, x5
0xffff58222864   580  b.eq #+0x1c (addr 0xffff58222880)
0xffff58222868   584  cmp x6, x1
0xffff5822286c   588  b.eq #+0xc (addr 0xffff58222878)
0xffff58222870   592  movz x0, #0x0
0xffff58222874   596  ret
0xffff58222878   600  movz x0, #0x1
0xffff5822287c   604  ret
0xffff58222880   608  movz x0, #0x0
0xffff58222884   612  ret


RelocInfo (size = 0)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff58222f80     0  adr xzr, #+0x40 (addr 0xffff58222fc0)
0xffff58222f84     4  adr xzr, #+0x2a8 (addr 0xffff5822322c)
0xffff58222f88     8  ldr x16, pc+1368 (addr 0x0000ffff582234e0)    ;; external reference (store_buffer_top)
0xffff58222f8c    12  ldr x10, [x16]
0xffff58222f90    16  str x11, [x10], #8
0xffff58222f94    20  str x10, [x16]
0xffff58222f98    24  tst x10, #0x1ffff
0xffff58222f9c    28  b.eq #+0x8 (addr 0xffff58222fa4)
0xffff58222fa0    32  ret
0xffff58222fa4    36  sub csp, jssp, #0x8 (8)
0xffff58222fa8    40  str lr, [jssp, #-8]!
0xffff58222fac    44  ldr x17, pc+1340 (addr 0x0000ffff582234e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58222fb0    48  blr x17
0xffff58222fb4    52  ldr lr, [jssp], #8
0xffff58222fb8    56  ret
0xffff58222fbc    60  ret
0xffff58222fc0    64  sub csp, jssp, #0x10 (16)
0xffff58222fc4    68  stp x1, x0, [jssp, #-16]!
0xffff58222fc8    72  ldr x10, [x11]
0xffff58222fcc    76  and x16, x10, #0xfffffffffff00000
0xffff58222fd0    80  ldr x16, [x16, #8]
0xffff58222fd4    84  tst x16, #0x18
0xffff58222fd8    88  b.eq #+0x17c (addr 0xffff58223154)
0xffff58222fdc    92  and x16, x4, #0xfffffffffff00000
0xffff58222fe0    96  ldr x16, [x16, #8]
0xffff58222fe4   100  tst x16, #0x18
0xffff58222fe8   104  b.ne #+0x16c (addr 0xffff58223154)
0xffff58222fec   108  and x10, x4, #0xfffffffffff00000
0xffff58222ff0   112  ldr x0, [x10, #104]
0xffff58222ff4   116  subs x0, x0, #0x1 (1)
0xffff58222ff8   120  str x0, [x10, #104]
0xffff58222ffc   124  b.mi #+0xc4 (addr 0xffff582230c0)
0xffff58223000   128  ubfx x16, x4, #8, #12
0xffff58223004   132  and x10, x4, #0xfffffffffff00000
0xffff58223008   136  add x10, x10, x16, lsl #2
0xffff5822300c   140  ubfx x0, x4, #3, #5
0xffff58223010   144  ldr x10, [x10, #360]
0xffff58223014   148  lsr x10, x10, x0
0xffff58223018   152  tbz w10, #0, #+0x8 (addr 0xffff58223020)
0xffff5822301c   156  tbnz w10, #1, #+0x3c (addr 0xffff58223058)
0xffff58223020   160  ldp x1, x0, [jssp], #16
0xffff58223024   164  ldr x16, pc+1228 (addr 0x0000ffff582234f0)    ;; external reference (store_buffer_top)
0xffff58223028   168  ldr x10, [x16]
0xffff5822302c   172  str x11, [x10], #8
0xffff58223030   176  str x10, [x16]
0xffff58223034   180  tst x10, #0x1ffff
0xffff58223038   184  b.eq #+0x8 (addr 0xffff58223040)
0xffff5822303c   188  ret
0xffff58223040   192  sub csp, jssp, #0x8 (8)
0xffff58223044   196  str lr, [jssp, #-8]!
0xffff58223048   200  ldr x17, pc+1200 (addr 0x0000ffff582234f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822304c   204  blr x17
0xffff58223050   208  ldr lr, [jssp], #8
0xffff58223054   212  ret
0xffff58223058   216  ldr x10, [x11]
0xffff5822305c   220  sub csp, jssp, #0x10 (16)
0xffff58223060   224  stp x4, x11, [jssp, #-16]!
0xffff58223064   228  ubfx x16, x10, #8, #12
0xffff58223068   232  and x0, x10, #0xfffffffffff00000
0xffff5822306c   236  add x0, x0, x16, lsl #2
0xffff58223070   240  ubfx x4, x10, #3, #5
0xffff58223074   244  ldr x11, [x0, #360]
0xffff58223078   248  lsr x11, x11, x4
0xffff5822307c   252  tbz w11, #0, #+0x40 (addr 0xffff582230bc)
0xffff58223080   256  ldp x4, x11, [jssp], #16
0xffff58223084   260  ldp x1, x0, [jssp], #16
0xffff58223088   264  ldr x16, pc+1144 (addr 0x0000ffff58223500)    ;; external reference (store_buffer_top)
0xffff5822308c   268  ldr x10, [x16]
0xffff58223090   272  str x11, [x10], #8
0xffff58223094   276  str x10, [x16]
0xffff58223098   280  tst x10, #0x1ffff
0xffff5822309c   284  b.eq #+0x8 (addr 0xffff582230a4)
0xffff582230a0   288  ret
0xffff582230a4   292  sub csp, jssp, #0x8 (8)
0xffff582230a8   296  str lr, [jssp, #-8]!
0xffff582230ac   300  ldr x17, pc+1116 (addr 0x0000ffff58223508)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582230b0   304  blr x17
0xffff582230b4   308  ldr lr, [jssp], #8
0xffff582230b8   312  ret
0xffff582230bc   316  ldp x4, x11, [jssp], #16
0xffff582230c0   320  sub csp, jssp, #0x78 (120)
0xffff582230c4   324  stp x14, x15, [jssp, #-32]!
0xffff582230c8   328  stp x18, lr, [jssp, #16]
0xffff582230cc   332  stp x9, x11, [jssp, #-32]!
0xffff582230d0   336  stp x12, x13, [jssp, #16]
0xffff582230d4   340  stp x5, x6, [jssp, #-32]!
0xffff582230d8   344  stp x7, x8, [jssp, #16]
0xffff582230dc   348  stp x2, x3, [jssp, #-24]!
0xffff582230e0   352  str x4, [jssp, #16]
0xffff582230e4   356  mov x0, x4
0xffff582230e8   360  mov x1, x11
0xffff582230ec   364  ldr x2, pc+1060 (addr 0x0000ffff58223510)    ;; external reference (isolate)
0xffff582230f0   368  ldr x16, pc+1064 (addr 0x0000ffff58223518)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582230f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff582230f8   376  blr x16
0xffff582230fc   380  ldp x4, x5, [jssp, #16]
0xffff58223100   384  ldp x2, x3, [jssp], #32
0xffff58223104   388  ldp x8, x9, [jssp, #16]
0xffff58223108   392  ldp x6, x7, [jssp], #32
0xffff5822310c   396  ldp x13, x14, [jssp, #16]
0xffff58223110   400  ldp x11, x12, [jssp], #32
0xffff58223114   404  ldr lr, [jssp, #16]
0xffff58223118   408  ldp x15, x18, [jssp], #24
0xffff5822311c   412  ldp x1, x0, [jssp], #16
0xffff58223120   416  ldr x16, pc+1024 (addr 0x0000ffff58223520)    ;; external reference (store_buffer_top)
0xffff58223124   420  ldr x10, [x16]
0xffff58223128   424  str x11, [x10], #8
0xffff5822312c   428  str x10, [x16]
0xffff58223130   432  tst x10, #0x1ffff
0xffff58223134   436  b.eq #+0x8 (addr 0xffff5822313c)
0xffff58223138   440  ret
0xffff5822313c   444  sub csp, jssp, #0x8 (8)
0xffff58223140   448  str lr, [jssp, #-8]!
0xffff58223144   452  ldr x17, pc+996 (addr 0x0000ffff58223528)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58223148   456  blr x17
0xffff5822314c   460  ldr lr, [jssp], #8
0xffff58223150   464  ret
0xffff58223154   468  and x10, x4, #0xfffffffffff00000
0xffff58223158   472  ldr x0, [x10, #104]
0xffff5822315c   476  subs x0, x0, #0x1 (1)
0xffff58223160   480  str x0, [x10, #104]
0xffff58223164   484  b.mi #+0x64 (addr 0xffff582231c8)
0xffff58223168   488  ubfx x16, x4, #8, #12
0xffff5822316c   492  and x10, x4, #0xfffffffffff00000
0xffff58223170   496  add x10, x10, x16, lsl #2
0xffff58223174   500  ubfx x0, x4, #3, #5
0xffff58223178   504  ldr x10, [x10, #360]
0xffff5822317c   508  lsr x10, x10, x0
0xffff58223180   512  tbz w10, #0, #+0x8 (addr 0xffff58223188)
0xffff58223184   516  tbnz w10, #1, #+0xc (addr 0xffff58223190)
0xffff58223188   520  ldp x1, x0, [jssp], #16
0xffff5822318c   524  ret
0xffff58223190   528  ldr x10, [x11]
0xffff58223194   532  sub csp, jssp, #0x10 (16)
0xffff58223198   536  stp x4, x11, [jssp, #-16]!
0xffff5822319c   540  ubfx x16, x10, #8, #12
0xffff582231a0   544  and x0, x10, #0xfffffffffff00000
0xffff582231a4   548  add x0, x0, x16, lsl #2
0xffff582231a8   552  ubfx x4, x10, #3, #5
0xffff582231ac   556  ldr x11, [x0, #360]
0xffff582231b0   560  lsr x11, x11, x4
0xffff582231b4   564  tbz w11, #0, #+0x10 (addr 0xffff582231c4)
0xffff582231b8   568  ldp x4, x11, [jssp], #16
0xffff582231bc   572  ldp x1, x0, [jssp], #16
0xffff582231c0   576  ret
0xffff582231c4   580  ldp x4, x11, [jssp], #16
0xffff582231c8   584  sub csp, jssp, #0x78 (120)
0xffff582231cc   588  stp x14, x15, [jssp, #-32]!
0xffff582231d0   592  stp x18, lr, [jssp, #16]
0xffff582231d4   596  stp x9, x11, [jssp, #-32]!
0xffff582231d8   600  stp x12, x13, [jssp, #16]
0xffff582231dc   604  stp x5, x6, [jssp, #-32]!
0xffff582231e0   608  stp x7, x8, [jssp, #16]
0xffff582231e4   612  stp x2, x3, [jssp, #-24]!
0xffff582231e8   616  str x4, [jssp, #16]
0xffff582231ec   620  mov x0, x4
0xffff582231f0   624  mov x1, x11
0xffff582231f4   628  ldr x2, pc+828 (addr 0x0000ffff58223530)    ;; external reference (isolate)
0xffff582231f8   632  ldr x16, pc+832 (addr 0x0000ffff58223538)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582231fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff58223200   640  blr x16
0xffff58223204   644  ldp x4, x5, [jssp, #16]
0xffff58223208   648  ldp x2, x3, [jssp], #32
0xffff5822320c   652  ldp x8, x9, [jssp, #16]
0xffff58223210   656  ldp x6, x7, [jssp], #32
0xffff58223214   660  ldp x13, x14, [jssp, #16]
0xffff58223218   664  ldp x11, x12, [jssp], #32
0xffff5822321c   668  ldr lr, [jssp, #16]
0xffff58223220   672  ldp x15, x18, [jssp], #24
0xffff58223224   676  ldp x1, x0, [jssp], #16
0xffff58223228   680  ret
0xffff5822322c   684  sub csp, jssp, #0x10 (16)
0xffff58223230   688  stp x1, x0, [jssp, #-16]!
0xffff58223234   692  ldr x10, [x11]
0xffff58223238   696  and x16, x10, #0xfffffffffff00000
0xffff5822323c   700  ldr x16, [x16, #8]
0xffff58223240   704  tst x16, #0x18
0xffff58223244   708  b.eq #+0x19c (addr 0xffff582233e0)
0xffff58223248   712  and x16, x4, #0xfffffffffff00000
0xffff5822324c   716  ldr x16, [x16, #8]
0xffff58223250   720  tst x16, #0x18
0xffff58223254   724  b.ne #+0x18c (addr 0xffff582233e0)
0xffff58223258   728  and x10, x4, #0xfffffffffff00000
0xffff5822325c   732  ldr x0, [x10, #104]
0xffff58223260   736  subs x0, x0, #0x1 (1)
0xffff58223264   740  str x0, [x10, #104]
0xffff58223268   744  b.mi #+0xe4 (addr 0xffff5822334c)
0xffff5822326c   748  ubfx x16, x4, #8, #12
0xffff58223270   752  and x10, x4, #0xfffffffffff00000
0xffff58223274   756  add x10, x10, x16, lsl #2
0xffff58223278   760  ubfx x0, x4, #3, #5
0xffff5822327c   764  ldr x10, [x10, #360]
0xffff58223280   768  lsr x10, x10, x0
0xffff58223284   772  tbz w10, #0, #+0x8 (addr 0xffff5822328c)
0xffff58223288   776  tbnz w10, #1, #+0x3c (addr 0xffff582232c4)
0xffff5822328c   780  ldp x1, x0, [jssp], #16
0xffff58223290   784  ldr x16, pc+688 (addr 0x0000ffff58223540)    ;; external reference (store_buffer_top)
0xffff58223294   788  ldr x10, [x16]
0xffff58223298   792  str x11, [x10], #8
0xffff5822329c   796  str x10, [x16]
0xffff582232a0   800  tst x10, #0x1ffff
0xffff582232a4   804  b.eq #+0x8 (addr 0xffff582232ac)
0xffff582232a8   808  ret
0xffff582232ac   812  sub csp, jssp, #0x8 (8)
0xffff582232b0   816  str lr, [jssp, #-8]!
0xffff582232b4   820  ldr x17, pc+660 (addr 0x0000ffff58223548)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582232b8   824  blr x17
0xffff582232bc   828  ldr lr, [jssp], #8
0xffff582232c0   832  ret
0xffff582232c4   836  ldr x10, [x11]
0xffff582232c8   840  and x0, x10, #0xfffffffffff00000
0xffff582232cc   844  ldr x0, [x0, #8]
0xffff582232d0   848  tbz w0, #6, #+0x18 (addr 0xffff582232e8)
0xffff582232d4   852  and x0, x4, #0xfffffffffff00000
0xffff582232d8   856  ldr x0, [x0, #8]
0xffff582232dc   860  movz x16, #0x58
0xffff582232e0   864  tst x0, x16
0xffff582232e4   868  b.eq #+0x68 (addr 0xffff5822334c)
0xffff582232e8   872  sub csp, jssp, #0x10 (16)
0xffff582232ec   876  stp x4, x11, [jssp, #-16]!
0xffff582232f0   880  ubfx x16, x10, #8, #12
0xffff582232f4   884  and x0, x10, #0xfffffffffff00000
0xffff582232f8   888  add x0, x0, x16, lsl #2
0xffff582232fc   892  ubfx x4, x10, #3, #5
0xffff58223300   896  ldr x11, [x0, #360]
0xffff58223304   900  lsr x11, x11, x4
0xffff58223308   904  tbz w11, #0, #+0x40 (addr 0xffff58223348)
0xffff5822330c   908  ldp x4, x11, [jssp], #16
0xffff58223310   912  ldp x1, x0, [jssp], #16
0xffff58223314   916  ldr x16, pc+572 (addr 0x0000ffff58223550)    ;; external reference (store_buffer_top)
0xffff58223318   920  ldr x10, [x16]
0xffff5822331c   924  str x11, [x10], #8
0xffff58223320   928  str x10, [x16]
0xffff58223324   932  tst x10, #0x1ffff
0xffff58223328   936  b.eq #+0x8 (addr 0xffff58223330)
0xffff5822332c   940  ret
0xffff58223330   944  sub csp, jssp, #0x8 (8)
0xffff58223334   948  str lr, [jssp, #-8]!
0xffff58223338   952  ldr x17, pc+544 (addr 0x0000ffff58223558)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822333c   956  blr x17
0xffff58223340   960  ldr lr, [jssp], #8
0xffff58223344   964  ret
0xffff58223348   968  ldp x4, x11, [jssp], #16
0xffff5822334c   972  sub csp, jssp, #0x78 (120)
0xffff58223350   976  stp x14, x15, [jssp, #-32]!
0xffff58223354   980  stp x18, lr, [jssp, #16]
0xffff58223358   984  stp x9, x11, [jssp, #-32]!
0xffff5822335c   988  stp x12, x13, [jssp, #16]
0xffff58223360   992  stp x5, x6, [jssp, #-32]!
0xffff58223364   996  stp x7, x8, [jssp, #16]
0xffff58223368  1000  stp x2, x3, [jssp, #-24]!
0xffff5822336c  1004  str x4, [jssp, #16]
0xffff58223370  1008  mov x0, x4
0xffff58223374  1012  mov x1, x11
0xffff58223378  1016  ldr x2, pc+488 (addr 0x0000ffff58223560)    ;; external reference (isolate)
0xffff5822337c  1020  ldr x16, pc+492 (addr 0x0000ffff58223568)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58223380  1024  and csp, jssp, #0xfffffffffffffff0
0xffff58223384  1028  blr x16
0xffff58223388  1032  ldp x4, x5, [jssp, #16]
0xffff5822338c  1036  ldp x2, x3, [jssp], #32
0xffff58223390  1040  ldp x8, x9, [jssp, #16]
0xffff58223394  1044  ldp x6, x7, [jssp], #32
0xffff58223398  1048  ldp x13, x14, [jssp, #16]
0xffff5822339c  1052  ldp x11, x12, [jssp], #32
0xffff582233a0  1056  ldr lr, [jssp, #16]
0xffff582233a4  1060  ldp x15, x18, [jssp], #24
0xffff582233a8  1064  ldp x1, x0, [jssp], #16
0xffff582233ac  1068  ldr x16, pc+452 (addr 0x0000ffff58223570)    ;; external reference (store_buffer_top)
0xffff582233b0  1072  ldr x10, [x16]
0xffff582233b4  1076  str x11, [x10], #8
0xffff582233b8  1080  str x10, [x16]
0xffff582233bc  1084  tst x10, #0x1ffff
0xffff582233c0  1088  b.eq #+0x8 (addr 0xffff582233c8)
0xffff582233c4  1092  ret
0xffff582233c8  1096  sub csp, jssp, #0x8 (8)
0xffff582233cc  1100  str lr, [jssp, #-8]!
0xffff582233d0  1104  ldr x17, pc+424 (addr 0x0000ffff58223578)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582233d4  1108  blr x17
0xffff582233d8  1112  ldr lr, [jssp], #8
0xffff582233dc  1116  ret
0xffff582233e0  1120  and x10, x4, #0xfffffffffff00000
0xffff582233e4  1124  ldr x0, [x10, #104]
0xffff582233e8  1128  subs x0, x0, #0x1 (1)
0xffff582233ec  1132  str x0, [x10, #104]
0xffff582233f0  1136  b.mi #+0x84 (addr 0xffff58223474)
0xffff582233f4  1140  ubfx x16, x4, #8, #12
0xffff582233f8  1144  and x10, x4, #0xfffffffffff00000
0xffff582233fc  1148  add x10, x10, x16, lsl #2
0xffff58223400  1152  ubfx x0, x4, #3, #5
0xffff58223404  1156  ldr x10, [x10, #360]
0xffff58223408  1160  lsr x10, x10, x0
0xffff5822340c  1164  tbz w10, #0, #+0x8 (addr 0xffff58223414)
0xffff58223410  1168  tbnz w10, #1, #+0xc (addr 0xffff5822341c)
0xffff58223414  1172  ldp x1, x0, [jssp], #16
0xffff58223418  1176  ret
0xffff5822341c  1180  ldr x10, [x11]
0xffff58223420  1184  and x0, x10, #0xfffffffffff00000
0xffff58223424  1188  ldr x0, [x0, #8]
0xffff58223428  1192  tbz w0, #6, #+0x18 (addr 0xffff58223440)
0xffff5822342c  1196  and x0, x4, #0xfffffffffff00000
0xffff58223430  1200  ldr x0, [x0, #8]
0xffff58223434  1204  movz x16, #0x58
0xffff58223438  1208  tst x0, x16
0xffff5822343c  1212  b.eq #+0x38 (addr 0xffff58223474)
0xffff58223440  1216  sub csp, jssp, #0x10 (16)
0xffff58223444  1220  stp x4, x11, [jssp, #-16]!
0xffff58223448  1224  ubfx x16, x10, #8, #12
0xffff5822344c  1228  and x0, x10, #0xfffffffffff00000
0xffff58223450  1232  add x0, x0, x16, lsl #2
0xffff58223454  1236  ubfx x4, x10, #3, #5
0xffff58223458  1240  ldr x11, [x0, #360]
0xffff5822345c  1244  lsr x11, x11, x4
0xffff58223460  1248  tbz w11, #0, #+0x10 (addr 0xffff58223470)
0xffff58223464  1252  ldp x4, x11, [jssp], #16
0xffff58223468  1256  ldp x1, x0, [jssp], #16
0xffff5822346c  1260  ret
0xffff58223470  1264  ldp x4, x11, [jssp], #16
0xffff58223474  1268  sub csp, jssp, #0x78 (120)
0xffff58223478  1272  stp x14, x15, [jssp, #-32]!
0xffff5822347c  1276  stp x18, lr, [jssp, #16]
0xffff58223480  1280  stp x9, x11, [jssp, #-32]!
0xffff58223484  1284  stp x12, x13, [jssp, #16]
0xffff58223488  1288  stp x5, x6, [jssp, #-32]!
0xffff5822348c  1292  stp x7, x8, [jssp, #16]
0xffff58223490  1296  stp x2, x3, [jssp, #-24]!
0xffff58223494  1300  str x4, [jssp, #16]
0xffff58223498  1304  mov x0, x4
0xffff5822349c  1308  mov x1, x11
0xffff582234a0  1312  ldr x2, pc+224 (addr 0x0000ffff58223580)    ;; external reference (isolate)
0xffff582234a4  1316  ldr x16, pc+228 (addr 0x0000ffff58223588)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582234a8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff582234ac  1324  blr x16
0xffff582234b0  1328  ldp x4, x5, [jssp, #16]
0xffff582234b4  1332  ldp x2, x3, [jssp], #32
0xffff582234b8  1336  ldp x8, x9, [jssp, #16]
0xffff582234bc  1340  ldp x6, x7, [jssp], #32
0xffff582234c0  1344  ldp x13, x14, [jssp, #16]
0xffff582234c4  1348  ldp x11, x12, [jssp], #32
0xffff582234c8  1352  ldr lr, [jssp, #16]
0xffff582234cc  1356  ldp x15, x18, [jssp], #24
0xffff582234d0  1360  ldp x1, x0, [jssp], #16
0xffff582234d4  1364  ret
0xffff582234d8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff582234dc  1372  d63f03e0       constant
0xffff582234e0  1376  16e798c0       constant
0xffff582234e4  1380  00000000       constant
0xffff582234e8  1384  582064c0       constant
0xffff582234ec  1388  0000ffff       constant
0xffff582234f0  1392  16e798c0       constant
0xffff582234f4  1396  00000000       constant
0xffff582234f8  1400  582064c0       constant
0xffff582234fc  1404  0000ffff       constant
0xffff58223500  1408  16e798c0       constant
0xffff58223504  1412  00000000       constant
0xffff58223508  1416  582064c0       constant
0xffff5822350c  1420  0000ffff       constant
0xffff58223510  1424  16e782d0       constant
0xffff58223514  1428  00000000       constant
0xffff58223518  1432  00c2d958       constant
0xffff5822351c  1436  00000000       constant
0xffff58223520  1440  16e798c0       constant
0xffff58223524  1444  00000000       constant
0xffff58223528  1448  582064c0       constant
0xffff5822352c  1452  0000ffff       constant
0xffff58223530  1456  16e782d0       constant
0xffff58223534  1460  00000000       constant
0xffff58223538  1464  00c2d958       constant
0xffff5822353c  1468  00000000       constant
0xffff58223540  1472  16e798c0       constant
0xffff58223544  1476  00000000       constant
0xffff58223548  1480  582064c0       constant
0xffff5822354c  1484  0000ffff       constant
0xffff58223550  1488  16e798c0       constant
0xffff58223554  1492  00000000       constant
0xffff58223558  1496  582064c0       constant
0xffff5822355c  1500  0000ffff       constant
0xffff58223560  1504  16e782d0       constant
0xffff58223564  1508  00000000       constant
0xffff58223568  1512  00c2d958       constant
0xffff5822356c  1516  00000000       constant
0xffff58223570  1520  16e798c0       constant
0xffff58223574  1524  00000000       constant
0xffff58223578  1528  582064c0       constant
0xffff5822357c  1532  0000ffff       constant
0xffff58223580  1536  16e782d0       constant
0xffff58223584  1540  00000000       constant
0xffff58223588  1544  00c2d958       constant
0xffff5822358c  1548  00000000       constant


RelocInfo (size = 59)
0xffff58222f88  external reference (store_buffer_top)  (0x16e798c0)
0xffff58222fac  code target (STUB)  (0xffff582064c0)
0xffff58223024  external reference (store_buffer_top)  (0x16e798c0)
0xffff58223048  code target (STUB)  (0xffff582064c0)
0xffff58223088  external reference (store_buffer_top)  (0x16e798c0)
0xffff582230ac  code target (STUB)  (0xffff582064c0)
0xffff582230ec  external reference (isolate)  (0x16e782d0)
0xffff582230f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58223120  external reference (store_buffer_top)  (0x16e798c0)
0xffff58223144  code target (STUB)  (0xffff582064c0)
0xffff582231f4  external reference (isolate)  (0x16e782d0)
0xffff582231f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58223290  external reference (store_buffer_top)  (0x16e798c0)
0xffff582232b4  code target (STUB)  (0xffff582064c0)
0xffff58223314  external reference (store_buffer_top)  (0x16e798c0)
0xffff58223338  code target (STUB)  (0xffff582064c0)
0xffff58223378  external reference (isolate)  (0x16e782d0)
0xffff5822337c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582233ac  external reference (store_buffer_top)  (0x16e798c0)
0xffff582233d0  code target (STUB)  (0xffff582064c0)
0xffff582234a0  external reference (isolate)  (0x16e782d0)
0xffff582234a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582234d8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 536)
0xffff58223600     0  adr xzr, #+0xc (addr 0xffff5822360c)
0xffff58223604     4  adr xzr, #+0xe8 (addr 0xffff582236ec)
0xffff58223608     8  ret
0xffff5822360c    12  sub csp, jssp, #0x10 (16)
0xffff58223610    16  stp x2, x0, [jssp, #-16]!
0xffff58223614    20  and x3, x1, #0xfffffffffff00000
0xffff58223618    24  ldr x0, [x3, #104]
0xffff5822361c    28  subs x0, x0, #0x1 (1)
0xffff58223620    32  str x0, [x3, #104]
0xffff58223624    36  b.mi #+0x64 (addr 0xffff58223688)
0xffff58223628    40  ubfx x16, x1, #8, #12
0xffff5822362c    44  and x3, x1, #0xfffffffffff00000
0xffff58223630    48  add x3, x3, x16, lsl #2
0xffff58223634    52  ubfx x0, x1, #3, #5
0xffff58223638    56  ldr x3, [x3, #360]
0xffff5822363c    60  lsr x3, x3, x0
0xffff58223640    64  tbz w3, #0, #+0x8 (addr 0xffff58223648)
0xffff58223644    68  tbnz w3, #1, #+0xc (addr 0xffff58223650)
0xffff58223648    72  ldp x2, x0, [jssp], #16
0xffff5822364c    76  ret
0xffff58223650    80  ldr x3, [x6]
0xffff58223654    84  sub csp, jssp, #0x10 (16)
0xffff58223658    88  stp x1, x6, [jssp, #-16]!
0xffff5822365c    92  ubfx x16, x3, #8, #12
0xffff58223660    96  and x0, x3, #0xfffffffffff00000
0xffff58223664   100  add x0, x0, x16, lsl #2
0xffff58223668   104  ubfx x1, x3, #3, #5
0xffff5822366c   108  ldr x6, [x0, #360]
0xffff58223670   112  lsr x6, x6, x1
0xffff58223674   116  tbz w6, #0, #+0x10 (addr 0xffff58223684)
0xffff58223678   120  ldp x1, x6, [jssp], #16
0xffff5822367c   124  ldp x2, x0, [jssp], #16
0xffff58223680   128  ret
0xffff58223684   132  ldp x1, x6, [jssp], #16
0xffff58223688   136  sub csp, jssp, #0x78 (120)
0xffff5822368c   140  stp x14, x15, [jssp, #-32]!
0xffff58223690   144  stp x18, lr, [jssp, #16]
0xffff58223694   148  stp x10, x11, [jssp, #-32]!
0xffff58223698   152  stp x12, x13, [jssp, #16]
0xffff5822369c   156  stp x6, x7, [jssp, #-32]!
0xffff582236a0   160  stp x8, x9, [jssp, #16]
0xffff582236a4   164  stp x1, x4, [jssp, #-24]!
0xffff582236a8   168  str x5, [jssp, #16]
0xffff582236ac   172  mov x0, x1
0xffff582236b0   176  mov x1, x6
0xffff582236b4   180  ldr x2, pc+324 (addr 0x0000ffff582237f8)    ;; external reference (isolate)
0xffff582236b8   184  ldr x16, pc+328 (addr 0x0000ffff58223800)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582236bc   188  and csp, jssp, #0xfffffffffffffff0
0xffff582236c0   192  blr x16
0xffff582236c4   196  ldp x5, x6, [jssp, #16]
0xffff582236c8   200  ldp x1, x4, [jssp], #32
0xffff582236cc   204  ldp x9, x10, [jssp, #16]
0xffff582236d0   208  ldp x7, x8, [jssp], #32
0xffff582236d4   212  ldp x13, x14, [jssp, #16]
0xffff582236d8   216  ldp x11, x12, [jssp], #32
0xffff582236dc   220  ldr lr, [jssp, #16]
0xffff582236e0   224  ldp x15, x18, [jssp], #24
0xffff582236e4   228  ldp x2, x0, [jssp], #16
0xffff582236e8   232  ret
0xffff582236ec   236  sub csp, jssp, #0x10 (16)
0xffff582236f0   240  stp x2, x0, [jssp, #-16]!
0xffff582236f4   244  and x3, x1, #0xfffffffffff00000
0xffff582236f8   248  ldr x0, [x3, #104]
0xffff582236fc   252  subs x0, x0, #0x1 (1)
0xffff58223700   256  str x0, [x3, #104]
0xffff58223704   260  b.mi #+0x84 (addr 0xffff58223788)
0xffff58223708   264  ubfx x16, x1, #8, #12
0xffff5822370c   268  and x3, x1, #0xfffffffffff00000
0xffff58223710   272  add x3, x3, x16, lsl #2
0xffff58223714   276  ubfx x0, x1, #3, #5
0xffff58223718   280  ldr x3, [x3, #360]
0xffff5822371c   284  lsr x3, x3, x0
0xffff58223720   288  tbz w3, #0, #+0x8 (addr 0xffff58223728)
0xffff58223724   292  tbnz w3, #1, #+0xc (addr 0xffff58223730)
0xffff58223728   296  ldp x2, x0, [jssp], #16
0xffff5822372c   300  ret
0xffff58223730   304  ldr x3, [x6]
0xffff58223734   308  and x0, x3, #0xfffffffffff00000
0xffff58223738   312  ldr x0, [x0, #8]
0xffff5822373c   316  tbz w0, #6, #+0x18 (addr 0xffff58223754)
0xffff58223740   320  and x0, x1, #0xfffffffffff00000
0xffff58223744   324  ldr x0, [x0, #8]
0xffff58223748   328  movz x16, #0x58
0xffff5822374c   332  tst x0, x16
0xffff58223750   336  b.eq #+0x38 (addr 0xffff58223788)
0xffff58223754   340  sub csp, jssp, #0x10 (16)
0xffff58223758   344  stp x1, x6, [jssp, #-16]!
0xffff5822375c   348  ubfx x16, x3, #8, #12
0xffff58223760   352  and x0, x3, #0xfffffffffff00000
0xffff58223764   356  add x0, x0, x16, lsl #2
0xffff58223768   360  ubfx x1, x3, #3, #5
0xffff5822376c   364  ldr x6, [x0, #360]
0xffff58223770   368  lsr x6, x6, x1
0xffff58223774   372  tbz w6, #0, #+0x10 (addr 0xffff58223784)
0xffff58223778   376  ldp x1, x6, [jssp], #16
0xffff5822377c   380  ldp x2, x0, [jssp], #16
0xffff58223780   384  ret
0xffff58223784   388  ldp x1, x6, [jssp], #16
0xffff58223788   392  sub csp, jssp, #0x78 (120)
0xffff5822378c   396  stp x14, x15, [jssp, #-32]!
0xffff58223790   400  stp x18, lr, [jssp, #16]
0xffff58223794   404  stp x10, x11, [jssp, #-32]!
0xffff58223798   408  stp x12, x13, [jssp, #16]
0xffff5822379c   412  stp x6, x7, [jssp, #-32]!
0xffff582237a0   416  stp x8, x9, [jssp, #16]
0xffff582237a4   420  stp x1, x4, [jssp, #-24]!
0xffff582237a8   424  str x5, [jssp, #16]
0xffff582237ac   428  mov x0, x1
0xffff582237b0   432  mov x1, x6
0xffff582237b4   436  ldr x2, pc+84 (addr 0x0000ffff58223808)    ;; external reference (isolate)
0xffff582237b8   440  ldr x16, pc+88 (addr 0x0000ffff58223810)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582237bc   444  and csp, jssp, #0xfffffffffffffff0
0xffff582237c0   448  blr x16
0xffff582237c4   452  ldp x5, x6, [jssp, #16]
0xffff582237c8   456  ldp x1, x4, [jssp], #32
0xffff582237cc   460  ldp x9, x10, [jssp, #16]
0xffff582237d0   464  ldp x7, x8, [jssp], #32
0xffff582237d4   468  ldp x13, x14, [jssp, #16]
0xffff582237d8   472  ldp x11, x12, [jssp], #32
0xffff582237dc   476  ldr lr, [jssp, #16]
0xffff582237e0   480  ldp x15, x18, [jssp], #24
0xffff582237e4   484  ldp x2, x0, [jssp], #16
0xffff582237e8   488  ret
0xffff582237ec   492  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff582237f0   496  d63f03e0       constant
0xffff582237f4   500  d503201f       constant
0xffff582237f8   504  16e782d0       constant
0xffff582237fc   508  00000000       constant
0xffff58223800   512  00c2d958       constant
0xffff58223804   516  00000000       constant
0xffff58223808   520  16e782d0       constant
0xffff5822380c   524  00000000       constant
0xffff58223810   528  00c2d958       constant
0xffff58223814   532  00000000       constant


RelocInfo (size = 18)
0xffff582236b4  external reference (isolate)  (0x16e782d0)
0xffff582236b8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582237b4  external reference (isolate)  (0x16e782d0)
0xffff582237b8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582237ec  constant pool (size 44)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff58223880     0  adr xzr, #+0x40 (addr 0xffff582238c0)
0xffff58223884     4  adr xzr, #+0x2a8 (addr 0xffff58223b2c)
0xffff58223888     8  ldr x16, pc+1368 (addr 0x0000ffff58223de0)    ;; external reference (store_buffer_top)
0xffff5822388c    12  ldr x10, [x16]
0xffff58223890    16  str x6, [x10], #8
0xffff58223894    20  str x10, [x16]
0xffff58223898    24  tst x10, #0x1ffff
0xffff5822389c    28  b.eq #+0x8 (addr 0xffff582238a4)
0xffff582238a0    32  ret
0xffff582238a4    36  sub csp, jssp, #0x8 (8)
0xffff582238a8    40  str lr, [jssp, #-8]!
0xffff582238ac    44  ldr x17, pc+1340 (addr 0x0000ffff58223de8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582238b0    48  blr x17
0xffff582238b4    52  ldr lr, [jssp], #8
0xffff582238b8    56  ret
0xffff582238bc    60  ret
0xffff582238c0    64  sub csp, jssp, #0x10 (16)
0xffff582238c4    68  stp x2, x0, [jssp, #-16]!
0xffff582238c8    72  ldr x10, [x6]
0xffff582238cc    76  and x16, x10, #0xfffffffffff00000
0xffff582238d0    80  ldr x16, [x16, #8]
0xffff582238d4    84  tst x16, #0x18
0xffff582238d8    88  b.eq #+0x17c (addr 0xffff58223a54)
0xffff582238dc    92  and x16, x1, #0xfffffffffff00000
0xffff582238e0    96  ldr x16, [x16, #8]
0xffff582238e4   100  tst x16, #0x18
0xffff582238e8   104  b.ne #+0x16c (addr 0xffff58223a54)
0xffff582238ec   108  and x10, x1, #0xfffffffffff00000
0xffff582238f0   112  ldr x0, [x10, #104]
0xffff582238f4   116  subs x0, x0, #0x1 (1)
0xffff582238f8   120  str x0, [x10, #104]
0xffff582238fc   124  b.mi #+0xc4 (addr 0xffff582239c0)
0xffff58223900   128  ubfx x16, x1, #8, #12
0xffff58223904   132  and x10, x1, #0xfffffffffff00000
0xffff58223908   136  add x10, x10, x16, lsl #2
0xffff5822390c   140  ubfx x0, x1, #3, #5
0xffff58223910   144  ldr x10, [x10, #360]
0xffff58223914   148  lsr x10, x10, x0
0xffff58223918   152  tbz w10, #0, #+0x8 (addr 0xffff58223920)
0xffff5822391c   156  tbnz w10, #1, #+0x3c (addr 0xffff58223958)
0xffff58223920   160  ldp x2, x0, [jssp], #16
0xffff58223924   164  ldr x16, pc+1228 (addr 0x0000ffff58223df0)    ;; external reference (store_buffer_top)
0xffff58223928   168  ldr x10, [x16]
0xffff5822392c   172  str x6, [x10], #8
0xffff58223930   176  str x10, [x16]
0xffff58223934   180  tst x10, #0x1ffff
0xffff58223938   184  b.eq #+0x8 (addr 0xffff58223940)
0xffff5822393c   188  ret
0xffff58223940   192  sub csp, jssp, #0x8 (8)
0xffff58223944   196  str lr, [jssp, #-8]!
0xffff58223948   200  ldr x17, pc+1200 (addr 0x0000ffff58223df8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822394c   204  blr x17
0xffff58223950   208  ldr lr, [jssp], #8
0xffff58223954   212  ret
0xffff58223958   216  ldr x10, [x6]
0xffff5822395c   220  sub csp, jssp, #0x10 (16)
0xffff58223960   224  stp x1, x6, [jssp, #-16]!
0xffff58223964   228  ubfx x16, x10, #8, #12
0xffff58223968   232  and x0, x10, #0xfffffffffff00000
0xffff5822396c   236  add x0, x0, x16, lsl #2
0xffff58223970   240  ubfx x1, x10, #3, #5
0xffff58223974   244  ldr x6, [x0, #360]
0xffff58223978   248  lsr x6, x6, x1
0xffff5822397c   252  tbz w6, #0, #+0x40 (addr 0xffff582239bc)
0xffff58223980   256  ldp x1, x6, [jssp], #16
0xffff58223984   260  ldp x2, x0, [jssp], #16
0xffff58223988   264  ldr x16, pc+1144 (addr 0x0000ffff58223e00)    ;; external reference (store_buffer_top)
0xffff5822398c   268  ldr x10, [x16]
0xffff58223990   272  str x6, [x10], #8
0xffff58223994   276  str x10, [x16]
0xffff58223998   280  tst x10, #0x1ffff
0xffff5822399c   284  b.eq #+0x8 (addr 0xffff582239a4)
0xffff582239a0   288  ret
0xffff582239a4   292  sub csp, jssp, #0x8 (8)
0xffff582239a8   296  str lr, [jssp, #-8]!
0xffff582239ac   300  ldr x17, pc+1116 (addr 0x0000ffff58223e08)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582239b0   304  blr x17
0xffff582239b4   308  ldr lr, [jssp], #8
0xffff582239b8   312  ret
0xffff582239bc   316  ldp x1, x6, [jssp], #16
0xffff582239c0   320  sub csp, jssp, #0x78 (120)
0xffff582239c4   324  stp x14, x15, [jssp, #-32]!
0xffff582239c8   328  stp x18, lr, [jssp, #16]
0xffff582239cc   332  stp x9, x11, [jssp, #-32]!
0xffff582239d0   336  stp x12, x13, [jssp, #16]
0xffff582239d4   340  stp x5, x6, [jssp, #-32]!
0xffff582239d8   344  stp x7, x8, [jssp, #16]
0xffff582239dc   348  stp x1, x3, [jssp, #-24]!
0xffff582239e0   352  str x4, [jssp, #16]
0xffff582239e4   356  mov x0, x1
0xffff582239e8   360  mov x1, x6
0xffff582239ec   364  ldr x2, pc+1060 (addr 0x0000ffff58223e10)    ;; external reference (isolate)
0xffff582239f0   368  ldr x16, pc+1064 (addr 0x0000ffff58223e18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582239f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff582239f8   376  blr x16
0xffff582239fc   380  ldp x4, x5, [jssp, #16]
0xffff58223a00   384  ldp x1, x3, [jssp], #32
0xffff58223a04   388  ldp x8, x9, [jssp, #16]
0xffff58223a08   392  ldp x6, x7, [jssp], #32
0xffff58223a0c   396  ldp x13, x14, [jssp, #16]
0xffff58223a10   400  ldp x11, x12, [jssp], #32
0xffff58223a14   404  ldr lr, [jssp, #16]
0xffff58223a18   408  ldp x15, x18, [jssp], #24
0xffff58223a1c   412  ldp x2, x0, [jssp], #16
0xffff58223a20   416  ldr x16, pc+1024 (addr 0x0000ffff58223e20)    ;; external reference (store_buffer_top)
0xffff58223a24   420  ldr x10, [x16]
0xffff58223a28   424  str x6, [x10], #8
0xffff58223a2c   428  str x10, [x16]
0xffff58223a30   432  tst x10, #0x1ffff
0xffff58223a34   436  b.eq #+0x8 (addr 0xffff58223a3c)
0xffff58223a38   440  ret
0xffff58223a3c   444  sub csp, jssp, #0x8 (8)
0xffff58223a40   448  str lr, [jssp, #-8]!
0xffff58223a44   452  ldr x17, pc+996 (addr 0x0000ffff58223e28)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58223a48   456  blr x17
0xffff58223a4c   460  ldr lr, [jssp], #8
0xffff58223a50   464  ret
0xffff58223a54   468  and x10, x1, #0xfffffffffff00000
0xffff58223a58   472  ldr x0, [x10, #104]
0xffff58223a5c   476  subs x0, x0, #0x1 (1)
0xffff58223a60   480  str x0, [x10, #104]
0xffff58223a64   484  b.mi #+0x64 (addr 0xffff58223ac8)
0xffff58223a68   488  ubfx x16, x1, #8, #12
0xffff58223a6c   492  and x10, x1, #0xfffffffffff00000
0xffff58223a70   496  add x10, x10, x16, lsl #2
0xffff58223a74   500  ubfx x0, x1, #3, #5
0xffff58223a78   504  ldr x10, [x10, #360]
0xffff58223a7c   508  lsr x10, x10, x0
0xffff58223a80   512  tbz w10, #0, #+0x8 (addr 0xffff58223a88)
0xffff58223a84   516  tbnz w10, #1, #+0xc (addr 0xffff58223a90)
0xffff58223a88   520  ldp x2, x0, [jssp], #16
0xffff58223a8c   524  ret
0xffff58223a90   528  ldr x10, [x6]
0xffff58223a94   532  sub csp, jssp, #0x10 (16)
0xffff58223a98   536  stp x1, x6, [jssp, #-16]!
0xffff58223a9c   540  ubfx x16, x10, #8, #12
0xffff58223aa0   544  and x0, x10, #0xfffffffffff00000
0xffff58223aa4   548  add x0, x0, x16, lsl #2
0xffff58223aa8   552  ubfx x1, x10, #3, #5
0xffff58223aac   556  ldr x6, [x0, #360]
0xffff58223ab0   560  lsr x6, x6, x1
0xffff58223ab4   564  tbz w6, #0, #+0x10 (addr 0xffff58223ac4)
0xffff58223ab8   568  ldp x1, x6, [jssp], #16
0xffff58223abc   572  ldp x2, x0, [jssp], #16
0xffff58223ac0   576  ret
0xffff58223ac4   580  ldp x1, x6, [jssp], #16
0xffff58223ac8   584  sub csp, jssp, #0x78 (120)
0xffff58223acc   588  stp x14, x15, [jssp, #-32]!
0xffff58223ad0   592  stp x18, lr, [jssp, #16]
0xffff58223ad4   596  stp x9, x11, [jssp, #-32]!
0xffff58223ad8   600  stp x12, x13, [jssp, #16]
0xffff58223adc   604  stp x5, x6, [jssp, #-32]!
0xffff58223ae0   608  stp x7, x8, [jssp, #16]
0xffff58223ae4   612  stp x1, x3, [jssp, #-24]!
0xffff58223ae8   616  str x4, [jssp, #16]
0xffff58223aec   620  mov x0, x1
0xffff58223af0   624  mov x1, x6
0xffff58223af4   628  ldr x2, pc+828 (addr 0x0000ffff58223e30)    ;; external reference (isolate)
0xffff58223af8   632  ldr x16, pc+832 (addr 0x0000ffff58223e38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58223afc   636  and csp, jssp, #0xfffffffffffffff0
0xffff58223b00   640  blr x16
0xffff58223b04   644  ldp x4, x5, [jssp, #16]
0xffff58223b08   648  ldp x1, x3, [jssp], #32
0xffff58223b0c   652  ldp x8, x9, [jssp, #16]
0xffff58223b10   656  ldp x6, x7, [jssp], #32
0xffff58223b14   660  ldp x13, x14, [jssp, #16]
0xffff58223b18   664  ldp x11, x12, [jssp], #32
0xffff58223b1c   668  ldr lr, [jssp, #16]
0xffff58223b20   672  ldp x15, x18, [jssp], #24
0xffff58223b24   676  ldp x2, x0, [jssp], #16
0xffff58223b28   680  ret
0xffff58223b2c   684  sub csp, jssp, #0x10 (16)
0xffff58223b30   688  stp x2, x0, [jssp, #-16]!
0xffff58223b34   692  ldr x10, [x6]
0xffff58223b38   696  and x16, x10, #0xfffffffffff00000
0xffff58223b3c   700  ldr x16, [x16, #8]
0xffff58223b40   704  tst x16, #0x18
0xffff58223b44   708  b.eq #+0x19c (addr 0xffff58223ce0)
0xffff58223b48   712  and x16, x1, #0xfffffffffff00000
0xffff58223b4c   716  ldr x16, [x16, #8]
0xffff58223b50   720  tst x16, #0x18
0xffff58223b54   724  b.ne #+0x18c (addr 0xffff58223ce0)
0xffff58223b58   728  and x10, x1, #0xfffffffffff00000
0xffff58223b5c   732  ldr x0, [x10, #104]
0xffff58223b60   736  subs x0, x0, #0x1 (1)
0xffff58223b64   740  str x0, [x10, #104]
0xffff58223b68   744  b.mi #+0xe4 (addr 0xffff58223c4c)
0xffff58223b6c   748  ubfx x16, x1, #8, #12
0xffff58223b70   752  and x10, x1, #0xfffffffffff00000
0xffff58223b74   756  add x10, x10, x16, lsl #2
0xffff58223b78   760  ubfx x0, x1, #3, #5
0xffff58223b7c   764  ldr x10, [x10, #360]
0xffff58223b80   768  lsr x10, x10, x0
0xffff58223b84   772  tbz w10, #0, #+0x8 (addr 0xffff58223b8c)
0xffff58223b88   776  tbnz w10, #1, #+0x3c (addr 0xffff58223bc4)
0xffff58223b8c   780  ldp x2, x0, [jssp], #16
0xffff58223b90   784  ldr x16, pc+688 (addr 0x0000ffff58223e40)    ;; external reference (store_buffer_top)
0xffff58223b94   788  ldr x10, [x16]
0xffff58223b98   792  str x6, [x10], #8
0xffff58223b9c   796  str x10, [x16]
0xffff58223ba0   800  tst x10, #0x1ffff
0xffff58223ba4   804  b.eq #+0x8 (addr 0xffff58223bac)
0xffff58223ba8   808  ret
0xffff58223bac   812  sub csp, jssp, #0x8 (8)
0xffff58223bb0   816  str lr, [jssp, #-8]!
0xffff58223bb4   820  ldr x17, pc+660 (addr 0x0000ffff58223e48)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58223bb8   824  blr x17
0xffff58223bbc   828  ldr lr, [jssp], #8
0xffff58223bc0   832  ret
0xffff58223bc4   836  ldr x10, [x6]
0xffff58223bc8   840  and x0, x10, #0xfffffffffff00000
0xffff58223bcc   844  ldr x0, [x0, #8]
0xffff58223bd0   848  tbz w0, #6, #+0x18 (addr 0xffff58223be8)
0xffff58223bd4   852  and x0, x1, #0xfffffffffff00000
0xffff58223bd8   856  ldr x0, [x0, #8]
0xffff58223bdc   860  movz x16, #0x58
0xffff58223be0   864  tst x0, x16
0xffff58223be4   868  b.eq #+0x68 (addr 0xffff58223c4c)
0xffff58223be8   872  sub csp, jssp, #0x10 (16)
0xffff58223bec   876  stp x1, x6, [jssp, #-16]!
0xffff58223bf0   880  ubfx x16, x10, #8, #12
0xffff58223bf4   884  and x0, x10, #0xfffffffffff00000
0xffff58223bf8   888  add x0, x0, x16, lsl #2
0xffff58223bfc   892  ubfx x1, x10, #3, #5
0xffff58223c00   896  ldr x6, [x0, #360]
0xffff58223c04   900  lsr x6, x6, x1
0xffff58223c08   904  tbz w6, #0, #+0x40 (addr 0xffff58223c48)
0xffff58223c0c   908  ldp x1, x6, [jssp], #16
0xffff58223c10   912  ldp x2, x0, [jssp], #16
0xffff58223c14   916  ldr x16, pc+572 (addr 0x0000ffff58223e50)    ;; external reference (store_buffer_top)
0xffff58223c18   920  ldr x10, [x16]
0xffff58223c1c   924  str x6, [x10], #8
0xffff58223c20   928  str x10, [x16]
0xffff58223c24   932  tst x10, #0x1ffff
0xffff58223c28   936  b.eq #+0x8 (addr 0xffff58223c30)
0xffff58223c2c   940  ret
0xffff58223c30   944  sub csp, jssp, #0x8 (8)
0xffff58223c34   948  str lr, [jssp, #-8]!
0xffff58223c38   952  ldr x17, pc+544 (addr 0x0000ffff58223e58)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58223c3c   956  blr x17
0xffff58223c40   960  ldr lr, [jssp], #8
0xffff58223c44   964  ret
0xffff58223c48   968  ldp x1, x6, [jssp], #16
0xffff58223c4c   972  sub csp, jssp, #0x78 (120)
0xffff58223c50   976  stp x14, x15, [jssp, #-32]!
0xffff58223c54   980  stp x18, lr, [jssp, #16]
0xffff58223c58   984  stp x9, x11, [jssp, #-32]!
0xffff58223c5c   988  stp x12, x13, [jssp, #16]
0xffff58223c60   992  stp x5, x6, [jssp, #-32]!
0xffff58223c64   996  stp x7, x8, [jssp, #16]
0xffff58223c68  1000  stp x1, x3, [jssp, #-24]!
0xffff58223c6c  1004  str x4, [jssp, #16]
0xffff58223c70  1008  mov x0, x1
0xffff58223c74  1012  mov x1, x6
0xffff58223c78  1016  ldr x2, pc+488 (addr 0x0000ffff58223e60)    ;; external reference (isolate)
0xffff58223c7c  1020  ldr x16, pc+492 (addr 0x0000ffff58223e68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58223c80  1024  and csp, jssp, #0xfffffffffffffff0
0xffff58223c84  1028  blr x16
0xffff58223c88  1032  ldp x4, x5, [jssp, #16]
0xffff58223c8c  1036  ldp x1, x3, [jssp], #32
0xffff58223c90  1040  ldp x8, x9, [jssp, #16]
0xffff58223c94  1044  ldp x6, x7, [jssp], #32
0xffff58223c98  1048  ldp x13, x14, [jssp, #16]
0xffff58223c9c  1052  ldp x11, x12, [jssp], #32
0xffff58223ca0  1056  ldr lr, [jssp, #16]
0xffff58223ca4  1060  ldp x15, x18, [jssp], #24
0xffff58223ca8  1064  ldp x2, x0, [jssp], #16
0xffff58223cac  1068  ldr x16, pc+452 (addr 0x0000ffff58223e70)    ;; external reference (store_buffer_top)
0xffff58223cb0  1072  ldr x10, [x16]
0xffff58223cb4  1076  str x6, [x10], #8
0xffff58223cb8  1080  str x10, [x16]
0xffff58223cbc  1084  tst x10, #0x1ffff
0xffff58223cc0  1088  b.eq #+0x8 (addr 0xffff58223cc8)
0xffff58223cc4  1092  ret
0xffff58223cc8  1096  sub csp, jssp, #0x8 (8)
0xffff58223ccc  1100  str lr, [jssp, #-8]!
0xffff58223cd0  1104  ldr x17, pc+424 (addr 0x0000ffff58223e78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58223cd4  1108  blr x17
0xffff58223cd8  1112  ldr lr, [jssp], #8
0xffff58223cdc  1116  ret
0xffff58223ce0  1120  and x10, x1, #0xfffffffffff00000
0xffff58223ce4  1124  ldr x0, [x10, #104]
0xffff58223ce8  1128  subs x0, x0, #0x1 (1)
0xffff58223cec  1132  str x0, [x10, #104]
0xffff58223cf0  1136  b.mi #+0x84 (addr 0xffff58223d74)
0xffff58223cf4  1140  ubfx x16, x1, #8, #12
0xffff58223cf8  1144  and x10, x1, #0xfffffffffff00000
0xffff58223cfc  1148  add x10, x10, x16, lsl #2
0xffff58223d00  1152  ubfx x0, x1, #3, #5
0xffff58223d04  1156  ldr x10, [x10, #360]
0xffff58223d08  1160  lsr x10, x10, x0
0xffff58223d0c  1164  tbz w10, #0, #+0x8 (addr 0xffff58223d14)
0xffff58223d10  1168  tbnz w10, #1, #+0xc (addr 0xffff58223d1c)
0xffff58223d14  1172  ldp x2, x0, [jssp], #16
0xffff58223d18  1176  ret
0xffff58223d1c  1180  ldr x10, [x6]
0xffff58223d20  1184  and x0, x10, #0xfffffffffff00000
0xffff58223d24  1188  ldr x0, [x0, #8]
0xffff58223d28  1192  tbz w0, #6, #+0x18 (addr 0xffff58223d40)
0xffff58223d2c  1196  and x0, x1, #0xfffffffffff00000
0xffff58223d30  1200  ldr x0, [x0, #8]
0xffff58223d34  1204  movz x16, #0x58
0xffff58223d38  1208  tst x0, x16
0xffff58223d3c  1212  b.eq #+0x38 (addr 0xffff58223d74)
0xffff58223d40  1216  sub csp, jssp, #0x10 (16)
0xffff58223d44  1220  stp x1, x6, [jssp, #-16]!
0xffff58223d48  1224  ubfx x16, x10, #8, #12
0xffff58223d4c  1228  and x0, x10, #0xfffffffffff00000
0xffff58223d50  1232  add x0, x0, x16, lsl #2
0xffff58223d54  1236  ubfx x1, x10, #3, #5
0xffff58223d58  1240  ldr x6, [x0, #360]
0xffff58223d5c  1244  lsr x6, x6, x1
0xffff58223d60  1248  tbz w6, #0, #+0x10 (addr 0xffff58223d70)
0xffff58223d64  1252  ldp x1, x6, [jssp], #16
0xffff58223d68  1256  ldp x2, x0, [jssp], #16
0xffff58223d6c  1260  ret
0xffff58223d70  1264  ldp x1, x6, [jssp], #16
0xffff58223d74  1268  sub csp, jssp, #0x78 (120)
0xffff58223d78  1272  stp x14, x15, [jssp, #-32]!
0xffff58223d7c  1276  stp x18, lr, [jssp, #16]
0xffff58223d80  1280  stp x9, x11, [jssp, #-32]!
0xffff58223d84  1284  stp x12, x13, [jssp, #16]
0xffff58223d88  1288  stp x5, x6, [jssp, #-32]!
0xffff58223d8c  1292  stp x7, x8, [jssp, #16]
0xffff58223d90  1296  stp x1, x3, [jssp, #-24]!
0xffff58223d94  1300  str x4, [jssp, #16]
0xffff58223d98  1304  mov x0, x1
0xffff58223d9c  1308  mov x1, x6
0xffff58223da0  1312  ldr x2, pc+224 (addr 0x0000ffff58223e80)    ;; external reference (isolate)
0xffff58223da4  1316  ldr x16, pc+228 (addr 0x0000ffff58223e88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58223da8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff58223dac  1324  blr x16
0xffff58223db0  1328  ldp x4, x5, [jssp, #16]
0xffff58223db4  1332  ldp x1, x3, [jssp], #32
0xffff58223db8  1336  ldp x8, x9, [jssp, #16]
0xffff58223dbc  1340  ldp x6, x7, [jssp], #32
0xffff58223dc0  1344  ldp x13, x14, [jssp, #16]
0xffff58223dc4  1348  ldp x11, x12, [jssp], #32
0xffff58223dc8  1352  ldr lr, [jssp, #16]
0xffff58223dcc  1356  ldp x15, x18, [jssp], #24
0xffff58223dd0  1360  ldp x2, x0, [jssp], #16
0xffff58223dd4  1364  ret
0xffff58223dd8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff58223ddc  1372  d63f03e0       constant
0xffff58223de0  1376  16e798c0       constant
0xffff58223de4  1380  00000000       constant
0xffff58223de8  1384  582064c0       constant
0xffff58223dec  1388  0000ffff       constant
0xffff58223df0  1392  16e798c0       constant
0xffff58223df4  1396  00000000       constant
0xffff58223df8  1400  582064c0       constant
0xffff58223dfc  1404  0000ffff       constant
0xffff58223e00  1408  16e798c0       constant
0xffff58223e04  1412  00000000       constant
0xffff58223e08  1416  582064c0       constant
0xffff58223e0c  1420  0000ffff       constant
0xffff58223e10  1424  16e782d0       constant
0xffff58223e14  1428  00000000       constant
0xffff58223e18  1432  00c2d958       constant
0xffff58223e1c  1436  00000000       constant
0xffff58223e20  1440  16e798c0       constant
0xffff58223e24  1444  00000000       constant
0xffff58223e28  1448  582064c0       constant
0xffff58223e2c  1452  0000ffff       constant
0xffff58223e30  1456  16e782d0       constant
0xffff58223e34  1460  00000000       constant
0xffff58223e38  1464  00c2d958       constant
0xffff58223e3c  1468  00000000       constant
0xffff58223e40  1472  16e798c0       constant
0xffff58223e44  1476  00000000       constant
0xffff58223e48  1480  582064c0       constant
0xffff58223e4c  1484  0000ffff       constant
0xffff58223e50  1488  16e798c0       constant
0xffff58223e54  1492  00000000       constant
0xffff58223e58  1496  582064c0       constant
0xffff58223e5c  1500  0000ffff       constant
0xffff58223e60  1504  16e782d0       constant
0xffff58223e64  1508  00000000       constant
0xffff58223e68  1512  00c2d958       constant
0xffff58223e6c  1516  00000000       constant
0xffff58223e70  1520  16e798c0       constant
0xffff58223e74  1524  00000000       constant
0xffff58223e78  1528  582064c0       constant
0xffff58223e7c  1532  0000ffff       constant
0xffff58223e80  1536  16e782d0       constant
0xffff58223e84  1540  00000000       constant
0xffff58223e88  1544  00c2d958       constant
0xffff58223e8c  1548  00000000       constant


RelocInfo (size = 59)
0xffff58223888  external reference (store_buffer_top)  (0x16e798c0)
0xffff582238ac  code target (STUB)  (0xffff582064c0)
0xffff58223924  external reference (store_buffer_top)  (0x16e798c0)
0xffff58223948  code target (STUB)  (0xffff582064c0)
0xffff58223988  external reference (store_buffer_top)  (0x16e798c0)
0xffff582239ac  code target (STUB)  (0xffff582064c0)
0xffff582239ec  external reference (isolate)  (0x16e782d0)
0xffff582239f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58223a20  external reference (store_buffer_top)  (0x16e798c0)
0xffff58223a44  code target (STUB)  (0xffff582064c0)
0xffff58223af4  external reference (isolate)  (0x16e782d0)
0xffff58223af8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58223b90  external reference (store_buffer_top)  (0x16e798c0)
0xffff58223bb4  code target (STUB)  (0xffff582064c0)
0xffff58223c14  external reference (store_buffer_top)  (0x16e798c0)
0xffff58223c38  code target (STUB)  (0xffff582064c0)
0xffff58223c78  external reference (isolate)  (0x16e782d0)
0xffff58223c7c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58223cac  external reference (store_buffer_top)  (0x16e798c0)
0xffff58223cd0  code target (STUB)  (0xffff582064c0)
0xffff58223da0  external reference (isolate)  (0x16e782d0)
0xffff58223da4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58223dd8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff58223f00     0  adr xzr, #+0x40 (addr 0xffff58223f40)
0xffff58223f04     4  adr xzr, #+0x2a8 (addr 0xffff582241ac)
0xffff58223f08     8  ldr x16, pc+1368 (addr 0x0000ffff58224460)    ;; external reference (store_buffer_top)
0xffff58223f0c    12  ldr x3, [x16]
0xffff58223f10    16  str x10, [x3], #8
0xffff58223f14    20  str x3, [x16]
0xffff58223f18    24  tst x3, #0x1ffff
0xffff58223f1c    28  b.eq #+0x8 (addr 0xffff58223f24)
0xffff58223f20    32  ret
0xffff58223f24    36  sub csp, jssp, #0x8 (8)
0xffff58223f28    40  str lr, [jssp, #-8]!
0xffff58223f2c    44  ldr x17, pc+1340 (addr 0x0000ffff58224468)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58223f30    48  blr x17
0xffff58223f34    52  ldr lr, [jssp], #8
0xffff58223f38    56  ret
0xffff58223f3c    60  ret
0xffff58223f40    64  sub csp, jssp, #0x10 (16)
0xffff58223f44    68  stp x2, x0, [jssp, #-16]!
0xffff58223f48    72  ldr x3, [x10]
0xffff58223f4c    76  and x16, x3, #0xfffffffffff00000
0xffff58223f50    80  ldr x16, [x16, #8]
0xffff58223f54    84  tst x16, #0x18
0xffff58223f58    88  b.eq #+0x17c (addr 0xffff582240d4)
0xffff58223f5c    92  and x16, x1, #0xfffffffffff00000
0xffff58223f60    96  ldr x16, [x16, #8]
0xffff58223f64   100  tst x16, #0x18
0xffff58223f68   104  b.ne #+0x16c (addr 0xffff582240d4)
0xffff58223f6c   108  and x3, x1, #0xfffffffffff00000
0xffff58223f70   112  ldr x0, [x3, #104]
0xffff58223f74   116  subs x0, x0, #0x1 (1)
0xffff58223f78   120  str x0, [x3, #104]
0xffff58223f7c   124  b.mi #+0xc4 (addr 0xffff58224040)
0xffff58223f80   128  ubfx x16, x1, #8, #12
0xffff58223f84   132  and x3, x1, #0xfffffffffff00000
0xffff58223f88   136  add x3, x3, x16, lsl #2
0xffff58223f8c   140  ubfx x0, x1, #3, #5
0xffff58223f90   144  ldr x3, [x3, #360]
0xffff58223f94   148  lsr x3, x3, x0
0xffff58223f98   152  tbz w3, #0, #+0x8 (addr 0xffff58223fa0)
0xffff58223f9c   156  tbnz w3, #1, #+0x3c (addr 0xffff58223fd8)
0xffff58223fa0   160  ldp x2, x0, [jssp], #16
0xffff58223fa4   164  ldr x16, pc+1228 (addr 0x0000ffff58224470)    ;; external reference (store_buffer_top)
0xffff58223fa8   168  ldr x3, [x16]
0xffff58223fac   172  str x10, [x3], #8
0xffff58223fb0   176  str x3, [x16]
0xffff58223fb4   180  tst x3, #0x1ffff
0xffff58223fb8   184  b.eq #+0x8 (addr 0xffff58223fc0)
0xffff58223fbc   188  ret
0xffff58223fc0   192  sub csp, jssp, #0x8 (8)
0xffff58223fc4   196  str lr, [jssp, #-8]!
0xffff58223fc8   200  ldr x17, pc+1200 (addr 0x0000ffff58224478)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58223fcc   204  blr x17
0xffff58223fd0   208  ldr lr, [jssp], #8
0xffff58223fd4   212  ret
0xffff58223fd8   216  ldr x3, [x10]
0xffff58223fdc   220  sub csp, jssp, #0x10 (16)
0xffff58223fe0   224  stp x1, x10, [jssp, #-16]!
0xffff58223fe4   228  ubfx x16, x3, #8, #12
0xffff58223fe8   232  and x0, x3, #0xfffffffffff00000
0xffff58223fec   236  add x0, x0, x16, lsl #2
0xffff58223ff0   240  ubfx x1, x3, #3, #5
0xffff58223ff4   244  ldr x10, [x0, #360]
0xffff58223ff8   248  lsr x10, x10, x1
0xffff58223ffc   252  tbz w10, #0, #+0x40 (addr 0xffff5822403c)
0xffff58224000   256  ldp x1, x10, [jssp], #16
0xffff58224004   260  ldp x2, x0, [jssp], #16
0xffff58224008   264  ldr x16, pc+1144 (addr 0x0000ffff58224480)    ;; external reference (store_buffer_top)
0xffff5822400c   268  ldr x3, [x16]
0xffff58224010   272  str x10, [x3], #8
0xffff58224014   276  str x3, [x16]
0xffff58224018   280  tst x3, #0x1ffff
0xffff5822401c   284  b.eq #+0x8 (addr 0xffff58224024)
0xffff58224020   288  ret
0xffff58224024   292  sub csp, jssp, #0x8 (8)
0xffff58224028   296  str lr, [jssp, #-8]!
0xffff5822402c   300  ldr x17, pc+1116 (addr 0x0000ffff58224488)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58224030   304  blr x17
0xffff58224034   308  ldr lr, [jssp], #8
0xffff58224038   312  ret
0xffff5822403c   316  ldp x1, x10, [jssp], #16
0xffff58224040   320  sub csp, jssp, #0x78 (120)
0xffff58224044   324  stp x14, x15, [jssp, #-32]!
0xffff58224048   328  stp x18, lr, [jssp, #16]
0xffff5822404c   332  stp x10, x11, [jssp, #-32]!
0xffff58224050   336  stp x12, x13, [jssp, #16]
0xffff58224054   340  stp x6, x7, [jssp, #-32]!
0xffff58224058   344  stp x8, x9, [jssp, #16]
0xffff5822405c   348  stp x1, x4, [jssp, #-24]!
0xffff58224060   352  str x5, [jssp, #16]
0xffff58224064   356  mov x0, x1
0xffff58224068   360  mov x1, x10
0xffff5822406c   364  ldr x2, pc+1060 (addr 0x0000ffff58224490)    ;; external reference (isolate)
0xffff58224070   368  ldr x16, pc+1064 (addr 0x0000ffff58224498)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58224074   372  and csp, jssp, #0xfffffffffffffff0
0xffff58224078   376  blr x16
0xffff5822407c   380  ldp x5, x6, [jssp, #16]
0xffff58224080   384  ldp x1, x4, [jssp], #32
0xffff58224084   388  ldp x9, x10, [jssp, #16]
0xffff58224088   392  ldp x7, x8, [jssp], #32
0xffff5822408c   396  ldp x13, x14, [jssp, #16]
0xffff58224090   400  ldp x11, x12, [jssp], #32
0xffff58224094   404  ldr lr, [jssp, #16]
0xffff58224098   408  ldp x15, x18, [jssp], #24
0xffff5822409c   412  ldp x2, x0, [jssp], #16
0xffff582240a0   416  ldr x16, pc+1024 (addr 0x0000ffff582244a0)    ;; external reference (store_buffer_top)
0xffff582240a4   420  ldr x3, [x16]
0xffff582240a8   424  str x10, [x3], #8
0xffff582240ac   428  str x3, [x16]
0xffff582240b0   432  tst x3, #0x1ffff
0xffff582240b4   436  b.eq #+0x8 (addr 0xffff582240bc)
0xffff582240b8   440  ret
0xffff582240bc   444  sub csp, jssp, #0x8 (8)
0xffff582240c0   448  str lr, [jssp, #-8]!
0xffff582240c4   452  ldr x17, pc+996 (addr 0x0000ffff582244a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582240c8   456  blr x17
0xffff582240cc   460  ldr lr, [jssp], #8
0xffff582240d0   464  ret
0xffff582240d4   468  and x3, x1, #0xfffffffffff00000
0xffff582240d8   472  ldr x0, [x3, #104]
0xffff582240dc   476  subs x0, x0, #0x1 (1)
0xffff582240e0   480  str x0, [x3, #104]
0xffff582240e4   484  b.mi #+0x64 (addr 0xffff58224148)
0xffff582240e8   488  ubfx x16, x1, #8, #12
0xffff582240ec   492  and x3, x1, #0xfffffffffff00000
0xffff582240f0   496  add x3, x3, x16, lsl #2
0xffff582240f4   500  ubfx x0, x1, #3, #5
0xffff582240f8   504  ldr x3, [x3, #360]
0xffff582240fc   508  lsr x3, x3, x0
0xffff58224100   512  tbz w3, #0, #+0x8 (addr 0xffff58224108)
0xffff58224104   516  tbnz w3, #1, #+0xc (addr 0xffff58224110)
0xffff58224108   520  ldp x2, x0, [jssp], #16
0xffff5822410c   524  ret
0xffff58224110   528  ldr x3, [x10]
0xffff58224114   532  sub csp, jssp, #0x10 (16)
0xffff58224118   536  stp x1, x10, [jssp, #-16]!
0xffff5822411c   540  ubfx x16, x3, #8, #12
0xffff58224120   544  and x0, x3, #0xfffffffffff00000
0xffff58224124   548  add x0, x0, x16, lsl #2
0xffff58224128   552  ubfx x1, x3, #3, #5
0xffff5822412c   556  ldr x10, [x0, #360]
0xffff58224130   560  lsr x10, x10, x1
0xffff58224134   564  tbz w10, #0, #+0x10 (addr 0xffff58224144)
0xffff58224138   568  ldp x1, x10, [jssp], #16
0xffff5822413c   572  ldp x2, x0, [jssp], #16
0xffff58224140   576  ret
0xffff58224144   580  ldp x1, x10, [jssp], #16
0xffff58224148   584  sub csp, jssp, #0x78 (120)
0xffff5822414c   588  stp x14, x15, [jssp, #-32]!
0xffff58224150   592  stp x18, lr, [jssp, #16]
0xffff58224154   596  stp x10, x11, [jssp, #-32]!
0xffff58224158   600  stp x12, x13, [jssp, #16]
0xffff5822415c   604  stp x6, x7, [jssp, #-32]!
0xffff58224160   608  stp x8, x9, [jssp, #16]
0xffff58224164   612  stp x1, x4, [jssp, #-24]!
0xffff58224168   616  str x5, [jssp, #16]
0xffff5822416c   620  mov x0, x1
0xffff58224170   624  mov x1, x10
0xffff58224174   628  ldr x2, pc+828 (addr 0x0000ffff582244b0)    ;; external reference (isolate)
0xffff58224178   632  ldr x16, pc+832 (addr 0x0000ffff582244b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822417c   636  and csp, jssp, #0xfffffffffffffff0
0xffff58224180   640  blr x16
0xffff58224184   644  ldp x5, x6, [jssp, #16]
0xffff58224188   648  ldp x1, x4, [jssp], #32
0xffff5822418c   652  ldp x9, x10, [jssp, #16]
0xffff58224190   656  ldp x7, x8, [jssp], #32
0xffff58224194   660  ldp x13, x14, [jssp, #16]
0xffff58224198   664  ldp x11, x12, [jssp], #32
0xffff5822419c   668  ldr lr, [jssp, #16]
0xffff582241a0   672  ldp x15, x18, [jssp], #24
0xffff582241a4   676  ldp x2, x0, [jssp], #16
0xffff582241a8   680  ret
0xffff582241ac   684  sub csp, jssp, #0x10 (16)
0xffff582241b0   688  stp x2, x0, [jssp, #-16]!
0xffff582241b4   692  ldr x3, [x10]
0xffff582241b8   696  and x16, x3, #0xfffffffffff00000
0xffff582241bc   700  ldr x16, [x16, #8]
0xffff582241c0   704  tst x16, #0x18
0xffff582241c4   708  b.eq #+0x19c (addr 0xffff58224360)
0xffff582241c8   712  and x16, x1, #0xfffffffffff00000
0xffff582241cc   716  ldr x16, [x16, #8]
0xffff582241d0   720  tst x16, #0x18
0xffff582241d4   724  b.ne #+0x18c (addr 0xffff58224360)
0xffff582241d8   728  and x3, x1, #0xfffffffffff00000
0xffff582241dc   732  ldr x0, [x3, #104]
0xffff582241e0   736  subs x0, x0, #0x1 (1)
0xffff582241e4   740  str x0, [x3, #104]
0xffff582241e8   744  b.mi #+0xe4 (addr 0xffff582242cc)
0xffff582241ec   748  ubfx x16, x1, #8, #12
0xffff582241f0   752  and x3, x1, #0xfffffffffff00000
0xffff582241f4   756  add x3, x3, x16, lsl #2
0xffff582241f8   760  ubfx x0, x1, #3, #5
0xffff582241fc   764  ldr x3, [x3, #360]
0xffff58224200   768  lsr x3, x3, x0
0xffff58224204   772  tbz w3, #0, #+0x8 (addr 0xffff5822420c)
0xffff58224208   776  tbnz w3, #1, #+0x3c (addr 0xffff58224244)
0xffff5822420c   780  ldp x2, x0, [jssp], #16
0xffff58224210   784  ldr x16, pc+688 (addr 0x0000ffff582244c0)    ;; external reference (store_buffer_top)
0xffff58224214   788  ldr x3, [x16]
0xffff58224218   792  str x10, [x3], #8
0xffff5822421c   796  str x3, [x16]
0xffff58224220   800  tst x3, #0x1ffff
0xffff58224224   804  b.eq #+0x8 (addr 0xffff5822422c)
0xffff58224228   808  ret
0xffff5822422c   812  sub csp, jssp, #0x8 (8)
0xffff58224230   816  str lr, [jssp, #-8]!
0xffff58224234   820  ldr x17, pc+660 (addr 0x0000ffff582244c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58224238   824  blr x17
0xffff5822423c   828  ldr lr, [jssp], #8
0xffff58224240   832  ret
0xffff58224244   836  ldr x3, [x10]
0xffff58224248   840  and x0, x3, #0xfffffffffff00000
0xffff5822424c   844  ldr x0, [x0, #8]
0xffff58224250   848  tbz w0, #6, #+0x18 (addr 0xffff58224268)
0xffff58224254   852  and x0, x1, #0xfffffffffff00000
0xffff58224258   856  ldr x0, [x0, #8]
0xffff5822425c   860  movz x16, #0x58
0xffff58224260   864  tst x0, x16
0xffff58224264   868  b.eq #+0x68 (addr 0xffff582242cc)
0xffff58224268   872  sub csp, jssp, #0x10 (16)
0xffff5822426c   876  stp x1, x10, [jssp, #-16]!
0xffff58224270   880  ubfx x16, x3, #8, #12
0xffff58224274   884  and x0, x3, #0xfffffffffff00000
0xffff58224278   888  add x0, x0, x16, lsl #2
0xffff5822427c   892  ubfx x1, x3, #3, #5
0xffff58224280   896  ldr x10, [x0, #360]
0xffff58224284   900  lsr x10, x10, x1
0xffff58224288   904  tbz w10, #0, #+0x40 (addr 0xffff582242c8)
0xffff5822428c   908  ldp x1, x10, [jssp], #16
0xffff58224290   912  ldp x2, x0, [jssp], #16
0xffff58224294   916  ldr x16, pc+572 (addr 0x0000ffff582244d0)    ;; external reference (store_buffer_top)
0xffff58224298   920  ldr x3, [x16]
0xffff5822429c   924  str x10, [x3], #8
0xffff582242a0   928  str x3, [x16]
0xffff582242a4   932  tst x3, #0x1ffff
0xffff582242a8   936  b.eq #+0x8 (addr 0xffff582242b0)
0xffff582242ac   940  ret
0xffff582242b0   944  sub csp, jssp, #0x8 (8)
0xffff582242b4   948  str lr, [jssp, #-8]!
0xffff582242b8   952  ldr x17, pc+544 (addr 0x0000ffff582244d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582242bc   956  blr x17
0xffff582242c0   960  ldr lr, [jssp], #8
0xffff582242c4   964  ret
0xffff582242c8   968  ldp x1, x10, [jssp], #16
0xffff582242cc   972  sub csp, jssp, #0x78 (120)
0xffff582242d0   976  stp x14, x15, [jssp, #-32]!
0xffff582242d4   980  stp x18, lr, [jssp, #16]
0xffff582242d8   984  stp x10, x11, [jssp, #-32]!
0xffff582242dc   988  stp x12, x13, [jssp, #16]
0xffff582242e0   992  stp x6, x7, [jssp, #-32]!
0xffff582242e4   996  stp x8, x9, [jssp, #16]
0xffff582242e8  1000  stp x1, x4, [jssp, #-24]!
0xffff582242ec  1004  str x5, [jssp, #16]
0xffff582242f0  1008  mov x0, x1
0xffff582242f4  1012  mov x1, x10
0xffff582242f8  1016  ldr x2, pc+488 (addr 0x0000ffff582244e0)    ;; external reference (isolate)
0xffff582242fc  1020  ldr x16, pc+492 (addr 0x0000ffff582244e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58224300  1024  and csp, jssp, #0xfffffffffffffff0
0xffff58224304  1028  blr x16
0xffff58224308  1032  ldp x5, x6, [jssp, #16]
0xffff5822430c  1036  ldp x1, x4, [jssp], #32
0xffff58224310  1040  ldp x9, x10, [jssp, #16]
0xffff58224314  1044  ldp x7, x8, [jssp], #32
0xffff58224318  1048  ldp x13, x14, [jssp, #16]
0xffff5822431c  1052  ldp x11, x12, [jssp], #32
0xffff58224320  1056  ldr lr, [jssp, #16]
0xffff58224324  1060  ldp x15, x18, [jssp], #24
0xffff58224328  1064  ldp x2, x0, [jssp], #16
0xffff5822432c  1068  ldr x16, pc+452 (addr 0x0000ffff582244f0)    ;; external reference (store_buffer_top)
0xffff58224330  1072  ldr x3, [x16]
0xffff58224334  1076  str x10, [x3], #8
0xffff58224338  1080  str x3, [x16]
0xffff5822433c  1084  tst x3, #0x1ffff
0xffff58224340  1088  b.eq #+0x8 (addr 0xffff58224348)
0xffff58224344  1092  ret
0xffff58224348  1096  sub csp, jssp, #0x8 (8)
0xffff5822434c  1100  str lr, [jssp, #-8]!
0xffff58224350  1104  ldr x17, pc+424 (addr 0x0000ffff582244f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58224354  1108  blr x17
0xffff58224358  1112  ldr lr, [jssp], #8
0xffff5822435c  1116  ret
0xffff58224360  1120  and x3, x1, #0xfffffffffff00000
0xffff58224364  1124  ldr x0, [x3, #104]
0xffff58224368  1128  subs x0, x0, #0x1 (1)
0xffff5822436c  1132  str x0, [x3, #104]
0xffff58224370  1136  b.mi #+0x84 (addr 0xffff582243f4)
0xffff58224374  1140  ubfx x16, x1, #8, #12
0xffff58224378  1144  and x3, x1, #0xfffffffffff00000
0xffff5822437c  1148  add x3, x3, x16, lsl #2
0xffff58224380  1152  ubfx x0, x1, #3, #5
0xffff58224384  1156  ldr x3, [x3, #360]
0xffff58224388  1160  lsr x3, x3, x0
0xffff5822438c  1164  tbz w3, #0, #+0x8 (addr 0xffff58224394)
0xffff58224390  1168  tbnz w3, #1, #+0xc (addr 0xffff5822439c)
0xffff58224394  1172  ldp x2, x0, [jssp], #16
0xffff58224398  1176  ret
0xffff5822439c  1180  ldr x3, [x10]
0xffff582243a0  1184  and x0, x3, #0xfffffffffff00000
0xffff582243a4  1188  ldr x0, [x0, #8]
0xffff582243a8  1192  tbz w0, #6, #+0x18 (addr 0xffff582243c0)
0xffff582243ac  1196  and x0, x1, #0xfffffffffff00000
0xffff582243b0  1200  ldr x0, [x0, #8]
0xffff582243b4  1204  movz x16, #0x58
0xffff582243b8  1208  tst x0, x16
0xffff582243bc  1212  b.eq #+0x38 (addr 0xffff582243f4)
0xffff582243c0  1216  sub csp, jssp, #0x10 (16)
0xffff582243c4  1220  stp x1, x10, [jssp, #-16]!
0xffff582243c8  1224  ubfx x16, x3, #8, #12
0xffff582243cc  1228  and x0, x3, #0xfffffffffff00000
0xffff582243d0  1232  add x0, x0, x16, lsl #2
0xffff582243d4  1236  ubfx x1, x3, #3, #5
0xffff582243d8  1240  ldr x10, [x0, #360]
0xffff582243dc  1244  lsr x10, x10, x1
0xffff582243e0  1248  tbz w10, #0, #+0x10 (addr 0xffff582243f0)
0xffff582243e4  1252  ldp x1, x10, [jssp], #16
0xffff582243e8  1256  ldp x2, x0, [jssp], #16
0xffff582243ec  1260  ret
0xffff582243f0  1264  ldp x1, x10, [jssp], #16
0xffff582243f4  1268  sub csp, jssp, #0x78 (120)
0xffff582243f8  1272  stp x14, x15, [jssp, #-32]!
0xffff582243fc  1276  stp x18, lr, [jssp, #16]
0xffff58224400  1280  stp x10, x11, [jssp, #-32]!
0xffff58224404  1284  stp x12, x13, [jssp, #16]
0xffff58224408  1288  stp x6, x7, [jssp, #-32]!
0xffff5822440c  1292  stp x8, x9, [jssp, #16]
0xffff58224410  1296  stp x1, x4, [jssp, #-24]!
0xffff58224414  1300  str x5, [jssp, #16]
0xffff58224418  1304  mov x0, x1
0xffff5822441c  1308  mov x1, x10
0xffff58224420  1312  ldr x2, pc+224 (addr 0x0000ffff58224500)    ;; external reference (isolate)
0xffff58224424  1316  ldr x16, pc+228 (addr 0x0000ffff58224508)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58224428  1320  and csp, jssp, #0xfffffffffffffff0
0xffff5822442c  1324  blr x16
0xffff58224430  1328  ldp x5, x6, [jssp, #16]
0xffff58224434  1332  ldp x1, x4, [jssp], #32
0xffff58224438  1336  ldp x9, x10, [jssp, #16]
0xffff5822443c  1340  ldp x7, x8, [jssp], #32
0xffff58224440  1344  ldp x13, x14, [jssp, #16]
0xffff58224444  1348  ldp x11, x12, [jssp], #32
0xffff58224448  1352  ldr lr, [jssp, #16]
0xffff5822444c  1356  ldp x15, x18, [jssp], #24
0xffff58224450  1360  ldp x2, x0, [jssp], #16
0xffff58224454  1364  ret
0xffff58224458  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5822445c  1372  d63f03e0       constant
0xffff58224460  1376  16e798c0       constant
0xffff58224464  1380  00000000       constant
0xffff58224468  1384  582064c0       constant
0xffff5822446c  1388  0000ffff       constant
0xffff58224470  1392  16e798c0       constant
0xffff58224474  1396  00000000       constant
0xffff58224478  1400  582064c0       constant
0xffff5822447c  1404  0000ffff       constant
0xffff58224480  1408  16e798c0       constant
0xffff58224484  1412  00000000       constant
0xffff58224488  1416  582064c0       constant
0xffff5822448c  1420  0000ffff       constant
0xffff58224490  1424  16e782d0       constant
0xffff58224494  1428  00000000       constant
0xffff58224498  1432  00c2d958       constant
0xffff5822449c  1436  00000000       constant
0xffff582244a0  1440  16e798c0       constant
0xffff582244a4  1444  00000000       constant
0xffff582244a8  1448  582064c0       constant
0xffff582244ac  1452  0000ffff       constant
0xffff582244b0  1456  16e782d0       constant
0xffff582244b4  1460  00000000       constant
0xffff582244b8  1464  00c2d958       constant
0xffff582244bc  1468  00000000       constant
0xffff582244c0  1472  16e798c0       constant
0xffff582244c4  1476  00000000       constant
0xffff582244c8  1480  582064c0       constant
0xffff582244cc  1484  0000ffff       constant
0xffff582244d0  1488  16e798c0       constant
0xffff582244d4  1492  00000000       constant
0xffff582244d8  1496  582064c0       constant
0xffff582244dc  1500  0000ffff       constant
0xffff582244e0  1504  16e782d0       constant
0xffff582244e4  1508  00000000       constant
0xffff582244e8  1512  00c2d958       constant
0xffff582244ec  1516  00000000       constant
0xffff582244f0  1520  16e798c0       constant
0xffff582244f4  1524  00000000       constant
0xffff582244f8  1528  582064c0       constant
0xffff582244fc  1532  0000ffff       constant
0xffff58224500  1536  16e782d0       constant
0xffff58224504  1540  00000000       constant
0xffff58224508  1544  00c2d958       constant
0xffff5822450c  1548  00000000       constant


RelocInfo (size = 59)
0xffff58223f08  external reference (store_buffer_top)  (0x16e798c0)
0xffff58223f2c  code target (STUB)  (0xffff582064c0)
0xffff58223fa4  external reference (store_buffer_top)  (0x16e798c0)
0xffff58223fc8  code target (STUB)  (0xffff582064c0)
0xffff58224008  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822402c  code target (STUB)  (0xffff582064c0)
0xffff5822406c  external reference (isolate)  (0x16e782d0)
0xffff58224070  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582240a0  external reference (store_buffer_top)  (0x16e798c0)
0xffff582240c4  code target (STUB)  (0xffff582064c0)
0xffff58224174  external reference (isolate)  (0x16e782d0)
0xffff58224178  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58224210  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224234  code target (STUB)  (0xffff582064c0)
0xffff58224294  external reference (store_buffer_top)  (0x16e798c0)
0xffff582242b8  code target (STUB)  (0xffff582064c0)
0xffff582242f8  external reference (isolate)  (0x16e782d0)
0xffff582242fc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822432c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224350  code target (STUB)  (0xffff582064c0)
0xffff58224420  external reference (isolate)  (0x16e782d0)
0xffff58224424  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58224458  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff58224580     0  adr xzr, #+0x40 (addr 0xffff582245c0)
0xffff58224584     4  adr xzr, #+0x2a8 (addr 0xffff5822482c)
0xffff58224588     8  ldr x16, pc+1368 (addr 0x0000ffff58224ae0)    ;; external reference (store_buffer_top)
0xffff5822458c    12  ldr x5, [x16]
0xffff58224590    16  str x13, [x5], #8
0xffff58224594    20  str x5, [x16]
0xffff58224598    24  tst x5, #0x1ffff
0xffff5822459c    28  b.eq #+0x8 (addr 0xffff582245a4)
0xffff582245a0    32  ret
0xffff582245a4    36  sub csp, jssp, #0x8 (8)
0xffff582245a8    40  str lr, [jssp, #-8]!
0xffff582245ac    44  ldr x17, pc+1340 (addr 0x0000ffff58224ae8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582245b0    48  blr x17
0xffff582245b4    52  ldr lr, [jssp], #8
0xffff582245b8    56  ret
0xffff582245bc    60  ret
0xffff582245c0    64  sub csp, jssp, #0x10 (16)
0xffff582245c4    68  stp x1, x0, [jssp, #-16]!
0xffff582245c8    72  ldr x5, [x13]
0xffff582245cc    76  and x16, x5, #0xfffffffffff00000
0xffff582245d0    80  ldr x16, [x16, #8]
0xffff582245d4    84  tst x16, #0x18
0xffff582245d8    88  b.eq #+0x17c (addr 0xffff58224754)
0xffff582245dc    92  and x16, x7, #0xfffffffffff00000
0xffff582245e0    96  ldr x16, [x16, #8]
0xffff582245e4   100  tst x16, #0x18
0xffff582245e8   104  b.ne #+0x16c (addr 0xffff58224754)
0xffff582245ec   108  and x5, x7, #0xfffffffffff00000
0xffff582245f0   112  ldr x0, [x5, #104]
0xffff582245f4   116  subs x0, x0, #0x1 (1)
0xffff582245f8   120  str x0, [x5, #104]
0xffff582245fc   124  b.mi #+0xc4 (addr 0xffff582246c0)
0xffff58224600   128  ubfx x16, x7, #8, #12
0xffff58224604   132  and x5, x7, #0xfffffffffff00000
0xffff58224608   136  add x5, x5, x16, lsl #2
0xffff5822460c   140  ubfx x0, x7, #3, #5
0xffff58224610   144  ldr x5, [x5, #360]
0xffff58224614   148  lsr x5, x5, x0
0xffff58224618   152  tbz w5, #0, #+0x8 (addr 0xffff58224620)
0xffff5822461c   156  tbnz w5, #1, #+0x3c (addr 0xffff58224658)
0xffff58224620   160  ldp x1, x0, [jssp], #16
0xffff58224624   164  ldr x16, pc+1228 (addr 0x0000ffff58224af0)    ;; external reference (store_buffer_top)
0xffff58224628   168  ldr x5, [x16]
0xffff5822462c   172  str x13, [x5], #8
0xffff58224630   176  str x5, [x16]
0xffff58224634   180  tst x5, #0x1ffff
0xffff58224638   184  b.eq #+0x8 (addr 0xffff58224640)
0xffff5822463c   188  ret
0xffff58224640   192  sub csp, jssp, #0x8 (8)
0xffff58224644   196  str lr, [jssp, #-8]!
0xffff58224648   200  ldr x17, pc+1200 (addr 0x0000ffff58224af8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822464c   204  blr x17
0xffff58224650   208  ldr lr, [jssp], #8
0xffff58224654   212  ret
0xffff58224658   216  ldr x5, [x13]
0xffff5822465c   220  sub csp, jssp, #0x10 (16)
0xffff58224660   224  stp x7, x13, [jssp, #-16]!
0xffff58224664   228  ubfx x16, x5, #8, #12
0xffff58224668   232  and x0, x5, #0xfffffffffff00000
0xffff5822466c   236  add x0, x0, x16, lsl #2
0xffff58224670   240  ubfx x7, x5, #3, #5
0xffff58224674   244  ldr x13, [x0, #360]
0xffff58224678   248  lsr x13, x13, x7
0xffff5822467c   252  tbz w13, #0, #+0x40 (addr 0xffff582246bc)
0xffff58224680   256  ldp x7, x13, [jssp], #16
0xffff58224684   260  ldp x1, x0, [jssp], #16
0xffff58224688   264  ldr x16, pc+1144 (addr 0x0000ffff58224b00)    ;; external reference (store_buffer_top)
0xffff5822468c   268  ldr x5, [x16]
0xffff58224690   272  str x13, [x5], #8
0xffff58224694   276  str x5, [x16]
0xffff58224698   280  tst x5, #0x1ffff
0xffff5822469c   284  b.eq #+0x8 (addr 0xffff582246a4)
0xffff582246a0   288  ret
0xffff582246a4   292  sub csp, jssp, #0x8 (8)
0xffff582246a8   296  str lr, [jssp, #-8]!
0xffff582246ac   300  ldr x17, pc+1116 (addr 0x0000ffff58224b08)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582246b0   304  blr x17
0xffff582246b4   308  ldr lr, [jssp], #8
0xffff582246b8   312  ret
0xffff582246bc   316  ldp x7, x13, [jssp], #16
0xffff582246c0   320  sub csp, jssp, #0x78 (120)
0xffff582246c4   324  stp x14, x15, [jssp, #-32]!
0xffff582246c8   328  stp x18, lr, [jssp, #16]
0xffff582246cc   332  stp x10, x11, [jssp, #-32]!
0xffff582246d0   336  stp x12, x13, [jssp, #16]
0xffff582246d4   340  stp x6, x7, [jssp, #-32]!
0xffff582246d8   344  stp x8, x9, [jssp, #16]
0xffff582246dc   348  stp x2, x3, [jssp, #-24]!
0xffff582246e0   352  str x4, [jssp, #16]
0xffff582246e4   356  mov x0, x7
0xffff582246e8   360  mov x1, x13
0xffff582246ec   364  ldr x2, pc+1060 (addr 0x0000ffff58224b10)    ;; external reference (isolate)
0xffff582246f0   368  ldr x16, pc+1064 (addr 0x0000ffff58224b18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582246f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff582246f8   376  blr x16
0xffff582246fc   380  ldp x4, x6, [jssp, #16]
0xffff58224700   384  ldp x2, x3, [jssp], #32
0xffff58224704   388  ldp x9, x10, [jssp, #16]
0xffff58224708   392  ldp x7, x8, [jssp], #32
0xffff5822470c   396  ldp x13, x14, [jssp, #16]
0xffff58224710   400  ldp x11, x12, [jssp], #32
0xffff58224714   404  ldr lr, [jssp, #16]
0xffff58224718   408  ldp x15, x18, [jssp], #24
0xffff5822471c   412  ldp x1, x0, [jssp], #16
0xffff58224720   416  ldr x16, pc+1024 (addr 0x0000ffff58224b20)    ;; external reference (store_buffer_top)
0xffff58224724   420  ldr x5, [x16]
0xffff58224728   424  str x13, [x5], #8
0xffff5822472c   428  str x5, [x16]
0xffff58224730   432  tst x5, #0x1ffff
0xffff58224734   436  b.eq #+0x8 (addr 0xffff5822473c)
0xffff58224738   440  ret
0xffff5822473c   444  sub csp, jssp, #0x8 (8)
0xffff58224740   448  str lr, [jssp, #-8]!
0xffff58224744   452  ldr x17, pc+996 (addr 0x0000ffff58224b28)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58224748   456  blr x17
0xffff5822474c   460  ldr lr, [jssp], #8
0xffff58224750   464  ret
0xffff58224754   468  and x5, x7, #0xfffffffffff00000
0xffff58224758   472  ldr x0, [x5, #104]
0xffff5822475c   476  subs x0, x0, #0x1 (1)
0xffff58224760   480  str x0, [x5, #104]
0xffff58224764   484  b.mi #+0x64 (addr 0xffff582247c8)
0xffff58224768   488  ubfx x16, x7, #8, #12
0xffff5822476c   492  and x5, x7, #0xfffffffffff00000
0xffff58224770   496  add x5, x5, x16, lsl #2
0xffff58224774   500  ubfx x0, x7, #3, #5
0xffff58224778   504  ldr x5, [x5, #360]
0xffff5822477c   508  lsr x5, x5, x0
0xffff58224780   512  tbz w5, #0, #+0x8 (addr 0xffff58224788)
0xffff58224784   516  tbnz w5, #1, #+0xc (addr 0xffff58224790)
0xffff58224788   520  ldp x1, x0, [jssp], #16
0xffff5822478c   524  ret
0xffff58224790   528  ldr x5, [x13]
0xffff58224794   532  sub csp, jssp, #0x10 (16)
0xffff58224798   536  stp x7, x13, [jssp, #-16]!
0xffff5822479c   540  ubfx x16, x5, #8, #12
0xffff582247a0   544  and x0, x5, #0xfffffffffff00000
0xffff582247a4   548  add x0, x0, x16, lsl #2
0xffff582247a8   552  ubfx x7, x5, #3, #5
0xffff582247ac   556  ldr x13, [x0, #360]
0xffff582247b0   560  lsr x13, x13, x7
0xffff582247b4   564  tbz w13, #0, #+0x10 (addr 0xffff582247c4)
0xffff582247b8   568  ldp x7, x13, [jssp], #16
0xffff582247bc   572  ldp x1, x0, [jssp], #16
0xffff582247c0   576  ret
0xffff582247c4   580  ldp x7, x13, [jssp], #16
0xffff582247c8   584  sub csp, jssp, #0x78 (120)
0xffff582247cc   588  stp x14, x15, [jssp, #-32]!
0xffff582247d0   592  stp x18, lr, [jssp, #16]
0xffff582247d4   596  stp x10, x11, [jssp, #-32]!
0xffff582247d8   600  stp x12, x13, [jssp, #16]
0xffff582247dc   604  stp x6, x7, [jssp, #-32]!
0xffff582247e0   608  stp x8, x9, [jssp, #16]
0xffff582247e4   612  stp x2, x3, [jssp, #-24]!
0xffff582247e8   616  str x4, [jssp, #16]
0xffff582247ec   620  mov x0, x7
0xffff582247f0   624  mov x1, x13
0xffff582247f4   628  ldr x2, pc+828 (addr 0x0000ffff58224b30)    ;; external reference (isolate)
0xffff582247f8   632  ldr x16, pc+832 (addr 0x0000ffff58224b38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582247fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff58224800   640  blr x16
0xffff58224804   644  ldp x4, x6, [jssp, #16]
0xffff58224808   648  ldp x2, x3, [jssp], #32
0xffff5822480c   652  ldp x9, x10, [jssp, #16]
0xffff58224810   656  ldp x7, x8, [jssp], #32
0xffff58224814   660  ldp x13, x14, [jssp, #16]
0xffff58224818   664  ldp x11, x12, [jssp], #32
0xffff5822481c   668  ldr lr, [jssp, #16]
0xffff58224820   672  ldp x15, x18, [jssp], #24
0xffff58224824   676  ldp x1, x0, [jssp], #16
0xffff58224828   680  ret
0xffff5822482c   684  sub csp, jssp, #0x10 (16)
0xffff58224830   688  stp x1, x0, [jssp, #-16]!
0xffff58224834   692  ldr x5, [x13]
0xffff58224838   696  and x16, x5, #0xfffffffffff00000
0xffff5822483c   700  ldr x16, [x16, #8]
0xffff58224840   704  tst x16, #0x18
0xffff58224844   708  b.eq #+0x19c (addr 0xffff582249e0)
0xffff58224848   712  and x16, x7, #0xfffffffffff00000
0xffff5822484c   716  ldr x16, [x16, #8]
0xffff58224850   720  tst x16, #0x18
0xffff58224854   724  b.ne #+0x18c (addr 0xffff582249e0)
0xffff58224858   728  and x5, x7, #0xfffffffffff00000
0xffff5822485c   732  ldr x0, [x5, #104]
0xffff58224860   736  subs x0, x0, #0x1 (1)
0xffff58224864   740  str x0, [x5, #104]
0xffff58224868   744  b.mi #+0xe4 (addr 0xffff5822494c)
0xffff5822486c   748  ubfx x16, x7, #8, #12
0xffff58224870   752  and x5, x7, #0xfffffffffff00000
0xffff58224874   756  add x5, x5, x16, lsl #2
0xffff58224878   760  ubfx x0, x7, #3, #5
0xffff5822487c   764  ldr x5, [x5, #360]
0xffff58224880   768  lsr x5, x5, x0
0xffff58224884   772  tbz w5, #0, #+0x8 (addr 0xffff5822488c)
0xffff58224888   776  tbnz w5, #1, #+0x3c (addr 0xffff582248c4)
0xffff5822488c   780  ldp x1, x0, [jssp], #16
0xffff58224890   784  ldr x16, pc+688 (addr 0x0000ffff58224b40)    ;; external reference (store_buffer_top)
0xffff58224894   788  ldr x5, [x16]
0xffff58224898   792  str x13, [x5], #8
0xffff5822489c   796  str x5, [x16]
0xffff582248a0   800  tst x5, #0x1ffff
0xffff582248a4   804  b.eq #+0x8 (addr 0xffff582248ac)
0xffff582248a8   808  ret
0xffff582248ac   812  sub csp, jssp, #0x8 (8)
0xffff582248b0   816  str lr, [jssp, #-8]!
0xffff582248b4   820  ldr x17, pc+660 (addr 0x0000ffff58224b48)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582248b8   824  blr x17
0xffff582248bc   828  ldr lr, [jssp], #8
0xffff582248c0   832  ret
0xffff582248c4   836  ldr x5, [x13]
0xffff582248c8   840  and x0, x5, #0xfffffffffff00000
0xffff582248cc   844  ldr x0, [x0, #8]
0xffff582248d0   848  tbz w0, #6, #+0x18 (addr 0xffff582248e8)
0xffff582248d4   852  and x0, x7, #0xfffffffffff00000
0xffff582248d8   856  ldr x0, [x0, #8]
0xffff582248dc   860  movz x16, #0x58
0xffff582248e0   864  tst x0, x16
0xffff582248e4   868  b.eq #+0x68 (addr 0xffff5822494c)
0xffff582248e8   872  sub csp, jssp, #0x10 (16)
0xffff582248ec   876  stp x7, x13, [jssp, #-16]!
0xffff582248f0   880  ubfx x16, x5, #8, #12
0xffff582248f4   884  and x0, x5, #0xfffffffffff00000
0xffff582248f8   888  add x0, x0, x16, lsl #2
0xffff582248fc   892  ubfx x7, x5, #3, #5
0xffff58224900   896  ldr x13, [x0, #360]
0xffff58224904   900  lsr x13, x13, x7
0xffff58224908   904  tbz w13, #0, #+0x40 (addr 0xffff58224948)
0xffff5822490c   908  ldp x7, x13, [jssp], #16
0xffff58224910   912  ldp x1, x0, [jssp], #16
0xffff58224914   916  ldr x16, pc+572 (addr 0x0000ffff58224b50)    ;; external reference (store_buffer_top)
0xffff58224918   920  ldr x5, [x16]
0xffff5822491c   924  str x13, [x5], #8
0xffff58224920   928  str x5, [x16]
0xffff58224924   932  tst x5, #0x1ffff
0xffff58224928   936  b.eq #+0x8 (addr 0xffff58224930)
0xffff5822492c   940  ret
0xffff58224930   944  sub csp, jssp, #0x8 (8)
0xffff58224934   948  str lr, [jssp, #-8]!
0xffff58224938   952  ldr x17, pc+544 (addr 0x0000ffff58224b58)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822493c   956  blr x17
0xffff58224940   960  ldr lr, [jssp], #8
0xffff58224944   964  ret
0xffff58224948   968  ldp x7, x13, [jssp], #16
0xffff5822494c   972  sub csp, jssp, #0x78 (120)
0xffff58224950   976  stp x14, x15, [jssp, #-32]!
0xffff58224954   980  stp x18, lr, [jssp, #16]
0xffff58224958   984  stp x10, x11, [jssp, #-32]!
0xffff5822495c   988  stp x12, x13, [jssp, #16]
0xffff58224960   992  stp x6, x7, [jssp, #-32]!
0xffff58224964   996  stp x8, x9, [jssp, #16]
0xffff58224968  1000  stp x2, x3, [jssp, #-24]!
0xffff5822496c  1004  str x4, [jssp, #16]
0xffff58224970  1008  mov x0, x7
0xffff58224974  1012  mov x1, x13
0xffff58224978  1016  ldr x2, pc+488 (addr 0x0000ffff58224b60)    ;; external reference (isolate)
0xffff5822497c  1020  ldr x16, pc+492 (addr 0x0000ffff58224b68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58224980  1024  and csp, jssp, #0xfffffffffffffff0
0xffff58224984  1028  blr x16
0xffff58224988  1032  ldp x4, x6, [jssp, #16]
0xffff5822498c  1036  ldp x2, x3, [jssp], #32
0xffff58224990  1040  ldp x9, x10, [jssp, #16]
0xffff58224994  1044  ldp x7, x8, [jssp], #32
0xffff58224998  1048  ldp x13, x14, [jssp, #16]
0xffff5822499c  1052  ldp x11, x12, [jssp], #32
0xffff582249a0  1056  ldr lr, [jssp, #16]
0xffff582249a4  1060  ldp x15, x18, [jssp], #24
0xffff582249a8  1064  ldp x1, x0, [jssp], #16
0xffff582249ac  1068  ldr x16, pc+452 (addr 0x0000ffff58224b70)    ;; external reference (store_buffer_top)
0xffff582249b0  1072  ldr x5, [x16]
0xffff582249b4  1076  str x13, [x5], #8
0xffff582249b8  1080  str x5, [x16]
0xffff582249bc  1084  tst x5, #0x1ffff
0xffff582249c0  1088  b.eq #+0x8 (addr 0xffff582249c8)
0xffff582249c4  1092  ret
0xffff582249c8  1096  sub csp, jssp, #0x8 (8)
0xffff582249cc  1100  str lr, [jssp, #-8]!
0xffff582249d0  1104  ldr x17, pc+424 (addr 0x0000ffff58224b78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582249d4  1108  blr x17
0xffff582249d8  1112  ldr lr, [jssp], #8
0xffff582249dc  1116  ret
0xffff582249e0  1120  and x5, x7, #0xfffffffffff00000
0xffff582249e4  1124  ldr x0, [x5, #104]
0xffff582249e8  1128  subs x0, x0, #0x1 (1)
0xffff582249ec  1132  str x0, [x5, #104]
0xffff582249f0  1136  b.mi #+0x84 (addr 0xffff58224a74)
0xffff582249f4  1140  ubfx x16, x7, #8, #12
0xffff582249f8  1144  and x5, x7, #0xfffffffffff00000
0xffff582249fc  1148  add x5, x5, x16, lsl #2
0xffff58224a00  1152  ubfx x0, x7, #3, #5
0xffff58224a04  1156  ldr x5, [x5, #360]
0xffff58224a08  1160  lsr x5, x5, x0
0xffff58224a0c  1164  tbz w5, #0, #+0x8 (addr 0xffff58224a14)
0xffff58224a10  1168  tbnz w5, #1, #+0xc (addr 0xffff58224a1c)
0xffff58224a14  1172  ldp x1, x0, [jssp], #16
0xffff58224a18  1176  ret
0xffff58224a1c  1180  ldr x5, [x13]
0xffff58224a20  1184  and x0, x5, #0xfffffffffff00000
0xffff58224a24  1188  ldr x0, [x0, #8]
0xffff58224a28  1192  tbz w0, #6, #+0x18 (addr 0xffff58224a40)
0xffff58224a2c  1196  and x0, x7, #0xfffffffffff00000
0xffff58224a30  1200  ldr x0, [x0, #8]
0xffff58224a34  1204  movz x16, #0x58
0xffff58224a38  1208  tst x0, x16
0xffff58224a3c  1212  b.eq #+0x38 (addr 0xffff58224a74)
0xffff58224a40  1216  sub csp, jssp, #0x10 (16)
0xffff58224a44  1220  stp x7, x13, [jssp, #-16]!
0xffff58224a48  1224  ubfx x16, x5, #8, #12
0xffff58224a4c  1228  and x0, x5, #0xfffffffffff00000
0xffff58224a50  1232  add x0, x0, x16, lsl #2
0xffff58224a54  1236  ubfx x7, x5, #3, #5
0xffff58224a58  1240  ldr x13, [x0, #360]
0xffff58224a5c  1244  lsr x13, x13, x7
0xffff58224a60  1248  tbz w13, #0, #+0x10 (addr 0xffff58224a70)
0xffff58224a64  1252  ldp x7, x13, [jssp], #16
0xffff58224a68  1256  ldp x1, x0, [jssp], #16
0xffff58224a6c  1260  ret
0xffff58224a70  1264  ldp x7, x13, [jssp], #16
0xffff58224a74  1268  sub csp, jssp, #0x78 (120)
0xffff58224a78  1272  stp x14, x15, [jssp, #-32]!
0xffff58224a7c  1276  stp x18, lr, [jssp, #16]
0xffff58224a80  1280  stp x10, x11, [jssp, #-32]!
0xffff58224a84  1284  stp x12, x13, [jssp, #16]
0xffff58224a88  1288  stp x6, x7, [jssp, #-32]!
0xffff58224a8c  1292  stp x8, x9, [jssp, #16]
0xffff58224a90  1296  stp x2, x3, [jssp, #-24]!
0xffff58224a94  1300  str x4, [jssp, #16]
0xffff58224a98  1304  mov x0, x7
0xffff58224a9c  1308  mov x1, x13
0xffff58224aa0  1312  ldr x2, pc+224 (addr 0x0000ffff58224b80)    ;; external reference (isolate)
0xffff58224aa4  1316  ldr x16, pc+228 (addr 0x0000ffff58224b88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58224aa8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff58224aac  1324  blr x16
0xffff58224ab0  1328  ldp x4, x6, [jssp, #16]
0xffff58224ab4  1332  ldp x2, x3, [jssp], #32
0xffff58224ab8  1336  ldp x9, x10, [jssp, #16]
0xffff58224abc  1340  ldp x7, x8, [jssp], #32
0xffff58224ac0  1344  ldp x13, x14, [jssp, #16]
0xffff58224ac4  1348  ldp x11, x12, [jssp], #32
0xffff58224ac8  1352  ldr lr, [jssp, #16]
0xffff58224acc  1356  ldp x15, x18, [jssp], #24
0xffff58224ad0  1360  ldp x1, x0, [jssp], #16
0xffff58224ad4  1364  ret
0xffff58224ad8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff58224adc  1372  d63f03e0       constant
0xffff58224ae0  1376  16e798c0       constant
0xffff58224ae4  1380  00000000       constant
0xffff58224ae8  1384  582064c0       constant
0xffff58224aec  1388  0000ffff       constant
0xffff58224af0  1392  16e798c0       constant
0xffff58224af4  1396  00000000       constant
0xffff58224af8  1400  582064c0       constant
0xffff58224afc  1404  0000ffff       constant
0xffff58224b00  1408  16e798c0       constant
0xffff58224b04  1412  00000000       constant
0xffff58224b08  1416  582064c0       constant
0xffff58224b0c  1420  0000ffff       constant
0xffff58224b10  1424  16e782d0       constant
0xffff58224b14  1428  00000000       constant
0xffff58224b18  1432  00c2d958       constant
0xffff58224b1c  1436  00000000       constant
0xffff58224b20  1440  16e798c0       constant
0xffff58224b24  1444  00000000       constant
0xffff58224b28  1448  582064c0       constant
0xffff58224b2c  1452  0000ffff       constant
0xffff58224b30  1456  16e782d0       constant
0xffff58224b34  1460  00000000       constant
0xffff58224b38  1464  00c2d958       constant
0xffff58224b3c  1468  00000000       constant
0xffff58224b40  1472  16e798c0       constant
0xffff58224b44  1476  00000000       constant
0xffff58224b48  1480  582064c0       constant
0xffff58224b4c  1484  0000ffff       constant
0xffff58224b50  1488  16e798c0       constant
0xffff58224b54  1492  00000000       constant
0xffff58224b58  1496  582064c0       constant
0xffff58224b5c  1500  0000ffff       constant
0xffff58224b60  1504  16e782d0       constant
0xffff58224b64  1508  00000000       constant
0xffff58224b68  1512  00c2d958       constant
0xffff58224b6c  1516  00000000       constant
0xffff58224b70  1520  16e798c0       constant
0xffff58224b74  1524  00000000       constant
0xffff58224b78  1528  582064c0       constant
0xffff58224b7c  1532  0000ffff       constant
0xffff58224b80  1536  16e782d0       constant
0xffff58224b84  1540  00000000       constant
0xffff58224b88  1544  00c2d958       constant
0xffff58224b8c  1548  00000000       constant


RelocInfo (size = 59)
0xffff58224588  external reference (store_buffer_top)  (0x16e798c0)
0xffff582245ac  code target (STUB)  (0xffff582064c0)
0xffff58224624  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224648  code target (STUB)  (0xffff582064c0)
0xffff58224688  external reference (store_buffer_top)  (0x16e798c0)
0xffff582246ac  code target (STUB)  (0xffff582064c0)
0xffff582246ec  external reference (isolate)  (0x16e782d0)
0xffff582246f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58224720  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224744  code target (STUB)  (0xffff582064c0)
0xffff582247f4  external reference (isolate)  (0x16e782d0)
0xffff582247f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58224890  external reference (store_buffer_top)  (0x16e798c0)
0xffff582248b4  code target (STUB)  (0xffff582064c0)
0xffff58224914  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224938  code target (STUB)  (0xffff582064c0)
0xffff58224978  external reference (isolate)  (0x16e782d0)
0xffff5822497c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582249ac  external reference (store_buffer_top)  (0x16e798c0)
0xffff582249d0  code target (STUB)  (0xffff582064c0)
0xffff58224aa0  external reference (isolate)  (0x16e782d0)
0xffff58224aa4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58224ad8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff58224c00     0  adr xzr, #+0x40 (addr 0xffff58224c40)
0xffff58224c04     4  adr xzr, #+0x2a8 (addr 0xffff58224eac)
0xffff58224c08     8  ldr x16, pc+1368 (addr 0x0000ffff58225160)    ;; external reference (store_buffer_top)
0xffff58224c0c    12  ldr x7, [x16]
0xffff58224c10    16  str x13, [x7], #8
0xffff58224c14    20  str x7, [x16]
0xffff58224c18    24  tst x7, #0x1ffff
0xffff58224c1c    28  b.eq #+0x8 (addr 0xffff58224c24)
0xffff58224c20    32  ret
0xffff58224c24    36  sub csp, jssp, #0x8 (8)
0xffff58224c28    40  str lr, [jssp, #-8]!
0xffff58224c2c    44  ldr x17, pc+1340 (addr 0x0000ffff58225168)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58224c30    48  blr x17
0xffff58224c34    52  ldr lr, [jssp], #8
0xffff58224c38    56  ret
0xffff58224c3c    60  ret
0xffff58224c40    64  sub csp, jssp, #0x10 (16)
0xffff58224c44    68  stp x2, x0, [jssp, #-16]!
0xffff58224c48    72  ldr x7, [x13]
0xffff58224c4c    76  and x16, x7, #0xfffffffffff00000
0xffff58224c50    80  ldr x16, [x16, #8]
0xffff58224c54    84  tst x16, #0x18
0xffff58224c58    88  b.eq #+0x17c (addr 0xffff58224dd4)
0xffff58224c5c    92  and x16, x1, #0xfffffffffff00000
0xffff58224c60    96  ldr x16, [x16, #8]
0xffff58224c64   100  tst x16, #0x18
0xffff58224c68   104  b.ne #+0x16c (addr 0xffff58224dd4)
0xffff58224c6c   108  and x7, x1, #0xfffffffffff00000
0xffff58224c70   112  ldr x0, [x7, #104]
0xffff58224c74   116  subs x0, x0, #0x1 (1)
0xffff58224c78   120  str x0, [x7, #104]
0xffff58224c7c   124  b.mi #+0xc4 (addr 0xffff58224d40)
0xffff58224c80   128  ubfx x16, x1, #8, #12
0xffff58224c84   132  and x7, x1, #0xfffffffffff00000
0xffff58224c88   136  add x7, x7, x16, lsl #2
0xffff58224c8c   140  ubfx x0, x1, #3, #5
0xffff58224c90   144  ldr x7, [x7, #360]
0xffff58224c94   148  lsr x7, x7, x0
0xffff58224c98   152  tbz w7, #0, #+0x8 (addr 0xffff58224ca0)
0xffff58224c9c   156  tbnz w7, #1, #+0x3c (addr 0xffff58224cd8)
0xffff58224ca0   160  ldp x2, x0, [jssp], #16
0xffff58224ca4   164  ldr x16, pc+1228 (addr 0x0000ffff58225170)    ;; external reference (store_buffer_top)
0xffff58224ca8   168  ldr x7, [x16]
0xffff58224cac   172  str x13, [x7], #8
0xffff58224cb0   176  str x7, [x16]
0xffff58224cb4   180  tst x7, #0x1ffff
0xffff58224cb8   184  b.eq #+0x8 (addr 0xffff58224cc0)
0xffff58224cbc   188  ret
0xffff58224cc0   192  sub csp, jssp, #0x8 (8)
0xffff58224cc4   196  str lr, [jssp, #-8]!
0xffff58224cc8   200  ldr x17, pc+1200 (addr 0x0000ffff58225178)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58224ccc   204  blr x17
0xffff58224cd0   208  ldr lr, [jssp], #8
0xffff58224cd4   212  ret
0xffff58224cd8   216  ldr x7, [x13]
0xffff58224cdc   220  sub csp, jssp, #0x10 (16)
0xffff58224ce0   224  stp x1, x13, [jssp, #-16]!
0xffff58224ce4   228  ubfx x16, x7, #8, #12
0xffff58224ce8   232  and x0, x7, #0xfffffffffff00000
0xffff58224cec   236  add x0, x0, x16, lsl #2
0xffff58224cf0   240  ubfx x1, x7, #3, #5
0xffff58224cf4   244  ldr x13, [x0, #360]
0xffff58224cf8   248  lsr x13, x13, x1
0xffff58224cfc   252  tbz w13, #0, #+0x40 (addr 0xffff58224d3c)
0xffff58224d00   256  ldp x1, x13, [jssp], #16
0xffff58224d04   260  ldp x2, x0, [jssp], #16
0xffff58224d08   264  ldr x16, pc+1144 (addr 0x0000ffff58225180)    ;; external reference (store_buffer_top)
0xffff58224d0c   268  ldr x7, [x16]
0xffff58224d10   272  str x13, [x7], #8
0xffff58224d14   276  str x7, [x16]
0xffff58224d18   280  tst x7, #0x1ffff
0xffff58224d1c   284  b.eq #+0x8 (addr 0xffff58224d24)
0xffff58224d20   288  ret
0xffff58224d24   292  sub csp, jssp, #0x8 (8)
0xffff58224d28   296  str lr, [jssp, #-8]!
0xffff58224d2c   300  ldr x17, pc+1116 (addr 0x0000ffff58225188)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58224d30   304  blr x17
0xffff58224d34   308  ldr lr, [jssp], #8
0xffff58224d38   312  ret
0xffff58224d3c   316  ldp x1, x13, [jssp], #16
0xffff58224d40   320  sub csp, jssp, #0x78 (120)
0xffff58224d44   324  stp x14, x15, [jssp, #-32]!
0xffff58224d48   328  stp x18, lr, [jssp, #16]
0xffff58224d4c   332  stp x10, x11, [jssp, #-32]!
0xffff58224d50   336  stp x12, x13, [jssp, #16]
0xffff58224d54   340  stp x5, x6, [jssp, #-32]!
0xffff58224d58   344  stp x8, x9, [jssp, #16]
0xffff58224d5c   348  stp x1, x3, [jssp, #-24]!
0xffff58224d60   352  str x4, [jssp, #16]
0xffff58224d64   356  mov x0, x1
0xffff58224d68   360  mov x1, x13
0xffff58224d6c   364  ldr x2, pc+1060 (addr 0x0000ffff58225190)    ;; external reference (isolate)
0xffff58224d70   368  ldr x16, pc+1064 (addr 0x0000ffff58225198)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58224d74   372  and csp, jssp, #0xfffffffffffffff0
0xffff58224d78   376  blr x16
0xffff58224d7c   380  ldp x4, x5, [jssp, #16]
0xffff58224d80   384  ldp x1, x3, [jssp], #32
0xffff58224d84   388  ldp x9, x10, [jssp, #16]
0xffff58224d88   392  ldp x6, x8, [jssp], #32
0xffff58224d8c   396  ldp x13, x14, [jssp, #16]
0xffff58224d90   400  ldp x11, x12, [jssp], #32
0xffff58224d94   404  ldr lr, [jssp, #16]
0xffff58224d98   408  ldp x15, x18, [jssp], #24
0xffff58224d9c   412  ldp x2, x0, [jssp], #16
0xffff58224da0   416  ldr x16, pc+1024 (addr 0x0000ffff582251a0)    ;; external reference (store_buffer_top)
0xffff58224da4   420  ldr x7, [x16]
0xffff58224da8   424  str x13, [x7], #8
0xffff58224dac   428  str x7, [x16]
0xffff58224db0   432  tst x7, #0x1ffff
0xffff58224db4   436  b.eq #+0x8 (addr 0xffff58224dbc)
0xffff58224db8   440  ret
0xffff58224dbc   444  sub csp, jssp, #0x8 (8)
0xffff58224dc0   448  str lr, [jssp, #-8]!
0xffff58224dc4   452  ldr x17, pc+996 (addr 0x0000ffff582251a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58224dc8   456  blr x17
0xffff58224dcc   460  ldr lr, [jssp], #8
0xffff58224dd0   464  ret
0xffff58224dd4   468  and x7, x1, #0xfffffffffff00000
0xffff58224dd8   472  ldr x0, [x7, #104]
0xffff58224ddc   476  subs x0, x0, #0x1 (1)
0xffff58224de0   480  str x0, [x7, #104]
0xffff58224de4   484  b.mi #+0x64 (addr 0xffff58224e48)
0xffff58224de8   488  ubfx x16, x1, #8, #12
0xffff58224dec   492  and x7, x1, #0xfffffffffff00000
0xffff58224df0   496  add x7, x7, x16, lsl #2
0xffff58224df4   500  ubfx x0, x1, #3, #5
0xffff58224df8   504  ldr x7, [x7, #360]
0xffff58224dfc   508  lsr x7, x7, x0
0xffff58224e00   512  tbz w7, #0, #+0x8 (addr 0xffff58224e08)
0xffff58224e04   516  tbnz w7, #1, #+0xc (addr 0xffff58224e10)
0xffff58224e08   520  ldp x2, x0, [jssp], #16
0xffff58224e0c   524  ret
0xffff58224e10   528  ldr x7, [x13]
0xffff58224e14   532  sub csp, jssp, #0x10 (16)
0xffff58224e18   536  stp x1, x13, [jssp, #-16]!
0xffff58224e1c   540  ubfx x16, x7, #8, #12
0xffff58224e20   544  and x0, x7, #0xfffffffffff00000
0xffff58224e24   548  add x0, x0, x16, lsl #2
0xffff58224e28   552  ubfx x1, x7, #3, #5
0xffff58224e2c   556  ldr x13, [x0, #360]
0xffff58224e30   560  lsr x13, x13, x1
0xffff58224e34   564  tbz w13, #0, #+0x10 (addr 0xffff58224e44)
0xffff58224e38   568  ldp x1, x13, [jssp], #16
0xffff58224e3c   572  ldp x2, x0, [jssp], #16
0xffff58224e40   576  ret
0xffff58224e44   580  ldp x1, x13, [jssp], #16
0xffff58224e48   584  sub csp, jssp, #0x78 (120)
0xffff58224e4c   588  stp x14, x15, [jssp, #-32]!
0xffff58224e50   592  stp x18, lr, [jssp, #16]
0xffff58224e54   596  stp x10, x11, [jssp, #-32]!
0xffff58224e58   600  stp x12, x13, [jssp, #16]
0xffff58224e5c   604  stp x5, x6, [jssp, #-32]!
0xffff58224e60   608  stp x8, x9, [jssp, #16]
0xffff58224e64   612  stp x1, x3, [jssp, #-24]!
0xffff58224e68   616  str x4, [jssp, #16]
0xffff58224e6c   620  mov x0, x1
0xffff58224e70   624  mov x1, x13
0xffff58224e74   628  ldr x2, pc+828 (addr 0x0000ffff582251b0)    ;; external reference (isolate)
0xffff58224e78   632  ldr x16, pc+832 (addr 0x0000ffff582251b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58224e7c   636  and csp, jssp, #0xfffffffffffffff0
0xffff58224e80   640  blr x16
0xffff58224e84   644  ldp x4, x5, [jssp, #16]
0xffff58224e88   648  ldp x1, x3, [jssp], #32
0xffff58224e8c   652  ldp x9, x10, [jssp, #16]
0xffff58224e90   656  ldp x6, x8, [jssp], #32
0xffff58224e94   660  ldp x13, x14, [jssp, #16]
0xffff58224e98   664  ldp x11, x12, [jssp], #32
0xffff58224e9c   668  ldr lr, [jssp, #16]
0xffff58224ea0   672  ldp x15, x18, [jssp], #24
0xffff58224ea4   676  ldp x2, x0, [jssp], #16
0xffff58224ea8   680  ret
0xffff58224eac   684  sub csp, jssp, #0x10 (16)
0xffff58224eb0   688  stp x2, x0, [jssp, #-16]!
0xffff58224eb4   692  ldr x7, [x13]
0xffff58224eb8   696  and x16, x7, #0xfffffffffff00000
0xffff58224ebc   700  ldr x16, [x16, #8]
0xffff58224ec0   704  tst x16, #0x18
0xffff58224ec4   708  b.eq #+0x19c (addr 0xffff58225060)
0xffff58224ec8   712  and x16, x1, #0xfffffffffff00000
0xffff58224ecc   716  ldr x16, [x16, #8]
0xffff58224ed0   720  tst x16, #0x18
0xffff58224ed4   724  b.ne #+0x18c (addr 0xffff58225060)
0xffff58224ed8   728  and x7, x1, #0xfffffffffff00000
0xffff58224edc   732  ldr x0, [x7, #104]
0xffff58224ee0   736  subs x0, x0, #0x1 (1)
0xffff58224ee4   740  str x0, [x7, #104]
0xffff58224ee8   744  b.mi #+0xe4 (addr 0xffff58224fcc)
0xffff58224eec   748  ubfx x16, x1, #8, #12
0xffff58224ef0   752  and x7, x1, #0xfffffffffff00000
0xffff58224ef4   756  add x7, x7, x16, lsl #2
0xffff58224ef8   760  ubfx x0, x1, #3, #5
0xffff58224efc   764  ldr x7, [x7, #360]
0xffff58224f00   768  lsr x7, x7, x0
0xffff58224f04   772  tbz w7, #0, #+0x8 (addr 0xffff58224f0c)
0xffff58224f08   776  tbnz w7, #1, #+0x3c (addr 0xffff58224f44)
0xffff58224f0c   780  ldp x2, x0, [jssp], #16
0xffff58224f10   784  ldr x16, pc+688 (addr 0x0000ffff582251c0)    ;; external reference (store_buffer_top)
0xffff58224f14   788  ldr x7, [x16]
0xffff58224f18   792  str x13, [x7], #8
0xffff58224f1c   796  str x7, [x16]
0xffff58224f20   800  tst x7, #0x1ffff
0xffff58224f24   804  b.eq #+0x8 (addr 0xffff58224f2c)
0xffff58224f28   808  ret
0xffff58224f2c   812  sub csp, jssp, #0x8 (8)
0xffff58224f30   816  str lr, [jssp, #-8]!
0xffff58224f34   820  ldr x17, pc+660 (addr 0x0000ffff582251c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58224f38   824  blr x17
0xffff58224f3c   828  ldr lr, [jssp], #8
0xffff58224f40   832  ret
0xffff58224f44   836  ldr x7, [x13]
0xffff58224f48   840  and x0, x7, #0xfffffffffff00000
0xffff58224f4c   844  ldr x0, [x0, #8]
0xffff58224f50   848  tbz w0, #6, #+0x18 (addr 0xffff58224f68)
0xffff58224f54   852  and x0, x1, #0xfffffffffff00000
0xffff58224f58   856  ldr x0, [x0, #8]
0xffff58224f5c   860  movz x16, #0x58
0xffff58224f60   864  tst x0, x16
0xffff58224f64   868  b.eq #+0x68 (addr 0xffff58224fcc)
0xffff58224f68   872  sub csp, jssp, #0x10 (16)
0xffff58224f6c   876  stp x1, x13, [jssp, #-16]!
0xffff58224f70   880  ubfx x16, x7, #8, #12
0xffff58224f74   884  and x0, x7, #0xfffffffffff00000
0xffff58224f78   888  add x0, x0, x16, lsl #2
0xffff58224f7c   892  ubfx x1, x7, #3, #5
0xffff58224f80   896  ldr x13, [x0, #360]
0xffff58224f84   900  lsr x13, x13, x1
0xffff58224f88   904  tbz w13, #0, #+0x40 (addr 0xffff58224fc8)
0xffff58224f8c   908  ldp x1, x13, [jssp], #16
0xffff58224f90   912  ldp x2, x0, [jssp], #16
0xffff58224f94   916  ldr x16, pc+572 (addr 0x0000ffff582251d0)    ;; external reference (store_buffer_top)
0xffff58224f98   920  ldr x7, [x16]
0xffff58224f9c   924  str x13, [x7], #8
0xffff58224fa0   928  str x7, [x16]
0xffff58224fa4   932  tst x7, #0x1ffff
0xffff58224fa8   936  b.eq #+0x8 (addr 0xffff58224fb0)
0xffff58224fac   940  ret
0xffff58224fb0   944  sub csp, jssp, #0x8 (8)
0xffff58224fb4   948  str lr, [jssp, #-8]!
0xffff58224fb8   952  ldr x17, pc+544 (addr 0x0000ffff582251d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58224fbc   956  blr x17
0xffff58224fc0   960  ldr lr, [jssp], #8
0xffff58224fc4   964  ret
0xffff58224fc8   968  ldp x1, x13, [jssp], #16
0xffff58224fcc   972  sub csp, jssp, #0x78 (120)
0xffff58224fd0   976  stp x14, x15, [jssp, #-32]!
0xffff58224fd4   980  stp x18, lr, [jssp, #16]
0xffff58224fd8   984  stp x10, x11, [jssp, #-32]!
0xffff58224fdc   988  stp x12, x13, [jssp, #16]
0xffff58224fe0   992  stp x5, x6, [jssp, #-32]!
0xffff58224fe4   996  stp x8, x9, [jssp, #16]
0xffff58224fe8  1000  stp x1, x3, [jssp, #-24]!
0xffff58224fec  1004  str x4, [jssp, #16]
0xffff58224ff0  1008  mov x0, x1
0xffff58224ff4  1012  mov x1, x13
0xffff58224ff8  1016  ldr x2, pc+488 (addr 0x0000ffff582251e0)    ;; external reference (isolate)
0xffff58224ffc  1020  ldr x16, pc+492 (addr 0x0000ffff582251e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58225000  1024  and csp, jssp, #0xfffffffffffffff0
0xffff58225004  1028  blr x16
0xffff58225008  1032  ldp x4, x5, [jssp, #16]
0xffff5822500c  1036  ldp x1, x3, [jssp], #32
0xffff58225010  1040  ldp x9, x10, [jssp, #16]
0xffff58225014  1044  ldp x6, x8, [jssp], #32
0xffff58225018  1048  ldp x13, x14, [jssp, #16]
0xffff5822501c  1052  ldp x11, x12, [jssp], #32
0xffff58225020  1056  ldr lr, [jssp, #16]
0xffff58225024  1060  ldp x15, x18, [jssp], #24
0xffff58225028  1064  ldp x2, x0, [jssp], #16
0xffff5822502c  1068  ldr x16, pc+452 (addr 0x0000ffff582251f0)    ;; external reference (store_buffer_top)
0xffff58225030  1072  ldr x7, [x16]
0xffff58225034  1076  str x13, [x7], #8
0xffff58225038  1080  str x7, [x16]
0xffff5822503c  1084  tst x7, #0x1ffff
0xffff58225040  1088  b.eq #+0x8 (addr 0xffff58225048)
0xffff58225044  1092  ret
0xffff58225048  1096  sub csp, jssp, #0x8 (8)
0xffff5822504c  1100  str lr, [jssp, #-8]!
0xffff58225050  1104  ldr x17, pc+424 (addr 0x0000ffff582251f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58225054  1108  blr x17
0xffff58225058  1112  ldr lr, [jssp], #8
0xffff5822505c  1116  ret
0xffff58225060  1120  and x7, x1, #0xfffffffffff00000
0xffff58225064  1124  ldr x0, [x7, #104]
0xffff58225068  1128  subs x0, x0, #0x1 (1)
0xffff5822506c  1132  str x0, [x7, #104]
0xffff58225070  1136  b.mi #+0x84 (addr 0xffff582250f4)
0xffff58225074  1140  ubfx x16, x1, #8, #12
0xffff58225078  1144  and x7, x1, #0xfffffffffff00000
0xffff5822507c  1148  add x7, x7, x16, lsl #2
0xffff58225080  1152  ubfx x0, x1, #3, #5
0xffff58225084  1156  ldr x7, [x7, #360]
0xffff58225088  1160  lsr x7, x7, x0
0xffff5822508c  1164  tbz w7, #0, #+0x8 (addr 0xffff58225094)
0xffff58225090  1168  tbnz w7, #1, #+0xc (addr 0xffff5822509c)
0xffff58225094  1172  ldp x2, x0, [jssp], #16
0xffff58225098  1176  ret
0xffff5822509c  1180  ldr x7, [x13]
0xffff582250a0  1184  and x0, x7, #0xfffffffffff00000
0xffff582250a4  1188  ldr x0, [x0, #8]
0xffff582250a8  1192  tbz w0, #6, #+0x18 (addr 0xffff582250c0)
0xffff582250ac  1196  and x0, x1, #0xfffffffffff00000
0xffff582250b0  1200  ldr x0, [x0, #8]
0xffff582250b4  1204  movz x16, #0x58
0xffff582250b8  1208  tst x0, x16
0xffff582250bc  1212  b.eq #+0x38 (addr 0xffff582250f4)
0xffff582250c0  1216  sub csp, jssp, #0x10 (16)
0xffff582250c4  1220  stp x1, x13, [jssp, #-16]!
0xffff582250c8  1224  ubfx x16, x7, #8, #12
0xffff582250cc  1228  and x0, x7, #0xfffffffffff00000
0xffff582250d0  1232  add x0, x0, x16, lsl #2
0xffff582250d4  1236  ubfx x1, x7, #3, #5
0xffff582250d8  1240  ldr x13, [x0, #360]
0xffff582250dc  1244  lsr x13, x13, x1
0xffff582250e0  1248  tbz w13, #0, #+0x10 (addr 0xffff582250f0)
0xffff582250e4  1252  ldp x1, x13, [jssp], #16
0xffff582250e8  1256  ldp x2, x0, [jssp], #16
0xffff582250ec  1260  ret
0xffff582250f0  1264  ldp x1, x13, [jssp], #16
0xffff582250f4  1268  sub csp, jssp, #0x78 (120)
0xffff582250f8  1272  stp x14, x15, [jssp, #-32]!
0xffff582250fc  1276  stp x18, lr, [jssp, #16]
0xffff58225100  1280  stp x10, x11, [jssp, #-32]!
0xffff58225104  1284  stp x12, x13, [jssp, #16]
0xffff58225108  1288  stp x5, x6, [jssp, #-32]!
0xffff5822510c  1292  stp x8, x9, [jssp, #16]
0xffff58225110  1296  stp x1, x3, [jssp, #-24]!
0xffff58225114  1300  str x4, [jssp, #16]
0xffff58225118  1304  mov x0, x1
0xffff5822511c  1308  mov x1, x13
0xffff58225120  1312  ldr x2, pc+224 (addr 0x0000ffff58225200)    ;; external reference (isolate)
0xffff58225124  1316  ldr x16, pc+228 (addr 0x0000ffff58225208)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58225128  1320  and csp, jssp, #0xfffffffffffffff0
0xffff5822512c  1324  blr x16
0xffff58225130  1328  ldp x4, x5, [jssp, #16]
0xffff58225134  1332  ldp x1, x3, [jssp], #32
0xffff58225138  1336  ldp x9, x10, [jssp, #16]
0xffff5822513c  1340  ldp x6, x8, [jssp], #32
0xffff58225140  1344  ldp x13, x14, [jssp, #16]
0xffff58225144  1348  ldp x11, x12, [jssp], #32
0xffff58225148  1352  ldr lr, [jssp, #16]
0xffff5822514c  1356  ldp x15, x18, [jssp], #24
0xffff58225150  1360  ldp x2, x0, [jssp], #16
0xffff58225154  1364  ret
0xffff58225158  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5822515c  1372  d63f03e0       constant
0xffff58225160  1376  16e798c0       constant
0xffff58225164  1380  00000000       constant
0xffff58225168  1384  582064c0       constant
0xffff5822516c  1388  0000ffff       constant
0xffff58225170  1392  16e798c0       constant
0xffff58225174  1396  00000000       constant
0xffff58225178  1400  582064c0       constant
0xffff5822517c  1404  0000ffff       constant
0xffff58225180  1408  16e798c0       constant
0xffff58225184  1412  00000000       constant
0xffff58225188  1416  582064c0       constant
0xffff5822518c  1420  0000ffff       constant
0xffff58225190  1424  16e782d0       constant
0xffff58225194  1428  00000000       constant
0xffff58225198  1432  00c2d958       constant
0xffff5822519c  1436  00000000       constant
0xffff582251a0  1440  16e798c0       constant
0xffff582251a4  1444  00000000       constant
0xffff582251a8  1448  582064c0       constant
0xffff582251ac  1452  0000ffff       constant
0xffff582251b0  1456  16e782d0       constant
0xffff582251b4  1460  00000000       constant
0xffff582251b8  1464  00c2d958       constant
0xffff582251bc  1468  00000000       constant
0xffff582251c0  1472  16e798c0       constant
0xffff582251c4  1476  00000000       constant
0xffff582251c8  1480  582064c0       constant
0xffff582251cc  1484  0000ffff       constant
0xffff582251d0  1488  16e798c0       constant
0xffff582251d4  1492  00000000       constant
0xffff582251d8  1496  582064c0       constant
0xffff582251dc  1500  0000ffff       constant
0xffff582251e0  1504  16e782d0       constant
0xffff582251e4  1508  00000000       constant
0xffff582251e8  1512  00c2d958       constant
0xffff582251ec  1516  00000000       constant
0xffff582251f0  1520  16e798c0       constant
0xffff582251f4  1524  00000000       constant
0xffff582251f8  1528  582064c0       constant
0xffff582251fc  1532  0000ffff       constant
0xffff58225200  1536  16e782d0       constant
0xffff58225204  1540  00000000       constant
0xffff58225208  1544  00c2d958       constant
0xffff5822520c  1548  00000000       constant


RelocInfo (size = 59)
0xffff58224c08  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224c2c  code target (STUB)  (0xffff582064c0)
0xffff58224ca4  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224cc8  code target (STUB)  (0xffff582064c0)
0xffff58224d08  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224d2c  code target (STUB)  (0xffff582064c0)
0xffff58224d6c  external reference (isolate)  (0x16e782d0)
0xffff58224d70  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58224da0  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224dc4  code target (STUB)  (0xffff582064c0)
0xffff58224e74  external reference (isolate)  (0x16e782d0)
0xffff58224e78  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58224f10  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224f34  code target (STUB)  (0xffff582064c0)
0xffff58224f94  external reference (store_buffer_top)  (0x16e798c0)
0xffff58224fb8  code target (STUB)  (0xffff582064c0)
0xffff58224ff8  external reference (isolate)  (0x16e782d0)
0xffff58224ffc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822502c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58225050  code target (STUB)  (0xffff582064c0)
0xffff58225120  external reference (isolate)  (0x16e782d0)
0xffff58225124  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58225158  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 536)
0xffff58225280     0  adr xzr, #+0xc (addr 0xffff5822528c)
0xffff58225284     4  adr xzr, #+0xe8 (addr 0xffff5822536c)
0xffff58225288     8  ret
0xffff5822528c    12  sub csp, jssp, #0x10 (16)
0xffff58225290    16  stp x2, x0, [jssp, #-16]!
0xffff58225294    20  and x3, x1, #0xfffffffffff00000
0xffff58225298    24  ldr x0, [x3, #104]
0xffff5822529c    28  subs x0, x0, #0x1 (1)
0xffff582252a0    32  str x0, [x3, #104]
0xffff582252a4    36  b.mi #+0x64 (addr 0xffff58225308)
0xffff582252a8    40  ubfx x16, x1, #8, #12
0xffff582252ac    44  and x3, x1, #0xfffffffffff00000
0xffff582252b0    48  add x3, x3, x16, lsl #2
0xffff582252b4    52  ubfx x0, x1, #3, #5
0xffff582252b8    56  ldr x3, [x3, #360]
0xffff582252bc    60  lsr x3, x3, x0
0xffff582252c0    64  tbz w3, #0, #+0x8 (addr 0xffff582252c8)
0xffff582252c4    68  tbnz w3, #1, #+0xc (addr 0xffff582252d0)
0xffff582252c8    72  ldp x2, x0, [jssp], #16
0xffff582252cc    76  ret
0xffff582252d0    80  ldr x3, [x13]
0xffff582252d4    84  sub csp, jssp, #0x10 (16)
0xffff582252d8    88  stp x1, x13, [jssp, #-16]!
0xffff582252dc    92  ubfx x16, x3, #8, #12
0xffff582252e0    96  and x0, x3, #0xfffffffffff00000
0xffff582252e4   100  add x0, x0, x16, lsl #2
0xffff582252e8   104  ubfx x1, x3, #3, #5
0xffff582252ec   108  ldr x13, [x0, #360]
0xffff582252f0   112  lsr x13, x13, x1
0xffff582252f4   116  tbz w13, #0, #+0x10 (addr 0xffff58225304)
0xffff582252f8   120  ldp x1, x13, [jssp], #16
0xffff582252fc   124  ldp x2, x0, [jssp], #16
0xffff58225300   128  ret
0xffff58225304   132  ldp x1, x13, [jssp], #16
0xffff58225308   136  sub csp, jssp, #0x78 (120)
0xffff5822530c   140  stp x14, x15, [jssp, #-32]!
0xffff58225310   144  stp x18, lr, [jssp, #16]
0xffff58225314   148  stp x10, x11, [jssp, #-32]!
0xffff58225318   152  stp x12, x13, [jssp, #16]
0xffff5822531c   156  stp x6, x7, [jssp, #-32]!
0xffff58225320   160  stp x8, x9, [jssp, #16]
0xffff58225324   164  stp x1, x4, [jssp, #-24]!
0xffff58225328   168  str x5, [jssp, #16]
0xffff5822532c   172  mov x0, x1
0xffff58225330   176  mov x1, x13
0xffff58225334   180  ldr x2, pc+324 (addr 0x0000ffff58225478)    ;; external reference (isolate)
0xffff58225338   184  ldr x16, pc+328 (addr 0x0000ffff58225480)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822533c   188  and csp, jssp, #0xfffffffffffffff0
0xffff58225340   192  blr x16
0xffff58225344   196  ldp x5, x6, [jssp, #16]
0xffff58225348   200  ldp x1, x4, [jssp], #32
0xffff5822534c   204  ldp x9, x10, [jssp, #16]
0xffff58225350   208  ldp x7, x8, [jssp], #32
0xffff58225354   212  ldp x13, x14, [jssp, #16]
0xffff58225358   216  ldp x11, x12, [jssp], #32
0xffff5822535c   220  ldr lr, [jssp, #16]
0xffff58225360   224  ldp x15, x18, [jssp], #24
0xffff58225364   228  ldp x2, x0, [jssp], #16
0xffff58225368   232  ret
0xffff5822536c   236  sub csp, jssp, #0x10 (16)
0xffff58225370   240  stp x2, x0, [jssp, #-16]!
0xffff58225374   244  and x3, x1, #0xfffffffffff00000
0xffff58225378   248  ldr x0, [x3, #104]
0xffff5822537c   252  subs x0, x0, #0x1 (1)
0xffff58225380   256  str x0, [x3, #104]
0xffff58225384   260  b.mi #+0x84 (addr 0xffff58225408)
0xffff58225388   264  ubfx x16, x1, #8, #12
0xffff5822538c   268  and x3, x1, #0xfffffffffff00000
0xffff58225390   272  add x3, x3, x16, lsl #2
0xffff58225394   276  ubfx x0, x1, #3, #5
0xffff58225398   280  ldr x3, [x3, #360]
0xffff5822539c   284  lsr x3, x3, x0
0xffff582253a0   288  tbz w3, #0, #+0x8 (addr 0xffff582253a8)
0xffff582253a4   292  tbnz w3, #1, #+0xc (addr 0xffff582253b0)
0xffff582253a8   296  ldp x2, x0, [jssp], #16
0xffff582253ac   300  ret
0xffff582253b0   304  ldr x3, [x13]
0xffff582253b4   308  and x0, x3, #0xfffffffffff00000
0xffff582253b8   312  ldr x0, [x0, #8]
0xffff582253bc   316  tbz w0, #6, #+0x18 (addr 0xffff582253d4)
0xffff582253c0   320  and x0, x1, #0xfffffffffff00000
0xffff582253c4   324  ldr x0, [x0, #8]
0xffff582253c8   328  movz x16, #0x58
0xffff582253cc   332  tst x0, x16
0xffff582253d0   336  b.eq #+0x38 (addr 0xffff58225408)
0xffff582253d4   340  sub csp, jssp, #0x10 (16)
0xffff582253d8   344  stp x1, x13, [jssp, #-16]!
0xffff582253dc   348  ubfx x16, x3, #8, #12
0xffff582253e0   352  and x0, x3, #0xfffffffffff00000
0xffff582253e4   356  add x0, x0, x16, lsl #2
0xffff582253e8   360  ubfx x1, x3, #3, #5
0xffff582253ec   364  ldr x13, [x0, #360]
0xffff582253f0   368  lsr x13, x13, x1
0xffff582253f4   372  tbz w13, #0, #+0x10 (addr 0xffff58225404)
0xffff582253f8   376  ldp x1, x13, [jssp], #16
0xffff582253fc   380  ldp x2, x0, [jssp], #16
0xffff58225400   384  ret
0xffff58225404   388  ldp x1, x13, [jssp], #16
0xffff58225408   392  sub csp, jssp, #0x78 (120)
0xffff5822540c   396  stp x14, x15, [jssp, #-32]!
0xffff58225410   400  stp x18, lr, [jssp, #16]
0xffff58225414   404  stp x10, x11, [jssp, #-32]!
0xffff58225418   408  stp x12, x13, [jssp, #16]
0xffff5822541c   412  stp x6, x7, [jssp, #-32]!
0xffff58225420   416  stp x8, x9, [jssp, #16]
0xffff58225424   420  stp x1, x4, [jssp, #-24]!
0xffff58225428   424  str x5, [jssp, #16]
0xffff5822542c   428  mov x0, x1
0xffff58225430   432  mov x1, x13
0xffff58225434   436  ldr x2, pc+84 (addr 0x0000ffff58225488)    ;; external reference (isolate)
0xffff58225438   440  ldr x16, pc+88 (addr 0x0000ffff58225490)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822543c   444  and csp, jssp, #0xfffffffffffffff0
0xffff58225440   448  blr x16
0xffff58225444   452  ldp x5, x6, [jssp, #16]
0xffff58225448   456  ldp x1, x4, [jssp], #32
0xffff5822544c   460  ldp x9, x10, [jssp, #16]
0xffff58225450   464  ldp x7, x8, [jssp], #32
0xffff58225454   468  ldp x13, x14, [jssp, #16]
0xffff58225458   472  ldp x11, x12, [jssp], #32
0xffff5822545c   476  ldr lr, [jssp, #16]
0xffff58225460   480  ldp x15, x18, [jssp], #24
0xffff58225464   484  ldp x2, x0, [jssp], #16
0xffff58225468   488  ret
0xffff5822546c   492  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff58225470   496  d63f03e0       constant
0xffff58225474   500  d503201f       constant
0xffff58225478   504  16e782d0       constant
0xffff5822547c   508  00000000       constant
0xffff58225480   512  00c2d958       constant
0xffff58225484   516  00000000       constant
0xffff58225488   520  16e782d0       constant
0xffff5822548c   524  00000000       constant
0xffff58225490   528  00c2d958       constant
0xffff58225494   532  00000000       constant


RelocInfo (size = 18)
0xffff58225334  external reference (isolate)  (0x16e782d0)
0xffff58225338  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58225434  external reference (isolate)  (0x16e782d0)
0xffff58225438  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822546c  constant pool (size 44)


kind = STUB
major_key = InstanceOfStub
name = InstanceOfStub
compiler = unknown
Instructions (size = 296)
0xffff582283a0     0  tbz w1, #0, #+0x28 (addr 0xffff582283c8)
0xffff582283a4     4  ldur x2, [x1, #-1]
0xffff582283a8     8  ldr x16, [x26, #376]
0xffff582283ac    12  cmp x0, x16
0xffff582283b0    16  b.ne #+0x34 (addr 0xffff582283e4)
0xffff582283b4    20  ldr x16, [x26, #384]
0xffff582283b8    24  cmp x2, x16
0xffff582283bc    28  b.ne #+0x28 (addr 0xffff582283e4)
0xffff582283c0    32  ldr x0, [x26, #392]
0xffff582283c4    36  ret
0xffff582283c8    40  tbz w0, #0, #+0xbc (addr 0xffff58228484)
0xffff582283cc    44  ldur x3, [x0, #-1]
0xffff582283d0    48  ldrb w5, [x3, #11]
0xffff582283d4    52  cmp x5, #0xc9 (201)
0xffff582283d8    56  b.ne #+0xac (addr 0xffff58228484)
0xffff582283dc    60  ldr x0, [x26, #72]
0xffff582283e0    64  ret
0xffff582283e4    68  tbz w0, #0, #+0xa0 (addr 0xffff58228484)
0xffff582283e8    72  ldur x3, [x0, #-1]
0xffff582283ec    76  ldrb w5, [x3, #11]
0xffff582283f0    80  cmp x5, #0xc9 (201)
0xffff582283f4    84  b.ne #+0x90 (addr 0xffff58228484)
0xffff582283f8    88  ldrb w5, [x3, #12]
0xffff582283fc    92  tbz w5, #7, #+0x88 (addr 0xffff58228484)
0xffff58228400    96  tbnz w5, #0, #+0x84 (addr 0xffff58228484)
0xffff58228404   100  ldur x4, [x0, #23]
0xffff58228408   104  ldur x5, [x4, #-1]
0xffff5822840c   108  ldrb w5, [x5, #11]
0xffff58228410   112  cmp x5, #0x84 (132)
0xffff58228414   116  b.ne #+0x8 (addr 0xffff5822841c)
0xffff58228418   120  ldur x4, [x4, #23]
0xffff5822841c   124  str x0, [x26, #376]
0xffff58228420   128  str x2, [x26, #384]
0xffff58228424   132  ldr x0, [x26, #64]
0xffff58228428   136  ldr x5, [x26, #56]
0xffff5822842c   140  ldrb w3, [x2, #12]
0xffff58228430   144  tbnz w3, #6, #+0x34 (addr 0xffff58228464)
0xffff58228434   148  ldrb w3, [x2, #11]
0xffff58228438   152  cmp x3, #0xb1 (177)
0xffff5822843c   156  b.eq #+0x28 (addr 0xffff58228464)
0xffff58228440   160  ldur x1, [x2, #23]
0xffff58228444   164  cmp x1, x4
0xffff58228448   168  b.eq #+0x14 (addr 0xffff5822845c)
0xffff5822844c   172  cmp x1, x5
0xffff58228450   176  ldur x2, [x1, #-1]
0xffff58228454   180  b.ne #-0x28 (addr 0xffff5822842c)
0xffff58228458   184  ldr x0, [x26, #72]
0xffff5822845c   188  str x0, [x26, #392]
0xffff58228460   192  ret
0xffff58228464   196  sub csp, jssp, #0x10 (16)
0xffff58228468   200  stp x4, x1, [jssp, #-16]!
0xffff5822846c   204  movz x5, #0x0
0xffff58228470   208  str x5, [x26, #376]
0xffff58228474   212  movz x0, #0x2
0xffff58228478   216  ldr x1, pc+48 (addr 0x0000ffff582284a8)    ;; external reference (Runtime::HasInPrototypeChain)
0xffff5822847c   220  ldr x16, pc+52 (addr 0x0000ffff582284b0)    ;; code: STUB, CEntryStub, minor: 4
0xffff58228480   224  br x16
0xffff58228484   228  sub csp, jssp, #0x10 (16)
0xffff58228488   232  stp x0, x1, [jssp, #-16]!
0xffff5822848c   236  movz x0, #0x2
0xffff58228490   240  ldr x1, pc+40 (addr 0x0000ffff582284b8)    ;; external reference (Runtime::OrdinaryHasInstance)
0xffff58228494   244  ldr x16, pc+44 (addr 0x0000ffff582284c0)    ;; code: STUB, CEntryStub, minor: 4
0xffff58228498   248  br x16
0xffff5822849c   252  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff582284a0   256  d63f03e0       constant
0xffff582284a4   260  d503201f       constant
0xffff582284a8   264  00e4ad20       constant
0xffff582284ac   268  00000000       constant
0xffff582284b0   272  58206060       constant
0xffff582284b4   276  0000ffff       constant
0xffff582284b8   280  00e4a740       constant
0xffff582284bc   284  00000000       constant
0xffff582284c0   288  58206060       constant
0xffff582284c4   292  0000ffff       constant


RelocInfo (size = 14)
0xffff58228478  external reference (Runtime::HasInPrototypeChain)  (0xe4ad20)
0xffff5822847c  code target (STUB)  (0xffff58206060)
0xffff58228490  external reference (Runtime::OrdinaryHasInstance)  (0xe4a740)
0xffff58228494  code target (STUB)  (0xffff58206060)
0xffff5822849c  constant pool (size 44)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff582289c0     0  movz w0, #0x6000
0xffff582289c4     4  movk w0, #0x9, lsl #16
0xffff582289c8     8  cmp w0, #0x30 (48)
0xffff582289cc    12  b.ls #+0x14c (addr 0xffff58228b18)
0xffff582289d0    16  movz x2, #0x92c0
0xffff582289d4    20  movk x2, #0x16e7, lsl #16
0xffff582289d8    24  ldp x3, x0, [x2]
0xffff582289dc    28  adds x16, x3, #0x50 (80)
0xffff582289e0    32  ccmp x16, x0, #nzCv, lo
0xffff582289e4    36  b.hi #+0x78 (addr 0xffff58228a5c)
0xffff582289e8    40  str x16, [x2]
0xffff582289ec    44  orr x3, x3, #0x1
0xffff582289f0    48  movz w0, #0x0
0xffff582289f4    52  stur x0, [x3, #31]
0xffff582289f8    56  ldur x0, [x1, #23]
0xffff582289fc    60  stur x0, [x3, #-1]
0xffff58228a00    64  ldr x0, pc+200 (addr 0x0000ffff58228ac8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228a04    68  stur x0, [x3, #7]
0xffff58228a08    72  ldr x0, pc+200 (addr 0x0000ffff58228ad0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228a0c    76  stur x0, [x3, #15]
0xffff58228a10    80  movz x0, #0x0
0xffff58228a14    84  stur x0, [x3, #23]
0xffff58228a18    88  add x0, x3, #0x20 (32)
0xffff58228a1c    92  ldr x1, pc+188 (addr 0x0000ffff58228ad8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58228a20    96  stur x1, [x0, #-1]
0xffff58228a24   100  movz x1, #0x400000000
0xffff58228a28   104  stur x1, [x0, #7]
0xffff58228a2c   108  stur x0, [x3, #15]
0xffff58228a30   112  ldr x1, pc+176 (addr 0x0000ffff58228ae0)    ;; object: 0x39c04519 <the hole>
0xffff58228a34   116  stur x1, [x0, #15]
0xffff58228a38   120  ldr x1, pc+176 (addr 0x0000ffff58228ae8)    ;; object: 0x39c04519 <the hole>
0xffff58228a3c   124  stur x1, [x0, #23]
0xffff58228a40   128  ldr x1, pc+176 (addr 0x0000ffff58228af0)    ;; object: 0x39c04519 <the hole>
0xffff58228a44   132  stur x1, [x0, #31]
0xffff58228a48   136  ldr x1, pc+176 (addr 0x0000ffff58228af8)    ;; object: 0x39c04519 <the hole>
0xffff58228a4c   140  stur x1, [x0, #39]
0xffff58228a50   144  mov x0, x3
0xffff58228a54   148  add jssp, jssp, #0x8 (8)
0xffff58228a58   152  ret
0xffff58228a5c   156  sub csp, jssp, #0x10 (16)
0xffff58228a60   160  stp fp, lr, [jssp, #-16]!
0xffff58228a64   164  movz fp, #0xa00000000
0xffff58228a68   168  sub csp, jssp, #0x8 (8)
0xffff58228a6c   172  str fp, [jssp, #-8]!
0xffff58228a70   176  add fp, jssp, #0x8 (8)
0xffff58228a74   180  movz x3, #0x0
0xffff58228a78   184  mov x16, lr
0xffff58228a7c   188  ldr x17, pc+132 (addr 0x0000ffff58228b00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58228a80   192  blr x17
0xffff58228a84   196  movz x0, #0x5000000000
0xffff58228a88   200  movz x10, #0x0
0xffff58228a8c   204  sub csp, jssp, #0x10 (16)
0xffff58228a90   208  stp x10, x0, [jssp, #-16]!
0xffff58228a94   212  movz x0, #0x2
0xffff58228a98   216  movz x1, #0x5b88
0xffff58228a9c   220  movk x1, #0xe2, lsl #16
0xffff58228aa0   224  ldr x16, pc+104 (addr 0x0000ffff58228b08)    ;; code: STUB, CEntryStub, minor: 5
0xffff58228aa4   228  blr x16
0xffff58228aa8   232  str x0, [jssp, #24]
0xffff58228aac   236  ldr x16, pc+100 (addr 0x0000ffff58228b10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58228ab0   240  blr x16
0xffff58228ab4   244  ldr lr, [jssp, #16]
0xffff58228ab8   248  ldp xzr, fp, [jssp], #24
0xffff58228abc   252  b #-0xcc (addr 0xffff582289f0)
0xffff58228ac0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff58228ac4   260  d63f03e0       constant
0xffff58228ac8   264  39c04201       constant
0xffff58228acc   268  00000000       constant
0xffff58228ad0   272  39c04201       constant
0xffff58228ad4   276  00000000       constant
0xffff58228ad8   280  32b04259       constant
0xffff58228adc   284  00000000       constant
0xffff58228ae0   288  39c04519       constant
0xffff58228ae4   292  00000000       constant
0xffff58228ae8   296  39c04519       constant
0xffff58228aec   300  00000000       constant
0xffff58228af0   304  39c04519       constant
0xffff58228af4   308  00000000       constant
0xffff58228af8   312  39c04519       constant
0xffff58228afc   316  00000000       constant
0xffff58228b00   320  58206820       constant
0xffff58228b04   324  0000ffff       constant
0xffff58228b08   328  58206260       constant
0xffff58228b0c   332  0000ffff       constant
0xffff58228b10   336  582068e0       constant
0xffff58228b14   340  0000ffff       constant
0xffff58228b18   344  movz x16, #0x0
0xffff58228b1c   348  sub csp, jssp, #0x10 (16)
0xffff58228b20   352  stp fp, lr, [jssp, #-16]!
0xffff58228b24   356  bl #+0x4 (addr 0xffff58228b28)
0xffff58228b28   360  movz x17, #0xa00000000
0xffff58228b2c   364  sub csp, jssp, #0x10 (16)
0xffff58228b30   368  stp x17, cp, [jssp, #-16]!
0xffff58228b34   372  add fp, jssp, #0x10 (16)
0xffff58228b38   376  ldr x17, pc+24 (addr 0x0000ffff58228b50)    ;; lazy deoptimization bailout 0
0xffff58228b3c   380  add x17, x17, x16
0xffff58228b40   384  br x17
0xffff58228b44   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58228b48   392  d63f03e0       constant
0xffff58228b4c   396  d503201f       constant
0xffff58228b50   400  58006000       constant
0xffff58228b54   404  0000ffff       constant


Safepoints (size = 21)
0xffff58228aa8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff58228a00  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228a08  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228a1c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58228a30  embedded object  (0x39c04519 <the hole>)
0xffff58228a38  embedded object  (0x39c04519 <the hole>)
0xffff58228a40  embedded object  (0x39c04519 <the hole>)
0xffff58228a48  embedded object  (0x39c04519 <the hole>)
0xffff58228a7c  code target (STUB)  (0xffff58206820)
0xffff58228aa0  code target (STUB)  (0xffff58206260)
0xffff58228aac  code target (STUB)  (0xffff582068e0)
0xffff58228ac0  constant pool (size 88)
0xffff58228b38  runtime entry
0xffff58228b44  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNoArgumentConstructorStub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff582289c0     0  movz w0, #0x6000
0xffff582289c4     4  movk w0, #0x9, lsl #16
0xffff582289c8     8  cmp w0, #0x30 (48)
0xffff582289cc    12  b.ls #+0x14c (addr 0xffff58228b18)
0xffff582289d0    16  movz x2, #0x92c0
0xffff582289d4    20  movk x2, #0x16e7, lsl #16
0xffff582289d8    24  ldp x3, x0, [x2]
0xffff582289dc    28  adds x16, x3, #0x50 (80)
0xffff582289e0    32  ccmp x16, x0, #nzCv, lo
0xffff582289e4    36  b.hi #+0x78 (addr 0xffff58228a5c)
0xffff582289e8    40  str x16, [x2]
0xffff582289ec    44  orr x3, x3, #0x1
0xffff582289f0    48  movz w0, #0x0
0xffff582289f4    52  stur x0, [x3, #31]
0xffff582289f8    56  ldur x0, [x1, #23]
0xffff582289fc    60  stur x0, [x3, #-1]
0xffff58228a00    64  ldr x0, pc+200 (addr 0x0000ffff58228ac8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228a04    68  stur x0, [x3, #7]
0xffff58228a08    72  ldr x0, pc+200 (addr 0x0000ffff58228ad0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228a0c    76  stur x0, [x3, #15]
0xffff58228a10    80  movz x0, #0x0
0xffff58228a14    84  stur x0, [x3, #23]
0xffff58228a18    88  add x0, x3, #0x20 (32)
0xffff58228a1c    92  ldr x1, pc+188 (addr 0x0000ffff58228ad8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58228a20    96  stur x1, [x0, #-1]
0xffff58228a24   100  movz x1, #0x400000000
0xffff58228a28   104  stur x1, [x0, #7]
0xffff58228a2c   108  stur x0, [x3, #15]
0xffff58228a30   112  ldr x1, pc+176 (addr 0x0000ffff58228ae0)    ;; object: 0x39c04519 <the hole>
0xffff58228a34   116  stur x1, [x0, #15]
0xffff58228a38   120  ldr x1, pc+176 (addr 0x0000ffff58228ae8)    ;; object: 0x39c04519 <the hole>
0xffff58228a3c   124  stur x1, [x0, #23]
0xffff58228a40   128  ldr x1, pc+176 (addr 0x0000ffff58228af0)    ;; object: 0x39c04519 <the hole>
0xffff58228a44   132  stur x1, [x0, #31]
0xffff58228a48   136  ldr x1, pc+176 (addr 0x0000ffff58228af8)    ;; object: 0x39c04519 <the hole>
0xffff58228a4c   140  stur x1, [x0, #39]
0xffff58228a50   144  mov x0, x3
0xffff58228a54   148  add jssp, jssp, #0x8 (8)
0xffff58228a58   152  ret
0xffff58228a5c   156  sub csp, jssp, #0x10 (16)
0xffff58228a60   160  stp fp, lr, [jssp, #-16]!
0xffff58228a64   164  movz fp, #0xa00000000
0xffff58228a68   168  sub csp, jssp, #0x8 (8)
0xffff58228a6c   172  str fp, [jssp, #-8]!
0xffff58228a70   176  add fp, jssp, #0x8 (8)
0xffff58228a74   180  movz x3, #0x0
0xffff58228a78   184  mov x16, lr
0xffff58228a7c   188  ldr x17, pc+132 (addr 0x0000ffff58228b00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58228a80   192  blr x17
0xffff58228a84   196  movz x0, #0x5000000000
0xffff58228a88   200  movz x10, #0x0
0xffff58228a8c   204  sub csp, jssp, #0x10 (16)
0xffff58228a90   208  stp x10, x0, [jssp, #-16]!
0xffff58228a94   212  movz x0, #0x2
0xffff58228a98   216  movz x1, #0x5b88
0xffff58228a9c   220  movk x1, #0xe2, lsl #16
0xffff58228aa0   224  ldr x16, pc+104 (addr 0x0000ffff58228b08)    ;; code: STUB, CEntryStub, minor: 5
0xffff58228aa4   228  blr x16
0xffff58228aa8   232  str x0, [jssp, #24]
0xffff58228aac   236  ldr x16, pc+100 (addr 0x0000ffff58228b10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58228ab0   240  blr x16
0xffff58228ab4   244  ldr lr, [jssp, #16]
0xffff58228ab8   248  ldp xzr, fp, [jssp], #24
0xffff58228abc   252  b #-0xcc (addr 0xffff582289f0)
0xffff58228ac0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff58228ac4   260  d63f03e0       constant
0xffff58228ac8   264  39c04201       constant
0xffff58228acc   268  00000000       constant
0xffff58228ad0   272  39c04201       constant
0xffff58228ad4   276  00000000       constant
0xffff58228ad8   280  32b04259       constant
0xffff58228adc   284  00000000       constant
0xffff58228ae0   288  39c04519       constant
0xffff58228ae4   292  00000000       constant
0xffff58228ae8   296  39c04519       constant
0xffff58228aec   300  00000000       constant
0xffff58228af0   304  39c04519       constant
0xffff58228af4   308  00000000       constant
0xffff58228af8   312  39c04519       constant
0xffff58228afc   316  00000000       constant
0xffff58228b00   320  58206820       constant
0xffff58228b04   324  0000ffff       constant
0xffff58228b08   328  58206260       constant
0xffff58228b0c   332  0000ffff       constant
0xffff58228b10   336  582068e0       constant
0xffff58228b14   340  0000ffff       constant
0xffff58228b18   344  movz x16, #0x0
0xffff58228b1c   348  sub csp, jssp, #0x10 (16)
0xffff58228b20   352  stp fp, lr, [jssp, #-16]!
0xffff58228b24   356  bl #+0x4 (addr 0xffff58228b28)
0xffff58228b28   360  movz x17, #0xa00000000
0xffff58228b2c   364  sub csp, jssp, #0x10 (16)
0xffff58228b30   368  stp x17, cp, [jssp, #-16]!
0xffff58228b34   372  add fp, jssp, #0x10 (16)
0xffff58228b38   376  ldr x17, pc+24 (addr 0x0000ffff58228b50)    ;; lazy deoptimization bailout 0
0xffff58228b3c   380  add x17, x17, x16
0xffff58228b40   384  br x17
0xffff58228b44   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58228b48   392  d63f03e0       constant
0xffff58228b4c   396  d503201f       constant
0xffff58228b50   400  58006000       constant
0xffff58228b54   404  0000ffff       constant


Safepoints (size = 21)
0xffff58228aa8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff58228a00  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228a08  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228a1c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58228a30  embedded object  (0x39c04519 <the hole>)
0xffff58228a38  embedded object  (0x39c04519 <the hole>)
0xffff58228a40  embedded object  (0x39c04519 <the hole>)
0xffff58228a48  embedded object  (0x39c04519 <the hole>)
0xffff58228a7c  code target (STUB)  (0xffff58206820)
0xffff58228aa0  code target (STUB)  (0xffff58206260)
0xffff58228aac  code target (STUB)  (0xffff582068e0)
0xffff58228ac0  constant pool (size 88)
0xffff58228b38  runtime entry
0xffff58228b44  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff58228be0     0  movz x16, #0xa00000000
0xffff58228be4     4  sub csp, jssp, #0x10 (16)
0xffff58228be8     8  stp fp, lr, [jssp, #-16]!
0xffff58228bec    12  mov fp, jssp
0xffff58228bf0    16  sub csp, jssp, #0x8 (8)
0xffff58228bf4    20  sub jssp, jssp, #0x8 (8)
0xffff58228bf8    24  stur x16, [fp, #-8]
0xffff58228bfc    28  ldr x2, [fp]
0xffff58228c00    32  ldur x3, [x2, #-8]
0xffff58228c04    36  movz x16, #0xe00000000
0xffff58228c08    40  cmp x3, x16
0xffff58228c0c    44  csel x3, fp, x2, ne
0xffff58228c10    48  ldr x2, [x3, #16]
0xffff58228c14    52  tbnz w2, #0, #+0xd0 (addr 0xffff58228ce4)
0xffff58228c18    56  asr x4, x2, #32
0xffff58228c1c    60  movz w16, #0x257f
0xffff58228c20    64  cmp w4, w16, lsl #3
0xffff58228c24    68  b.hs #+0x16c (addr 0xffff58228d90)
0xffff58228c28    72  cbz w4, #+0xc (addr 0xffff58228c34)
0xffff58228c2c    76  mov x2, x4
0xffff58228c30    80  b #+0xc (addr 0xffff58228c3c)
0xffff58228c34    84  movz x2, #0x4
0xffff58228c38    88  movz x4, #0x0
0xffff58228c3c    92  lsl x3, x2, #32
0xffff58228c40    96  lsl x4, x4, #32
0xffff58228c44   100  lsl w5, w2, #3
0xffff58228c48   104  add w5, w5, #0x10 (16)
0xffff58228c4c   108  cmp w5, #0x96000 (614400)
0xffff58228c50   112  b.hs #+0x148 (addr 0xffff58228d98)
0xffff58228c54   116  add w0, w5, #0x20 (32)
0xffff58228c58   120  sxtw x0, w0
0xffff58228c5c   124  movz x5, #0x92c0
0xffff58228c60   128  movk x5, #0x16e7, lsl #16
0xffff58228c64   132  ldp x7, x16, [x5]
0xffff58228c68   136  adds x6, x7, x0
0xffff58228c6c   140  ccmp x6, x16, #nzCv, lo
0xffff58228c70   144  b.hi #+0x9c (addr 0xffff58228d0c)
0xffff58228c74   148  str x6, [x5]
0xffff58228c78   152  orr x7, x7, #0x1
0xffff58228c7c   156  movz w0, #0x0
0xffff58228c80   160  stur x0, [x7, #31]
0xffff58228c84   164  ldur x0, [x1, #23]
0xffff58228c88   168  stur x0, [x7, #-1]
0xffff58228c8c   172  ldr x0, pc+204 (addr 0x0000ffff58228d58)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228c90   176  stur x0, [x7, #7]
0xffff58228c94   180  ldr x0, pc+204 (addr 0x0000ffff58228d60)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228c98   184  stur x0, [x7, #15]
0xffff58228c9c   188  stur x4, [x7, #23]
0xffff58228ca0   192  add x0, x7, #0x20 (32)
0xffff58228ca4   196  ldr x1, pc+196 (addr 0x0000ffff58228d68)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58228ca8   200  stur x1, [x0, #-1]
0xffff58228cac   204  stur x3, [x0, #7]
0xffff58228cb0   208  stur x0, [x7, #15]
0xffff58228cb4   212  cmp w2, #0x0 (0)
0xffff58228cb8   216  b.le #+0x18 (addr 0xffff58228cd0)
0xffff58228cbc   220  sub w2, w2, #0x1 (1)
0xffff58228cc0   224  ldr x1, pc+176 (addr 0x0000ffff58228d70)    ;; object: 0x39c04519 <the hole>
0xffff58228cc4   228  add x3, x0, #0xf (15)
0xffff58228cc8   232  str x1, [x3, w2, sxtw #3]
0xffff58228ccc   236  b #-0x18 (addr 0xffff58228cb4)
0xffff58228cd0   240  mov x0, x7
0xffff58228cd4   244  mov jssp, fp
0xffff58228cd8   248  ldp fp, lr, [jssp], #16
0xffff58228cdc   252  add jssp, jssp, #0x10 (16)
0xffff58228ce0   256  ret
0xffff58228ce4   260  ldur x16, [x2, #-1]
0xffff58228ce8   264  ldr x17, [x26, #120]
0xffff58228cec   268  cmp x16, x17
0xffff58228cf0   272  b.ne #+0xb0 (addr 0xffff58228da0)
0xffff58228cf4   276  ldur d29, [x2, #7]
0xffff58228cf8   280  fcvtzs w4, d29
0xffff58228cfc   284  scvtf d0, w4
0xffff58228d00   288  fcmp d29, d0
0xffff58228d04   292  b.ne #+0x9c (addr 0xffff58228da0)
0xffff58228d08   296  b #-0xec (addr 0xffff58228c1c)
0xffff58228d0c   300  movz x7, #0x0
0xffff58228d10   304  mov x16, lr
0xffff58228d14   308  ldr x17, pc+100 (addr 0x0000ffff58228d78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58228d18   312  blr x17
0xffff58228d1c   316  lsl x0, x0, #32
0xffff58228d20   320  movz x10, #0x0
0xffff58228d24   324  sub csp, jssp, #0x10 (16)
0xffff58228d28   328  stp x10, x0, [jssp, #-16]!
0xffff58228d2c   332  movz x0, #0x2
0xffff58228d30   336  movz x1, #0x5b88
0xffff58228d34   340  movk x1, #0xe2, lsl #16
0xffff58228d38   344  ldr x16, pc+72 (addr 0x0000ffff58228d80)    ;; code: STUB, CEntryStub, minor: 5
0xffff58228d3c   348  blr x16
0xffff58228d40   352  str x0, [jssp, #56]
0xffff58228d44   356  ldr x16, pc+68 (addr 0x0000ffff58228d88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58228d48   360  blr x16
0xffff58228d4c   364  b #-0xd0 (addr 0xffff58228c7c)
0xffff58228d50   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58228d54   372  d63f03e0       constant
0xffff58228d58   376  39c04201       constant
0xffff58228d5c   380  00000000       constant
0xffff58228d60   384  39c04201       constant
0xffff58228d64   388  00000000       constant
0xffff58228d68   392  32b04259       constant
0xffff58228d6c   396  00000000       constant
0xffff58228d70   400  39c04519       constant
0xffff58228d74   404  00000000       constant
0xffff58228d78   408  58206820       constant
0xffff58228d7c   412  0000ffff       constant
0xffff58228d80   416  58206260       constant
0xffff58228d84   420  0000ffff       constant
0xffff58228d88   424  582068e0       constant
0xffff58228d8c   428  0000ffff       constant
0xffff58228d90   432  movz x16, #0x0
0xffff58228d94   436  bl #+0x14 (addr 0xffff58228da8)
0xffff58228d98   440  movz x16, #0x8
0xffff58228d9c   444  bl #+0xc (addr 0xffff58228da8)
0xffff58228da0   448  movz x16, #0x10
0xffff58228da4   452  bl #+0x4 (addr 0xffff58228da8)
0xffff58228da8   456  ldr x17, pc+24 (addr 0x0000ffff58228dc0)    ;; lazy deoptimization bailout 0
0xffff58228dac   460  add x17, x17, x16
0xffff58228db0   464  br x17
0xffff58228db4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58228db8   472  d63f03e0       constant
0xffff58228dbc   476  d503201f       constant
0xffff58228dc0   480  58006000       constant
0xffff58228dc4   484  0000ffff       constant


Safepoints (size = 21)
0xffff58228d40   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff58228c8c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228c94  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228ca4  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58228cc0  embedded object  (0x39c04519 <the hole>)
0xffff58228d14  code target (STUB)  (0xffff58206820)
0xffff58228d38  code target (STUB)  (0xffff58206260)
0xffff58228d44  code target (STUB)  (0xffff582068e0)
0xffff58228d50  constant pool (size 64)
0xffff58228da8  runtime entry
0xffff58228db4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArraySingleArgumentConstructorStub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff58228be0     0  movz x16, #0xa00000000
0xffff58228be4     4  sub csp, jssp, #0x10 (16)
0xffff58228be8     8  stp fp, lr, [jssp, #-16]!
0xffff58228bec    12  mov fp, jssp
0xffff58228bf0    16  sub csp, jssp, #0x8 (8)
0xffff58228bf4    20  sub jssp, jssp, #0x8 (8)
0xffff58228bf8    24  stur x16, [fp, #-8]
0xffff58228bfc    28  ldr x2, [fp]
0xffff58228c00    32  ldur x3, [x2, #-8]
0xffff58228c04    36  movz x16, #0xe00000000
0xffff58228c08    40  cmp x3, x16
0xffff58228c0c    44  csel x3, fp, x2, ne
0xffff58228c10    48  ldr x2, [x3, #16]
0xffff58228c14    52  tbnz w2, #0, #+0xd0 (addr 0xffff58228ce4)
0xffff58228c18    56  asr x4, x2, #32
0xffff58228c1c    60  movz w16, #0x257f
0xffff58228c20    64  cmp w4, w16, lsl #3
0xffff58228c24    68  b.hs #+0x16c (addr 0xffff58228d90)
0xffff58228c28    72  cbz w4, #+0xc (addr 0xffff58228c34)
0xffff58228c2c    76  mov x2, x4
0xffff58228c30    80  b #+0xc (addr 0xffff58228c3c)
0xffff58228c34    84  movz x2, #0x4
0xffff58228c38    88  movz x4, #0x0
0xffff58228c3c    92  lsl x3, x2, #32
0xffff58228c40    96  lsl x4, x4, #32
0xffff58228c44   100  lsl w5, w2, #3
0xffff58228c48   104  add w5, w5, #0x10 (16)
0xffff58228c4c   108  cmp w5, #0x96000 (614400)
0xffff58228c50   112  b.hs #+0x148 (addr 0xffff58228d98)
0xffff58228c54   116  add w0, w5, #0x20 (32)
0xffff58228c58   120  sxtw x0, w0
0xffff58228c5c   124  movz x5, #0x92c0
0xffff58228c60   128  movk x5, #0x16e7, lsl #16
0xffff58228c64   132  ldp x7, x16, [x5]
0xffff58228c68   136  adds x6, x7, x0
0xffff58228c6c   140  ccmp x6, x16, #nzCv, lo
0xffff58228c70   144  b.hi #+0x9c (addr 0xffff58228d0c)
0xffff58228c74   148  str x6, [x5]
0xffff58228c78   152  orr x7, x7, #0x1
0xffff58228c7c   156  movz w0, #0x0
0xffff58228c80   160  stur x0, [x7, #31]
0xffff58228c84   164  ldur x0, [x1, #23]
0xffff58228c88   168  stur x0, [x7, #-1]
0xffff58228c8c   172  ldr x0, pc+204 (addr 0x0000ffff58228d58)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228c90   176  stur x0, [x7, #7]
0xffff58228c94   180  ldr x0, pc+204 (addr 0x0000ffff58228d60)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228c98   184  stur x0, [x7, #15]
0xffff58228c9c   188  stur x4, [x7, #23]
0xffff58228ca0   192  add x0, x7, #0x20 (32)
0xffff58228ca4   196  ldr x1, pc+196 (addr 0x0000ffff58228d68)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58228ca8   200  stur x1, [x0, #-1]
0xffff58228cac   204  stur x3, [x0, #7]
0xffff58228cb0   208  stur x0, [x7, #15]
0xffff58228cb4   212  cmp w2, #0x0 (0)
0xffff58228cb8   216  b.le #+0x18 (addr 0xffff58228cd0)
0xffff58228cbc   220  sub w2, w2, #0x1 (1)
0xffff58228cc0   224  ldr x1, pc+176 (addr 0x0000ffff58228d70)    ;; object: 0x39c04519 <the hole>
0xffff58228cc4   228  add x3, x0, #0xf (15)
0xffff58228cc8   232  str x1, [x3, w2, sxtw #3]
0xffff58228ccc   236  b #-0x18 (addr 0xffff58228cb4)
0xffff58228cd0   240  mov x0, x7
0xffff58228cd4   244  mov jssp, fp
0xffff58228cd8   248  ldp fp, lr, [jssp], #16
0xffff58228cdc   252  add jssp, jssp, #0x10 (16)
0xffff58228ce0   256  ret
0xffff58228ce4   260  ldur x16, [x2, #-1]
0xffff58228ce8   264  ldr x17, [x26, #120]
0xffff58228cec   268  cmp x16, x17
0xffff58228cf0   272  b.ne #+0xb0 (addr 0xffff58228da0)
0xffff58228cf4   276  ldur d29, [x2, #7]
0xffff58228cf8   280  fcvtzs w4, d29
0xffff58228cfc   284  scvtf d0, w4
0xffff58228d00   288  fcmp d29, d0
0xffff58228d04   292  b.ne #+0x9c (addr 0xffff58228da0)
0xffff58228d08   296  b #-0xec (addr 0xffff58228c1c)
0xffff58228d0c   300  movz x7, #0x0
0xffff58228d10   304  mov x16, lr
0xffff58228d14   308  ldr x17, pc+100 (addr 0x0000ffff58228d78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58228d18   312  blr x17
0xffff58228d1c   316  lsl x0, x0, #32
0xffff58228d20   320  movz x10, #0x0
0xffff58228d24   324  sub csp, jssp, #0x10 (16)
0xffff58228d28   328  stp x10, x0, [jssp, #-16]!
0xffff58228d2c   332  movz x0, #0x2
0xffff58228d30   336  movz x1, #0x5b88
0xffff58228d34   340  movk x1, #0xe2, lsl #16
0xffff58228d38   344  ldr x16, pc+72 (addr 0x0000ffff58228d80)    ;; code: STUB, CEntryStub, minor: 5
0xffff58228d3c   348  blr x16
0xffff58228d40   352  str x0, [jssp, #56]
0xffff58228d44   356  ldr x16, pc+68 (addr 0x0000ffff58228d88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58228d48   360  blr x16
0xffff58228d4c   364  b #-0xd0 (addr 0xffff58228c7c)
0xffff58228d50   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58228d54   372  d63f03e0       constant
0xffff58228d58   376  39c04201       constant
0xffff58228d5c   380  00000000       constant
0xffff58228d60   384  39c04201       constant
0xffff58228d64   388  00000000       constant
0xffff58228d68   392  32b04259       constant
0xffff58228d6c   396  00000000       constant
0xffff58228d70   400  39c04519       constant
0xffff58228d74   404  00000000       constant
0xffff58228d78   408  58206820       constant
0xffff58228d7c   412  0000ffff       constant
0xffff58228d80   416  58206260       constant
0xffff58228d84   420  0000ffff       constant
0xffff58228d88   424  582068e0       constant
0xffff58228d8c   428  0000ffff       constant
0xffff58228d90   432  movz x16, #0x0
0xffff58228d94   436  bl #+0x14 (addr 0xffff58228da8)
0xffff58228d98   440  movz x16, #0x8
0xffff58228d9c   444  bl #+0xc (addr 0xffff58228da8)
0xffff58228da0   448  movz x16, #0x10
0xffff58228da4   452  bl #+0x4 (addr 0xffff58228da8)
0xffff58228da8   456  ldr x17, pc+24 (addr 0x0000ffff58228dc0)    ;; lazy deoptimization bailout 0
0xffff58228dac   460  add x17, x17, x16
0xffff58228db0   464  br x17
0xffff58228db4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58228db8   472  d63f03e0       constant
0xffff58228dbc   476  d503201f       constant
0xffff58228dc0   480  58006000       constant
0xffff58228dc4   484  0000ffff       constant


Safepoints (size = 21)
0xffff58228d40   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff58228c8c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228c94  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228ca4  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58228cc0  embedded object  (0x39c04519 <the hole>)
0xffff58228d14  code target (STUB)  (0xffff58206820)
0xffff58228d38  code target (STUB)  (0xffff58206260)
0xffff58228d44  code target (STUB)  (0xffff582068e0)
0xffff58228d50  constant pool (size 64)
0xffff58228da8  runtime entry
0xffff58228db4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff58228e40     0  movz x16, #0xa00000000
0xffff58228e44     4  sub csp, jssp, #0x10 (16)
0xffff58228e48     8  stp fp, lr, [jssp, #-16]!
0xffff58228e4c    12  mov fp, jssp
0xffff58228e50    16  sub csp, jssp, #0x8 (8)
0xffff58228e54    20  sub jssp, jssp, #0x8 (8)
0xffff58228e58    24  stur x16, [fp, #-8]
0xffff58228e5c    28  movz w16, #0x257f
0xffff58228e60    32  cmp w0, w16, lsl #3
0xffff58228e64    36  b.hs #+0x14c (addr 0xffff58228fb0)
0xffff58228e68    40  lsl x2, x0, #32
0xffff58228e6c    44  lsl w3, w0, #3
0xffff58228e70    48  add w3, w3, #0x10 (16)
0xffff58228e74    52  cmp w3, #0x96000 (614400)
0xffff58228e78    56  b.hs #+0x140 (addr 0xffff58228fb8)
0xffff58228e7c    60  add w3, w3, #0x20 (32)
0xffff58228e80    64  sxtw x3, w3
0xffff58228e84    68  movz x4, #0x92c0
0xffff58228e88    72  movk x4, #0x16e7, lsl #16
0xffff58228e8c    76  ldp x6, x16, [x4]
0xffff58228e90    80  adds x5, x6, x3
0xffff58228e94    84  ccmp x5, x16, #nzCv, lo
0xffff58228e98    88  b.hi #+0x9c (addr 0xffff58228f34)
0xffff58228e9c    92  str x5, [x4]
0xffff58228ea0    96  orr x6, x6, #0x1
0xffff58228ea4   100  movz w3, #0x0
0xffff58228ea8   104  stur x3, [x6, #31]
0xffff58228eac   108  ldur x1, [x1, #23]
0xffff58228eb0   112  stur x1, [x6, #-1]
0xffff58228eb4   116  ldr x1, pc+204 (addr 0x0000ffff58228f80)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228eb8   120  stur x1, [x6, #7]
0xffff58228ebc   124  ldr x1, pc+204 (addr 0x0000ffff58228f88)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228ec0   128  stur x1, [x6, #15]
0xffff58228ec4   132  stur x2, [x6, #23]
0xffff58228ec8   136  add x1, x6, #0x20 (32)
0xffff58228ecc   140  ldr x3, pc+196 (addr 0x0000ffff58228f90)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58228ed0   144  stur x3, [x1, #-1]
0xffff58228ed4   148  stur x2, [x1, #7]
0xffff58228ed8   152  stur x1, [x6, #15]
0xffff58228edc   156  ldr x2, [fp]
0xffff58228ee0   160  ldur x3, [x2, #-8]
0xffff58228ee4   164  movz x16, #0xe00000000
0xffff58228ee8   168  cmp x3, x16
0xffff58228eec   172  csel x3, fp, x2, ne
0xffff58228ef0   176  movz x2, #0x0
0xffff58228ef4   180  cmp w0, w2
0xffff58228ef8   184  b.le #+0x20 (addr 0xffff58228f18)
0xffff58228efc   188  sub w4, w0, w2
0xffff58228f00   192  add w4, w4, #0x1 (1)
0xffff58228f04   196  ldr x4, [x3, w4, uxtw #3]
0xffff58228f08   200  add x5, x1, #0xf (15)
0xffff58228f0c   204  str x4, [x5, w2, sxtw #3]
0xffff58228f10   208  add w2, w2, #0x1 (1)
0xffff58228f14   212  b #-0x20 (addr 0xffff58228ef4)
0xffff58228f18   216  add w0, w0, #0x1 (1)
0xffff58228f1c   220  lsl x1, x0, #32
0xffff58228f20   224  mov x0, x6
0xffff58228f24   228  mov jssp, fp
0xffff58228f28   232  ldp fp, lr, [jssp], #16
0xffff58228f2c   236  add jssp, jssp, x1, lsr #29
0xffff58228f30   240  ret
0xffff58228f34   244  movz x6, #0x0
0xffff58228f38   248  mov x16, lr
0xffff58228f3c   252  ldr x17, pc+92 (addr 0x0000ffff58228f98)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58228f40   256  blr x17
0xffff58228f44   260  lsl x0, x3, #32
0xffff58228f48   264  movz x10, #0x0
0xffff58228f4c   268  sub csp, jssp, #0x10 (16)
0xffff58228f50   272  stp x10, x0, [jssp, #-16]!
0xffff58228f54   276  movz x0, #0x2
0xffff58228f58   280  movz x1, #0x5b88
0xffff58228f5c   284  movk x1, #0xe2, lsl #16
0xffff58228f60   288  ldr x16, pc+64 (addr 0x0000ffff58228fa0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58228f64   292  blr x16
0xffff58228f68   296  str x0, [jssp, #48]
0xffff58228f6c   300  ldr x16, pc+60 (addr 0x0000ffff58228fa8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58228f70   304  blr x16
0xffff58228f74   308  b #-0xd0 (addr 0xffff58228ea4)
0xffff58228f78   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff58228f7c   316  d63f03e0       constant
0xffff58228f80   320  39c04201       constant
0xffff58228f84   324  00000000       constant
0xffff58228f88   328  39c04201       constant
0xffff58228f8c   332  00000000       constant
0xffff58228f90   336  32b04259       constant
0xffff58228f94   340  00000000       constant
0xffff58228f98   344  58206820       constant
0xffff58228f9c   348  0000ffff       constant
0xffff58228fa0   352  58206260       constant
0xffff58228fa4   356  0000ffff       constant
0xffff58228fa8   360  582068e0       constant
0xffff58228fac   364  0000ffff       constant
0xffff58228fb0   368  movz x16, #0x0
0xffff58228fb4   372  bl #+0xc (addr 0xffff58228fc0)
0xffff58228fb8   376  movz x16, #0x8
0xffff58228fbc   380  bl #+0x4 (addr 0xffff58228fc0)
0xffff58228fc0   384  ldr x17, pc+24 (addr 0x0000ffff58228fd8)    ;; lazy deoptimization bailout 0
0xffff58228fc4   388  add x17, x17, x16
0xffff58228fc8   392  br x17
0xffff58228fcc   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58228fd0   400  d63f03e0       constant
0xffff58228fd4   404  d503201f       constant
0xffff58228fd8   408  58006000       constant
0xffff58228fdc   412  0000ffff       constant


Safepoints (size = 21)
0xffff58228f68   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff58228eb4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228ebc  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228ecc  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58228f3c  code target (STUB)  (0xffff58206820)
0xffff58228f60  code target (STUB)  (0xffff58206260)
0xffff58228f6c  code target (STUB)  (0xffff582068e0)
0xffff58228f78  constant pool (size 56)
0xffff58228fc0  runtime entry
0xffff58228fcc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNArgumentsConstructorStub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff58228e40     0  movz x16, #0xa00000000
0xffff58228e44     4  sub csp, jssp, #0x10 (16)
0xffff58228e48     8  stp fp, lr, [jssp, #-16]!
0xffff58228e4c    12  mov fp, jssp
0xffff58228e50    16  sub csp, jssp, #0x8 (8)
0xffff58228e54    20  sub jssp, jssp, #0x8 (8)
0xffff58228e58    24  stur x16, [fp, #-8]
0xffff58228e5c    28  movz w16, #0x257f
0xffff58228e60    32  cmp w0, w16, lsl #3
0xffff58228e64    36  b.hs #+0x14c (addr 0xffff58228fb0)
0xffff58228e68    40  lsl x2, x0, #32
0xffff58228e6c    44  lsl w3, w0, #3
0xffff58228e70    48  add w3, w3, #0x10 (16)
0xffff58228e74    52  cmp w3, #0x96000 (614400)
0xffff58228e78    56  b.hs #+0x140 (addr 0xffff58228fb8)
0xffff58228e7c    60  add w3, w3, #0x20 (32)
0xffff58228e80    64  sxtw x3, w3
0xffff58228e84    68  movz x4, #0x92c0
0xffff58228e88    72  movk x4, #0x16e7, lsl #16
0xffff58228e8c    76  ldp x6, x16, [x4]
0xffff58228e90    80  adds x5, x6, x3
0xffff58228e94    84  ccmp x5, x16, #nzCv, lo
0xffff58228e98    88  b.hi #+0x9c (addr 0xffff58228f34)
0xffff58228e9c    92  str x5, [x4]
0xffff58228ea0    96  orr x6, x6, #0x1
0xffff58228ea4   100  movz w3, #0x0
0xffff58228ea8   104  stur x3, [x6, #31]
0xffff58228eac   108  ldur x1, [x1, #23]
0xffff58228eb0   112  stur x1, [x6, #-1]
0xffff58228eb4   116  ldr x1, pc+204 (addr 0x0000ffff58228f80)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228eb8   120  stur x1, [x6, #7]
0xffff58228ebc   124  ldr x1, pc+204 (addr 0x0000ffff58228f88)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58228ec0   128  stur x1, [x6, #15]
0xffff58228ec4   132  stur x2, [x6, #23]
0xffff58228ec8   136  add x1, x6, #0x20 (32)
0xffff58228ecc   140  ldr x3, pc+196 (addr 0x0000ffff58228f90)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58228ed0   144  stur x3, [x1, #-1]
0xffff58228ed4   148  stur x2, [x1, #7]
0xffff58228ed8   152  stur x1, [x6, #15]
0xffff58228edc   156  ldr x2, [fp]
0xffff58228ee0   160  ldur x3, [x2, #-8]
0xffff58228ee4   164  movz x16, #0xe00000000
0xffff58228ee8   168  cmp x3, x16
0xffff58228eec   172  csel x3, fp, x2, ne
0xffff58228ef0   176  movz x2, #0x0
0xffff58228ef4   180  cmp w0, w2
0xffff58228ef8   184  b.le #+0x20 (addr 0xffff58228f18)
0xffff58228efc   188  sub w4, w0, w2
0xffff58228f00   192  add w4, w4, #0x1 (1)
0xffff58228f04   196  ldr x4, [x3, w4, uxtw #3]
0xffff58228f08   200  add x5, x1, #0xf (15)
0xffff58228f0c   204  str x4, [x5, w2, sxtw #3]
0xffff58228f10   208  add w2, w2, #0x1 (1)
0xffff58228f14   212  b #-0x20 (addr 0xffff58228ef4)
0xffff58228f18   216  add w0, w0, #0x1 (1)
0xffff58228f1c   220  lsl x1, x0, #32
0xffff58228f20   224  mov x0, x6
0xffff58228f24   228  mov jssp, fp
0xffff58228f28   232  ldp fp, lr, [jssp], #16
0xffff58228f2c   236  add jssp, jssp, x1, lsr #29
0xffff58228f30   240  ret
0xffff58228f34   244  movz x6, #0x0
0xffff58228f38   248  mov x16, lr
0xffff58228f3c   252  ldr x17, pc+92 (addr 0x0000ffff58228f98)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58228f40   256  blr x17
0xffff58228f44   260  lsl x0, x3, #32
0xffff58228f48   264  movz x10, #0x0
0xffff58228f4c   268  sub csp, jssp, #0x10 (16)
0xffff58228f50   272  stp x10, x0, [jssp, #-16]!
0xffff58228f54   276  movz x0, #0x2
0xffff58228f58   280  movz x1, #0x5b88
0xffff58228f5c   284  movk x1, #0xe2, lsl #16
0xffff58228f60   288  ldr x16, pc+64 (addr 0x0000ffff58228fa0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58228f64   292  blr x16
0xffff58228f68   296  str x0, [jssp, #48]
0xffff58228f6c   300  ldr x16, pc+60 (addr 0x0000ffff58228fa8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58228f70   304  blr x16
0xffff58228f74   308  b #-0xd0 (addr 0xffff58228ea4)
0xffff58228f78   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff58228f7c   316  d63f03e0       constant
0xffff58228f80   320  39c04201       constant
0xffff58228f84   324  00000000       constant
0xffff58228f88   328  39c04201       constant
0xffff58228f8c   332  00000000       constant
0xffff58228f90   336  32b04259       constant
0xffff58228f94   340  00000000       constant
0xffff58228f98   344  58206820       constant
0xffff58228f9c   348  0000ffff       constant
0xffff58228fa0   352  58206260       constant
0xffff58228fa4   356  0000ffff       constant
0xffff58228fa8   360  582068e0       constant
0xffff58228fac   364  0000ffff       constant
0xffff58228fb0   368  movz x16, #0x0
0xffff58228fb4   372  bl #+0xc (addr 0xffff58228fc0)
0xffff58228fb8   376  movz x16, #0x8
0xffff58228fbc   380  bl #+0x4 (addr 0xffff58228fc0)
0xffff58228fc0   384  ldr x17, pc+24 (addr 0x0000ffff58228fd8)    ;; lazy deoptimization bailout 0
0xffff58228fc4   388  add x17, x17, x16
0xffff58228fc8   392  br x17
0xffff58228fcc   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58228fd0   400  d63f03e0       constant
0xffff58228fd4   404  d503201f       constant
0xffff58228fd8   408  58006000       constant
0xffff58228fdc   412  0000ffff       constant


Safepoints (size = 21)
0xffff58228f68   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff58228eb4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228ebc  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58228ecc  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58228f3c  code target (STUB)  (0xffff58206820)
0xffff58228f60  code target (STUB)  (0xffff58206260)
0xffff58228f6c  code target (STUB)  (0xffff582068e0)
0xffff58228f78  constant pool (size 56)
0xffff58228fc0  runtime entry
0xffff58228fcc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff58229060     0  movz w0, #0x6000
0xffff58229064     4  movk w0, #0x9, lsl #16
0xffff58229068     8  cmp w0, #0x30 (48)
0xffff5822906c    12  b.ls #+0x14c (addr 0xffff582291b8)
0xffff58229070    16  movz x2, #0x92c0
0xffff58229074    20  movk x2, #0x16e7, lsl #16
0xffff58229078    24  ldp x3, x0, [x2]
0xffff5822907c    28  adds x16, x3, #0x50 (80)
0xffff58229080    32  ccmp x16, x0, #nzCv, lo
0xffff58229084    36  b.hi #+0x78 (addr 0xffff582290fc)
0xffff58229088    40  str x16, [x2]
0xffff5822908c    44  orr x3, x3, #0x1
0xffff58229090    48  movz w0, #0x0
0xffff58229094    52  stur x0, [x3, #31]
0xffff58229098    56  ldur x0, [x1, #23]
0xffff5822909c    60  stur x0, [x3, #-1]
0xffff582290a0    64  ldr x0, pc+200 (addr 0x0000ffff58229168)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582290a4    68  stur x0, [x3, #7]
0xffff582290a8    72  ldr x0, pc+200 (addr 0x0000ffff58229170)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582290ac    76  stur x0, [x3, #15]
0xffff582290b0    80  movz x0, #0x0
0xffff582290b4    84  stur x0, [x3, #23]
0xffff582290b8    88  add x0, x3, #0x20 (32)
0xffff582290bc    92  ldr x1, pc+188 (addr 0x0000ffff58229178)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582290c0    96  stur x1, [x0, #-1]
0xffff582290c4   100  movz x1, #0x400000000
0xffff582290c8   104  stur x1, [x0, #7]
0xffff582290cc   108  stur x0, [x3, #15]
0xffff582290d0   112  ldr x1, pc+176 (addr 0x0000ffff58229180)    ;; object: 0x39c04519 <the hole>
0xffff582290d4   116  stur x1, [x0, #15]
0xffff582290d8   120  ldr x1, pc+176 (addr 0x0000ffff58229188)    ;; object: 0x39c04519 <the hole>
0xffff582290dc   124  stur x1, [x0, #23]
0xffff582290e0   128  ldr x1, pc+176 (addr 0x0000ffff58229190)    ;; object: 0x39c04519 <the hole>
0xffff582290e4   132  stur x1, [x0, #31]
0xffff582290e8   136  ldr x1, pc+176 (addr 0x0000ffff58229198)    ;; object: 0x39c04519 <the hole>
0xffff582290ec   140  stur x1, [x0, #39]
0xffff582290f0   144  mov x0, x3
0xffff582290f4   148  add jssp, jssp, #0x8 (8)
0xffff582290f8   152  ret
0xffff582290fc   156  sub csp, jssp, #0x10 (16)
0xffff58229100   160  stp fp, lr, [jssp, #-16]!
0xffff58229104   164  movz fp, #0xa00000000
0xffff58229108   168  sub csp, jssp, #0x8 (8)
0xffff5822910c   172  str fp, [jssp, #-8]!
0xffff58229110   176  add fp, jssp, #0x8 (8)
0xffff58229114   180  movz x3, #0x0
0xffff58229118   184  mov x16, lr
0xffff5822911c   188  ldr x17, pc+132 (addr 0x0000ffff582291a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58229120   192  blr x17
0xffff58229124   196  movz x0, #0x5000000000
0xffff58229128   200  movz x10, #0x0
0xffff5822912c   204  sub csp, jssp, #0x10 (16)
0xffff58229130   208  stp x10, x0, [jssp, #-16]!
0xffff58229134   212  movz x0, #0x2
0xffff58229138   216  movz x1, #0x5b88
0xffff5822913c   220  movk x1, #0xe2, lsl #16
0xffff58229140   224  ldr x16, pc+104 (addr 0x0000ffff582291a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58229144   228  blr x16
0xffff58229148   232  str x0, [jssp, #24]
0xffff5822914c   236  ldr x16, pc+100 (addr 0x0000ffff582291b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58229150   240  blr x16
0xffff58229154   244  ldr lr, [jssp, #16]
0xffff58229158   248  ldp xzr, fp, [jssp], #24
0xffff5822915c   252  b #-0xcc (addr 0xffff58229090)
0xffff58229160   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff58229164   260  d63f03e0       constant
0xffff58229168   264  39c04201       constant
0xffff5822916c   268  00000000       constant
0xffff58229170   272  39c04201       constant
0xffff58229174   276  00000000       constant
0xffff58229178   280  32b04259       constant
0xffff5822917c   284  00000000       constant
0xffff58229180   288  39c04519       constant
0xffff58229184   292  00000000       constant
0xffff58229188   296  39c04519       constant
0xffff5822918c   300  00000000       constant
0xffff58229190   304  39c04519       constant
0xffff58229194   308  00000000       constant
0xffff58229198   312  39c04519       constant
0xffff5822919c   316  00000000       constant
0xffff582291a0   320  58206820       constant
0xffff582291a4   324  0000ffff       constant
0xffff582291a8   328  58206260       constant
0xffff582291ac   332  0000ffff       constant
0xffff582291b0   336  582068e0       constant
0xffff582291b4   340  0000ffff       constant
0xffff582291b8   344  movz x16, #0x0
0xffff582291bc   348  sub csp, jssp, #0x10 (16)
0xffff582291c0   352  stp fp, lr, [jssp, #-16]!
0xffff582291c4   356  bl #+0x4 (addr 0xffff582291c8)
0xffff582291c8   360  movz x17, #0xa00000000
0xffff582291cc   364  sub csp, jssp, #0x10 (16)
0xffff582291d0   368  stp x17, cp, [jssp, #-16]!
0xffff582291d4   372  add fp, jssp, #0x10 (16)
0xffff582291d8   376  ldr x17, pc+24 (addr 0x0000ffff582291f0)    ;; lazy deoptimization bailout 0
0xffff582291dc   380  add x17, x17, x16
0xffff582291e0   384  br x17
0xffff582291e4   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582291e8   392  d63f03e0       constant
0xffff582291ec   396  d503201f       constant
0xffff582291f0   400  58006000       constant
0xffff582291f4   404  0000ffff       constant


Safepoints (size = 21)
0xffff58229148   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff582290a0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582290a8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582290bc  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582290d0  embedded object  (0x39c04519 <the hole>)
0xffff582290d8  embedded object  (0x39c04519 <the hole>)
0xffff582290e0  embedded object  (0x39c04519 <the hole>)
0xffff582290e8  embedded object  (0x39c04519 <the hole>)
0xffff5822911c  code target (STUB)  (0xffff58206820)
0xffff58229140  code target (STUB)  (0xffff58206260)
0xffff5822914c  code target (STUB)  (0xffff582068e0)
0xffff58229160  constant pool (size 88)
0xffff582291d8  runtime entry
0xffff582291e4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNoArgumentConstructorStub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff58229060     0  movz w0, #0x6000
0xffff58229064     4  movk w0, #0x9, lsl #16
0xffff58229068     8  cmp w0, #0x30 (48)
0xffff5822906c    12  b.ls #+0x14c (addr 0xffff582291b8)
0xffff58229070    16  movz x2, #0x92c0
0xffff58229074    20  movk x2, #0x16e7, lsl #16
0xffff58229078    24  ldp x3, x0, [x2]
0xffff5822907c    28  adds x16, x3, #0x50 (80)
0xffff58229080    32  ccmp x16, x0, #nzCv, lo
0xffff58229084    36  b.hi #+0x78 (addr 0xffff582290fc)
0xffff58229088    40  str x16, [x2]
0xffff5822908c    44  orr x3, x3, #0x1
0xffff58229090    48  movz w0, #0x0
0xffff58229094    52  stur x0, [x3, #31]
0xffff58229098    56  ldur x0, [x1, #23]
0xffff5822909c    60  stur x0, [x3, #-1]
0xffff582290a0    64  ldr x0, pc+200 (addr 0x0000ffff58229168)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582290a4    68  stur x0, [x3, #7]
0xffff582290a8    72  ldr x0, pc+200 (addr 0x0000ffff58229170)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582290ac    76  stur x0, [x3, #15]
0xffff582290b0    80  movz x0, #0x0
0xffff582290b4    84  stur x0, [x3, #23]
0xffff582290b8    88  add x0, x3, #0x20 (32)
0xffff582290bc    92  ldr x1, pc+188 (addr 0x0000ffff58229178)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582290c0    96  stur x1, [x0, #-1]
0xffff582290c4   100  movz x1, #0x400000000
0xffff582290c8   104  stur x1, [x0, #7]
0xffff582290cc   108  stur x0, [x3, #15]
0xffff582290d0   112  ldr x1, pc+176 (addr 0x0000ffff58229180)    ;; object: 0x39c04519 <the hole>
0xffff582290d4   116  stur x1, [x0, #15]
0xffff582290d8   120  ldr x1, pc+176 (addr 0x0000ffff58229188)    ;; object: 0x39c04519 <the hole>
0xffff582290dc   124  stur x1, [x0, #23]
0xffff582290e0   128  ldr x1, pc+176 (addr 0x0000ffff58229190)    ;; object: 0x39c04519 <the hole>
0xffff582290e4   132  stur x1, [x0, #31]
0xffff582290e8   136  ldr x1, pc+176 (addr 0x0000ffff58229198)    ;; object: 0x39c04519 <the hole>
0xffff582290ec   140  stur x1, [x0, #39]
0xffff582290f0   144  mov x0, x3
0xffff582290f4   148  add jssp, jssp, #0x8 (8)
0xffff582290f8   152  ret
0xffff582290fc   156  sub csp, jssp, #0x10 (16)
0xffff58229100   160  stp fp, lr, [jssp, #-16]!
0xffff58229104   164  movz fp, #0xa00000000
0xffff58229108   168  sub csp, jssp, #0x8 (8)
0xffff5822910c   172  str fp, [jssp, #-8]!
0xffff58229110   176  add fp, jssp, #0x8 (8)
0xffff58229114   180  movz x3, #0x0
0xffff58229118   184  mov x16, lr
0xffff5822911c   188  ldr x17, pc+132 (addr 0x0000ffff582291a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58229120   192  blr x17
0xffff58229124   196  movz x0, #0x5000000000
0xffff58229128   200  movz x10, #0x0
0xffff5822912c   204  sub csp, jssp, #0x10 (16)
0xffff58229130   208  stp x10, x0, [jssp, #-16]!
0xffff58229134   212  movz x0, #0x2
0xffff58229138   216  movz x1, #0x5b88
0xffff5822913c   220  movk x1, #0xe2, lsl #16
0xffff58229140   224  ldr x16, pc+104 (addr 0x0000ffff582291a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58229144   228  blr x16
0xffff58229148   232  str x0, [jssp, #24]
0xffff5822914c   236  ldr x16, pc+100 (addr 0x0000ffff582291b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58229150   240  blr x16
0xffff58229154   244  ldr lr, [jssp, #16]
0xffff58229158   248  ldp xzr, fp, [jssp], #24
0xffff5822915c   252  b #-0xcc (addr 0xffff58229090)
0xffff58229160   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff58229164   260  d63f03e0       constant
0xffff58229168   264  39c04201       constant
0xffff5822916c   268  00000000       constant
0xffff58229170   272  39c04201       constant
0xffff58229174   276  00000000       constant
0xffff58229178   280  32b04259       constant
0xffff5822917c   284  00000000       constant
0xffff58229180   288  39c04519       constant
0xffff58229184   292  00000000       constant
0xffff58229188   296  39c04519       constant
0xffff5822918c   300  00000000       constant
0xffff58229190   304  39c04519       constant
0xffff58229194   308  00000000       constant
0xffff58229198   312  39c04519       constant
0xffff5822919c   316  00000000       constant
0xffff582291a0   320  58206820       constant
0xffff582291a4   324  0000ffff       constant
0xffff582291a8   328  58206260       constant
0xffff582291ac   332  0000ffff       constant
0xffff582291b0   336  582068e0       constant
0xffff582291b4   340  0000ffff       constant
0xffff582291b8   344  movz x16, #0x0
0xffff582291bc   348  sub csp, jssp, #0x10 (16)
0xffff582291c0   352  stp fp, lr, [jssp, #-16]!
0xffff582291c4   356  bl #+0x4 (addr 0xffff582291c8)
0xffff582291c8   360  movz x17, #0xa00000000
0xffff582291cc   364  sub csp, jssp, #0x10 (16)
0xffff582291d0   368  stp x17, cp, [jssp, #-16]!
0xffff582291d4   372  add fp, jssp, #0x10 (16)
0xffff582291d8   376  ldr x17, pc+24 (addr 0x0000ffff582291f0)    ;; lazy deoptimization bailout 0
0xffff582291dc   380  add x17, x17, x16
0xffff582291e0   384  br x17
0xffff582291e4   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582291e8   392  d63f03e0       constant
0xffff582291ec   396  d503201f       constant
0xffff582291f0   400  58006000       constant
0xffff582291f4   404  0000ffff       constant


Safepoints (size = 21)
0xffff58229148   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff582290a0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582290a8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582290bc  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582290d0  embedded object  (0x39c04519 <the hole>)
0xffff582290d8  embedded object  (0x39c04519 <the hole>)
0xffff582290e0  embedded object  (0x39c04519 <the hole>)
0xffff582290e8  embedded object  (0x39c04519 <the hole>)
0xffff5822911c  code target (STUB)  (0xffff58206820)
0xffff58229140  code target (STUB)  (0xffff58206260)
0xffff5822914c  code target (STUB)  (0xffff582068e0)
0xffff58229160  constant pool (size 88)
0xffff582291d8  runtime entry
0xffff582291e4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff58229280     0  movz x16, #0xa00000000
0xffff58229284     4  sub csp, jssp, #0x10 (16)
0xffff58229288     8  stp fp, lr, [jssp, #-16]!
0xffff5822928c    12  mov fp, jssp
0xffff58229290    16  sub csp, jssp, #0x8 (8)
0xffff58229294    20  sub jssp, jssp, #0x8 (8)
0xffff58229298    24  stur x16, [fp, #-8]
0xffff5822929c    28  ldr x2, [fp]
0xffff582292a0    32  ldur x3, [x2, #-8]
0xffff582292a4    36  movz x16, #0xe00000000
0xffff582292a8    40  cmp x3, x16
0xffff582292ac    44  csel x3, fp, x2, ne
0xffff582292b0    48  ldr x2, [x3, #16]
0xffff582292b4    52  tbnz w2, #0, #+0xd0 (addr 0xffff58229384)
0xffff582292b8    56  asr x4, x2, #32
0xffff582292bc    60  movz w16, #0x257f
0xffff582292c0    64  cmp w4, w16, lsl #3
0xffff582292c4    68  b.hs #+0x16c (addr 0xffff58229430)
0xffff582292c8    72  cbz w4, #+0xc (addr 0xffff582292d4)
0xffff582292cc    76  mov x2, x4
0xffff582292d0    80  b #+0xc (addr 0xffff582292dc)
0xffff582292d4    84  movz x2, #0x4
0xffff582292d8    88  movz x4, #0x0
0xffff582292dc    92  lsl x3, x2, #32
0xffff582292e0    96  lsl x4, x4, #32
0xffff582292e4   100  lsl w5, w2, #3
0xffff582292e8   104  add w5, w5, #0x10 (16)
0xffff582292ec   108  cmp w5, #0x96000 (614400)
0xffff582292f0   112  b.hs #+0x148 (addr 0xffff58229438)
0xffff582292f4   116  add w0, w5, #0x20 (32)
0xffff582292f8   120  sxtw x0, w0
0xffff582292fc   124  movz x5, #0x92c0
0xffff58229300   128  movk x5, #0x16e7, lsl #16
0xffff58229304   132  ldp x7, x16, [x5]
0xffff58229308   136  adds x6, x7, x0
0xffff5822930c   140  ccmp x6, x16, #nzCv, lo
0xffff58229310   144  b.hi #+0x9c (addr 0xffff582293ac)
0xffff58229314   148  str x6, [x5]
0xffff58229318   152  orr x7, x7, #0x1
0xffff5822931c   156  movz w0, #0x0
0xffff58229320   160  stur x0, [x7, #31]
0xffff58229324   164  ldur x0, [x1, #23]
0xffff58229328   168  stur x0, [x7, #-1]
0xffff5822932c   172  ldr x0, pc+204 (addr 0x0000ffff582293f8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58229330   176  stur x0, [x7, #7]
0xffff58229334   180  ldr x0, pc+204 (addr 0x0000ffff58229400)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58229338   184  stur x0, [x7, #15]
0xffff5822933c   188  stur x4, [x7, #23]
0xffff58229340   192  add x0, x7, #0x20 (32)
0xffff58229344   196  ldr x1, pc+196 (addr 0x0000ffff58229408)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58229348   200  stur x1, [x0, #-1]
0xffff5822934c   204  stur x3, [x0, #7]
0xffff58229350   208  stur x0, [x7, #15]
0xffff58229354   212  cmp w2, #0x0 (0)
0xffff58229358   216  b.le #+0x18 (addr 0xffff58229370)
0xffff5822935c   220  sub w2, w2, #0x1 (1)
0xffff58229360   224  ldr x1, pc+176 (addr 0x0000ffff58229410)    ;; object: 0x39c04519 <the hole>
0xffff58229364   228  add x3, x0, #0xf (15)
0xffff58229368   232  str x1, [x3, w2, sxtw #3]
0xffff5822936c   236  b #-0x18 (addr 0xffff58229354)
0xffff58229370   240  mov x0, x7
0xffff58229374   244  mov jssp, fp
0xffff58229378   248  ldp fp, lr, [jssp], #16
0xffff5822937c   252  add jssp, jssp, #0x10 (16)
0xffff58229380   256  ret
0xffff58229384   260  ldur x16, [x2, #-1]
0xffff58229388   264  ldr x17, [x26, #120]
0xffff5822938c   268  cmp x16, x17
0xffff58229390   272  b.ne #+0xb0 (addr 0xffff58229440)
0xffff58229394   276  ldur d29, [x2, #7]
0xffff58229398   280  fcvtzs w4, d29
0xffff5822939c   284  scvtf d0, w4
0xffff582293a0   288  fcmp d29, d0
0xffff582293a4   292  b.ne #+0x9c (addr 0xffff58229440)
0xffff582293a8   296  b #-0xec (addr 0xffff582292bc)
0xffff582293ac   300  movz x7, #0x0
0xffff582293b0   304  mov x16, lr
0xffff582293b4   308  ldr x17, pc+100 (addr 0x0000ffff58229418)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582293b8   312  blr x17
0xffff582293bc   316  lsl x0, x0, #32
0xffff582293c0   320  movz x10, #0x0
0xffff582293c4   324  sub csp, jssp, #0x10 (16)
0xffff582293c8   328  stp x10, x0, [jssp, #-16]!
0xffff582293cc   332  movz x0, #0x2
0xffff582293d0   336  movz x1, #0x5b88
0xffff582293d4   340  movk x1, #0xe2, lsl #16
0xffff582293d8   344  ldr x16, pc+72 (addr 0x0000ffff58229420)    ;; code: STUB, CEntryStub, minor: 5
0xffff582293dc   348  blr x16
0xffff582293e0   352  str x0, [jssp, #56]
0xffff582293e4   356  ldr x16, pc+68 (addr 0x0000ffff58229428)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582293e8   360  blr x16
0xffff582293ec   364  b #-0xd0 (addr 0xffff5822931c)
0xffff582293f0   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff582293f4   372  d63f03e0       constant
0xffff582293f8   376  39c04201       constant
0xffff582293fc   380  00000000       constant
0xffff58229400   384  39c04201       constant
0xffff58229404   388  00000000       constant
0xffff58229408   392  32b04259       constant
0xffff5822940c   396  00000000       constant
0xffff58229410   400  39c04519       constant
0xffff58229414   404  00000000       constant
0xffff58229418   408  58206820       constant
0xffff5822941c   412  0000ffff       constant
0xffff58229420   416  58206260       constant
0xffff58229424   420  0000ffff       constant
0xffff58229428   424  582068e0       constant
0xffff5822942c   428  0000ffff       constant
0xffff58229430   432  movz x16, #0x0
0xffff58229434   436  bl #+0x14 (addr 0xffff58229448)
0xffff58229438   440  movz x16, #0x8
0xffff5822943c   444  bl #+0xc (addr 0xffff58229448)
0xffff58229440   448  movz x16, #0x10
0xffff58229444   452  bl #+0x4 (addr 0xffff58229448)
0xffff58229448   456  ldr x17, pc+24 (addr 0x0000ffff58229460)    ;; lazy deoptimization bailout 0
0xffff5822944c   460  add x17, x17, x16
0xffff58229450   464  br x17
0xffff58229454   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58229458   472  d63f03e0       constant
0xffff5822945c   476  d503201f       constant
0xffff58229460   480  58006000       constant
0xffff58229464   484  0000ffff       constant


Safepoints (size = 21)
0xffff582293e0   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff5822932c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58229334  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58229344  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58229360  embedded object  (0x39c04519 <the hole>)
0xffff582293b4  code target (STUB)  (0xffff58206820)
0xffff582293d8  code target (STUB)  (0xffff58206260)
0xffff582293e4  code target (STUB)  (0xffff582068e0)
0xffff582293f0  constant pool (size 64)
0xffff58229448  runtime entry
0xffff58229454  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArraySingleArgumentConstructorStub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff58229280     0  movz x16, #0xa00000000
0xffff58229284     4  sub csp, jssp, #0x10 (16)
0xffff58229288     8  stp fp, lr, [jssp, #-16]!
0xffff5822928c    12  mov fp, jssp
0xffff58229290    16  sub csp, jssp, #0x8 (8)
0xffff58229294    20  sub jssp, jssp, #0x8 (8)
0xffff58229298    24  stur x16, [fp, #-8]
0xffff5822929c    28  ldr x2, [fp]
0xffff582292a0    32  ldur x3, [x2, #-8]
0xffff582292a4    36  movz x16, #0xe00000000
0xffff582292a8    40  cmp x3, x16
0xffff582292ac    44  csel x3, fp, x2, ne
0xffff582292b0    48  ldr x2, [x3, #16]
0xffff582292b4    52  tbnz w2, #0, #+0xd0 (addr 0xffff58229384)
0xffff582292b8    56  asr x4, x2, #32
0xffff582292bc    60  movz w16, #0x257f
0xffff582292c0    64  cmp w4, w16, lsl #3
0xffff582292c4    68  b.hs #+0x16c (addr 0xffff58229430)
0xffff582292c8    72  cbz w4, #+0xc (addr 0xffff582292d4)
0xffff582292cc    76  mov x2, x4
0xffff582292d0    80  b #+0xc (addr 0xffff582292dc)
0xffff582292d4    84  movz x2, #0x4
0xffff582292d8    88  movz x4, #0x0
0xffff582292dc    92  lsl x3, x2, #32
0xffff582292e0    96  lsl x4, x4, #32
0xffff582292e4   100  lsl w5, w2, #3
0xffff582292e8   104  add w5, w5, #0x10 (16)
0xffff582292ec   108  cmp w5, #0x96000 (614400)
0xffff582292f0   112  b.hs #+0x148 (addr 0xffff58229438)
0xffff582292f4   116  add w0, w5, #0x20 (32)
0xffff582292f8   120  sxtw x0, w0
0xffff582292fc   124  movz x5, #0x92c0
0xffff58229300   128  movk x5, #0x16e7, lsl #16
0xffff58229304   132  ldp x7, x16, [x5]
0xffff58229308   136  adds x6, x7, x0
0xffff5822930c   140  ccmp x6, x16, #nzCv, lo
0xffff58229310   144  b.hi #+0x9c (addr 0xffff582293ac)
0xffff58229314   148  str x6, [x5]
0xffff58229318   152  orr x7, x7, #0x1
0xffff5822931c   156  movz w0, #0x0
0xffff58229320   160  stur x0, [x7, #31]
0xffff58229324   164  ldur x0, [x1, #23]
0xffff58229328   168  stur x0, [x7, #-1]
0xffff5822932c   172  ldr x0, pc+204 (addr 0x0000ffff582293f8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58229330   176  stur x0, [x7, #7]
0xffff58229334   180  ldr x0, pc+204 (addr 0x0000ffff58229400)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58229338   184  stur x0, [x7, #15]
0xffff5822933c   188  stur x4, [x7, #23]
0xffff58229340   192  add x0, x7, #0x20 (32)
0xffff58229344   196  ldr x1, pc+196 (addr 0x0000ffff58229408)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58229348   200  stur x1, [x0, #-1]
0xffff5822934c   204  stur x3, [x0, #7]
0xffff58229350   208  stur x0, [x7, #15]
0xffff58229354   212  cmp w2, #0x0 (0)
0xffff58229358   216  b.le #+0x18 (addr 0xffff58229370)
0xffff5822935c   220  sub w2, w2, #0x1 (1)
0xffff58229360   224  ldr x1, pc+176 (addr 0x0000ffff58229410)    ;; object: 0x39c04519 <the hole>
0xffff58229364   228  add x3, x0, #0xf (15)
0xffff58229368   232  str x1, [x3, w2, sxtw #3]
0xffff5822936c   236  b #-0x18 (addr 0xffff58229354)
0xffff58229370   240  mov x0, x7
0xffff58229374   244  mov jssp, fp
0xffff58229378   248  ldp fp, lr, [jssp], #16
0xffff5822937c   252  add jssp, jssp, #0x10 (16)
0xffff58229380   256  ret
0xffff58229384   260  ldur x16, [x2, #-1]
0xffff58229388   264  ldr x17, [x26, #120]
0xffff5822938c   268  cmp x16, x17
0xffff58229390   272  b.ne #+0xb0 (addr 0xffff58229440)
0xffff58229394   276  ldur d29, [x2, #7]
0xffff58229398   280  fcvtzs w4, d29
0xffff5822939c   284  scvtf d0, w4
0xffff582293a0   288  fcmp d29, d0
0xffff582293a4   292  b.ne #+0x9c (addr 0xffff58229440)
0xffff582293a8   296  b #-0xec (addr 0xffff582292bc)
0xffff582293ac   300  movz x7, #0x0
0xffff582293b0   304  mov x16, lr
0xffff582293b4   308  ldr x17, pc+100 (addr 0x0000ffff58229418)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582293b8   312  blr x17
0xffff582293bc   316  lsl x0, x0, #32
0xffff582293c0   320  movz x10, #0x0
0xffff582293c4   324  sub csp, jssp, #0x10 (16)
0xffff582293c8   328  stp x10, x0, [jssp, #-16]!
0xffff582293cc   332  movz x0, #0x2
0xffff582293d0   336  movz x1, #0x5b88
0xffff582293d4   340  movk x1, #0xe2, lsl #16
0xffff582293d8   344  ldr x16, pc+72 (addr 0x0000ffff58229420)    ;; code: STUB, CEntryStub, minor: 5
0xffff582293dc   348  blr x16
0xffff582293e0   352  str x0, [jssp, #56]
0xffff582293e4   356  ldr x16, pc+68 (addr 0x0000ffff58229428)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582293e8   360  blr x16
0xffff582293ec   364  b #-0xd0 (addr 0xffff5822931c)
0xffff582293f0   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff582293f4   372  d63f03e0       constant
0xffff582293f8   376  39c04201       constant
0xffff582293fc   380  00000000       constant
0xffff58229400   384  39c04201       constant
0xffff58229404   388  00000000       constant
0xffff58229408   392  32b04259       constant
0xffff5822940c   396  00000000       constant
0xffff58229410   400  39c04519       constant
0xffff58229414   404  00000000       constant
0xffff58229418   408  58206820       constant
0xffff5822941c   412  0000ffff       constant
0xffff58229420   416  58206260       constant
0xffff58229424   420  0000ffff       constant
0xffff58229428   424  582068e0       constant
0xffff5822942c   428  0000ffff       constant
0xffff58229430   432  movz x16, #0x0
0xffff58229434   436  bl #+0x14 (addr 0xffff58229448)
0xffff58229438   440  movz x16, #0x8
0xffff5822943c   444  bl #+0xc (addr 0xffff58229448)
0xffff58229440   448  movz x16, #0x10
0xffff58229444   452  bl #+0x4 (addr 0xffff58229448)
0xffff58229448   456  ldr x17, pc+24 (addr 0x0000ffff58229460)    ;; lazy deoptimization bailout 0
0xffff5822944c   460  add x17, x17, x16
0xffff58229450   464  br x17
0xffff58229454   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58229458   472  d63f03e0       constant
0xffff5822945c   476  d503201f       constant
0xffff58229460   480  58006000       constant
0xffff58229464   484  0000ffff       constant


Safepoints (size = 21)
0xffff582293e0   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff5822932c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58229334  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58229344  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58229360  embedded object  (0x39c04519 <the hole>)
0xffff582293b4  code target (STUB)  (0xffff58206820)
0xffff582293d8  code target (STUB)  (0xffff58206260)
0xffff582293e4  code target (STUB)  (0xffff582068e0)
0xffff582293f0  constant pool (size 64)
0xffff58229448  runtime entry
0xffff58229454  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff582294e0     0  movz x16, #0xa00000000
0xffff582294e4     4  sub csp, jssp, #0x10 (16)
0xffff582294e8     8  stp fp, lr, [jssp, #-16]!
0xffff582294ec    12  mov fp, jssp
0xffff582294f0    16  sub csp, jssp, #0x8 (8)
0xffff582294f4    20  sub jssp, jssp, #0x8 (8)
0xffff582294f8    24  stur x16, [fp, #-8]
0xffff582294fc    28  movz w16, #0x257f
0xffff58229500    32  cmp w0, w16, lsl #3
0xffff58229504    36  b.hs #+0x14c (addr 0xffff58229650)
0xffff58229508    40  lsl x2, x0, #32
0xffff5822950c    44  lsl w3, w0, #3
0xffff58229510    48  add w3, w3, #0x10 (16)
0xffff58229514    52  cmp w3, #0x96000 (614400)
0xffff58229518    56  b.hs #+0x140 (addr 0xffff58229658)
0xffff5822951c    60  add w3, w3, #0x20 (32)
0xffff58229520    64  sxtw x3, w3
0xffff58229524    68  movz x4, #0x92c0
0xffff58229528    72  movk x4, #0x16e7, lsl #16
0xffff5822952c    76  ldp x6, x16, [x4]
0xffff58229530    80  adds x5, x6, x3
0xffff58229534    84  ccmp x5, x16, #nzCv, lo
0xffff58229538    88  b.hi #+0x9c (addr 0xffff582295d4)
0xffff5822953c    92  str x5, [x4]
0xffff58229540    96  orr x6, x6, #0x1
0xffff58229544   100  movz w3, #0x0
0xffff58229548   104  stur x3, [x6, #31]
0xffff5822954c   108  ldur x1, [x1, #23]
0xffff58229550   112  stur x1, [x6, #-1]
0xffff58229554   116  ldr x1, pc+204 (addr 0x0000ffff58229620)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58229558   120  stur x1, [x6, #7]
0xffff5822955c   124  ldr x1, pc+204 (addr 0x0000ffff58229628)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58229560   128  stur x1, [x6, #15]
0xffff58229564   132  stur x2, [x6, #23]
0xffff58229568   136  add x1, x6, #0x20 (32)
0xffff5822956c   140  ldr x3, pc+196 (addr 0x0000ffff58229630)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58229570   144  stur x3, [x1, #-1]
0xffff58229574   148  stur x2, [x1, #7]
0xffff58229578   152  stur x1, [x6, #15]
0xffff5822957c   156  ldr x2, [fp]
0xffff58229580   160  ldur x3, [x2, #-8]
0xffff58229584   164  movz x16, #0xe00000000
0xffff58229588   168  cmp x3, x16
0xffff5822958c   172  csel x3, fp, x2, ne
0xffff58229590   176  movz x2, #0x0
0xffff58229594   180  cmp w0, w2
0xffff58229598   184  b.le #+0x20 (addr 0xffff582295b8)
0xffff5822959c   188  sub w4, w0, w2
0xffff582295a0   192  add w4, w4, #0x1 (1)
0xffff582295a4   196  ldr x4, [x3, w4, uxtw #3]
0xffff582295a8   200  add x5, x1, #0xf (15)
0xffff582295ac   204  str x4, [x5, w2, sxtw #3]
0xffff582295b0   208  add w2, w2, #0x1 (1)
0xffff582295b4   212  b #-0x20 (addr 0xffff58229594)
0xffff582295b8   216  add w0, w0, #0x1 (1)
0xffff582295bc   220  lsl x1, x0, #32
0xffff582295c0   224  mov x0, x6
0xffff582295c4   228  mov jssp, fp
0xffff582295c8   232  ldp fp, lr, [jssp], #16
0xffff582295cc   236  add jssp, jssp, x1, lsr #29
0xffff582295d0   240  ret
0xffff582295d4   244  movz x6, #0x0
0xffff582295d8   248  mov x16, lr
0xffff582295dc   252  ldr x17, pc+92 (addr 0x0000ffff58229638)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582295e0   256  blr x17
0xffff582295e4   260  lsl x0, x3, #32
0xffff582295e8   264  movz x10, #0x0
0xffff582295ec   268  sub csp, jssp, #0x10 (16)
0xffff582295f0   272  stp x10, x0, [jssp, #-16]!
0xffff582295f4   276  movz x0, #0x2
0xffff582295f8   280  movz x1, #0x5b88
0xffff582295fc   284  movk x1, #0xe2, lsl #16
0xffff58229600   288  ldr x16, pc+64 (addr 0x0000ffff58229640)    ;; code: STUB, CEntryStub, minor: 5
0xffff58229604   292  blr x16
0xffff58229608   296  str x0, [jssp, #48]
0xffff5822960c   300  ldr x16, pc+60 (addr 0x0000ffff58229648)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58229610   304  blr x16
0xffff58229614   308  b #-0xd0 (addr 0xffff58229544)
0xffff58229618   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5822961c   316  d63f03e0       constant
0xffff58229620   320  39c04201       constant
0xffff58229624   324  00000000       constant
0xffff58229628   328  39c04201       constant
0xffff5822962c   332  00000000       constant
0xffff58229630   336  32b04259       constant
0xffff58229634   340  00000000       constant
0xffff58229638   344  58206820       constant
0xffff5822963c   348  0000ffff       constant
0xffff58229640   352  58206260       constant
0xffff58229644   356  0000ffff       constant
0xffff58229648   360  582068e0       constant
0xffff5822964c   364  0000ffff       constant
0xffff58229650   368  movz x16, #0x0
0xffff58229654   372  bl #+0xc (addr 0xffff58229660)
0xffff58229658   376  movz x16, #0x8
0xffff5822965c   380  bl #+0x4 (addr 0xffff58229660)
0xffff58229660   384  ldr x17, pc+24 (addr 0x0000ffff58229678)    ;; lazy deoptimization bailout 0
0xffff58229664   388  add x17, x17, x16
0xffff58229668   392  br x17
0xffff5822966c   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58229670   400  d63f03e0       constant
0xffff58229674   404  d503201f       constant
0xffff58229678   408  58006000       constant
0xffff5822967c   412  0000ffff       constant


Safepoints (size = 21)
0xffff58229608   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff58229554  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5822955c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5822956c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582295dc  code target (STUB)  (0xffff58206820)
0xffff58229600  code target (STUB)  (0xffff58206260)
0xffff5822960c  code target (STUB)  (0xffff582068e0)
0xffff58229618  constant pool (size 56)
0xffff58229660  runtime entry
0xffff5822966c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNArgumentsConstructorStub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff582294e0     0  movz x16, #0xa00000000
0xffff582294e4     4  sub csp, jssp, #0x10 (16)
0xffff582294e8     8  stp fp, lr, [jssp, #-16]!
0xffff582294ec    12  mov fp, jssp
0xffff582294f0    16  sub csp, jssp, #0x8 (8)
0xffff582294f4    20  sub jssp, jssp, #0x8 (8)
0xffff582294f8    24  stur x16, [fp, #-8]
0xffff582294fc    28  movz w16, #0x257f
0xffff58229500    32  cmp w0, w16, lsl #3
0xffff58229504    36  b.hs #+0x14c (addr 0xffff58229650)
0xffff58229508    40  lsl x2, x0, #32
0xffff5822950c    44  lsl w3, w0, #3
0xffff58229510    48  add w3, w3, #0x10 (16)
0xffff58229514    52  cmp w3, #0x96000 (614400)
0xffff58229518    56  b.hs #+0x140 (addr 0xffff58229658)
0xffff5822951c    60  add w3, w3, #0x20 (32)
0xffff58229520    64  sxtw x3, w3
0xffff58229524    68  movz x4, #0x92c0
0xffff58229528    72  movk x4, #0x16e7, lsl #16
0xffff5822952c    76  ldp x6, x16, [x4]
0xffff58229530    80  adds x5, x6, x3
0xffff58229534    84  ccmp x5, x16, #nzCv, lo
0xffff58229538    88  b.hi #+0x9c (addr 0xffff582295d4)
0xffff5822953c    92  str x5, [x4]
0xffff58229540    96  orr x6, x6, #0x1
0xffff58229544   100  movz w3, #0x0
0xffff58229548   104  stur x3, [x6, #31]
0xffff5822954c   108  ldur x1, [x1, #23]
0xffff58229550   112  stur x1, [x6, #-1]
0xffff58229554   116  ldr x1, pc+204 (addr 0x0000ffff58229620)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58229558   120  stur x1, [x6, #7]
0xffff5822955c   124  ldr x1, pc+204 (addr 0x0000ffff58229628)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58229560   128  stur x1, [x6, #15]
0xffff58229564   132  stur x2, [x6, #23]
0xffff58229568   136  add x1, x6, #0x20 (32)
0xffff5822956c   140  ldr x3, pc+196 (addr 0x0000ffff58229630)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58229570   144  stur x3, [x1, #-1]
0xffff58229574   148  stur x2, [x1, #7]
0xffff58229578   152  stur x1, [x6, #15]
0xffff5822957c   156  ldr x2, [fp]
0xffff58229580   160  ldur x3, [x2, #-8]
0xffff58229584   164  movz x16, #0xe00000000
0xffff58229588   168  cmp x3, x16
0xffff5822958c   172  csel x3, fp, x2, ne
0xffff58229590   176  movz x2, #0x0
0xffff58229594   180  cmp w0, w2
0xffff58229598   184  b.le #+0x20 (addr 0xffff582295b8)
0xffff5822959c   188  sub w4, w0, w2
0xffff582295a0   192  add w4, w4, #0x1 (1)
0xffff582295a4   196  ldr x4, [x3, w4, uxtw #3]
0xffff582295a8   200  add x5, x1, #0xf (15)
0xffff582295ac   204  str x4, [x5, w2, sxtw #3]
0xffff582295b0   208  add w2, w2, #0x1 (1)
0xffff582295b4   212  b #-0x20 (addr 0xffff58229594)
0xffff582295b8   216  add w0, w0, #0x1 (1)
0xffff582295bc   220  lsl x1, x0, #32
0xffff582295c0   224  mov x0, x6
0xffff582295c4   228  mov jssp, fp
0xffff582295c8   232  ldp fp, lr, [jssp], #16
0xffff582295cc   236  add jssp, jssp, x1, lsr #29
0xffff582295d0   240  ret
0xffff582295d4   244  movz x6, #0x0
0xffff582295d8   248  mov x16, lr
0xffff582295dc   252  ldr x17, pc+92 (addr 0x0000ffff58229638)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582295e0   256  blr x17
0xffff582295e4   260  lsl x0, x3, #32
0xffff582295e8   264  movz x10, #0x0
0xffff582295ec   268  sub csp, jssp, #0x10 (16)
0xffff582295f0   272  stp x10, x0, [jssp, #-16]!
0xffff582295f4   276  movz x0, #0x2
0xffff582295f8   280  movz x1, #0x5b88
0xffff582295fc   284  movk x1, #0xe2, lsl #16
0xffff58229600   288  ldr x16, pc+64 (addr 0x0000ffff58229640)    ;; code: STUB, CEntryStub, minor: 5
0xffff58229604   292  blr x16
0xffff58229608   296  str x0, [jssp, #48]
0xffff5822960c   300  ldr x16, pc+60 (addr 0x0000ffff58229648)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58229610   304  blr x16
0xffff58229614   308  b #-0xd0 (addr 0xffff58229544)
0xffff58229618   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5822961c   316  d63f03e0       constant
0xffff58229620   320  39c04201       constant
0xffff58229624   324  00000000       constant
0xffff58229628   328  39c04201       constant
0xffff5822962c   332  00000000       constant
0xffff58229630   336  32b04259       constant
0xffff58229634   340  00000000       constant
0xffff58229638   344  58206820       constant
0xffff5822963c   348  0000ffff       constant
0xffff58229640   352  58206260       constant
0xffff58229644   356  0000ffff       constant
0xffff58229648   360  582068e0       constant
0xffff5822964c   364  0000ffff       constant
0xffff58229650   368  movz x16, #0x0
0xffff58229654   372  bl #+0xc (addr 0xffff58229660)
0xffff58229658   376  movz x16, #0x8
0xffff5822965c   380  bl #+0x4 (addr 0xffff58229660)
0xffff58229660   384  ldr x17, pc+24 (addr 0x0000ffff58229678)    ;; lazy deoptimization bailout 0
0xffff58229664   388  add x17, x17, x16
0xffff58229668   392  br x17
0xffff5822966c   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58229670   400  d63f03e0       constant
0xffff58229674   404  d503201f       constant
0xffff58229678   408  58006000       constant
0xffff5822967c   412  0000ffff       constant


Safepoints (size = 21)
0xffff58229608   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff58229554  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5822955c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5822956c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582295dc  code target (STUB)  (0xffff58206820)
0xffff58229600  code target (STUB)  (0xffff58206260)
0xffff5822960c  code target (STUB)  (0xffff582068e0)
0xffff58229618  constant pool (size 56)
0xffff58229660  runtime entry
0xffff5822966c  constant pool (size 20)


kind = STUB
major_key = InternalArrayConstructorStub
name = InternalArrayConstructorStub
compiler = unknown
Instructions (size = 176)
0xffff58229700     0  ldur x10, [x1, #23]
0xffff58229704     4  ldrb w3, [x10, #13]
0xffff58229708     8  ubfx w3, w3, #3, #5
0xffff5822970c    12  cmp w3, #0x2 (2)
0xffff58229710    16  b.eq #+0x28 (addr 0xffff58229738)
0xffff58229714    20  cbz x0, #+0x14 (addr 0xffff58229728)
0xffff58229718    24  cmp x0, #0x1 (1)
0xffff5822971c    28  b.ne #+0x14 (addr 0xffff58229730)
0xffff58229720    32  ldr x16, pc+88 (addr 0x0000ffff58229778)    ;; code: STUB, InternalArraySingleArgumentConstructorStub, minor: 3
0xffff58229724    36  br x16
0xffff58229728    40  ldr x16, pc+88 (addr 0x0000ffff58229780)    ;; code: STUB, InternalArrayNoArgumentConstructorStub, minor: 3
0xffff5822972c    44  br x16
0xffff58229730    48  ldr x16, pc+88 (addr 0x0000ffff58229788)    ;; code: STUB, InternalArrayNArgumentsConstructorStub, minor: 3
0xffff58229734    52  br x16
0xffff58229738    56  cbz x0, #+0x24 (addr 0xffff5822975c)
0xffff5822973c    60  cmp x0, #0x1 (1)
0xffff58229740    64  b.ne #+0x24 (addr 0xffff58229764)
0xffff58229744    68  ldr x10, [jssp]
0xffff58229748    72  cbz x10, #+0xc (addr 0xffff58229754)
0xffff5822974c    76  ldr x16, pc+68 (addr 0x0000ffff58229790)    ;; code: STUB, InternalArraySingleArgumentConstructorStub, minor: 3
0xffff58229750    80  br x16
0xffff58229754    84  ldr x16, pc+68 (addr 0x0000ffff58229798)    ;; code: STUB, InternalArraySingleArgumentConstructorStub, minor: 2
0xffff58229758    88  br x16
0xffff5822975c    92  ldr x16, pc+68 (addr 0x0000ffff582297a0)    ;; code: STUB, InternalArrayNoArgumentConstructorStub, minor: 2
0xffff58229760    96  br x16
0xffff58229764   100  ldr x16, pc+68 (addr 0x0000ffff582297a8)    ;; code: STUB, InternalArrayNArgumentsConstructorStub, minor: 2
0xffff58229768   104  br x16
0xffff5822976c   108  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58229770   112  d63f03e0       constant
0xffff58229774   116  d503201f       constant
0xffff58229778   120  58229280       constant
0xffff5822977c   124  0000ffff       constant
0xffff58229780   128  58229060       constant
0xffff58229784   132  0000ffff       constant
0xffff58229788   136  582294e0       constant
0xffff5822978c   140  0000ffff       constant
0xffff58229790   144  58229280       constant
0xffff58229794   148  0000ffff       constant
0xffff58229798   152  58228be0       constant
0xffff5822979c   156  0000ffff       constant
0xffff582297a0   160  582289c0       constant
0xffff582297a4   164  0000ffff       constant
0xffff582297a8   168  58228e40       constant
0xffff582297ac   172  0000ffff       constant


RelocInfo (size = 13)
0xffff58229720  code target (STUB)  (0xffff58229280)
0xffff58229728  code target (STUB)  (0xffff58229060)
0xffff58229730  code target (STUB)  (0xffff582294e0)
0xffff5822974c  code target (STUB)  (0xffff58229280)
0xffff58229754  code target (STUB)  (0xffff58228be0)
0xffff5822975c  code target (STUB)  (0xffff582289c0)
0xffff58229764  code target (STUB)  (0xffff58228e40)
0xffff5822976c  constant pool (size 68)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_Any
compiler = unknown
Instructions (size = 768)
0xffff582298c0     0  ldur cp, [x1, #39]
0xffff582298c4     4  cmp x3, x1
0xffff582298c8     8  b.ne #+0x1e0 (addr 0xffff58229aa8)
0xffff582298cc    12  ldr x16, [x26, #40]
0xffff582298d0    16  cmp x2, x16
0xffff582298d4    20  b.eq #+0x1a0 (addr 0xffff58229a74)
0xffff582298d8    24  ldursw x3, [x2, #11]
0xffff582298dc    28  and x3, x3, #0x7fff
0xffff582298e0    32  cbz x0, #+0xa4 (addr 0xffff58229984)
0xffff582298e4    36  cmp x0, #0x1 (1)
0xffff582298e8    40  b.ne #+0x114 (addr 0xffff582299fc)
0xffff582298ec    44  tbnz w3, #0, #+0x20 (addr 0xffff5822990c)
0xffff582298f0    48  ldr x10, [jssp]
0xffff582298f4    52  cbz x10, #+0x18 (addr 0xffff5822990c)
0xffff582298f8    56  orr x3, x3, #0x1
0xffff582298fc    60  ldur x11, [x2, #7]
0xffff58229900    64  movz x16, #0x100000000
0xffff58229904    68  add x11, x11, x16
0xffff58229908    72  stur x11, [x2, #7]
0xffff5822990c    76  cbnz x3, #+0xc (addr 0xffff58229918)
0xffff58229910    80  ldr x16, pc+448 (addr 0x0000ffff58229ad0)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 0
0xffff58229914    84  br x16
0xffff58229918    88  cmp x3, #0x1 (1)
0xffff5822991c    92  b.ne #+0xc (addr 0xffff58229928)
0xffff58229920    96  ldr x16, pc+440 (addr 0x0000ffff58229ad8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 1
0xffff58229924   100  br x16
0xffff58229928   104  cmp x3, #0x4 (4)
0xffff5822992c   108  b.ne #+0xc (addr 0xffff58229938)
0xffff58229930   112  ldr x16, pc+432 (addr 0x0000ffff58229ae0)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 4
0xffff58229934   116  br x16
0xffff58229938   120  cmp x3, #0x5 (5)
0xffff5822993c   124  b.ne #+0xc (addr 0xffff58229948)
0xffff58229940   128  ldr x16, pc+424 (addr 0x0000ffff58229ae8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 5
0xffff58229944   132  br x16
0xffff58229948   136  cmp x3, #0x2 (2)
0xffff5822994c   140  b.ne #+0xc (addr 0xffff58229958)
0xffff58229950   144  ldr x16, pc+416 (addr 0x0000ffff58229af0)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 2
0xffff58229954   148  br x16
0xffff58229958   152  cmp x3, #0x3 (3)
0xffff5822995c   156  b.ne #+0xc (addr 0xffff58229968)
0xffff58229960   160  ldr x16, pc+408 (addr 0x0000ffff58229af8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 3
0xffff58229964   164  br x16
0xffff58229968   168  movz x0, #0x9f00000000
0xffff5822996c   172  sub csp, jssp, #0x8 (8)
0xffff58229970   176  str x0, [jssp, #-8]!
0xffff58229974   180  movz x0, #0x1
0xffff58229978   184  ldr x1, pc+392 (addr 0x0000ffff58229b00)    ;; external reference (Runtime::Abort)
0xffff5822997c   188  ldr x16, pc+396 (addr 0x0000ffff58229b08)    ;; code: STUB, CEntryStub, minor: 4
0xffff58229980   192  blr x16
0xffff58229984   196  cbnz x3, #+0xc (addr 0xffff58229990)
0xffff58229988   200  ldr x16, pc+392 (addr 0x0000ffff58229b10)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 0
0xffff5822998c   204  br x16
0xffff58229990   208  cmp x3, #0x1 (1)
0xffff58229994   212  b.ne #+0xc (addr 0xffff582299a0)
0xffff58229998   216  ldr x16, pc+384 (addr 0x0000ffff58229b18)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 1
0xffff5822999c   220  br x16
0xffff582299a0   224  cmp x3, #0x4 (4)
0xffff582299a4   228  b.ne #+0xc (addr 0xffff582299b0)
0xffff582299a8   232  ldr x16, pc+376 (addr 0x0000ffff58229b20)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 4
0xffff582299ac   236  br x16
0xffff582299b0   240  cmp x3, #0x5 (5)
0xffff582299b4   244  b.ne #+0xc (addr 0xffff582299c0)
0xffff582299b8   248  ldr x16, pc+368 (addr 0x0000ffff58229b28)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 5
0xffff582299bc   252  br x16
0xffff582299c0   256  cmp x3, #0x2 (2)
0xffff582299c4   260  b.ne #+0xc (addr 0xffff582299d0)
0xffff582299c8   264  ldr x16, pc+360 (addr 0x0000ffff58229b30)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 2
0xffff582299cc   268  br x16
0xffff582299d0   272  cmp x3, #0x3 (3)
0xffff582299d4   276  b.ne #+0xc (addr 0xffff582299e0)
0xffff582299d8   280  ldr x16, pc+352 (addr 0x0000ffff58229b38)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 3
0xffff582299dc   284  br x16
0xffff582299e0   288  movz x0, #0x9f00000000
0xffff582299e4   292  sub csp, jssp, #0x8 (8)
0xffff582299e8   296  str x0, [jssp, #-8]!
0xffff582299ec   300  movz x0, #0x1
0xffff582299f0   304  ldr x1, pc+336 (addr 0x0000ffff58229b40)    ;; external reference (Runtime::Abort)
0xffff582299f4   308  ldr x16, pc+340 (addr 0x0000ffff58229b48)    ;; code: STUB, CEntryStub, minor: 4
0xffff582299f8   312  blr x16
0xffff582299fc   316  cbnz x3, #+0xc (addr 0xffff58229a08)
0xffff58229a00   320  ldr x16, pc+336 (addr 0x0000ffff58229b50)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 0
0xffff58229a04   324  br x16
0xffff58229a08   328  cmp x3, #0x1 (1)
0xffff58229a0c   332  b.ne #+0xc (addr 0xffff58229a18)
0xffff58229a10   336  ldr x16, pc+328 (addr 0x0000ffff58229b58)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 1
0xffff58229a14   340  br x16
0xffff58229a18   344  cmp x3, #0x4 (4)
0xffff58229a1c   348  b.ne #+0xc (addr 0xffff58229a28)
0xffff58229a20   352  ldr x16, pc+320 (addr 0x0000ffff58229b60)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 4
0xffff58229a24   356  br x16
0xffff58229a28   360  cmp x3, #0x5 (5)
0xffff58229a2c   364  b.ne #+0xc (addr 0xffff58229a38)
0xffff58229a30   368  ldr x16, pc+312 (addr 0x0000ffff58229b68)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 5
0xffff58229a34   372  br x16
0xffff58229a38   376  cmp x3, #0x2 (2)
0xffff58229a3c   380  b.ne #+0xc (addr 0xffff58229a48)
0xffff58229a40   384  ldr x16, pc+304 (addr 0x0000ffff58229b70)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 2
0xffff58229a44   388  br x16
0xffff58229a48   392  cmp x3, #0x3 (3)
0xffff58229a4c   396  b.ne #+0xc (addr 0xffff58229a58)
0xffff58229a50   400  ldr x16, pc+296 (addr 0x0000ffff58229b78)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 3
0xffff58229a54   404  br x16
0xffff58229a58   408  movz x0, #0x9f00000000
0xffff58229a5c   412  sub csp, jssp, #0x8 (8)
0xffff58229a60   416  str x0, [jssp, #-8]!
0xffff58229a64   420  movz x0, #0x1
0xffff58229a68   424  ldr x1, pc+280 (addr 0x0000ffff58229b80)    ;; external reference (Runtime::Abort)
0xffff58229a6c   428  ldr x16, pc+284 (addr 0x0000ffff58229b88)    ;; code: STUB, CEntryStub, minor: 4
0xffff58229a70   432  blr x16
0xffff58229a74   436  cbz x0, #+0x24 (addr 0xffff58229a98)
0xffff58229a78   440  cmp x0, #0x1 (1)
0xffff58229a7c   444  b.ne #+0x24 (addr 0xffff58229aa0)
0xffff58229a80   448  ldr x10, [jssp]
0xffff58229a84   452  cbz x10, #+0xc (addr 0xffff58229a90)
0xffff58229a88   456  ldr x16, pc+264 (addr 0x0000ffff58229b90)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 257
0xffff58229a8c   460  br x16
0xffff58229a90   464  ldr x16, pc+264 (addr 0x0000ffff58229b98)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 256
0xffff58229a94   468  br x16
0xffff58229a98   472  ldr x16, pc+264 (addr 0x0000ffff58229ba0)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 256
0xffff58229a9c   476  br x16
0xffff58229aa0   480  ldr x16, pc+264 (addr 0x0000ffff58229ba8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 256
0xffff58229aa4   484  br x16
0xffff58229aa8   488  str x1, [jssp, x0, lsl #3]
0xffff58229aac   492  add x0, x0, #0x3 (3)
0xffff58229ab0   496  sub csp, jssp, #0x10 (16)
0xffff58229ab4   500  stp x2, x3, [jssp, #-16]!
0xffff58229ab8   504  ldr x1, pc+248 (addr 0x0000ffff58229bb0)    ;; external reference (Runtime::NewArray)
0xffff58229abc   508  ldr x16, pc+252 (addr 0x0000ffff58229bb8)    ;; code: STUB, CEntryStub, minor: 4
0xffff58229ac0   512  br x16
0xffff58229ac4   516  580007df       constant pool begin (num_const = 62)    ;; constant pool
0xffff58229ac8   520  d63f03e0       constant
0xffff58229acc   524  d503201f       constant
0xffff58229ad0   528  582082a0       constant
0xffff58229ad4   532  0000ffff       constant
0xffff58229ad8   536  58208840       constant
0xffff58229adc   540  0000ffff       constant
0xffff58229ae0   544  58208e00       constant
0xffff58229ae4   548  0000ffff       constant
0xffff58229ae8   552  58209080       constant
0xffff58229aec   556  0000ffff       constant
0xffff58229af0   560  58209300       constant
0xffff58229af4   564  0000ffff       constant
0xffff58229af8   568  58209580       constant
0xffff58229afc   572  0000ffff       constant
0xffff58229b00   576  00eda820       constant
0xffff58229b04   580  00000000       constant
0xffff58229b08   584  58206060       constant
0xffff58229b0c   588  0000ffff       constant
0xffff58229b10   592  582069a0       constant
0xffff58229b14   596  0000ffff       constant
0xffff58229b18   600  58206e00       constant
0xffff58229b1c   604  0000ffff       constant
0xffff58229b20   608  58207280       constant
0xffff58229b24   612  0000ffff       constant
0xffff58229b28   616  58207480       constant
0xffff58229b2c   620  0000ffff       constant
0xffff58229b30   624  58207680       constant
0xffff58229b34   628  0000ffff       constant
0xffff58229b38   632  582078a0       constant
0xffff58229b3c   636  0000ffff       constant
0xffff58229b40   640  00eda820       constant
0xffff58229b44   644  00000000       constant
0xffff58229b48   648  58206060       constant
0xffff58229b4c   652  0000ffff       constant
0xffff58229b50   656  58209fe0       constant
0xffff58229b54   660  0000ffff       constant
0xffff58229b58   664  5820a560       constant
0xffff58229b5c   668  0000ffff       constant
0xffff58229b60   672  5820aae0       constant
0xffff58229b64   676  0000ffff       constant
0xffff58229b68   680  5820ad40       constant
0xffff58229b6c   684  0000ffff       constant
0xffff58229b70   688  5820afa0       constant
0xffff58229b74   692  0000ffff       constant
0xffff58229b78   696  5820b1e0       constant
0xffff58229b7c   700  0000ffff       constant
0xffff58229b80   704  00eda820       constant
0xffff58229b84   708  00000000       constant
0xffff58229b88   712  58206060       constant
0xffff58229b8c   716  0000ffff       constant
0xffff58229b90   720  58208b80       constant
0xffff58229b94   724  0000ffff       constant
0xffff58229b98   728  582085e0       constant
0xffff58229b9c   732  0000ffff       constant
0xffff58229ba0   736  58206be0       constant
0xffff58229ba4   740  0000ffff       constant
0xffff58229ba8   744  5820a300       constant
0xffff58229bac   748  0000ffff       constant
0xffff58229bb0   752  00de2850       constant
0xffff58229bb4   756  00000000       constant
0xffff58229bb8   760  58206060       constant
0xffff58229bbc   764  0000ffff       constant


RelocInfo (size = 42)
0xffff58229910  code target (STUB)  (0xffff582082a0)
0xffff58229920  code target (STUB)  (0xffff58208840)
0xffff58229930  code target (STUB)  (0xffff58208e00)
0xffff58229940  code target (STUB)  (0xffff58209080)
0xffff58229950  code target (STUB)  (0xffff58209300)
0xffff58229960  code target (STUB)  (0xffff58209580)
0xffff58229978  external reference (Runtime::Abort)  (0xeda820)
0xffff5822997c  code target (STUB)  (0xffff58206060)
0xffff58229988  code target (STUB)  (0xffff582069a0)
0xffff58229998  code target (STUB)  (0xffff58206e00)
0xffff582299a8  code target (STUB)  (0xffff58207280)
0xffff582299b8  code target (STUB)  (0xffff58207480)
0xffff582299c8  code target (STUB)  (0xffff58207680)
0xffff582299d8  code target (STUB)  (0xffff582078a0)
0xffff582299f0  external reference (Runtime::Abort)  (0xeda820)
0xffff582299f4  code target (STUB)  (0xffff58206060)
0xffff58229a00  code target (STUB)  (0xffff58209fe0)
0xffff58229a10  code target (STUB)  (0xffff5820a560)
0xffff58229a20  code target (STUB)  (0xffff5820aae0)
0xffff58229a30  code target (STUB)  (0xffff5820ad40)
0xffff58229a40  code target (STUB)  (0xffff5820afa0)
0xffff58229a50  code target (STUB)  (0xffff5820b1e0)
0xffff58229a68  external reference (Runtime::Abort)  (0xeda820)
0xffff58229a6c  code target (STUB)  (0xffff58206060)
0xffff58229a88  code target (STUB)  (0xffff58208b80)
0xffff58229a90  code target (STUB)  (0xffff582085e0)
0xffff58229a98  code target (STUB)  (0xffff58206be0)
0xffff58229aa0  code target (STUB)  (0xffff5820a300)
0xffff58229ab8  external reference (Runtime::NewArray)  (0xde2850)
0xffff58229abc  code target (STUB)  (0xffff58206060)
0xffff58229ac4  constant pool (size 252)


kind = STUB
major_key = StringToNumberStub
name = StringToNumberStub
compiler = unknown
Instructions (size = 80)
0xffff58229cc0     0  ldur x2, [x0, #7]
0xffff58229cc4     4  movz x16, #0x2
0xffff58229cc8     8  movk x16, #0xe000, lsl #16
0xffff58229ccc    12  tst x2, x16
0xffff58229cd0    16  b.ne #+0x10 (addr 0xffff58229ce0)
0xffff58229cd4    20  ubfx x0, x2, #2, #24
0xffff58229cd8    24  lsl x0, x0, #32
0xffff58229cdc    28  ret
0xffff58229ce0    32  sub csp, jssp, #0x8 (8)
0xffff58229ce4    36  str x0, [jssp, #-8]!
0xffff58229ce8    40  movz x0, #0x1
0xffff58229cec    44  ldr x1, pc+20 (addr 0x0000ffff58229d00)    ;; external reference (Runtime::StringToNumber)
0xffff58229cf0    48  ldr x16, pc+24 (addr 0x0000ffff58229d08)    ;; code: STUB, CEntryStub, minor: 4
0xffff58229cf4    52  br x16
0xffff58229cf8    56  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff58229cfc    60  d63f03e0       constant
0xffff58229d00    64  00e3bf28       constant
0xffff58229d04    68  00000000       constant
0xffff58229d08    72  58206060       constant
0xffff58229d0c    76  0000ffff       constant


RelocInfo (size = 9)
0xffff58229cec  external reference (Runtime::StringToNumber)  (0xe3bf28)
0xffff58229cf0  code target (STUB)  (0xffff58206060)
0xffff58229cf8  constant pool (size 24)


kind = STUB
major_key = NonNumberToNumberStub
name = NonNumberToNumberStub
compiler = unknown
Instructions (size = 96)
0xffff58229d80     0  ldur x1, [x0, #-1]
0xffff58229d84     4  ldrb w1, [x1, #11]
0xffff58229d88     8  cmp x1, #0x80 (128)
0xffff58229d8c    12  b.hs #+0xc (addr 0xffff58229d98)
0xffff58229d90    16  ldr x16, pc+56 (addr 0x0000ffff58229dc8)    ;; code: STUB, StringToNumberStub, minor: 0
0xffff58229d94    20  br x16
0xffff58229d98    24  cmp x1, #0x83 (131)
0xffff58229d9c    28  b.ne #+0xc (addr 0xffff58229da8)
0xffff58229da0    32  ldur x0, [x0, #15]
0xffff58229da4    36  ret
0xffff58229da8    40  sub csp, jssp, #0x8 (8)
0xffff58229dac    44  str x0, [jssp, #-8]!
0xffff58229db0    48  movz x0, #0x1
0xffff58229db4    52  ldr x1, pc+28 (addr 0x0000ffff58229dd0)    ;; external reference (Runtime::ToNumber)
0xffff58229db8    56  ldr x16, pc+32 (addr 0x0000ffff58229dd8)    ;; code: STUB, CEntryStub, minor: 4
0xffff58229dbc    60  br x16
0xffff58229dc0    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58229dc4    68  d63f03e0       constant
0xffff58229dc8    72  58229cc0       constant
0xffff58229dcc    76  0000ffff       constant
0xffff58229dd0    80  00e48d48       constant
0xffff58229dd4    84  00000000       constant
0xffff58229dd8    88  58206060       constant
0xffff58229ddc    92  0000ffff       constant


RelocInfo (size = 10)
0xffff58229d90  code target (STUB)  (0xffff58229cc0)
0xffff58229db4  external reference (Runtime::ToNumber)  (0xe48d48)
0xffff58229db8  code target (STUB)  (0xffff58206060)
0xffff58229dc0  constant pool (size 32)


kind = STUB
major_key = ToNumberStub
name = ToNumberStub
compiler = unknown
Instructions (size = 56)
0xffff58229e40     0  tbnz w0, #0, #+0x8 (addr 0xffff58229e48)
0xffff58229e44     4  ret
0xffff58229e48     8  ldur x1, [x0, #-1]
0xffff58229e4c    12  ldrb w1, [x1, #11]
0xffff58229e50    16  cmp x1, #0x81 (129)
0xffff58229e54    20  b.ne #+0x8 (addr 0xffff58229e5c)
0xffff58229e58    24  ret
0xffff58229e5c    28  ldr x16, pc+20 (addr 0x0000ffff58229e70)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff58229e60    32  br x16
0xffff58229e64    36  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58229e68    40  d63f03e0       constant
0xffff58229e6c    44  d503201f       constant
0xffff58229e70    48  58229d80       constant
0xffff58229e74    52  0000ffff       constant


RelocInfo (size = 7)
0xffff58229e5c  code target (STUB)  (0xffff58229d80)
0xffff58229e64  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff5822a3e0     0  sub csp, jssp, #0x10 (16)
0xffff5822a3e4     4  stp x2, x1, [jssp, #-16]!
0xffff5822a3e8     8  ldur x5, [x0, #7]
0xffff5822a3ec    12  ubfx x1, x5, #52, #11
0xffff5822a3f0    16  cmp x1, #0x453 (1107)
0xffff5822a3f4    20  csel x5, xzr, x5, ge
0xffff5822a3f8    24  b.ge #+0x1c (addr 0xffff5822a414)
0xffff5822a3fc    28  ubfx x2, x5, #0, #52
0xffff5822a400    32  orr x2, x2, #0x10000000000000
0xffff5822a404    36  tst x5, #0x8000000000000000
0xffff5822a408    40  cneg x2, x2, ne
0xffff5822a40c    44  sub x1, x1, #0x433 (1075)
0xffff5822a410    48  lsl x5, x2, x1
0xffff5822a414    52  ldp x2, x1, [jssp], #16
0xffff5822a418    56  ret


RelocInfo (size = 0)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = NumberToStringStub
compiler = crankshaft
Instructions (size = 477)
0xffff5822a480     0  movz x16, #0xa00000000
0xffff5822a484     4  sub csp, jssp, #0x10 (16)
0xffff5822a488     8  stp fp, lr, [jssp, #-16]!
0xffff5822a48c    12  mov fp, jssp
0xffff5822a490    16  sub csp, jssp, #0x28 (40)
0xffff5822a494    20  sub jssp, jssp, #0x28 (40)
0xffff5822a498    24  stur x16, [fp, #-8]
0xffff5822a49c    28  str d0, [jssp]
0xffff5822a4a0    32  str d1, [jssp, #8]
0xffff5822a4a4    36  stur x0, [fp, #-16]
0xffff5822a4a8    40  stur cp, [fp, #-24]
0xffff5822a4ac    44  mov x1, cp
0xffff5822a4b0    48  ldr x2, [x26, #368]
0xffff5822a4b4    52  ldur w3, [x2, #11]
0xffff5822a4b8    56  asr w3, w3, #1
0xffff5822a4bc    60  sub w3, w3, #0x1 (1)
0xffff5822a4c0    64  tbz w0, #0, #+0x60 (addr 0xffff5822a520)
0xffff5822a4c4    68  ldur x4, [x0, #-1]
0xffff5822a4c8    72  ldr x16, pc+296 (addr 0x0000ffff5822a5f0)    ;; object: 0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5822a4cc    76  cmp x4, x16
0xffff5822a4d0    80  b.eq #+0x8 (addr 0xffff5822a4d8)
0xffff5822a4d4    84  b #+0x13c (addr 0xffff5822a610)
0xffff5822a4d8    88  ldur w4, [x0, #7]
0xffff5822a4dc    92  ldur w5, [x0, #11]
0xffff5822a4e0    96  eor w4, w5, w4
0xffff5822a4e4   100  and w3, w4, w3
0xffff5822a4e8   104  lsl w3, w3, #1
0xffff5822a4ec   108  add x4, x2, #0xf (15)
0xffff5822a4f0   112  ldr x5, [x4, w3, sxtw #3]
0xffff5822a4f4   116  tbz w5, #0, #+0x4c (addr 0xffff5822a540)
0xffff5822a4f8   120  ldur x4, [x5, #-1]
0xffff5822a4fc   124  ldr x16, pc+252 (addr 0x0000ffff5822a5f8)    ;; object: 0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5822a500   128  cmp x4, x16
0xffff5822a504   132  b.ne #+0x3c (addr 0xffff5822a540)
0xffff5822a508   136  ldur d0, [x5, #7]
0xffff5822a50c   140  ldur d1, [x0, #7]
0xffff5822a510   144  fcmp d0, d1
0xffff5822a514   148  b.vs #+0x2c (addr 0xffff5822a540)
0xffff5822a518   152  b.eq #+0x4c (addr 0xffff5822a564)
0xffff5822a51c   156  b #+0x24 (addr 0xffff5822a540)
0xffff5822a520   160  tbnz w0, #0, #+0x68 (addr 0xffff5822a588)
0xffff5822a524   164  asr x5, x0, #32
0xffff5822a528   168  and w3, w5, w3
0xffff5822a52c   172  lsl w3, w3, #1
0xffff5822a530   176  add x4, x2, #0xf (15)
0xffff5822a534   180  ldr x5, [x4, w3, sxtw #3]
0xffff5822a538   184  cmp x0, x5
0xffff5822a53c   188  b.eq #+0x28 (addr 0xffff5822a564)
0xffff5822a540   192  sub csp, jssp, #0x8 (8)
0xffff5822a544   196  str x0, [jssp, #-8]!
0xffff5822a548   200  mov cp, x1
0xffff5822a54c   204  movz x0, #0x1
0xffff5822a550   208  movz x1, #0xce00
0xffff5822a554   212  movk x1, #0xe3, lsl #16
0xffff5822a558   216  ldr x16, pc+168 (addr 0x0000ffff5822a600)    ;; code: STUB, CEntryStub, minor: 4
0xffff5822a55c   220  blr x16
0xffff5822a560   224  b #+0x10 (addr 0xffff5822a570)
0xffff5822a564   228  add x0, x2, #0x17 (23)
0xffff5822a568   232  ldr x1, [x0, w3, sxtw #3]
0xffff5822a56c   236  mov x0, x1
0xffff5822a570   240  ldur cp, [fp, #-24]
0xffff5822a574   244  ldr d0, [jssp]
0xffff5822a578   248  ldr d1, [jssp, #8]
0xffff5822a57c   252  mov jssp, fp
0xffff5822a580   256  ldp fp, lr, [jssp], #16
0xffff5822a584   260  ret
0xffff5822a588   264  ldur x16, [x0, #-1]
0xffff5822a58c   268  ldr x17, [x26, #120]
0xffff5822a590   272  cmp x16, x17
0xffff5822a594   276  b.ne #+0x30 (addr 0xffff5822a5c4)
0xffff5822a598   280  ldur d30, [x0, #7]
0xffff5822a59c   284  fcvtzs x5, d30
0xffff5822a5a0   288  cmp x5, #0x1 (1)
0xffff5822a5a4   292  ccmn x5, #1, #nzcV, vc
0xffff5822a5a8   296  b.vc #+0x18 (addr 0xffff5822a5c0)
0xffff5822a5ac   300  sub csp, jssp, #0x8 (8)
0xffff5822a5b0   304  str lr, [jssp, #-8]!
0xffff5822a5b4   308  ldr x16, pc+84 (addr 0x0000ffff5822a608)    ;; code: STUB, DoubleToIStub, minor: 127296
0xffff5822a5b8   312  blr x16
0xffff5822a5bc   316  ldr lr, [jssp], #8
0xffff5822a5c0   320  b #+0x24 (addr 0xffff5822a5e4)
0xffff5822a5c4   324  ldp x5, x4, [x26, #64]
0xffff5822a5c8   328  cmp x0, x5
0xffff5822a5cc   332  cset x5, eq
0xffff5822a5d0   336  ccmp x0, x4, #nZcv, ne
0xffff5822a5d4   340  b.eq #+0x10 (addr 0xffff5822a5e4)
0xffff5822a5d8   344  ldr x16, [x26, #40]
0xffff5822a5dc   348  cmp x0, x16
0xffff5822a5e0   352  b.ne #+0x38 (addr 0xffff5822a618)
0xffff5822a5e4   356  b #-0xbc (addr 0xffff5822a528)
0xffff5822a5e8   360  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5822a5ec   364  d63f03e0       constant
0xffff5822a5f0   368  32b04411       constant
0xffff5822a5f4   372  00000000       constant
0xffff5822a5f8   376  32b04411       constant
0xffff5822a5fc   380  00000000       constant
0xffff5822a600   384  58206060       constant
0xffff5822a604   388  0000ffff       constant
0xffff5822a608   392  5822a3e0       constant
0xffff5822a60c   396  0000ffff       constant
0xffff5822a610   400  movz x16, #0x0
0xffff5822a614   404  bl #+0xc (addr 0xffff5822a620)
0xffff5822a618   408  movz x16, #0x10
0xffff5822a61c   412  bl #+0x4 (addr 0xffff5822a620)
0xffff5822a620   416  ldr d0, [jssp]
0xffff5822a624   420  ldr d1, [jssp, #8]
0xffff5822a628   424  ldr x17, pc+24 (addr 0x0000ffff5822a640)    ;; lazy deoptimization bailout 0
0xffff5822a62c   428  add x17, x17, x16
0xffff5822a630   432  br x17
0xffff5822a634   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5822a638   440  d63f03e0       constant
0xffff5822a63c   444  d503201f       constant
0xffff5822a640   448  58006000       constant
0xffff5822a644   452  0000ffff       constant


Safepoints (size = 21)
0xffff5822a560   224  0011000 (sp -> fp)       1

RelocInfo (size = 26)
0xffff5822a4c8  embedded object  (0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5822a4fc  embedded object  (0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5822a558  code target (STUB)  (0xffff58206060)
0xffff5822a5b4  code target (STUB)  (0xffff5822a3e0)
0xffff5822a5e8  constant pool (size 40)
0xffff5822a628  runtime entry
0xffff5822a634  constant pool (size 20)

--- End code ---
kind = STUB
major_key = NumberToStringStub
name = NumberToStringStub
compiler = crankshaft
Instructions (size = 477)
0xffff5822a480     0  movz x16, #0xa00000000
0xffff5822a484     4  sub csp, jssp, #0x10 (16)
0xffff5822a488     8  stp fp, lr, [jssp, #-16]!
0xffff5822a48c    12  mov fp, jssp
0xffff5822a490    16  sub csp, jssp, #0x28 (40)
0xffff5822a494    20  sub jssp, jssp, #0x28 (40)
0xffff5822a498    24  stur x16, [fp, #-8]
0xffff5822a49c    28  str d0, [jssp]
0xffff5822a4a0    32  str d1, [jssp, #8]
0xffff5822a4a4    36  stur x0, [fp, #-16]
0xffff5822a4a8    40  stur cp, [fp, #-24]
0xffff5822a4ac    44  mov x1, cp
0xffff5822a4b0    48  ldr x2, [x26, #368]
0xffff5822a4b4    52  ldur w3, [x2, #11]
0xffff5822a4b8    56  asr w3, w3, #1
0xffff5822a4bc    60  sub w3, w3, #0x1 (1)
0xffff5822a4c0    64  tbz w0, #0, #+0x60 (addr 0xffff5822a520)
0xffff5822a4c4    68  ldur x4, [x0, #-1]
0xffff5822a4c8    72  ldr x16, pc+296 (addr 0x0000ffff5822a5f0)    ;; object: 0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5822a4cc    76  cmp x4, x16
0xffff5822a4d0    80  b.eq #+0x8 (addr 0xffff5822a4d8)
0xffff5822a4d4    84  b #+0x13c (addr 0xffff5822a610)
0xffff5822a4d8    88  ldur w4, [x0, #7]
0xffff5822a4dc    92  ldur w5, [x0, #11]
0xffff5822a4e0    96  eor w4, w5, w4
0xffff5822a4e4   100  and w3, w4, w3
0xffff5822a4e8   104  lsl w3, w3, #1
0xffff5822a4ec   108  add x4, x2, #0xf (15)
0xffff5822a4f0   112  ldr x5, [x4, w3, sxtw #3]
0xffff5822a4f4   116  tbz w5, #0, #+0x4c (addr 0xffff5822a540)
0xffff5822a4f8   120  ldur x4, [x5, #-1]
0xffff5822a4fc   124  ldr x16, pc+252 (addr 0x0000ffff5822a5f8)    ;; object: 0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5822a500   128  cmp x4, x16
0xffff5822a504   132  b.ne #+0x3c (addr 0xffff5822a540)
0xffff5822a508   136  ldur d0, [x5, #7]
0xffff5822a50c   140  ldur d1, [x0, #7]
0xffff5822a510   144  fcmp d0, d1
0xffff5822a514   148  b.vs #+0x2c (addr 0xffff5822a540)
0xffff5822a518   152  b.eq #+0x4c (addr 0xffff5822a564)
0xffff5822a51c   156  b #+0x24 (addr 0xffff5822a540)
0xffff5822a520   160  tbnz w0, #0, #+0x68 (addr 0xffff5822a588)
0xffff5822a524   164  asr x5, x0, #32
0xffff5822a528   168  and w3, w5, w3
0xffff5822a52c   172  lsl w3, w3, #1
0xffff5822a530   176  add x4, x2, #0xf (15)
0xffff5822a534   180  ldr x5, [x4, w3, sxtw #3]
0xffff5822a538   184  cmp x0, x5
0xffff5822a53c   188  b.eq #+0x28 (addr 0xffff5822a564)
0xffff5822a540   192  sub csp, jssp, #0x8 (8)
0xffff5822a544   196  str x0, [jssp, #-8]!
0xffff5822a548   200  mov cp, x1
0xffff5822a54c   204  movz x0, #0x1
0xffff5822a550   208  movz x1, #0xce00
0xffff5822a554   212  movk x1, #0xe3, lsl #16
0xffff5822a558   216  ldr x16, pc+168 (addr 0x0000ffff5822a600)    ;; code: STUB, CEntryStub, minor: 4
0xffff5822a55c   220  blr x16
0xffff5822a560   224  b #+0x10 (addr 0xffff5822a570)
0xffff5822a564   228  add x0, x2, #0x17 (23)
0xffff5822a568   232  ldr x1, [x0, w3, sxtw #3]
0xffff5822a56c   236  mov x0, x1
0xffff5822a570   240  ldur cp, [fp, #-24]
0xffff5822a574   244  ldr d0, [jssp]
0xffff5822a578   248  ldr d1, [jssp, #8]
0xffff5822a57c   252  mov jssp, fp
0xffff5822a580   256  ldp fp, lr, [jssp], #16
0xffff5822a584   260  ret
0xffff5822a588   264  ldur x16, [x0, #-1]
0xffff5822a58c   268  ldr x17, [x26, #120]
0xffff5822a590   272  cmp x16, x17
0xffff5822a594   276  b.ne #+0x30 (addr 0xffff5822a5c4)
0xffff5822a598   280  ldur d30, [x0, #7]
0xffff5822a59c   284  fcvtzs x5, d30
0xffff5822a5a0   288  cmp x5, #0x1 (1)
0xffff5822a5a4   292  ccmn x5, #1, #nzcV, vc
0xffff5822a5a8   296  b.vc #+0x18 (addr 0xffff5822a5c0)
0xffff5822a5ac   300  sub csp, jssp, #0x8 (8)
0xffff5822a5b0   304  str lr, [jssp, #-8]!
0xffff5822a5b4   308  ldr x16, pc+84 (addr 0x0000ffff5822a608)    ;; code: STUB, DoubleToIStub, minor: 127296
0xffff5822a5b8   312  blr x16
0xffff5822a5bc   316  ldr lr, [jssp], #8
0xffff5822a5c0   320  b #+0x24 (addr 0xffff5822a5e4)
0xffff5822a5c4   324  ldp x5, x4, [x26, #64]
0xffff5822a5c8   328  cmp x0, x5
0xffff5822a5cc   332  cset x5, eq
0xffff5822a5d0   336  ccmp x0, x4, #nZcv, ne
0xffff5822a5d4   340  b.eq #+0x10 (addr 0xffff5822a5e4)
0xffff5822a5d8   344  ldr x16, [x26, #40]
0xffff5822a5dc   348  cmp x0, x16
0xffff5822a5e0   352  b.ne #+0x38 (addr 0xffff5822a618)
0xffff5822a5e4   356  b #-0xbc (addr 0xffff5822a528)
0xffff5822a5e8   360  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5822a5ec   364  d63f03e0       constant
0xffff5822a5f0   368  32b04411       constant
0xffff5822a5f4   372  00000000       constant
0xffff5822a5f8   376  32b04411       constant
0xffff5822a5fc   380  00000000       constant
0xffff5822a600   384  58206060       constant
0xffff5822a604   388  0000ffff       constant
0xffff5822a608   392  5822a3e0       constant
0xffff5822a60c   396  0000ffff       constant
0xffff5822a610   400  movz x16, #0x0
0xffff5822a614   404  bl #+0xc (addr 0xffff5822a620)
0xffff5822a618   408  movz x16, #0x10
0xffff5822a61c   412  bl #+0x4 (addr 0xffff5822a620)
0xffff5822a620   416  ldr d0, [jssp]
0xffff5822a624   420  ldr d1, [jssp, #8]
0xffff5822a628   424  ldr x17, pc+24 (addr 0x0000ffff5822a640)    ;; lazy deoptimization bailout 0
0xffff5822a62c   428  add x17, x17, x16
0xffff5822a630   432  br x17
0xffff5822a634   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5822a638   440  d63f03e0       constant
0xffff5822a63c   444  d503201f       constant
0xffff5822a640   448  58006000       constant
0xffff5822a644   452  0000ffff       constant


Safepoints (size = 21)
0xffff5822a560   224  0011000 (sp -> fp)       1

RelocInfo (size = 26)
0xffff5822a4c8  embedded object  (0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5822a4fc  embedded object  (0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5822a558  code target (STUB)  (0xffff58206060)
0xffff5822a5b4  code target (STUB)  (0xffff5822a3e0)
0xffff5822a5e8  constant pool (size 40)
0xffff5822a628  runtime entry
0xffff5822a634  constant pool (size 20)


kind = STUB
major_key = ToStringStub
name = ToStringStub
compiler = unknown
Instructions (size = 112)
0xffff5822a6c0     0  tbz w0, #0, #+0x20 (addr 0xffff5822a6e0)
0xffff5822a6c4     4  ldur x1, [x0, #-1]
0xffff5822a6c8     8  ldrb w1, [x1, #11]
0xffff5822a6cc    12  cmp x1, #0x80 (128)
0xffff5822a6d0    16  b.hs #+0x8 (addr 0xffff5822a6d8)
0xffff5822a6d4    20  ret
0xffff5822a6d8    24  cmp x1, #0x81 (129)
0xffff5822a6dc    28  b.ne #+0xc (addr 0xffff5822a6e8)
0xffff5822a6e0    32  ldr x16, pc+56 (addr 0x0000ffff5822a718)    ;; code: STUB, NumberToStringStub, minor: 0
0xffff5822a6e4    36  br x16
0xffff5822a6e8    40  cmp x1, #0x83 (131)
0xffff5822a6ec    44  b.ne #+0xc (addr 0xffff5822a6f8)
0xffff5822a6f0    48  ldur x0, [x0, #7]
0xffff5822a6f4    52  ret
0xffff5822a6f8    56  sub csp, jssp, #0x8 (8)
0xffff5822a6fc    60  str x0, [jssp, #-8]!
0xffff5822a700    64  movz x0, #0x1
0xffff5822a704    68  ldr x1, pc+28 (addr 0x0000ffff5822a720)    ;; external reference (Runtime::ToString)
0xffff5822a708    72  ldr x16, pc+32 (addr 0x0000ffff5822a728)    ;; code: STUB, CEntryStub, minor: 4
0xffff5822a70c    76  br x16
0xffff5822a710    80  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5822a714    84  d63f03e0       constant
0xffff5822a718    88  5822a480       constant
0xffff5822a71c    92  0000ffff       constant
0xffff5822a720    96  00e49508       constant
0xffff5822a724   100  00000000       constant
0xffff5822a728   104  58206060       constant
0xffff5822a72c   108  0000ffff       constant


RelocInfo (size = 10)
0xffff5822a6e0  code target (STUB)  (0xffff5822a480)
0xffff5822a704  external reference (Runtime::ToString)  (0xe49508)
0xffff5822a708  code target (STUB)  (0xffff58206060)
0xffff5822a710  constant pool (size 32)


--- Code ---
kind = BUILTIN
name = MathCeil
compiler = turbofan
Instructions (size = 338)
0xffff5822b4a0     0  sub jssp, jssp, #0x20 (32)
0xffff5822b4a4     4  sub csp, csp, #0x20 (32)
0xffff5822b4a8     8  stp x1, cp, [jssp]
0xffff5822b4ac    12  stp fp, lr, [jssp, #16]
0xffff5822b4b0    16  add fp, jssp, #0x10 (16)
0xffff5822b4b4    20  sub csp, jssp, #0x10 (16)
0xffff5822b4b8    24  sub jssp, jssp, #0x10 (16)
0xffff5822b4bc    28  ldr x0, [jssp, #48]
0xffff5822b4c0    32  and x1, x0, #0x1
0xffff5822b4c4    36  cmp x1, #0x0 (0)
0xffff5822b4c8    40  b.eq #+0x98 (addr 0xffff5822b560)
0xffff5822b4cc    44  ldur x1, [x0, #-1]
0xffff5822b4d0    48  ldr x2, [x26, #120]
0xffff5822b4d4    52  cmp x1, x2
0xffff5822b4d8    56  b.ne #+0x8c (addr 0xffff5822b564)
0xffff5822b4dc    60  ldur d0, [x0, #7]
0xffff5822b4e0    64  frintp d0, d0
0xffff5822b4e4    68  fcvtzs w0, d0
0xffff5822b4e8    72  scvtf d1, w0
0xffff5822b4ec    76  fcmp d0, d1
0xffff5822b4f0    80  b.ne #+0x24 (addr 0xffff5822b514)
0xffff5822b4f4    84  fcmp d0, #0.0
0xffff5822b4f8    88  b.ne #+0x14 (addr 0xffff5822b50c)
0xffff5822b4fc    92  fmov x1, d0
0xffff5822b500    96  lsr x1, x1, #32
0xffff5822b504   100  cmp w1, #0x0 (0)
0xffff5822b508   104  b.lt #+0xc (addr 0xffff5822b514)
0xffff5822b50c   108  lsl x0, x0, #32
0xffff5822b510   112  b #+0x40 (addr 0xffff5822b550)
0xffff5822b514   116  movz x0, #0x92c0
0xffff5822b518   120  movk x0, #0x16e7, lsl #16
0xffff5822b51c   124  ldr x1, [x0]
0xffff5822b520   128  movz x2, #0x92c8
0xffff5822b524   132  movk x2, #0x16e7, lsl #16
0xffff5822b528   136  ldr x2, [x2]
0xffff5822b52c   140  sub x2, x2, x1
0xffff5822b530   144  cmp x2, #0x10 (16)
0xffff5822b534   148  b.lt #+0x40 (addr 0xffff5822b574)
0xffff5822b538   152  add x2, x1, #0x10 (16)
0xffff5822b53c   156  str x2, [x0]
0xffff5822b540   160  add x0, x1, #0x1 (1)
0xffff5822b544   164  ldr x1, [x26, #120]
0xffff5822b548   168  stur x1, [x0, #-1]
0xffff5822b54c   172  stur d0, [x0, #7]
0xffff5822b550   176  mov jssp, fp
0xffff5822b554   180  ldp fp, lr, [jssp], #16
0xffff5822b558   184  add jssp, jssp, #0x10 (16)
0xffff5822b55c   188  ret
0xffff5822b560   192  b #-0x10 (addr 0xffff5822b550)
0xffff5822b564   196  ldr cp, [jssp, #24]
0xffff5822b568   200  ldr x16, pc+88 (addr 0x0000ffff5822b5c0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff5822b56c   204  blr x16
0xffff5822b570   208  b #-0xb0 (addr 0xffff5822b4c0)
0xffff5822b574   212  movz x0, #0x0
0xffff5822b578   216  lsl x0, x0, #32
0xffff5822b57c   220  movz x1, #0x10
0xffff5822b580   224  lsl x1, x1, #32
0xffff5822b584   228  sub csp, jssp, #0x10 (16)
0xffff5822b588   232  sub jssp, jssp, #0x10 (16)
0xffff5822b58c   236  str x1, [jssp, #8]
0xffff5822b590   240  str x0, [jssp]
0xffff5822b594   244  str d0, [jssp, #24]
0xffff5822b598   248  movz x1, #0x5b88
0xffff5822b59c   252  movk x1, #0xe2, lsl #16
0xffff5822b5a0   256  movz x0, #0x2
0xffff5822b5a4   260  movz cp, #0x0
0xffff5822b5a8   264  ldr x16, pc+32 (addr 0x0000ffff5822b5c8)    ;; code: STUB, CEntryStub, minor: 4
0xffff5822b5ac   268  blr x16
0xffff5822b5b0   272  ldr d0, [jssp, #8]
0xffff5822b5b4   276  b #-0x70 (addr 0xffff5822b544)
0xffff5822b5b8   280  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5822b5bc   284  d63f03e0       constant
0xffff5822b5c0   288  58229d80       constant
0xffff5822b5c4   292  0000ffff       constant
0xffff5822b5c8   296  58206060       constant
0xffff5822b5cc   300  0000ffff       constant


Safepoints (size = 34)
0xffff5822b570   208  000000 (sp -> fp)  <none>
0xffff5822b5b0   272  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff5822b568  code target (STUB)  (0xffff58229d80)
0xffff5822b5a8  code target (STUB)  (0xffff58206060)
0xffff5822b5b8  constant pool (size 24)

--- End code ---
kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff5822b660     0  sub csp, jssp, #0x10 (16)
0xffff5822b664     4  stp x2, x1, [jssp, #-16]!
0xffff5822b668     8  ldr x0, [jssp, #16]
0xffff5822b66c    12  ubfx x1, x0, #52, #11
0xffff5822b670    16  cmp x1, #0x453 (1107)
0xffff5822b674    20  csel x0, xzr, x0, ge
0xffff5822b678    24  b.ge #+0x1c (addr 0xffff5822b694)
0xffff5822b67c    28  ubfx x2, x0, #0, #52
0xffff5822b680    32  orr x2, x2, #0x10000000000000
0xffff5822b684    36  tst x0, #0x8000000000000000
0xffff5822b688    40  cneg x2, x2, ne
0xffff5822b68c    44  sub x1, x1, #0x433 (1075)
0xffff5822b690    48  lsl x0, x2, x1
0xffff5822b694    52  ldp x2, x1, [jssp], #16
0xffff5822b698    56  ret


RelocInfo (size = 0)


--- Code ---
kind = BUILTIN
name = MathClz32
compiler = turbofan
Instructions (size = 205)
0xffff5822b700     0  sub jssp, jssp, #0x20 (32)
0xffff5822b704     4  sub csp, csp, #0x20 (32)
0xffff5822b708     8  stp x1, cp, [jssp]
0xffff5822b70c    12  stp fp, lr, [jssp, #16]
0xffff5822b710    16  add fp, jssp, #0x10 (16)
0xffff5822b714    20  ldr x0, [jssp, #32]
0xffff5822b718    24  nop
0xffff5822b71c    28  nop
0xffff5822b720    32  and x1, x0, #0x1
0xffff5822b724    36  cmp x1, #0x0 (0)
0xffff5822b728    40  b.eq #+0x44 (addr 0xffff5822b76c)
0xffff5822b72c    44  ldur x1, [x0, #-1]
0xffff5822b730    48  ldr x2, [x26, #120]
0xffff5822b734    52  cmp x1, x2
0xffff5822b738    56  b.ne #+0x50 (addr 0xffff5822b788)
0xffff5822b73c    60  ldur d0, [x0, #7]
0xffff5822b740    64  fcvtzs x0, d0
0xffff5822b744    68  cmp x0, #0x1 (1)
0xffff5822b748    72  ccmn x0, #1, #nzcV, vc
0xffff5822b74c    76  b.vc #+0x1c (addr 0xffff5822b768)
0xffff5822b750    80  sub csp, jssp, #0x10 (16)
0xffff5822b754    84  str d0, [jssp, #-16]!
0xffff5822b758    88  str lr, [jssp, #8]
0xffff5822b75c    92  ldr x16, pc+76 (addr 0x0000ffff5822b7a8)    ;; code: STUB, DoubleToIStub, minor: 69660
0xffff5822b760    96  blr x16
0xffff5822b764   100  ldp xzr, lr, [jssp], #16
0xffff5822b768   104  b #+0x8 (addr 0xffff5822b770)
0xffff5822b76c   108  lsr x0, x0, #32
0xffff5822b770   112  clz w0, w0
0xffff5822b774   116  lsl x0, x0, #32
0xffff5822b778   120  mov jssp, fp
0xffff5822b77c   124  ldp fp, lr, [jssp], #16
0xffff5822b780   128  add jssp, jssp, #0x10 (16)
0xffff5822b784   132  ret
0xffff5822b788   136  mov x1, cp
0xffff5822b78c   140  str cp, [jssp, #8]
0xffff5822b790   144  ldr x16, pc+32 (addr 0x0000ffff5822b7b0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff5822b794   148  blr x16
0xffff5822b798   152  ldr cp, [jssp, #8]
0xffff5822b79c   156  b #-0x7c (addr 0xffff5822b720)
0xffff5822b7a0   160  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5822b7a4   164  d63f03e0       constant
0xffff5822b7a8   168  5822b660       constant
0xffff5822b7ac   172  0000ffff       constant
0xffff5822b7b0   176  58229d80       constant
0xffff5822b7b4   180  0000ffff       constant


Safepoints (size = 21)
0xffff5822b798   152  0000 (sp -> fp)  <none>

RelocInfo (size = 10)
0xffff5822b75c  code target (STUB)  (0xffff5822b660)
0xffff5822b790  code target (STUB)  (0xffff58229d80)
0xffff5822b7a0  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathFloor
compiler = turbofan
Instructions (size = 338)
0xffff5822b840     0  sub jssp, jssp, #0x20 (32)
0xffff5822b844     4  sub csp, csp, #0x20 (32)
0xffff5822b848     8  stp x1, cp, [jssp]
0xffff5822b84c    12  stp fp, lr, [jssp, #16]
0xffff5822b850    16  add fp, jssp, #0x10 (16)
0xffff5822b854    20  sub csp, jssp, #0x10 (16)
0xffff5822b858    24  sub jssp, jssp, #0x10 (16)
0xffff5822b85c    28  ldr x0, [jssp, #48]
0xffff5822b860    32  and x1, x0, #0x1
0xffff5822b864    36  cmp x1, #0x0 (0)
0xffff5822b868    40  b.eq #+0x98 (addr 0xffff5822b900)
0xffff5822b86c    44  ldur x1, [x0, #-1]
0xffff5822b870    48  ldr x2, [x26, #120]
0xffff5822b874    52  cmp x1, x2
0xffff5822b878    56  b.ne #+0x8c (addr 0xffff5822b904)
0xffff5822b87c    60  ldur d0, [x0, #7]
0xffff5822b880    64  frintm d0, d0
0xffff5822b884    68  fcvtzs w0, d0
0xffff5822b888    72  scvtf d1, w0
0xffff5822b88c    76  fcmp d0, d1
0xffff5822b890    80  b.ne #+0x24 (addr 0xffff5822b8b4)
0xffff5822b894    84  fcmp d0, #0.0
0xffff5822b898    88  b.ne #+0x14 (addr 0xffff5822b8ac)
0xffff5822b89c    92  fmov x1, d0
0xffff5822b8a0    96  lsr x1, x1, #32
0xffff5822b8a4   100  cmp w1, #0x0 (0)
0xffff5822b8a8   104  b.lt #+0xc (addr 0xffff5822b8b4)
0xffff5822b8ac   108  lsl x0, x0, #32
0xffff5822b8b0   112  b #+0x40 (addr 0xffff5822b8f0)
0xffff5822b8b4   116  movz x0, #0x92c0
0xffff5822b8b8   120  movk x0, #0x16e7, lsl #16
0xffff5822b8bc   124  ldr x1, [x0]
0xffff5822b8c0   128  movz x2, #0x92c8
0xffff5822b8c4   132  movk x2, #0x16e7, lsl #16
0xffff5822b8c8   136  ldr x2, [x2]
0xffff5822b8cc   140  sub x2, x2, x1
0xffff5822b8d0   144  cmp x2, #0x10 (16)
0xffff5822b8d4   148  b.lt #+0x40 (addr 0xffff5822b914)
0xffff5822b8d8   152  add x2, x1, #0x10 (16)
0xffff5822b8dc   156  str x2, [x0]
0xffff5822b8e0   160  add x0, x1, #0x1 (1)
0xffff5822b8e4   164  ldr x1, [x26, #120]
0xffff5822b8e8   168  stur x1, [x0, #-1]
0xffff5822b8ec   172  stur d0, [x0, #7]
0xffff5822b8f0   176  mov jssp, fp
0xffff5822b8f4   180  ldp fp, lr, [jssp], #16
0xffff5822b8f8   184  add jssp, jssp, #0x10 (16)
0xffff5822b8fc   188  ret
0xffff5822b900   192  b #-0x10 (addr 0xffff5822b8f0)
0xffff5822b904   196  ldr cp, [jssp, #24]
0xffff5822b908   200  ldr x16, pc+88 (addr 0x0000ffff5822b960)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff5822b90c   204  blr x16
0xffff5822b910   208  b #-0xb0 (addr 0xffff5822b860)
0xffff5822b914   212  movz x0, #0x0
0xffff5822b918   216  lsl x0, x0, #32
0xffff5822b91c   220  movz x1, #0x10
0xffff5822b920   224  lsl x1, x1, #32
0xffff5822b924   228  sub csp, jssp, #0x10 (16)
0xffff5822b928   232  sub jssp, jssp, #0x10 (16)
0xffff5822b92c   236  str x1, [jssp, #8]
0xffff5822b930   240  str x0, [jssp]
0xffff5822b934   244  str d0, [jssp, #24]
0xffff5822b938   248  movz x1, #0x5b88
0xffff5822b93c   252  movk x1, #0xe2, lsl #16
0xffff5822b940   256  movz x0, #0x2
0xffff5822b944   260  movz cp, #0x0
0xffff5822b948   264  ldr x16, pc+32 (addr 0x0000ffff5822b968)    ;; code: STUB, CEntryStub, minor: 4
0xffff5822b94c   268  blr x16
0xffff5822b950   272  ldr d0, [jssp, #8]
0xffff5822b954   276  b #-0x70 (addr 0xffff5822b8e4)
0xffff5822b958   280  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5822b95c   284  d63f03e0       constant
0xffff5822b960   288  58229d80       constant
0xffff5822b964   292  0000ffff       constant
0xffff5822b968   296  58206060       constant
0xffff5822b96c   300  0000ffff       constant


Safepoints (size = 34)
0xffff5822b910   208  000000 (sp -> fp)  <none>
0xffff5822b950   272  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff5822b908  code target (STUB)  (0xffff58229d80)
0xffff5822b948  code target (STUB)  (0xffff58206060)
0xffff5822b958  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathRound
compiler = turbofan
Instructions (size = 370)
0xffff5822ba00     0  sub jssp, jssp, #0x20 (32)
0xffff5822ba04     4  sub csp, csp, #0x20 (32)
0xffff5822ba08     8  stp x1, cp, [jssp]
0xffff5822ba0c    12  stp fp, lr, [jssp, #16]
0xffff5822ba10    16  add fp, jssp, #0x10 (16)
0xffff5822ba14    20  sub csp, jssp, #0x10 (16)
0xffff5822ba18    24  sub jssp, jssp, #0x10 (16)
0xffff5822ba1c    28  ldr x0, [jssp, #48]
0xffff5822ba20    32  and x1, x0, #0x1
0xffff5822ba24    36  cmp x1, #0x0 (0)
0xffff5822ba28    40  b.eq #+0xb4 (addr 0xffff5822badc)
0xffff5822ba2c    44  ldur x1, [x0, #-1]
0xffff5822ba30    48  ldr x2, [x26, #120]
0xffff5822ba34    52  cmp x1, x2
0xffff5822ba38    56  b.ne #+0xa8 (addr 0xffff5822bae0)
0xffff5822ba3c    60  ldur d0, [x0, #7]
0xffff5822ba40    64  frintp d1, d0
0xffff5822ba44    68  fmov d2, #0x60 (0.5000)
0xffff5822ba48    72  fsub d2, d1, d2
0xffff5822ba4c    76  fcmp d2, d0
0xffff5822ba50    80  b.ls #+0x10 (addr 0xffff5822ba60)
0xffff5822ba54    84  fmov d0, #0x70 (1.0000)
0xffff5822ba58    88  fsub d0, d1, d0
0xffff5822ba5c    92  fmov d1, d0
0xffff5822ba60    96  fcvtzs w0, d1
0xffff5822ba64   100  scvtf d0, w0
0xffff5822ba68   104  fcmp d1, d0
0xffff5822ba6c   108  b.ne #+0x24 (addr 0xffff5822ba90)
0xffff5822ba70   112  fcmp d1, #0.0
0xffff5822ba74   116  b.ne #+0x14 (addr 0xffff5822ba88)
0xffff5822ba78   120  fmov x1, d1
0xffff5822ba7c   124  lsr x1, x1, #32
0xffff5822ba80   128  cmp w1, #0x0 (0)
0xffff5822ba84   132  b.lt #+0xc (addr 0xffff5822ba90)
0xffff5822ba88   136  lsl x0, x0, #32
0xffff5822ba8c   140  b #+0x40 (addr 0xffff5822bacc)
0xffff5822ba90   144  movz x0, #0x92c0
0xffff5822ba94   148  movk x0, #0x16e7, lsl #16
0xffff5822ba98   152  ldr x1, [x0]
0xffff5822ba9c   156  movz x2, #0x92c8
0xffff5822baa0   160  movk x2, #0x16e7, lsl #16
0xffff5822baa4   164  ldr x2, [x2]
0xffff5822baa8   168  sub x2, x2, x1
0xffff5822baac   172  cmp x2, #0x10 (16)
0xffff5822bab0   176  b.lt #+0x40 (addr 0xffff5822baf0)
0xffff5822bab4   180  add x2, x1, #0x10 (16)
0xffff5822bab8   184  str x2, [x0]
0xffff5822babc   188  add x0, x1, #0x1 (1)
0xffff5822bac0   192  ldr x1, [x26, #120]
0xffff5822bac4   196  stur x1, [x0, #-1]
0xffff5822bac8   200  stur d1, [x0, #7]
0xffff5822bacc   204  mov jssp, fp
0xffff5822bad0   208  ldp fp, lr, [jssp], #16
0xffff5822bad4   212  add jssp, jssp, #0x10 (16)
0xffff5822bad8   216  ret
0xffff5822badc   220  b #-0x10 (addr 0xffff5822bacc)
0xffff5822bae0   224  ldr cp, [jssp, #24]
0xffff5822bae4   228  ldr x16, pc+92 (addr 0x0000ffff5822bb40)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff5822bae8   232  blr x16
0xffff5822baec   236  b #-0xcc (addr 0xffff5822ba20)
0xffff5822baf0   240  movz x0, #0x0
0xffff5822baf4   244  lsl x0, x0, #32
0xffff5822baf8   248  movz x1, #0x10
0xffff5822bafc   252  lsl x1, x1, #32
0xffff5822bb00   256  sub csp, jssp, #0x10 (16)
0xffff5822bb04   260  sub jssp, jssp, #0x10 (16)
0xffff5822bb08   264  str x1, [jssp, #8]
0xffff5822bb0c   268  str x0, [jssp]
0xffff5822bb10   272  fmov d0, d1
0xffff5822bb14   276  str d1, [jssp, #24]
0xffff5822bb18   280  movz x1, #0x5b88
0xffff5822bb1c   284  movk x1, #0xe2, lsl #16
0xffff5822bb20   288  movz x0, #0x2
0xffff5822bb24   292  movz cp, #0x0
0xffff5822bb28   296  ldr x16, pc+32 (addr 0x0000ffff5822bb48)    ;; code: STUB, CEntryStub, minor: 4
0xffff5822bb2c   300  blr x16
0xffff5822bb30   304  ldr d1, [jssp, #8]
0xffff5822bb34   308  b #-0x74 (addr 0xffff5822bac0)
0xffff5822bb38   312  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5822bb3c   316  d63f03e0       constant
0xffff5822bb40   320  58229d80       constant
0xffff5822bb44   324  0000ffff       constant
0xffff5822bb48   328  58206060       constant
0xffff5822bb4c   332  0000ffff       constant


Safepoints (size = 34)
0xffff5822baec   236  000000 (sp -> fp)  <none>
0xffff5822bb30   304  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff5822bae4  code target (STUB)  (0xffff58229d80)
0xffff5822bb28  code target (STUB)  (0xffff58206060)
0xffff5822bb38  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathSqrt
compiler = turbofan
Instructions (size = 346)
0xffff5822bbe0     0  sub jssp, jssp, #0x20 (32)
0xffff5822bbe4     4  sub csp, csp, #0x20 (32)
0xffff5822bbe8     8  stp x1, cp, [jssp]
0xffff5822bbec    12  stp fp, lr, [jssp, #16]
0xffff5822bbf0    16  add fp, jssp, #0x10 (16)
0xffff5822bbf4    20  sub csp, jssp, #0x10 (16)
0xffff5822bbf8    24  sub jssp, jssp, #0x10 (16)
0xffff5822bbfc    28  ldr x0, [jssp, #48]
0xffff5822bc00    32  and x1, x0, #0x1
0xffff5822bc04    36  cmp x1, #0x0 (0)
0xffff5822bc08    40  b.eq #+0x1c (addr 0xffff5822bc24)
0xffff5822bc0c    44  ldur x1, [x0, #-1]
0xffff5822bc10    48  ldr x2, [x26, #120]
0xffff5822bc14    52  cmp x1, x2
0xffff5822bc18    56  b.ne #+0x94 (addr 0xffff5822bcac)
0xffff5822bc1c    60  ldur d0, [x0, #7]
0xffff5822bc20    64  b #+0xc (addr 0xffff5822bc2c)
0xffff5822bc24    68  asr x0, x0, #32
0xffff5822bc28    72  scvtf d0, w0
0xffff5822bc2c    76  fsqrt d0, d0
0xffff5822bc30    80  fcvtzs w0, d0
0xffff5822bc34    84  scvtf d1, w0
0xffff5822bc38    88  fcmp d0, d1
0xffff5822bc3c    92  b.ne #+0x24 (addr 0xffff5822bc60)
0xffff5822bc40    96  fcmp d0, #0.0
0xffff5822bc44   100  b.ne #+0x14 (addr 0xffff5822bc58)
0xffff5822bc48   104  fmov x1, d0
0xffff5822bc4c   108  lsr x1, x1, #32
0xffff5822bc50   112  cmp w1, #0x0 (0)
0xffff5822bc54   116  b.lt #+0xc (addr 0xffff5822bc60)
0xffff5822bc58   120  lsl x0, x0, #32
0xffff5822bc5c   124  b #+0x40 (addr 0xffff5822bc9c)
0xffff5822bc60   128  movz x0, #0x92c0
0xffff5822bc64   132  movk x0, #0x16e7, lsl #16
0xffff5822bc68   136  ldr x1, [x0]
0xffff5822bc6c   140  movz x2, #0x92c8
0xffff5822bc70   144  movk x2, #0x16e7, lsl #16
0xffff5822bc74   148  ldr x2, [x2]
0xffff5822bc78   152  sub x2, x2, x1
0xffff5822bc7c   156  cmp x2, #0x10 (16)
0xffff5822bc80   160  b.lt #+0x3c (addr 0xffff5822bcbc)
0xffff5822bc84   164  add x2, x1, #0x10 (16)
0xffff5822bc88   168  str x2, [x0]
0xffff5822bc8c   172  add x0, x1, #0x1 (1)
0xffff5822bc90   176  ldr x1, [x26, #120]
0xffff5822bc94   180  stur x1, [x0, #-1]
0xffff5822bc98   184  stur d0, [x0, #7]
0xffff5822bc9c   188  mov jssp, fp
0xffff5822bca0   192  ldp fp, lr, [jssp], #16
0xffff5822bca4   196  add jssp, jssp, #0x10 (16)
0xffff5822bca8   200  ret
0xffff5822bcac   204  ldr cp, [jssp, #24]
0xffff5822bcb0   208  ldr x16, pc+88 (addr 0x0000ffff5822bd08)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff5822bcb4   212  blr x16
0xffff5822bcb8   216  b #-0xb8 (addr 0xffff5822bc00)
0xffff5822bcbc   220  movz x0, #0x0
0xffff5822bcc0   224  lsl x0, x0, #32
0xffff5822bcc4   228  movz x1, #0x10
0xffff5822bcc8   232  lsl x1, x1, #32
0xffff5822bccc   236  sub csp, jssp, #0x10 (16)
0xffff5822bcd0   240  sub jssp, jssp, #0x10 (16)
0xffff5822bcd4   244  str x1, [jssp, #8]
0xffff5822bcd8   248  str x0, [jssp]
0xffff5822bcdc   252  str d0, [jssp, #24]
0xffff5822bce0   256  movz x1, #0x5b88
0xffff5822bce4   260  movk x1, #0xe2, lsl #16
0xffff5822bce8   264  movz x0, #0x2
0xffff5822bcec   268  movz cp, #0x0
0xffff5822bcf0   272  ldr x16, pc+32 (addr 0x0000ffff5822bd10)    ;; code: STUB, CEntryStub, minor: 4
0xffff5822bcf4   276  blr x16
0xffff5822bcf8   280  ldr d0, [jssp, #8]
0xffff5822bcfc   284  b #-0x6c (addr 0xffff5822bc90)
0xffff5822bd00   288  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5822bd04   292  d63f03e0       constant
0xffff5822bd08   296  58229d80       constant
0xffff5822bd0c   300  0000ffff       constant
0xffff5822bd10   304  58206060       constant
0xffff5822bd14   308  0000ffff       constant


Safepoints (size = 34)
0xffff5822bcb8   216  000000 (sp -> fp)  <none>
0xffff5822bcf8   280  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff5822bcb0  code target (STUB)  (0xffff58229d80)
0xffff5822bcf0  code target (STUB)  (0xffff58206060)
0xffff5822bd00  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathTrunc
compiler = turbofan
Instructions (size = 338)
0xffff5822bda0     0  sub jssp, jssp, #0x20 (32)
0xffff5822bda4     4  sub csp, csp, #0x20 (32)
0xffff5822bda8     8  stp x1, cp, [jssp]
0xffff5822bdac    12  stp fp, lr, [jssp, #16]
0xffff5822bdb0    16  add fp, jssp, #0x10 (16)
0xffff5822bdb4    20  sub csp, jssp, #0x10 (16)
0xffff5822bdb8    24  sub jssp, jssp, #0x10 (16)
0xffff5822bdbc    28  ldr x0, [jssp, #48]
0xffff5822bdc0    32  and x1, x0, #0x1
0xffff5822bdc4    36  cmp x1, #0x0 (0)
0xffff5822bdc8    40  b.eq #+0x98 (addr 0xffff5822be60)
0xffff5822bdcc    44  ldur x1, [x0, #-1]
0xffff5822bdd0    48  ldr x2, [x26, #120]
0xffff5822bdd4    52  cmp x1, x2
0xffff5822bdd8    56  b.ne #+0x8c (addr 0xffff5822be64)
0xffff5822bddc    60  ldur d0, [x0, #7]
0xffff5822bde0    64  frintz d0, d0
0xffff5822bde4    68  fcvtzs w0, d0
0xffff5822bde8    72  scvtf d1, w0
0xffff5822bdec    76  fcmp d0, d1
0xffff5822bdf0    80  b.ne #+0x24 (addr 0xffff5822be14)
0xffff5822bdf4    84  fcmp d0, #0.0
0xffff5822bdf8    88  b.ne #+0x14 (addr 0xffff5822be0c)
0xffff5822bdfc    92  fmov x1, d0
0xffff5822be00    96  lsr x1, x1, #32
0xffff5822be04   100  cmp w1, #0x0 (0)
0xffff5822be08   104  b.lt #+0xc (addr 0xffff5822be14)
0xffff5822be0c   108  lsl x0, x0, #32
0xffff5822be10   112  b #+0x40 (addr 0xffff5822be50)
0xffff5822be14   116  movz x0, #0x92c0
0xffff5822be18   120  movk x0, #0x16e7, lsl #16
0xffff5822be1c   124  ldr x1, [x0]
0xffff5822be20   128  movz x2, #0x92c8
0xffff5822be24   132  movk x2, #0x16e7, lsl #16
0xffff5822be28   136  ldr x2, [x2]
0xffff5822be2c   140  sub x2, x2, x1
0xffff5822be30   144  cmp x2, #0x10 (16)
0xffff5822be34   148  b.lt #+0x40 (addr 0xffff5822be74)
0xffff5822be38   152  add x2, x1, #0x10 (16)
0xffff5822be3c   156  str x2, [x0]
0xffff5822be40   160  add x0, x1, #0x1 (1)
0xffff5822be44   164  ldr x1, [x26, #120]
0xffff5822be48   168  stur x1, [x0, #-1]
0xffff5822be4c   172  stur d0, [x0, #7]
0xffff5822be50   176  mov jssp, fp
0xffff5822be54   180  ldp fp, lr, [jssp], #16
0xffff5822be58   184  add jssp, jssp, #0x10 (16)
0xffff5822be5c   188  ret
0xffff5822be60   192  b #-0x10 (addr 0xffff5822be50)
0xffff5822be64   196  ldr cp, [jssp, #24]
0xffff5822be68   200  ldr x16, pc+88 (addr 0x0000ffff5822bec0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff5822be6c   204  blr x16
0xffff5822be70   208  b #-0xb0 (addr 0xffff5822bdc0)
0xffff5822be74   212  movz x0, #0x0
0xffff5822be78   216  lsl x0, x0, #32
0xffff5822be7c   220  movz x1, #0x10
0xffff5822be80   224  lsl x1, x1, #32
0xffff5822be84   228  sub csp, jssp, #0x10 (16)
0xffff5822be88   232  sub jssp, jssp, #0x10 (16)
0xffff5822be8c   236  str x1, [jssp, #8]
0xffff5822be90   240  str x0, [jssp]
0xffff5822be94   244  str d0, [jssp, #24]
0xffff5822be98   248  movz x1, #0x5b88
0xffff5822be9c   252  movk x1, #0xe2, lsl #16
0xffff5822bea0   256  movz x0, #0x2
0xffff5822bea4   260  movz cp, #0x0
0xffff5822bea8   264  ldr x16, pc+32 (addr 0x0000ffff5822bec8)    ;; code: STUB, CEntryStub, minor: 4
0xffff5822beac   268  blr x16
0xffff5822beb0   272  ldr d0, [jssp, #8]
0xffff5822beb4   276  b #-0x70 (addr 0xffff5822be44)
0xffff5822beb8   280  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5822bebc   284  d63f03e0       constant
0xffff5822bec0   288  58229d80       constant
0xffff5822bec4   292  0000ffff       constant
0xffff5822bec8   296  58206060       constant
0xffff5822becc   300  0000ffff       constant


Safepoints (size = 34)
0xffff5822be70   208  000000 (sp -> fp)  <none>
0xffff5822beb0   272  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff5822be68  code target (STUB)  (0xffff58229d80)
0xffff5822bea8  code target (STUB)  (0xffff58206060)
0xffff5822beb8  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = ObjectHasOwnProperty
compiler = turbofan
Instructions (size = 421)
0xffff5822bf60     0  sub jssp, jssp, #0x20 (32)
0xffff5822bf64     4  sub csp, csp, #0x20 (32)
0xffff5822bf68     8  stp x1, cp, [jssp]
0xffff5822bf6c    12  stp fp, lr, [jssp, #16]
0xffff5822bf70    16  add fp, jssp, #0x10 (16)
0xffff5822bf74    20  ldr x0, [jssp, #40]
0xffff5822bf78    24  and x1, x0, #0x1
0xffff5822bf7c    28  cmp x1, #0x0 (0)
0xffff5822bf80    32  b.eq #+0x154 (addr 0xffff5822c0d4)
0xffff5822bf84    36  ldur x1, [x0, #-1]
0xffff5822bf88    40  ldrb w2, [x1, #11]
0xffff5822bf8c    44  ldr x3, [jssp, #32]
0xffff5822bf90    48  and x4, x3, #0x1
0xffff5822bf94    52  cmp x4, #0x0 (0)
0xffff5822bf98    56  b.eq #+0x94 (addr 0xffff5822c02c)
0xffff5822bf9c    60  ldur x4, [x3, #-1]
0xffff5822bfa0    64  ldrb w4, [x4, #11]
0xffff5822bfa4    68  cmp w4, #0x80 (128)
0xffff5822bfa8    72  b.eq #+0x1c (addr 0xffff5822bfc4)
0xffff5822bfac    76  tst x4, #0xc0
0xffff5822bfb0    80  b.ne #+0xf8 (addr 0xffff5822c0a8)
0xffff5822bfb4    84  ldur w4, [x3, #7]
0xffff5822bfb8    88  tbnz w4, #1, #+0xc (addr 0xffff5822bfc4)
0xffff5822bfbc    92  ubfx w4, w4, #2, #24
0xffff5822bfc0    96  b #+0x7c (addr 0xffff5822c03c)
0xffff5822bfc4   100  cmp w2, #0xb3 (179)
0xffff5822bfc8   104  cset x4, le
0xffff5822bfcc   108  cmp w2, #0xb6 (182)
0xffff5822bfd0   112  cset x2, eq
0xffff5822bfd4   116  orr w2, w4, w2
0xffff5822bfd8   120  cbnz w2, #+0xd0 (addr 0xffff5822c0a8)
0xffff5822bfdc   124  ldur w2, [x1, #15]
0xffff5822bfe0   128  ubfx w4, w2, #20, #1
0xffff5822bfe4   132  cbnz w4, #+0xc4 (addr 0xffff5822c0a8)
0xffff5822bfe8   136  ubfx w2, w2, #10, #10
0xffff5822bfec   140  cmp w2, #0x100 (256)
0xffff5822bff0   144  b.gt #+0xb8 (addr 0xffff5822c0a8)
0xffff5822bff4   148  ldur x0, [x1, #47]
0xffff5822bff8   152  movz x1, #0x0
0xffff5822bffc   156  nop
0xffff5822c000   160  cmp w1, w2
0xffff5822c004   164  b.eq #+0xd0 (addr 0xffff5822c0d4)
0xffff5822c008   168  add w4, w1, w1, lsl #1
0xffff5822c00c   172  add w4, w4, #0x2 (2)
0xffff5822c010   176  lsl x4, x4, #3
0xffff5822c014   180  add x4, x4, #0xf (15)
0xffff5822c018   184  ldr x4, [x0, x4]
0xffff5822c01c   188  cmp x4, x3
0xffff5822c020   192  b.eq #+0x70 (addr 0xffff5822c090)
0xffff5822c024   196  add w1, w1, #0x1 (1)
0xffff5822c028   200  b #-0x28 (addr 0xffff5822c000)
0xffff5822c02c   204  and x4, x3, #0x8000000000000001
0xffff5822c030   208  cmp x4, #0x0 (0)
0xffff5822c034   212  b.ne #+0x74 (addr 0xffff5822c0a8)
0xffff5822c038   216  asr x4, x3, #32
0xffff5822c03c   220  cmp w2, #0xb4 (180)
0xffff5822c040   224  cset x5, le
0xffff5822c044   228  cmp w2, #0xb6 (182)
0xffff5822c048   232  cset x2, eq
0xffff5822c04c   236  orr w2, w5, w2
0xffff5822c050   240  cbnz w2, #+0x58 (addr 0xffff5822c0a8)
0xffff5822c054   244  ldrb w1, [x1, #13]
0xffff5822c058   248  ubfx w1, w1, #3, #5
0xffff5822c05c   252  cmp w1, #0x3 (3)
0xffff5822c060   256  b.gt #+0x48 (addr 0xffff5822c0a8)
0xffff5822c064   260  ldur x0, [x0, #15]
0xffff5822c068   264  ldur x1, [x0, #7]
0xffff5822c06c   268  lsr x1, x1, #32
0xffff5822c070   272  cmp w4, w1
0xffff5822c074   276  b.ge #+0x60 (addr 0xffff5822c0d4)
0xffff5822c078   280  lsl x1, x4, #3
0xffff5822c07c   284  add x1, x1, #0xf (15)
0xffff5822c080   288  ldr x0, [x0, x1]
0xffff5822c084   292  ldr x1, [x26, #88]
0xffff5822c088   296  cmp x0, x1
0xffff5822c08c   300  b.eq #+0x48 (addr 0xffff5822c0d4)
0xffff5822c090   304  ldr x0, [x26, #64]
0xffff5822c094   308  mov jssp, fp
0xffff5822c098   312  ldp fp, lr, [jssp], #16
0xffff5822c09c   316  add jssp, jssp, #0x10 (16)
0xffff5822c0a0   320  ret
0xffff5822c0a4   324  b #+0x30 (addr 0xffff5822c0d4)
0xffff5822c0a8   328  sub csp, jssp, #0x10 (16)
0xffff5822c0ac   332  sub jssp, jssp, #0x10 (16)
0xffff5822c0b0   336  str x0, [jssp, #8]
0xffff5822c0b4   340  str x3, [jssp]
0xffff5822c0b8   344  movz x1, #0xf6c8
0xffff5822c0bc   348  movk x1, #0xe3, lsl #16
0xffff5822c0c0   352  movz x0, #0x2
0xffff5822c0c4   356  ldr cp, [jssp, #24]
0xffff5822c0c8   360  ldr x16, pc+32 (addr 0x0000ffff5822c0e8)    ;; code: STUB, CEntryStub, minor: 4
0xffff5822c0cc   364  blr x16
0xffff5822c0d0   368  b #-0x3c (addr 0xffff5822c094)
0xffff5822c0d4   372  ldr x0, [x26, #72]
0xffff5822c0d8   376  b #-0x44 (addr 0xffff5822c094)
0xffff5822c0dc   380  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5822c0e0   384  d63f03e0       constant
0xffff5822c0e4   388  d503201f       constant
0xffff5822c0e8   392  58206060       constant
0xffff5822c0ec   396  0000ffff       constant


Safepoints (size = 21)
0xffff5822c0d0   368  0000 (sp -> fp)  <none>

RelocInfo (size = 9)
0xffff5822c0c8  code target (STUB)  (0xffff58206060)
0xffff5822c0dc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff5822c580     0  adr xzr, #+0x40 (addr 0xffff5822c5c0)
0xffff5822c584     4  adr xzr, #+0x2a8 (addr 0xffff5822c82c)
0xffff5822c588     8  ldr x16, pc+1368 (addr 0x0000ffff5822cae0)    ;; external reference (store_buffer_top)
0xffff5822c58c    12  ldr x6, [x16]
0xffff5822c590    16  str x7, [x6], #8
0xffff5822c594    20  str x6, [x16]
0xffff5822c598    24  tst x6, #0x1ffff
0xffff5822c59c    28  b.eq #+0x8 (addr 0xffff5822c5a4)
0xffff5822c5a0    32  ret
0xffff5822c5a4    36  sub csp, jssp, #0x8 (8)
0xffff5822c5a8    40  str lr, [jssp, #-8]!
0xffff5822c5ac    44  ldr x17, pc+1340 (addr 0x0000ffff5822cae8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822c5b0    48  blr x17
0xffff5822c5b4    52  ldr lr, [jssp], #8
0xffff5822c5b8    56  ret
0xffff5822c5bc    60  ret
0xffff5822c5c0    64  sub csp, jssp, #0x10 (16)
0xffff5822c5c4    68  stp x1, x0, [jssp, #-16]!
0xffff5822c5c8    72  ldr x6, [x7]
0xffff5822c5cc    76  and x16, x6, #0xfffffffffff00000
0xffff5822c5d0    80  ldr x16, [x16, #8]
0xffff5822c5d4    84  tst x16, #0x18
0xffff5822c5d8    88  b.eq #+0x17c (addr 0xffff5822c754)
0xffff5822c5dc    92  and x16, x5, #0xfffffffffff00000
0xffff5822c5e0    96  ldr x16, [x16, #8]
0xffff5822c5e4   100  tst x16, #0x18
0xffff5822c5e8   104  b.ne #+0x16c (addr 0xffff5822c754)
0xffff5822c5ec   108  and x6, x5, #0xfffffffffff00000
0xffff5822c5f0   112  ldr x0, [x6, #104]
0xffff5822c5f4   116  subs x0, x0, #0x1 (1)
0xffff5822c5f8   120  str x0, [x6, #104]
0xffff5822c5fc   124  b.mi #+0xc4 (addr 0xffff5822c6c0)
0xffff5822c600   128  ubfx x16, x5, #8, #12
0xffff5822c604   132  and x6, x5, #0xfffffffffff00000
0xffff5822c608   136  add x6, x6, x16, lsl #2
0xffff5822c60c   140  ubfx x0, x5, #3, #5
0xffff5822c610   144  ldr x6, [x6, #360]
0xffff5822c614   148  lsr x6, x6, x0
0xffff5822c618   152  tbz w6, #0, #+0x8 (addr 0xffff5822c620)
0xffff5822c61c   156  tbnz w6, #1, #+0x3c (addr 0xffff5822c658)
0xffff5822c620   160  ldp x1, x0, [jssp], #16
0xffff5822c624   164  ldr x16, pc+1228 (addr 0x0000ffff5822caf0)    ;; external reference (store_buffer_top)
0xffff5822c628   168  ldr x6, [x16]
0xffff5822c62c   172  str x7, [x6], #8
0xffff5822c630   176  str x6, [x16]
0xffff5822c634   180  tst x6, #0x1ffff
0xffff5822c638   184  b.eq #+0x8 (addr 0xffff5822c640)
0xffff5822c63c   188  ret
0xffff5822c640   192  sub csp, jssp, #0x8 (8)
0xffff5822c644   196  str lr, [jssp, #-8]!
0xffff5822c648   200  ldr x17, pc+1200 (addr 0x0000ffff5822caf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822c64c   204  blr x17
0xffff5822c650   208  ldr lr, [jssp], #8
0xffff5822c654   212  ret
0xffff5822c658   216  ldr x6, [x7]
0xffff5822c65c   220  sub csp, jssp, #0x10 (16)
0xffff5822c660   224  stp x5, x7, [jssp, #-16]!
0xffff5822c664   228  ubfx x16, x6, #8, #12
0xffff5822c668   232  and x0, x6, #0xfffffffffff00000
0xffff5822c66c   236  add x0, x0, x16, lsl #2
0xffff5822c670   240  ubfx x5, x6, #3, #5
0xffff5822c674   244  ldr x7, [x0, #360]
0xffff5822c678   248  lsr x7, x7, x5
0xffff5822c67c   252  tbz w7, #0, #+0x40 (addr 0xffff5822c6bc)
0xffff5822c680   256  ldp x5, x7, [jssp], #16
0xffff5822c684   260  ldp x1, x0, [jssp], #16
0xffff5822c688   264  ldr x16, pc+1144 (addr 0x0000ffff5822cb00)    ;; external reference (store_buffer_top)
0xffff5822c68c   268  ldr x6, [x16]
0xffff5822c690   272  str x7, [x6], #8
0xffff5822c694   276  str x6, [x16]
0xffff5822c698   280  tst x6, #0x1ffff
0xffff5822c69c   284  b.eq #+0x8 (addr 0xffff5822c6a4)
0xffff5822c6a0   288  ret
0xffff5822c6a4   292  sub csp, jssp, #0x8 (8)
0xffff5822c6a8   296  str lr, [jssp, #-8]!
0xffff5822c6ac   300  ldr x17, pc+1116 (addr 0x0000ffff5822cb08)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822c6b0   304  blr x17
0xffff5822c6b4   308  ldr lr, [jssp], #8
0xffff5822c6b8   312  ret
0xffff5822c6bc   316  ldp x5, x7, [jssp], #16
0xffff5822c6c0   320  sub csp, jssp, #0x78 (120)
0xffff5822c6c4   324  stp x14, x15, [jssp, #-32]!
0xffff5822c6c8   328  stp x18, lr, [jssp, #16]
0xffff5822c6cc   332  stp x10, x11, [jssp, #-32]!
0xffff5822c6d0   336  stp x12, x13, [jssp, #16]
0xffff5822c6d4   340  stp x5, x7, [jssp, #-32]!
0xffff5822c6d8   344  stp x8, x9, [jssp, #16]
0xffff5822c6dc   348  stp x2, x3, [jssp, #-24]!
0xffff5822c6e0   352  str x4, [jssp, #16]
0xffff5822c6e4   356  mov x0, x5
0xffff5822c6e8   360  mov x1, x7
0xffff5822c6ec   364  ldr x2, pc+1060 (addr 0x0000ffff5822cb10)    ;; external reference (isolate)
0xffff5822c6f0   368  ldr x16, pc+1064 (addr 0x0000ffff5822cb18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822c6f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff5822c6f8   376  blr x16
0xffff5822c6fc   380  ldp x4, x5, [jssp, #16]
0xffff5822c700   384  ldp x2, x3, [jssp], #32
0xffff5822c704   388  ldp x9, x10, [jssp, #16]
0xffff5822c708   392  ldp x7, x8, [jssp], #32
0xffff5822c70c   396  ldp x13, x14, [jssp, #16]
0xffff5822c710   400  ldp x11, x12, [jssp], #32
0xffff5822c714   404  ldr lr, [jssp, #16]
0xffff5822c718   408  ldp x15, x18, [jssp], #24
0xffff5822c71c   412  ldp x1, x0, [jssp], #16
0xffff5822c720   416  ldr x16, pc+1024 (addr 0x0000ffff5822cb20)    ;; external reference (store_buffer_top)
0xffff5822c724   420  ldr x6, [x16]
0xffff5822c728   424  str x7, [x6], #8
0xffff5822c72c   428  str x6, [x16]
0xffff5822c730   432  tst x6, #0x1ffff
0xffff5822c734   436  b.eq #+0x8 (addr 0xffff5822c73c)
0xffff5822c738   440  ret
0xffff5822c73c   444  sub csp, jssp, #0x8 (8)
0xffff5822c740   448  str lr, [jssp, #-8]!
0xffff5822c744   452  ldr x17, pc+996 (addr 0x0000ffff5822cb28)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822c748   456  blr x17
0xffff5822c74c   460  ldr lr, [jssp], #8
0xffff5822c750   464  ret
0xffff5822c754   468  and x6, x5, #0xfffffffffff00000
0xffff5822c758   472  ldr x0, [x6, #104]
0xffff5822c75c   476  subs x0, x0, #0x1 (1)
0xffff5822c760   480  str x0, [x6, #104]
0xffff5822c764   484  b.mi #+0x64 (addr 0xffff5822c7c8)
0xffff5822c768   488  ubfx x16, x5, #8, #12
0xffff5822c76c   492  and x6, x5, #0xfffffffffff00000
0xffff5822c770   496  add x6, x6, x16, lsl #2
0xffff5822c774   500  ubfx x0, x5, #3, #5
0xffff5822c778   504  ldr x6, [x6, #360]
0xffff5822c77c   508  lsr x6, x6, x0
0xffff5822c780   512  tbz w6, #0, #+0x8 (addr 0xffff5822c788)
0xffff5822c784   516  tbnz w6, #1, #+0xc (addr 0xffff5822c790)
0xffff5822c788   520  ldp x1, x0, [jssp], #16
0xffff5822c78c   524  ret
0xffff5822c790   528  ldr x6, [x7]
0xffff5822c794   532  sub csp, jssp, #0x10 (16)
0xffff5822c798   536  stp x5, x7, [jssp, #-16]!
0xffff5822c79c   540  ubfx x16, x6, #8, #12
0xffff5822c7a0   544  and x0, x6, #0xfffffffffff00000
0xffff5822c7a4   548  add x0, x0, x16, lsl #2
0xffff5822c7a8   552  ubfx x5, x6, #3, #5
0xffff5822c7ac   556  ldr x7, [x0, #360]
0xffff5822c7b0   560  lsr x7, x7, x5
0xffff5822c7b4   564  tbz w7, #0, #+0x10 (addr 0xffff5822c7c4)
0xffff5822c7b8   568  ldp x5, x7, [jssp], #16
0xffff5822c7bc   572  ldp x1, x0, [jssp], #16
0xffff5822c7c0   576  ret
0xffff5822c7c4   580  ldp x5, x7, [jssp], #16
0xffff5822c7c8   584  sub csp, jssp, #0x78 (120)
0xffff5822c7cc   588  stp x14, x15, [jssp, #-32]!
0xffff5822c7d0   592  stp x18, lr, [jssp, #16]
0xffff5822c7d4   596  stp x10, x11, [jssp, #-32]!
0xffff5822c7d8   600  stp x12, x13, [jssp, #16]
0xffff5822c7dc   604  stp x5, x7, [jssp, #-32]!
0xffff5822c7e0   608  stp x8, x9, [jssp, #16]
0xffff5822c7e4   612  stp x2, x3, [jssp, #-24]!
0xffff5822c7e8   616  str x4, [jssp, #16]
0xffff5822c7ec   620  mov x0, x5
0xffff5822c7f0   624  mov x1, x7
0xffff5822c7f4   628  ldr x2, pc+828 (addr 0x0000ffff5822cb30)    ;; external reference (isolate)
0xffff5822c7f8   632  ldr x16, pc+832 (addr 0x0000ffff5822cb38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822c7fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff5822c800   640  blr x16
0xffff5822c804   644  ldp x4, x5, [jssp, #16]
0xffff5822c808   648  ldp x2, x3, [jssp], #32
0xffff5822c80c   652  ldp x9, x10, [jssp, #16]
0xffff5822c810   656  ldp x7, x8, [jssp], #32
0xffff5822c814   660  ldp x13, x14, [jssp, #16]
0xffff5822c818   664  ldp x11, x12, [jssp], #32
0xffff5822c81c   668  ldr lr, [jssp, #16]
0xffff5822c820   672  ldp x15, x18, [jssp], #24
0xffff5822c824   676  ldp x1, x0, [jssp], #16
0xffff5822c828   680  ret
0xffff5822c82c   684  sub csp, jssp, #0x10 (16)
0xffff5822c830   688  stp x1, x0, [jssp, #-16]!
0xffff5822c834   692  ldr x6, [x7]
0xffff5822c838   696  and x16, x6, #0xfffffffffff00000
0xffff5822c83c   700  ldr x16, [x16, #8]
0xffff5822c840   704  tst x16, #0x18
0xffff5822c844   708  b.eq #+0x19c (addr 0xffff5822c9e0)
0xffff5822c848   712  and x16, x5, #0xfffffffffff00000
0xffff5822c84c   716  ldr x16, [x16, #8]
0xffff5822c850   720  tst x16, #0x18
0xffff5822c854   724  b.ne #+0x18c (addr 0xffff5822c9e0)
0xffff5822c858   728  and x6, x5, #0xfffffffffff00000
0xffff5822c85c   732  ldr x0, [x6, #104]
0xffff5822c860   736  subs x0, x0, #0x1 (1)
0xffff5822c864   740  str x0, [x6, #104]
0xffff5822c868   744  b.mi #+0xe4 (addr 0xffff5822c94c)
0xffff5822c86c   748  ubfx x16, x5, #8, #12
0xffff5822c870   752  and x6, x5, #0xfffffffffff00000
0xffff5822c874   756  add x6, x6, x16, lsl #2
0xffff5822c878   760  ubfx x0, x5, #3, #5
0xffff5822c87c   764  ldr x6, [x6, #360]
0xffff5822c880   768  lsr x6, x6, x0
0xffff5822c884   772  tbz w6, #0, #+0x8 (addr 0xffff5822c88c)
0xffff5822c888   776  tbnz w6, #1, #+0x3c (addr 0xffff5822c8c4)
0xffff5822c88c   780  ldp x1, x0, [jssp], #16
0xffff5822c890   784  ldr x16, pc+688 (addr 0x0000ffff5822cb40)    ;; external reference (store_buffer_top)
0xffff5822c894   788  ldr x6, [x16]
0xffff5822c898   792  str x7, [x6], #8
0xffff5822c89c   796  str x6, [x16]
0xffff5822c8a0   800  tst x6, #0x1ffff
0xffff5822c8a4   804  b.eq #+0x8 (addr 0xffff5822c8ac)
0xffff5822c8a8   808  ret
0xffff5822c8ac   812  sub csp, jssp, #0x8 (8)
0xffff5822c8b0   816  str lr, [jssp, #-8]!
0xffff5822c8b4   820  ldr x17, pc+660 (addr 0x0000ffff5822cb48)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822c8b8   824  blr x17
0xffff5822c8bc   828  ldr lr, [jssp], #8
0xffff5822c8c0   832  ret
0xffff5822c8c4   836  ldr x6, [x7]
0xffff5822c8c8   840  and x0, x6, #0xfffffffffff00000
0xffff5822c8cc   844  ldr x0, [x0, #8]
0xffff5822c8d0   848  tbz w0, #6, #+0x18 (addr 0xffff5822c8e8)
0xffff5822c8d4   852  and x0, x5, #0xfffffffffff00000
0xffff5822c8d8   856  ldr x0, [x0, #8]
0xffff5822c8dc   860  movz x16, #0x58
0xffff5822c8e0   864  tst x0, x16
0xffff5822c8e4   868  b.eq #+0x68 (addr 0xffff5822c94c)
0xffff5822c8e8   872  sub csp, jssp, #0x10 (16)
0xffff5822c8ec   876  stp x5, x7, [jssp, #-16]!
0xffff5822c8f0   880  ubfx x16, x6, #8, #12
0xffff5822c8f4   884  and x0, x6, #0xfffffffffff00000
0xffff5822c8f8   888  add x0, x0, x16, lsl #2
0xffff5822c8fc   892  ubfx x5, x6, #3, #5
0xffff5822c900   896  ldr x7, [x0, #360]
0xffff5822c904   900  lsr x7, x7, x5
0xffff5822c908   904  tbz w7, #0, #+0x40 (addr 0xffff5822c948)
0xffff5822c90c   908  ldp x5, x7, [jssp], #16
0xffff5822c910   912  ldp x1, x0, [jssp], #16
0xffff5822c914   916  ldr x16, pc+572 (addr 0x0000ffff5822cb50)    ;; external reference (store_buffer_top)
0xffff5822c918   920  ldr x6, [x16]
0xffff5822c91c   924  str x7, [x6], #8
0xffff5822c920   928  str x6, [x16]
0xffff5822c924   932  tst x6, #0x1ffff
0xffff5822c928   936  b.eq #+0x8 (addr 0xffff5822c930)
0xffff5822c92c   940  ret
0xffff5822c930   944  sub csp, jssp, #0x8 (8)
0xffff5822c934   948  str lr, [jssp, #-8]!
0xffff5822c938   952  ldr x17, pc+544 (addr 0x0000ffff5822cb58)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822c93c   956  blr x17
0xffff5822c940   960  ldr lr, [jssp], #8
0xffff5822c944   964  ret
0xffff5822c948   968  ldp x5, x7, [jssp], #16
0xffff5822c94c   972  sub csp, jssp, #0x78 (120)
0xffff5822c950   976  stp x14, x15, [jssp, #-32]!
0xffff5822c954   980  stp x18, lr, [jssp, #16]
0xffff5822c958   984  stp x10, x11, [jssp, #-32]!
0xffff5822c95c   988  stp x12, x13, [jssp, #16]
0xffff5822c960   992  stp x5, x7, [jssp, #-32]!
0xffff5822c964   996  stp x8, x9, [jssp, #16]
0xffff5822c968  1000  stp x2, x3, [jssp, #-24]!
0xffff5822c96c  1004  str x4, [jssp, #16]
0xffff5822c970  1008  mov x0, x5
0xffff5822c974  1012  mov x1, x7
0xffff5822c978  1016  ldr x2, pc+488 (addr 0x0000ffff5822cb60)    ;; external reference (isolate)
0xffff5822c97c  1020  ldr x16, pc+492 (addr 0x0000ffff5822cb68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822c980  1024  and csp, jssp, #0xfffffffffffffff0
0xffff5822c984  1028  blr x16
0xffff5822c988  1032  ldp x4, x5, [jssp, #16]
0xffff5822c98c  1036  ldp x2, x3, [jssp], #32
0xffff5822c990  1040  ldp x9, x10, [jssp, #16]
0xffff5822c994  1044  ldp x7, x8, [jssp], #32
0xffff5822c998  1048  ldp x13, x14, [jssp, #16]
0xffff5822c99c  1052  ldp x11, x12, [jssp], #32
0xffff5822c9a0  1056  ldr lr, [jssp, #16]
0xffff5822c9a4  1060  ldp x15, x18, [jssp], #24
0xffff5822c9a8  1064  ldp x1, x0, [jssp], #16
0xffff5822c9ac  1068  ldr x16, pc+452 (addr 0x0000ffff5822cb70)    ;; external reference (store_buffer_top)
0xffff5822c9b0  1072  ldr x6, [x16]
0xffff5822c9b4  1076  str x7, [x6], #8
0xffff5822c9b8  1080  str x6, [x16]
0xffff5822c9bc  1084  tst x6, #0x1ffff
0xffff5822c9c0  1088  b.eq #+0x8 (addr 0xffff5822c9c8)
0xffff5822c9c4  1092  ret
0xffff5822c9c8  1096  sub csp, jssp, #0x8 (8)
0xffff5822c9cc  1100  str lr, [jssp, #-8]!
0xffff5822c9d0  1104  ldr x17, pc+424 (addr 0x0000ffff5822cb78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822c9d4  1108  blr x17
0xffff5822c9d8  1112  ldr lr, [jssp], #8
0xffff5822c9dc  1116  ret
0xffff5822c9e0  1120  and x6, x5, #0xfffffffffff00000
0xffff5822c9e4  1124  ldr x0, [x6, #104]
0xffff5822c9e8  1128  subs x0, x0, #0x1 (1)
0xffff5822c9ec  1132  str x0, [x6, #104]
0xffff5822c9f0  1136  b.mi #+0x84 (addr 0xffff5822ca74)
0xffff5822c9f4  1140  ubfx x16, x5, #8, #12
0xffff5822c9f8  1144  and x6, x5, #0xfffffffffff00000
0xffff5822c9fc  1148  add x6, x6, x16, lsl #2
0xffff5822ca00  1152  ubfx x0, x5, #3, #5
0xffff5822ca04  1156  ldr x6, [x6, #360]
0xffff5822ca08  1160  lsr x6, x6, x0
0xffff5822ca0c  1164  tbz w6, #0, #+0x8 (addr 0xffff5822ca14)
0xffff5822ca10  1168  tbnz w6, #1, #+0xc (addr 0xffff5822ca1c)
0xffff5822ca14  1172  ldp x1, x0, [jssp], #16
0xffff5822ca18  1176  ret
0xffff5822ca1c  1180  ldr x6, [x7]
0xffff5822ca20  1184  and x0, x6, #0xfffffffffff00000
0xffff5822ca24  1188  ldr x0, [x0, #8]
0xffff5822ca28  1192  tbz w0, #6, #+0x18 (addr 0xffff5822ca40)
0xffff5822ca2c  1196  and x0, x5, #0xfffffffffff00000
0xffff5822ca30  1200  ldr x0, [x0, #8]
0xffff5822ca34  1204  movz x16, #0x58
0xffff5822ca38  1208  tst x0, x16
0xffff5822ca3c  1212  b.eq #+0x38 (addr 0xffff5822ca74)
0xffff5822ca40  1216  sub csp, jssp, #0x10 (16)
0xffff5822ca44  1220  stp x5, x7, [jssp, #-16]!
0xffff5822ca48  1224  ubfx x16, x6, #8, #12
0xffff5822ca4c  1228  and x0, x6, #0xfffffffffff00000
0xffff5822ca50  1232  add x0, x0, x16, lsl #2
0xffff5822ca54  1236  ubfx x5, x6, #3, #5
0xffff5822ca58  1240  ldr x7, [x0, #360]
0xffff5822ca5c  1244  lsr x7, x7, x5
0xffff5822ca60  1248  tbz w7, #0, #+0x10 (addr 0xffff5822ca70)
0xffff5822ca64  1252  ldp x5, x7, [jssp], #16
0xffff5822ca68  1256  ldp x1, x0, [jssp], #16
0xffff5822ca6c  1260  ret
0xffff5822ca70  1264  ldp x5, x7, [jssp], #16
0xffff5822ca74  1268  sub csp, jssp, #0x78 (120)
0xffff5822ca78  1272  stp x14, x15, [jssp, #-32]!
0xffff5822ca7c  1276  stp x18, lr, [jssp, #16]
0xffff5822ca80  1280  stp x10, x11, [jssp, #-32]!
0xffff5822ca84  1284  stp x12, x13, [jssp, #16]
0xffff5822ca88  1288  stp x5, x7, [jssp, #-32]!
0xffff5822ca8c  1292  stp x8, x9, [jssp, #16]
0xffff5822ca90  1296  stp x2, x3, [jssp, #-24]!
0xffff5822ca94  1300  str x4, [jssp, #16]
0xffff5822ca98  1304  mov x0, x5
0xffff5822ca9c  1308  mov x1, x7
0xffff5822caa0  1312  ldr x2, pc+224 (addr 0x0000ffff5822cb80)    ;; external reference (isolate)
0xffff5822caa4  1316  ldr x16, pc+228 (addr 0x0000ffff5822cb88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822caa8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff5822caac  1324  blr x16
0xffff5822cab0  1328  ldp x4, x5, [jssp, #16]
0xffff5822cab4  1332  ldp x2, x3, [jssp], #32
0xffff5822cab8  1336  ldp x9, x10, [jssp, #16]
0xffff5822cabc  1340  ldp x7, x8, [jssp], #32
0xffff5822cac0  1344  ldp x13, x14, [jssp, #16]
0xffff5822cac4  1348  ldp x11, x12, [jssp], #32
0xffff5822cac8  1352  ldr lr, [jssp, #16]
0xffff5822cacc  1356  ldp x15, x18, [jssp], #24
0xffff5822cad0  1360  ldp x1, x0, [jssp], #16
0xffff5822cad4  1364  ret
0xffff5822cad8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5822cadc  1372  d63f03e0       constant
0xffff5822cae0  1376  16e798c0       constant
0xffff5822cae4  1380  00000000       constant
0xffff5822cae8  1384  582064c0       constant
0xffff5822caec  1388  0000ffff       constant
0xffff5822caf0  1392  16e798c0       constant
0xffff5822caf4  1396  00000000       constant
0xffff5822caf8  1400  582064c0       constant
0xffff5822cafc  1404  0000ffff       constant
0xffff5822cb00  1408  16e798c0       constant
0xffff5822cb04  1412  00000000       constant
0xffff5822cb08  1416  582064c0       constant
0xffff5822cb0c  1420  0000ffff       constant
0xffff5822cb10  1424  16e782d0       constant
0xffff5822cb14  1428  00000000       constant
0xffff5822cb18  1432  00c2d958       constant
0xffff5822cb1c  1436  00000000       constant
0xffff5822cb20  1440  16e798c0       constant
0xffff5822cb24  1444  00000000       constant
0xffff5822cb28  1448  582064c0       constant
0xffff5822cb2c  1452  0000ffff       constant
0xffff5822cb30  1456  16e782d0       constant
0xffff5822cb34  1460  00000000       constant
0xffff5822cb38  1464  00c2d958       constant
0xffff5822cb3c  1468  00000000       constant
0xffff5822cb40  1472  16e798c0       constant
0xffff5822cb44  1476  00000000       constant
0xffff5822cb48  1480  582064c0       constant
0xffff5822cb4c  1484  0000ffff       constant
0xffff5822cb50  1488  16e798c0       constant
0xffff5822cb54  1492  00000000       constant
0xffff5822cb58  1496  582064c0       constant
0xffff5822cb5c  1500  0000ffff       constant
0xffff5822cb60  1504  16e782d0       constant
0xffff5822cb64  1508  00000000       constant
0xffff5822cb68  1512  00c2d958       constant
0xffff5822cb6c  1516  00000000       constant
0xffff5822cb70  1520  16e798c0       constant
0xffff5822cb74  1524  00000000       constant
0xffff5822cb78  1528  582064c0       constant
0xffff5822cb7c  1532  0000ffff       constant
0xffff5822cb80  1536  16e782d0       constant
0xffff5822cb84  1540  00000000       constant
0xffff5822cb88  1544  00c2d958       constant
0xffff5822cb8c  1548  00000000       constant


RelocInfo (size = 59)
0xffff5822c588  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822c5ac  code target (STUB)  (0xffff582064c0)
0xffff5822c624  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822c648  code target (STUB)  (0xffff582064c0)
0xffff5822c688  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822c6ac  code target (STUB)  (0xffff582064c0)
0xffff5822c6ec  external reference (isolate)  (0x16e782d0)
0xffff5822c6f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822c720  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822c744  code target (STUB)  (0xffff582064c0)
0xffff5822c7f4  external reference (isolate)  (0x16e782d0)
0xffff5822c7f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822c890  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822c8b4  code target (STUB)  (0xffff582064c0)
0xffff5822c914  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822c938  code target (STUB)  (0xffff582064c0)
0xffff5822c978  external reference (isolate)  (0x16e782d0)
0xffff5822c97c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822c9ac  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822c9d0  code target (STUB)  (0xffff582064c0)
0xffff5822caa0  external reference (isolate)  (0x16e782d0)
0xffff5822caa4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822cad8  constant pool (size 184)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 333)
0xffff5822d100     0  movz x2, #0x92c0
0xffff5822d104     4  movk x2, #0x16e7, lsl #16
0xffff5822d108     8  ldp x3, x0, [x2]
0xffff5822d10c    12  adds x16, x3, #0x58 (88)
0xffff5822d110    16  ccmp x16, x0, #nzCv, lo
0xffff5822d114    20  b.hi #+0x64 (addr 0xffff5822d178)
0xffff5822d118    24  str x16, [x2]
0xffff5822d11c    28  orr x3, x3, #0x1
0xffff5822d120    32  ldr x0, pc+200 (addr 0x0000ffff5822d1e8)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5822d124    36  stur x0, [x3, #-1]
0xffff5822d128    40  movz x0, #0x900000000
0xffff5822d12c    44  stur x0, [x3, #7]
0xffff5822d130    48  stur x1, [x3, #15]
0xffff5822d134    52  stur cp, [x3, #23]
0xffff5822d138    56  ldr x0, pc+184 (addr 0x0000ffff5822d1f0)    ;; object: 0x39c04519 <the hole>
0xffff5822d13c    60  stur x0, [x3, #31]
0xffff5822d140    64  ldur x0, [cp, #39]
0xffff5822d144    68  stur x0, [x3, #39]
0xffff5822d148    72  ldr x0, pc+176 (addr 0x0000ffff5822d1f8)    ;; object: 0x39c04241 <undefined>
0xffff5822d14c    76  stur x0, [x3, #47]
0xffff5822d150    80  ldr x0, pc+176 (addr 0x0000ffff5822d200)    ;; object: 0x39c04241 <undefined>
0xffff5822d154    84  stur x0, [x3, #55]
0xffff5822d158    88  ldr x0, pc+176 (addr 0x0000ffff5822d208)    ;; object: 0x39c04241 <undefined>
0xffff5822d15c    92  stur x0, [x3, #63]
0xffff5822d160    96  ldr x0, pc+176 (addr 0x0000ffff5822d210)    ;; object: 0x39c04241 <undefined>
0xffff5822d164   100  stur x0, [x3, #71]
0xffff5822d168   104  ldr x0, pc+176 (addr 0x0000ffff5822d218)    ;; object: 0x39c04241 <undefined>
0xffff5822d16c   108  stur x0, [x3, #79]
0xffff5822d170   112  mov x0, x3
0xffff5822d174   116  ret
0xffff5822d178   120  sub csp, jssp, #0x10 (16)
0xffff5822d17c   124  stp fp, lr, [jssp, #-16]!
0xffff5822d180   128  movz fp, #0xa00000000
0xffff5822d184   132  sub csp, jssp, #0x8 (8)
0xffff5822d188   136  str fp, [jssp, #-8]!
0xffff5822d18c   140  add fp, jssp, #0x8 (8)
0xffff5822d190   144  movz x3, #0x0
0xffff5822d194   148  mov x16, lr
0xffff5822d198   152  ldr x17, pc+136 (addr 0x0000ffff5822d220)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5822d19c   156  blr x17
0xffff5822d1a0   160  movz x0, #0x5800000000
0xffff5822d1a4   164  movz x10, #0x0
0xffff5822d1a8   168  sub csp, jssp, #0x10 (16)
0xffff5822d1ac   172  stp x10, x0, [jssp, #-16]!
0xffff5822d1b0   176  movz x0, #0x2
0xffff5822d1b4   180  movz x1, #0x5b88
0xffff5822d1b8   184  movk x1, #0xe2, lsl #16
0xffff5822d1bc   188  ldr x16, pc+108 (addr 0x0000ffff5822d228)    ;; code: STUB, CEntryStub, minor: 5
0xffff5822d1c0   192  blr x16
0xffff5822d1c4   196  str x0, [jssp, #24]
0xffff5822d1c8   200  ldr x16, pc+104 (addr 0x0000ffff5822d230)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5822d1cc   204  blr x16
0xffff5822d1d0   208  ldr lr, [jssp, #16]
0xffff5822d1d4   212  ldp xzr, fp, [jssp], #24
0xffff5822d1d8   216  b #-0xb8 (addr 0xffff5822d120)
0xffff5822d1dc   220  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff5822d1e0   224  d63f03e0       constant
0xffff5822d1e4   228  d503201f       constant
0xffff5822d1e8   232  32b06149       constant
0xffff5822d1ec   236  00000000       constant
0xffff5822d1f0   240  39c04519       constant
0xffff5822d1f4   244  00000000       constant
0xffff5822d1f8   248  39c04241       constant
0xffff5822d1fc   252  00000000       constant
0xffff5822d200   256  39c04241       constant
0xffff5822d204   260  00000000       constant
0xffff5822d208   264  39c04241       constant
0xffff5822d20c   268  00000000       constant
0xffff5822d210   272  39c04241       constant
0xffff5822d214   276  00000000       constant
0xffff5822d218   280  39c04241       constant
0xffff5822d21c   284  00000000       constant
0xffff5822d220   288  58206820       constant
0xffff5822d224   292  0000ffff       constant
0xffff5822d228   296  58206260       constant
0xffff5822d22c   300  0000ffff       constant
0xffff5822d230   304  582068e0       constant
0xffff5822d234   308  0000ffff       constant


Safepoints (size = 21)
0xffff5822d1c4   196  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 16)
0xffff5822d120  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5822d138  embedded object  (0x39c04519 <the hole>)
0xffff5822d148  embedded object  (0x39c04241 <undefined>)
0xffff5822d150  embedded object  (0x39c04241 <undefined>)
0xffff5822d158  embedded object  (0x39c04241 <undefined>)
0xffff5822d160  embedded object  (0x39c04241 <undefined>)
0xffff5822d168  embedded object  (0x39c04241 <undefined>)
0xffff5822d198  code target (STUB)  (0xffff58206820)
0xffff5822d1bc  code target (STUB)  (0xffff58206260)
0xffff5822d1c8  code target (STUB)  (0xffff582068e0)
0xffff5822d1dc  constant pool (size 92)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff5822d2c0     0  adr xzr, #+0x40 (addr 0xffff5822d300)
0xffff5822d2c4     4  adr xzr, #+0x358 (addr 0xffff5822d61c)
0xffff5822d2c8     8  ldr x16, pc+1720 (addr 0x0000ffff5822d980)    ;; external reference (store_buffer_top)
0xffff5822d2cc    12  ldr x4, [x16]
0xffff5822d2d0    16  str x6, [x4], #8
0xffff5822d2d4    20  str x4, [x16]
0xffff5822d2d8    24  tst x4, #0x1ffff
0xffff5822d2dc    28  b.eq #+0x8 (addr 0xffff5822d2e4)
0xffff5822d2e0    32  ret
0xffff5822d2e4    36  sub csp, jssp, #0x8 (8)
0xffff5822d2e8    40  str lr, [jssp, #-8]!
0xffff5822d2ec    44  ldr x17, pc+1692 (addr 0x0000ffff5822d988)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822d2f0    48  blr x17
0xffff5822d2f4    52  ldr lr, [jssp], #8
0xffff5822d2f8    56  ret
0xffff5822d2fc    60  ret
0xffff5822d300    64  sub csp, jssp, #0x10 (16)
0xffff5822d304    68  stp x2, x1, [jssp, #-16]!
0xffff5822d308    72  ldr x4, [x6]
0xffff5822d30c    76  and x16, x4, #0xfffffffffff00000
0xffff5822d310    80  ldr x16, [x16, #8]
0xffff5822d314    84  tst x16, #0x18
0xffff5822d318    88  b.eq #+0x1d4 (addr 0xffff5822d4ec)
0xffff5822d31c    92  and x16, x0, #0xfffffffffff00000
0xffff5822d320    96  ldr x16, [x16, #8]
0xffff5822d324   100  tst x16, #0x18
0xffff5822d328   104  b.ne #+0x1c4 (addr 0xffff5822d4ec)
0xffff5822d32c   108  and x4, x0, #0xfffffffffff00000
0xffff5822d330   112  ldr x1, [x4, #104]
0xffff5822d334   116  subs x1, x1, #0x1 (1)
0xffff5822d338   120  str x1, [x4, #104]
0xffff5822d33c   124  b.mi #+0xc4 (addr 0xffff5822d400)
0xffff5822d340   128  ubfx x16, x0, #8, #12
0xffff5822d344   132  and x4, x0, #0xfffffffffff00000
0xffff5822d348   136  add x4, x4, x16, lsl #2
0xffff5822d34c   140  ubfx x1, x0, #3, #5
0xffff5822d350   144  ldr x4, [x4, #360]
0xffff5822d354   148  lsr x4, x4, x1
0xffff5822d358   152  tbz w4, #0, #+0x8 (addr 0xffff5822d360)
0xffff5822d35c   156  tbnz w4, #1, #+0x3c (addr 0xffff5822d398)
0xffff5822d360   160  ldp x2, x1, [jssp], #16
0xffff5822d364   164  ldr x16, pc+1580 (addr 0x0000ffff5822d990)    ;; external reference (store_buffer_top)
0xffff5822d368   168  ldr x4, [x16]
0xffff5822d36c   172  str x6, [x4], #8
0xffff5822d370   176  str x4, [x16]
0xffff5822d374   180  tst x4, #0x1ffff
0xffff5822d378   184  b.eq #+0x8 (addr 0xffff5822d380)
0xffff5822d37c   188  ret
0xffff5822d380   192  sub csp, jssp, #0x8 (8)
0xffff5822d384   196  str lr, [jssp, #-8]!
0xffff5822d388   200  ldr x17, pc+1552 (addr 0x0000ffff5822d998)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822d38c   204  blr x17
0xffff5822d390   208  ldr lr, [jssp], #8
0xffff5822d394   212  ret
0xffff5822d398   216  ldr x4, [x6]
0xffff5822d39c   220  sub csp, jssp, #0x10 (16)
0xffff5822d3a0   224  stp x0, x6, [jssp, #-16]!
0xffff5822d3a4   228  ubfx x16, x4, #8, #12
0xffff5822d3a8   232  and x1, x4, #0xfffffffffff00000
0xffff5822d3ac   236  add x1, x1, x16, lsl #2
0xffff5822d3b0   240  ubfx x0, x4, #3, #5
0xffff5822d3b4   244  ldr x6, [x1, #360]
0xffff5822d3b8   248  lsr x6, x6, x0
0xffff5822d3bc   252  tbz w6, #0, #+0x40 (addr 0xffff5822d3fc)
0xffff5822d3c0   256  ldp x0, x6, [jssp], #16
0xffff5822d3c4   260  ldp x2, x1, [jssp], #16
0xffff5822d3c8   264  ldr x16, pc+1496 (addr 0x0000ffff5822d9a0)    ;; external reference (store_buffer_top)
0xffff5822d3cc   268  ldr x4, [x16]
0xffff5822d3d0   272  str x6, [x4], #8
0xffff5822d3d4   276  str x4, [x16]
0xffff5822d3d8   280  tst x4, #0x1ffff
0xffff5822d3dc   284  b.eq #+0x8 (addr 0xffff5822d3e4)
0xffff5822d3e0   288  ret
0xffff5822d3e4   292  sub csp, jssp, #0x8 (8)
0xffff5822d3e8   296  str lr, [jssp, #-8]!
0xffff5822d3ec   300  ldr x17, pc+1468 (addr 0x0000ffff5822d9a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822d3f0   304  blr x17
0xffff5822d3f4   308  ldr lr, [jssp], #8
0xffff5822d3f8   312  ret
0xffff5822d3fc   316  ldp x0, x6, [jssp], #16
0xffff5822d400   320  sub csp, jssp, #0x78 (120)
0xffff5822d404   324  stp x14, x15, [jssp, #-32]!
0xffff5822d408   328  stp x18, lr, [jssp, #16]
0xffff5822d40c   332  stp x10, x11, [jssp, #-32]!
0xffff5822d410   336  stp x12, x13, [jssp, #16]
0xffff5822d414   340  stp x6, x7, [jssp, #-32]!
0xffff5822d418   344  stp x8, x9, [jssp, #16]
0xffff5822d41c   348  stp x0, x3, [jssp, #-24]!
0xffff5822d420   352  str x5, [jssp, #16]
0xffff5822d424   356  sub csp, jssp, #0xb0 (176)
0xffff5822d428   360  stp d26, d27, [jssp, #-32]!
0xffff5822d42c   364  stp d28, d29, [jssp, #16]
0xffff5822d430   368  stp d22, d23, [jssp, #-32]!
0xffff5822d434   372  stp d24, d25, [jssp, #16]
0xffff5822d438   376  stp d18, d19, [jssp, #-32]!
0xffff5822d43c   380  stp d20, d21, [jssp, #16]
0xffff5822d440   384  stp d6, d7, [jssp, #-32]!
0xffff5822d444   388  stp d16, d17, [jssp, #16]
0xffff5822d448   392  stp d2, d3, [jssp, #-32]!
0xffff5822d44c   396  stp d4, d5, [jssp, #16]
0xffff5822d450   400  stp d0, d1, [jssp, #-16]!
0xffff5822d454   404  mov x1, x6
0xffff5822d458   408  ldr x2, pc+1368 (addr 0x0000ffff5822d9b0)    ;; external reference (isolate)
0xffff5822d45c   412  ldr x16, pc+1372 (addr 0x0000ffff5822d9b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822d460   416  and csp, jssp, #0xfffffffffffffff0
0xffff5822d464   420  blr x16
0xffff5822d468   424  ldp d2, d3, [jssp, #16]
0xffff5822d46c   428  ldp d0, d1, [jssp], #32
0xffff5822d470   432  ldp d6, d7, [jssp, #16]
0xffff5822d474   436  ldp d4, d5, [jssp], #32
0xffff5822d478   440  ldp d18, d19, [jssp, #16]
0xffff5822d47c   444  ldp d16, d17, [jssp], #32
0xffff5822d480   448  ldp d22, d23, [jssp, #16]
0xffff5822d484   452  ldp d20, d21, [jssp], #32
0xffff5822d488   456  ldp d26, d27, [jssp, #16]
0xffff5822d48c   460  ldp d24, d25, [jssp], #32
0xffff5822d490   464  ldp d28, d29, [jssp], #16
0xffff5822d494   468  ldp x5, x6, [jssp, #16]
0xffff5822d498   472  ldp x0, x3, [jssp], #32
0xffff5822d49c   476  ldp x9, x10, [jssp, #16]
0xffff5822d4a0   480  ldp x7, x8, [jssp], #32
0xffff5822d4a4   484  ldp x13, x14, [jssp, #16]
0xffff5822d4a8   488  ldp x11, x12, [jssp], #32
0xffff5822d4ac   492  ldr lr, [jssp, #16]
0xffff5822d4b0   496  ldp x15, x18, [jssp], #24
0xffff5822d4b4   500  ldp x2, x1, [jssp], #16
0xffff5822d4b8   504  ldr x16, pc+1288 (addr 0x0000ffff5822d9c0)    ;; external reference (store_buffer_top)
0xffff5822d4bc   508  ldr x4, [x16]
0xffff5822d4c0   512  str x6, [x4], #8
0xffff5822d4c4   516  str x4, [x16]
0xffff5822d4c8   520  tst x4, #0x1ffff
0xffff5822d4cc   524  b.eq #+0x8 (addr 0xffff5822d4d4)
0xffff5822d4d0   528  ret
0xffff5822d4d4   532  sub csp, jssp, #0x8 (8)
0xffff5822d4d8   536  str lr, [jssp, #-8]!
0xffff5822d4dc   540  ldr x17, pc+1260 (addr 0x0000ffff5822d9c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822d4e0   544  blr x17
0xffff5822d4e4   548  ldr lr, [jssp], #8
0xffff5822d4e8   552  ret
0xffff5822d4ec   556  and x4, x0, #0xfffffffffff00000
0xffff5822d4f0   560  ldr x1, [x4, #104]
0xffff5822d4f4   564  subs x1, x1, #0x1 (1)
0xffff5822d4f8   568  str x1, [x4, #104]
0xffff5822d4fc   572  b.mi #+0x64 (addr 0xffff5822d560)
0xffff5822d500   576  ubfx x16, x0, #8, #12
0xffff5822d504   580  and x4, x0, #0xfffffffffff00000
0xffff5822d508   584  add x4, x4, x16, lsl #2
0xffff5822d50c   588  ubfx x1, x0, #3, #5
0xffff5822d510   592  ldr x4, [x4, #360]
0xffff5822d514   596  lsr x4, x4, x1
0xffff5822d518   600  tbz w4, #0, #+0x8 (addr 0xffff5822d520)
0xffff5822d51c   604  tbnz w4, #1, #+0xc (addr 0xffff5822d528)
0xffff5822d520   608  ldp x2, x1, [jssp], #16
0xffff5822d524   612  ret
0xffff5822d528   616  ldr x4, [x6]
0xffff5822d52c   620  sub csp, jssp, #0x10 (16)
0xffff5822d530   624  stp x0, x6, [jssp, #-16]!
0xffff5822d534   628  ubfx x16, x4, #8, #12
0xffff5822d538   632  and x1, x4, #0xfffffffffff00000
0xffff5822d53c   636  add x1, x1, x16, lsl #2
0xffff5822d540   640  ubfx x0, x4, #3, #5
0xffff5822d544   644  ldr x6, [x1, #360]
0xffff5822d548   648  lsr x6, x6, x0
0xffff5822d54c   652  tbz w6, #0, #+0x10 (addr 0xffff5822d55c)
0xffff5822d550   656  ldp x0, x6, [jssp], #16
0xffff5822d554   660  ldp x2, x1, [jssp], #16
0xffff5822d558   664  ret
0xffff5822d55c   668  ldp x0, x6, [jssp], #16
0xffff5822d560   672  sub csp, jssp, #0x78 (120)
0xffff5822d564   676  stp x14, x15, [jssp, #-32]!
0xffff5822d568   680  stp x18, lr, [jssp, #16]
0xffff5822d56c   684  stp x10, x11, [jssp, #-32]!
0xffff5822d570   688  stp x12, x13, [jssp, #16]
0xffff5822d574   692  stp x6, x7, [jssp, #-32]!
0xffff5822d578   696  stp x8, x9, [jssp, #16]
0xffff5822d57c   700  stp x0, x3, [jssp, #-24]!
0xffff5822d580   704  str x5, [jssp, #16]
0xffff5822d584   708  sub csp, jssp, #0xb0 (176)
0xffff5822d588   712  stp d26, d27, [jssp, #-32]!
0xffff5822d58c   716  stp d28, d29, [jssp, #16]
0xffff5822d590   720  stp d22, d23, [jssp, #-32]!
0xffff5822d594   724  stp d24, d25, [jssp, #16]
0xffff5822d598   728  stp d18, d19, [jssp, #-32]!
0xffff5822d59c   732  stp d20, d21, [jssp, #16]
0xffff5822d5a0   736  stp d6, d7, [jssp, #-32]!
0xffff5822d5a4   740  stp d16, d17, [jssp, #16]
0xffff5822d5a8   744  stp d2, d3, [jssp, #-32]!
0xffff5822d5ac   748  stp d4, d5, [jssp, #16]
0xffff5822d5b0   752  stp d0, d1, [jssp, #-16]!
0xffff5822d5b4   756  mov x1, x6
0xffff5822d5b8   760  ldr x2, pc+1048 (addr 0x0000ffff5822d9d0)    ;; external reference (isolate)
0xffff5822d5bc   764  ldr x16, pc+1052 (addr 0x0000ffff5822d9d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822d5c0   768  and csp, jssp, #0xfffffffffffffff0
0xffff5822d5c4   772  blr x16
0xffff5822d5c8   776  ldp d2, d3, [jssp, #16]
0xffff5822d5cc   780  ldp d0, d1, [jssp], #32
0xffff5822d5d0   784  ldp d6, d7, [jssp, #16]
0xffff5822d5d4   788  ldp d4, d5, [jssp], #32
0xffff5822d5d8   792  ldp d18, d19, [jssp, #16]
0xffff5822d5dc   796  ldp d16, d17, [jssp], #32
0xffff5822d5e0   800  ldp d22, d23, [jssp, #16]
0xffff5822d5e4   804  ldp d20, d21, [jssp], #32
0xffff5822d5e8   808  ldp d26, d27, [jssp, #16]
0xffff5822d5ec   812  ldp d24, d25, [jssp], #32
0xffff5822d5f0   816  ldp d28, d29, [jssp], #16
0xffff5822d5f4   820  ldp x5, x6, [jssp, #16]
0xffff5822d5f8   824  ldp x0, x3, [jssp], #32
0xffff5822d5fc   828  ldp x9, x10, [jssp, #16]
0xffff5822d600   832  ldp x7, x8, [jssp], #32
0xffff5822d604   836  ldp x13, x14, [jssp, #16]
0xffff5822d608   840  ldp x11, x12, [jssp], #32
0xffff5822d60c   844  ldr lr, [jssp, #16]
0xffff5822d610   848  ldp x15, x18, [jssp], #24
0xffff5822d614   852  ldp x2, x1, [jssp], #16
0xffff5822d618   856  ret
0xffff5822d61c   860  sub csp, jssp, #0x10 (16)
0xffff5822d620   864  stp x2, x1, [jssp, #-16]!
0xffff5822d624   868  ldr x4, [x6]
0xffff5822d628   872  and x16, x4, #0xfffffffffff00000
0xffff5822d62c   876  ldr x16, [x16, #8]
0xffff5822d630   880  tst x16, #0x18
0xffff5822d634   884  b.eq #+0x1f4 (addr 0xffff5822d828)
0xffff5822d638   888  and x16, x0, #0xfffffffffff00000
0xffff5822d63c   892  ldr x16, [x16, #8]
0xffff5822d640   896  tst x16, #0x18
0xffff5822d644   900  b.ne #+0x1e4 (addr 0xffff5822d828)
0xffff5822d648   904  and x4, x0, #0xfffffffffff00000
0xffff5822d64c   908  ldr x1, [x4, #104]
0xffff5822d650   912  subs x1, x1, #0x1 (1)
0xffff5822d654   916  str x1, [x4, #104]
0xffff5822d658   920  b.mi #+0xe4 (addr 0xffff5822d73c)
0xffff5822d65c   924  ubfx x16, x0, #8, #12
0xffff5822d660   928  and x4, x0, #0xfffffffffff00000
0xffff5822d664   932  add x4, x4, x16, lsl #2
0xffff5822d668   936  ubfx x1, x0, #3, #5
0xffff5822d66c   940  ldr x4, [x4, #360]
0xffff5822d670   944  lsr x4, x4, x1
0xffff5822d674   948  tbz w4, #0, #+0x8 (addr 0xffff5822d67c)
0xffff5822d678   952  tbnz w4, #1, #+0x3c (addr 0xffff5822d6b4)
0xffff5822d67c   956  ldp x2, x1, [jssp], #16
0xffff5822d680   960  ldr x16, pc+864 (addr 0x0000ffff5822d9e0)    ;; external reference (store_buffer_top)
0xffff5822d684   964  ldr x4, [x16]
0xffff5822d688   968  str x6, [x4], #8
0xffff5822d68c   972  str x4, [x16]
0xffff5822d690   976  tst x4, #0x1ffff
0xffff5822d694   980  b.eq #+0x8 (addr 0xffff5822d69c)
0xffff5822d698   984  ret
0xffff5822d69c   988  sub csp, jssp, #0x8 (8)
0xffff5822d6a0   992  str lr, [jssp, #-8]!
0xffff5822d6a4   996  ldr x17, pc+836 (addr 0x0000ffff5822d9e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822d6a8  1000  blr x17
0xffff5822d6ac  1004  ldr lr, [jssp], #8
0xffff5822d6b0  1008  ret
0xffff5822d6b4  1012  ldr x4, [x6]
0xffff5822d6b8  1016  and x1, x4, #0xfffffffffff00000
0xffff5822d6bc  1020  ldr x1, [x1, #8]
0xffff5822d6c0  1024  tbz w1, #6, #+0x18 (addr 0xffff5822d6d8)
0xffff5822d6c4  1028  and x1, x0, #0xfffffffffff00000
0xffff5822d6c8  1032  ldr x1, [x1, #8]
0xffff5822d6cc  1036  movz x16, #0x58
0xffff5822d6d0  1040  tst x1, x16
0xffff5822d6d4  1044  b.eq #+0x68 (addr 0xffff5822d73c)
0xffff5822d6d8  1048  sub csp, jssp, #0x10 (16)
0xffff5822d6dc  1052  stp x0, x6, [jssp, #-16]!
0xffff5822d6e0  1056  ubfx x16, x4, #8, #12
0xffff5822d6e4  1060  and x1, x4, #0xfffffffffff00000
0xffff5822d6e8  1064  add x1, x1, x16, lsl #2
0xffff5822d6ec  1068  ubfx x0, x4, #3, #5
0xffff5822d6f0  1072  ldr x6, [x1, #360]
0xffff5822d6f4  1076  lsr x6, x6, x0
0xffff5822d6f8  1080  tbz w6, #0, #+0x40 (addr 0xffff5822d738)
0xffff5822d6fc  1084  ldp x0, x6, [jssp], #16
0xffff5822d700  1088  ldp x2, x1, [jssp], #16
0xffff5822d704  1092  ldr x16, pc+748 (addr 0x0000ffff5822d9f0)    ;; external reference (store_buffer_top)
0xffff5822d708  1096  ldr x4, [x16]
0xffff5822d70c  1100  str x6, [x4], #8
0xffff5822d710  1104  str x4, [x16]
0xffff5822d714  1108  tst x4, #0x1ffff
0xffff5822d718  1112  b.eq #+0x8 (addr 0xffff5822d720)
0xffff5822d71c  1116  ret
0xffff5822d720  1120  sub csp, jssp, #0x8 (8)
0xffff5822d724  1124  str lr, [jssp, #-8]!
0xffff5822d728  1128  ldr x17, pc+720 (addr 0x0000ffff5822d9f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822d72c  1132  blr x17
0xffff5822d730  1136  ldr lr, [jssp], #8
0xffff5822d734  1140  ret
0xffff5822d738  1144  ldp x0, x6, [jssp], #16
0xffff5822d73c  1148  sub csp, jssp, #0x78 (120)
0xffff5822d740  1152  stp x14, x15, [jssp, #-32]!
0xffff5822d744  1156  stp x18, lr, [jssp, #16]
0xffff5822d748  1160  stp x10, x11, [jssp, #-32]!
0xffff5822d74c  1164  stp x12, x13, [jssp, #16]
0xffff5822d750  1168  stp x6, x7, [jssp, #-32]!
0xffff5822d754  1172  stp x8, x9, [jssp, #16]
0xffff5822d758  1176  stp x0, x3, [jssp, #-24]!
0xffff5822d75c  1180  str x5, [jssp, #16]
0xffff5822d760  1184  sub csp, jssp, #0xb0 (176)
0xffff5822d764  1188  stp d26, d27, [jssp, #-32]!
0xffff5822d768  1192  stp d28, d29, [jssp, #16]
0xffff5822d76c  1196  stp d22, d23, [jssp, #-32]!
0xffff5822d770  1200  stp d24, d25, [jssp, #16]
0xffff5822d774  1204  stp d18, d19, [jssp, #-32]!
0xffff5822d778  1208  stp d20, d21, [jssp, #16]
0xffff5822d77c  1212  stp d6, d7, [jssp, #-32]!
0xffff5822d780  1216  stp d16, d17, [jssp, #16]
0xffff5822d784  1220  stp d2, d3, [jssp, #-32]!
0xffff5822d788  1224  stp d4, d5, [jssp, #16]
0xffff5822d78c  1228  stp d0, d1, [jssp, #-16]!
0xffff5822d790  1232  mov x1, x6
0xffff5822d794  1236  ldr x2, pc+620 (addr 0x0000ffff5822da00)    ;; external reference (isolate)
0xffff5822d798  1240  ldr x16, pc+624 (addr 0x0000ffff5822da08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822d79c  1244  and csp, jssp, #0xfffffffffffffff0
0xffff5822d7a0  1248  blr x16
0xffff5822d7a4  1252  ldp d2, d3, [jssp, #16]
0xffff5822d7a8  1256  ldp d0, d1, [jssp], #32
0xffff5822d7ac  1260  ldp d6, d7, [jssp, #16]
0xffff5822d7b0  1264  ldp d4, d5, [jssp], #32
0xffff5822d7b4  1268  ldp d18, d19, [jssp, #16]
0xffff5822d7b8  1272  ldp d16, d17, [jssp], #32
0xffff5822d7bc  1276  ldp d22, d23, [jssp, #16]
0xffff5822d7c0  1280  ldp d20, d21, [jssp], #32
0xffff5822d7c4  1284  ldp d26, d27, [jssp, #16]
0xffff5822d7c8  1288  ldp d24, d25, [jssp], #32
0xffff5822d7cc  1292  ldp d28, d29, [jssp], #16
0xffff5822d7d0  1296  ldp x5, x6, [jssp, #16]
0xffff5822d7d4  1300  ldp x0, x3, [jssp], #32
0xffff5822d7d8  1304  ldp x9, x10, [jssp, #16]
0xffff5822d7dc  1308  ldp x7, x8, [jssp], #32
0xffff5822d7e0  1312  ldp x13, x14, [jssp, #16]
0xffff5822d7e4  1316  ldp x11, x12, [jssp], #32
0xffff5822d7e8  1320  ldr lr, [jssp, #16]
0xffff5822d7ec  1324  ldp x15, x18, [jssp], #24
0xffff5822d7f0  1328  ldp x2, x1, [jssp], #16
0xffff5822d7f4  1332  ldr x16, pc+540 (addr 0x0000ffff5822da10)    ;; external reference (store_buffer_top)
0xffff5822d7f8  1336  ldr x4, [x16]
0xffff5822d7fc  1340  str x6, [x4], #8
0xffff5822d800  1344  str x4, [x16]
0xffff5822d804  1348  tst x4, #0x1ffff
0xffff5822d808  1352  b.eq #+0x8 (addr 0xffff5822d810)
0xffff5822d80c  1356  ret
0xffff5822d810  1360  sub csp, jssp, #0x8 (8)
0xffff5822d814  1364  str lr, [jssp, #-8]!
0xffff5822d818  1368  ldr x17, pc+512 (addr 0x0000ffff5822da18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822d81c  1372  blr x17
0xffff5822d820  1376  ldr lr, [jssp], #8
0xffff5822d824  1380  ret
0xffff5822d828  1384  and x4, x0, #0xfffffffffff00000
0xffff5822d82c  1388  ldr x1, [x4, #104]
0xffff5822d830  1392  subs x1, x1, #0x1 (1)
0xffff5822d834  1396  str x1, [x4, #104]
0xffff5822d838  1400  b.mi #+0x84 (addr 0xffff5822d8bc)
0xffff5822d83c  1404  ubfx x16, x0, #8, #12
0xffff5822d840  1408  and x4, x0, #0xfffffffffff00000
0xffff5822d844  1412  add x4, x4, x16, lsl #2
0xffff5822d848  1416  ubfx x1, x0, #3, #5
0xffff5822d84c  1420  ldr x4, [x4, #360]
0xffff5822d850  1424  lsr x4, x4, x1
0xffff5822d854  1428  tbz w4, #0, #+0x8 (addr 0xffff5822d85c)
0xffff5822d858  1432  tbnz w4, #1, #+0xc (addr 0xffff5822d864)
0xffff5822d85c  1436  ldp x2, x1, [jssp], #16
0xffff5822d860  1440  ret
0xffff5822d864  1444  ldr x4, [x6]
0xffff5822d868  1448  and x1, x4, #0xfffffffffff00000
0xffff5822d86c  1452  ldr x1, [x1, #8]
0xffff5822d870  1456  tbz w1, #6, #+0x18 (addr 0xffff5822d888)
0xffff5822d874  1460  and x1, x0, #0xfffffffffff00000
0xffff5822d878  1464  ldr x1, [x1, #8]
0xffff5822d87c  1468  movz x16, #0x58
0xffff5822d880  1472  tst x1, x16
0xffff5822d884  1476  b.eq #+0x38 (addr 0xffff5822d8bc)
0xffff5822d888  1480  sub csp, jssp, #0x10 (16)
0xffff5822d88c  1484  stp x0, x6, [jssp, #-16]!
0xffff5822d890  1488  ubfx x16, x4, #8, #12
0xffff5822d894  1492  and x1, x4, #0xfffffffffff00000
0xffff5822d898  1496  add x1, x1, x16, lsl #2
0xffff5822d89c  1500  ubfx x0, x4, #3, #5
0xffff5822d8a0  1504  ldr x6, [x1, #360]
0xffff5822d8a4  1508  lsr x6, x6, x0
0xffff5822d8a8  1512  tbz w6, #0, #+0x10 (addr 0xffff5822d8b8)
0xffff5822d8ac  1516  ldp x0, x6, [jssp], #16
0xffff5822d8b0  1520  ldp x2, x1, [jssp], #16
0xffff5822d8b4  1524  ret
0xffff5822d8b8  1528  ldp x0, x6, [jssp], #16
0xffff5822d8bc  1532  sub csp, jssp, #0x78 (120)
0xffff5822d8c0  1536  stp x14, x15, [jssp, #-32]!
0xffff5822d8c4  1540  stp x18, lr, [jssp, #16]
0xffff5822d8c8  1544  stp x10, x11, [jssp, #-32]!
0xffff5822d8cc  1548  stp x12, x13, [jssp, #16]
0xffff5822d8d0  1552  stp x6, x7, [jssp, #-32]!
0xffff5822d8d4  1556  stp x8, x9, [jssp, #16]
0xffff5822d8d8  1560  stp x0, x3, [jssp, #-24]!
0xffff5822d8dc  1564  str x5, [jssp, #16]
0xffff5822d8e0  1568  sub csp, jssp, #0xb0 (176)
0xffff5822d8e4  1572  stp d26, d27, [jssp, #-32]!
0xffff5822d8e8  1576  stp d28, d29, [jssp, #16]
0xffff5822d8ec  1580  stp d22, d23, [jssp, #-32]!
0xffff5822d8f0  1584  stp d24, d25, [jssp, #16]
0xffff5822d8f4  1588  stp d18, d19, [jssp, #-32]!
0xffff5822d8f8  1592  stp d20, d21, [jssp, #16]
0xffff5822d8fc  1596  stp d6, d7, [jssp, #-32]!
0xffff5822d900  1600  stp d16, d17, [jssp, #16]
0xffff5822d904  1604  stp d2, d3, [jssp, #-32]!
0xffff5822d908  1608  stp d4, d5, [jssp, #16]
0xffff5822d90c  1612  stp d0, d1, [jssp, #-16]!
0xffff5822d910  1616  mov x1, x6
0xffff5822d914  1620  ldr x2, pc+268 (addr 0x0000ffff5822da20)    ;; external reference (isolate)
0xffff5822d918  1624  ldr x16, pc+272 (addr 0x0000ffff5822da28)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822d91c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff5822d920  1632  blr x16
0xffff5822d924  1636  ldp d2, d3, [jssp, #16]
0xffff5822d928  1640  ldp d0, d1, [jssp], #32
0xffff5822d92c  1644  ldp d6, d7, [jssp, #16]
0xffff5822d930  1648  ldp d4, d5, [jssp], #32
0xffff5822d934  1652  ldp d18, d19, [jssp, #16]
0xffff5822d938  1656  ldp d16, d17, [jssp], #32
0xffff5822d93c  1660  ldp d22, d23, [jssp, #16]
0xffff5822d940  1664  ldp d20, d21, [jssp], #32
0xffff5822d944  1668  ldp d26, d27, [jssp, #16]
0xffff5822d948  1672  ldp d24, d25, [jssp], #32
0xffff5822d94c  1676  ldp d28, d29, [jssp], #16
0xffff5822d950  1680  ldp x5, x6, [jssp, #16]
0xffff5822d954  1684  ldp x0, x3, [jssp], #32
0xffff5822d958  1688  ldp x9, x10, [jssp, #16]
0xffff5822d95c  1692  ldp x7, x8, [jssp], #32
0xffff5822d960  1696  ldp x13, x14, [jssp, #16]
0xffff5822d964  1700  ldp x11, x12, [jssp], #32
0xffff5822d968  1704  ldr lr, [jssp, #16]
0xffff5822d96c  1708  ldp x15, x18, [jssp], #24
0xffff5822d970  1712  ldp x2, x1, [jssp], #16
0xffff5822d974  1716  ret
0xffff5822d978  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5822d97c  1724  d63f03e0       constant
0xffff5822d980  1728  16e798c0       constant
0xffff5822d984  1732  00000000       constant
0xffff5822d988  1736  582065a0       constant
0xffff5822d98c  1740  0000ffff       constant
0xffff5822d990  1744  16e798c0       constant
0xffff5822d994  1748  00000000       constant
0xffff5822d998  1752  582065a0       constant
0xffff5822d99c  1756  0000ffff       constant
0xffff5822d9a0  1760  16e798c0       constant
0xffff5822d9a4  1764  00000000       constant
0xffff5822d9a8  1768  582065a0       constant
0xffff5822d9ac  1772  0000ffff       constant
0xffff5822d9b0  1776  16e782d0       constant
0xffff5822d9b4  1780  00000000       constant
0xffff5822d9b8  1784  00c2d958       constant
0xffff5822d9bc  1788  00000000       constant
0xffff5822d9c0  1792  16e798c0       constant
0xffff5822d9c4  1796  00000000       constant
0xffff5822d9c8  1800  582065a0       constant
0xffff5822d9cc  1804  0000ffff       constant
0xffff5822d9d0  1808  16e782d0       constant
0xffff5822d9d4  1812  00000000       constant
0xffff5822d9d8  1816  00c2d958       constant
0xffff5822d9dc  1820  00000000       constant
0xffff5822d9e0  1824  16e798c0       constant
0xffff5822d9e4  1828  00000000       constant
0xffff5822d9e8  1832  582065a0       constant
0xffff5822d9ec  1836  0000ffff       constant
0xffff5822d9f0  1840  16e798c0       constant
0xffff5822d9f4  1844  00000000       constant
0xffff5822d9f8  1848  582065a0       constant
0xffff5822d9fc  1852  0000ffff       constant
0xffff5822da00  1856  16e782d0       constant
0xffff5822da04  1860  00000000       constant
0xffff5822da08  1864  00c2d958       constant
0xffff5822da0c  1868  00000000       constant
0xffff5822da10  1872  16e798c0       constant
0xffff5822da14  1876  00000000       constant
0xffff5822da18  1880  582065a0       constant
0xffff5822da1c  1884  0000ffff       constant
0xffff5822da20  1888  16e782d0       constant
0xffff5822da24  1892  00000000       constant
0xffff5822da28  1896  00c2d958       constant
0xffff5822da2c  1900  00000000       constant


RelocInfo (size = 65)
0xffff5822d2c8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822d2ec  code target (STUB)  (0xffff582065a0)
0xffff5822d364  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822d388  code target (STUB)  (0xffff582065a0)
0xffff5822d3c8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822d3ec  code target (STUB)  (0xffff582065a0)
0xffff5822d458  external reference (isolate)  (0x16e782d0)
0xffff5822d45c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822d4b8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822d4dc  code target (STUB)  (0xffff582065a0)
0xffff5822d5b8  external reference (isolate)  (0x16e782d0)
0xffff5822d5bc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822d680  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822d6a4  code target (STUB)  (0xffff582065a0)
0xffff5822d704  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822d728  code target (STUB)  (0xffff582065a0)
0xffff5822d794  external reference (isolate)  (0x16e782d0)
0xffff5822d798  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822d7f4  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822d818  code target (STUB)  (0xffff582065a0)
0xffff5822d914  external reference (isolate)  (0x16e782d0)
0xffff5822d918  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822d978  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff5822daa0     0  adr xzr, #+0x40 (addr 0xffff5822dae0)
0xffff5822daa4     4  adr xzr, #+0x358 (addr 0xffff5822ddfc)
0xffff5822daa8     8  ldr x16, pc+1720 (addr 0x0000ffff5822e160)    ;; external reference (store_buffer_top)
0xffff5822daac    12  ldr x1, [x16]
0xffff5822dab0    16  str x2, [x1], #8
0xffff5822dab4    20  str x1, [x16]
0xffff5822dab8    24  tst x1, #0x1ffff
0xffff5822dabc    28  b.eq #+0x8 (addr 0xffff5822dac4)
0xffff5822dac0    32  ret
0xffff5822dac4    36  sub csp, jssp, #0x8 (8)
0xffff5822dac8    40  str lr, [jssp, #-8]!
0xffff5822dacc    44  ldr x17, pc+1692 (addr 0x0000ffff5822e168)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822dad0    48  blr x17
0xffff5822dad4    52  ldr lr, [jssp], #8
0xffff5822dad8    56  ret
0xffff5822dadc    60  ret
0xffff5822dae0    64  sub csp, jssp, #0x10 (16)
0xffff5822dae4    68  stp x4, x3, [jssp, #-16]!
0xffff5822dae8    72  ldr x1, [x2]
0xffff5822daec    76  and x16, x1, #0xfffffffffff00000
0xffff5822daf0    80  ldr x16, [x16, #8]
0xffff5822daf4    84  tst x16, #0x18
0xffff5822daf8    88  b.eq #+0x1d4 (addr 0xffff5822dccc)
0xffff5822dafc    92  and x16, x0, #0xfffffffffff00000
0xffff5822db00    96  ldr x16, [x16, #8]
0xffff5822db04   100  tst x16, #0x18
0xffff5822db08   104  b.ne #+0x1c4 (addr 0xffff5822dccc)
0xffff5822db0c   108  and x1, x0, #0xfffffffffff00000
0xffff5822db10   112  ldr x3, [x1, #104]
0xffff5822db14   116  subs x3, x3, #0x1 (1)
0xffff5822db18   120  str x3, [x1, #104]
0xffff5822db1c   124  b.mi #+0xc4 (addr 0xffff5822dbe0)
0xffff5822db20   128  ubfx x16, x0, #8, #12
0xffff5822db24   132  and x1, x0, #0xfffffffffff00000
0xffff5822db28   136  add x1, x1, x16, lsl #2
0xffff5822db2c   140  ubfx x3, x0, #3, #5
0xffff5822db30   144  ldr x1, [x1, #360]
0xffff5822db34   148  lsr x1, x1, x3
0xffff5822db38   152  tbz w1, #0, #+0x8 (addr 0xffff5822db40)
0xffff5822db3c   156  tbnz w1, #1, #+0x3c (addr 0xffff5822db78)
0xffff5822db40   160  ldp x4, x3, [jssp], #16
0xffff5822db44   164  ldr x16, pc+1580 (addr 0x0000ffff5822e170)    ;; external reference (store_buffer_top)
0xffff5822db48   168  ldr x1, [x16]
0xffff5822db4c   172  str x2, [x1], #8
0xffff5822db50   176  str x1, [x16]
0xffff5822db54   180  tst x1, #0x1ffff
0xffff5822db58   184  b.eq #+0x8 (addr 0xffff5822db60)
0xffff5822db5c   188  ret
0xffff5822db60   192  sub csp, jssp, #0x8 (8)
0xffff5822db64   196  str lr, [jssp, #-8]!
0xffff5822db68   200  ldr x17, pc+1552 (addr 0x0000ffff5822e178)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822db6c   204  blr x17
0xffff5822db70   208  ldr lr, [jssp], #8
0xffff5822db74   212  ret
0xffff5822db78   216  ldr x1, [x2]
0xffff5822db7c   220  sub csp, jssp, #0x10 (16)
0xffff5822db80   224  stp x0, x2, [jssp, #-16]!
0xffff5822db84   228  ubfx x16, x1, #8, #12
0xffff5822db88   232  and x3, x1, #0xfffffffffff00000
0xffff5822db8c   236  add x3, x3, x16, lsl #2
0xffff5822db90   240  ubfx x0, x1, #3, #5
0xffff5822db94   244  ldr x2, [x3, #360]
0xffff5822db98   248  lsr x2, x2, x0
0xffff5822db9c   252  tbz w2, #0, #+0x40 (addr 0xffff5822dbdc)
0xffff5822dba0   256  ldp x0, x2, [jssp], #16
0xffff5822dba4   260  ldp x4, x3, [jssp], #16
0xffff5822dba8   264  ldr x16, pc+1496 (addr 0x0000ffff5822e180)    ;; external reference (store_buffer_top)
0xffff5822dbac   268  ldr x1, [x16]
0xffff5822dbb0   272  str x2, [x1], #8
0xffff5822dbb4   276  str x1, [x16]
0xffff5822dbb8   280  tst x1, #0x1ffff
0xffff5822dbbc   284  b.eq #+0x8 (addr 0xffff5822dbc4)
0xffff5822dbc0   288  ret
0xffff5822dbc4   292  sub csp, jssp, #0x8 (8)
0xffff5822dbc8   296  str lr, [jssp, #-8]!
0xffff5822dbcc   300  ldr x17, pc+1468 (addr 0x0000ffff5822e188)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822dbd0   304  blr x17
0xffff5822dbd4   308  ldr lr, [jssp], #8
0xffff5822dbd8   312  ret
0xffff5822dbdc   316  ldp x0, x2, [jssp], #16
0xffff5822dbe0   320  sub csp, jssp, #0x78 (120)
0xffff5822dbe4   324  stp x14, x15, [jssp, #-32]!
0xffff5822dbe8   328  stp x18, lr, [jssp, #16]
0xffff5822dbec   332  stp x10, x11, [jssp, #-32]!
0xffff5822dbf0   336  stp x12, x13, [jssp, #16]
0xffff5822dbf4   340  stp x6, x7, [jssp, #-32]!
0xffff5822dbf8   344  stp x8, x9, [jssp, #16]
0xffff5822dbfc   348  stp x0, x2, [jssp, #-24]!
0xffff5822dc00   352  str x5, [jssp, #16]
0xffff5822dc04   356  sub csp, jssp, #0xb0 (176)
0xffff5822dc08   360  stp d26, d27, [jssp, #-32]!
0xffff5822dc0c   364  stp d28, d29, [jssp, #16]
0xffff5822dc10   368  stp d22, d23, [jssp, #-32]!
0xffff5822dc14   372  stp d24, d25, [jssp, #16]
0xffff5822dc18   376  stp d18, d19, [jssp, #-32]!
0xffff5822dc1c   380  stp d20, d21, [jssp, #16]
0xffff5822dc20   384  stp d6, d7, [jssp, #-32]!
0xffff5822dc24   388  stp d16, d17, [jssp, #16]
0xffff5822dc28   392  stp d2, d3, [jssp, #-32]!
0xffff5822dc2c   396  stp d4, d5, [jssp, #16]
0xffff5822dc30   400  stp d0, d1, [jssp, #-16]!
0xffff5822dc34   404  mov x1, x2
0xffff5822dc38   408  ldr x2, pc+1368 (addr 0x0000ffff5822e190)    ;; external reference (isolate)
0xffff5822dc3c   412  ldr x16, pc+1372 (addr 0x0000ffff5822e198)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822dc40   416  and csp, jssp, #0xfffffffffffffff0
0xffff5822dc44   420  blr x16
0xffff5822dc48   424  ldp d2, d3, [jssp, #16]
0xffff5822dc4c   428  ldp d0, d1, [jssp], #32
0xffff5822dc50   432  ldp d6, d7, [jssp, #16]
0xffff5822dc54   436  ldp d4, d5, [jssp], #32
0xffff5822dc58   440  ldp d18, d19, [jssp, #16]
0xffff5822dc5c   444  ldp d16, d17, [jssp], #32
0xffff5822dc60   448  ldp d22, d23, [jssp, #16]
0xffff5822dc64   452  ldp d20, d21, [jssp], #32
0xffff5822dc68   456  ldp d26, d27, [jssp, #16]
0xffff5822dc6c   460  ldp d24, d25, [jssp], #32
0xffff5822dc70   464  ldp d28, d29, [jssp], #16
0xffff5822dc74   468  ldp x5, x6, [jssp, #16]
0xffff5822dc78   472  ldp x0, x2, [jssp], #32
0xffff5822dc7c   476  ldp x9, x10, [jssp, #16]
0xffff5822dc80   480  ldp x7, x8, [jssp], #32
0xffff5822dc84   484  ldp x13, x14, [jssp, #16]
0xffff5822dc88   488  ldp x11, x12, [jssp], #32
0xffff5822dc8c   492  ldr lr, [jssp, #16]
0xffff5822dc90   496  ldp x15, x18, [jssp], #24
0xffff5822dc94   500  ldp x4, x3, [jssp], #16
0xffff5822dc98   504  ldr x16, pc+1288 (addr 0x0000ffff5822e1a0)    ;; external reference (store_buffer_top)
0xffff5822dc9c   508  ldr x1, [x16]
0xffff5822dca0   512  str x2, [x1], #8
0xffff5822dca4   516  str x1, [x16]
0xffff5822dca8   520  tst x1, #0x1ffff
0xffff5822dcac   524  b.eq #+0x8 (addr 0xffff5822dcb4)
0xffff5822dcb0   528  ret
0xffff5822dcb4   532  sub csp, jssp, #0x8 (8)
0xffff5822dcb8   536  str lr, [jssp, #-8]!
0xffff5822dcbc   540  ldr x17, pc+1260 (addr 0x0000ffff5822e1a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822dcc0   544  blr x17
0xffff5822dcc4   548  ldr lr, [jssp], #8
0xffff5822dcc8   552  ret
0xffff5822dccc   556  and x1, x0, #0xfffffffffff00000
0xffff5822dcd0   560  ldr x3, [x1, #104]
0xffff5822dcd4   564  subs x3, x3, #0x1 (1)
0xffff5822dcd8   568  str x3, [x1, #104]
0xffff5822dcdc   572  b.mi #+0x64 (addr 0xffff5822dd40)
0xffff5822dce0   576  ubfx x16, x0, #8, #12
0xffff5822dce4   580  and x1, x0, #0xfffffffffff00000
0xffff5822dce8   584  add x1, x1, x16, lsl #2
0xffff5822dcec   588  ubfx x3, x0, #3, #5
0xffff5822dcf0   592  ldr x1, [x1, #360]
0xffff5822dcf4   596  lsr x1, x1, x3
0xffff5822dcf8   600  tbz w1, #0, #+0x8 (addr 0xffff5822dd00)
0xffff5822dcfc   604  tbnz w1, #1, #+0xc (addr 0xffff5822dd08)
0xffff5822dd00   608  ldp x4, x3, [jssp], #16
0xffff5822dd04   612  ret
0xffff5822dd08   616  ldr x1, [x2]
0xffff5822dd0c   620  sub csp, jssp, #0x10 (16)
0xffff5822dd10   624  stp x0, x2, [jssp, #-16]!
0xffff5822dd14   628  ubfx x16, x1, #8, #12
0xffff5822dd18   632  and x3, x1, #0xfffffffffff00000
0xffff5822dd1c   636  add x3, x3, x16, lsl #2
0xffff5822dd20   640  ubfx x0, x1, #3, #5
0xffff5822dd24   644  ldr x2, [x3, #360]
0xffff5822dd28   648  lsr x2, x2, x0
0xffff5822dd2c   652  tbz w2, #0, #+0x10 (addr 0xffff5822dd3c)
0xffff5822dd30   656  ldp x0, x2, [jssp], #16
0xffff5822dd34   660  ldp x4, x3, [jssp], #16
0xffff5822dd38   664  ret
0xffff5822dd3c   668  ldp x0, x2, [jssp], #16
0xffff5822dd40   672  sub csp, jssp, #0x78 (120)
0xffff5822dd44   676  stp x14, x15, [jssp, #-32]!
0xffff5822dd48   680  stp x18, lr, [jssp, #16]
0xffff5822dd4c   684  stp x10, x11, [jssp, #-32]!
0xffff5822dd50   688  stp x12, x13, [jssp, #16]
0xffff5822dd54   692  stp x6, x7, [jssp, #-32]!
0xffff5822dd58   696  stp x8, x9, [jssp, #16]
0xffff5822dd5c   700  stp x0, x2, [jssp, #-24]!
0xffff5822dd60   704  str x5, [jssp, #16]
0xffff5822dd64   708  sub csp, jssp, #0xb0 (176)
0xffff5822dd68   712  stp d26, d27, [jssp, #-32]!
0xffff5822dd6c   716  stp d28, d29, [jssp, #16]
0xffff5822dd70   720  stp d22, d23, [jssp, #-32]!
0xffff5822dd74   724  stp d24, d25, [jssp, #16]
0xffff5822dd78   728  stp d18, d19, [jssp, #-32]!
0xffff5822dd7c   732  stp d20, d21, [jssp, #16]
0xffff5822dd80   736  stp d6, d7, [jssp, #-32]!
0xffff5822dd84   740  stp d16, d17, [jssp, #16]
0xffff5822dd88   744  stp d2, d3, [jssp, #-32]!
0xffff5822dd8c   748  stp d4, d5, [jssp, #16]
0xffff5822dd90   752  stp d0, d1, [jssp, #-16]!
0xffff5822dd94   756  mov x1, x2
0xffff5822dd98   760  ldr x2, pc+1048 (addr 0x0000ffff5822e1b0)    ;; external reference (isolate)
0xffff5822dd9c   764  ldr x16, pc+1052 (addr 0x0000ffff5822e1b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822dda0   768  and csp, jssp, #0xfffffffffffffff0
0xffff5822dda4   772  blr x16
0xffff5822dda8   776  ldp d2, d3, [jssp, #16]
0xffff5822ddac   780  ldp d0, d1, [jssp], #32
0xffff5822ddb0   784  ldp d6, d7, [jssp, #16]
0xffff5822ddb4   788  ldp d4, d5, [jssp], #32
0xffff5822ddb8   792  ldp d18, d19, [jssp, #16]
0xffff5822ddbc   796  ldp d16, d17, [jssp], #32
0xffff5822ddc0   800  ldp d22, d23, [jssp, #16]
0xffff5822ddc4   804  ldp d20, d21, [jssp], #32
0xffff5822ddc8   808  ldp d26, d27, [jssp, #16]
0xffff5822ddcc   812  ldp d24, d25, [jssp], #32
0xffff5822ddd0   816  ldp d28, d29, [jssp], #16
0xffff5822ddd4   820  ldp x5, x6, [jssp, #16]
0xffff5822ddd8   824  ldp x0, x2, [jssp], #32
0xffff5822dddc   828  ldp x9, x10, [jssp, #16]
0xffff5822dde0   832  ldp x7, x8, [jssp], #32
0xffff5822dde4   836  ldp x13, x14, [jssp, #16]
0xffff5822dde8   840  ldp x11, x12, [jssp], #32
0xffff5822ddec   844  ldr lr, [jssp, #16]
0xffff5822ddf0   848  ldp x15, x18, [jssp], #24
0xffff5822ddf4   852  ldp x4, x3, [jssp], #16
0xffff5822ddf8   856  ret
0xffff5822ddfc   860  sub csp, jssp, #0x10 (16)
0xffff5822de00   864  stp x4, x3, [jssp, #-16]!
0xffff5822de04   868  ldr x1, [x2]
0xffff5822de08   872  and x16, x1, #0xfffffffffff00000
0xffff5822de0c   876  ldr x16, [x16, #8]
0xffff5822de10   880  tst x16, #0x18
0xffff5822de14   884  b.eq #+0x1f4 (addr 0xffff5822e008)
0xffff5822de18   888  and x16, x0, #0xfffffffffff00000
0xffff5822de1c   892  ldr x16, [x16, #8]
0xffff5822de20   896  tst x16, #0x18
0xffff5822de24   900  b.ne #+0x1e4 (addr 0xffff5822e008)
0xffff5822de28   904  and x1, x0, #0xfffffffffff00000
0xffff5822de2c   908  ldr x3, [x1, #104]
0xffff5822de30   912  subs x3, x3, #0x1 (1)
0xffff5822de34   916  str x3, [x1, #104]
0xffff5822de38   920  b.mi #+0xe4 (addr 0xffff5822df1c)
0xffff5822de3c   924  ubfx x16, x0, #8, #12
0xffff5822de40   928  and x1, x0, #0xfffffffffff00000
0xffff5822de44   932  add x1, x1, x16, lsl #2
0xffff5822de48   936  ubfx x3, x0, #3, #5
0xffff5822de4c   940  ldr x1, [x1, #360]
0xffff5822de50   944  lsr x1, x1, x3
0xffff5822de54   948  tbz w1, #0, #+0x8 (addr 0xffff5822de5c)
0xffff5822de58   952  tbnz w1, #1, #+0x3c (addr 0xffff5822de94)
0xffff5822de5c   956  ldp x4, x3, [jssp], #16
0xffff5822de60   960  ldr x16, pc+864 (addr 0x0000ffff5822e1c0)    ;; external reference (store_buffer_top)
0xffff5822de64   964  ldr x1, [x16]
0xffff5822de68   968  str x2, [x1], #8
0xffff5822de6c   972  str x1, [x16]
0xffff5822de70   976  tst x1, #0x1ffff
0xffff5822de74   980  b.eq #+0x8 (addr 0xffff5822de7c)
0xffff5822de78   984  ret
0xffff5822de7c   988  sub csp, jssp, #0x8 (8)
0xffff5822de80   992  str lr, [jssp, #-8]!
0xffff5822de84   996  ldr x17, pc+836 (addr 0x0000ffff5822e1c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822de88  1000  blr x17
0xffff5822de8c  1004  ldr lr, [jssp], #8
0xffff5822de90  1008  ret
0xffff5822de94  1012  ldr x1, [x2]
0xffff5822de98  1016  and x3, x1, #0xfffffffffff00000
0xffff5822de9c  1020  ldr x3, [x3, #8]
0xffff5822dea0  1024  tbz w3, #6, #+0x18 (addr 0xffff5822deb8)
0xffff5822dea4  1028  and x3, x0, #0xfffffffffff00000
0xffff5822dea8  1032  ldr x3, [x3, #8]
0xffff5822deac  1036  movz x16, #0x58
0xffff5822deb0  1040  tst x3, x16
0xffff5822deb4  1044  b.eq #+0x68 (addr 0xffff5822df1c)
0xffff5822deb8  1048  sub csp, jssp, #0x10 (16)
0xffff5822debc  1052  stp x0, x2, [jssp, #-16]!
0xffff5822dec0  1056  ubfx x16, x1, #8, #12
0xffff5822dec4  1060  and x3, x1, #0xfffffffffff00000
0xffff5822dec8  1064  add x3, x3, x16, lsl #2
0xffff5822decc  1068  ubfx x0, x1, #3, #5
0xffff5822ded0  1072  ldr x2, [x3, #360]
0xffff5822ded4  1076  lsr x2, x2, x0
0xffff5822ded8  1080  tbz w2, #0, #+0x40 (addr 0xffff5822df18)
0xffff5822dedc  1084  ldp x0, x2, [jssp], #16
0xffff5822dee0  1088  ldp x4, x3, [jssp], #16
0xffff5822dee4  1092  ldr x16, pc+748 (addr 0x0000ffff5822e1d0)    ;; external reference (store_buffer_top)
0xffff5822dee8  1096  ldr x1, [x16]
0xffff5822deec  1100  str x2, [x1], #8
0xffff5822def0  1104  str x1, [x16]
0xffff5822def4  1108  tst x1, #0x1ffff
0xffff5822def8  1112  b.eq #+0x8 (addr 0xffff5822df00)
0xffff5822defc  1116  ret
0xffff5822df00  1120  sub csp, jssp, #0x8 (8)
0xffff5822df04  1124  str lr, [jssp, #-8]!
0xffff5822df08  1128  ldr x17, pc+720 (addr 0x0000ffff5822e1d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822df0c  1132  blr x17
0xffff5822df10  1136  ldr lr, [jssp], #8
0xffff5822df14  1140  ret
0xffff5822df18  1144  ldp x0, x2, [jssp], #16
0xffff5822df1c  1148  sub csp, jssp, #0x78 (120)
0xffff5822df20  1152  stp x14, x15, [jssp, #-32]!
0xffff5822df24  1156  stp x18, lr, [jssp, #16]
0xffff5822df28  1160  stp x10, x11, [jssp, #-32]!
0xffff5822df2c  1164  stp x12, x13, [jssp, #16]
0xffff5822df30  1168  stp x6, x7, [jssp, #-32]!
0xffff5822df34  1172  stp x8, x9, [jssp, #16]
0xffff5822df38  1176  stp x0, x2, [jssp, #-24]!
0xffff5822df3c  1180  str x5, [jssp, #16]
0xffff5822df40  1184  sub csp, jssp, #0xb0 (176)
0xffff5822df44  1188  stp d26, d27, [jssp, #-32]!
0xffff5822df48  1192  stp d28, d29, [jssp, #16]
0xffff5822df4c  1196  stp d22, d23, [jssp, #-32]!
0xffff5822df50  1200  stp d24, d25, [jssp, #16]
0xffff5822df54  1204  stp d18, d19, [jssp, #-32]!
0xffff5822df58  1208  stp d20, d21, [jssp, #16]
0xffff5822df5c  1212  stp d6, d7, [jssp, #-32]!
0xffff5822df60  1216  stp d16, d17, [jssp, #16]
0xffff5822df64  1220  stp d2, d3, [jssp, #-32]!
0xffff5822df68  1224  stp d4, d5, [jssp, #16]
0xffff5822df6c  1228  stp d0, d1, [jssp, #-16]!
0xffff5822df70  1232  mov x1, x2
0xffff5822df74  1236  ldr x2, pc+620 (addr 0x0000ffff5822e1e0)    ;; external reference (isolate)
0xffff5822df78  1240  ldr x16, pc+624 (addr 0x0000ffff5822e1e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822df7c  1244  and csp, jssp, #0xfffffffffffffff0
0xffff5822df80  1248  blr x16
0xffff5822df84  1252  ldp d2, d3, [jssp, #16]
0xffff5822df88  1256  ldp d0, d1, [jssp], #32
0xffff5822df8c  1260  ldp d6, d7, [jssp, #16]
0xffff5822df90  1264  ldp d4, d5, [jssp], #32
0xffff5822df94  1268  ldp d18, d19, [jssp, #16]
0xffff5822df98  1272  ldp d16, d17, [jssp], #32
0xffff5822df9c  1276  ldp d22, d23, [jssp, #16]
0xffff5822dfa0  1280  ldp d20, d21, [jssp], #32
0xffff5822dfa4  1284  ldp d26, d27, [jssp, #16]
0xffff5822dfa8  1288  ldp d24, d25, [jssp], #32
0xffff5822dfac  1292  ldp d28, d29, [jssp], #16
0xffff5822dfb0  1296  ldp x5, x6, [jssp, #16]
0xffff5822dfb4  1300  ldp x0, x2, [jssp], #32
0xffff5822dfb8  1304  ldp x9, x10, [jssp, #16]
0xffff5822dfbc  1308  ldp x7, x8, [jssp], #32
0xffff5822dfc0  1312  ldp x13, x14, [jssp, #16]
0xffff5822dfc4  1316  ldp x11, x12, [jssp], #32
0xffff5822dfc8  1320  ldr lr, [jssp, #16]
0xffff5822dfcc  1324  ldp x15, x18, [jssp], #24
0xffff5822dfd0  1328  ldp x4, x3, [jssp], #16
0xffff5822dfd4  1332  ldr x16, pc+540 (addr 0x0000ffff5822e1f0)    ;; external reference (store_buffer_top)
0xffff5822dfd8  1336  ldr x1, [x16]
0xffff5822dfdc  1340  str x2, [x1], #8
0xffff5822dfe0  1344  str x1, [x16]
0xffff5822dfe4  1348  tst x1, #0x1ffff
0xffff5822dfe8  1352  b.eq #+0x8 (addr 0xffff5822dff0)
0xffff5822dfec  1356  ret
0xffff5822dff0  1360  sub csp, jssp, #0x8 (8)
0xffff5822dff4  1364  str lr, [jssp, #-8]!
0xffff5822dff8  1368  ldr x17, pc+512 (addr 0x0000ffff5822e1f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5822dffc  1372  blr x17
0xffff5822e000  1376  ldr lr, [jssp], #8
0xffff5822e004  1380  ret
0xffff5822e008  1384  and x1, x0, #0xfffffffffff00000
0xffff5822e00c  1388  ldr x3, [x1, #104]
0xffff5822e010  1392  subs x3, x3, #0x1 (1)
0xffff5822e014  1396  str x3, [x1, #104]
0xffff5822e018  1400  b.mi #+0x84 (addr 0xffff5822e09c)
0xffff5822e01c  1404  ubfx x16, x0, #8, #12
0xffff5822e020  1408  and x1, x0, #0xfffffffffff00000
0xffff5822e024  1412  add x1, x1, x16, lsl #2
0xffff5822e028  1416  ubfx x3, x0, #3, #5
0xffff5822e02c  1420  ldr x1, [x1, #360]
0xffff5822e030  1424  lsr x1, x1, x3
0xffff5822e034  1428  tbz w1, #0, #+0x8 (addr 0xffff5822e03c)
0xffff5822e038  1432  tbnz w1, #1, #+0xc (addr 0xffff5822e044)
0xffff5822e03c  1436  ldp x4, x3, [jssp], #16
0xffff5822e040  1440  ret
0xffff5822e044  1444  ldr x1, [x2]
0xffff5822e048  1448  and x3, x1, #0xfffffffffff00000
0xffff5822e04c  1452  ldr x3, [x3, #8]
0xffff5822e050  1456  tbz w3, #6, #+0x18 (addr 0xffff5822e068)
0xffff5822e054  1460  and x3, x0, #0xfffffffffff00000
0xffff5822e058  1464  ldr x3, [x3, #8]
0xffff5822e05c  1468  movz x16, #0x58
0xffff5822e060  1472  tst x3, x16
0xffff5822e064  1476  b.eq #+0x38 (addr 0xffff5822e09c)
0xffff5822e068  1480  sub csp, jssp, #0x10 (16)
0xffff5822e06c  1484  stp x0, x2, [jssp, #-16]!
0xffff5822e070  1488  ubfx x16, x1, #8, #12
0xffff5822e074  1492  and x3, x1, #0xfffffffffff00000
0xffff5822e078  1496  add x3, x3, x16, lsl #2
0xffff5822e07c  1500  ubfx x0, x1, #3, #5
0xffff5822e080  1504  ldr x2, [x3, #360]
0xffff5822e084  1508  lsr x2, x2, x0
0xffff5822e088  1512  tbz w2, #0, #+0x10 (addr 0xffff5822e098)
0xffff5822e08c  1516  ldp x0, x2, [jssp], #16
0xffff5822e090  1520  ldp x4, x3, [jssp], #16
0xffff5822e094  1524  ret
0xffff5822e098  1528  ldp x0, x2, [jssp], #16
0xffff5822e09c  1532  sub csp, jssp, #0x78 (120)
0xffff5822e0a0  1536  stp x14, x15, [jssp, #-32]!
0xffff5822e0a4  1540  stp x18, lr, [jssp, #16]
0xffff5822e0a8  1544  stp x10, x11, [jssp, #-32]!
0xffff5822e0ac  1548  stp x12, x13, [jssp, #16]
0xffff5822e0b0  1552  stp x6, x7, [jssp, #-32]!
0xffff5822e0b4  1556  stp x8, x9, [jssp, #16]
0xffff5822e0b8  1560  stp x0, x2, [jssp, #-24]!
0xffff5822e0bc  1564  str x5, [jssp, #16]
0xffff5822e0c0  1568  sub csp, jssp, #0xb0 (176)
0xffff5822e0c4  1572  stp d26, d27, [jssp, #-32]!
0xffff5822e0c8  1576  stp d28, d29, [jssp, #16]
0xffff5822e0cc  1580  stp d22, d23, [jssp, #-32]!
0xffff5822e0d0  1584  stp d24, d25, [jssp, #16]
0xffff5822e0d4  1588  stp d18, d19, [jssp, #-32]!
0xffff5822e0d8  1592  stp d20, d21, [jssp, #16]
0xffff5822e0dc  1596  stp d6, d7, [jssp, #-32]!
0xffff5822e0e0  1600  stp d16, d17, [jssp, #16]
0xffff5822e0e4  1604  stp d2, d3, [jssp, #-32]!
0xffff5822e0e8  1608  stp d4, d5, [jssp, #16]
0xffff5822e0ec  1612  stp d0, d1, [jssp, #-16]!
0xffff5822e0f0  1616  mov x1, x2
0xffff5822e0f4  1620  ldr x2, pc+268 (addr 0x0000ffff5822e200)    ;; external reference (isolate)
0xffff5822e0f8  1624  ldr x16, pc+272 (addr 0x0000ffff5822e208)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822e0fc  1628  and csp, jssp, #0xfffffffffffffff0
0xffff5822e100  1632  blr x16
0xffff5822e104  1636  ldp d2, d3, [jssp, #16]
0xffff5822e108  1640  ldp d0, d1, [jssp], #32
0xffff5822e10c  1644  ldp d6, d7, [jssp, #16]
0xffff5822e110  1648  ldp d4, d5, [jssp], #32
0xffff5822e114  1652  ldp d18, d19, [jssp, #16]
0xffff5822e118  1656  ldp d16, d17, [jssp], #32
0xffff5822e11c  1660  ldp d22, d23, [jssp, #16]
0xffff5822e120  1664  ldp d20, d21, [jssp], #32
0xffff5822e124  1668  ldp d26, d27, [jssp, #16]
0xffff5822e128  1672  ldp d24, d25, [jssp], #32
0xffff5822e12c  1676  ldp d28, d29, [jssp], #16
0xffff5822e130  1680  ldp x5, x6, [jssp, #16]
0xffff5822e134  1684  ldp x0, x2, [jssp], #32
0xffff5822e138  1688  ldp x9, x10, [jssp, #16]
0xffff5822e13c  1692  ldp x7, x8, [jssp], #32
0xffff5822e140  1696  ldp x13, x14, [jssp, #16]
0xffff5822e144  1700  ldp x11, x12, [jssp], #32
0xffff5822e148  1704  ldr lr, [jssp, #16]
0xffff5822e14c  1708  ldp x15, x18, [jssp], #24
0xffff5822e150  1712  ldp x4, x3, [jssp], #16
0xffff5822e154  1716  ret
0xffff5822e158  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5822e15c  1724  d63f03e0       constant
0xffff5822e160  1728  16e798c0       constant
0xffff5822e164  1732  00000000       constant
0xffff5822e168  1736  582065a0       constant
0xffff5822e16c  1740  0000ffff       constant
0xffff5822e170  1744  16e798c0       constant
0xffff5822e174  1748  00000000       constant
0xffff5822e178  1752  582065a0       constant
0xffff5822e17c  1756  0000ffff       constant
0xffff5822e180  1760  16e798c0       constant
0xffff5822e184  1764  00000000       constant
0xffff5822e188  1768  582065a0       constant
0xffff5822e18c  1772  0000ffff       constant
0xffff5822e190  1776  16e782d0       constant
0xffff5822e194  1780  00000000       constant
0xffff5822e198  1784  00c2d958       constant
0xffff5822e19c  1788  00000000       constant
0xffff5822e1a0  1792  16e798c0       constant
0xffff5822e1a4  1796  00000000       constant
0xffff5822e1a8  1800  582065a0       constant
0xffff5822e1ac  1804  0000ffff       constant
0xffff5822e1b0  1808  16e782d0       constant
0xffff5822e1b4  1812  00000000       constant
0xffff5822e1b8  1816  00c2d958       constant
0xffff5822e1bc  1820  00000000       constant
0xffff5822e1c0  1824  16e798c0       constant
0xffff5822e1c4  1828  00000000       constant
0xffff5822e1c8  1832  582065a0       constant
0xffff5822e1cc  1836  0000ffff       constant
0xffff5822e1d0  1840  16e798c0       constant
0xffff5822e1d4  1844  00000000       constant
0xffff5822e1d8  1848  582065a0       constant
0xffff5822e1dc  1852  0000ffff       constant
0xffff5822e1e0  1856  16e782d0       constant
0xffff5822e1e4  1860  00000000       constant
0xffff5822e1e8  1864  00c2d958       constant
0xffff5822e1ec  1868  00000000       constant
0xffff5822e1f0  1872  16e798c0       constant
0xffff5822e1f4  1876  00000000       constant
0xffff5822e1f8  1880  582065a0       constant
0xffff5822e1fc  1884  0000ffff       constant
0xffff5822e200  1888  16e782d0       constant
0xffff5822e204  1892  00000000       constant
0xffff5822e208  1896  00c2d958       constant
0xffff5822e20c  1900  00000000       constant


RelocInfo (size = 65)
0xffff5822daa8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822dacc  code target (STUB)  (0xffff582065a0)
0xffff5822db44  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822db68  code target (STUB)  (0xffff582065a0)
0xffff5822dba8  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822dbcc  code target (STUB)  (0xffff582065a0)
0xffff5822dc38  external reference (isolate)  (0x16e782d0)
0xffff5822dc3c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822dc98  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822dcbc  code target (STUB)  (0xffff582065a0)
0xffff5822dd98  external reference (isolate)  (0x16e782d0)
0xffff5822dd9c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822de60  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822de84  code target (STUB)  (0xffff582065a0)
0xffff5822dee4  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822df08  code target (STUB)  (0xffff582065a0)
0xffff5822df74  external reference (isolate)  (0x16e782d0)
0xffff5822df78  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822dfd4  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822dff8  code target (STUB)  (0xffff582065a0)
0xffff5822e0f4  external reference (isolate)  (0x16e782d0)
0xffff5822e0f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822e158  constant pool (size 184)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff5822e280     0  movz x1, #0x92c0
0xffff5822e284     4  movk x1, #0x16e7, lsl #16
0xffff5822e288     8  ldp x3, x0, [x1]
0xffff5822e28c    12  adds x16, x3, #0x48 (72)
0xffff5822e290    16  ccmp x16, x0, #nzCv, lo
0xffff5822e294    20  b.hi #+0x1bc (addr 0xffff5822e450)
0xffff5822e298    24  str x16, [x1]
0xffff5822e29c    28  orr x3, x3, #0x1
0xffff5822e2a0    32  ldur x0, [cp, #39]
0xffff5822e2a4    36  movz x16, #0x2cf
0xffff5822e2a8    40  ldr x1, [x0, x16]
0xffff5822e2ac    44  stur x1, [x3, #-1]
0xffff5822e2b0    48  ldr x1, pc+528 (addr 0x0000ffff5822e4c0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5822e2b4    52  stur x1, [x3, #7]
0xffff5822e2b8    56  ldr x1, pc+528 (addr 0x0000ffff5822e4c8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5822e2bc    60  stur x1, [x3, #15]
0xffff5822e2c0    64  ldr x1, pc+528 (addr 0x0000ffff5822e4d0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5822e2c4    68  stur x1, [x3, #47]
0xffff5822e2c8    72  ldr x1, pc+528 (addr 0x0000ffff5822e4d8)    ;; object: 0x39c04519 <the hole>
0xffff5822e2cc    76  stur x1, [x3, #23]
0xffff5822e2d0    80  stur x2, [x3, #31]
0xffff5822e2d4    84  stur cp, [x3, #39]
0xffff5822e2d8    88  ldur x1, [x2, #23]
0xffff5822e2dc    92  movz x4, #0x0
0xffff5822e2e0    96  cmp x1, x4
0xffff5822e2e4   100  b.eq #+0x150 (addr 0xffff5822e434)
0xffff5822e2e8   104  ldur w4, [x1, #11]
0xffff5822e2ec   108  subs w4, w4, #0x4 (4)
0xffff5822e2f0   112  b.vs #+0x230 (addr 0xffff5822e520)
0xffff5822e2f4   116  mov x5, x4
0xffff5822e2f8   120  cmp w5, #0x1 (1)
0xffff5822e2fc   124  b.lt #+0xb4 (addr 0xffff5822e3b0)
0xffff5822e300   128  add x4, x1, #0xf (15)
0xffff5822e304   132  ldr x6, [x4, w5, sxtw #3]
0xffff5822e308   136  ldur x4, [x6, #7]
0xffff5822e30c   140  add x6, x1, #0x27 (39)
0xffff5822e310   144  ldr x7, [x6, w5, sxtw #3]
0xffff5822e314   148  add x6, x1, #0x17 (23)
0xffff5822e318   152  ldr x8, [x6, w5, sxtw #3]
0xffff5822e31c   156  ldur x6, [x8, #7]
0xffff5822e320   160  cmp x0, x4
0xffff5822e324   164  b.ne #+0x1c (addr 0xffff5822e340)
0xffff5822e328   168  mov x4, #0xffffffff00000000
0xffff5822e32c   172  cmp x7, x4
0xffff5822e330   176  b.ne #+0x10 (addr 0xffff5822e340)
0xffff5822e334   180  movz x4, #0x0
0xffff5822e338   184  cmp x6, x4
0xffff5822e33c   188  b.ne #+0xc (addr 0xffff5822e348)
0xffff5822e340   192  sub w5, w5, #0x4 (4)
0xffff5822e344   196  b #-0x4c (addr 0xffff5822e2f8)
0xffff5822e348   200  add x4, x1, #0x1f (31)
0xffff5822e34c   204  ldr x7, [x4, w5, sxtw #3]
0xffff5822e350   208  ldur x7, [x7, #7]
0xffff5822e354   212  movz x4, #0x0
0xffff5822e358   216  cmp x7, x4
0xffff5822e35c   220  b.eq #+0x50 (addr 0xffff5822e3ac)
0xffff5822e360   224  add x4, x6, #0x5f (95)
0xffff5822e364   228  stur x4, [x3, #55]
0xffff5822e368   232  stur x7, [x3, #47]
0xffff5822e36c   236  movz x16, #0x557
0xffff5822e370   240  ldr x4, [x0, x16]
0xffff5822e374   244  stur x4, [x3, #63]
0xffff5822e378   248  mov x4, x3
0xffff5822e37c   252  movz x16, #0x557
0xffff5822e380   256  str x4, [x0, x16]
0xffff5822e384   260  add x6, x0, #0x557 (1367)
0xffff5822e388   264  and x4, x0, #0xfffffffffff00000
0xffff5822e38c   268  ldr x4, [x4, #8]
0xffff5822e390   272  tbz w4, #2, #+0x18 (addr 0xffff5822e3a8)
0xffff5822e394   276  sub csp, jssp, #0x8 (8)
0xffff5822e398   280  str lr, [jssp, #-8]!
0xffff5822e39c   284  ldr x16, pc+324 (addr 0x0000ffff5822e4e0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff5822e3a0   288  blr x16
0xffff5822e3a4   292  ldr lr, [jssp], #8
0xffff5822e3a8   296  b #+0x8 (addr 0xffff5822e3b0)
0xffff5822e3ac   300  b #+0x184 (addr 0xffff5822e530)
0xffff5822e3b0   304  cmp w5, #0x1 (1)
0xffff5822e3b4   308  b.ge #+0x94 (addr 0xffff5822e448)
0xffff5822e3b8   312  ldur x1, [x1, #15]
0xffff5822e3bc   316  ldur x1, [x1, #7]
0xffff5822e3c0   320  movz x4, #0x0
0xffff5822e3c4   324  cmp x1, x4
0xffff5822e3c8   328  b.eq #+0x54 (addr 0xffff5822e41c)
0xffff5822e3cc   332  add x1, x1, #0x5f (95)
0xffff5822e3d0   336  stur x1, [x3, #55]
0xffff5822e3d4   340  ldr x1, pc+276 (addr 0x0000ffff5822e4e8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5822e3d8   344  stur x1, [x3, #47]
0xffff5822e3dc   348  movz x16, #0x557
0xffff5822e3e0   352  ldr x1, [x0, x16]
0xffff5822e3e4   356  stur x1, [x3, #63]
0xffff5822e3e8   360  mov x1, x3
0xffff5822e3ec   364  movz x16, #0x557
0xffff5822e3f0   368  str x1, [x0, x16]
0xffff5822e3f4   372  add x2, x0, #0x557 (1367)
0xffff5822e3f8   376  and x1, x0, #0xfffffffffff00000
0xffff5822e3fc   380  ldr x1, [x1, #8]
0xffff5822e400   384  tbz w1, #2, #+0x18 (addr 0xffff5822e418)
0xffff5822e404   388  sub csp, jssp, #0x8 (8)
0xffff5822e408   392  str lr, [jssp, #-8]!
0xffff5822e40c   396  ldr x16, pc+228 (addr 0x0000ffff5822e4f0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff5822e410   400  blr x16
0xffff5822e414   404  ldr lr, [jssp], #8
0xffff5822e418   408  b #+0x30 (addr 0xffff5822e448)
0xffff5822e41c   412  ldr x0, pc+220 (addr 0x0000ffff5822e4f8)    ;; object: 0x39c04241 <undefined>
0xffff5822e420   416  stur x0, [x3, #63]
0xffff5822e424   420  ldur x0, [x2, #15]
0xffff5822e428   424  add x0, x0, #0x5f (95)
0xffff5822e42c   428  stur x0, [x3, #55]
0xffff5822e430   432  b #+0x18 (addr 0xffff5822e448)
0xffff5822e434   436  ldr x0, pc+204 (addr 0x0000ffff5822e500)    ;; object: 0x39c04241 <undefined>
0xffff5822e438   440  stur x0, [x3, #63]
0xffff5822e43c   444  ldur x0, [x2, #15]
0xffff5822e440   448  add x0, x0, #0x5f (95)
0xffff5822e444   452  stur x0, [x3, #55]
0xffff5822e448   456  mov x0, x3
0xffff5822e44c   460  ret
0xffff5822e450   464  sub csp, jssp, #0x10 (16)
0xffff5822e454   468  stp fp, lr, [jssp, #-16]!
0xffff5822e458   472  movz fp, #0xa00000000
0xffff5822e45c   476  sub csp, jssp, #0x8 (8)
0xffff5822e460   480  str fp, [jssp, #-8]!
0xffff5822e464   484  add fp, jssp, #0x8 (8)
0xffff5822e468   488  movz x3, #0x0
0xffff5822e46c   492  mov x16, lr
0xffff5822e470   496  ldr x17, pc+152 (addr 0x0000ffff5822e508)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5822e474   500  blr x17
0xffff5822e478   504  movz x0, #0x4800000000
0xffff5822e47c   508  movz x10, #0x0
0xffff5822e480   512  sub csp, jssp, #0x10 (16)
0xffff5822e484   516  stp x10, x0, [jssp, #-16]!
0xffff5822e488   520  movz x0, #0x2
0xffff5822e48c   524  movz x1, #0x5b88
0xffff5822e490   528  movk x1, #0xe2, lsl #16
0xffff5822e494   532  ldr x16, pc+124 (addr 0x0000ffff5822e510)    ;; code: STUB, CEntryStub, minor: 5
0xffff5822e498   536  blr x16
0xffff5822e49c   540  str x0, [jssp, #24]
0xffff5822e4a0   544  ldr x16, pc+120 (addr 0x0000ffff5822e518)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5822e4a4   548  blr x16
0xffff5822e4a8   552  ldr lr, [jssp, #16]
0xffff5822e4ac   556  ldp xzr, fp, [jssp], #24
0xffff5822e4b0   560  b #-0x210 (addr 0xffff5822e2a0)
0xffff5822e4b4   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff5822e4b8   568  d63f03e0       constant
0xffff5822e4bc   572  d503201f       constant
0xffff5822e4c0   576  39c04201       constant
0xffff5822e4c4   580  00000000       constant
0xffff5822e4c8   584  39c04201       constant
0xffff5822e4cc   588  00000000       constant
0xffff5822e4d0   592  39c04201       constant
0xffff5822e4d4   596  00000000       constant
0xffff5822e4d8   600  39c04519       constant
0xffff5822e4dc   604  00000000       constant
0xffff5822e4e0   608  5822d2c0       constant
0xffff5822e4e4   612  0000ffff       constant
0xffff5822e4e8   616  39c04201       constant
0xffff5822e4ec   620  00000000       constant
0xffff5822e4f0   624  5822daa0       constant
0xffff5822e4f4   628  0000ffff       constant
0xffff5822e4f8   632  39c04241       constant
0xffff5822e4fc   636  00000000       constant
0xffff5822e500   640  39c04241       constant
0xffff5822e504   644  00000000       constant
0xffff5822e508   648  58206820       constant
0xffff5822e50c   652  0000ffff       constant
0xffff5822e510   656  58206260       constant
0xffff5822e514   660  0000ffff       constant
0xffff5822e518   664  582068e0       constant
0xffff5822e51c   668  0000ffff       constant
0xffff5822e520   672  movz x16, #0x0
0xffff5822e524   676  sub csp, jssp, #0x10 (16)
0xffff5822e528   680  stp fp, lr, [jssp, #-16]!
0xffff5822e52c   684  bl #+0x14 (addr 0xffff5822e540)
0xffff5822e530   688  movz x16, #0x8
0xffff5822e534   692  sub csp, jssp, #0x10 (16)
0xffff5822e538   696  stp fp, lr, [jssp, #-16]!
0xffff5822e53c   700  bl #+0x4 (addr 0xffff5822e540)
0xffff5822e540   704  movz x17, #0xa00000000
0xffff5822e544   708  sub csp, jssp, #0x10 (16)
0xffff5822e548   712  stp x17, cp, [jssp, #-16]!
0xffff5822e54c   716  add fp, jssp, #0x10 (16)
0xffff5822e550   720  ldr x17, pc+24 (addr 0x0000ffff5822e568)    ;; lazy deoptimization bailout 0
0xffff5822e554   724  add x17, x17, x16
0xffff5822e558   728  br x17
0xffff5822e55c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5822e560   736  d63f03e0       constant
0xffff5822e564   740  d503201f       constant
0xffff5822e568   744  58006000       constant
0xffff5822e56c   748  0000ffff       constant


Safepoints (size = 21)
0xffff5822e49c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff5822e2b0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5822e2b8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5822e2c0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5822e2c8  embedded object  (0x39c04519 <the hole>)
0xffff5822e39c  code target (STUB)  (0xffff5822d2c0)
0xffff5822e3d4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5822e40c  code target (STUB)  (0xffff5822daa0)
0xffff5822e41c  embedded object  (0x39c04241 <undefined>)
0xffff5822e434  embedded object  (0x39c04241 <undefined>)
0xffff5822e470  code target (STUB)  (0xffff58206820)
0xffff5822e494  code target (STUB)  (0xffff58206260)
0xffff5822e4a0  code target (STUB)  (0xffff582068e0)
0xffff5822e4b4  constant pool (size 108)
0xffff5822e550  runtime entry
0xffff5822e55c  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff5822e600     0  adr xzr, #+0x40 (addr 0xffff5822e640)
0xffff5822e604     4  adr xzr, #+0x2a8 (addr 0xffff5822e8ac)
0xffff5822e608     8  ldr x16, pc+1368 (addr 0x0000ffff5822eb60)    ;; external reference (store_buffer_top)
0xffff5822e60c    12  ldr x0, [x16]
0xffff5822e610    16  str x2, [x0], #8
0xffff5822e614    20  str x0, [x16]
0xffff5822e618    24  tst x0, #0x1ffff
0xffff5822e61c    28  b.eq #+0x8 (addr 0xffff5822e624)
0xffff5822e620    32  ret
0xffff5822e624    36  sub csp, jssp, #0x8 (8)
0xffff5822e628    40  str lr, [jssp, #-8]!
0xffff5822e62c    44  ldr x17, pc+1340 (addr 0x0000ffff5822eb68)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822e630    48  blr x17
0xffff5822e634    52  ldr lr, [jssp], #8
0xffff5822e638    56  ret
0xffff5822e63c    60  ret
0xffff5822e640    64  sub csp, jssp, #0x10 (16)
0xffff5822e644    68  stp x3, x1, [jssp, #-16]!
0xffff5822e648    72  ldr x0, [x2]
0xffff5822e64c    76  and x16, x0, #0xfffffffffff00000
0xffff5822e650    80  ldr x16, [x16, #8]
0xffff5822e654    84  tst x16, #0x18
0xffff5822e658    88  b.eq #+0x17c (addr 0xffff5822e7d4)
0xffff5822e65c    92  and x16, cp, #0xfffffffffff00000
0xffff5822e660    96  ldr x16, [x16, #8]
0xffff5822e664   100  tst x16, #0x18
0xffff5822e668   104  b.ne #+0x16c (addr 0xffff5822e7d4)
0xffff5822e66c   108  and x0, cp, #0xfffffffffff00000
0xffff5822e670   112  ldr x1, [x0, #104]
0xffff5822e674   116  subs x1, x1, #0x1 (1)
0xffff5822e678   120  str x1, [x0, #104]
0xffff5822e67c   124  b.mi #+0xc4 (addr 0xffff5822e740)
0xffff5822e680   128  ubfx x16, cp, #8, #12
0xffff5822e684   132  and x0, cp, #0xfffffffffff00000
0xffff5822e688   136  add x0, x0, x16, lsl #2
0xffff5822e68c   140  ubfx x1, cp, #3, #5
0xffff5822e690   144  ldr x0, [x0, #360]
0xffff5822e694   148  lsr x0, x0, x1
0xffff5822e698   152  tbz w0, #0, #+0x8 (addr 0xffff5822e6a0)
0xffff5822e69c   156  tbnz w0, #1, #+0x3c (addr 0xffff5822e6d8)
0xffff5822e6a0   160  ldp x3, x1, [jssp], #16
0xffff5822e6a4   164  ldr x16, pc+1228 (addr 0x0000ffff5822eb70)    ;; external reference (store_buffer_top)
0xffff5822e6a8   168  ldr x0, [x16]
0xffff5822e6ac   172  str x2, [x0], #8
0xffff5822e6b0   176  str x0, [x16]
0xffff5822e6b4   180  tst x0, #0x1ffff
0xffff5822e6b8   184  b.eq #+0x8 (addr 0xffff5822e6c0)
0xffff5822e6bc   188  ret
0xffff5822e6c0   192  sub csp, jssp, #0x8 (8)
0xffff5822e6c4   196  str lr, [jssp, #-8]!
0xffff5822e6c8   200  ldr x17, pc+1200 (addr 0x0000ffff5822eb78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822e6cc   204  blr x17
0xffff5822e6d0   208  ldr lr, [jssp], #8
0xffff5822e6d4   212  ret
0xffff5822e6d8   216  ldr x0, [x2]
0xffff5822e6dc   220  sub csp, jssp, #0x10 (16)
0xffff5822e6e0   224  stp cp, x2, [jssp, #-16]!
0xffff5822e6e4   228  ubfx x16, x0, #8, #12
0xffff5822e6e8   232  and x1, x0, #0xfffffffffff00000
0xffff5822e6ec   236  add x1, x1, x16, lsl #2
0xffff5822e6f0   240  ubfx cp, x0, #3, #5
0xffff5822e6f4   244  ldr x2, [x1, #360]
0xffff5822e6f8   248  lsr x2, x2, cp
0xffff5822e6fc   252  tbz w2, #0, #+0x40 (addr 0xffff5822e73c)
0xffff5822e700   256  ldp cp, x2, [jssp], #16
0xffff5822e704   260  ldp x3, x1, [jssp], #16
0xffff5822e708   264  ldr x16, pc+1144 (addr 0x0000ffff5822eb80)    ;; external reference (store_buffer_top)
0xffff5822e70c   268  ldr x0, [x16]
0xffff5822e710   272  str x2, [x0], #8
0xffff5822e714   276  str x0, [x16]
0xffff5822e718   280  tst x0, #0x1ffff
0xffff5822e71c   284  b.eq #+0x8 (addr 0xffff5822e724)
0xffff5822e720   288  ret
0xffff5822e724   292  sub csp, jssp, #0x8 (8)
0xffff5822e728   296  str lr, [jssp, #-8]!
0xffff5822e72c   300  ldr x17, pc+1116 (addr 0x0000ffff5822eb88)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822e730   304  blr x17
0xffff5822e734   308  ldr lr, [jssp], #8
0xffff5822e738   312  ret
0xffff5822e73c   316  ldp cp, x2, [jssp], #16
0xffff5822e740   320  sub csp, jssp, #0x78 (120)
0xffff5822e744   324  stp x14, x15, [jssp, #-32]!
0xffff5822e748   328  stp x18, lr, [jssp, #16]
0xffff5822e74c   332  stp x10, x11, [jssp, #-32]!
0xffff5822e750   336  stp x12, x13, [jssp, #16]
0xffff5822e754   340  stp x6, x7, [jssp, #-32]!
0xffff5822e758   344  stp x8, x9, [jssp, #16]
0xffff5822e75c   348  stp x2, x4, [jssp, #-24]!
0xffff5822e760   352  str x5, [jssp, #16]
0xffff5822e764   356  mov x0, cp
0xffff5822e768   360  mov x1, x2
0xffff5822e76c   364  ldr x2, pc+1060 (addr 0x0000ffff5822eb90)    ;; external reference (isolate)
0xffff5822e770   368  ldr x16, pc+1064 (addr 0x0000ffff5822eb98)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822e774   372  and csp, jssp, #0xfffffffffffffff0
0xffff5822e778   376  blr x16
0xffff5822e77c   380  ldp x5, x6, [jssp, #16]
0xffff5822e780   384  ldp x2, x4, [jssp], #32
0xffff5822e784   388  ldp x9, x10, [jssp, #16]
0xffff5822e788   392  ldp x7, x8, [jssp], #32
0xffff5822e78c   396  ldp x13, x14, [jssp, #16]
0xffff5822e790   400  ldp x11, x12, [jssp], #32
0xffff5822e794   404  ldr lr, [jssp, #16]
0xffff5822e798   408  ldp x15, x18, [jssp], #24
0xffff5822e79c   412  ldp x3, x1, [jssp], #16
0xffff5822e7a0   416  ldr x16, pc+1024 (addr 0x0000ffff5822eba0)    ;; external reference (store_buffer_top)
0xffff5822e7a4   420  ldr x0, [x16]
0xffff5822e7a8   424  str x2, [x0], #8
0xffff5822e7ac   428  str x0, [x16]
0xffff5822e7b0   432  tst x0, #0x1ffff
0xffff5822e7b4   436  b.eq #+0x8 (addr 0xffff5822e7bc)
0xffff5822e7b8   440  ret
0xffff5822e7bc   444  sub csp, jssp, #0x8 (8)
0xffff5822e7c0   448  str lr, [jssp, #-8]!
0xffff5822e7c4   452  ldr x17, pc+996 (addr 0x0000ffff5822eba8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822e7c8   456  blr x17
0xffff5822e7cc   460  ldr lr, [jssp], #8
0xffff5822e7d0   464  ret
0xffff5822e7d4   468  and x0, cp, #0xfffffffffff00000
0xffff5822e7d8   472  ldr x1, [x0, #104]
0xffff5822e7dc   476  subs x1, x1, #0x1 (1)
0xffff5822e7e0   480  str x1, [x0, #104]
0xffff5822e7e4   484  b.mi #+0x64 (addr 0xffff5822e848)
0xffff5822e7e8   488  ubfx x16, cp, #8, #12
0xffff5822e7ec   492  and x0, cp, #0xfffffffffff00000
0xffff5822e7f0   496  add x0, x0, x16, lsl #2
0xffff5822e7f4   500  ubfx x1, cp, #3, #5
0xffff5822e7f8   504  ldr x0, [x0, #360]
0xffff5822e7fc   508  lsr x0, x0, x1
0xffff5822e800   512  tbz w0, #0, #+0x8 (addr 0xffff5822e808)
0xffff5822e804   516  tbnz w0, #1, #+0xc (addr 0xffff5822e810)
0xffff5822e808   520  ldp x3, x1, [jssp], #16
0xffff5822e80c   524  ret
0xffff5822e810   528  ldr x0, [x2]
0xffff5822e814   532  sub csp, jssp, #0x10 (16)
0xffff5822e818   536  stp cp, x2, [jssp, #-16]!
0xffff5822e81c   540  ubfx x16, x0, #8, #12
0xffff5822e820   544  and x1, x0, #0xfffffffffff00000
0xffff5822e824   548  add x1, x1, x16, lsl #2
0xffff5822e828   552  ubfx cp, x0, #3, #5
0xffff5822e82c   556  ldr x2, [x1, #360]
0xffff5822e830   560  lsr x2, x2, cp
0xffff5822e834   564  tbz w2, #0, #+0x10 (addr 0xffff5822e844)
0xffff5822e838   568  ldp cp, x2, [jssp], #16
0xffff5822e83c   572  ldp x3, x1, [jssp], #16
0xffff5822e840   576  ret
0xffff5822e844   580  ldp cp, x2, [jssp], #16
0xffff5822e848   584  sub csp, jssp, #0x78 (120)
0xffff5822e84c   588  stp x14, x15, [jssp, #-32]!
0xffff5822e850   592  stp x18, lr, [jssp, #16]
0xffff5822e854   596  stp x10, x11, [jssp, #-32]!
0xffff5822e858   600  stp x12, x13, [jssp, #16]
0xffff5822e85c   604  stp x6, x7, [jssp, #-32]!
0xffff5822e860   608  stp x8, x9, [jssp, #16]
0xffff5822e864   612  stp x2, x4, [jssp, #-24]!
0xffff5822e868   616  str x5, [jssp, #16]
0xffff5822e86c   620  mov x0, cp
0xffff5822e870   624  mov x1, x2
0xffff5822e874   628  ldr x2, pc+828 (addr 0x0000ffff5822ebb0)    ;; external reference (isolate)
0xffff5822e878   632  ldr x16, pc+832 (addr 0x0000ffff5822ebb8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822e87c   636  and csp, jssp, #0xfffffffffffffff0
0xffff5822e880   640  blr x16
0xffff5822e884   644  ldp x5, x6, [jssp, #16]
0xffff5822e888   648  ldp x2, x4, [jssp], #32
0xffff5822e88c   652  ldp x9, x10, [jssp, #16]
0xffff5822e890   656  ldp x7, x8, [jssp], #32
0xffff5822e894   660  ldp x13, x14, [jssp, #16]
0xffff5822e898   664  ldp x11, x12, [jssp], #32
0xffff5822e89c   668  ldr lr, [jssp, #16]
0xffff5822e8a0   672  ldp x15, x18, [jssp], #24
0xffff5822e8a4   676  ldp x3, x1, [jssp], #16
0xffff5822e8a8   680  ret
0xffff5822e8ac   684  sub csp, jssp, #0x10 (16)
0xffff5822e8b0   688  stp x3, x1, [jssp, #-16]!
0xffff5822e8b4   692  ldr x0, [x2]
0xffff5822e8b8   696  and x16, x0, #0xfffffffffff00000
0xffff5822e8bc   700  ldr x16, [x16, #8]
0xffff5822e8c0   704  tst x16, #0x18
0xffff5822e8c4   708  b.eq #+0x19c (addr 0xffff5822ea60)
0xffff5822e8c8   712  and x16, cp, #0xfffffffffff00000
0xffff5822e8cc   716  ldr x16, [x16, #8]
0xffff5822e8d0   720  tst x16, #0x18
0xffff5822e8d4   724  b.ne #+0x18c (addr 0xffff5822ea60)
0xffff5822e8d8   728  and x0, cp, #0xfffffffffff00000
0xffff5822e8dc   732  ldr x1, [x0, #104]
0xffff5822e8e0   736  subs x1, x1, #0x1 (1)
0xffff5822e8e4   740  str x1, [x0, #104]
0xffff5822e8e8   744  b.mi #+0xe4 (addr 0xffff5822e9cc)
0xffff5822e8ec   748  ubfx x16, cp, #8, #12
0xffff5822e8f0   752  and x0, cp, #0xfffffffffff00000
0xffff5822e8f4   756  add x0, x0, x16, lsl #2
0xffff5822e8f8   760  ubfx x1, cp, #3, #5
0xffff5822e8fc   764  ldr x0, [x0, #360]
0xffff5822e900   768  lsr x0, x0, x1
0xffff5822e904   772  tbz w0, #0, #+0x8 (addr 0xffff5822e90c)
0xffff5822e908   776  tbnz w0, #1, #+0x3c (addr 0xffff5822e944)
0xffff5822e90c   780  ldp x3, x1, [jssp], #16
0xffff5822e910   784  ldr x16, pc+688 (addr 0x0000ffff5822ebc0)    ;; external reference (store_buffer_top)
0xffff5822e914   788  ldr x0, [x16]
0xffff5822e918   792  str x2, [x0], #8
0xffff5822e91c   796  str x0, [x16]
0xffff5822e920   800  tst x0, #0x1ffff
0xffff5822e924   804  b.eq #+0x8 (addr 0xffff5822e92c)
0xffff5822e928   808  ret
0xffff5822e92c   812  sub csp, jssp, #0x8 (8)
0xffff5822e930   816  str lr, [jssp, #-8]!
0xffff5822e934   820  ldr x17, pc+660 (addr 0x0000ffff5822ebc8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822e938   824  blr x17
0xffff5822e93c   828  ldr lr, [jssp], #8
0xffff5822e940   832  ret
0xffff5822e944   836  ldr x0, [x2]
0xffff5822e948   840  and x1, x0, #0xfffffffffff00000
0xffff5822e94c   844  ldr x1, [x1, #8]
0xffff5822e950   848  tbz w1, #6, #+0x18 (addr 0xffff5822e968)
0xffff5822e954   852  and x1, cp, #0xfffffffffff00000
0xffff5822e958   856  ldr x1, [x1, #8]
0xffff5822e95c   860  movz x16, #0x58
0xffff5822e960   864  tst x1, x16
0xffff5822e964   868  b.eq #+0x68 (addr 0xffff5822e9cc)
0xffff5822e968   872  sub csp, jssp, #0x10 (16)
0xffff5822e96c   876  stp cp, x2, [jssp, #-16]!
0xffff5822e970   880  ubfx x16, x0, #8, #12
0xffff5822e974   884  and x1, x0, #0xfffffffffff00000
0xffff5822e978   888  add x1, x1, x16, lsl #2
0xffff5822e97c   892  ubfx cp, x0, #3, #5
0xffff5822e980   896  ldr x2, [x1, #360]
0xffff5822e984   900  lsr x2, x2, cp
0xffff5822e988   904  tbz w2, #0, #+0x40 (addr 0xffff5822e9c8)
0xffff5822e98c   908  ldp cp, x2, [jssp], #16
0xffff5822e990   912  ldp x3, x1, [jssp], #16
0xffff5822e994   916  ldr x16, pc+572 (addr 0x0000ffff5822ebd0)    ;; external reference (store_buffer_top)
0xffff5822e998   920  ldr x0, [x16]
0xffff5822e99c   924  str x2, [x0], #8
0xffff5822e9a0   928  str x0, [x16]
0xffff5822e9a4   932  tst x0, #0x1ffff
0xffff5822e9a8   936  b.eq #+0x8 (addr 0xffff5822e9b0)
0xffff5822e9ac   940  ret
0xffff5822e9b0   944  sub csp, jssp, #0x8 (8)
0xffff5822e9b4   948  str lr, [jssp, #-8]!
0xffff5822e9b8   952  ldr x17, pc+544 (addr 0x0000ffff5822ebd8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822e9bc   956  blr x17
0xffff5822e9c0   960  ldr lr, [jssp], #8
0xffff5822e9c4   964  ret
0xffff5822e9c8   968  ldp cp, x2, [jssp], #16
0xffff5822e9cc   972  sub csp, jssp, #0x78 (120)
0xffff5822e9d0   976  stp x14, x15, [jssp, #-32]!
0xffff5822e9d4   980  stp x18, lr, [jssp, #16]
0xffff5822e9d8   984  stp x10, x11, [jssp, #-32]!
0xffff5822e9dc   988  stp x12, x13, [jssp, #16]
0xffff5822e9e0   992  stp x6, x7, [jssp, #-32]!
0xffff5822e9e4   996  stp x8, x9, [jssp, #16]
0xffff5822e9e8  1000  stp x2, x4, [jssp, #-24]!
0xffff5822e9ec  1004  str x5, [jssp, #16]
0xffff5822e9f0  1008  mov x0, cp
0xffff5822e9f4  1012  mov x1, x2
0xffff5822e9f8  1016  ldr x2, pc+488 (addr 0x0000ffff5822ebe0)    ;; external reference (isolate)
0xffff5822e9fc  1020  ldr x16, pc+492 (addr 0x0000ffff5822ebe8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822ea00  1024  and csp, jssp, #0xfffffffffffffff0
0xffff5822ea04  1028  blr x16
0xffff5822ea08  1032  ldp x5, x6, [jssp, #16]
0xffff5822ea0c  1036  ldp x2, x4, [jssp], #32
0xffff5822ea10  1040  ldp x9, x10, [jssp, #16]
0xffff5822ea14  1044  ldp x7, x8, [jssp], #32
0xffff5822ea18  1048  ldp x13, x14, [jssp, #16]
0xffff5822ea1c  1052  ldp x11, x12, [jssp], #32
0xffff5822ea20  1056  ldr lr, [jssp, #16]
0xffff5822ea24  1060  ldp x15, x18, [jssp], #24
0xffff5822ea28  1064  ldp x3, x1, [jssp], #16
0xffff5822ea2c  1068  ldr x16, pc+452 (addr 0x0000ffff5822ebf0)    ;; external reference (store_buffer_top)
0xffff5822ea30  1072  ldr x0, [x16]
0xffff5822ea34  1076  str x2, [x0], #8
0xffff5822ea38  1080  str x0, [x16]
0xffff5822ea3c  1084  tst x0, #0x1ffff
0xffff5822ea40  1088  b.eq #+0x8 (addr 0xffff5822ea48)
0xffff5822ea44  1092  ret
0xffff5822ea48  1096  sub csp, jssp, #0x8 (8)
0xffff5822ea4c  1100  str lr, [jssp, #-8]!
0xffff5822ea50  1104  ldr x17, pc+424 (addr 0x0000ffff5822ebf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822ea54  1108  blr x17
0xffff5822ea58  1112  ldr lr, [jssp], #8
0xffff5822ea5c  1116  ret
0xffff5822ea60  1120  and x0, cp, #0xfffffffffff00000
0xffff5822ea64  1124  ldr x1, [x0, #104]
0xffff5822ea68  1128  subs x1, x1, #0x1 (1)
0xffff5822ea6c  1132  str x1, [x0, #104]
0xffff5822ea70  1136  b.mi #+0x84 (addr 0xffff5822eaf4)
0xffff5822ea74  1140  ubfx x16, cp, #8, #12
0xffff5822ea78  1144  and x0, cp, #0xfffffffffff00000
0xffff5822ea7c  1148  add x0, x0, x16, lsl #2
0xffff5822ea80  1152  ubfx x1, cp, #3, #5
0xffff5822ea84  1156  ldr x0, [x0, #360]
0xffff5822ea88  1160  lsr x0, x0, x1
0xffff5822ea8c  1164  tbz w0, #0, #+0x8 (addr 0xffff5822ea94)
0xffff5822ea90  1168  tbnz w0, #1, #+0xc (addr 0xffff5822ea9c)
0xffff5822ea94  1172  ldp x3, x1, [jssp], #16
0xffff5822ea98  1176  ret
0xffff5822ea9c  1180  ldr x0, [x2]
0xffff5822eaa0  1184  and x1, x0, #0xfffffffffff00000
0xffff5822eaa4  1188  ldr x1, [x1, #8]
0xffff5822eaa8  1192  tbz w1, #6, #+0x18 (addr 0xffff5822eac0)
0xffff5822eaac  1196  and x1, cp, #0xfffffffffff00000
0xffff5822eab0  1200  ldr x1, [x1, #8]
0xffff5822eab4  1204  movz x16, #0x58
0xffff5822eab8  1208  tst x1, x16
0xffff5822eabc  1212  b.eq #+0x38 (addr 0xffff5822eaf4)
0xffff5822eac0  1216  sub csp, jssp, #0x10 (16)
0xffff5822eac4  1220  stp cp, x2, [jssp, #-16]!
0xffff5822eac8  1224  ubfx x16, x0, #8, #12
0xffff5822eacc  1228  and x1, x0, #0xfffffffffff00000
0xffff5822ead0  1232  add x1, x1, x16, lsl #2
0xffff5822ead4  1236  ubfx cp, x0, #3, #5
0xffff5822ead8  1240  ldr x2, [x1, #360]
0xffff5822eadc  1244  lsr x2, x2, cp
0xffff5822eae0  1248  tbz w2, #0, #+0x10 (addr 0xffff5822eaf0)
0xffff5822eae4  1252  ldp cp, x2, [jssp], #16
0xffff5822eae8  1256  ldp x3, x1, [jssp], #16
0xffff5822eaec  1260  ret
0xffff5822eaf0  1264  ldp cp, x2, [jssp], #16
0xffff5822eaf4  1268  sub csp, jssp, #0x78 (120)
0xffff5822eaf8  1272  stp x14, x15, [jssp, #-32]!
0xffff5822eafc  1276  stp x18, lr, [jssp, #16]
0xffff5822eb00  1280  stp x10, x11, [jssp, #-32]!
0xffff5822eb04  1284  stp x12, x13, [jssp, #16]
0xffff5822eb08  1288  stp x6, x7, [jssp, #-32]!
0xffff5822eb0c  1292  stp x8, x9, [jssp, #16]
0xffff5822eb10  1296  stp x2, x4, [jssp, #-24]!
0xffff5822eb14  1300  str x5, [jssp, #16]
0xffff5822eb18  1304  mov x0, cp
0xffff5822eb1c  1308  mov x1, x2
0xffff5822eb20  1312  ldr x2, pc+224 (addr 0x0000ffff5822ec00)    ;; external reference (isolate)
0xffff5822eb24  1316  ldr x16, pc+228 (addr 0x0000ffff5822ec08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822eb28  1320  and csp, jssp, #0xfffffffffffffff0
0xffff5822eb2c  1324  blr x16
0xffff5822eb30  1328  ldp x5, x6, [jssp, #16]
0xffff5822eb34  1332  ldp x2, x4, [jssp], #32
0xffff5822eb38  1336  ldp x9, x10, [jssp, #16]
0xffff5822eb3c  1340  ldp x7, x8, [jssp], #32
0xffff5822eb40  1344  ldp x13, x14, [jssp, #16]
0xffff5822eb44  1348  ldp x11, x12, [jssp], #32
0xffff5822eb48  1352  ldr lr, [jssp, #16]
0xffff5822eb4c  1356  ldp x15, x18, [jssp], #24
0xffff5822eb50  1360  ldp x3, x1, [jssp], #16
0xffff5822eb54  1364  ret
0xffff5822eb58  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5822eb5c  1372  d63f03e0       constant
0xffff5822eb60  1376  16e798c0       constant
0xffff5822eb64  1380  00000000       constant
0xffff5822eb68  1384  582064c0       constant
0xffff5822eb6c  1388  0000ffff       constant
0xffff5822eb70  1392  16e798c0       constant
0xffff5822eb74  1396  00000000       constant
0xffff5822eb78  1400  582064c0       constant
0xffff5822eb7c  1404  0000ffff       constant
0xffff5822eb80  1408  16e798c0       constant
0xffff5822eb84  1412  00000000       constant
0xffff5822eb88  1416  582064c0       constant
0xffff5822eb8c  1420  0000ffff       constant
0xffff5822eb90  1424  16e782d0       constant
0xffff5822eb94  1428  00000000       constant
0xffff5822eb98  1432  00c2d958       constant
0xffff5822eb9c  1436  00000000       constant
0xffff5822eba0  1440  16e798c0       constant
0xffff5822eba4  1444  00000000       constant
0xffff5822eba8  1448  582064c0       constant
0xffff5822ebac  1452  0000ffff       constant
0xffff5822ebb0  1456  16e782d0       constant
0xffff5822ebb4  1460  00000000       constant
0xffff5822ebb8  1464  00c2d958       constant
0xffff5822ebbc  1468  00000000       constant
0xffff5822ebc0  1472  16e798c0       constant
0xffff5822ebc4  1476  00000000       constant
0xffff5822ebc8  1480  582064c0       constant
0xffff5822ebcc  1484  0000ffff       constant
0xffff5822ebd0  1488  16e798c0       constant
0xffff5822ebd4  1492  00000000       constant
0xffff5822ebd8  1496  582064c0       constant
0xffff5822ebdc  1500  0000ffff       constant
0xffff5822ebe0  1504  16e782d0       constant
0xffff5822ebe4  1508  00000000       constant
0xffff5822ebe8  1512  00c2d958       constant
0xffff5822ebec  1516  00000000       constant
0xffff5822ebf0  1520  16e798c0       constant
0xffff5822ebf4  1524  00000000       constant
0xffff5822ebf8  1528  582064c0       constant
0xffff5822ebfc  1532  0000ffff       constant
0xffff5822ec00  1536  16e782d0       constant
0xffff5822ec04  1540  00000000       constant
0xffff5822ec08  1544  00c2d958       constant
0xffff5822ec0c  1548  00000000       constant


RelocInfo (size = 59)
0xffff5822e608  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822e62c  code target (STUB)  (0xffff582064c0)
0xffff5822e6a4  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822e6c8  code target (STUB)  (0xffff582064c0)
0xffff5822e708  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822e72c  code target (STUB)  (0xffff582064c0)
0xffff5822e76c  external reference (isolate)  (0x16e782d0)
0xffff5822e770  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822e7a0  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822e7c4  code target (STUB)  (0xffff582064c0)
0xffff5822e874  external reference (isolate)  (0x16e782d0)
0xffff5822e878  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822e910  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822e934  code target (STUB)  (0xffff582064c0)
0xffff5822e994  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822e9b8  code target (STUB)  (0xffff582064c0)
0xffff5822e9f8  external reference (isolate)  (0x16e782d0)
0xffff5822e9fc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822ea2c  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822ea50  code target (STUB)  (0xffff582064c0)
0xffff5822eb20  external reference (isolate)  (0x16e782d0)
0xffff5822eb24  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822eb58  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff5822ec80     0  adr xzr, #+0x40 (addr 0xffff5822ecc0)
0xffff5822ec84     4  adr xzr, #+0x2a8 (addr 0xffff5822ef2c)
0xffff5822ec88     8  ldr x16, pc+1368 (addr 0x0000ffff5822f1e0)    ;; external reference (store_buffer_top)
0xffff5822ec8c    12  ldr x10, [x16]
0xffff5822ec90    16  str x11, [x10], #8
0xffff5822ec94    20  str x10, [x16]
0xffff5822ec98    24  tst x10, #0x1ffff
0xffff5822ec9c    28  b.eq #+0x8 (addr 0xffff5822eca4)
0xffff5822eca0    32  ret
0xffff5822eca4    36  sub csp, jssp, #0x8 (8)
0xffff5822eca8    40  str lr, [jssp, #-8]!
0xffff5822ecac    44  ldr x17, pc+1340 (addr 0x0000ffff5822f1e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822ecb0    48  blr x17
0xffff5822ecb4    52  ldr lr, [jssp], #8
0xffff5822ecb8    56  ret
0xffff5822ecbc    60  ret
0xffff5822ecc0    64  sub csp, jssp, #0x10 (16)
0xffff5822ecc4    68  stp x2, x0, [jssp, #-16]!
0xffff5822ecc8    72  ldr x10, [x11]
0xffff5822eccc    76  and x16, x10, #0xfffffffffff00000
0xffff5822ecd0    80  ldr x16, [x16, #8]
0xffff5822ecd4    84  tst x16, #0x18
0xffff5822ecd8    88  b.eq #+0x17c (addr 0xffff5822ee54)
0xffff5822ecdc    92  and x16, x1, #0xfffffffffff00000
0xffff5822ece0    96  ldr x16, [x16, #8]
0xffff5822ece4   100  tst x16, #0x18
0xffff5822ece8   104  b.ne #+0x16c (addr 0xffff5822ee54)
0xffff5822ecec   108  and x10, x1, #0xfffffffffff00000
0xffff5822ecf0   112  ldr x0, [x10, #104]
0xffff5822ecf4   116  subs x0, x0, #0x1 (1)
0xffff5822ecf8   120  str x0, [x10, #104]
0xffff5822ecfc   124  b.mi #+0xc4 (addr 0xffff5822edc0)
0xffff5822ed00   128  ubfx x16, x1, #8, #12
0xffff5822ed04   132  and x10, x1, #0xfffffffffff00000
0xffff5822ed08   136  add x10, x10, x16, lsl #2
0xffff5822ed0c   140  ubfx x0, x1, #3, #5
0xffff5822ed10   144  ldr x10, [x10, #360]
0xffff5822ed14   148  lsr x10, x10, x0
0xffff5822ed18   152  tbz w10, #0, #+0x8 (addr 0xffff5822ed20)
0xffff5822ed1c   156  tbnz w10, #1, #+0x3c (addr 0xffff5822ed58)
0xffff5822ed20   160  ldp x2, x0, [jssp], #16
0xffff5822ed24   164  ldr x16, pc+1228 (addr 0x0000ffff5822f1f0)    ;; external reference (store_buffer_top)
0xffff5822ed28   168  ldr x10, [x16]
0xffff5822ed2c   172  str x11, [x10], #8
0xffff5822ed30   176  str x10, [x16]
0xffff5822ed34   180  tst x10, #0x1ffff
0xffff5822ed38   184  b.eq #+0x8 (addr 0xffff5822ed40)
0xffff5822ed3c   188  ret
0xffff5822ed40   192  sub csp, jssp, #0x8 (8)
0xffff5822ed44   196  str lr, [jssp, #-8]!
0xffff5822ed48   200  ldr x17, pc+1200 (addr 0x0000ffff5822f1f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822ed4c   204  blr x17
0xffff5822ed50   208  ldr lr, [jssp], #8
0xffff5822ed54   212  ret
0xffff5822ed58   216  ldr x10, [x11]
0xffff5822ed5c   220  sub csp, jssp, #0x10 (16)
0xffff5822ed60   224  stp x1, x11, [jssp, #-16]!
0xffff5822ed64   228  ubfx x16, x10, #8, #12
0xffff5822ed68   232  and x0, x10, #0xfffffffffff00000
0xffff5822ed6c   236  add x0, x0, x16, lsl #2
0xffff5822ed70   240  ubfx x1, x10, #3, #5
0xffff5822ed74   244  ldr x11, [x0, #360]
0xffff5822ed78   248  lsr x11, x11, x1
0xffff5822ed7c   252  tbz w11, #0, #+0x40 (addr 0xffff5822edbc)
0xffff5822ed80   256  ldp x1, x11, [jssp], #16
0xffff5822ed84   260  ldp x2, x0, [jssp], #16
0xffff5822ed88   264  ldr x16, pc+1144 (addr 0x0000ffff5822f200)    ;; external reference (store_buffer_top)
0xffff5822ed8c   268  ldr x10, [x16]
0xffff5822ed90   272  str x11, [x10], #8
0xffff5822ed94   276  str x10, [x16]
0xffff5822ed98   280  tst x10, #0x1ffff
0xffff5822ed9c   284  b.eq #+0x8 (addr 0xffff5822eda4)
0xffff5822eda0   288  ret
0xffff5822eda4   292  sub csp, jssp, #0x8 (8)
0xffff5822eda8   296  str lr, [jssp, #-8]!
0xffff5822edac   300  ldr x17, pc+1116 (addr 0x0000ffff5822f208)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822edb0   304  blr x17
0xffff5822edb4   308  ldr lr, [jssp], #8
0xffff5822edb8   312  ret
0xffff5822edbc   316  ldp x1, x11, [jssp], #16
0xffff5822edc0   320  sub csp, jssp, #0x78 (120)
0xffff5822edc4   324  stp x14, x15, [jssp, #-32]!
0xffff5822edc8   328  stp x18, lr, [jssp, #16]
0xffff5822edcc   332  stp x9, x11, [jssp, #-32]!
0xffff5822edd0   336  stp x12, x13, [jssp, #16]
0xffff5822edd4   340  stp x5, x6, [jssp, #-32]!
0xffff5822edd8   344  stp x7, x8, [jssp, #16]
0xffff5822eddc   348  stp x1, x3, [jssp, #-24]!
0xffff5822ede0   352  str x4, [jssp, #16]
0xffff5822ede4   356  mov x0, x1
0xffff5822ede8   360  mov x1, x11
0xffff5822edec   364  ldr x2, pc+1060 (addr 0x0000ffff5822f210)    ;; external reference (isolate)
0xffff5822edf0   368  ldr x16, pc+1064 (addr 0x0000ffff5822f218)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822edf4   372  and csp, jssp, #0xfffffffffffffff0
0xffff5822edf8   376  blr x16
0xffff5822edfc   380  ldp x4, x5, [jssp, #16]
0xffff5822ee00   384  ldp x1, x3, [jssp], #32
0xffff5822ee04   388  ldp x8, x9, [jssp, #16]
0xffff5822ee08   392  ldp x6, x7, [jssp], #32
0xffff5822ee0c   396  ldp x13, x14, [jssp, #16]
0xffff5822ee10   400  ldp x11, x12, [jssp], #32
0xffff5822ee14   404  ldr lr, [jssp, #16]
0xffff5822ee18   408  ldp x15, x18, [jssp], #24
0xffff5822ee1c   412  ldp x2, x0, [jssp], #16
0xffff5822ee20   416  ldr x16, pc+1024 (addr 0x0000ffff5822f220)    ;; external reference (store_buffer_top)
0xffff5822ee24   420  ldr x10, [x16]
0xffff5822ee28   424  str x11, [x10], #8
0xffff5822ee2c   428  str x10, [x16]
0xffff5822ee30   432  tst x10, #0x1ffff
0xffff5822ee34   436  b.eq #+0x8 (addr 0xffff5822ee3c)
0xffff5822ee38   440  ret
0xffff5822ee3c   444  sub csp, jssp, #0x8 (8)
0xffff5822ee40   448  str lr, [jssp, #-8]!
0xffff5822ee44   452  ldr x17, pc+996 (addr 0x0000ffff5822f228)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822ee48   456  blr x17
0xffff5822ee4c   460  ldr lr, [jssp], #8
0xffff5822ee50   464  ret
0xffff5822ee54   468  and x10, x1, #0xfffffffffff00000
0xffff5822ee58   472  ldr x0, [x10, #104]
0xffff5822ee5c   476  subs x0, x0, #0x1 (1)
0xffff5822ee60   480  str x0, [x10, #104]
0xffff5822ee64   484  b.mi #+0x64 (addr 0xffff5822eec8)
0xffff5822ee68   488  ubfx x16, x1, #8, #12
0xffff5822ee6c   492  and x10, x1, #0xfffffffffff00000
0xffff5822ee70   496  add x10, x10, x16, lsl #2
0xffff5822ee74   500  ubfx x0, x1, #3, #5
0xffff5822ee78   504  ldr x10, [x10, #360]
0xffff5822ee7c   508  lsr x10, x10, x0
0xffff5822ee80   512  tbz w10, #0, #+0x8 (addr 0xffff5822ee88)
0xffff5822ee84   516  tbnz w10, #1, #+0xc (addr 0xffff5822ee90)
0xffff5822ee88   520  ldp x2, x0, [jssp], #16
0xffff5822ee8c   524  ret
0xffff5822ee90   528  ldr x10, [x11]
0xffff5822ee94   532  sub csp, jssp, #0x10 (16)
0xffff5822ee98   536  stp x1, x11, [jssp, #-16]!
0xffff5822ee9c   540  ubfx x16, x10, #8, #12
0xffff5822eea0   544  and x0, x10, #0xfffffffffff00000
0xffff5822eea4   548  add x0, x0, x16, lsl #2
0xffff5822eea8   552  ubfx x1, x10, #3, #5
0xffff5822eeac   556  ldr x11, [x0, #360]
0xffff5822eeb0   560  lsr x11, x11, x1
0xffff5822eeb4   564  tbz w11, #0, #+0x10 (addr 0xffff5822eec4)
0xffff5822eeb8   568  ldp x1, x11, [jssp], #16
0xffff5822eebc   572  ldp x2, x0, [jssp], #16
0xffff5822eec0   576  ret
0xffff5822eec4   580  ldp x1, x11, [jssp], #16
0xffff5822eec8   584  sub csp, jssp, #0x78 (120)
0xffff5822eecc   588  stp x14, x15, [jssp, #-32]!
0xffff5822eed0   592  stp x18, lr, [jssp, #16]
0xffff5822eed4   596  stp x9, x11, [jssp, #-32]!
0xffff5822eed8   600  stp x12, x13, [jssp, #16]
0xffff5822eedc   604  stp x5, x6, [jssp, #-32]!
0xffff5822eee0   608  stp x7, x8, [jssp, #16]
0xffff5822eee4   612  stp x1, x3, [jssp, #-24]!
0xffff5822eee8   616  str x4, [jssp, #16]
0xffff5822eeec   620  mov x0, x1
0xffff5822eef0   624  mov x1, x11
0xffff5822eef4   628  ldr x2, pc+828 (addr 0x0000ffff5822f230)    ;; external reference (isolate)
0xffff5822eef8   632  ldr x16, pc+832 (addr 0x0000ffff5822f238)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822eefc   636  and csp, jssp, #0xfffffffffffffff0
0xffff5822ef00   640  blr x16
0xffff5822ef04   644  ldp x4, x5, [jssp, #16]
0xffff5822ef08   648  ldp x1, x3, [jssp], #32
0xffff5822ef0c   652  ldp x8, x9, [jssp, #16]
0xffff5822ef10   656  ldp x6, x7, [jssp], #32
0xffff5822ef14   660  ldp x13, x14, [jssp, #16]
0xffff5822ef18   664  ldp x11, x12, [jssp], #32
0xffff5822ef1c   668  ldr lr, [jssp, #16]
0xffff5822ef20   672  ldp x15, x18, [jssp], #24
0xffff5822ef24   676  ldp x2, x0, [jssp], #16
0xffff5822ef28   680  ret
0xffff5822ef2c   684  sub csp, jssp, #0x10 (16)
0xffff5822ef30   688  stp x2, x0, [jssp, #-16]!
0xffff5822ef34   692  ldr x10, [x11]
0xffff5822ef38   696  and x16, x10, #0xfffffffffff00000
0xffff5822ef3c   700  ldr x16, [x16, #8]
0xffff5822ef40   704  tst x16, #0x18
0xffff5822ef44   708  b.eq #+0x19c (addr 0xffff5822f0e0)
0xffff5822ef48   712  and x16, x1, #0xfffffffffff00000
0xffff5822ef4c   716  ldr x16, [x16, #8]
0xffff5822ef50   720  tst x16, #0x18
0xffff5822ef54   724  b.ne #+0x18c (addr 0xffff5822f0e0)
0xffff5822ef58   728  and x10, x1, #0xfffffffffff00000
0xffff5822ef5c   732  ldr x0, [x10, #104]
0xffff5822ef60   736  subs x0, x0, #0x1 (1)
0xffff5822ef64   740  str x0, [x10, #104]
0xffff5822ef68   744  b.mi #+0xe4 (addr 0xffff5822f04c)
0xffff5822ef6c   748  ubfx x16, x1, #8, #12
0xffff5822ef70   752  and x10, x1, #0xfffffffffff00000
0xffff5822ef74   756  add x10, x10, x16, lsl #2
0xffff5822ef78   760  ubfx x0, x1, #3, #5
0xffff5822ef7c   764  ldr x10, [x10, #360]
0xffff5822ef80   768  lsr x10, x10, x0
0xffff5822ef84   772  tbz w10, #0, #+0x8 (addr 0xffff5822ef8c)
0xffff5822ef88   776  tbnz w10, #1, #+0x3c (addr 0xffff5822efc4)
0xffff5822ef8c   780  ldp x2, x0, [jssp], #16
0xffff5822ef90   784  ldr x16, pc+688 (addr 0x0000ffff5822f240)    ;; external reference (store_buffer_top)
0xffff5822ef94   788  ldr x10, [x16]
0xffff5822ef98   792  str x11, [x10], #8
0xffff5822ef9c   796  str x10, [x16]
0xffff5822efa0   800  tst x10, #0x1ffff
0xffff5822efa4   804  b.eq #+0x8 (addr 0xffff5822efac)
0xffff5822efa8   808  ret
0xffff5822efac   812  sub csp, jssp, #0x8 (8)
0xffff5822efb0   816  str lr, [jssp, #-8]!
0xffff5822efb4   820  ldr x17, pc+660 (addr 0x0000ffff5822f248)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822efb8   824  blr x17
0xffff5822efbc   828  ldr lr, [jssp], #8
0xffff5822efc0   832  ret
0xffff5822efc4   836  ldr x10, [x11]
0xffff5822efc8   840  and x0, x10, #0xfffffffffff00000
0xffff5822efcc   844  ldr x0, [x0, #8]
0xffff5822efd0   848  tbz w0, #6, #+0x18 (addr 0xffff5822efe8)
0xffff5822efd4   852  and x0, x1, #0xfffffffffff00000
0xffff5822efd8   856  ldr x0, [x0, #8]
0xffff5822efdc   860  movz x16, #0x58
0xffff5822efe0   864  tst x0, x16
0xffff5822efe4   868  b.eq #+0x68 (addr 0xffff5822f04c)
0xffff5822efe8   872  sub csp, jssp, #0x10 (16)
0xffff5822efec   876  stp x1, x11, [jssp, #-16]!
0xffff5822eff0   880  ubfx x16, x10, #8, #12
0xffff5822eff4   884  and x0, x10, #0xfffffffffff00000
0xffff5822eff8   888  add x0, x0, x16, lsl #2
0xffff5822effc   892  ubfx x1, x10, #3, #5
0xffff5822f000   896  ldr x11, [x0, #360]
0xffff5822f004   900  lsr x11, x11, x1
0xffff5822f008   904  tbz w11, #0, #+0x40 (addr 0xffff5822f048)
0xffff5822f00c   908  ldp x1, x11, [jssp], #16
0xffff5822f010   912  ldp x2, x0, [jssp], #16
0xffff5822f014   916  ldr x16, pc+572 (addr 0x0000ffff5822f250)    ;; external reference (store_buffer_top)
0xffff5822f018   920  ldr x10, [x16]
0xffff5822f01c   924  str x11, [x10], #8
0xffff5822f020   928  str x10, [x16]
0xffff5822f024   932  tst x10, #0x1ffff
0xffff5822f028   936  b.eq #+0x8 (addr 0xffff5822f030)
0xffff5822f02c   940  ret
0xffff5822f030   944  sub csp, jssp, #0x8 (8)
0xffff5822f034   948  str lr, [jssp, #-8]!
0xffff5822f038   952  ldr x17, pc+544 (addr 0x0000ffff5822f258)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822f03c   956  blr x17
0xffff5822f040   960  ldr lr, [jssp], #8
0xffff5822f044   964  ret
0xffff5822f048   968  ldp x1, x11, [jssp], #16
0xffff5822f04c   972  sub csp, jssp, #0x78 (120)
0xffff5822f050   976  stp x14, x15, [jssp, #-32]!
0xffff5822f054   980  stp x18, lr, [jssp, #16]
0xffff5822f058   984  stp x9, x11, [jssp, #-32]!
0xffff5822f05c   988  stp x12, x13, [jssp, #16]
0xffff5822f060   992  stp x5, x6, [jssp, #-32]!
0xffff5822f064   996  stp x7, x8, [jssp, #16]
0xffff5822f068  1000  stp x1, x3, [jssp, #-24]!
0xffff5822f06c  1004  str x4, [jssp, #16]
0xffff5822f070  1008  mov x0, x1
0xffff5822f074  1012  mov x1, x11
0xffff5822f078  1016  ldr x2, pc+488 (addr 0x0000ffff5822f260)    ;; external reference (isolate)
0xffff5822f07c  1020  ldr x16, pc+492 (addr 0x0000ffff5822f268)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822f080  1024  and csp, jssp, #0xfffffffffffffff0
0xffff5822f084  1028  blr x16
0xffff5822f088  1032  ldp x4, x5, [jssp, #16]
0xffff5822f08c  1036  ldp x1, x3, [jssp], #32
0xffff5822f090  1040  ldp x8, x9, [jssp, #16]
0xffff5822f094  1044  ldp x6, x7, [jssp], #32
0xffff5822f098  1048  ldp x13, x14, [jssp, #16]
0xffff5822f09c  1052  ldp x11, x12, [jssp], #32
0xffff5822f0a0  1056  ldr lr, [jssp, #16]
0xffff5822f0a4  1060  ldp x15, x18, [jssp], #24
0xffff5822f0a8  1064  ldp x2, x0, [jssp], #16
0xffff5822f0ac  1068  ldr x16, pc+452 (addr 0x0000ffff5822f270)    ;; external reference (store_buffer_top)
0xffff5822f0b0  1072  ldr x10, [x16]
0xffff5822f0b4  1076  str x11, [x10], #8
0xffff5822f0b8  1080  str x10, [x16]
0xffff5822f0bc  1084  tst x10, #0x1ffff
0xffff5822f0c0  1088  b.eq #+0x8 (addr 0xffff5822f0c8)
0xffff5822f0c4  1092  ret
0xffff5822f0c8  1096  sub csp, jssp, #0x8 (8)
0xffff5822f0cc  1100  str lr, [jssp, #-8]!
0xffff5822f0d0  1104  ldr x17, pc+424 (addr 0x0000ffff5822f278)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5822f0d4  1108  blr x17
0xffff5822f0d8  1112  ldr lr, [jssp], #8
0xffff5822f0dc  1116  ret
0xffff5822f0e0  1120  and x10, x1, #0xfffffffffff00000
0xffff5822f0e4  1124  ldr x0, [x10, #104]
0xffff5822f0e8  1128  subs x0, x0, #0x1 (1)
0xffff5822f0ec  1132  str x0, [x10, #104]
0xffff5822f0f0  1136  b.mi #+0x84 (addr 0xffff5822f174)
0xffff5822f0f4  1140  ubfx x16, x1, #8, #12
0xffff5822f0f8  1144  and x10, x1, #0xfffffffffff00000
0xffff5822f0fc  1148  add x10, x10, x16, lsl #2
0xffff5822f100  1152  ubfx x0, x1, #3, #5
0xffff5822f104  1156  ldr x10, [x10, #360]
0xffff5822f108  1160  lsr x10, x10, x0
0xffff5822f10c  1164  tbz w10, #0, #+0x8 (addr 0xffff5822f114)
0xffff5822f110  1168  tbnz w10, #1, #+0xc (addr 0xffff5822f11c)
0xffff5822f114  1172  ldp x2, x0, [jssp], #16
0xffff5822f118  1176  ret
0xffff5822f11c  1180  ldr x10, [x11]
0xffff5822f120  1184  and x0, x10, #0xfffffffffff00000
0xffff5822f124  1188  ldr x0, [x0, #8]
0xffff5822f128  1192  tbz w0, #6, #+0x18 (addr 0xffff5822f140)
0xffff5822f12c  1196  and x0, x1, #0xfffffffffff00000
0xffff5822f130  1200  ldr x0, [x0, #8]
0xffff5822f134  1204  movz x16, #0x58
0xffff5822f138  1208  tst x0, x16
0xffff5822f13c  1212  b.eq #+0x38 (addr 0xffff5822f174)
0xffff5822f140  1216  sub csp, jssp, #0x10 (16)
0xffff5822f144  1220  stp x1, x11, [jssp, #-16]!
0xffff5822f148  1224  ubfx x16, x10, #8, #12
0xffff5822f14c  1228  and x0, x10, #0xfffffffffff00000
0xffff5822f150  1232  add x0, x0, x16, lsl #2
0xffff5822f154  1236  ubfx x1, x10, #3, #5
0xffff5822f158  1240  ldr x11, [x0, #360]
0xffff5822f15c  1244  lsr x11, x11, x1
0xffff5822f160  1248  tbz w11, #0, #+0x10 (addr 0xffff5822f170)
0xffff5822f164  1252  ldp x1, x11, [jssp], #16
0xffff5822f168  1256  ldp x2, x0, [jssp], #16
0xffff5822f16c  1260  ret
0xffff5822f170  1264  ldp x1, x11, [jssp], #16
0xffff5822f174  1268  sub csp, jssp, #0x78 (120)
0xffff5822f178  1272  stp x14, x15, [jssp, #-32]!
0xffff5822f17c  1276  stp x18, lr, [jssp, #16]
0xffff5822f180  1280  stp x9, x11, [jssp, #-32]!
0xffff5822f184  1284  stp x12, x13, [jssp, #16]
0xffff5822f188  1288  stp x5, x6, [jssp, #-32]!
0xffff5822f18c  1292  stp x7, x8, [jssp, #16]
0xffff5822f190  1296  stp x1, x3, [jssp, #-24]!
0xffff5822f194  1300  str x4, [jssp, #16]
0xffff5822f198  1304  mov x0, x1
0xffff5822f19c  1308  mov x1, x11
0xffff5822f1a0  1312  ldr x2, pc+224 (addr 0x0000ffff5822f280)    ;; external reference (isolate)
0xffff5822f1a4  1316  ldr x16, pc+228 (addr 0x0000ffff5822f288)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5822f1a8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff5822f1ac  1324  blr x16
0xffff5822f1b0  1328  ldp x4, x5, [jssp, #16]
0xffff5822f1b4  1332  ldp x1, x3, [jssp], #32
0xffff5822f1b8  1336  ldp x8, x9, [jssp, #16]
0xffff5822f1bc  1340  ldp x6, x7, [jssp], #32
0xffff5822f1c0  1344  ldp x13, x14, [jssp, #16]
0xffff5822f1c4  1348  ldp x11, x12, [jssp], #32
0xffff5822f1c8  1352  ldr lr, [jssp, #16]
0xffff5822f1cc  1356  ldp x15, x18, [jssp], #24
0xffff5822f1d0  1360  ldp x2, x0, [jssp], #16
0xffff5822f1d4  1364  ret
0xffff5822f1d8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5822f1dc  1372  d63f03e0       constant
0xffff5822f1e0  1376  16e798c0       constant
0xffff5822f1e4  1380  00000000       constant
0xffff5822f1e8  1384  582064c0       constant
0xffff5822f1ec  1388  0000ffff       constant
0xffff5822f1f0  1392  16e798c0       constant
0xffff5822f1f4  1396  00000000       constant
0xffff5822f1f8  1400  582064c0       constant
0xffff5822f1fc  1404  0000ffff       constant
0xffff5822f200  1408  16e798c0       constant
0xffff5822f204  1412  00000000       constant
0xffff5822f208  1416  582064c0       constant
0xffff5822f20c  1420  0000ffff       constant
0xffff5822f210  1424  16e782d0       constant
0xffff5822f214  1428  00000000       constant
0xffff5822f218  1432  00c2d958       constant
0xffff5822f21c  1436  00000000       constant
0xffff5822f220  1440  16e798c0       constant
0xffff5822f224  1444  00000000       constant
0xffff5822f228  1448  582064c0       constant
0xffff5822f22c  1452  0000ffff       constant
0xffff5822f230  1456  16e782d0       constant
0xffff5822f234  1460  00000000       constant
0xffff5822f238  1464  00c2d958       constant
0xffff5822f23c  1468  00000000       constant
0xffff5822f240  1472  16e798c0       constant
0xffff5822f244  1476  00000000       constant
0xffff5822f248  1480  582064c0       constant
0xffff5822f24c  1484  0000ffff       constant
0xffff5822f250  1488  16e798c0       constant
0xffff5822f254  1492  00000000       constant
0xffff5822f258  1496  582064c0       constant
0xffff5822f25c  1500  0000ffff       constant
0xffff5822f260  1504  16e782d0       constant
0xffff5822f264  1508  00000000       constant
0xffff5822f268  1512  00c2d958       constant
0xffff5822f26c  1516  00000000       constant
0xffff5822f270  1520  16e798c0       constant
0xffff5822f274  1524  00000000       constant
0xffff5822f278  1528  582064c0       constant
0xffff5822f27c  1532  0000ffff       constant
0xffff5822f280  1536  16e782d0       constant
0xffff5822f284  1540  00000000       constant
0xffff5822f288  1544  00c2d958       constant
0xffff5822f28c  1548  00000000       constant


RelocInfo (size = 59)
0xffff5822ec88  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822ecac  code target (STUB)  (0xffff582064c0)
0xffff5822ed24  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822ed48  code target (STUB)  (0xffff582064c0)
0xffff5822ed88  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822edac  code target (STUB)  (0xffff582064c0)
0xffff5822edec  external reference (isolate)  (0x16e782d0)
0xffff5822edf0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822ee20  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822ee44  code target (STUB)  (0xffff582064c0)
0xffff5822eef4  external reference (isolate)  (0x16e782d0)
0xffff5822eef8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822ef90  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822efb4  code target (STUB)  (0xffff582064c0)
0xffff5822f014  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822f038  code target (STUB)  (0xffff582064c0)
0xffff5822f078  external reference (isolate)  (0x16e782d0)
0xffff5822f07c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822f0ac  external reference (store_buffer_top)  (0x16e798c0)
0xffff5822f0d0  code target (STUB)  (0xffff582064c0)
0xffff5822f1a0  external reference (isolate)  (0x16e782d0)
0xffff5822f1a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5822f1d8  constant pool (size 184)


kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 493)
0xffff5822f300     0  ldur x4, [x3, #47]
0xffff5822f304     4  tbnz w2, #0, #+0xb0 (addr 0xffff5822f3b4)
0xffff5822f308     8  asr x6, x2, #32
0xffff5822f30c    12  add x5, x4, #0x17 (23)
0xffff5822f310    16  ldr x7, [x5, w6, sxtw #3]
0xffff5822f314    20  ldr x4, pc+340 (addr 0x0000ffff5822f468)    ;; object: 0x39c04241 <undefined>
0xffff5822f318    24  cmp x7, x4
0xffff5822f31c    28  b.eq #+0x94 (addr 0xffff5822f3b0)
0xffff5822f320    32  ldur x4, [x7, #7]
0xffff5822f324    36  ldur x5, [x4, #-1]
0xffff5822f328    40  ldrb w6, [x5, #7]
0xffff5822f32c    44  cmp w6, #0x7 (7)
0xffff5822f330    48  b.ne #+0x80 (addr 0xffff5822f3b0)
0xffff5822f334    52  movz x1, #0x92c0
0xffff5822f338    56  movk x1, #0x16e7, lsl #16
0xffff5822f33c    60  ldp x2, x0, [x1]
0xffff5822f340    64  adds x16, x2, #0x48 (72)
0xffff5822f344    68  ccmp x16, x0, #nzCv, lo
0xffff5822f348    72  b.hi #+0xb4 (addr 0xffff5822f3fc)
0xffff5822f34c    76  str x16, [x1]
0xffff5822f350    80  orr x2, x2, #0x1
0xffff5822f354    84  stur x5, [x2, #-1]
0xffff5822f358    88  ldur x0, [x4, #7]
0xffff5822f35c    92  stur x0, [x2, #7]
0xffff5822f360    96  ldur x0, [x4, #15]
0xffff5822f364   100  stur x0, [x2, #15]
0xffff5822f368   104  ldur x0, [x4, #23]
0xffff5822f36c   108  stur x0, [x2, #23]
0xffff5822f370   112  ldur x0, [x4, #31]
0xffff5822f374   116  stur x0, [x2, #31]
0xffff5822f378   120  ldur x0, [x4, #39]
0xffff5822f37c   124  stur x0, [x2, #39]
0xffff5822f380   128  ldur x0, [x4, #47]
0xffff5822f384   132  stur x0, [x2, #47]
0xffff5822f388   136  add x0, x2, #0x38 (56)
0xffff5822f38c   140  ldr x1, pc+228 (addr 0x0000ffff5822f470)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5822f390   144  stur x1, [x0, #-1]
0xffff5822f394   148  stur x7, [x0, #7]
0xffff5822f398   152  ldur w0, [x7, #35]
0xffff5822f39c   156  add w0, w0, #0x1 (1)
0xffff5822f3a0   160  lsl x0, x0, #32
0xffff5822f3a4   164  stur x0, [x7, #31]
0xffff5822f3a8   168  mov x0, x2
0xffff5822f3ac   172  ret
0xffff5822f3b0   176  b #+0xe0 (addr 0xffff5822f490)
0xffff5822f3b4   180  sub csp, jssp, #0x10 (16)
0xffff5822f3b8   184  stp fp, lr, [jssp, #-16]!
0xffff5822f3bc   188  movz fp, #0xa00000000
0xffff5822f3c0   192  sub csp, jssp, #0x8 (8)
0xffff5822f3c4   196  str fp, [jssp, #-8]!
0xffff5822f3c8   200  add fp, jssp, #0x8 (8)
0xffff5822f3cc   204  ldur x16, [x2, #-1]
0xffff5822f3d0   208  ldr x17, [x26, #120]
0xffff5822f3d4   212  cmp x16, x17
0xffff5822f3d8   216  b.ne #+0xc8 (addr 0xffff5822f4a0)
0xffff5822f3dc   220  ldur d29, [x2, #7]
0xffff5822f3e0   224  fcvtzs w6, d29
0xffff5822f3e4   228  scvtf d0, w6
0xffff5822f3e8   232  fcmp d29, d0
0xffff5822f3ec   236  b.ne #+0xb4 (addr 0xffff5822f4a0)
0xffff5822f3f0   240  ldr lr, [jssp, #16]
0xffff5822f3f4   244  ldp xzr, fp, [jssp], #24
0xffff5822f3f8   248  b #-0xec (addr 0xffff5822f30c)
0xffff5822f3fc   252  sub csp, jssp, #0x10 (16)
0xffff5822f400   256  stp fp, lr, [jssp, #-16]!
0xffff5822f404   260  movz fp, #0xa00000000
0xffff5822f408   264  sub csp, jssp, #0x8 (8)
0xffff5822f40c   268  str fp, [jssp, #-8]!
0xffff5822f410   272  add fp, jssp, #0x8 (8)
0xffff5822f414   276  movz x2, #0x0
0xffff5822f418   280  mov x16, lr
0xffff5822f41c   284  ldr x17, pc+92 (addr 0x0000ffff5822f478)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5822f420   288  blr x17
0xffff5822f424   292  movz x0, #0x4800000000
0xffff5822f428   296  movz x10, #0x0
0xffff5822f42c   300  sub csp, jssp, #0x10 (16)
0xffff5822f430   304  stp x10, x0, [jssp, #-16]!
0xffff5822f434   308  movz x0, #0x2
0xffff5822f438   312  movz x1, #0x5b88
0xffff5822f43c   316  movk x1, #0xe2, lsl #16
0xffff5822f440   320  ldr x16, pc+64 (addr 0x0000ffff5822f480)    ;; code: STUB, CEntryStub, minor: 5
0xffff5822f444   324  blr x16
0xffff5822f448   328  str x0, [jssp, #16]
0xffff5822f44c   332  ldr x16, pc+60 (addr 0x0000ffff5822f488)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5822f450   336  blr x16
0xffff5822f454   340  ldr lr, [jssp, #16]
0xffff5822f458   344  ldp xzr, fp, [jssp], #24
0xffff5822f45c   348  b #-0x108 (addr 0xffff5822f354)
0xffff5822f460   352  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff5822f464   356  d63f03e0       constant
0xffff5822f468   360  39c04241       constant
0xffff5822f46c   364  00000000       constant
0xffff5822f470   368  32b05d81       constant
0xffff5822f474   372  00000000       constant
0xffff5822f478   376  58206820       constant
0xffff5822f47c   380  0000ffff       constant
0xffff5822f480   384  58206260       constant
0xffff5822f484   388  0000ffff       constant
0xffff5822f488   392  582068e0       constant
0xffff5822f48c   396  0000ffff       constant
0xffff5822f490   400  movz x16, #0x0
0xffff5822f494   404  sub csp, jssp, #0x10 (16)
0xffff5822f498   408  stp fp, lr, [jssp, #-16]!
0xffff5822f49c   412  bl #+0xc (addr 0xffff5822f4a8)
0xffff5822f4a0   416  movz x16, #0x8
0xffff5822f4a4   420  bl #+0x14 (addr 0xffff5822f4b8)
0xffff5822f4a8   424  movz x17, #0xa00000000
0xffff5822f4ac   428  sub csp, jssp, #0x10 (16)
0xffff5822f4b0   432  stp x17, cp, [jssp, #-16]!
0xffff5822f4b4   436  add fp, jssp, #0x10 (16)
0xffff5822f4b8   440  ldr x17, pc+24 (addr 0x0000ffff5822f4d0)    ;; lazy deoptimization bailout 0
0xffff5822f4bc   444  add x17, x17, x16
0xffff5822f4c0   448  br x17
0xffff5822f4c4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5822f4c8   456  d63f03e0       constant
0xffff5822f4cc   460  d503201f       constant
0xffff5822f4d0   464  58006000       constant
0xffff5822f4d4   468  0000ffff       constant


Safepoints (size = 21)
0xffff5822f448   328  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff5822f314  embedded object  (0x39c04241 <undefined>)
0xffff5822f38c  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5822f41c  code target (STUB)  (0xffff58206820)
0xffff5822f440  code target (STUB)  (0xffff58206260)
0xffff5822f44c  code target (STUB)  (0xffff582068e0)
0xffff5822f460  constant pool (size 48)
0xffff5822f4b8  runtime entry
0xffff5822f4c4  constant pool (size 20)


kind = STORE_IC
major_key = VectorStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = STRICT
name = VectorStoreICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff5822f560     0  ldur x3, [fp, #-16]
0xffff5822f564     4  ldur x3, [x3, #31]
0xffff5822f568     8  ldur x3, [x3, #87]
0xffff5822f56c    12  add x5, x3, x4, asr #29
0xffff5822f570    16  ldur x5, [x5, #15]
0xffff5822f574    20  tbz w1, #0, #+0x174 (addr 0xffff5822f6e8)
0xffff5822f578    24  ldur x6, [x1, #-1]
0xffff5822f57c    28  ldur x7, [x5, #7]
0xffff5822f580    32  cmp x7, x6
0xffff5822f584    36  b.ne #+0x14 (addr 0xffff5822f598)
0xffff5822f588    40  add x5, x3, x4, asr #29
0xffff5822f58c    44  ldur x5, [x5, #23]
0xffff5822f590    48  add x5, x5, #0x5f (95)
0xffff5822f594    52  br x5
0xffff5822f598    56  ldur x7, [x5, #-1]
0xffff5822f59c    60  ldr x16, [x26, #224]
0xffff5822f5a0    64  cmp x7, x16
0xffff5822f5a4    68  b.ne #+0x5c (addr 0xffff5822f600)
0xffff5822f5a8    72  ldur x7, [x5, #15]
0xffff5822f5ac    76  ldur x7, [x7, #7]
0xffff5822f5b0    80  cmp x6, x7
0xffff5822f5b4    84  b.ne #+0x10 (addr 0xffff5822f5c4)
0xffff5822f5b8    88  ldur x5, [x5, #23]
0xffff5822f5bc    92  add x5, x5, #0x5f (95)
0xffff5822f5c0    96  br x5
0xffff5822f5c4   100  ldur x8, [x5, #7]
0xffff5822f5c8   104  add x8, x5, x8, asr #29
0xffff5822f5cc   108  add x8, x8, #0xf (15)
0xffff5822f5d0   112  add x5, x5, #0x1f (31)
0xffff5822f5d4   116  ldr x7, [x5]
0xffff5822f5d8   120  ldur x7, [x7, #7]
0xffff5822f5dc   124  cmp x6, x7
0xffff5822f5e0   128  b.ne #+0x10 (addr 0xffff5822f5f0)
0xffff5822f5e4   132  ldr x5, [x5, #8]
0xffff5822f5e8   136  add x5, x5, #0x5f (95)
0xffff5822f5ec   140  br x5
0xffff5822f5f0   144  add x5, x5, #0x10 (16)
0xffff5822f5f4   148  cmp x5, x8
0xffff5822f5f8   152  b.lt #-0x24 (addr 0xffff5822f5d4)
0xffff5822f5fc   156  b #+0xcc (addr 0xffff5822f6c8)
0xffff5822f600   160  ldr x16, [x26, #2400]
0xffff5822f604   164  cmp x5, x16
0xffff5822f608   168  b.ne #+0xc0 (addr 0xffff5822f6c8)
0xffff5822f60c   172  tbz w1, #0, #+0xbc (addr 0xffff5822f6c8)
0xffff5822f610   176  ldur x5, [x2, #7]
0xffff5822f614   180  ldur x6, [x1, #-1]
0xffff5822f618   184  add x5, x5, x6
0xffff5822f61c   188  movz x16, #0x6902
0xffff5822f620   192  eor x5, x5, x16
0xffff5822f624   196  ubfx x5, x5, #2, #11
0xffff5822f628   200  add x8, x5, x5, lsl #1
0xffff5822f62c   204  ldr x6, pc+204 (addr 0x0000ffff5822f6f8)    ;; external reference (StubCache::primary_->key)
0xffff5822f630   208  add x6, x6, x8, lsl #3
0xffff5822f634   212  ldr x7, [x6]
0xffff5822f638   216  cmp x2, x7
0xffff5822f63c   220  b.ne #+0x34 (addr 0xffff5822f670)
0xffff5822f640   224  ldr x7, [x6, #16]
0xffff5822f644   228  ldur x8, [x1, #-1]
0xffff5822f648   232  cmp x7, x8
0xffff5822f64c   236  b.ne #+0x24 (addr 0xffff5822f670)
0xffff5822f650   240  ldr x6, [x6, #8]
0xffff5822f654   244  ldur w7, [x6, #63]
0xffff5822f658   248  and w7, w7, #0xffffffc7
0xffff5822f65c   252  movz w16, #0x6902
0xffff5822f660   256  cmp w7, w16
0xffff5822f664   260  b.ne #+0xc (addr 0xffff5822f670)
0xffff5822f668   264  add x6, x6, #0x5f (95)
0xffff5822f66c   268  br x6
0xffff5822f670   272  sub x5, x5, x2, lsr #2
0xffff5822f674   276  movz x16, #0x1a40
0xffff5822f678   280  add x5, x5, x16
0xffff5822f67c   284  and x5, x5, #0x1ff
0xffff5822f680   288  add x8, x5, x5, lsl #1
0xffff5822f684   292  ldr x6, pc+124 (addr 0x0000ffff5822f700)    ;; external reference (StubCache::secondary_->key)
0xffff5822f688   296  add x6, x6, x8, lsl #3
0xffff5822f68c   300  ldr x7, [x6]
0xffff5822f690   304  cmp x2, x7
0xffff5822f694   308  b.ne #+0x34 (addr 0xffff5822f6c8)
0xffff5822f698   312  ldr x7, [x6, #16]
0xffff5822f69c   316  ldur x8, [x1, #-1]
0xffff5822f6a0   320  cmp x7, x8
0xffff5822f6a4   324  b.ne #+0x24 (addr 0xffff5822f6c8)
0xffff5822f6a8   328  ldr x6, [x6, #8]
0xffff5822f6ac   332  ldur w7, [x6, #63]
0xffff5822f6b0   336  and w7, w7, #0xffffffc7
0xffff5822f6b4   340  movz w16, #0x6902
0xffff5822f6b8   344  cmp w7, w16
0xffff5822f6bc   348  b.ne #+0xc (addr 0xffff5822f6c8)
0xffff5822f6c0   352  add x6, x6, #0x5f (95)
0xffff5822f6c4   356  br x6
0xffff5822f6c8   360  sub csp, jssp, #0x28 (40)
0xffff5822f6cc   364  stp x4, x0, [jssp, #-32]!
0xffff5822f6d0   368  stp x2, x1, [jssp, #16]
0xffff5822f6d4   372  str x3, [jssp, #-8]!
0xffff5822f6d8   376  movz x0, #0x5
0xffff5822f6dc   380  ldr x1, pc+44 (addr 0x0000ffff5822f708)    ;; external reference (Runtime::StoreIC_Miss)
0xffff5822f6e0   384  ldr x16, pc+48 (addr 0x0000ffff5822f710)    ;; code: STUB, CEntryStub, minor: 4
0xffff5822f6e4   388  br x16
0xffff5822f6e8   392  ldr x6, [x26, #120]
0xffff5822f6ec   396  b #-0x170 (addr 0xffff5822f57c)
0xffff5822f6f0   400  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5822f6f4   404  d63f03e0       constant
0xffff5822f6f8   408  16e93950       constant
0xffff5822f6fc   412  00000000       constant
0xffff5822f700   416  16e9f950       constant
0xffff5822f704   420  00000000       constant
0xffff5822f708   424  00c87f60       constant
0xffff5822f70c   428  00000000       constant
0xffff5822f710   432  58206060       constant
0xffff5822f714   436  0000ffff       constant


RelocInfo (size = 19)
0xffff5822f62c  external reference (StubCache::primary_->key)  (0x16e93950)
0xffff5822f684  external reference (StubCache::secondary_->key)  (0x16e9f950)
0xffff5822f6dc  external reference (Runtime::StoreIC_Miss)  (0xc87f60)
0xffff5822f6e0  code target (STUB)  (0xffff58206060)
0xffff5822f6f0  constant pool (size 40)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 397)
0xffff58230360     0  movz x2, #0x92c0
0xffff58230364     4  movk x2, #0x16e7, lsl #16
0xffff58230368     8  ldp x3, x0, [x2]
0xffff5823036c    12  adds x16, x3, #0x78 (120)
0xffff58230370    16  ccmp x16, x0, #nzCv, lo
0xffff58230374    20  b.hi #+0x84 (addr 0xffff582303f8)
0xffff58230378    24  str x16, [x2]
0xffff5823037c    28  orr x3, x3, #0x1
0xffff58230380    32  ldr x0, pc+232 (addr 0x0000ffff58230468)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58230384    36  stur x0, [x3, #-1]
0xffff58230388    40  movz x0, #0xd00000000
0xffff5823038c    44  stur x0, [x3, #7]
0xffff58230390    48  stur x1, [x3, #15]
0xffff58230394    52  stur cp, [x3, #23]
0xffff58230398    56  ldr x0, pc+216 (addr 0x0000ffff58230470)    ;; object: 0x39c04519 <the hole>
0xffff5823039c    60  stur x0, [x3, #31]
0xffff582303a0    64  ldur x0, [cp, #39]
0xffff582303a4    68  stur x0, [x3, #39]
0xffff582303a8    72  ldr x0, pc+208 (addr 0x0000ffff58230478)    ;; object: 0x39c04241 <undefined>
0xffff582303ac    76  stur x0, [x3, #47]
0xffff582303b0    80  ldr x0, pc+208 (addr 0x0000ffff58230480)    ;; object: 0x39c04241 <undefined>
0xffff582303b4    84  stur x0, [x3, #55]
0xffff582303b8    88  ldr x0, pc+208 (addr 0x0000ffff58230488)    ;; object: 0x39c04241 <undefined>
0xffff582303bc    92  stur x0, [x3, #63]
0xffff582303c0    96  ldr x0, pc+208 (addr 0x0000ffff58230490)    ;; object: 0x39c04241 <undefined>
0xffff582303c4   100  stur x0, [x3, #71]
0xffff582303c8   104  ldr x0, pc+208 (addr 0x0000ffff58230498)    ;; object: 0x39c04241 <undefined>
0xffff582303cc   108  stur x0, [x3, #79]
0xffff582303d0   112  ldr x0, pc+208 (addr 0x0000ffff582304a0)    ;; object: 0x39c04241 <undefined>
0xffff582303d4   116  stur x0, [x3, #87]
0xffff582303d8   120  ldr x0, pc+208 (addr 0x0000ffff582304a8)    ;; object: 0x39c04241 <undefined>
0xffff582303dc   124  stur x0, [x3, #95]
0xffff582303e0   128  ldr x0, pc+208 (addr 0x0000ffff582304b0)    ;; object: 0x39c04241 <undefined>
0xffff582303e4   132  stur x0, [x3, #103]
0xffff582303e8   136  ldr x0, pc+208 (addr 0x0000ffff582304b8)    ;; object: 0x39c04241 <undefined>
0xffff582303ec   140  stur x0, [x3, #111]
0xffff582303f0   144  mov x0, x3
0xffff582303f4   148  ret
0xffff582303f8   152  sub csp, jssp, #0x10 (16)
0xffff582303fc   156  stp fp, lr, [jssp, #-16]!
0xffff58230400   160  movz fp, #0xa00000000
0xffff58230404   164  sub csp, jssp, #0x8 (8)
0xffff58230408   168  str fp, [jssp, #-8]!
0xffff5823040c   172  add fp, jssp, #0x8 (8)
0xffff58230410   176  movz x3, #0x0
0xffff58230414   180  mov x16, lr
0xffff58230418   184  ldr x17, pc+168 (addr 0x0000ffff582304c0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5823041c   188  blr x17
0xffff58230420   192  movz x0, #0x7800000000
0xffff58230424   196  movz x10, #0x0
0xffff58230428   200  sub csp, jssp, #0x10 (16)
0xffff5823042c   204  stp x10, x0, [jssp, #-16]!
0xffff58230430   208  movz x0, #0x2
0xffff58230434   212  movz x1, #0x5b88
0xffff58230438   216  movk x1, #0xe2, lsl #16
0xffff5823043c   220  ldr x16, pc+140 (addr 0x0000ffff582304c8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58230440   224  blr x16
0xffff58230444   228  str x0, [jssp, #24]
0xffff58230448   232  ldr x16, pc+136 (addr 0x0000ffff582304d0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5823044c   236  blr x16
0xffff58230450   240  ldr lr, [jssp, #16]
0xffff58230454   244  ldp xzr, fp, [jssp], #24
0xffff58230458   248  b #-0xd8 (addr 0xffff58230380)
0xffff5823045c   252  580003df       constant pool begin (num_const = 30)    ;; constant pool
0xffff58230460   256  d63f03e0       constant
0xffff58230464   260  d503201f       constant
0xffff58230468   264  32b06149       constant
0xffff5823046c   268  00000000       constant
0xffff58230470   272  39c04519       constant
0xffff58230474   276  00000000       constant
0xffff58230478   280  39c04241       constant
0xffff5823047c   284  00000000       constant
0xffff58230480   288  39c04241       constant
0xffff58230484   292  00000000       constant
0xffff58230488   296  39c04241       constant
0xffff5823048c   300  00000000       constant
0xffff58230490   304  39c04241       constant
0xffff58230494   308  00000000       constant
0xffff58230498   312  39c04241       constant
0xffff5823049c   316  00000000       constant
0xffff582304a0   320  39c04241       constant
0xffff582304a4   324  00000000       constant
0xffff582304a8   328  39c04241       constant
0xffff582304ac   332  00000000       constant
0xffff582304b0   336  39c04241       constant
0xffff582304b4   340  00000000       constant
0xffff582304b8   344  39c04241       constant
0xffff582304bc   348  00000000       constant
0xffff582304c0   352  58206820       constant
0xffff582304c4   356  0000ffff       constant
0xffff582304c8   360  58206260       constant
0xffff582304cc   364  0000ffff       constant
0xffff582304d0   368  582068e0       constant
0xffff582304d4   372  0000ffff       constant


Safepoints (size = 21)
0xffff58230444   228  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 20)
0xffff58230380  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58230398  embedded object  (0x39c04519 <the hole>)
0xffff582303a8  embedded object  (0x39c04241 <undefined>)
0xffff582303b0  embedded object  (0x39c04241 <undefined>)
0xffff582303b8  embedded object  (0x39c04241 <undefined>)
0xffff582303c0  embedded object  (0x39c04241 <undefined>)
0xffff582303c8  embedded object  (0x39c04241 <undefined>)
0xffff582303d0  embedded object  (0x39c04241 <undefined>)
0xffff582303d8  embedded object  (0x39c04241 <undefined>)
0xffff582303e0  embedded object  (0x39c04241 <undefined>)
0xffff582303e8  embedded object  (0x39c04241 <undefined>)
0xffff58230418  code target (STUB)  (0xffff58206820)
0xffff5823043c  code target (STUB)  (0xffff58206260)
0xffff58230448  code target (STUB)  (0xffff582068e0)
0xffff5823045c  constant pool (size 124)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff58230560     0  movz x1, #0x92c0
0xffff58230564     4  movk x1, #0x16e7, lsl #16
0xffff58230568     8  ldp x3, x0, [x1]
0xffff5823056c    12  adds x16, x3, #0x48 (72)
0xffff58230570    16  ccmp x16, x0, #nzCv, lo
0xffff58230574    20  b.hi #+0x1bc (addr 0xffff58230730)
0xffff58230578    24  str x16, [x1]
0xffff5823057c    28  orr x3, x3, #0x1
0xffff58230580    32  ldur x0, [cp, #39]
0xffff58230584    36  movz x16, #0x297
0xffff58230588    40  ldr x1, [x0, x16]
0xffff5823058c    44  stur x1, [x3, #-1]
0xffff58230590    48  ldr x1, pc+528 (addr 0x0000ffff582307a0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58230594    52  stur x1, [x3, #7]
0xffff58230598    56  ldr x1, pc+528 (addr 0x0000ffff582307a8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5823059c    60  stur x1, [x3, #15]
0xffff582305a0    64  ldr x1, pc+528 (addr 0x0000ffff582307b0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582305a4    68  stur x1, [x3, #47]
0xffff582305a8    72  ldr x1, pc+528 (addr 0x0000ffff582307b8)    ;; object: 0x39c04519 <the hole>
0xffff582305ac    76  stur x1, [x3, #23]
0xffff582305b0    80  stur x2, [x3, #31]
0xffff582305b4    84  stur cp, [x3, #39]
0xffff582305b8    88  ldur x1, [x2, #23]
0xffff582305bc    92  movz x4, #0x0
0xffff582305c0    96  cmp x1, x4
0xffff582305c4   100  b.eq #+0x150 (addr 0xffff58230714)
0xffff582305c8   104  ldur w4, [x1, #11]
0xffff582305cc   108  subs w4, w4, #0x4 (4)
0xffff582305d0   112  b.vs #+0x230 (addr 0xffff58230800)
0xffff582305d4   116  mov x5, x4
0xffff582305d8   120  cmp w5, #0x1 (1)
0xffff582305dc   124  b.lt #+0xb4 (addr 0xffff58230690)
0xffff582305e0   128  add x4, x1, #0xf (15)
0xffff582305e4   132  ldr x6, [x4, w5, sxtw #3]
0xffff582305e8   136  ldur x4, [x6, #7]
0xffff582305ec   140  add x6, x1, #0x27 (39)
0xffff582305f0   144  ldr x7, [x6, w5, sxtw #3]
0xffff582305f4   148  add x6, x1, #0x17 (23)
0xffff582305f8   152  ldr x8, [x6, w5, sxtw #3]
0xffff582305fc   156  ldur x6, [x8, #7]
0xffff58230600   160  cmp x0, x4
0xffff58230604   164  b.ne #+0x1c (addr 0xffff58230620)
0xffff58230608   168  mov x4, #0xffffffff00000000
0xffff5823060c   172  cmp x7, x4
0xffff58230610   176  b.ne #+0x10 (addr 0xffff58230620)
0xffff58230614   180  movz x4, #0x0
0xffff58230618   184  cmp x6, x4
0xffff5823061c   188  b.ne #+0xc (addr 0xffff58230628)
0xffff58230620   192  sub w5, w5, #0x4 (4)
0xffff58230624   196  b #-0x4c (addr 0xffff582305d8)
0xffff58230628   200  add x4, x1, #0x1f (31)
0xffff5823062c   204  ldr x7, [x4, w5, sxtw #3]
0xffff58230630   208  ldur x7, [x7, #7]
0xffff58230634   212  movz x4, #0x0
0xffff58230638   216  cmp x7, x4
0xffff5823063c   220  b.eq #+0x50 (addr 0xffff5823068c)
0xffff58230640   224  add x4, x6, #0x5f (95)
0xffff58230644   228  stur x4, [x3, #55]
0xffff58230648   232  stur x7, [x3, #47]
0xffff5823064c   236  movz x16, #0x557
0xffff58230650   240  ldr x4, [x0, x16]
0xffff58230654   244  stur x4, [x3, #63]
0xffff58230658   248  mov x4, x3
0xffff5823065c   252  movz x16, #0x557
0xffff58230660   256  str x4, [x0, x16]
0xffff58230664   260  add x6, x0, #0x557 (1367)
0xffff58230668   264  and x4, x0, #0xfffffffffff00000
0xffff5823066c   268  ldr x4, [x4, #8]
0xffff58230670   272  tbz w4, #2, #+0x18 (addr 0xffff58230688)
0xffff58230674   276  sub csp, jssp, #0x8 (8)
0xffff58230678   280  str lr, [jssp, #-8]!
0xffff5823067c   284  ldr x16, pc+324 (addr 0x0000ffff582307c0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff58230680   288  blr x16
0xffff58230684   292  ldr lr, [jssp], #8
0xffff58230688   296  b #+0x8 (addr 0xffff58230690)
0xffff5823068c   300  b #+0x184 (addr 0xffff58230810)
0xffff58230690   304  cmp w5, #0x1 (1)
0xffff58230694   308  b.ge #+0x94 (addr 0xffff58230728)
0xffff58230698   312  ldur x1, [x1, #15]
0xffff5823069c   316  ldur x1, [x1, #7]
0xffff582306a0   320  movz x4, #0x0
0xffff582306a4   324  cmp x1, x4
0xffff582306a8   328  b.eq #+0x54 (addr 0xffff582306fc)
0xffff582306ac   332  add x1, x1, #0x5f (95)
0xffff582306b0   336  stur x1, [x3, #55]
0xffff582306b4   340  ldr x1, pc+276 (addr 0x0000ffff582307c8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582306b8   344  stur x1, [x3, #47]
0xffff582306bc   348  movz x16, #0x557
0xffff582306c0   352  ldr x1, [x0, x16]
0xffff582306c4   356  stur x1, [x3, #63]
0xffff582306c8   360  mov x1, x3
0xffff582306cc   364  movz x16, #0x557
0xffff582306d0   368  str x1, [x0, x16]
0xffff582306d4   372  add x2, x0, #0x557 (1367)
0xffff582306d8   376  and x1, x0, #0xfffffffffff00000
0xffff582306dc   380  ldr x1, [x1, #8]
0xffff582306e0   384  tbz w1, #2, #+0x18 (addr 0xffff582306f8)
0xffff582306e4   388  sub csp, jssp, #0x8 (8)
0xffff582306e8   392  str lr, [jssp, #-8]!
0xffff582306ec   396  ldr x16, pc+228 (addr 0x0000ffff582307d0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff582306f0   400  blr x16
0xffff582306f4   404  ldr lr, [jssp], #8
0xffff582306f8   408  b #+0x30 (addr 0xffff58230728)
0xffff582306fc   412  ldr x0, pc+220 (addr 0x0000ffff582307d8)    ;; object: 0x39c04241 <undefined>
0xffff58230700   416  stur x0, [x3, #63]
0xffff58230704   420  ldur x0, [x2, #15]
0xffff58230708   424  add x0, x0, #0x5f (95)
0xffff5823070c   428  stur x0, [x3, #55]
0xffff58230710   432  b #+0x18 (addr 0xffff58230728)
0xffff58230714   436  ldr x0, pc+204 (addr 0x0000ffff582307e0)    ;; object: 0x39c04241 <undefined>
0xffff58230718   440  stur x0, [x3, #63]
0xffff5823071c   444  ldur x0, [x2, #15]
0xffff58230720   448  add x0, x0, #0x5f (95)
0xffff58230724   452  stur x0, [x3, #55]
0xffff58230728   456  mov x0, x3
0xffff5823072c   460  ret
0xffff58230730   464  sub csp, jssp, #0x10 (16)
0xffff58230734   468  stp fp, lr, [jssp, #-16]!
0xffff58230738   472  movz fp, #0xa00000000
0xffff5823073c   476  sub csp, jssp, #0x8 (8)
0xffff58230740   480  str fp, [jssp, #-8]!
0xffff58230744   484  add fp, jssp, #0x8 (8)
0xffff58230748   488  movz x3, #0x0
0xffff5823074c   492  mov x16, lr
0xffff58230750   496  ldr x17, pc+152 (addr 0x0000ffff582307e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58230754   500  blr x17
0xffff58230758   504  movz x0, #0x4800000000
0xffff5823075c   508  movz x10, #0x0
0xffff58230760   512  sub csp, jssp, #0x10 (16)
0xffff58230764   516  stp x10, x0, [jssp, #-16]!
0xffff58230768   520  movz x0, #0x2
0xffff5823076c   524  movz x1, #0x5b88
0xffff58230770   528  movk x1, #0xe2, lsl #16
0xffff58230774   532  ldr x16, pc+124 (addr 0x0000ffff582307f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58230778   536  blr x16
0xffff5823077c   540  str x0, [jssp, #24]
0xffff58230780   544  ldr x16, pc+120 (addr 0x0000ffff582307f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58230784   548  blr x16
0xffff58230788   552  ldr lr, [jssp, #16]
0xffff5823078c   556  ldp xzr, fp, [jssp], #24
0xffff58230790   560  b #-0x210 (addr 0xffff58230580)
0xffff58230794   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff58230798   568  d63f03e0       constant
0xffff5823079c   572  d503201f       constant
0xffff582307a0   576  39c04201       constant
0xffff582307a4   580  00000000       constant
0xffff582307a8   584  39c04201       constant
0xffff582307ac   588  00000000       constant
0xffff582307b0   592  39c04201       constant
0xffff582307b4   596  00000000       constant
0xffff582307b8   600  39c04519       constant
0xffff582307bc   604  00000000       constant
0xffff582307c0   608  5822d2c0       constant
0xffff582307c4   612  0000ffff       constant
0xffff582307c8   616  39c04201       constant
0xffff582307cc   620  00000000       constant
0xffff582307d0   624  5822daa0       constant
0xffff582307d4   628  0000ffff       constant
0xffff582307d8   632  39c04241       constant
0xffff582307dc   636  00000000       constant
0xffff582307e0   640  39c04241       constant
0xffff582307e4   644  00000000       constant
0xffff582307e8   648  58206820       constant
0xffff582307ec   652  0000ffff       constant
0xffff582307f0   656  58206260       constant
0xffff582307f4   660  0000ffff       constant
0xffff582307f8   664  582068e0       constant
0xffff582307fc   668  0000ffff       constant
0xffff58230800   672  movz x16, #0x0
0xffff58230804   676  sub csp, jssp, #0x10 (16)
0xffff58230808   680  stp fp, lr, [jssp, #-16]!
0xffff5823080c   684  bl #+0x14 (addr 0xffff58230820)
0xffff58230810   688  movz x16, #0x8
0xffff58230814   692  sub csp, jssp, #0x10 (16)
0xffff58230818   696  stp fp, lr, [jssp, #-16]!
0xffff5823081c   700  bl #+0x4 (addr 0xffff58230820)
0xffff58230820   704  movz x17, #0xa00000000
0xffff58230824   708  sub csp, jssp, #0x10 (16)
0xffff58230828   712  stp x17, cp, [jssp, #-16]!
0xffff5823082c   716  add fp, jssp, #0x10 (16)
0xffff58230830   720  ldr x17, pc+24 (addr 0x0000ffff58230848)    ;; lazy deoptimization bailout 0
0xffff58230834   724  add x17, x17, x16
0xffff58230838   728  br x17
0xffff5823083c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58230840   736  d63f03e0       constant
0xffff58230844   740  d503201f       constant
0xffff58230848   744  58006000       constant
0xffff5823084c   748  0000ffff       constant


Safepoints (size = 21)
0xffff5823077c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff58230590  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58230598  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582305a0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582305a8  embedded object  (0x39c04519 <the hole>)
0xffff5823067c  code target (STUB)  (0xffff5822d2c0)
0xffff582306b4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582306ec  code target (STUB)  (0xffff5822daa0)
0xffff582306fc  embedded object  (0x39c04241 <undefined>)
0xffff58230714  embedded object  (0x39c04241 <undefined>)
0xffff58230750  code target (STUB)  (0xffff58206820)
0xffff58230774  code target (STUB)  (0xffff58206260)
0xffff58230780  code target (STUB)  (0xffff582068e0)
0xffff58230794  constant pool (size 108)
0xffff58230830  runtime entry
0xffff5823083c  constant pool (size 20)


kind = LOAD_IC
major_key = LoadICTrampolineStub
ic_state = GENERIC
extra_ic_state = 1
name = LoadICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff582308e0     0  ldur x3, [fp, #-16]
0xffff582308e4     4  ldur x3, [x3, #31]
0xffff582308e8     8  ldur x3, [x3, #87]
0xffff582308ec    12  add x4, x3, x0, asr #29
0xffff582308f0    16  ldur x4, [x4, #15]
0xffff582308f4    20  tbz w1, #0, #+0x170 (addr 0xffff58230a64)
0xffff582308f8    24  ldur x5, [x1, #-1]
0xffff582308fc    28  ldur x6, [x4, #7]
0xffff58230900    32  cmp x6, x5
0xffff58230904    36  b.ne #+0x14 (addr 0xffff58230918)
0xffff58230908    40  add x4, x3, x0, asr #29
0xffff5823090c    44  ldur x4, [x4, #23]
0xffff58230910    48  add x4, x4, #0x5f (95)
0xffff58230914    52  br x4
0xffff58230918    56  ldur x6, [x4, #-1]
0xffff5823091c    60  ldr x16, [x26, #224]
0xffff58230920    64  cmp x6, x16
0xffff58230924    68  b.ne #+0x5c (addr 0xffff58230980)
0xffff58230928    72  ldur x6, [x4, #15]
0xffff5823092c    76  ldur x6, [x6, #7]
0xffff58230930    80  cmp x5, x6
0xffff58230934    84  b.ne #+0x10 (addr 0xffff58230944)
0xffff58230938    88  ldur x4, [x4, #23]
0xffff5823093c    92  add x4, x4, #0x5f (95)
0xffff58230940    96  br x4
0xffff58230944   100  ldur x7, [x4, #7]
0xffff58230948   104  add x7, x4, x7, asr #29
0xffff5823094c   108  add x7, x7, #0xf (15)
0xffff58230950   112  add x4, x4, #0x1f (31)
0xffff58230954   116  ldr x6, [x4]
0xffff58230958   120  ldur x6, [x6, #7]
0xffff5823095c   124  cmp x5, x6
0xffff58230960   128  b.ne #+0x10 (addr 0xffff58230970)
0xffff58230964   132  ldr x4, [x4, #8]
0xffff58230968   136  add x4, x4, #0x5f (95)
0xffff5823096c   140  br x4
0xffff58230970   144  add x4, x4, #0x10 (16)
0xffff58230974   148  cmp x4, x7
0xffff58230978   152  b.lt #-0x24 (addr 0xffff58230954)
0xffff5823097c   156  b #+0xcc (addr 0xffff58230a48)
0xffff58230980   160  ldr x16, [x26, #2400]
0xffff58230984   164  cmp x4, x16
0xffff58230988   168  b.ne #+0xc0 (addr 0xffff58230a48)
0xffff5823098c   172  tbz w1, #0, #+0xbc (addr 0xffff58230a48)
0xffff58230990   176  ldur x4, [x2, #7]
0xffff58230994   180  ldur x5, [x1, #-1]
0xffff58230998   184  add x4, x4, x5
0xffff5823099c   188  movz x16, #0x5102
0xffff582309a0   192  eor x4, x4, x16
0xffff582309a4   196  ubfx x4, x4, #2, #11
0xffff582309a8   200  add x7, x4, x4, lsl #1
0xffff582309ac   204  ldr x5, pc+204 (addr 0x0000ffff58230a78)    ;; external reference (StubCache::primary_->key)
0xffff582309b0   208  add x5, x5, x7, lsl #3
0xffff582309b4   212  ldr x6, [x5]
0xffff582309b8   216  cmp x2, x6
0xffff582309bc   220  b.ne #+0x34 (addr 0xffff582309f0)
0xffff582309c0   224  ldr x6, [x5, #16]
0xffff582309c4   228  ldur x7, [x1, #-1]
0xffff582309c8   232  cmp x6, x7
0xffff582309cc   236  b.ne #+0x24 (addr 0xffff582309f0)
0xffff582309d0   240  ldr x5, [x5, #8]
0xffff582309d4   244  ldur w6, [x5, #63]
0xffff582309d8   248  and w6, w6, #0xffffffc7
0xffff582309dc   252  movz w16, #0x5102
0xffff582309e0   256  cmp w6, w16
0xffff582309e4   260  b.ne #+0xc (addr 0xffff582309f0)
0xffff582309e8   264  add x5, x5, #0x5f (95)
0xffff582309ec   268  br x5
0xffff582309f0   272  sub x4, x4, x2, lsr #2
0xffff582309f4   276  movz x16, #0x1440
0xffff582309f8   280  add x4, x4, x16
0xffff582309fc   284  and x4, x4, #0x1ff
0xffff58230a00   288  add x7, x4, x4, lsl #1
0xffff58230a04   292  ldr x5, pc+124 (addr 0x0000ffff58230a80)    ;; external reference (StubCache::secondary_->key)
0xffff58230a08   296  add x5, x5, x7, lsl #3
0xffff58230a0c   300  ldr x6, [x5]
0xffff58230a10   304  cmp x2, x6
0xffff58230a14   308  b.ne #+0x34 (addr 0xffff58230a48)
0xffff58230a18   312  ldr x6, [x5, #16]
0xffff58230a1c   316  ldur x7, [x1, #-1]
0xffff58230a20   320  cmp x6, x7
0xffff58230a24   324  b.ne #+0x24 (addr 0xffff58230a48)
0xffff58230a28   328  ldr x5, [x5, #8]
0xffff58230a2c   332  ldur w6, [x5, #63]
0xffff58230a30   336  and w6, w6, #0xffffffc7
0xffff58230a34   340  movz w16, #0x5102
0xffff58230a38   344  cmp w6, w16
0xffff58230a3c   348  b.ne #+0xc (addr 0xffff58230a48)
0xffff58230a40   352  add x5, x5, #0x5f (95)
0xffff58230a44   356  br x5
0xffff58230a48   360  sub csp, jssp, #0x20 (32)
0xffff58230a4c   364  stp x3, x0, [jssp, #-32]!
0xffff58230a50   368  stp x2, x1, [jssp, #16]
0xffff58230a54   372  movz x0, #0x4
0xffff58230a58   376  ldr x1, pc+48 (addr 0x0000ffff58230a88)    ;; external reference (Runtime::LoadIC_Miss)
0xffff58230a5c   380  ldr x16, pc+52 (addr 0x0000ffff58230a90)    ;; code: STUB, CEntryStub, minor: 4
0xffff58230a60   384  br x16
0xffff58230a64   388  ldr x5, [x26, #120]
0xffff58230a68   392  b #-0x16c (addr 0xffff582308fc)
0xffff58230a6c   396  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff58230a70   400  d63f03e0       constant
0xffff58230a74   404  d503201f       constant
0xffff58230a78   408  16e93950       constant
0xffff58230a7c   412  00000000       constant
0xffff58230a80   416  16e9f950       constant
0xffff58230a84   420  00000000       constant
0xffff58230a88   424  00c86e20       constant
0xffff58230a8c   428  00000000       constant
0xffff58230a90   432  58206060       constant
0xffff58230a94   436  0000ffff       constant


RelocInfo (size = 19)
0xffff582309ac  external reference (StubCache::primary_->key)  (0x16e93950)
0xffff58230a04  external reference (StubCache::secondary_->key)  (0x16e9f950)
0xffff58230a58  external reference (Runtime::LoadIC_Miss)  (0xc86e20)
0xffff58230a5c  code target (STUB)  (0xffff58206060)
0xffff58230a6c  constant pool (size 44)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_One
compiler = unknown
Instructions (size = 344)
0xffff58230b00     0  ldur cp, [x1, #39]
0xffff58230b04     4  cmp x3, x1
0xffff58230b08     8  b.ne #+0xc8 (addr 0xffff58230bd0)
0xffff58230b0c    12  ldr x16, [x26, #40]
0xffff58230b10    16  cmp x2, x16
0xffff58230b14    20  b.eq #+0xa4 (addr 0xffff58230bb8)
0xffff58230b18    24  ldursw x3, [x2, #11]
0xffff58230b1c    28  and x3, x3, #0x7fff
0xffff58230b20    32  tbnz w3, #0, #+0x20 (addr 0xffff58230b40)
0xffff58230b24    36  ldr x10, [jssp]
0xffff58230b28    40  cbz x10, #+0x18 (addr 0xffff58230b40)
0xffff58230b2c    44  orr x3, x3, #0x1
0xffff58230b30    48  ldur x11, [x2, #7]
0xffff58230b34    52  movz x16, #0x100000000
0xffff58230b38    56  add x11, x11, x16
0xffff58230b3c    60  stur x11, [x2, #7]
0xffff58230b40    64  cbnz x3, #+0xc (addr 0xffff58230b4c)
0xffff58230b44    68  ldr x16, pc+180 (addr 0x0000ffff58230bf8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 0
0xffff58230b48    72  br x16
0xffff58230b4c    76  cmp x3, #0x1 (1)
0xffff58230b50    80  b.ne #+0xc (addr 0xffff58230b5c)
0xffff58230b54    84  ldr x16, pc+172 (addr 0x0000ffff58230c00)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 1
0xffff58230b58    88  br x16
0xffff58230b5c    92  cmp x3, #0x4 (4)
0xffff58230b60    96  b.ne #+0xc (addr 0xffff58230b6c)
0xffff58230b64   100  ldr x16, pc+164 (addr 0x0000ffff58230c08)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 4
0xffff58230b68   104  br x16
0xffff58230b6c   108  cmp x3, #0x5 (5)
0xffff58230b70   112  b.ne #+0xc (addr 0xffff58230b7c)
0xffff58230b74   116  ldr x16, pc+156 (addr 0x0000ffff58230c10)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 5
0xffff58230b78   120  br x16
0xffff58230b7c   124  cmp x3, #0x2 (2)
0xffff58230b80   128  b.ne #+0xc (addr 0xffff58230b8c)
0xffff58230b84   132  ldr x16, pc+148 (addr 0x0000ffff58230c18)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 2
0xffff58230b88   136  br x16
0xffff58230b8c   140  cmp x3, #0x3 (3)
0xffff58230b90   144  b.ne #+0xc (addr 0xffff58230b9c)
0xffff58230b94   148  ldr x16, pc+140 (addr 0x0000ffff58230c20)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 3
0xffff58230b98   152  br x16
0xffff58230b9c   156  movz x0, #0x9f00000000
0xffff58230ba0   160  sub csp, jssp, #0x8 (8)
0xffff58230ba4   164  str x0, [jssp, #-8]!
0xffff58230ba8   168  movz x0, #0x1
0xffff58230bac   172  ldr x1, pc+124 (addr 0x0000ffff58230c28)    ;; external reference (Runtime::Abort)
0xffff58230bb0   176  ldr x16, pc+128 (addr 0x0000ffff58230c30)    ;; code: STUB, CEntryStub, minor: 4
0xffff58230bb4   180  blr x16
0xffff58230bb8   184  ldr x10, [jssp]
0xffff58230bbc   188  cbz x10, #+0xc (addr 0xffff58230bc8)
0xffff58230bc0   192  ldr x16, pc+120 (addr 0x0000ffff58230c38)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 257
0xffff58230bc4   196  br x16
0xffff58230bc8   200  ldr x16, pc+120 (addr 0x0000ffff58230c40)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 256
0xffff58230bcc   204  br x16
0xffff58230bd0   208  str x1, [jssp, #8]
0xffff58230bd4   212  movz x0, #0x4
0xffff58230bd8   216  sub csp, jssp, #0x10 (16)
0xffff58230bdc   220  stp x2, x3, [jssp, #-16]!
0xffff58230be0   224  ldr x1, pc+104 (addr 0x0000ffff58230c48)    ;; external reference (Runtime::NewArray)
0xffff58230be4   228  ldr x16, pc+108 (addr 0x0000ffff58230c50)    ;; code: STUB, CEntryStub, minor: 4
0xffff58230be8   232  br x16
0xffff58230bec   236  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff58230bf0   240  d63f03e0       constant
0xffff58230bf4   244  d503201f       constant
0xffff58230bf8   248  582082a0       constant
0xffff58230bfc   252  0000ffff       constant
0xffff58230c00   256  58208840       constant
0xffff58230c04   260  0000ffff       constant
0xffff58230c08   264  58208e00       constant
0xffff58230c0c   268  0000ffff       constant
0xffff58230c10   272  58209080       constant
0xffff58230c14   276  0000ffff       constant
0xffff58230c18   280  58209300       constant
0xffff58230c1c   284  0000ffff       constant
0xffff58230c20   288  58209580       constant
0xffff58230c24   292  0000ffff       constant
0xffff58230c28   296  00eda820       constant
0xffff58230c2c   300  00000000       constant
0xffff58230c30   304  58206060       constant
0xffff58230c34   308  0000ffff       constant
0xffff58230c38   312  58208b80       constant
0xffff58230c3c   316  0000ffff       constant
0xffff58230c40   320  582085e0       constant
0xffff58230c44   324  0000ffff       constant
0xffff58230c48   328  00de2850       constant
0xffff58230c4c   332  00000000       constant
0xffff58230c50   336  58206060       constant
0xffff58230c54   340  0000ffff       constant


RelocInfo (size = 22)
0xffff58230b44  code target (STUB)  (0xffff582082a0)
0xffff58230b54  code target (STUB)  (0xffff58208840)
0xffff58230b64  code target (STUB)  (0xffff58208e00)
0xffff58230b74  code target (STUB)  (0xffff58209080)
0xffff58230b84  code target (STUB)  (0xffff58209300)
0xffff58230b94  code target (STUB)  (0xffff58209580)
0xffff58230bac  external reference (Runtime::Abort)  (0xeda820)
0xffff58230bb0  code target (STUB)  (0xffff58206060)
0xffff58230bc0  code target (STUB)  (0xffff58208b80)
0xffff58230bc8  code target (STUB)  (0xffff582085e0)
0xffff58230be0  external reference (Runtime::NewArray)  (0xde2850)
0xffff58230be4  code target (STUB)  (0xffff58206060)
0xffff58230bec  constant pool (size 108)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327681
name = CallICStub(args(1), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff58230cc0     0  add x4, x2, x3, asr #29
0xffff58230cc4     4  ldur x4, [x4, #15]
0xffff58230cc8     8  ldur x5, [x4, #7]
0xffff58230ccc    12  cmp x5, x1
0xffff58230cd0    16  b.ne #+0x2c (addr 0xffff58230cfc)
0xffff58230cd4    20  tbz w1, #0, #+0x28 (addr 0xffff58230cfc)
0xffff58230cd8    24  add x2, x2, x3, asr #29
0xffff58230cdc    28  add x2, x2, #0x18 (24)
0xffff58230ce0    32  ldur x3, [x2, #-1]
0xffff58230ce4    36  movz x16, #0x200000000
0xffff58230ce8    40  add x3, x3, x16
0xffff58230cec    44  stur x3, [x2, #-1]
0xffff58230cf0    48  movz x0, #0x1
0xffff58230cf4    52  ldr x16, pc+372 (addr 0x0000ffff58230e68)    ;; code: BUILTIN
0xffff58230cf8    56  br x16
0xffff58230cfc    60  ldr x16, [x26, #2400]
0xffff58230d00    64  cmp x4, x16
0xffff58230d04    68  b.eq #+0x78 (addr 0xffff58230d7c)
0xffff58230d08    72  ldur x5, [x4, #-1]
0xffff58230d0c    76  ldr x16, [x26, #2736]
0xffff58230d10    80  cmp x5, x16
0xffff58230d14    84  b.ne #+0x40 (addr 0xffff58230d54)
0xffff58230d18    88  ldur x5, [cp, #39]
0xffff58230d1c    92  ldur x5, [x5, #95]
0xffff58230d20    96  cmp x1, x5
0xffff58230d24   100  b.ne #+0xec (addr 0xffff58230e10)
0xffff58230d28   104  movz x0, #0x1
0xffff58230d2c   108  add x2, x2, x3, asr #29
0xffff58230d30   112  add x2, x2, #0x18 (24)
0xffff58230d34   116  ldur x3, [x2, #-1]
0xffff58230d38   120  movz x16, #0x200000000
0xffff58230d3c   124  add x3, x3, x16
0xffff58230d40   128  stur x3, [x2, #-1]
0xffff58230d44   132  mov x2, x4
0xffff58230d48   136  mov x3, x1
0xffff58230d4c   140  ldr x16, pc+292 (addr 0x0000ffff58230e70)    ;; code: STUB, ArrayConstructorStub, minor: 2
0xffff58230d50   144  br x16
0xffff58230d54   148  ldr x16, [x26, #2568]
0xffff58230d58   152  cmp x4, x16
0xffff58230d5c   156  b.eq #+0xb4 (addr 0xffff58230e10)
0xffff58230d60   160  ldur x5, [x4, #-1]
0xffff58230d64   164  ldrb w5, [x5, #11]
0xffff58230d68   168  cmp x5, #0xc9 (201)
0xffff58230d6c   172  b.ne #+0xa4 (addr 0xffff58230e10)
0xffff58230d70   176  add x4, x2, x3, asr #29
0xffff58230d74   180  ldr x5, [x26, #2400]
0xffff58230d78   184  stur x5, [x4, #15]
0xffff58230d7c   188  movz x0, #0x1
0xffff58230d80   192  ldr x16, pc+248 (addr 0x0000ffff58230e78)    ;; code: BUILTIN
0xffff58230d84   196  br x16
0xffff58230d88   200  tbz w1, #0, #+0x88 (addr 0xffff58230e10)
0xffff58230d8c   204  ldur x5, [x1, #-1]
0xffff58230d90   208  ldrb w5, [x5, #11]
0xffff58230d94   212  cmp x5, #0xc9 (201)
0xffff58230d98   216  b.ne #+0x78 (addr 0xffff58230e10)
0xffff58230d9c   220  ldur x5, [cp, #39]
0xffff58230da0   224  ldur x5, [x5, #95]
0xffff58230da4   228  cmp x1, x5
0xffff58230da8   232  b.eq #+0x68 (addr 0xffff58230e10)
0xffff58230dac   236  ldur x4, [x1, #39]
0xffff58230db0   240  ldur x4, [x4, #39]
0xffff58230db4   244  ldur x5, [cp, #39]
0xffff58230db8   248  cmp x4, x5
0xffff58230dbc   252  b.ne #+0x54 (addr 0xffff58230e10)
0xffff58230dc0   256  movz x5, #0x200000000
0xffff58230dc4   260  adds x4, x2, x3, asr #29
0xffff58230dc8   264  stur x5, [x4, #23]
0xffff58230dcc   268  movz x16, #0xc00000000
0xffff58230dd0   272  sub csp, jssp, #0x10 (16)
0xffff58230dd4   276  stp fp, lr, [jssp, #-16]!
0xffff58230dd8   280  sub csp, jssp, #0x10 (16)
0xffff58230ddc   284  str x16, [jssp, #-8]!
0xffff58230de0   288  ldr x17, pc+160 (addr 0x0000ffff58230e80)    ;; object: 0xffff58230c61 <Code: CALL_IC>
0xffff58230de4   292  sub csp, jssp, #0x10 (16)
0xffff58230de8   296  str x17, [jssp, #-8]!
0xffff58230dec   300  add fp, jssp, #0x10 (16)
0xffff58230df0   304  sub csp, jssp, #0x8 (8)
0xffff58230df4   308  str x1, [jssp, #-8]!
0xffff58230df8   312  ldr x16, pc+144 (addr 0x0000ffff58230e88)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff58230dfc   316  blr x16
0xffff58230e00   320  ldr x1, [jssp], #8
0xffff58230e04   324  mov jssp, fp
0xffff58230e08   328  ldp fp, lr, [jssp], #16
0xffff58230e0c   332  b #-0x11c (addr 0xffff58230cf0)
0xffff58230e10   336  movz x16, #0xc00000000
0xffff58230e14   340  sub csp, jssp, #0x10 (16)
0xffff58230e18   344  stp fp, lr, [jssp, #-16]!
0xffff58230e1c   348  sub csp, jssp, #0x10 (16)
0xffff58230e20   352  str x16, [jssp, #-8]!
0xffff58230e24   356  ldr x17, pc+108 (addr 0x0000ffff58230e90)    ;; object: 0xffff58230c61 <Code: CALL_IC>
0xffff58230e28   360  sub csp, jssp, #0x10 (16)
0xffff58230e2c   364  str x17, [jssp, #-8]!
0xffff58230e30   368  add fp, jssp, #0x10 (16)
0xffff58230e34   372  sub csp, jssp, #0x18 (24)
0xffff58230e38   376  stp x3, x2, [jssp, #-24]!
0xffff58230e3c   380  str x1, [jssp, #16]
0xffff58230e40   384  movz x0, #0x3
0xffff58230e44   388  ldr x1, pc+84 (addr 0x0000ffff58230e98)    ;; external reference (Runtime::CallIC_Miss)
0xffff58230e48   392  ldr x16, pc+88 (addr 0x0000ffff58230ea0)    ;; code: STUB, CEntryStub, minor: 4
0xffff58230e4c   396  blr x16
0xffff58230e50   400  mov x1, x0
0xffff58230e54   404  mov jssp, fp
0xffff58230e58   408  ldp fp, lr, [jssp], #16
0xffff58230e5c   412  b #-0xe0 (addr 0xffff58230d7c)
0xffff58230e60   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff58230e64   420  d63f03e0       constant
0xffff58230e68   424  5821e600       constant
0xffff58230e6c   428  0000ffff       constant
0xffff58230e70   432  58230b00       constant
0xffff58230e74   436  0000ffff       constant
0xffff58230e78   440  5821f6c0       constant
0xffff58230e7c   444  0000ffff       constant
0xffff58230e80   448  58230c61       constant
0xffff58230e84   452  0000ffff       constant
0xffff58230e88   456  5820ddc0       constant
0xffff58230e8c   460  0000ffff       constant
0xffff58230e90   464  58230c61       constant
0xffff58230e94   468  0000ffff       constant
0xffff58230e98   472  00c86928       constant
0xffff58230e9c   476  00000000       constant
0xffff58230ea0   480  58206060       constant
0xffff58230ea4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff58230cf4  code target (BUILTIN)  (0xffff5821e600)
0xffff58230d4c  code target (STUB)  (0xffff58230b00)
0xffff58230d80  code target (BUILTIN)  (0xffff5821f6c0)
0xffff58230de0  embedded object  (0xffff58230c61 <Code: CALL_IC>)
0xffff58230df8  code target (STUB)  (0xffff5820ddc0)
0xffff58230e24  embedded object  (0xffff58230c61 <Code: CALL_IC>)
0xffff58230e44  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58230e48  code target (STUB)  (0xffff58206060)
0xffff58230e60  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327681
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff58230f20     0  ldur x2, [fp, #-16]
0xffff58230f24     4  ldur x2, [x2, #31]
0xffff58230f28     8  ldur x2, [x2, #87]
0xffff58230f2c    12  ldr x16, pc+20 (addr 0x0000ffff58230f40)    ;; code: CALL_IC, GENERIC
0xffff58230f30    16  br x16
0xffff58230f34    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58230f38    24  d63f03e0       constant
0xffff58230f3c    28  d503201f       constant
0xffff58230f40    32  58230cc0       constant
0xffff58230f44    36  0000ffff       constant


RelocInfo (size = 7)
0xffff58230f2c  code target (CALL_IC)  (0xffff58230cc0)
0xffff58230f34  constant pool (size 20)


kind = STUB
major_key = CallConstructStub
name = CallConstructStub
compiler = unknown
Instructions (size = 424)
0xffff58230fc0     0  tbz w1, #0, #+0x16c (addr 0xffff5823112c)
0xffff58230fc4     4  ldur x10, [x1, #-1]
0xffff58230fc8     8  ldrb w10, [x10, #11]
0xffff58230fcc    12  cmp x10, #0xc9 (201)
0xffff58230fd0    16  b.ne #+0x15c (addr 0xffff5823112c)
0xffff58230fd4    20  add x5, x2, x3, asr #29
0xffff58230fd8    24  ldur x5, [x5, #15]
0xffff58230fdc    28  ldur x12, [x5, #7]
0xffff58230fe0    32  cmp x1, x12
0xffff58230fe4    36  b.eq #+0x118 (addr 0xffff582310fc)
0xffff58230fe8    40  ldr x16, [x26, #2400]
0xffff58230fec    44  cmp x5, x16
0xffff58230ff0    48  b.eq #+0x10c (addr 0xffff582310fc)
0xffff58230ff4    52  ldur x11, [x5, #-1]
0xffff58230ff8    56  ldr x16, [x26, #264]
0xffff58230ffc    60  cmp x11, x16
0xffff58231000    64  b.ne #+0xc (addr 0xffff5823100c)
0xffff58231004    68  tbz w12, #0, #+0x44 (addr 0xffff58231048)
0xffff58231008    72  b #+0x30 (addr 0xffff58231038)
0xffff5823100c    76  ldr x16, [x26, #2736]
0xffff58231010    80  cmp x11, x16
0xffff58231014    84  b.ne #+0x18 (addr 0xffff5823102c)
0xffff58231018    88  ldur x5, [cp, #39]
0xffff5823101c    92  ldur x5, [x5, #95]
0xffff58231020    96  cmp x1, x5
0xffff58231024   100  b.ne #+0x14 (addr 0xffff58231038)
0xffff58231028   104  b #+0xd4 (addr 0xffff582310fc)
0xffff5823102c   108  ldr x16, [x26, #2568]
0xffff58231030   112  cmp x5, x16
0xffff58231034   116  b.eq #+0x14 (addr 0xffff58231048)
0xffff58231038   120  add x5, x2, x3, asr #29
0xffff5823103c   124  ldr x11, [x26, #2400]
0xffff58231040   128  stur x11, [x5, #15]
0xffff58231044   132  b #+0xb8 (addr 0xffff582310fc)
0xffff58231048   136  ldur x5, [cp, #39]
0xffff5823104c   140  ldur x5, [x5, #95]
0xffff58231050   144  cmp x1, x5
0xffff58231054   148  b.ne #+0x58 (addr 0xffff582310ac)
0xffff58231058   152  movz x16, #0xc00000000
0xffff5823105c   156  sub csp, jssp, #0x10 (16)
0xffff58231060   160  stp fp, lr, [jssp, #-16]!
0xffff58231064   164  sub csp, jssp, #0x10 (16)
0xffff58231068   168  str x16, [jssp, #-8]!
0xffff5823106c   172  ldr x17, pc+212 (addr 0x0000ffff58231140)    ;; object: 0xffff58230f61 <Code: STUB>
0xffff58231070   176  sub csp, jssp, #0x10 (16)
0xffff58231074   180  str x17, [jssp, #-8]!
0xffff58231078   184  add fp, jssp, #0x10 (16)
0xffff5823107c   188  lsl x0, x0, #32
0xffff58231080   192  sub csp, jssp, #0x20 (32)
0xffff58231084   196  stp x3, x2, [jssp, #-32]!
0xffff58231088   200  stp x1, x0, [jssp, #16]
0xffff5823108c   204  ldr x16, pc+188 (addr 0x0000ffff58231148)    ;; code: STUB, CreateAllocationSiteStub, minor: 0
0xffff58231090   208  blr x16
0xffff58231094   212  ldp x1, x0, [jssp, #16]
0xffff58231098   216  ldp x3, x2, [jssp], #32
0xffff5823109c   220  asr x0, x0, #32
0xffff582310a0   224  mov jssp, fp
0xffff582310a4   228  ldp fp, lr, [jssp], #16
0xffff582310a8   232  b #+0x54 (addr 0xffff582310fc)
0xffff582310ac   236  movz x16, #0xc00000000
0xffff582310b0   240  sub csp, jssp, #0x10 (16)
0xffff582310b4   244  stp fp, lr, [jssp, #-16]!
0xffff582310b8   248  sub csp, jssp, #0x10 (16)
0xffff582310bc   252  str x16, [jssp, #-8]!
0xffff582310c0   256  ldr x17, pc+144 (addr 0x0000ffff58231150)    ;; object: 0xffff58230f61 <Code: STUB>
0xffff582310c4   260  sub csp, jssp, #0x10 (16)
0xffff582310c8   264  str x17, [jssp, #-8]!
0xffff582310cc   268  add fp, jssp, #0x10 (16)
0xffff582310d0   272  lsl x0, x0, #32
0xffff582310d4   276  sub csp, jssp, #0x20 (32)
0xffff582310d8   280  stp x3, x2, [jssp, #-32]!
0xffff582310dc   284  stp x1, x0, [jssp, #16]
0xffff582310e0   288  ldr x16, pc+120 (addr 0x0000ffff58231158)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff582310e4   292  blr x16
0xffff582310e8   296  ldp x1, x0, [jssp, #16]
0xffff582310ec   300  ldp x3, x2, [jssp], #32
0xffff582310f0   304  asr x0, x0, #32
0xffff582310f4   308  mov jssp, fp
0xffff582310f8   312  ldp fp, lr, [jssp], #16
0xffff582310fc   316  add x5, x2, x3, asr #29
0xffff58231100   320  ldur x2, [x5, #15]
0xffff58231104   324  ldur x5, [x2, #-1]
0xffff58231108   328  ldr x16, [x26, #2736]
0xffff5823110c   332  cmp x5, x16
0xffff58231110   336  b.eq #+0x8 (addr 0xffff58231118)
0xffff58231114   340  ldr x2, [x26, #40]
0xffff58231118   344  mov x3, x1
0xffff5823111c   348  ldur x4, [x1, #31]
0xffff58231120   352  ldur x4, [x4, #39]
0xffff58231124   356  add x4, x4, #0x5f (95)
0xffff58231128   360  br x4
0xffff5823112c   364  mov x3, x1
0xffff58231130   368  ldr x16, pc+48 (addr 0x0000ffff58231160)    ;; code: BUILTIN
0xffff58231134   372  br x16
0xffff58231138   376  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff5823113c   380  d63f03e0       constant
0xffff58231140   384  58230f61       constant
0xffff58231144   388  0000ffff       constant
0xffff58231148   392  5820cbc0       constant
0xffff5823114c   396  0000ffff       constant
0xffff58231150   400  58230f61       constant
0xffff58231154   404  0000ffff       constant
0xffff58231158   408  5820ddc0       constant
0xffff5823115c   412  0000ffff       constant
0xffff58231160   416  58220180       constant
0xffff58231164   420  0000ffff       constant


RelocInfo (size = 15)
0xffff5823106c  embedded object  (0xffff58230f61 <Code: STUB>)
0xffff5823108c  code target (STUB)  (0xffff5820cbc0)
0xffff582310c0  embedded object  (0xffff58230f61 <Code: STUB>)
0xffff582310e0  code target (STUB)  (0xffff5820ddc0)
0xffff58231130  code target (BUILTIN)  (0xffff58220180)
0xffff58231138  constant pool (size 48)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393217
name = CallICStub(args(1), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff58231c60     0  add x4, x2, x3, asr #29
0xffff58231c64     4  ldur x4, [x4, #15]
0xffff58231c68     8  ldur x5, [x4, #7]
0xffff58231c6c    12  cmp x5, x1
0xffff58231c70    16  b.ne #+0x2c (addr 0xffff58231c9c)
0xffff58231c74    20  tbz w1, #0, #+0x28 (addr 0xffff58231c9c)
0xffff58231c78    24  add x2, x2, x3, asr #29
0xffff58231c7c    28  add x2, x2, #0x18 (24)
0xffff58231c80    32  ldur x3, [x2, #-1]
0xffff58231c84    36  movz x16, #0x200000000
0xffff58231c88    40  add x3, x3, x16
0xffff58231c8c    44  stur x3, [x2, #-1]
0xffff58231c90    48  movz x0, #0x1
0xffff58231c94    52  ldr x16, pc+372 (addr 0x0000ffff58231e08)    ;; code: BUILTIN
0xffff58231c98    56  br x16
0xffff58231c9c    60  ldr x16, [x26, #2400]
0xffff58231ca0    64  cmp x4, x16
0xffff58231ca4    68  b.eq #+0x78 (addr 0xffff58231d1c)
0xffff58231ca8    72  ldur x5, [x4, #-1]
0xffff58231cac    76  ldr x16, [x26, #2736]
0xffff58231cb0    80  cmp x5, x16
0xffff58231cb4    84  b.ne #+0x40 (addr 0xffff58231cf4)
0xffff58231cb8    88  ldur x5, [cp, #39]
0xffff58231cbc    92  ldur x5, [x5, #95]
0xffff58231cc0    96  cmp x1, x5
0xffff58231cc4   100  b.ne #+0xec (addr 0xffff58231db0)
0xffff58231cc8   104  movz x0, #0x1
0xffff58231ccc   108  add x2, x2, x3, asr #29
0xffff58231cd0   112  add x2, x2, #0x18 (24)
0xffff58231cd4   116  ldur x3, [x2, #-1]
0xffff58231cd8   120  movz x16, #0x200000000
0xffff58231cdc   124  add x3, x3, x16
0xffff58231ce0   128  stur x3, [x2, #-1]
0xffff58231ce4   132  mov x2, x4
0xffff58231ce8   136  mov x3, x1
0xffff58231cec   140  ldr x16, pc+292 (addr 0x0000ffff58231e10)    ;; code: STUB, ArrayConstructorStub, minor: 2
0xffff58231cf0   144  br x16
0xffff58231cf4   148  ldr x16, [x26, #2568]
0xffff58231cf8   152  cmp x4, x16
0xffff58231cfc   156  b.eq #+0xb4 (addr 0xffff58231db0)
0xffff58231d00   160  ldur x5, [x4, #-1]
0xffff58231d04   164  ldrb w5, [x5, #11]
0xffff58231d08   168  cmp x5, #0xc9 (201)
0xffff58231d0c   172  b.ne #+0xa4 (addr 0xffff58231db0)
0xffff58231d10   176  add x4, x2, x3, asr #29
0xffff58231d14   180  ldr x5, [x26, #2400]
0xffff58231d18   184  stur x5, [x4, #15]
0xffff58231d1c   188  movz x0, #0x1
0xffff58231d20   192  ldr x16, pc+248 (addr 0x0000ffff58231e18)    ;; code: BUILTIN
0xffff58231d24   196  br x16
0xffff58231d28   200  tbz w1, #0, #+0x88 (addr 0xffff58231db0)
0xffff58231d2c   204  ldur x5, [x1, #-1]
0xffff58231d30   208  ldrb w5, [x5, #11]
0xffff58231d34   212  cmp x5, #0xc9 (201)
0xffff58231d38   216  b.ne #+0x78 (addr 0xffff58231db0)
0xffff58231d3c   220  ldur x5, [cp, #39]
0xffff58231d40   224  ldur x5, [x5, #95]
0xffff58231d44   228  cmp x1, x5
0xffff58231d48   232  b.eq #+0x68 (addr 0xffff58231db0)
0xffff58231d4c   236  ldur x4, [x1, #39]
0xffff58231d50   240  ldur x4, [x4, #39]
0xffff58231d54   244  ldur x5, [cp, #39]
0xffff58231d58   248  cmp x4, x5
0xffff58231d5c   252  b.ne #+0x54 (addr 0xffff58231db0)
0xffff58231d60   256  movz x5, #0x200000000
0xffff58231d64   260  adds x4, x2, x3, asr #29
0xffff58231d68   264  stur x5, [x4, #23]
0xffff58231d6c   268  movz x16, #0xc00000000
0xffff58231d70   272  sub csp, jssp, #0x10 (16)
0xffff58231d74   276  stp fp, lr, [jssp, #-16]!
0xffff58231d78   280  sub csp, jssp, #0x10 (16)
0xffff58231d7c   284  str x16, [jssp, #-8]!
0xffff58231d80   288  ldr x17, pc+160 (addr 0x0000ffff58231e20)    ;; object: 0xffff58231c01 <Code: CALL_IC>
0xffff58231d84   292  sub csp, jssp, #0x10 (16)
0xffff58231d88   296  str x17, [jssp, #-8]!
0xffff58231d8c   300  add fp, jssp, #0x10 (16)
0xffff58231d90   304  sub csp, jssp, #0x8 (8)
0xffff58231d94   308  str x1, [jssp, #-8]!
0xffff58231d98   312  ldr x16, pc+144 (addr 0x0000ffff58231e28)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff58231d9c   316  blr x16
0xffff58231da0   320  ldr x1, [jssp], #8
0xffff58231da4   324  mov jssp, fp
0xffff58231da8   328  ldp fp, lr, [jssp], #16
0xffff58231dac   332  b #-0x11c (addr 0xffff58231c90)
0xffff58231db0   336  movz x16, #0xc00000000
0xffff58231db4   340  sub csp, jssp, #0x10 (16)
0xffff58231db8   344  stp fp, lr, [jssp, #-16]!
0xffff58231dbc   348  sub csp, jssp, #0x10 (16)
0xffff58231dc0   352  str x16, [jssp, #-8]!
0xffff58231dc4   356  ldr x17, pc+108 (addr 0x0000ffff58231e30)    ;; object: 0xffff58231c01 <Code: CALL_IC>
0xffff58231dc8   360  sub csp, jssp, #0x10 (16)
0xffff58231dcc   364  str x17, [jssp, #-8]!
0xffff58231dd0   368  add fp, jssp, #0x10 (16)
0xffff58231dd4   372  sub csp, jssp, #0x18 (24)
0xffff58231dd8   376  stp x3, x2, [jssp, #-24]!
0xffff58231ddc   380  str x1, [jssp, #16]
0xffff58231de0   384  movz x0, #0x3
0xffff58231de4   388  ldr x1, pc+84 (addr 0x0000ffff58231e38)    ;; external reference (Runtime::CallIC_Miss)
0xffff58231de8   392  ldr x16, pc+88 (addr 0x0000ffff58231e40)    ;; code: STUB, CEntryStub, minor: 4
0xffff58231dec   396  blr x16
0xffff58231df0   400  mov x1, x0
0xffff58231df4   404  mov jssp, fp
0xffff58231df8   408  ldp fp, lr, [jssp], #16
0xffff58231dfc   412  b #-0xe0 (addr 0xffff58231d1c)
0xffff58231e00   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff58231e04   420  d63f03e0       constant
0xffff58231e08   424  5821e820       constant
0xffff58231e0c   428  0000ffff       constant
0xffff58231e10   432  58230b00       constant
0xffff58231e14   436  0000ffff       constant
0xffff58231e18   440  5821f820       constant
0xffff58231e1c   444  0000ffff       constant
0xffff58231e20   448  58231c01       constant
0xffff58231e24   452  0000ffff       constant
0xffff58231e28   456  5820ddc0       constant
0xffff58231e2c   460  0000ffff       constant
0xffff58231e30   464  58231c01       constant
0xffff58231e34   468  0000ffff       constant
0xffff58231e38   472  00c86928       constant
0xffff58231e3c   476  00000000       constant
0xffff58231e40   480  58206060       constant
0xffff58231e44   484  0000ffff       constant


RelocInfo (size = 19)
0xffff58231c94  code target (BUILTIN)  (0xffff5821e820)
0xffff58231cec  code target (STUB)  (0xffff58230b00)
0xffff58231d20  code target (BUILTIN)  (0xffff5821f820)
0xffff58231d80  embedded object  (0xffff58231c01 <Code: CALL_IC>)
0xffff58231d98  code target (STUB)  (0xffff5820ddc0)
0xffff58231dc4  embedded object  (0xffff58231c01 <Code: CALL_IC>)
0xffff58231de4  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58231de8  code target (STUB)  (0xffff58206060)
0xffff58231e00  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393217
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff58231ec0     0  ldur x2, [fp, #-16]
0xffff58231ec4     4  ldur x2, [x2, #31]
0xffff58231ec8     8  ldur x2, [x2, #87]
0xffff58231ecc    12  ldr x16, pc+20 (addr 0x0000ffff58231ee0)    ;; code: CALL_IC, GENERIC
0xffff58231ed0    16  br x16
0xffff58231ed4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58231ed8    24  d63f03e0       constant
0xffff58231edc    28  d503201f       constant
0xffff58231ee0    32  58231c60       constant
0xffff58231ee4    36  0000ffff       constant


RelocInfo (size = 7)
0xffff58231ecc  code target (CALL_IC)  (0xffff58231c60)
0xffff58231ed4  constant pool (size 20)


kind = STORE_IC
major_key = VectorStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = VectorStoreICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff582320c0     0  ldur x3, [fp, #-16]
0xffff582320c4     4  ldur x3, [x3, #31]
0xffff582320c8     8  ldur x3, [x3, #87]
0xffff582320cc    12  add x5, x3, x4, asr #29
0xffff582320d0    16  ldur x5, [x5, #15]
0xffff582320d4    20  tbz w1, #0, #+0x174 (addr 0xffff58232248)
0xffff582320d8    24  ldur x6, [x1, #-1]
0xffff582320dc    28  ldur x7, [x5, #7]
0xffff582320e0    32  cmp x7, x6
0xffff582320e4    36  b.ne #+0x14 (addr 0xffff582320f8)
0xffff582320e8    40  add x5, x3, x4, asr #29
0xffff582320ec    44  ldur x5, [x5, #23]
0xffff582320f0    48  add x5, x5, #0x5f (95)
0xffff582320f4    52  br x5
0xffff582320f8    56  ldur x7, [x5, #-1]
0xffff582320fc    60  ldr x16, [x26, #224]
0xffff58232100    64  cmp x7, x16
0xffff58232104    68  b.ne #+0x5c (addr 0xffff58232160)
0xffff58232108    72  ldur x7, [x5, #15]
0xffff5823210c    76  ldur x7, [x7, #7]
0xffff58232110    80  cmp x6, x7
0xffff58232114    84  b.ne #+0x10 (addr 0xffff58232124)
0xffff58232118    88  ldur x5, [x5, #23]
0xffff5823211c    92  add x5, x5, #0x5f (95)
0xffff58232120    96  br x5
0xffff58232124   100  ldur x8, [x5, #7]
0xffff58232128   104  add x8, x5, x8, asr #29
0xffff5823212c   108  add x8, x8, #0xf (15)
0xffff58232130   112  add x5, x5, #0x1f (31)
0xffff58232134   116  ldr x7, [x5]
0xffff58232138   120  ldur x7, [x7, #7]
0xffff5823213c   124  cmp x6, x7
0xffff58232140   128  b.ne #+0x10 (addr 0xffff58232150)
0xffff58232144   132  ldr x5, [x5, #8]
0xffff58232148   136  add x5, x5, #0x5f (95)
0xffff5823214c   140  br x5
0xffff58232150   144  add x5, x5, #0x10 (16)
0xffff58232154   148  cmp x5, x8
0xffff58232158   152  b.lt #-0x24 (addr 0xffff58232134)
0xffff5823215c   156  b #+0xcc (addr 0xffff58232228)
0xffff58232160   160  ldr x16, [x26, #2400]
0xffff58232164   164  cmp x5, x16
0xffff58232168   168  b.ne #+0xc0 (addr 0xffff58232228)
0xffff5823216c   172  tbz w1, #0, #+0xbc (addr 0xffff58232228)
0xffff58232170   176  ldur x5, [x2, #7]
0xffff58232174   180  ldur x6, [x1, #-1]
0xffff58232178   184  add x5, x5, x6
0xffff5823217c   188  movz x16, #0x6902
0xffff58232180   192  eor x5, x5, x16
0xffff58232184   196  ubfx x5, x5, #2, #11
0xffff58232188   200  add x8, x5, x5, lsl #1
0xffff5823218c   204  ldr x6, pc+204 (addr 0x0000ffff58232258)    ;; external reference (StubCache::primary_->key)
0xffff58232190   208  add x6, x6, x8, lsl #3
0xffff58232194   212  ldr x7, [x6]
0xffff58232198   216  cmp x2, x7
0xffff5823219c   220  b.ne #+0x34 (addr 0xffff582321d0)
0xffff582321a0   224  ldr x7, [x6, #16]
0xffff582321a4   228  ldur x8, [x1, #-1]
0xffff582321a8   232  cmp x7, x8
0xffff582321ac   236  b.ne #+0x24 (addr 0xffff582321d0)
0xffff582321b0   240  ldr x6, [x6, #8]
0xffff582321b4   244  ldur w7, [x6, #63]
0xffff582321b8   248  and w7, w7, #0xffffffc7
0xffff582321bc   252  movz w16, #0x6902
0xffff582321c0   256  cmp w7, w16
0xffff582321c4   260  b.ne #+0xc (addr 0xffff582321d0)
0xffff582321c8   264  add x6, x6, #0x5f (95)
0xffff582321cc   268  br x6
0xffff582321d0   272  sub x5, x5, x2, lsr #2
0xffff582321d4   276  movz x16, #0x1a40
0xffff582321d8   280  add x5, x5, x16
0xffff582321dc   284  and x5, x5, #0x1ff
0xffff582321e0   288  add x8, x5, x5, lsl #1
0xffff582321e4   292  ldr x6, pc+124 (addr 0x0000ffff58232260)    ;; external reference (StubCache::secondary_->key)
0xffff582321e8   296  add x6, x6, x8, lsl #3
0xffff582321ec   300  ldr x7, [x6]
0xffff582321f0   304  cmp x2, x7
0xffff582321f4   308  b.ne #+0x34 (addr 0xffff58232228)
0xffff582321f8   312  ldr x7, [x6, #16]
0xffff582321fc   316  ldur x8, [x1, #-1]
0xffff58232200   320  cmp x7, x8
0xffff58232204   324  b.ne #+0x24 (addr 0xffff58232228)
0xffff58232208   328  ldr x6, [x6, #8]
0xffff5823220c   332  ldur w7, [x6, #63]
0xffff58232210   336  and w7, w7, #0xffffffc7
0xffff58232214   340  movz w16, #0x6902
0xffff58232218   344  cmp w7, w16
0xffff5823221c   348  b.ne #+0xc (addr 0xffff58232228)
0xffff58232220   352  add x6, x6, #0x5f (95)
0xffff58232224   356  br x6
0xffff58232228   360  sub csp, jssp, #0x28 (40)
0xffff5823222c   364  stp x4, x0, [jssp, #-32]!
0xffff58232230   368  stp x2, x1, [jssp, #16]
0xffff58232234   372  str x3, [jssp, #-8]!
0xffff58232238   376  movz x0, #0x5
0xffff5823223c   380  ldr x1, pc+44 (addr 0x0000ffff58232268)    ;; external reference (Runtime::StoreIC_Miss)
0xffff58232240   384  ldr x16, pc+48 (addr 0x0000ffff58232270)    ;; code: STUB, CEntryStub, minor: 4
0xffff58232244   388  br x16
0xffff58232248   392  ldr x6, [x26, #120]
0xffff5823224c   396  b #-0x170 (addr 0xffff582320dc)
0xffff58232250   400  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff58232254   404  d63f03e0       constant
0xffff58232258   408  16e93950       constant
0xffff5823225c   412  00000000       constant
0xffff58232260   416  16e9f950       constant
0xffff58232264   420  00000000       constant
0xffff58232268   424  00c87f60       constant
0xffff5823226c   428  00000000       constant
0xffff58232270   432  58206060       constant
0xffff58232274   436  0000ffff       constant


RelocInfo (size = 19)
0xffff5823218c  external reference (StubCache::primary_->key)  (0x16e93950)
0xffff582321e4  external reference (StubCache::secondary_->key)  (0x16e9f950)
0xffff5823223c  external reference (Runtime::StoreIC_Miss)  (0xc87f60)
0xffff58232240  code target (STUB)  (0xffff58206060)
0xffff58232250  constant pool (size 40)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 981)
0xffff58232520     0  movz x2, #0x92c0
0xffff58232524     4  movk x2, #0x16e7, lsl #16
0xffff58232528     8  ldp x3, x0, [x2]
0xffff5823252c    12  adds x16, x3, #0x180 (384)
0xffff58232530    16  ccmp x16, x0, #nzCv, lo
0xffff58232534    20  b.hi #+0x1c8 (addr 0xffff582326fc)
0xffff58232538    24  str x16, [x2]
0xffff5823253c    28  orr x3, x3, #0x1
0xffff58232540    32  ldr x0, pc+552 (addr 0x0000ffff58232768)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58232544    36  stur x0, [x3, #-1]
0xffff58232548    40  movz x0, #0x2e00000000
0xffff5823254c    44  stur x0, [x3, #7]
0xffff58232550    48  stur x1, [x3, #15]
0xffff58232554    52  stur cp, [x3, #23]
0xffff58232558    56  ldr x0, pc+536 (addr 0x0000ffff58232770)    ;; object: 0x39c04519 <the hole>
0xffff5823255c    60  stur x0, [x3, #31]
0xffff58232560    64  ldur x0, [cp, #39]
0xffff58232564    68  stur x0, [x3, #39]
0xffff58232568    72  ldr x0, pc+528 (addr 0x0000ffff58232778)    ;; object: 0x39c04241 <undefined>
0xffff5823256c    76  stur x0, [x3, #47]
0xffff58232570    80  ldr x0, pc+528 (addr 0x0000ffff58232780)    ;; object: 0x39c04241 <undefined>
0xffff58232574    84  stur x0, [x3, #55]
0xffff58232578    88  ldr x0, pc+528 (addr 0x0000ffff58232788)    ;; object: 0x39c04241 <undefined>
0xffff5823257c    92  stur x0, [x3, #63]
0xffff58232580    96  ldr x0, pc+528 (addr 0x0000ffff58232790)    ;; object: 0x39c04241 <undefined>
0xffff58232584   100  stur x0, [x3, #71]
0xffff58232588   104  ldr x0, pc+528 (addr 0x0000ffff58232798)    ;; object: 0x39c04241 <undefined>
0xffff5823258c   108  stur x0, [x3, #79]
0xffff58232590   112  ldr x0, pc+528 (addr 0x0000ffff582327a0)    ;; object: 0x39c04241 <undefined>
0xffff58232594   116  stur x0, [x3, #87]
0xffff58232598   120  ldr x0, pc+528 (addr 0x0000ffff582327a8)    ;; object: 0x39c04241 <undefined>
0xffff5823259c   124  stur x0, [x3, #95]
0xffff582325a0   128  ldr x0, pc+528 (addr 0x0000ffff582327b0)    ;; object: 0x39c04241 <undefined>
0xffff582325a4   132  stur x0, [x3, #103]
0xffff582325a8   136  ldr x0, pc+528 (addr 0x0000ffff582327b8)    ;; object: 0x39c04241 <undefined>
0xffff582325ac   140  stur x0, [x3, #111]
0xffff582325b0   144  ldr x0, pc+528 (addr 0x0000ffff582327c0)    ;; object: 0x39c04241 <undefined>
0xffff582325b4   148  stur x0, [x3, #119]
0xffff582325b8   152  ldr x0, pc+528 (addr 0x0000ffff582327c8)    ;; object: 0x39c04241 <undefined>
0xffff582325bc   156  stur x0, [x3, #127]
0xffff582325c0   160  ldr x0, pc+528 (addr 0x0000ffff582327d0)    ;; object: 0x39c04241 <undefined>
0xffff582325c4   164  stur x0, [x3, #135]
0xffff582325c8   168  ldr x0, pc+528 (addr 0x0000ffff582327d8)    ;; object: 0x39c04241 <undefined>
0xffff582325cc   172  stur x0, [x3, #143]
0xffff582325d0   176  ldr x0, pc+528 (addr 0x0000ffff582327e0)    ;; object: 0x39c04241 <undefined>
0xffff582325d4   180  stur x0, [x3, #151]
0xffff582325d8   184  ldr x0, pc+528 (addr 0x0000ffff582327e8)    ;; object: 0x39c04241 <undefined>
0xffff582325dc   188  stur x0, [x3, #159]
0xffff582325e0   192  ldr x0, pc+528 (addr 0x0000ffff582327f0)    ;; object: 0x39c04241 <undefined>
0xffff582325e4   196  stur x0, [x3, #167]
0xffff582325e8   200  ldr x0, pc+528 (addr 0x0000ffff582327f8)    ;; object: 0x39c04241 <undefined>
0xffff582325ec   204  stur x0, [x3, #175]
0xffff582325f0   208  ldr x0, pc+528 (addr 0x0000ffff58232800)    ;; object: 0x39c04241 <undefined>
0xffff582325f4   212  stur x0, [x3, #183]
0xffff582325f8   216  ldr x0, pc+528 (addr 0x0000ffff58232808)    ;; object: 0x39c04241 <undefined>
0xffff582325fc   220  stur x0, [x3, #191]
0xffff58232600   224  ldr x0, pc+528 (addr 0x0000ffff58232810)    ;; object: 0x39c04241 <undefined>
0xffff58232604   228  stur x0, [x3, #199]
0xffff58232608   232  ldr x0, pc+528 (addr 0x0000ffff58232818)    ;; object: 0x39c04241 <undefined>
0xffff5823260c   236  stur x0, [x3, #207]
0xffff58232610   240  ldr x0, pc+528 (addr 0x0000ffff58232820)    ;; object: 0x39c04241 <undefined>
0xffff58232614   244  stur x0, [x3, #215]
0xffff58232618   248  ldr x0, pc+528 (addr 0x0000ffff58232828)    ;; object: 0x39c04241 <undefined>
0xffff5823261c   252  stur x0, [x3, #223]
0xffff58232620   256  ldr x0, pc+528 (addr 0x0000ffff58232830)    ;; object: 0x39c04241 <undefined>
0xffff58232624   260  stur x0, [x3, #231]
0xffff58232628   264  ldr x0, pc+528 (addr 0x0000ffff58232838)    ;; object: 0x39c04241 <undefined>
0xffff5823262c   268  stur x0, [x3, #239]
0xffff58232630   272  ldr x0, pc+528 (addr 0x0000ffff58232840)    ;; object: 0x39c04241 <undefined>
0xffff58232634   276  stur x0, [x3, #247]
0xffff58232638   280  ldr x0, pc+528 (addr 0x0000ffff58232848)    ;; object: 0x39c04241 <undefined>
0xffff5823263c   284  stur x0, [x3, #255]
0xffff58232640   288  ldr x0, pc+528 (addr 0x0000ffff58232850)    ;; object: 0x39c04241 <undefined>
0xffff58232644   292  movz x16, #0x107
0xffff58232648   296  str x0, [x3, x16]
0xffff5823264c   300  ldr x0, pc+524 (addr 0x0000ffff58232858)    ;; object: 0x39c04241 <undefined>
0xffff58232650   304  movz x16, #0x10f
0xffff58232654   308  str x0, [x3, x16]
0xffff58232658   312  ldr x0, pc+520 (addr 0x0000ffff58232860)    ;; object: 0x39c04241 <undefined>
0xffff5823265c   316  movz x16, #0x117
0xffff58232660   320  str x0, [x3, x16]
0xffff58232664   324  ldr x0, pc+516 (addr 0x0000ffff58232868)    ;; object: 0x39c04241 <undefined>
0xffff58232668   328  movz x16, #0x11f
0xffff5823266c   332  str x0, [x3, x16]
0xffff58232670   336  ldr x0, pc+512 (addr 0x0000ffff58232870)    ;; object: 0x39c04241 <undefined>
0xffff58232674   340  movz x16, #0x127
0xffff58232678   344  str x0, [x3, x16]
0xffff5823267c   348  ldr x0, pc+508 (addr 0x0000ffff58232878)    ;; object: 0x39c04241 <undefined>
0xffff58232680   352  movz x16, #0x12f
0xffff58232684   356  str x0, [x3, x16]
0xffff58232688   360  ldr x0, pc+504 (addr 0x0000ffff58232880)    ;; object: 0x39c04241 <undefined>
0xffff5823268c   364  movz x16, #0x137
0xffff58232690   368  str x0, [x3, x16]
0xffff58232694   372  ldr x0, pc+500 (addr 0x0000ffff58232888)    ;; object: 0x39c04241 <undefined>
0xffff58232698   376  movz x16, #0x13f
0xffff5823269c   380  str x0, [x3, x16]
0xffff582326a0   384  ldr x0, pc+496 (addr 0x0000ffff58232890)    ;; object: 0x39c04241 <undefined>
0xffff582326a4   388  movz x16, #0x147
0xffff582326a8   392  str x0, [x3, x16]
0xffff582326ac   396  ldr x0, pc+492 (addr 0x0000ffff58232898)    ;; object: 0x39c04241 <undefined>
0xffff582326b0   400  movz x16, #0x14f
0xffff582326b4   404  str x0, [x3, x16]
0xffff582326b8   408  ldr x0, pc+488 (addr 0x0000ffff582328a0)    ;; object: 0x39c04241 <undefined>
0xffff582326bc   412  movz x16, #0x157
0xffff582326c0   416  str x0, [x3, x16]
0xffff582326c4   420  ldr x0, pc+484 (addr 0x0000ffff582328a8)    ;; object: 0x39c04241 <undefined>
0xffff582326c8   424  movz x16, #0x15f
0xffff582326cc   428  str x0, [x3, x16]
0xffff582326d0   432  ldr x0, pc+480 (addr 0x0000ffff582328b0)    ;; object: 0x39c04241 <undefined>
0xffff582326d4   436  movz x16, #0x167
0xffff582326d8   440  str x0, [x3, x16]
0xffff582326dc   444  ldr x0, pc+476 (addr 0x0000ffff582328b8)    ;; object: 0x39c04241 <undefined>
0xffff582326e0   448  movz x16, #0x16f
0xffff582326e4   452  str x0, [x3, x16]
0xffff582326e8   456  ldr x0, pc+472 (addr 0x0000ffff582328c0)    ;; object: 0x39c04241 <undefined>
0xffff582326ec   460  movz x16, #0x177
0xffff582326f0   464  str x0, [x3, x16]
0xffff582326f4   468  mov x0, x3
0xffff582326f8   472  ret
0xffff582326fc   476  sub csp, jssp, #0x10 (16)
0xffff58232700   480  stp fp, lr, [jssp, #-16]!
0xffff58232704   484  movz fp, #0xa00000000
0xffff58232708   488  sub csp, jssp, #0x8 (8)
0xffff5823270c   492  str fp, [jssp, #-8]!
0xffff58232710   496  add fp, jssp, #0x8 (8)
0xffff58232714   500  movz x3, #0x0
0xffff58232718   504  mov x16, lr
0xffff5823271c   508  ldr x17, pc+428 (addr 0x0000ffff582328c8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58232720   512  blr x17
0xffff58232724   516  movz x0, #0x18000000000
0xffff58232728   520  movz x10, #0x0
0xffff5823272c   524  sub csp, jssp, #0x10 (16)
0xffff58232730   528  stp x10, x0, [jssp, #-16]!
0xffff58232734   532  movz x0, #0x2
0xffff58232738   536  movz x1, #0x5b88
0xffff5823273c   540  movk x1, #0xe2, lsl #16
0xffff58232740   544  ldr x16, pc+400 (addr 0x0000ffff582328d0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58232744   548  blr x16
0xffff58232748   552  str x0, [jssp, #24]
0xffff5823274c   556  ldr x16, pc+396 (addr 0x0000ffff582328d8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58232750   560  blr x16
0xffff58232754   564  ldr lr, [jssp, #16]
0xffff58232758   568  ldp xzr, fp, [jssp], #24
0xffff5823275c   572  b #-0x21c (addr 0xffff58232540)
0xffff58232760   576  58000bff       constant pool begin (num_const = 95)    ;; constant pool
0xffff58232764   580  d63f03e0       constant
0xffff58232768   584  32b06149       constant
0xffff5823276c   588  00000000       constant
0xffff58232770   592  39c04519       constant
0xffff58232774   596  00000000       constant
0xffff58232778   600  39c04241       constant
0xffff5823277c   604  00000000       constant
0xffff58232780   608  39c04241       constant
0xffff58232784   612  00000000       constant
0xffff58232788   616  39c04241       constant
0xffff5823278c   620  00000000       constant
0xffff58232790   624  39c04241       constant
0xffff58232794   628  00000000       constant
0xffff58232798   632  39c04241       constant
0xffff5823279c   636  00000000       constant
0xffff582327a0   640  39c04241       constant
0xffff582327a4   644  00000000       constant
0xffff582327a8   648  39c04241       constant
0xffff582327ac   652  00000000       constant
0xffff582327b0   656  39c04241       constant
0xffff582327b4   660  00000000       constant
0xffff582327b8   664  39c04241       constant
0xffff582327bc   668  00000000       constant
0xffff582327c0   672  39c04241       constant
0xffff582327c4   676  00000000       constant
0xffff582327c8   680  39c04241       constant
0xffff582327cc   684  00000000       constant
0xffff582327d0   688  39c04241       constant
0xffff582327d4   692  00000000       constant
0xffff582327d8   696  39c04241       constant
0xffff582327dc   700  00000000       constant
0xffff582327e0   704  39c04241       constant
0xffff582327e4   708  00000000       constant
0xffff582327e8   712  39c04241       constant
0xffff582327ec   716  00000000       constant
0xffff582327f0   720  39c04241       constant
0xffff582327f4   724  00000000       constant
0xffff582327f8   728  39c04241       constant
0xffff582327fc   732  00000000       constant
0xffff58232800   736  39c04241       constant
0xffff58232804   740  00000000       constant
0xffff58232808   744  39c04241       constant
0xffff5823280c   748  00000000       constant
0xffff58232810   752  39c04241       constant
0xffff58232814   756  00000000       constant
0xffff58232818   760  39c04241       constant
0xffff5823281c   764  00000000       constant
0xffff58232820   768  39c04241       constant
0xffff58232824   772  00000000       constant
0xffff58232828   776  39c04241       constant
0xffff5823282c   780  00000000       constant
0xffff58232830   784  39c04241       constant
0xffff58232834   788  00000000       constant
0xffff58232838   792  39c04241       constant
0xffff5823283c   796  00000000       constant
0xffff58232840   800  39c04241       constant
0xffff58232844   804  00000000       constant
0xffff58232848   808  39c04241       constant
0xffff5823284c   812  00000000       constant
0xffff58232850   816  39c04241       constant
0xffff58232854   820  00000000       constant
0xffff58232858   824  39c04241       constant
0xffff5823285c   828  00000000       constant
0xffff58232860   832  39c04241       constant
0xffff58232864   836  00000000       constant
0xffff58232868   840  39c04241       constant
0xffff5823286c   844  00000000       constant
0xffff58232870   848  39c04241       constant
0xffff58232874   852  00000000       constant
0xffff58232878   856  39c04241       constant
0xffff5823287c   860  00000000       constant
0xffff58232880   864  39c04241       constant
0xffff58232884   868  00000000       constant
0xffff58232888   872  39c04241       constant
0xffff5823288c   876  00000000       constant
0xffff58232890   880  39c04241       constant
0xffff58232894   884  00000000       constant
0xffff58232898   888  39c04241       constant
0xffff5823289c   892  00000000       constant
0xffff582328a0   896  39c04241       constant
0xffff582328a4   900  00000000       constant
0xffff582328a8   904  39c04241       constant
0xffff582328ac   908  00000000       constant
0xffff582328b0   912  39c04241       constant
0xffff582328b4   916  00000000       constant
0xffff582328b8   920  39c04241       constant
0xffff582328bc   924  00000000       constant
0xffff582328c0   928  39c04241       constant
0xffff582328c4   932  00000000       constant
0xffff582328c8   936  58206820       constant
0xffff582328cc   940  0000ffff       constant
0xffff582328d0   944  58206260       constant
0xffff582328d4   948  0000ffff       constant
0xffff582328d8   952  582068e0       constant
0xffff582328dc   956  0000ffff       constant


Safepoints (size = 21)
0xffff58232748   552  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 53)
0xffff58232540  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58232558  embedded object  (0x39c04519 <the hole>)
0xffff58232568  embedded object  (0x39c04241 <undefined>)
0xffff58232570  embedded object  (0x39c04241 <undefined>)
0xffff58232578  embedded object  (0x39c04241 <undefined>)
0xffff58232580  embedded object  (0x39c04241 <undefined>)
0xffff58232588  embedded object  (0x39c04241 <undefined>)
0xffff58232590  embedded object  (0x39c04241 <undefined>)
0xffff58232598  embedded object  (0x39c04241 <undefined>)
0xffff582325a0  embedded object  (0x39c04241 <undefined>)
0xffff582325a8  embedded object  (0x39c04241 <undefined>)
0xffff582325b0  embedded object  (0x39c04241 <undefined>)
0xffff582325b8  embedded object  (0x39c04241 <undefined>)
0xffff582325c0  embedded object  (0x39c04241 <undefined>)
0xffff582325c8  embedded object  (0x39c04241 <undefined>)
0xffff582325d0  embedded object  (0x39c04241 <undefined>)
0xffff582325d8  embedded object  (0x39c04241 <undefined>)
0xffff582325e0  embedded object  (0x39c04241 <undefined>)
0xffff582325e8  embedded object  (0x39c04241 <undefined>)
0xffff582325f0  embedded object  (0x39c04241 <undefined>)
0xffff582325f8  embedded object  (0x39c04241 <undefined>)
0xffff58232600  embedded object  (0x39c04241 <undefined>)
0xffff58232608  embedded object  (0x39c04241 <undefined>)
0xffff58232610  embedded object  (0x39c04241 <undefined>)
0xffff58232618  embedded object  (0x39c04241 <undefined>)
0xffff58232620  embedded object  (0x39c04241 <undefined>)
0xffff58232628  embedded object  (0x39c04241 <undefined>)
0xffff58232630  embedded object  (0x39c04241 <undefined>)
0xffff58232638  embedded object  (0x39c04241 <undefined>)
0xffff58232640  embedded object  (0x39c04241 <undefined>)
0xffff5823264c  embedded object  (0x39c04241 <undefined>)
0xffff58232658  embedded object  (0x39c04241 <undefined>)
0xffff58232664  embedded object  (0x39c04241 <undefined>)
0xffff58232670  embedded object  (0x39c04241 <undefined>)
0xffff5823267c  embedded object  (0x39c04241 <undefined>)
0xffff58232688  embedded object  (0x39c04241 <undefined>)
0xffff58232694  embedded object  (0x39c04241 <undefined>)
0xffff582326a0  embedded object  (0x39c04241 <undefined>)
0xffff582326ac  embedded object  (0x39c04241 <undefined>)
0xffff582326b8  embedded object  (0x39c04241 <undefined>)
0xffff582326c4  embedded object  (0x39c04241 <undefined>)
0xffff582326d0  embedded object  (0x39c04241 <undefined>)
0xffff582326dc  embedded object  (0x39c04241 <undefined>)
0xffff582326e8  embedded object  (0x39c04241 <undefined>)
0xffff5823271c  code target (STUB)  (0xffff58206820)
0xffff58232740  code target (STUB)  (0xffff58206260)
0xffff5823274c  code target (STUB)  (0xffff582068e0)
0xffff58232760  constant pool (size 384)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff58232960     0  adr xzr, #+0x40 (addr 0xffff582329a0)
0xffff58232964     4  adr xzr, #+0x360 (addr 0xffff58232cc4)
0xffff58232968     8  ldr x16, pc+1736 (addr 0x0000ffff58233030)    ;; external reference (store_buffer_top)
0xffff5823296c    12  ldr x1, [x16]
0xffff58232970    16  str x2, [x1], #8
0xffff58232974    20  str x1, [x16]
0xffff58232978    24  tst x1, #0x1ffff
0xffff5823297c    28  b.eq #+0x8 (addr 0xffff58232984)
0xffff58232980    32  ret
0xffff58232984    36  sub csp, jssp, #0x8 (8)
0xffff58232988    40  str lr, [jssp, #-8]!
0xffff5823298c    44  ldr x17, pc+1708 (addr 0x0000ffff58233038)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58232990    48  blr x17
0xffff58232994    52  ldr lr, [jssp], #8
0xffff58232998    56  ret
0xffff5823299c    60  ret
0xffff582329a0    64  sub csp, jssp, #0x10 (16)
0xffff582329a4    68  stp x3, x0, [jssp, #-16]!
0xffff582329a8    72  ldr x1, [x2]
0xffff582329ac    76  and x16, x1, #0xfffffffffff00000
0xffff582329b0    80  ldr x16, [x16, #8]
0xffff582329b4    84  tst x16, #0x18
0xffff582329b8    88  b.eq #+0x1d8 (addr 0xffff58232b90)
0xffff582329bc    92  and x16, x4, #0xfffffffffff00000
0xffff582329c0    96  ldr x16, [x16, #8]
0xffff582329c4   100  tst x16, #0x18
0xffff582329c8   104  b.ne #+0x1c8 (addr 0xffff58232b90)
0xffff582329cc   108  and x1, x4, #0xfffffffffff00000
0xffff582329d0   112  ldr x0, [x1, #104]
0xffff582329d4   116  subs x0, x0, #0x1 (1)
0xffff582329d8   120  str x0, [x1, #104]
0xffff582329dc   124  b.mi #+0xc4 (addr 0xffff58232aa0)
0xffff582329e0   128  ubfx x16, x4, #8, #12
0xffff582329e4   132  and x1, x4, #0xfffffffffff00000
0xffff582329e8   136  add x1, x1, x16, lsl #2
0xffff582329ec   140  ubfx x0, x4, #3, #5
0xffff582329f0   144  ldr x1, [x1, #360]
0xffff582329f4   148  lsr x1, x1, x0
0xffff582329f8   152  tbz w1, #0, #+0x8 (addr 0xffff58232a00)
0xffff582329fc   156  tbnz w1, #1, #+0x3c (addr 0xffff58232a38)
0xffff58232a00   160  ldp x3, x0, [jssp], #16
0xffff58232a04   164  ldr x16, pc+1596 (addr 0x0000ffff58233040)    ;; external reference (store_buffer_top)
0xffff58232a08   168  ldr x1, [x16]
0xffff58232a0c   172  str x2, [x1], #8
0xffff58232a10   176  str x1, [x16]
0xffff58232a14   180  tst x1, #0x1ffff
0xffff58232a18   184  b.eq #+0x8 (addr 0xffff58232a20)
0xffff58232a1c   188  ret
0xffff58232a20   192  sub csp, jssp, #0x8 (8)
0xffff58232a24   196  str lr, [jssp, #-8]!
0xffff58232a28   200  ldr x17, pc+1568 (addr 0x0000ffff58233048)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58232a2c   204  blr x17
0xffff58232a30   208  ldr lr, [jssp], #8
0xffff58232a34   212  ret
0xffff58232a38   216  ldr x1, [x2]
0xffff58232a3c   220  sub csp, jssp, #0x10 (16)
0xffff58232a40   224  stp x4, x2, [jssp, #-16]!
0xffff58232a44   228  ubfx x16, x1, #8, #12
0xffff58232a48   232  and x0, x1, #0xfffffffffff00000
0xffff58232a4c   236  add x0, x0, x16, lsl #2
0xffff58232a50   240  ubfx x4, x1, #3, #5
0xffff58232a54   244  ldr x2, [x0, #360]
0xffff58232a58   248  lsr x2, x2, x4
0xffff58232a5c   252  tbz w2, #0, #+0x40 (addr 0xffff58232a9c)
0xffff58232a60   256  ldp x4, x2, [jssp], #16
0xffff58232a64   260  ldp x3, x0, [jssp], #16
0xffff58232a68   264  ldr x16, pc+1512 (addr 0x0000ffff58233050)    ;; external reference (store_buffer_top)
0xffff58232a6c   268  ldr x1, [x16]
0xffff58232a70   272  str x2, [x1], #8
0xffff58232a74   276  str x1, [x16]
0xffff58232a78   280  tst x1, #0x1ffff
0xffff58232a7c   284  b.eq #+0x8 (addr 0xffff58232a84)
0xffff58232a80   288  ret
0xffff58232a84   292  sub csp, jssp, #0x8 (8)
0xffff58232a88   296  str lr, [jssp, #-8]!
0xffff58232a8c   300  ldr x17, pc+1484 (addr 0x0000ffff58233058)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58232a90   304  blr x17
0xffff58232a94   308  ldr lr, [jssp], #8
0xffff58232a98   312  ret
0xffff58232a9c   316  ldp x4, x2, [jssp], #16
0xffff58232aa0   320  sub csp, jssp, #0x78 (120)
0xffff58232aa4   324  stp x14, x15, [jssp, #-32]!
0xffff58232aa8   328  stp x18, lr, [jssp, #16]
0xffff58232aac   332  stp x10, x11, [jssp, #-32]!
0xffff58232ab0   336  stp x12, x13, [jssp, #16]
0xffff58232ab4   340  stp x6, x7, [jssp, #-32]!
0xffff58232ab8   344  stp x8, x9, [jssp, #16]
0xffff58232abc   348  stp x2, x4, [jssp, #-24]!
0xffff58232ac0   352  str x5, [jssp, #16]
0xffff58232ac4   356  sub csp, jssp, #0xb0 (176)
0xffff58232ac8   360  stp d26, d27, [jssp, #-32]!
0xffff58232acc   364  stp d28, d29, [jssp, #16]
0xffff58232ad0   368  stp d22, d23, [jssp, #-32]!
0xffff58232ad4   372  stp d24, d25, [jssp, #16]
0xffff58232ad8   376  stp d18, d19, [jssp, #-32]!
0xffff58232adc   380  stp d20, d21, [jssp, #16]
0xffff58232ae0   384  stp d6, d7, [jssp, #-32]!
0xffff58232ae4   388  stp d16, d17, [jssp, #16]
0xffff58232ae8   392  stp d2, d3, [jssp, #-32]!
0xffff58232aec   396  stp d4, d5, [jssp, #16]
0xffff58232af0   400  stp d0, d1, [jssp, #-16]!
0xffff58232af4   404  mov x0, x4
0xffff58232af8   408  mov x1, x2
0xffff58232afc   412  ldr x2, pc+1380 (addr 0x0000ffff58233060)    ;; external reference (isolate)
0xffff58232b00   416  ldr x16, pc+1384 (addr 0x0000ffff58233068)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58232b04   420  and csp, jssp, #0xfffffffffffffff0
0xffff58232b08   424  blr x16
0xffff58232b0c   428  ldp d2, d3, [jssp, #16]
0xffff58232b10   432  ldp d0, d1, [jssp], #32
0xffff58232b14   436  ldp d6, d7, [jssp, #16]
0xffff58232b18   440  ldp d4, d5, [jssp], #32
0xffff58232b1c   444  ldp d18, d19, [jssp, #16]
0xffff58232b20   448  ldp d16, d17, [jssp], #32
0xffff58232b24   452  ldp d22, d23, [jssp, #16]
0xffff58232b28   456  ldp d20, d21, [jssp], #32
0xffff58232b2c   460  ldp d26, d27, [jssp, #16]
0xffff58232b30   464  ldp d24, d25, [jssp], #32
0xffff58232b34   468  ldp d28, d29, [jssp], #16
0xffff58232b38   472  ldp x5, x6, [jssp, #16]
0xffff58232b3c   476  ldp x2, x4, [jssp], #32
0xffff58232b40   480  ldp x9, x10, [jssp, #16]
0xffff58232b44   484  ldp x7, x8, [jssp], #32
0xffff58232b48   488  ldp x13, x14, [jssp, #16]
0xffff58232b4c   492  ldp x11, x12, [jssp], #32
0xffff58232b50   496  ldr lr, [jssp, #16]
0xffff58232b54   500  ldp x15, x18, [jssp], #24
0xffff58232b58   504  ldp x3, x0, [jssp], #16
0xffff58232b5c   508  ldr x16, pc+1300 (addr 0x0000ffff58233070)    ;; external reference (store_buffer_top)
0xffff58232b60   512  ldr x1, [x16]
0xffff58232b64   516  str x2, [x1], #8
0xffff58232b68   520  str x1, [x16]
0xffff58232b6c   524  tst x1, #0x1ffff
0xffff58232b70   528  b.eq #+0x8 (addr 0xffff58232b78)
0xffff58232b74   532  ret
0xffff58232b78   536  sub csp, jssp, #0x8 (8)
0xffff58232b7c   540  str lr, [jssp, #-8]!
0xffff58232b80   544  ldr x17, pc+1272 (addr 0x0000ffff58233078)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58232b84   548  blr x17
0xffff58232b88   552  ldr lr, [jssp], #8
0xffff58232b8c   556  ret
0xffff58232b90   560  and x1, x4, #0xfffffffffff00000
0xffff58232b94   564  ldr x0, [x1, #104]
0xffff58232b98   568  subs x0, x0, #0x1 (1)
0xffff58232b9c   572  str x0, [x1, #104]
0xffff58232ba0   576  b.mi #+0x64 (addr 0xffff58232c04)
0xffff58232ba4   580  ubfx x16, x4, #8, #12
0xffff58232ba8   584  and x1, x4, #0xfffffffffff00000
0xffff58232bac   588  add x1, x1, x16, lsl #2
0xffff58232bb0   592  ubfx x0, x4, #3, #5
0xffff58232bb4   596  ldr x1, [x1, #360]
0xffff58232bb8   600  lsr x1, x1, x0
0xffff58232bbc   604  tbz w1, #0, #+0x8 (addr 0xffff58232bc4)
0xffff58232bc0   608  tbnz w1, #1, #+0xc (addr 0xffff58232bcc)
0xffff58232bc4   612  ldp x3, x0, [jssp], #16
0xffff58232bc8   616  ret
0xffff58232bcc   620  ldr x1, [x2]
0xffff58232bd0   624  sub csp, jssp, #0x10 (16)
0xffff58232bd4   628  stp x4, x2, [jssp, #-16]!
0xffff58232bd8   632  ubfx x16, x1, #8, #12
0xffff58232bdc   636  and x0, x1, #0xfffffffffff00000
0xffff58232be0   640  add x0, x0, x16, lsl #2
0xffff58232be4   644  ubfx x4, x1, #3, #5
0xffff58232be8   648  ldr x2, [x0, #360]
0xffff58232bec   652  lsr x2, x2, x4
0xffff58232bf0   656  tbz w2, #0, #+0x10 (addr 0xffff58232c00)
0xffff58232bf4   660  ldp x4, x2, [jssp], #16
0xffff58232bf8   664  ldp x3, x0, [jssp], #16
0xffff58232bfc   668  ret
0xffff58232c00   672  ldp x4, x2, [jssp], #16
0xffff58232c04   676  sub csp, jssp, #0x78 (120)
0xffff58232c08   680  stp x14, x15, [jssp, #-32]!
0xffff58232c0c   684  stp x18, lr, [jssp, #16]
0xffff58232c10   688  stp x10, x11, [jssp, #-32]!
0xffff58232c14   692  stp x12, x13, [jssp, #16]
0xffff58232c18   696  stp x6, x7, [jssp, #-32]!
0xffff58232c1c   700  stp x8, x9, [jssp, #16]
0xffff58232c20   704  stp x2, x4, [jssp, #-24]!
0xffff58232c24   708  str x5, [jssp, #16]
0xffff58232c28   712  sub csp, jssp, #0xb0 (176)
0xffff58232c2c   716  stp d26, d27, [jssp, #-32]!
0xffff58232c30   720  stp d28, d29, [jssp, #16]
0xffff58232c34   724  stp d22, d23, [jssp, #-32]!
0xffff58232c38   728  stp d24, d25, [jssp, #16]
0xffff58232c3c   732  stp d18, d19, [jssp, #-32]!
0xffff58232c40   736  stp d20, d21, [jssp, #16]
0xffff58232c44   740  stp d6, d7, [jssp, #-32]!
0xffff58232c48   744  stp d16, d17, [jssp, #16]
0xffff58232c4c   748  stp d2, d3, [jssp, #-32]!
0xffff58232c50   752  stp d4, d5, [jssp, #16]
0xffff58232c54   756  stp d0, d1, [jssp, #-16]!
0xffff58232c58   760  mov x0, x4
0xffff58232c5c   764  mov x1, x2
0xffff58232c60   768  ldr x2, pc+1056 (addr 0x0000ffff58233080)    ;; external reference (isolate)
0xffff58232c64   772  ldr x16, pc+1060 (addr 0x0000ffff58233088)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58232c68   776  and csp, jssp, #0xfffffffffffffff0
0xffff58232c6c   780  blr x16
0xffff58232c70   784  ldp d2, d3, [jssp, #16]
0xffff58232c74   788  ldp d0, d1, [jssp], #32
0xffff58232c78   792  ldp d6, d7, [jssp, #16]
0xffff58232c7c   796  ldp d4, d5, [jssp], #32
0xffff58232c80   800  ldp d18, d19, [jssp, #16]
0xffff58232c84   804  ldp d16, d17, [jssp], #32
0xffff58232c88   808  ldp d22, d23, [jssp, #16]
0xffff58232c8c   812  ldp d20, d21, [jssp], #32
0xffff58232c90   816  ldp d26, d27, [jssp, #16]
0xffff58232c94   820  ldp d24, d25, [jssp], #32
0xffff58232c98   824  ldp d28, d29, [jssp], #16
0xffff58232c9c   828  ldp x5, x6, [jssp, #16]
0xffff58232ca0   832  ldp x2, x4, [jssp], #32
0xffff58232ca4   836  ldp x9, x10, [jssp, #16]
0xffff58232ca8   840  ldp x7, x8, [jssp], #32
0xffff58232cac   844  ldp x13, x14, [jssp, #16]
0xffff58232cb0   848  ldp x11, x12, [jssp], #32
0xffff58232cb4   852  ldr lr, [jssp, #16]
0xffff58232cb8   856  ldp x15, x18, [jssp], #24
0xffff58232cbc   860  ldp x3, x0, [jssp], #16
0xffff58232cc0   864  ret
0xffff58232cc4   868  sub csp, jssp, #0x10 (16)
0xffff58232cc8   872  stp x3, x0, [jssp, #-16]!
0xffff58232ccc   876  ldr x1, [x2]
0xffff58232cd0   880  and x16, x1, #0xfffffffffff00000
0xffff58232cd4   884  ldr x16, [x16, #8]
0xffff58232cd8   888  tst x16, #0x18
0xffff58232cdc   892  b.eq #+0x1f8 (addr 0xffff58232ed4)
0xffff58232ce0   896  and x16, x4, #0xfffffffffff00000
0xffff58232ce4   900  ldr x16, [x16, #8]
0xffff58232ce8   904  tst x16, #0x18
0xffff58232cec   908  b.ne #+0x1e8 (addr 0xffff58232ed4)
0xffff58232cf0   912  and x1, x4, #0xfffffffffff00000
0xffff58232cf4   916  ldr x0, [x1, #104]
0xffff58232cf8   920  subs x0, x0, #0x1 (1)
0xffff58232cfc   924  str x0, [x1, #104]
0xffff58232d00   928  b.mi #+0xe4 (addr 0xffff58232de4)
0xffff58232d04   932  ubfx x16, x4, #8, #12
0xffff58232d08   936  and x1, x4, #0xfffffffffff00000
0xffff58232d0c   940  add x1, x1, x16, lsl #2
0xffff58232d10   944  ubfx x0, x4, #3, #5
0xffff58232d14   948  ldr x1, [x1, #360]
0xffff58232d18   952  lsr x1, x1, x0
0xffff58232d1c   956  tbz w1, #0, #+0x8 (addr 0xffff58232d24)
0xffff58232d20   960  tbnz w1, #1, #+0x3c (addr 0xffff58232d5c)
0xffff58232d24   964  ldp x3, x0, [jssp], #16
0xffff58232d28   968  ldr x16, pc+872 (addr 0x0000ffff58233090)    ;; external reference (store_buffer_top)
0xffff58232d2c   972  ldr x1, [x16]
0xffff58232d30   976  str x2, [x1], #8
0xffff58232d34   980  str x1, [x16]
0xffff58232d38   984  tst x1, #0x1ffff
0xffff58232d3c   988  b.eq #+0x8 (addr 0xffff58232d44)
0xffff58232d40   992  ret
0xffff58232d44   996  sub csp, jssp, #0x8 (8)
0xffff58232d48  1000  str lr, [jssp, #-8]!
0xffff58232d4c  1004  ldr x17, pc+844 (addr 0x0000ffff58233098)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58232d50  1008  blr x17
0xffff58232d54  1012  ldr lr, [jssp], #8
0xffff58232d58  1016  ret
0xffff58232d5c  1020  ldr x1, [x2]
0xffff58232d60  1024  and x0, x1, #0xfffffffffff00000
0xffff58232d64  1028  ldr x0, [x0, #8]
0xffff58232d68  1032  tbz w0, #6, #+0x18 (addr 0xffff58232d80)
0xffff58232d6c  1036  and x0, x4, #0xfffffffffff00000
0xffff58232d70  1040  ldr x0, [x0, #8]
0xffff58232d74  1044  movz x16, #0x58
0xffff58232d78  1048  tst x0, x16
0xffff58232d7c  1052  b.eq #+0x68 (addr 0xffff58232de4)
0xffff58232d80  1056  sub csp, jssp, #0x10 (16)
0xffff58232d84  1060  stp x4, x2, [jssp, #-16]!
0xffff58232d88  1064  ubfx x16, x1, #8, #12
0xffff58232d8c  1068  and x0, x1, #0xfffffffffff00000
0xffff58232d90  1072  add x0, x0, x16, lsl #2
0xffff58232d94  1076  ubfx x4, x1, #3, #5
0xffff58232d98  1080  ldr x2, [x0, #360]
0xffff58232d9c  1084  lsr x2, x2, x4
0xffff58232da0  1088  tbz w2, #0, #+0x40 (addr 0xffff58232de0)
0xffff58232da4  1092  ldp x4, x2, [jssp], #16
0xffff58232da8  1096  ldp x3, x0, [jssp], #16
0xffff58232dac  1100  ldr x16, pc+756 (addr 0x0000ffff582330a0)    ;; external reference (store_buffer_top)
0xffff58232db0  1104  ldr x1, [x16]
0xffff58232db4  1108  str x2, [x1], #8
0xffff58232db8  1112  str x1, [x16]
0xffff58232dbc  1116  tst x1, #0x1ffff
0xffff58232dc0  1120  b.eq #+0x8 (addr 0xffff58232dc8)
0xffff58232dc4  1124  ret
0xffff58232dc8  1128  sub csp, jssp, #0x8 (8)
0xffff58232dcc  1132  str lr, [jssp, #-8]!
0xffff58232dd0  1136  ldr x17, pc+728 (addr 0x0000ffff582330a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58232dd4  1140  blr x17
0xffff58232dd8  1144  ldr lr, [jssp], #8
0xffff58232ddc  1148  ret
0xffff58232de0  1152  ldp x4, x2, [jssp], #16
0xffff58232de4  1156  sub csp, jssp, #0x78 (120)
0xffff58232de8  1160  stp x14, x15, [jssp, #-32]!
0xffff58232dec  1164  stp x18, lr, [jssp, #16]
0xffff58232df0  1168  stp x10, x11, [jssp, #-32]!
0xffff58232df4  1172  stp x12, x13, [jssp, #16]
0xffff58232df8  1176  stp x6, x7, [jssp, #-32]!
0xffff58232dfc  1180  stp x8, x9, [jssp, #16]
0xffff58232e00  1184  stp x2, x4, [jssp, #-24]!
0xffff58232e04  1188  str x5, [jssp, #16]
0xffff58232e08  1192  sub csp, jssp, #0xb0 (176)
0xffff58232e0c  1196  stp d26, d27, [jssp, #-32]!
0xffff58232e10  1200  stp d28, d29, [jssp, #16]
0xffff58232e14  1204  stp d22, d23, [jssp, #-32]!
0xffff58232e18  1208  stp d24, d25, [jssp, #16]
0xffff58232e1c  1212  stp d18, d19, [jssp, #-32]!
0xffff58232e20  1216  stp d20, d21, [jssp, #16]
0xffff58232e24  1220  stp d6, d7, [jssp, #-32]!
0xffff58232e28  1224  stp d16, d17, [jssp, #16]
0xffff58232e2c  1228  stp d2, d3, [jssp, #-32]!
0xffff58232e30  1232  stp d4, d5, [jssp, #16]
0xffff58232e34  1236  stp d0, d1, [jssp, #-16]!
0xffff58232e38  1240  mov x0, x4
0xffff58232e3c  1244  mov x1, x2
0xffff58232e40  1248  ldr x2, pc+624 (addr 0x0000ffff582330b0)    ;; external reference (isolate)
0xffff58232e44  1252  ldr x16, pc+628 (addr 0x0000ffff582330b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58232e48  1256  and csp, jssp, #0xfffffffffffffff0
0xffff58232e4c  1260  blr x16
0xffff58232e50  1264  ldp d2, d3, [jssp, #16]
0xffff58232e54  1268  ldp d0, d1, [jssp], #32
0xffff58232e58  1272  ldp d6, d7, [jssp, #16]
0xffff58232e5c  1276  ldp d4, d5, [jssp], #32
0xffff58232e60  1280  ldp d18, d19, [jssp, #16]
0xffff58232e64  1284  ldp d16, d17, [jssp], #32
0xffff58232e68  1288  ldp d22, d23, [jssp, #16]
0xffff58232e6c  1292  ldp d20, d21, [jssp], #32
0xffff58232e70  1296  ldp d26, d27, [jssp, #16]
0xffff58232e74  1300  ldp d24, d25, [jssp], #32
0xffff58232e78  1304  ldp d28, d29, [jssp], #16
0xffff58232e7c  1308  ldp x5, x6, [jssp, #16]
0xffff58232e80  1312  ldp x2, x4, [jssp], #32
0xffff58232e84  1316  ldp x9, x10, [jssp, #16]
0xffff58232e88  1320  ldp x7, x8, [jssp], #32
0xffff58232e8c  1324  ldp x13, x14, [jssp, #16]
0xffff58232e90  1328  ldp x11, x12, [jssp], #32
0xffff58232e94  1332  ldr lr, [jssp, #16]
0xffff58232e98  1336  ldp x15, x18, [jssp], #24
0xffff58232e9c  1340  ldp x3, x0, [jssp], #16
0xffff58232ea0  1344  ldr x16, pc+544 (addr 0x0000ffff582330c0)    ;; external reference (store_buffer_top)
0xffff58232ea4  1348  ldr x1, [x16]
0xffff58232ea8  1352  str x2, [x1], #8
0xffff58232eac  1356  str x1, [x16]
0xffff58232eb0  1360  tst x1, #0x1ffff
0xffff58232eb4  1364  b.eq #+0x8 (addr 0xffff58232ebc)
0xffff58232eb8  1368  ret
0xffff58232ebc  1372  sub csp, jssp, #0x8 (8)
0xffff58232ec0  1376  str lr, [jssp, #-8]!
0xffff58232ec4  1380  ldr x17, pc+516 (addr 0x0000ffff582330c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58232ec8  1384  blr x17
0xffff58232ecc  1388  ldr lr, [jssp], #8
0xffff58232ed0  1392  ret
0xffff58232ed4  1396  and x1, x4, #0xfffffffffff00000
0xffff58232ed8  1400  ldr x0, [x1, #104]
0xffff58232edc  1404  subs x0, x0, #0x1 (1)
0xffff58232ee0  1408  str x0, [x1, #104]
0xffff58232ee4  1412  b.mi #+0x84 (addr 0xffff58232f68)
0xffff58232ee8  1416  ubfx x16, x4, #8, #12
0xffff58232eec  1420  and x1, x4, #0xfffffffffff00000
0xffff58232ef0  1424  add x1, x1, x16, lsl #2
0xffff58232ef4  1428  ubfx x0, x4, #3, #5
0xffff58232ef8  1432  ldr x1, [x1, #360]
0xffff58232efc  1436  lsr x1, x1, x0
0xffff58232f00  1440  tbz w1, #0, #+0x8 (addr 0xffff58232f08)
0xffff58232f04  1444  tbnz w1, #1, #+0xc (addr 0xffff58232f10)
0xffff58232f08  1448  ldp x3, x0, [jssp], #16
0xffff58232f0c  1452  ret
0xffff58232f10  1456  ldr x1, [x2]
0xffff58232f14  1460  and x0, x1, #0xfffffffffff00000
0xffff58232f18  1464  ldr x0, [x0, #8]
0xffff58232f1c  1468  tbz w0, #6, #+0x18 (addr 0xffff58232f34)
0xffff58232f20  1472  and x0, x4, #0xfffffffffff00000
0xffff58232f24  1476  ldr x0, [x0, #8]
0xffff58232f28  1480  movz x16, #0x58
0xffff58232f2c  1484  tst x0, x16
0xffff58232f30  1488  b.eq #+0x38 (addr 0xffff58232f68)
0xffff58232f34  1492  sub csp, jssp, #0x10 (16)
0xffff58232f38  1496  stp x4, x2, [jssp, #-16]!
0xffff58232f3c  1500  ubfx x16, x1, #8, #12
0xffff58232f40  1504  and x0, x1, #0xfffffffffff00000
0xffff58232f44  1508  add x0, x0, x16, lsl #2
0xffff58232f48  1512  ubfx x4, x1, #3, #5
0xffff58232f4c  1516  ldr x2, [x0, #360]
0xffff58232f50  1520  lsr x2, x2, x4
0xffff58232f54  1524  tbz w2, #0, #+0x10 (addr 0xffff58232f64)
0xffff58232f58  1528  ldp x4, x2, [jssp], #16
0xffff58232f5c  1532  ldp x3, x0, [jssp], #16
0xffff58232f60  1536  ret
0xffff58232f64  1540  ldp x4, x2, [jssp], #16
0xffff58232f68  1544  sub csp, jssp, #0x78 (120)
0xffff58232f6c  1548  stp x14, x15, [jssp, #-32]!
0xffff58232f70  1552  stp x18, lr, [jssp, #16]
0xffff58232f74  1556  stp x10, x11, [jssp, #-32]!
0xffff58232f78  1560  stp x12, x13, [jssp, #16]
0xffff58232f7c  1564  stp x6, x7, [jssp, #-32]!
0xffff58232f80  1568  stp x8, x9, [jssp, #16]
0xffff58232f84  1572  stp x2, x4, [jssp, #-24]!
0xffff58232f88  1576  str x5, [jssp, #16]
0xffff58232f8c  1580  sub csp, jssp, #0xb0 (176)
0xffff58232f90  1584  stp d26, d27, [jssp, #-32]!
0xffff58232f94  1588  stp d28, d29, [jssp, #16]
0xffff58232f98  1592  stp d22, d23, [jssp, #-32]!
0xffff58232f9c  1596  stp d24, d25, [jssp, #16]
0xffff58232fa0  1600  stp d18, d19, [jssp, #-32]!
0xffff58232fa4  1604  stp d20, d21, [jssp, #16]
0xffff58232fa8  1608  stp d6, d7, [jssp, #-32]!
0xffff58232fac  1612  stp d16, d17, [jssp, #16]
0xffff58232fb0  1616  stp d2, d3, [jssp, #-32]!
0xffff58232fb4  1620  stp d4, d5, [jssp, #16]
0xffff58232fb8  1624  stp d0, d1, [jssp, #-16]!
0xffff58232fbc  1628  mov x0, x4
0xffff58232fc0  1632  mov x1, x2
0xffff58232fc4  1636  ldr x2, pc+268 (addr 0x0000ffff582330d0)    ;; external reference (isolate)
0xffff58232fc8  1640  ldr x16, pc+272 (addr 0x0000ffff582330d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58232fcc  1644  and csp, jssp, #0xfffffffffffffff0
0xffff58232fd0  1648  blr x16
0xffff58232fd4  1652  ldp d2, d3, [jssp, #16]
0xffff58232fd8  1656  ldp d0, d1, [jssp], #32
0xffff58232fdc  1660  ldp d6, d7, [jssp, #16]
0xffff58232fe0  1664  ldp d4, d5, [jssp], #32
0xffff58232fe4  1668  ldp d18, d19, [jssp, #16]
0xffff58232fe8  1672  ldp d16, d17, [jssp], #32
0xffff58232fec  1676  ldp d22, d23, [jssp, #16]
0xffff58232ff0  1680  ldp d20, d21, [jssp], #32
0xffff58232ff4  1684  ldp d26, d27, [jssp, #16]
0xffff58232ff8  1688  ldp d24, d25, [jssp], #32
0xffff58232ffc  1692  ldp d28, d29, [jssp], #16
0xffff58233000  1696  ldp x5, x6, [jssp, #16]
0xffff58233004  1700  ldp x2, x4, [jssp], #32
0xffff58233008  1704  ldp x9, x10, [jssp, #16]
0xffff5823300c  1708  ldp x7, x8, [jssp], #32
0xffff58233010  1712  ldp x13, x14, [jssp, #16]
0xffff58233014  1716  ldp x11, x12, [jssp], #32
0xffff58233018  1720  ldr lr, [jssp, #16]
0xffff5823301c  1724  ldp x15, x18, [jssp], #24
0xffff58233020  1728  ldp x3, x0, [jssp], #16
0xffff58233024  1732  ret
0xffff58233028  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5823302c  1740  d63f03e0       constant
0xffff58233030  1744  16e798c0       constant
0xffff58233034  1748  00000000       constant
0xffff58233038  1752  582065a0       constant
0xffff5823303c  1756  0000ffff       constant
0xffff58233040  1760  16e798c0       constant
0xffff58233044  1764  00000000       constant
0xffff58233048  1768  582065a0       constant
0xffff5823304c  1772  0000ffff       constant
0xffff58233050  1776  16e798c0       constant
0xffff58233054  1780  00000000       constant
0xffff58233058  1784  582065a0       constant
0xffff5823305c  1788  0000ffff       constant
0xffff58233060  1792  16e782d0       constant
0xffff58233064  1796  00000000       constant
0xffff58233068  1800  00c2d958       constant
0xffff5823306c  1804  00000000       constant
0xffff58233070  1808  16e798c0       constant
0xffff58233074  1812  00000000       constant
0xffff58233078  1816  582065a0       constant
0xffff5823307c  1820  0000ffff       constant
0xffff58233080  1824  16e782d0       constant
0xffff58233084  1828  00000000       constant
0xffff58233088  1832  00c2d958       constant
0xffff5823308c  1836  00000000       constant
0xffff58233090  1840  16e798c0       constant
0xffff58233094  1844  00000000       constant
0xffff58233098  1848  582065a0       constant
0xffff5823309c  1852  0000ffff       constant
0xffff582330a0  1856  16e798c0       constant
0xffff582330a4  1860  00000000       constant
0xffff582330a8  1864  582065a0       constant
0xffff582330ac  1868  0000ffff       constant
0xffff582330b0  1872  16e782d0       constant
0xffff582330b4  1876  00000000       constant
0xffff582330b8  1880  00c2d958       constant
0xffff582330bc  1884  00000000       constant
0xffff582330c0  1888  16e798c0       constant
0xffff582330c4  1892  00000000       constant
0xffff582330c8  1896  582065a0       constant
0xffff582330cc  1900  0000ffff       constant
0xffff582330d0  1904  16e782d0       constant
0xffff582330d4  1908  00000000       constant
0xffff582330d8  1912  00c2d958       constant
0xffff582330dc  1916  00000000       constant


RelocInfo (size = 65)
0xffff58232968  external reference (store_buffer_top)  (0x16e798c0)
0xffff5823298c  code target (STUB)  (0xffff582065a0)
0xffff58232a04  external reference (store_buffer_top)  (0x16e798c0)
0xffff58232a28  code target (STUB)  (0xffff582065a0)
0xffff58232a68  external reference (store_buffer_top)  (0x16e798c0)
0xffff58232a8c  code target (STUB)  (0xffff582065a0)
0xffff58232afc  external reference (isolate)  (0x16e782d0)
0xffff58232b00  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58232b5c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58232b80  code target (STUB)  (0xffff582065a0)
0xffff58232c60  external reference (isolate)  (0x16e782d0)
0xffff58232c64  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58232d28  external reference (store_buffer_top)  (0x16e798c0)
0xffff58232d4c  code target (STUB)  (0xffff582065a0)
0xffff58232dac  external reference (store_buffer_top)  (0x16e798c0)
0xffff58232dd0  code target (STUB)  (0xffff582065a0)
0xffff58232e40  external reference (isolate)  (0x16e782d0)
0xffff58232e44  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58232ea0  external reference (store_buffer_top)  (0x16e798c0)
0xffff58232ec4  code target (STUB)  (0xffff582065a0)
0xffff58232fc4  external reference (isolate)  (0x16e782d0)
0xffff58232fc8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58233028  constant pool (size 184)


kind = STUB
major_key = FastCloneShallowArrayStub
name = FastCloneShallowArrayStub
compiler = crankshaft
Instructions (size = 1902)
0xffff58233140     0  ldur x0, [x3, #47]
0xffff58233144     4  asr x4, x2, #32
0xffff58233148     8  add x5, x0, #0x17 (23)
0xffff5823314c    12  ldr x6, [x5, w4, sxtw #3]
0xffff58233150    16  ldr x0, pc+1456 (addr 0x0000ffff58233700)    ;; object: 0x39c04241 <undefined>
0xffff58233154    20  cmp x6, x0
0xffff58233158    24  b.eq #+0x33c (addr 0xffff58233494)
0xffff5823315c    28  ldur x0, [x6, #7]
0xffff58233160    32  ldur x1, [x0, #15]
0xffff58233164    36  ldur w2, [x1, #11]
0xffff58233168    40  cbz w2, #+0x2c0 (addr 0xffff58233428)
0xffff5823316c    44  ldur x3, [x1, #-1]
0xffff58233170    48  ldr x16, pc+1432 (addr 0x0000ffff58233708)    ;; object: 0x32b04361 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58233174    52  cmp x3, x16
0xffff58233178    56  b.eq #+0x24c (addr 0xffff582333c4)
0xffff5823317c    60  ldur x1, [x1, #-1]
0xffff58233180    64  ldr x16, pc+1424 (addr 0x0000ffff58233710)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58233184    68  cmp x1, x16
0xffff58233188    72  b.eq #+0x120 (addr 0xffff582332a8)
0xffff5823318c    76  lsl w1, w2, #3
0xffff58233190    80  add w1, w1, #0x10 (16)
0xffff58233194    84  movz x3, #0x92c0
0xffff58233198    88  movk x3, #0x16e7, lsl #16
0xffff5823319c    92  ldp x4, x2, [x3]
0xffff582331a0    96  adds x16, x4, #0x30 (48)
0xffff582331a4   100  ccmp x16, x2, #nzCv, lo
0xffff582331a8   104  b.hi #+0x2f0 (addr 0xffff58233498)
0xffff582331ac   108  str x16, [x3]
0xffff582331b0   112  orr x4, x4, #0x1
0xffff582331b4   116  ldur x2, [x0, #-1]
0xffff582331b8   120  stur x2, [x4, #-1]
0xffff582331bc   124  ldr x2, pc+1372 (addr 0x0000ffff58233718)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582331c0   128  stur x2, [x4, #7]
0xffff582331c4   132  ldr x2, pc+1372 (addr 0x0000ffff58233720)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582331c8   136  stur x2, [x4, #15]
0xffff582331cc   140  movz x2, #0x0
0xffff582331d0   144  stur x2, [x4, #23]
0xffff582331d4   148  add x2, x4, #0x20 (32)
0xffff582331d8   152  ldr x3, pc+1360 (addr 0x0000ffff58233728)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582331dc   156  stur x3, [x2, #-1]
0xffff582331e0   160  stur x6, [x2, #7]
0xffff582331e4   164  ldur w2, [x6, #35]
0xffff582331e8   168  add w2, w2, #0x1 (1)
0xffff582331ec   172  lsl x2, x2, #32
0xffff582331f0   176  stur x2, [x6, #31]
0xffff582331f4   180  sxtw x1, w1
0xffff582331f8   184  movz x2, #0x92c0
0xffff582331fc   188  movk x2, #0x16e7, lsl #16
0xffff58233200   192  ldp x5, x16, [x2]
0xffff58233204   196  adds x3, x5, x1
0xffff58233208   200  ccmp x3, x16, #nzCv, lo
0xffff5823320c   204  b.hi #+0x2f0 (addr 0xffff582334fc)
0xffff58233210   208  str x3, [x2]
0xffff58233214   212  orr x5, x5, #0x1
0xffff58233218   216  mov x1, x5
0xffff5823321c   220  stur x1, [x4, #15]
0xffff58233220   224  add x2, x4, #0xf (15)
0xffff58233224   228  and x1, x4, #0xfffffffffff00000
0xffff58233228   232  ldr x1, [x1, #8]
0xffff5823322c   236  tbz w1, #2, #+0x18 (addr 0xffff58233244)
0xffff58233230   240  sub csp, jssp, #0x8 (8)
0xffff58233234   244  str lr, [jssp, #-8]!
0xffff58233238   248  ldr x16, pc+1272 (addr 0x0000ffff58233730)    ;; code: STUB, RecordWriteStub, minor: 67620
0xffff5823323c   252  blr x16
0xffff58233240   256  ldr lr, [jssp], #8
0xffff58233244   260  ldur x1, [x0, #15]
0xffff58233248   264  ldur x2, [x1, #-1]
0xffff5823324c   268  stur x2, [x5, #-1]
0xffff58233250   272  ldur w2, [x1, #11]
0xffff58233254   276  lsl x2, x2, #32
0xffff58233258   280  stur x2, [x5, #7]
0xffff5823325c   284  ldur w0, [x0, #27]
0xffff58233260   288  lsl x2, x0, #32
0xffff58233264   292  stur x2, [x4, #23]
0xffff58233268   296  ldr d0, pc+1168 (addr 0x0000ffff582336f8)
0xffff5823326c   300  ldur w2, [x5, #11]
0xffff58233270   304  cmp w0, w2
0xffff58233274   308  b.ge #+0x14 (addr 0xffff58233288)
0xffff58233278   312  sub w2, w2, #0x1 (1)
0xffff5823327c   316  add x3, x5, #0xf (15)
0xffff58233280   320  str d0, [x3, w2, sxtw #3]
0xffff58233284   324  b #-0x14 (addr 0xffff58233270)
0xffff58233288   328  cmp w0, #0x0 (0)
0xffff5823328c   332  b.le #+0x200 (addr 0xffff5823348c)
0xffff58233290   336  sub w0, w0, #0x1 (1)
0xffff58233294   340  add x2, x1, #0xf (15)
0xffff58233298   344  ldr d0, [x2, w0, sxtw #3]
0xffff5823329c   348  add x2, x5, #0xf (15)
0xffff582332a0   352  str d0, [x2, w0, sxtw #3]
0xffff582332a4   356  b #-0x1c (addr 0xffff58233288)
0xffff582332a8   360  lsl w1, w2, #3
0xffff582332ac   364  add w1, w1, #0x10 (16)
0xffff582332b0   368  movz x3, #0x92c0
0xffff582332b4   372  movk x3, #0x16e7, lsl #16
0xffff582332b8   376  ldp x4, x2, [x3]
0xffff582332bc   380  adds x16, x4, #0x30 (48)
0xffff582332c0   384  ccmp x16, x2, #nzCv, lo
0xffff582332c4   388  b.hi #+0x29c (addr 0xffff58233560)
0xffff582332c8   392  str x16, [x3]
0xffff582332cc   396  orr x4, x4, #0x1
0xffff582332d0   400  ldur x2, [x0, #-1]
0xffff582332d4   404  stur x2, [x4, #-1]
0xffff582332d8   408  ldr x2, pc+1120 (addr 0x0000ffff58233738)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582332dc   412  stur x2, [x4, #7]
0xffff582332e0   416  ldr x2, pc+1120 (addr 0x0000ffff58233740)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582332e4   420  stur x2, [x4, #15]
0xffff582332e8   424  movz x2, #0x0
0xffff582332ec   428  stur x2, [x4, #23]
0xffff582332f0   432  add x2, x4, #0x20 (32)
0xffff582332f4   436  ldr x3, pc+1108 (addr 0x0000ffff58233748)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582332f8   440  stur x3, [x2, #-1]
0xffff582332fc   444  stur x6, [x2, #7]
0xffff58233300   448  ldur w2, [x6, #35]
0xffff58233304   452  add w2, w2, #0x1 (1)
0xffff58233308   456  lsl x2, x2, #32
0xffff5823330c   460  stur x2, [x6, #31]
0xffff58233310   464  sxtw x1, w1
0xffff58233314   468  movz x2, #0x92c0
0xffff58233318   472  movk x2, #0x16e7, lsl #16
0xffff5823331c   476  ldp x5, x16, [x2]
0xffff58233320   480  adds x3, x5, x1
0xffff58233324   484  ccmp x3, x16, #nzCv, lo
0xffff58233328   488  b.hi #+0x29c (addr 0xffff582335c4)
0xffff5823332c   492  str x3, [x2]
0xffff58233330   496  orr x5, x5, #0x1
0xffff58233334   500  mov x1, x5
0xffff58233338   504  stur x1, [x4, #15]
0xffff5823333c   508  add x2, x4, #0xf (15)
0xffff58233340   512  and x1, x4, #0xfffffffffff00000
0xffff58233344   516  ldr x1, [x1, #8]
0xffff58233348   520  tbz w1, #2, #+0x18 (addr 0xffff58233360)
0xffff5823334c   524  sub csp, jssp, #0x8 (8)
0xffff58233350   528  str lr, [jssp, #-8]!
0xffff58233354   532  ldr x16, pc+1020 (addr 0x0000ffff58233750)    ;; code: STUB, RecordWriteStub, minor: 67620
0xffff58233358   536  blr x16
0xffff5823335c   540  ldr lr, [jssp], #8
0xffff58233360   544  ldur x1, [x0, #15]
0xffff58233364   548  ldur x2, [x1, #-1]
0xffff58233368   552  stur x2, [x5, #-1]
0xffff5823336c   556  ldur w2, [x1, #11]
0xffff58233370   560  lsl x2, x2, #32
0xffff58233374   564  stur x2, [x5, #7]
0xffff58233378   568  ldur w0, [x0, #27]
0xffff5823337c   572  lsl x2, x0, #32
0xffff58233380   576  stur x2, [x4, #23]
0xffff58233384   580  ldur w2, [x5, #11]
0xffff58233388   584  cmp w0, w2
0xffff5823338c   588  b.ge #+0x18 (addr 0xffff582333a4)
0xffff58233390   592  sub w2, w2, #0x1 (1)
0xffff58233394   596  ldr x3, pc+964 (addr 0x0000ffff58233758)    ;; object: 0x39c04519 <the hole>
0xffff58233398   600  add x6, x5, #0xf (15)
0xffff5823339c   604  str x3, [x6, w2, sxtw #3]
0xffff582333a0   608  b #-0x18 (addr 0xffff58233388)
0xffff582333a4   612  cmp w0, #0x0 (0)
0xffff582333a8   616  b.le #+0xe4 (addr 0xffff5823348c)
0xffff582333ac   620  sub w0, w0, #0x1 (1)
0xffff582333b0   624  add x2, x1, #0xf (15)
0xffff582333b4   628  ldr x3, [x2, w0, sxtw #3]
0xffff582333b8   632  add x2, x5, #0xf (15)
0xffff582333bc   636  str x3, [x2, w0, sxtw #3]
0xffff582333c0   640  b #-0x1c (addr 0xffff582333a4)
0xffff582333c4   644  movz x3, #0x92c0
0xffff582333c8   648  movk x3, #0x16e7, lsl #16
0xffff582333cc   652  ldp x4, x2, [x3]
0xffff582333d0   656  adds x16, x4, #0x30 (48)
0xffff582333d4   660  ccmp x16, x2, #nzCv, lo
0xffff582333d8   664  b.hi #+0x250 (addr 0xffff58233628)
0xffff582333dc   668  str x16, [x3]
0xffff582333e0   672  orr x4, x4, #0x1
0xffff582333e4   676  ldur x2, [x0, #-1]
0xffff582333e8   680  ldur w0, [x0, #27]
0xffff582333ec   684  stur x2, [x4, #-1]
0xffff582333f0   688  ldr x2, pc+880 (addr 0x0000ffff58233760)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582333f4   692  stur x2, [x4, #7]
0xffff582333f8   696  stur x1, [x4, #15]
0xffff582333fc   700  lsl x0, x0, #32
0xffff58233400   704  stur x0, [x4, #23]
0xffff58233404   708  add x0, x4, #0x20 (32)
0xffff58233408   712  ldr x1, pc+864 (addr 0x0000ffff58233768)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823340c   716  stur x1, [x0, #-1]
0xffff58233410   720  stur x6, [x0, #7]
0xffff58233414   724  ldur w0, [x6, #35]
0xffff58233418   728  add w0, w0, #0x1 (1)
0xffff5823341c   732  lsl x0, x0, #32
0xffff58233420   736  stur x0, [x6, #31]
0xffff58233424   740  b #+0x68 (addr 0xffff5823348c)
0xffff58233428   744  movz x2, #0x92c0
0xffff5823342c   748  movk x2, #0x16e7, lsl #16
0xffff58233430   752  ldp x3, x1, [x2]
0xffff58233434   756  adds x16, x3, #0x30 (48)
0xffff58233438   760  ccmp x16, x1, #nzCv, lo
0xffff5823343c   764  b.hi #+0x250 (addr 0xffff5823368c)
0xffff58233440   768  str x16, [x2]
0xffff58233444   772  orr x3, x3, #0x1
0xffff58233448   776  ldur x0, [x0, #-1]
0xffff5823344c   780  stur x0, [x3, #-1]
0xffff58233450   784  ldr x0, pc+800 (addr 0x0000ffff58233770)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58233454   788  stur x0, [x3, #7]
0xffff58233458   792  ldr x0, pc+800 (addr 0x0000ffff58233778)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5823345c   796  stur x0, [x3, #15]
0xffff58233460   800  movz x0, #0x0
0xffff58233464   804  stur x0, [x3, #23]
0xffff58233468   808  add x0, x3, #0x20 (32)
0xffff5823346c   812  ldr x1, pc+788 (addr 0x0000ffff58233780)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58233470   816  stur x1, [x0, #-1]
0xffff58233474   820  stur x6, [x0, #7]
0xffff58233478   824  ldur w0, [x6, #35]
0xffff5823347c   828  add w0, w0, #0x1 (1)
0xffff58233480   832  lsl x0, x0, #32
0xffff58233484   836  stur x0, [x6, #31]
0xffff58233488   840  mov x4, x3
0xffff5823348c   844  mov x0, x4
0xffff58233490   848  ret
0xffff58233494   852  b #+0x384 (addr 0xffff58233818)
0xffff58233498   856  sub csp, jssp, #0x10 (16)
0xffff5823349c   860  stp fp, lr, [jssp, #-16]!
0xffff582334a0   864  movz fp, #0xa00000000
0xffff582334a4   868  sub csp, jssp, #0x8 (8)
0xffff582334a8   872  str fp, [jssp, #-8]!
0xffff582334ac   876  add fp, jssp, #0x8 (8)
0xffff582334b0   880  movz x4, #0x0
0xffff582334b4   884  mov x16, lr
0xffff582334b8   888  ldr x17, pc+720 (addr 0x0000ffff58233788)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582334bc   892  blr x17
0xffff582334c0   896  movz x0, #0x3000000000
0xffff582334c4   900  movz x10, #0x0
0xffff582334c8   904  sub csp, jssp, #0x10 (16)
0xffff582334cc   908  stp x10, x0, [jssp, #-16]!
0xffff582334d0   912  movz x0, #0x2
0xffff582334d4   916  movz x1, #0x5b88
0xffff582334d8   920  movk x1, #0xe2, lsl #16
0xffff582334dc   924  ldr x16, pc+692 (addr 0x0000ffff58233790)    ;; code: STUB, CEntryStub, minor: 5
0xffff582334e0   928  blr x16
0xffff582334e4   932  str x0, [jssp, #32]
0xffff582334e8   936  ldr x16, pc+688 (addr 0x0000ffff58233798)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582334ec   940  blr x16
0xffff582334f0   944  ldr lr, [jssp, #16]
0xffff582334f4   948  ldp xzr, fp, [jssp], #24
0xffff582334f8   952  b #-0x344 (addr 0xffff582331b4)
0xffff582334fc   956  sub csp, jssp, #0x10 (16)
0xffff58233500   960  stp fp, lr, [jssp, #-16]!
0xffff58233504   964  movz fp, #0xa00000000
0xffff58233508   968  sub csp, jssp, #0x8 (8)
0xffff5823350c   972  str fp, [jssp, #-8]!
0xffff58233510   976  add fp, jssp, #0x8 (8)
0xffff58233514   980  movz x5, #0x0
0xffff58233518   984  mov x16, lr
0xffff5823351c   988  ldr x17, pc+644 (addr 0x0000ffff582337a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58233520   992  blr x17
0xffff58233524   996  lsl x0, x1, #32
0xffff58233528  1000  movz x10, #0x100000000
0xffff5823352c  1004  sub csp, jssp, #0x10 (16)
0xffff58233530  1008  stp x10, x0, [jssp, #-16]!
0xffff58233534  1012  movz x0, #0x2
0xffff58233538  1016  movz x1, #0x5b88
0xffff5823353c  1020  movk x1, #0xe2, lsl #16
0xffff58233540  1024  ldr x16, pc+616 (addr 0x0000ffff582337a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58233544  1028  blr x16
0xffff58233548  1032  str x0, [jssp, #40]
0xffff5823354c  1036  ldr x16, pc+612 (addr 0x0000ffff582337b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58233550  1040  blr x16
0xffff58233554  1044  ldr lr, [jssp, #16]
0xffff58233558  1048  ldp xzr, fp, [jssp], #24
0xffff5823355c  1052  b #-0x344 (addr 0xffff58233218)
0xffff58233560  1056  sub csp, jssp, #0x10 (16)
0xffff58233564  1060  stp fp, lr, [jssp, #-16]!
0xffff58233568  1064  movz fp, #0xa00000000
0xffff5823356c  1068  sub csp, jssp, #0x8 (8)
0xffff58233570  1072  str fp, [jssp, #-8]!
0xffff58233574  1076  add fp, jssp, #0x8 (8)
0xffff58233578  1080  movz x4, #0x0
0xffff5823357c  1084  mov x16, lr
0xffff58233580  1088  ldr x17, pc+568 (addr 0x0000ffff582337b8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58233584  1092  blr x17
0xffff58233588  1096  movz x0, #0x3000000000
0xffff5823358c  1100  movz x10, #0x0
0xffff58233590  1104  sub csp, jssp, #0x10 (16)
0xffff58233594  1108  stp x10, x0, [jssp, #-16]!
0xffff58233598  1112  movz x0, #0x2
0xffff5823359c  1116  movz x1, #0x5b88
0xffff582335a0  1120  movk x1, #0xe2, lsl #16
0xffff582335a4  1124  ldr x16, pc+540 (addr 0x0000ffff582337c0)    ;; code: STUB, CEntryStub, minor: 5
0xffff582335a8  1128  blr x16
0xffff582335ac  1132  str x0, [jssp, #32]
0xffff582335b0  1136  ldr x16, pc+536 (addr 0x0000ffff582337c8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582335b4  1140  blr x16
0xffff582335b8  1144  ldr lr, [jssp, #16]
0xffff582335bc  1148  ldp xzr, fp, [jssp], #24
0xffff582335c0  1152  b #-0x2f0 (addr 0xffff582332d0)
0xffff582335c4  1156  sub csp, jssp, #0x10 (16)
0xffff582335c8  1160  stp fp, lr, [jssp, #-16]!
0xffff582335cc  1164  movz fp, #0xa00000000
0xffff582335d0  1168  sub csp, jssp, #0x8 (8)
0xffff582335d4  1172  str fp, [jssp, #-8]!
0xffff582335d8  1176  add fp, jssp, #0x8 (8)
0xffff582335dc  1180  movz x5, #0x0
0xffff582335e0  1184  mov x16, lr
0xffff582335e4  1188  ldr x17, pc+492 (addr 0x0000ffff582337d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582335e8  1192  blr x17
0xffff582335ec  1196  lsl x0, x1, #32
0xffff582335f0  1200  movz x10, #0x0
0xffff582335f4  1204  sub csp, jssp, #0x10 (16)
0xffff582335f8  1208  stp x10, x0, [jssp, #-16]!
0xffff582335fc  1212  movz x0, #0x2
0xffff58233600  1216  movz x1, #0x5b88
0xffff58233604  1220  movk x1, #0xe2, lsl #16
0xffff58233608  1224  ldr x16, pc+464 (addr 0x0000ffff582337d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5823360c  1228  blr x16
0xffff58233610  1232  str x0, [jssp, #40]
0xffff58233614  1236  ldr x16, pc+460 (addr 0x0000ffff582337e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58233618  1240  blr x16
0xffff5823361c  1244  ldr lr, [jssp, #16]
0xffff58233620  1248  ldp xzr, fp, [jssp], #24
0xffff58233624  1252  b #-0x2f0 (addr 0xffff58233334)
0xffff58233628  1256  sub csp, jssp, #0x10 (16)
0xffff5823362c  1260  stp fp, lr, [jssp, #-16]!
0xffff58233630  1264  movz fp, #0xa00000000
0xffff58233634  1268  sub csp, jssp, #0x8 (8)
0xffff58233638  1272  str fp, [jssp, #-8]!
0xffff5823363c  1276  add fp, jssp, #0x8 (8)
0xffff58233640  1280  movz x4, #0x0
0xffff58233644  1284  mov x16, lr
0xffff58233648  1288  ldr x17, pc+416 (addr 0x0000ffff582337e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5823364c  1292  blr x17
0xffff58233650  1296  movz x0, #0x3000000000
0xffff58233654  1300  movz x10, #0x0
0xffff58233658  1304  sub csp, jssp, #0x10 (16)
0xffff5823365c  1308  stp x10, x0, [jssp, #-16]!
0xffff58233660  1312  movz x0, #0x2
0xffff58233664  1316  movz x1, #0x5b88
0xffff58233668  1320  movk x1, #0xe2, lsl #16
0xffff5823366c  1324  ldr x16, pc+388 (addr 0x0000ffff582337f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58233670  1328  blr x16
0xffff58233674  1332  str x0, [jssp, #32]
0xffff58233678  1336  ldr x16, pc+384 (addr 0x0000ffff582337f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5823367c  1340  blr x16
0xffff58233680  1344  ldr lr, [jssp, #16]
0xffff58233684  1348  ldp xzr, fp, [jssp], #24
0xffff58233688  1352  b #-0x2a4 (addr 0xffff582333e4)
0xffff5823368c  1356  sub csp, jssp, #0x10 (16)
0xffff58233690  1360  stp fp, lr, [jssp, #-16]!
0xffff58233694  1364  movz fp, #0xa00000000
0xffff58233698  1368  sub csp, jssp, #0x8 (8)
0xffff5823369c  1372  str fp, [jssp, #-8]!
0xffff582336a0  1376  add fp, jssp, #0x8 (8)
0xffff582336a4  1380  movz x3, #0x0
0xffff582336a8  1384  mov x16, lr
0xffff582336ac  1388  ldr x17, pc+340 (addr 0x0000ffff58233800)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582336b0  1392  blr x17
0xffff582336b4  1396  movz x0, #0x3000000000
0xffff582336b8  1400  movz x10, #0x0
0xffff582336bc  1404  sub csp, jssp, #0x10 (16)
0xffff582336c0  1408  stp x10, x0, [jssp, #-16]!
0xffff582336c4  1412  movz x0, #0x2
0xffff582336c8  1416  movz x1, #0x5b88
0xffff582336cc  1420  movk x1, #0xe2, lsl #16
0xffff582336d0  1424  ldr x16, pc+312 (addr 0x0000ffff58233808)    ;; code: STUB, CEntryStub, minor: 5
0xffff582336d4  1428  blr x16
0xffff582336d8  1432  str x0, [jssp, #24]
0xffff582336dc  1436  ldr x16, pc+308 (addr 0x0000ffff58233810)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582336e0  1440  blr x16
0xffff582336e4  1444  ldr lr, [jssp, #16]
0xffff582336e8  1448  ldp xzr, fp, [jssp], #24
0xffff582336ec  1452  b #-0x2a4 (addr 0xffff58233448)
0xffff582336f0  1456  5800093f       constant pool begin (num_const = 73)    ;; constant pool
0xffff582336f4  1460  d63f03e0       constant
0xffff582336f8  1464  fff7ffff       constant
0xffff582336fc  1468  fff7ffff       constant
0xffff58233700  1472  39c04241       constant
0xffff58233704  1476  00000000       constant
0xffff58233708  1480  32b04361       constant
0xffff5823370c  1484  00000000       constant
0xffff58233710  1488  32b04259       constant
0xffff58233714  1492  00000000       constant
0xffff58233718  1496  39c04201       constant
0xffff5823371c  1500  00000000       constant
0xffff58233720  1504  39c04201       constant
0xffff58233724  1508  00000000       constant
0xffff58233728  1512  32b05d81       constant
0xffff5823372c  1516  00000000       constant
0xffff58233730  1520  58232960       constant
0xffff58233734  1524  0000ffff       constant
0xffff58233738  1528  39c04201       constant
0xffff5823373c  1532  00000000       constant
0xffff58233740  1536  39c04201       constant
0xffff58233744  1540  00000000       constant
0xffff58233748  1544  32b05d81       constant
0xffff5823374c  1548  00000000       constant
0xffff58233750  1552  58232960       constant
0xffff58233754  1556  0000ffff       constant
0xffff58233758  1560  39c04519       constant
0xffff5823375c  1564  00000000       constant
0xffff58233760  1568  39c04201       constant
0xffff58233764  1572  00000000       constant
0xffff58233768  1576  32b05d81       constant
0xffff5823376c  1580  00000000       constant
0xffff58233770  1584  39c04201       constant
0xffff58233774  1588  00000000       constant
0xffff58233778  1592  39c04201       constant
0xffff5823377c  1596  00000000       constant
0xffff58233780  1600  32b05d81       constant
0xffff58233784  1604  00000000       constant
0xffff58233788  1608  58206820       constant
0xffff5823378c  1612  0000ffff       constant
0xffff58233790  1616  58206260       constant
0xffff58233794  1620  0000ffff       constant
0xffff58233798  1624  582068e0       constant
0xffff5823379c  1628  0000ffff       constant
0xffff582337a0  1632  58206820       constant
0xffff582337a4  1636  0000ffff       constant
0xffff582337a8  1640  58206260       constant
0xffff582337ac  1644  0000ffff       constant
0xffff582337b0  1648  582068e0       constant
0xffff582337b4  1652  0000ffff       constant
0xffff582337b8  1656  58206820       constant
0xffff582337bc  1660  0000ffff       constant
0xffff582337c0  1664  58206260       constant
0xffff582337c4  1668  0000ffff       constant
0xffff582337c8  1672  582068e0       constant
0xffff582337cc  1676  0000ffff       constant
0xffff582337d0  1680  58206820       constant
0xffff582337d4  1684  0000ffff       constant
0xffff582337d8  1688  58206260       constant
0xffff582337dc  1692  0000ffff       constant
0xffff582337e0  1696  582068e0       constant
0xffff582337e4  1700  0000ffff       constant
0xffff582337e8  1704  58206820       constant
0xffff582337ec  1708  0000ffff       constant
0xffff582337f0  1712  58206260       constant
0xffff582337f4  1716  0000ffff       constant
0xffff582337f8  1720  582068e0       constant
0xffff582337fc  1724  0000ffff       constant
0xffff58233800  1728  58206820       constant
0xffff58233804  1732  0000ffff       constant
0xffff58233808  1736  58206260       constant
0xffff5823380c  1740  0000ffff       constant
0xffff58233810  1744  582068e0       constant
0xffff58233814  1748  0000ffff       constant
0xffff58233818  1752  movz x16, #0x0
0xffff5823381c  1756  sub csp, jssp, #0x10 (16)
0xffff58233820  1760  stp fp, lr, [jssp, #-16]!
0xffff58233824  1764  bl #+0x4 (addr 0xffff58233828)
0xffff58233828  1768  movz x17, #0xa00000000
0xffff5823382c  1772  sub csp, jssp, #0x10 (16)
0xffff58233830  1776  stp x17, cp, [jssp, #-16]!
0xffff58233834  1780  add fp, jssp, #0x10 (16)
0xffff58233838  1784  ldr x17, pc+24 (addr 0x0000ffff58233850)    ;; lazy deoptimization bailout 0
0xffff5823383c  1788  add x17, x17, x16
0xffff58233840  1792  br x17
0xffff58233844  1796  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58233848  1800  d63f03e0       constant
0xffff5823384c  1804  d503201f       constant
0xffff58233850  1808  58006000       constant
0xffff58233854  1812  0000ffff       constant


Safepoints (size = 86)
0xffff582334e4   932  000 | x0 | x4 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff58233548  1032  000 | x0 | x4 | x5 | x27 (sp -> fp)  <none> argc: 2
0xffff582335ac  1132  000 | x0 | x4 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff58233610  1232  000 | x0 | x4 | x5 | x27 (sp -> fp)  <none> argc: 2
0xffff58233674  1332  000 | x0 | x1 | x4 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff582336d8  1432  000 | x0 | x3 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 65)
0xffff58233150  embedded object  (0x39c04241 <undefined>)
0xffff58233170  embedded object  (0x32b04361 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58233180  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582331bc  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582331c4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582331d8  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58233238  code target (STUB)  (0xffff58232960)
0xffff582332d8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582332e0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582332f4  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58233354  code target (STUB)  (0xffff58232960)
0xffff58233394  embedded object  (0x39c04519 <the hole>)
0xffff582333f0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58233408  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58233450  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58233458  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5823346c  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582334b8  code target (STUB)  (0xffff58206820)
0xffff582334dc  code target (STUB)  (0xffff58206260)
0xffff582334e8  code target (STUB)  (0xffff582068e0)
0xffff5823351c  code target (STUB)  (0xffff58206820)
0xffff58233540  code target (STUB)  (0xffff58206260)
0xffff5823354c  code target (STUB)  (0xffff582068e0)
0xffff58233580  code target (STUB)  (0xffff58206820)
0xffff582335a4  code target (STUB)  (0xffff58206260)
0xffff582335b0  code target (STUB)  (0xffff582068e0)
0xffff582335e4  code target (STUB)  (0xffff58206820)
0xffff58233608  code target (STUB)  (0xffff58206260)
0xffff58233614  code target (STUB)  (0xffff582068e0)
0xffff58233648  code target (STUB)  (0xffff58206820)
0xffff5823366c  code target (STUB)  (0xffff58206260)
0xffff58233678  code target (STUB)  (0xffff582068e0)
0xffff582336ac  code target (STUB)  (0xffff58206820)
0xffff582336d0  code target (STUB)  (0xffff58206260)
0xffff582336dc  code target (STUB)  (0xffff582068e0)
0xffff582336f0  constant pool (size 296)
0xffff58233838  runtime entry
0xffff58233844  constant pool (size 20)


kind = KEYED_STORE_IC
major_key = VectorKeyedStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = VectorKeyedStoreICTrampolineStub
compiler = unknown
Instructions (size = 384)
0xffff58233920     0  ldur x3, [fp, #-16]
0xffff58233924     4  ldur x3, [x3, #31]
0xffff58233928     8  ldur x3, [x3, #87]
0xffff5823392c    12  add x5, x3, x4, asr #29
0xffff58233930    16  ldur x5, [x5, #15]
0xffff58233934    20  tbz w1, #0, #+0x140 (addr 0xffff58233a74)
0xffff58233938    24  ldur x6, [x1, #-1]
0xffff5823393c    28  ldur x7, [x5, #7]
0xffff58233940    32  cmp x7, x6
0xffff58233944    36  b.ne #+0x14 (addr 0xffff58233958)
0xffff58233948    40  add x5, x3, x4, asr #29
0xffff5823394c    44  ldur x5, [x5, #23]
0xffff58233950    48  add x5, x5, #0x5f (95)
0xffff58233954    52  br x5
0xffff58233958    56  ldur x7, [x5, #-1]
0xffff5823395c    60  ldr x16, [x26, #224]
0xffff58233960    64  cmp x7, x16
0xffff58233964    68  b.ne #+0x68 (addr 0xffff582339cc)
0xffff58233968    72  ldur x8, [x5, #7]
0xffff5823396c    76  add x8, x5, x8, asr #29
0xffff58233970    80  add x8, x8, #0xf (15)
0xffff58233974    84  add x5, x5, #0xf (15)
0xffff58233978    88  ldr x7, [x5]
0xffff5823397c    92  ldur x7, [x7, #7]
0xffff58233980    96  cmp x6, x7
0xffff58233984   100  b.ne #+0x38 (addr 0xffff582339bc)
0xffff58233988   104  ldr x8, [x5, #8]
0xffff5823398c   108  ldr x16, [x26, #40]
0xffff58233990   112  cmp x8, x16
0xffff58233994   116  b.ne #+0x10 (addr 0xffff582339a4)
0xffff58233998   120  ldr x5, [x5, #16]
0xffff5823399c   124  add x5, x5, #0x5f (95)
0xffff582339a0   128  br x5
0xffff582339a4   132  ldur x8, [x8, #7]
0xffff582339a8   136  tbz w8, #0, #+0xac (addr 0xffff58233a54)
0xffff582339ac   140  ldr x6, [x5, #16]
0xffff582339b0   144  mov x5, x8
0xffff582339b4   148  add x6, x6, #0x5f (95)
0xffff582339b8   152  br x6
0xffff582339bc   156  add x5, x5, #0x18 (24)
0xffff582339c0   160  cmp x5, x8
0xffff582339c4   164  b.lt #-0x4c (addr 0xffff58233978)
0xffff582339c8   168  b #+0x8c (addr 0xffff58233a54)
0xffff582339cc   172  ldr x16, [x26, #2400]
0xffff582339d0   176  cmp x5, x16
0xffff582339d4   180  b.ne #+0xc (addr 0xffff582339e0)
0xffff582339d8   184  ldr x16, pc+176 (addr 0x0000ffff58233a88)    ;; code: KEYED_STORE_IC, MEGAMORPHIC
0xffff582339dc   188  br x16
0xffff582339e0   192  cmp x2, x5
0xffff582339e4   196  b.ne #+0x70 (addr 0xffff58233a54)
0xffff582339e8   200  add x5, x3, x4, asr #29
0xffff582339ec   204  ldur x5, [x5, #23]
0xffff582339f0   208  ldur x7, [x5, #15]
0xffff582339f4   212  ldur x7, [x7, #7]
0xffff582339f8   216  cmp x6, x7
0xffff582339fc   220  b.ne #+0x10 (addr 0xffff58233a0c)
0xffff58233a00   224  ldur x5, [x5, #23]
0xffff58233a04   228  add x5, x5, #0x5f (95)
0xffff58233a08   232  br x5
0xffff58233a0c   236  ldur x8, [x5, #7]
0xffff58233a10   240  movz x16, #0x200000000
0xffff58233a14   244  cmp x8, x16
0xffff58233a18   248  b.eq #+0x3c (addr 0xffff58233a54)
0xffff58233a1c   252  add x8, x5, x8, asr #29
0xffff58233a20   256  add x8, x8, #0xf (15)
0xffff58233a24   260  add x5, x5, #0x1f (31)
0xffff58233a28   264  ldr x7, [x5]
0xffff58233a2c   268  ldur x7, [x7, #7]
0xffff58233a30   272  cmp x6, x7
0xffff58233a34   276  b.ne #+0x10 (addr 0xffff58233a44)
0xffff58233a38   280  ldr x5, [x5, #8]
0xffff58233a3c   284  add x5, x5, #0x5f (95)
0xffff58233a40   288  br x5
0xffff58233a44   292  add x5, x5, #0x10 (16)
0xffff58233a48   296  cmp x5, x8
0xffff58233a4c   300  b.lt #-0x24 (addr 0xffff58233a28)
0xffff58233a50   304  b #+0x4 (addr 0xffff58233a54)
0xffff58233a54   308  sub csp, jssp, #0x28 (40)
0xffff58233a58   312  stp x4, x0, [jssp, #-32]!
0xffff58233a5c   316  stp x2, x1, [jssp, #16]
0xffff58233a60   320  str x3, [jssp, #-8]!
0xffff58233a64   324  movz x0, #0x5
0xffff58233a68   328  ldr x1, pc+40 (addr 0x0000ffff58233a90)    ;; external reference (Runtime::KeyedStoreIC_Miss)
0xffff58233a6c   332  ldr x16, pc+44 (addr 0x0000ffff58233a98)    ;; code: STUB, CEntryStub, minor: 4
0xffff58233a70   336  br x16
0xffff58233a74   340  ldr x6, [x26, #120]
0xffff58233a78   344  b #-0x13c (addr 0xffff5823393c)
0xffff58233a7c   348  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58233a80   352  d63f03e0       constant
0xffff58233a84   356  d503201f       constant
0xffff58233a88   360  58225500       constant
0xffff58233a8c   364  0000ffff       constant
0xffff58233a90   368  00c88e08       constant
0xffff58233a94   372  00000000       constant
0xffff58233a98   376  58206060       constant
0xffff58233a9c   380  0000ffff       constant


RelocInfo (size = 14)
0xffff582339d8  code target (KEYED_STORE_IC)  (0xffff58225500)
0xffff58233a68  external reference (Runtime::KeyedStoreIC_Miss)  (0xc88e08)
0xffff58233a6c  code target (STUB)  (0xffff58206060)
0xffff58233a7c  constant pool (size 36)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_More_Than_One
compiler = unknown
Instructions (size = 288)
0xffff58233b00     0  ldur cp, [x1, #39]
0xffff58233b04     4  cmp x3, x1
0xffff58233b08     8  b.ne #+0x98 (addr 0xffff58233ba0)
0xffff58233b0c    12  ldr x16, [x26, #40]
0xffff58233b10    16  cmp x2, x16
0xffff58233b14    20  b.eq #+0x84 (addr 0xffff58233b98)
0xffff58233b18    24  ldursw x3, [x2, #11]
0xffff58233b1c    28  and x3, x3, #0x7fff
0xffff58233b20    32  cbnz x3, #+0xc (addr 0xffff58233b2c)
0xffff58233b24    36  ldr x16, pc+164 (addr 0x0000ffff58233bc8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 0
0xffff58233b28    40  br x16
0xffff58233b2c    44  cmp x3, #0x1 (1)
0xffff58233b30    48  b.ne #+0xc (addr 0xffff58233b3c)
0xffff58233b34    52  ldr x16, pc+156 (addr 0x0000ffff58233bd0)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 1
0xffff58233b38    56  br x16
0xffff58233b3c    60  cmp x3, #0x4 (4)
0xffff58233b40    64  b.ne #+0xc (addr 0xffff58233b4c)
0xffff58233b44    68  ldr x16, pc+148 (addr 0x0000ffff58233bd8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 4
0xffff58233b48    72  br x16
0xffff58233b4c    76  cmp x3, #0x5 (5)
0xffff58233b50    80  b.ne #+0xc (addr 0xffff58233b5c)
0xffff58233b54    84  ldr x16, pc+140 (addr 0x0000ffff58233be0)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 5
0xffff58233b58    88  br x16
0xffff58233b5c    92  cmp x3, #0x2 (2)
0xffff58233b60    96  b.ne #+0xc (addr 0xffff58233b6c)
0xffff58233b64   100  ldr x16, pc+132 (addr 0x0000ffff58233be8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 2
0xffff58233b68   104  br x16
0xffff58233b6c   108  cmp x3, #0x3 (3)
0xffff58233b70   112  b.ne #+0xc (addr 0xffff58233b7c)
0xffff58233b74   116  ldr x16, pc+124 (addr 0x0000ffff58233bf0)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 3
0xffff58233b78   120  br x16
0xffff58233b7c   124  movz x0, #0x9f00000000
0xffff58233b80   128  sub csp, jssp, #0x8 (8)
0xffff58233b84   132  str x0, [jssp, #-8]!
0xffff58233b88   136  movz x0, #0x1
0xffff58233b8c   140  ldr x1, pc+108 (addr 0x0000ffff58233bf8)    ;; external reference (Runtime::Abort)
0xffff58233b90   144  ldr x16, pc+112 (addr 0x0000ffff58233c00)    ;; code: STUB, CEntryStub, minor: 4
0xffff58233b94   148  blr x16
0xffff58233b98   152  ldr x16, pc+112 (addr 0x0000ffff58233c08)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 256
0xffff58233b9c   156  br x16
0xffff58233ba0   160  str x1, [jssp, x0, lsl #3]
0xffff58233ba4   164  add x0, x0, #0x3 (3)
0xffff58233ba8   168  sub csp, jssp, #0x10 (16)
0xffff58233bac   172  stp x2, x3, [jssp, #-16]!
0xffff58233bb0   176  ldr x1, pc+96 (addr 0x0000ffff58233c10)    ;; external reference (Runtime::NewArray)
0xffff58233bb4   180  ldr x16, pc+100 (addr 0x0000ffff58233c18)    ;; code: STUB, CEntryStub, minor: 4
0xffff58233bb8   184  br x16
0xffff58233bbc   188  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff58233bc0   192  d63f03e0       constant
0xffff58233bc4   196  d503201f       constant
0xffff58233bc8   200  58209fe0       constant
0xffff58233bcc   204  0000ffff       constant
0xffff58233bd0   208  5820a560       constant
0xffff58233bd4   212  0000ffff       constant
0xffff58233bd8   216  5820aae0       constant
0xffff58233bdc   220  0000ffff       constant
0xffff58233be0   224  5820ad40       constant
0xffff58233be4   228  0000ffff       constant
0xffff58233be8   232  5820afa0       constant
0xffff58233bec   236  0000ffff       constant
0xffff58233bf0   240  5820b1e0       constant
0xffff58233bf4   244  0000ffff       constant
0xffff58233bf8   248  00eda820       constant
0xffff58233bfc   252  00000000       constant
0xffff58233c00   256  58206060       constant
0xffff58233c04   260  0000ffff       constant
0xffff58233c08   264  5820a300       constant
0xffff58233c0c   268  0000ffff       constant
0xffff58233c10   272  00de2850       constant
0xffff58233c14   276  00000000       constant
0xffff58233c18   280  58206060       constant
0xffff58233c1c   284  0000ffff       constant


RelocInfo (size = 19)
0xffff58233b24  code target (STUB)  (0xffff58209fe0)
0xffff58233b34  code target (STUB)  (0xffff5820a560)
0xffff58233b44  code target (STUB)  (0xffff5820aae0)
0xffff58233b54  code target (STUB)  (0xffff5820ad40)
0xffff58233b64  code target (STUB)  (0xffff5820afa0)
0xffff58233b74  code target (STUB)  (0xffff5820b1e0)
0xffff58233b8c  external reference (Runtime::Abort)  (0xeda820)
0xffff58233b90  code target (STUB)  (0xffff58206060)
0xffff58233b98  code target (STUB)  (0xffff5820a300)
0xffff58233bb0  external reference (Runtime::NewArray)  (0xde2850)
0xffff58233bb4  code target (STUB)  (0xffff58206060)
0xffff58233bbc  constant pool (size 100)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327682
name = CallICStub(args(2), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff58233c80     0  add x4, x2, x3, asr #29
0xffff58233c84     4  ldur x4, [x4, #15]
0xffff58233c88     8  ldur x5, [x4, #7]
0xffff58233c8c    12  cmp x5, x1
0xffff58233c90    16  b.ne #+0x2c (addr 0xffff58233cbc)
0xffff58233c94    20  tbz w1, #0, #+0x28 (addr 0xffff58233cbc)
0xffff58233c98    24  add x2, x2, x3, asr #29
0xffff58233c9c    28  add x2, x2, #0x18 (24)
0xffff58233ca0    32  ldur x3, [x2, #-1]
0xffff58233ca4    36  movz x16, #0x200000000
0xffff58233ca8    40  add x3, x3, x16
0xffff58233cac    44  stur x3, [x2, #-1]
0xffff58233cb0    48  movz x0, #0x2
0xffff58233cb4    52  ldr x16, pc+372 (addr 0x0000ffff58233e28)    ;; code: BUILTIN
0xffff58233cb8    56  br x16
0xffff58233cbc    60  ldr x16, [x26, #2400]
0xffff58233cc0    64  cmp x4, x16
0xffff58233cc4    68  b.eq #+0x78 (addr 0xffff58233d3c)
0xffff58233cc8    72  ldur x5, [x4, #-1]
0xffff58233ccc    76  ldr x16, [x26, #2736]
0xffff58233cd0    80  cmp x5, x16
0xffff58233cd4    84  b.ne #+0x40 (addr 0xffff58233d14)
0xffff58233cd8    88  ldur x5, [cp, #39]
0xffff58233cdc    92  ldur x5, [x5, #95]
0xffff58233ce0    96  cmp x1, x5
0xffff58233ce4   100  b.ne #+0xec (addr 0xffff58233dd0)
0xffff58233ce8   104  movz x0, #0x2
0xffff58233cec   108  add x2, x2, x3, asr #29
0xffff58233cf0   112  add x2, x2, #0x18 (24)
0xffff58233cf4   116  ldur x3, [x2, #-1]
0xffff58233cf8   120  movz x16, #0x200000000
0xffff58233cfc   124  add x3, x3, x16
0xffff58233d00   128  stur x3, [x2, #-1]
0xffff58233d04   132  mov x2, x4
0xffff58233d08   136  mov x3, x1
0xffff58233d0c   140  ldr x16, pc+292 (addr 0x0000ffff58233e30)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff58233d10   144  br x16
0xffff58233d14   148  ldr x16, [x26, #2568]
0xffff58233d18   152  cmp x4, x16
0xffff58233d1c   156  b.eq #+0xb4 (addr 0xffff58233dd0)
0xffff58233d20   160  ldur x5, [x4, #-1]
0xffff58233d24   164  ldrb w5, [x5, #11]
0xffff58233d28   168  cmp x5, #0xc9 (201)
0xffff58233d2c   172  b.ne #+0xa4 (addr 0xffff58233dd0)
0xffff58233d30   176  add x4, x2, x3, asr #29
0xffff58233d34   180  ldr x5, [x26, #2400]
0xffff58233d38   184  stur x5, [x4, #15]
0xffff58233d3c   188  movz x0, #0x2
0xffff58233d40   192  ldr x16, pc+248 (addr 0x0000ffff58233e38)    ;; code: BUILTIN
0xffff58233d44   196  br x16
0xffff58233d48   200  tbz w1, #0, #+0x88 (addr 0xffff58233dd0)
0xffff58233d4c   204  ldur x5, [x1, #-1]
0xffff58233d50   208  ldrb w5, [x5, #11]
0xffff58233d54   212  cmp x5, #0xc9 (201)
0xffff58233d58   216  b.ne #+0x78 (addr 0xffff58233dd0)
0xffff58233d5c   220  ldur x5, [cp, #39]
0xffff58233d60   224  ldur x5, [x5, #95]
0xffff58233d64   228  cmp x1, x5
0xffff58233d68   232  b.eq #+0x68 (addr 0xffff58233dd0)
0xffff58233d6c   236  ldur x4, [x1, #39]
0xffff58233d70   240  ldur x4, [x4, #39]
0xffff58233d74   244  ldur x5, [cp, #39]
0xffff58233d78   248  cmp x4, x5
0xffff58233d7c   252  b.ne #+0x54 (addr 0xffff58233dd0)
0xffff58233d80   256  movz x5, #0x200000000
0xffff58233d84   260  adds x4, x2, x3, asr #29
0xffff58233d88   264  stur x5, [x4, #23]
0xffff58233d8c   268  movz x16, #0xc00000000
0xffff58233d90   272  sub csp, jssp, #0x10 (16)
0xffff58233d94   276  stp fp, lr, [jssp, #-16]!
0xffff58233d98   280  sub csp, jssp, #0x10 (16)
0xffff58233d9c   284  str x16, [jssp, #-8]!
0xffff58233da0   288  ldr x17, pc+160 (addr 0x0000ffff58233e40)    ;; object: 0xffff58233c21 <Code: CALL_IC>
0xffff58233da4   292  sub csp, jssp, #0x10 (16)
0xffff58233da8   296  str x17, [jssp, #-8]!
0xffff58233dac   300  add fp, jssp, #0x10 (16)
0xffff58233db0   304  sub csp, jssp, #0x8 (8)
0xffff58233db4   308  str x1, [jssp, #-8]!
0xffff58233db8   312  ldr x16, pc+144 (addr 0x0000ffff58233e48)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff58233dbc   316  blr x16
0xffff58233dc0   320  ldr x1, [jssp], #8
0xffff58233dc4   324  mov jssp, fp
0xffff58233dc8   328  ldp fp, lr, [jssp], #16
0xffff58233dcc   332  b #-0x11c (addr 0xffff58233cb0)
0xffff58233dd0   336  movz x16, #0xc00000000
0xffff58233dd4   340  sub csp, jssp, #0x10 (16)
0xffff58233dd8   344  stp fp, lr, [jssp, #-16]!
0xffff58233ddc   348  sub csp, jssp, #0x10 (16)
0xffff58233de0   352  str x16, [jssp, #-8]!
0xffff58233de4   356  ldr x17, pc+108 (addr 0x0000ffff58233e50)    ;; object: 0xffff58233c21 <Code: CALL_IC>
0xffff58233de8   360  sub csp, jssp, #0x10 (16)
0xffff58233dec   364  str x17, [jssp, #-8]!
0xffff58233df0   368  add fp, jssp, #0x10 (16)
0xffff58233df4   372  sub csp, jssp, #0x18 (24)
0xffff58233df8   376  stp x3, x2, [jssp, #-24]!
0xffff58233dfc   380  str x1, [jssp, #16]
0xffff58233e00   384  movz x0, #0x3
0xffff58233e04   388  ldr x1, pc+84 (addr 0x0000ffff58233e58)    ;; external reference (Runtime::CallIC_Miss)
0xffff58233e08   392  ldr x16, pc+88 (addr 0x0000ffff58233e60)    ;; code: STUB, CEntryStub, minor: 4
0xffff58233e0c   396  blr x16
0xffff58233e10   400  mov x1, x0
0xffff58233e14   404  mov jssp, fp
0xffff58233e18   408  ldp fp, lr, [jssp], #16
0xffff58233e1c   412  b #-0xe0 (addr 0xffff58233d3c)
0xffff58233e20   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff58233e24   420  d63f03e0       constant
0xffff58233e28   424  5821e600       constant
0xffff58233e2c   428  0000ffff       constant
0xffff58233e30   432  58233b00       constant
0xffff58233e34   436  0000ffff       constant
0xffff58233e38   440  5821f6c0       constant
0xffff58233e3c   444  0000ffff       constant
0xffff58233e40   448  58233c21       constant
0xffff58233e44   452  0000ffff       constant
0xffff58233e48   456  5820ddc0       constant
0xffff58233e4c   460  0000ffff       constant
0xffff58233e50   464  58233c21       constant
0xffff58233e54   468  0000ffff       constant
0xffff58233e58   472  00c86928       constant
0xffff58233e5c   476  00000000       constant
0xffff58233e60   480  58206060       constant
0xffff58233e64   484  0000ffff       constant


RelocInfo (size = 19)
0xffff58233cb4  code target (BUILTIN)  (0xffff5821e600)
0xffff58233d0c  code target (STUB)  (0xffff58233b00)
0xffff58233d40  code target (BUILTIN)  (0xffff5821f6c0)
0xffff58233da0  embedded object  (0xffff58233c21 <Code: CALL_IC>)
0xffff58233db8  code target (STUB)  (0xffff5820ddc0)
0xffff58233de4  embedded object  (0xffff58233c21 <Code: CALL_IC>)
0xffff58233e04  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58233e08  code target (STUB)  (0xffff58206060)
0xffff58233e20  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327682
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff58233ee0     0  ldur x2, [fp, #-16]
0xffff58233ee4     4  ldur x2, [x2, #31]
0xffff58233ee8     8  ldur x2, [x2, #87]
0xffff58233eec    12  ldr x16, pc+20 (addr 0x0000ffff58233f00)    ;; code: CALL_IC, GENERIC
0xffff58233ef0    16  br x16
0xffff58233ef4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58233ef8    24  d63f03e0       constant
0xffff58233efc    28  d503201f       constant
0xffff58233f00    32  58233c80       constant
0xffff58233f04    36  0000ffff       constant


RelocInfo (size = 7)
0xffff58233eec  code target (CALL_IC)  (0xffff58233c80)
0xffff58233ef4  constant pool (size 20)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327683
name = CallICStub(args(3), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff58233f80     0  add x4, x2, x3, asr #29
0xffff58233f84     4  ldur x4, [x4, #15]
0xffff58233f88     8  ldur x5, [x4, #7]
0xffff58233f8c    12  cmp x5, x1
0xffff58233f90    16  b.ne #+0x2c (addr 0xffff58233fbc)
0xffff58233f94    20  tbz w1, #0, #+0x28 (addr 0xffff58233fbc)
0xffff58233f98    24  add x2, x2, x3, asr #29
0xffff58233f9c    28  add x2, x2, #0x18 (24)
0xffff58233fa0    32  ldur x3, [x2, #-1]
0xffff58233fa4    36  movz x16, #0x200000000
0xffff58233fa8    40  add x3, x3, x16
0xffff58233fac    44  stur x3, [x2, #-1]
0xffff58233fb0    48  movz x0, #0x3
0xffff58233fb4    52  ldr x16, pc+372 (addr 0x0000ffff58234128)    ;; code: BUILTIN
0xffff58233fb8    56  br x16
0xffff58233fbc    60  ldr x16, [x26, #2400]
0xffff58233fc0    64  cmp x4, x16
0xffff58233fc4    68  b.eq #+0x78 (addr 0xffff5823403c)
0xffff58233fc8    72  ldur x5, [x4, #-1]
0xffff58233fcc    76  ldr x16, [x26, #2736]
0xffff58233fd0    80  cmp x5, x16
0xffff58233fd4    84  b.ne #+0x40 (addr 0xffff58234014)
0xffff58233fd8    88  ldur x5, [cp, #39]
0xffff58233fdc    92  ldur x5, [x5, #95]
0xffff58233fe0    96  cmp x1, x5
0xffff58233fe4   100  b.ne #+0xec (addr 0xffff582340d0)
0xffff58233fe8   104  movz x0, #0x3
0xffff58233fec   108  add x2, x2, x3, asr #29
0xffff58233ff0   112  add x2, x2, #0x18 (24)
0xffff58233ff4   116  ldur x3, [x2, #-1]
0xffff58233ff8   120  movz x16, #0x200000000
0xffff58233ffc   124  add x3, x3, x16
0xffff58234000   128  stur x3, [x2, #-1]
0xffff58234004   132  mov x2, x4
0xffff58234008   136  mov x3, x1
0xffff5823400c   140  ldr x16, pc+292 (addr 0x0000ffff58234130)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff58234010   144  br x16
0xffff58234014   148  ldr x16, [x26, #2568]
0xffff58234018   152  cmp x4, x16
0xffff5823401c   156  b.eq #+0xb4 (addr 0xffff582340d0)
0xffff58234020   160  ldur x5, [x4, #-1]
0xffff58234024   164  ldrb w5, [x5, #11]
0xffff58234028   168  cmp x5, #0xc9 (201)
0xffff5823402c   172  b.ne #+0xa4 (addr 0xffff582340d0)
0xffff58234030   176  add x4, x2, x3, asr #29
0xffff58234034   180  ldr x5, [x26, #2400]
0xffff58234038   184  stur x5, [x4, #15]
0xffff5823403c   188  movz x0, #0x3
0xffff58234040   192  ldr x16, pc+248 (addr 0x0000ffff58234138)    ;; code: BUILTIN
0xffff58234044   196  br x16
0xffff58234048   200  tbz w1, #0, #+0x88 (addr 0xffff582340d0)
0xffff5823404c   204  ldur x5, [x1, #-1]
0xffff58234050   208  ldrb w5, [x5, #11]
0xffff58234054   212  cmp x5, #0xc9 (201)
0xffff58234058   216  b.ne #+0x78 (addr 0xffff582340d0)
0xffff5823405c   220  ldur x5, [cp, #39]
0xffff58234060   224  ldur x5, [x5, #95]
0xffff58234064   228  cmp x1, x5
0xffff58234068   232  b.eq #+0x68 (addr 0xffff582340d0)
0xffff5823406c   236  ldur x4, [x1, #39]
0xffff58234070   240  ldur x4, [x4, #39]
0xffff58234074   244  ldur x5, [cp, #39]
0xffff58234078   248  cmp x4, x5
0xffff5823407c   252  b.ne #+0x54 (addr 0xffff582340d0)
0xffff58234080   256  movz x5, #0x200000000
0xffff58234084   260  adds x4, x2, x3, asr #29
0xffff58234088   264  stur x5, [x4, #23]
0xffff5823408c   268  movz x16, #0xc00000000
0xffff58234090   272  sub csp, jssp, #0x10 (16)
0xffff58234094   276  stp fp, lr, [jssp, #-16]!
0xffff58234098   280  sub csp, jssp, #0x10 (16)
0xffff5823409c   284  str x16, [jssp, #-8]!
0xffff582340a0   288  ldr x17, pc+160 (addr 0x0000ffff58234140)    ;; object: 0xffff58233f21 <Code: CALL_IC>
0xffff582340a4   292  sub csp, jssp, #0x10 (16)
0xffff582340a8   296  str x17, [jssp, #-8]!
0xffff582340ac   300  add fp, jssp, #0x10 (16)
0xffff582340b0   304  sub csp, jssp, #0x8 (8)
0xffff582340b4   308  str x1, [jssp, #-8]!
0xffff582340b8   312  ldr x16, pc+144 (addr 0x0000ffff58234148)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff582340bc   316  blr x16
0xffff582340c0   320  ldr x1, [jssp], #8
0xffff582340c4   324  mov jssp, fp
0xffff582340c8   328  ldp fp, lr, [jssp], #16
0xffff582340cc   332  b #-0x11c (addr 0xffff58233fb0)
0xffff582340d0   336  movz x16, #0xc00000000
0xffff582340d4   340  sub csp, jssp, #0x10 (16)
0xffff582340d8   344  stp fp, lr, [jssp, #-16]!
0xffff582340dc   348  sub csp, jssp, #0x10 (16)
0xffff582340e0   352  str x16, [jssp, #-8]!
0xffff582340e4   356  ldr x17, pc+108 (addr 0x0000ffff58234150)    ;; object: 0xffff58233f21 <Code: CALL_IC>
0xffff582340e8   360  sub csp, jssp, #0x10 (16)
0xffff582340ec   364  str x17, [jssp, #-8]!
0xffff582340f0   368  add fp, jssp, #0x10 (16)
0xffff582340f4   372  sub csp, jssp, #0x18 (24)
0xffff582340f8   376  stp x3, x2, [jssp, #-24]!
0xffff582340fc   380  str x1, [jssp, #16]
0xffff58234100   384  movz x0, #0x3
0xffff58234104   388  ldr x1, pc+84 (addr 0x0000ffff58234158)    ;; external reference (Runtime::CallIC_Miss)
0xffff58234108   392  ldr x16, pc+88 (addr 0x0000ffff58234160)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823410c   396  blr x16
0xffff58234110   400  mov x1, x0
0xffff58234114   404  mov jssp, fp
0xffff58234118   408  ldp fp, lr, [jssp], #16
0xffff5823411c   412  b #-0xe0 (addr 0xffff5823403c)
0xffff58234120   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff58234124   420  d63f03e0       constant
0xffff58234128   424  5821e600       constant
0xffff5823412c   428  0000ffff       constant
0xffff58234130   432  58233b00       constant
0xffff58234134   436  0000ffff       constant
0xffff58234138   440  5821f6c0       constant
0xffff5823413c   444  0000ffff       constant
0xffff58234140   448  58233f21       constant
0xffff58234144   452  0000ffff       constant
0xffff58234148   456  5820ddc0       constant
0xffff5823414c   460  0000ffff       constant
0xffff58234150   464  58233f21       constant
0xffff58234154   468  0000ffff       constant
0xffff58234158   472  00c86928       constant
0xffff5823415c   476  00000000       constant
0xffff58234160   480  58206060       constant
0xffff58234164   484  0000ffff       constant


RelocInfo (size = 19)
0xffff58233fb4  code target (BUILTIN)  (0xffff5821e600)
0xffff5823400c  code target (STUB)  (0xffff58233b00)
0xffff58234040  code target (BUILTIN)  (0xffff5821f6c0)
0xffff582340a0  embedded object  (0xffff58233f21 <Code: CALL_IC>)
0xffff582340b8  code target (STUB)  (0xffff5820ddc0)
0xffff582340e4  embedded object  (0xffff58233f21 <Code: CALL_IC>)
0xffff58234104  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58234108  code target (STUB)  (0xffff58206060)
0xffff58234120  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327683
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff582341e0     0  ldur x2, [fp, #-16]
0xffff582341e4     4  ldur x2, [x2, #31]
0xffff582341e8     8  ldur x2, [x2, #87]
0xffff582341ec    12  ldr x16, pc+20 (addr 0x0000ffff58234200)    ;; code: CALL_IC, GENERIC
0xffff582341f0    16  br x16
0xffff582341f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582341f8    24  d63f03e0       constant
0xffff582341fc    28  d503201f       constant
0xffff58234200    32  58233f80       constant
0xffff58234204    36  0000ffff       constant


RelocInfo (size = 7)
0xffff582341ec  code target (CALL_IC)  (0xffff58233f80)
0xffff582341f4  constant pool (size 20)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327684
name = CallICStub(args(4), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff58234280     0  add x4, x2, x3, asr #29
0xffff58234284     4  ldur x4, [x4, #15]
0xffff58234288     8  ldur x5, [x4, #7]
0xffff5823428c    12  cmp x5, x1
0xffff58234290    16  b.ne #+0x2c (addr 0xffff582342bc)
0xffff58234294    20  tbz w1, #0, #+0x28 (addr 0xffff582342bc)
0xffff58234298    24  add x2, x2, x3, asr #29
0xffff5823429c    28  add x2, x2, #0x18 (24)
0xffff582342a0    32  ldur x3, [x2, #-1]
0xffff582342a4    36  movz x16, #0x200000000
0xffff582342a8    40  add x3, x3, x16
0xffff582342ac    44  stur x3, [x2, #-1]
0xffff582342b0    48  movz x0, #0x4
0xffff582342b4    52  ldr x16, pc+372 (addr 0x0000ffff58234428)    ;; code: BUILTIN
0xffff582342b8    56  br x16
0xffff582342bc    60  ldr x16, [x26, #2400]
0xffff582342c0    64  cmp x4, x16
0xffff582342c4    68  b.eq #+0x78 (addr 0xffff5823433c)
0xffff582342c8    72  ldur x5, [x4, #-1]
0xffff582342cc    76  ldr x16, [x26, #2736]
0xffff582342d0    80  cmp x5, x16
0xffff582342d4    84  b.ne #+0x40 (addr 0xffff58234314)
0xffff582342d8    88  ldur x5, [cp, #39]
0xffff582342dc    92  ldur x5, [x5, #95]
0xffff582342e0    96  cmp x1, x5
0xffff582342e4   100  b.ne #+0xec (addr 0xffff582343d0)
0xffff582342e8   104  movz x0, #0x4
0xffff582342ec   108  add x2, x2, x3, asr #29
0xffff582342f0   112  add x2, x2, #0x18 (24)
0xffff582342f4   116  ldur x3, [x2, #-1]
0xffff582342f8   120  movz x16, #0x200000000
0xffff582342fc   124  add x3, x3, x16
0xffff58234300   128  stur x3, [x2, #-1]
0xffff58234304   132  mov x2, x4
0xffff58234308   136  mov x3, x1
0xffff5823430c   140  ldr x16, pc+292 (addr 0x0000ffff58234430)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff58234310   144  br x16
0xffff58234314   148  ldr x16, [x26, #2568]
0xffff58234318   152  cmp x4, x16
0xffff5823431c   156  b.eq #+0xb4 (addr 0xffff582343d0)
0xffff58234320   160  ldur x5, [x4, #-1]
0xffff58234324   164  ldrb w5, [x5, #11]
0xffff58234328   168  cmp x5, #0xc9 (201)
0xffff5823432c   172  b.ne #+0xa4 (addr 0xffff582343d0)
0xffff58234330   176  add x4, x2, x3, asr #29
0xffff58234334   180  ldr x5, [x26, #2400]
0xffff58234338   184  stur x5, [x4, #15]
0xffff5823433c   188  movz x0, #0x4
0xffff58234340   192  ldr x16, pc+248 (addr 0x0000ffff58234438)    ;; code: BUILTIN
0xffff58234344   196  br x16
0xffff58234348   200  tbz w1, #0, #+0x88 (addr 0xffff582343d0)
0xffff5823434c   204  ldur x5, [x1, #-1]
0xffff58234350   208  ldrb w5, [x5, #11]
0xffff58234354   212  cmp x5, #0xc9 (201)
0xffff58234358   216  b.ne #+0x78 (addr 0xffff582343d0)
0xffff5823435c   220  ldur x5, [cp, #39]
0xffff58234360   224  ldur x5, [x5, #95]
0xffff58234364   228  cmp x1, x5
0xffff58234368   232  b.eq #+0x68 (addr 0xffff582343d0)
0xffff5823436c   236  ldur x4, [x1, #39]
0xffff58234370   240  ldur x4, [x4, #39]
0xffff58234374   244  ldur x5, [cp, #39]
0xffff58234378   248  cmp x4, x5
0xffff5823437c   252  b.ne #+0x54 (addr 0xffff582343d0)
0xffff58234380   256  movz x5, #0x200000000
0xffff58234384   260  adds x4, x2, x3, asr #29
0xffff58234388   264  stur x5, [x4, #23]
0xffff5823438c   268  movz x16, #0xc00000000
0xffff58234390   272  sub csp, jssp, #0x10 (16)
0xffff58234394   276  stp fp, lr, [jssp, #-16]!
0xffff58234398   280  sub csp, jssp, #0x10 (16)
0xffff5823439c   284  str x16, [jssp, #-8]!
0xffff582343a0   288  ldr x17, pc+160 (addr 0x0000ffff58234440)    ;; object: 0xffff58234221 <Code: CALL_IC>
0xffff582343a4   292  sub csp, jssp, #0x10 (16)
0xffff582343a8   296  str x17, [jssp, #-8]!
0xffff582343ac   300  add fp, jssp, #0x10 (16)
0xffff582343b0   304  sub csp, jssp, #0x8 (8)
0xffff582343b4   308  str x1, [jssp, #-8]!
0xffff582343b8   312  ldr x16, pc+144 (addr 0x0000ffff58234448)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff582343bc   316  blr x16
0xffff582343c0   320  ldr x1, [jssp], #8
0xffff582343c4   324  mov jssp, fp
0xffff582343c8   328  ldp fp, lr, [jssp], #16
0xffff582343cc   332  b #-0x11c (addr 0xffff582342b0)
0xffff582343d0   336  movz x16, #0xc00000000
0xffff582343d4   340  sub csp, jssp, #0x10 (16)
0xffff582343d8   344  stp fp, lr, [jssp, #-16]!
0xffff582343dc   348  sub csp, jssp, #0x10 (16)
0xffff582343e0   352  str x16, [jssp, #-8]!
0xffff582343e4   356  ldr x17, pc+108 (addr 0x0000ffff58234450)    ;; object: 0xffff58234221 <Code: CALL_IC>
0xffff582343e8   360  sub csp, jssp, #0x10 (16)
0xffff582343ec   364  str x17, [jssp, #-8]!
0xffff582343f0   368  add fp, jssp, #0x10 (16)
0xffff582343f4   372  sub csp, jssp, #0x18 (24)
0xffff582343f8   376  stp x3, x2, [jssp, #-24]!
0xffff582343fc   380  str x1, [jssp, #16]
0xffff58234400   384  movz x0, #0x3
0xffff58234404   388  ldr x1, pc+84 (addr 0x0000ffff58234458)    ;; external reference (Runtime::CallIC_Miss)
0xffff58234408   392  ldr x16, pc+88 (addr 0x0000ffff58234460)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823440c   396  blr x16
0xffff58234410   400  mov x1, x0
0xffff58234414   404  mov jssp, fp
0xffff58234418   408  ldp fp, lr, [jssp], #16
0xffff5823441c   412  b #-0xe0 (addr 0xffff5823433c)
0xffff58234420   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff58234424   420  d63f03e0       constant
0xffff58234428   424  5821e600       constant
0xffff5823442c   428  0000ffff       constant
0xffff58234430   432  58233b00       constant
0xffff58234434   436  0000ffff       constant
0xffff58234438   440  5821f6c0       constant
0xffff5823443c   444  0000ffff       constant
0xffff58234440   448  58234221       constant
0xffff58234444   452  0000ffff       constant
0xffff58234448   456  5820ddc0       constant
0xffff5823444c   460  0000ffff       constant
0xffff58234450   464  58234221       constant
0xffff58234454   468  0000ffff       constant
0xffff58234458   472  00c86928       constant
0xffff5823445c   476  00000000       constant
0xffff58234460   480  58206060       constant
0xffff58234464   484  0000ffff       constant


RelocInfo (size = 19)
0xffff582342b4  code target (BUILTIN)  (0xffff5821e600)
0xffff5823430c  code target (STUB)  (0xffff58233b00)
0xffff58234340  code target (BUILTIN)  (0xffff5821f6c0)
0xffff582343a0  embedded object  (0xffff58234221 <Code: CALL_IC>)
0xffff582343b8  code target (STUB)  (0xffff5820ddc0)
0xffff582343e4  embedded object  (0xffff58234221 <Code: CALL_IC>)
0xffff58234404  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58234408  code target (STUB)  (0xffff58206060)
0xffff58234420  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327684
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff582344e0     0  ldur x2, [fp, #-16]
0xffff582344e4     4  ldur x2, [x2, #31]
0xffff582344e8     8  ldur x2, [x2, #87]
0xffff582344ec    12  ldr x16, pc+20 (addr 0x0000ffff58234500)    ;; code: CALL_IC, GENERIC
0xffff582344f0    16  br x16
0xffff582344f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582344f8    24  d63f03e0       constant
0xffff582344fc    28  d503201f       constant
0xffff58234500    32  58234280       constant
0xffff58234504    36  0000ffff       constant


RelocInfo (size = 7)
0xffff582344ec  code target (CALL_IC)  (0xffff58234280)
0xffff582344f4  constant pool (size 20)


kind = STUB
major_key = MathPowStub
name = MathPowStub
compiler = unknown
Instructions (size = 344)
0xffff58234580     0  ldp x11, x10, [jssp], #16
0xffff58234584     4  tbz w10, #0, #+0x1c (addr 0xffff582345a0)
0xffff58234588     8  ldur x16, [x10, #-1]
0xffff5823458c    12  ldr x17, [x26, #120]
0xffff58234590    16  cmp x16, x17
0xffff58234594    20  b.ne #+0xd8 (addr 0xffff5823466c)
0xffff58234598    24  ldur d0, [x10, #7]
0xffff5823459c    28  b #+0x8 (addr 0xffff582345a4)
0xffff582345a0    32  scvtf d0, x10, #32
0xffff582345a4    36  tbz w11, #0, #+0x80 (addr 0xffff58234624)
0xffff582345a8    40  ldur x16, [x11, #-1]
0xffff582345ac    44  ldr x17, [x26, #120]
0xffff582345b0    48  cmp x16, x17
0xffff582345b4    52  b.ne #+0xb8 (addr 0xffff5823466c)
0xffff582345b8    56  ldur d1, [x11, #7]
0xffff582345bc    60  fcvtzs x12, d1
0xffff582345c0    64  scvtf d7, x12
0xffff582345c4    68  fcmp d1, d7
0xffff582345c8    72  b.eq #+0x60 (addr 0xffff58234628)
0xffff582345cc    76  fmov d4, #0xe0 (-0.5000)
0xffff582345d0    80  fmov d3, #0x60 (0.5000)
0xffff582345d4    84  fcmp d4, d1
0xffff582345d8    88  fccmp d3, d1, #NZcv, ne
0xffff582345dc    92  b.ne #+0x90 (addr 0xffff5823466c)
0xffff582345e0    96  fadd d0, d0, d15
0xffff582345e4   100  fsub d7, d0, d0
0xffff582345e8   104  fcmp d7, #0.0
0xffff582345ec   108  fabs d6, d0
0xffff582345f0   112  fcsel d0, d6, d0, vs
0xffff582345f4   116  fsqrt d0, d0
0xffff582345f8   120  fcmp d1, #0.0
0xffff582345fc   124  b.ge #+0x88 (addr 0xffff58234684)
0xffff58234600   128  fmov d7, #0x70 (1.0000)
0xffff58234604   132  fdiv d0, d7, d0
0xffff58234608   136  b #+0x7c (addr 0xffff58234684)
0xffff5823460c   140  mov x19, lr
0xffff58234610   144  ldr x16, pc+168 (addr 0x0000ffff582346b8)    ;; external reference (power_double_double_function)
0xffff58234614   148  and csp, jssp, #0xfffffffffffffff0
0xffff58234618   152  blr x16
0xffff5823461c   156  mov lr, x19
0xffff58234620   160  b #+0x64 (addr 0xffff58234684)
0xffff58234624   164  asr x12, x11, #32
0xffff58234628   168  cmp x12, #0x0 (0)
0xffff5823462c   172  cneg x13, x12, mi
0xffff58234630   176  fmov d6, d0
0xffff58234634   180  fmov d2, d0
0xffff58234638   184  fmov d0, #0x70 (1.0000)
0xffff5823463c   188  b #+0x10 (addr 0xffff5823464c)
0xffff58234640   192  fmul d6, d6, d6
0xffff58234644   196  lsr x13, x13, #1
0xffff58234648   200  cbz x13, #+0x10 (addr 0xffff58234658)
0xffff5823464c   204  tbz w13, #0, #-0xc (addr 0xffff58234640)
0xffff58234650   208  fmul d0, d0, d6
0xffff58234654   212  b #-0x14 (addr 0xffff58234640)
0xffff58234658   216  tbz x12, #63, #+0x2c (addr 0xffff58234684)
0xffff5823465c   220  fmov d7, #0x70 (1.0000)
0xffff58234660   224  fdiv d0, d7, d0
0xffff58234664   228  fcmp d0, #0.0
0xffff58234668   232  b.ne #+0x1c (addr 0xffff58234684)
0xffff5823466c   236  sub csp, jssp, #0x10 (16)
0xffff58234670   240  stp x11, x10, [jssp, #-16]!
0xffff58234674   244  movz x0, #0x2
0xffff58234678   248  ldr x1, pc+72 (addr 0x0000ffff582346c0)    ;; external reference (Runtime::MathPowRT)
0xffff5823467c   252  ldr x16, pc+76 (addr 0x0000ffff582346c8)    ;; code: STUB, CEntryStub, minor: 4
0xffff58234680   256  br x16
0xffff58234684   260  ldr x15, pc+76 (addr 0x0000ffff582346d0)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff58234688   264  ldp x0, x14, [x15]
0xffff5823468c   268  adds x16, x0, #0x10 (16)
0xffff58234690   272  ccmp x16, x14, #nzCv, lo
0xffff58234694   276  b.hi #-0x28 (addr 0xffff5823466c)
0xffff58234698   280  str x16, [x15]
0xffff5823469c   284  ldr d30, [x26, #120]
0xffff582346a0   288  stp d30, d0, [x0]
0xffff582346a4   292  orr x0, x0, #0x1
0xffff582346a8   296  ret
0xffff582346ac   300  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff582346b0   304  d63f03e0       constant
0xffff582346b4   308  d503201f       constant
0xffff582346b8   312  009362e0       constant
0xffff582346bc   316  00000000       constant
0xffff582346c0   320  00e39ee8       constant
0xffff582346c4   324  00000000       constant
0xffff582346c8   328  58206060       constant
0xffff582346cc   332  0000ffff       constant
0xffff582346d0   336  16e792c0       constant
0xffff582346d4   340  00000000       constant


RelocInfo (size = 17)
0xffff58234610  external reference (power_double_double_function)  (0x9362e0)
0xffff58234678  external reference (Runtime::MathPowRT)  (0xe39ee8)
0xffff5823467c  code target (STUB)  (0xffff58206060)
0xffff58234684  external reference (Heap::NewSpaceAllocationTopAddress())  (0x16e792c0)
0xffff582346ac  constant pool (size 44)


kind = KEYED_LOAD_IC
major_key = KeyedLoadICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = KeyedLoadICTrampolineStub
compiler = unknown
Instructions (size = 368)
0xffff58236c80     0  ldur x3, [fp, #-16]
0xffff58236c84     4  ldur x3, [x3, #31]
0xffff58236c88     8  ldur x3, [x3, #87]
0xffff58236c8c    12  add x4, x3, x0, asr #29
0xffff58236c90    16  ldur x4, [x4, #15]
0xffff58236c94    20  tbz w1, #0, #+0x130 (addr 0xffff58236dc4)
0xffff58236c98    24  ldur x5, [x1, #-1]
0xffff58236c9c    28  ldur x6, [x4, #7]
0xffff58236ca0    32  cmp x6, x5
0xffff58236ca4    36  b.ne #+0x14 (addr 0xffff58236cb8)
0xffff58236ca8    40  add x4, x3, x0, asr #29
0xffff58236cac    44  ldur x4, [x4, #23]
0xffff58236cb0    48  add x4, x4, #0x5f (95)
0xffff58236cb4    52  br x4
0xffff58236cb8    56  ldur x6, [x4, #-1]
0xffff58236cbc    60  ldr x16, [x26, #224]
0xffff58236cc0    64  cmp x6, x16
0xffff58236cc4    68  b.ne #+0x5c (addr 0xffff58236d20)
0xffff58236cc8    72  ldur x6, [x4, #15]
0xffff58236ccc    76  ldur x6, [x6, #7]
0xffff58236cd0    80  cmp x5, x6
0xffff58236cd4    84  b.ne #+0x10 (addr 0xffff58236ce4)
0xffff58236cd8    88  ldur x4, [x4, #23]
0xffff58236cdc    92  add x4, x4, #0x5f (95)
0xffff58236ce0    96  br x4
0xffff58236ce4   100  ldur x7, [x4, #7]
0xffff58236ce8   104  add x7, x4, x7, asr #29
0xffff58236cec   108  add x7, x7, #0xf (15)
0xffff58236cf0   112  add x4, x4, #0x1f (31)
0xffff58236cf4   116  ldr x6, [x4]
0xffff58236cf8   120  ldur x6, [x6, #7]
0xffff58236cfc   124  cmp x5, x6
0xffff58236d00   128  b.ne #+0x10 (addr 0xffff58236d10)
0xffff58236d04   132  ldr x4, [x4, #8]
0xffff58236d08   136  add x4, x4, #0x5f (95)
0xffff58236d0c   140  br x4
0xffff58236d10   144  add x4, x4, #0x10 (16)
0xffff58236d14   148  cmp x4, x7
0xffff58236d18   152  b.lt #-0x24 (addr 0xffff58236cf4)
0xffff58236d1c   156  b #+0x8c (addr 0xffff58236da8)
0xffff58236d20   160  ldr x16, [x26, #2400]
0xffff58236d24   164  cmp x4, x16
0xffff58236d28   168  b.ne #+0xc (addr 0xffff58236d34)
0xffff58236d2c   172  ldr x16, pc+172 (addr 0x0000ffff58236dd8)    ;; code: KEYED_LOAD_IC, MEGAMORPHIC
0xffff58236d30   176  br x16
0xffff58236d34   180  cmp x2, x4
0xffff58236d38   184  b.ne #+0x70 (addr 0xffff58236da8)
0xffff58236d3c   188  add x4, x3, x0, asr #29
0xffff58236d40   192  ldur x4, [x4, #23]
0xffff58236d44   196  ldur x6, [x4, #15]
0xffff58236d48   200  ldur x6, [x6, #7]
0xffff58236d4c   204  cmp x5, x6
0xffff58236d50   208  b.ne #+0x10 (addr 0xffff58236d60)
0xffff58236d54   212  ldur x4, [x4, #23]
0xffff58236d58   216  add x4, x4, #0x5f (95)
0xffff58236d5c   220  br x4
0xffff58236d60   224  ldur x7, [x4, #7]
0xffff58236d64   228  movz x16, #0x200000000
0xffff58236d68   232  cmp x7, x16
0xffff58236d6c   236  b.eq #+0x3c (addr 0xffff58236da8)
0xffff58236d70   240  add x7, x4, x7, asr #29
0xffff58236d74   244  add x7, x7, #0xf (15)
0xffff58236d78   248  add x4, x4, #0x1f (31)
0xffff58236d7c   252  ldr x6, [x4]
0xffff58236d80   256  ldur x6, [x6, #7]
0xffff58236d84   260  cmp x5, x6
0xffff58236d88   264  b.ne #+0x10 (addr 0xffff58236d98)
0xffff58236d8c   268  ldr x4, [x4, #8]
0xffff58236d90   272  add x4, x4, #0x5f (95)
0xffff58236d94   276  br x4
0xffff58236d98   280  add x4, x4, #0x10 (16)
0xffff58236d9c   284  cmp x4, x7
0xffff58236da0   288  b.lt #-0x24 (addr 0xffff58236d7c)
0xffff58236da4   292  b #+0x4 (addr 0xffff58236da8)
0xffff58236da8   296  sub csp, jssp, #0x20 (32)
0xffff58236dac   300  stp x3, x0, [jssp, #-32]!
0xffff58236db0   304  stp x2, x1, [jssp, #16]
0xffff58236db4   308  movz x0, #0x4
0xffff58236db8   312  ldr x1, pc+40 (addr 0x0000ffff58236de0)    ;; external reference (Runtime::KeyedLoadIC_Miss)
0xffff58236dbc   316  ldr x16, pc+44 (addr 0x0000ffff58236de8)    ;; code: STUB, CEntryStub, minor: 4
0xffff58236dc0   320  br x16
0xffff58236dc4   324  ldr x5, [x26, #120]
0xffff58236dc8   328  b #-0x12c (addr 0xffff58236c9c)
0xffff58236dcc   332  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58236dd0   336  d63f03e0       constant
0xffff58236dd4   340  d503201f       constant
0xffff58236dd8   344  58222900       constant
0xffff58236ddc   348  0000ffff       constant
0xffff58236de0   352  00c874c0       constant
0xffff58236de4   356  00000000       constant
0xffff58236de8   360  58206060       constant
0xffff58236dec   364  0000ffff       constant


RelocInfo (size = 14)
0xffff58236d2c  code target (KEYED_LOAD_IC)  (0xffff58222900)
0xffff58236db8  external reference (Runtime::KeyedLoadIC_Miss)  (0xc874c0)
0xffff58236dbc  code target (STUB)  (0xffff58206060)
0xffff58236dcc  constant pool (size 36)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58236fc0     0  ldur x0, [x1, #-1]
0xffff58236fc4     4  ldur x0, [x0, #47]
0xffff58236fc8     8  movz x16, #0x587
0xffff58236fcc    12  ldr x0, [x0, x16]
0xffff58236fd0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58237040     0  ldur x0, [x1, #7]
0xffff58237044     4  movz x16, #0x1cf
0xffff58237048     8  ldr x0, [x0, x16]
0xffff5823704c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff582370c0     0  adr xzr, #+0x40 (addr 0xffff58237100)
0xffff582370c4     4  adr xzr, #+0x360 (addr 0xffff58237424)
0xffff582370c8     8  ldr x16, pc+1736 (addr 0x0000ffff58237790)    ;; external reference (store_buffer_top)
0xffff582370cc    12  ldr x13, [x16]
0xffff582370d0    16  str x6, [x13], #8
0xffff582370d4    20  str x13, [x16]
0xffff582370d8    24  tst x13, #0x1ffff
0xffff582370dc    28  b.eq #+0x8 (addr 0xffff582370e4)
0xffff582370e0    32  ret
0xffff582370e4    36  sub csp, jssp, #0x8 (8)
0xffff582370e8    40  str lr, [jssp, #-8]!
0xffff582370ec    44  ldr x17, pc+1708 (addr 0x0000ffff58237798)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582370f0    48  blr x17
0xffff582370f4    52  ldr lr, [jssp], #8
0xffff582370f8    56  ret
0xffff582370fc    60  ret
0xffff58237100    64  sub csp, jssp, #0x10 (16)
0xffff58237104    68  stp x2, x0, [jssp, #-16]!
0xffff58237108    72  ldr x13, [x6]
0xffff5823710c    76  and x16, x13, #0xfffffffffff00000
0xffff58237110    80  ldr x16, [x16, #8]
0xffff58237114    84  tst x16, #0x18
0xffff58237118    88  b.eq #+0x1d8 (addr 0xffff582372f0)
0xffff5823711c    92  and x16, x1, #0xfffffffffff00000
0xffff58237120    96  ldr x16, [x16, #8]
0xffff58237124   100  tst x16, #0x18
0xffff58237128   104  b.ne #+0x1c8 (addr 0xffff582372f0)
0xffff5823712c   108  and x13, x1, #0xfffffffffff00000
0xffff58237130   112  ldr x0, [x13, #104]
0xffff58237134   116  subs x0, x0, #0x1 (1)
0xffff58237138   120  str x0, [x13, #104]
0xffff5823713c   124  b.mi #+0xc4 (addr 0xffff58237200)
0xffff58237140   128  ubfx x16, x1, #8, #12
0xffff58237144   132  and x13, x1, #0xfffffffffff00000
0xffff58237148   136  add x13, x13, x16, lsl #2
0xffff5823714c   140  ubfx x0, x1, #3, #5
0xffff58237150   144  ldr x13, [x13, #360]
0xffff58237154   148  lsr x13, x13, x0
0xffff58237158   152  tbz w13, #0, #+0x8 (addr 0xffff58237160)
0xffff5823715c   156  tbnz w13, #1, #+0x3c (addr 0xffff58237198)
0xffff58237160   160  ldp x2, x0, [jssp], #16
0xffff58237164   164  ldr x16, pc+1596 (addr 0x0000ffff582377a0)    ;; external reference (store_buffer_top)
0xffff58237168   168  ldr x13, [x16]
0xffff5823716c   172  str x6, [x13], #8
0xffff58237170   176  str x13, [x16]
0xffff58237174   180  tst x13, #0x1ffff
0xffff58237178   184  b.eq #+0x8 (addr 0xffff58237180)
0xffff5823717c   188  ret
0xffff58237180   192  sub csp, jssp, #0x8 (8)
0xffff58237184   196  str lr, [jssp, #-8]!
0xffff58237188   200  ldr x17, pc+1568 (addr 0x0000ffff582377a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5823718c   204  blr x17
0xffff58237190   208  ldr lr, [jssp], #8
0xffff58237194   212  ret
0xffff58237198   216  ldr x13, [x6]
0xffff5823719c   220  sub csp, jssp, #0x10 (16)
0xffff582371a0   224  stp x1, x6, [jssp, #-16]!
0xffff582371a4   228  ubfx x16, x13, #8, #12
0xffff582371a8   232  and x0, x13, #0xfffffffffff00000
0xffff582371ac   236  add x0, x0, x16, lsl #2
0xffff582371b0   240  ubfx x1, x13, #3, #5
0xffff582371b4   244  ldr x6, [x0, #360]
0xffff582371b8   248  lsr x6, x6, x1
0xffff582371bc   252  tbz w6, #0, #+0x40 (addr 0xffff582371fc)
0xffff582371c0   256  ldp x1, x6, [jssp], #16
0xffff582371c4   260  ldp x2, x0, [jssp], #16
0xffff582371c8   264  ldr x16, pc+1512 (addr 0x0000ffff582377b0)    ;; external reference (store_buffer_top)
0xffff582371cc   268  ldr x13, [x16]
0xffff582371d0   272  str x6, [x13], #8
0xffff582371d4   276  str x13, [x16]
0xffff582371d8   280  tst x13, #0x1ffff
0xffff582371dc   284  b.eq #+0x8 (addr 0xffff582371e4)
0xffff582371e0   288  ret
0xffff582371e4   292  sub csp, jssp, #0x8 (8)
0xffff582371e8   296  str lr, [jssp, #-8]!
0xffff582371ec   300  ldr x17, pc+1484 (addr 0x0000ffff582377b8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582371f0   304  blr x17
0xffff582371f4   308  ldr lr, [jssp], #8
0xffff582371f8   312  ret
0xffff582371fc   316  ldp x1, x6, [jssp], #16
0xffff58237200   320  sub csp, jssp, #0x78 (120)
0xffff58237204   324  stp x14, x15, [jssp, #-32]!
0xffff58237208   328  stp x18, lr, [jssp, #16]
0xffff5823720c   332  stp x9, x10, [jssp, #-32]!
0xffff58237210   336  stp x11, x12, [jssp, #16]
0xffff58237214   340  stp x5, x6, [jssp, #-32]!
0xffff58237218   344  stp x7, x8, [jssp, #16]
0xffff5823721c   348  stp x1, x3, [jssp, #-24]!
0xffff58237220   352  str x4, [jssp, #16]
0xffff58237224   356  sub csp, jssp, #0xb0 (176)
0xffff58237228   360  stp d26, d27, [jssp, #-32]!
0xffff5823722c   364  stp d28, d29, [jssp, #16]
0xffff58237230   368  stp d22, d23, [jssp, #-32]!
0xffff58237234   372  stp d24, d25, [jssp, #16]
0xffff58237238   376  stp d18, d19, [jssp, #-32]!
0xffff5823723c   380  stp d20, d21, [jssp, #16]
0xffff58237240   384  stp d6, d7, [jssp, #-32]!
0xffff58237244   388  stp d16, d17, [jssp, #16]
0xffff58237248   392  stp d2, d3, [jssp, #-32]!
0xffff5823724c   396  stp d4, d5, [jssp, #16]
0xffff58237250   400  stp d0, d1, [jssp, #-16]!
0xffff58237254   404  mov x0, x1
0xffff58237258   408  mov x1, x6
0xffff5823725c   412  ldr x2, pc+1380 (addr 0x0000ffff582377c0)    ;; external reference (isolate)
0xffff58237260   416  ldr x16, pc+1384 (addr 0x0000ffff582377c8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58237264   420  and csp, jssp, #0xfffffffffffffff0
0xffff58237268   424  blr x16
0xffff5823726c   428  ldp d2, d3, [jssp, #16]
0xffff58237270   432  ldp d0, d1, [jssp], #32
0xffff58237274   436  ldp d6, d7, [jssp, #16]
0xffff58237278   440  ldp d4, d5, [jssp], #32
0xffff5823727c   444  ldp d18, d19, [jssp, #16]
0xffff58237280   448  ldp d16, d17, [jssp], #32
0xffff58237284   452  ldp d22, d23, [jssp, #16]
0xffff58237288   456  ldp d20, d21, [jssp], #32
0xffff5823728c   460  ldp d26, d27, [jssp, #16]
0xffff58237290   464  ldp d24, d25, [jssp], #32
0xffff58237294   468  ldp d28, d29, [jssp], #16
0xffff58237298   472  ldp x4, x5, [jssp, #16]
0xffff5823729c   476  ldp x1, x3, [jssp], #32
0xffff582372a0   480  ldp x8, x9, [jssp, #16]
0xffff582372a4   484  ldp x6, x7, [jssp], #32
0xffff582372a8   488  ldp x12, x14, [jssp, #16]
0xffff582372ac   492  ldp x10, x11, [jssp], #32
0xffff582372b0   496  ldr lr, [jssp, #16]
0xffff582372b4   500  ldp x15, x18, [jssp], #24
0xffff582372b8   504  ldp x2, x0, [jssp], #16
0xffff582372bc   508  ldr x16, pc+1300 (addr 0x0000ffff582377d0)    ;; external reference (store_buffer_top)
0xffff582372c0   512  ldr x13, [x16]
0xffff582372c4   516  str x6, [x13], #8
0xffff582372c8   520  str x13, [x16]
0xffff582372cc   524  tst x13, #0x1ffff
0xffff582372d0   528  b.eq #+0x8 (addr 0xffff582372d8)
0xffff582372d4   532  ret
0xffff582372d8   536  sub csp, jssp, #0x8 (8)
0xffff582372dc   540  str lr, [jssp, #-8]!
0xffff582372e0   544  ldr x17, pc+1272 (addr 0x0000ffff582377d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582372e4   548  blr x17
0xffff582372e8   552  ldr lr, [jssp], #8
0xffff582372ec   556  ret
0xffff582372f0   560  and x13, x1, #0xfffffffffff00000
0xffff582372f4   564  ldr x0, [x13, #104]
0xffff582372f8   568  subs x0, x0, #0x1 (1)
0xffff582372fc   572  str x0, [x13, #104]
0xffff58237300   576  b.mi #+0x64 (addr 0xffff58237364)
0xffff58237304   580  ubfx x16, x1, #8, #12
0xffff58237308   584  and x13, x1, #0xfffffffffff00000
0xffff5823730c   588  add x13, x13, x16, lsl #2
0xffff58237310   592  ubfx x0, x1, #3, #5
0xffff58237314   596  ldr x13, [x13, #360]
0xffff58237318   600  lsr x13, x13, x0
0xffff5823731c   604  tbz w13, #0, #+0x8 (addr 0xffff58237324)
0xffff58237320   608  tbnz w13, #1, #+0xc (addr 0xffff5823732c)
0xffff58237324   612  ldp x2, x0, [jssp], #16
0xffff58237328   616  ret
0xffff5823732c   620  ldr x13, [x6]
0xffff58237330   624  sub csp, jssp, #0x10 (16)
0xffff58237334   628  stp x1, x6, [jssp, #-16]!
0xffff58237338   632  ubfx x16, x13, #8, #12
0xffff5823733c   636  and x0, x13, #0xfffffffffff00000
0xffff58237340   640  add x0, x0, x16, lsl #2
0xffff58237344   644  ubfx x1, x13, #3, #5
0xffff58237348   648  ldr x6, [x0, #360]
0xffff5823734c   652  lsr x6, x6, x1
0xffff58237350   656  tbz w6, #0, #+0x10 (addr 0xffff58237360)
0xffff58237354   660  ldp x1, x6, [jssp], #16
0xffff58237358   664  ldp x2, x0, [jssp], #16
0xffff5823735c   668  ret
0xffff58237360   672  ldp x1, x6, [jssp], #16
0xffff58237364   676  sub csp, jssp, #0x78 (120)
0xffff58237368   680  stp x14, x15, [jssp, #-32]!
0xffff5823736c   684  stp x18, lr, [jssp, #16]
0xffff58237370   688  stp x9, x10, [jssp, #-32]!
0xffff58237374   692  stp x11, x12, [jssp, #16]
0xffff58237378   696  stp x5, x6, [jssp, #-32]!
0xffff5823737c   700  stp x7, x8, [jssp, #16]
0xffff58237380   704  stp x1, x3, [jssp, #-24]!
0xffff58237384   708  str x4, [jssp, #16]
0xffff58237388   712  sub csp, jssp, #0xb0 (176)
0xffff5823738c   716  stp d26, d27, [jssp, #-32]!
0xffff58237390   720  stp d28, d29, [jssp, #16]
0xffff58237394   724  stp d22, d23, [jssp, #-32]!
0xffff58237398   728  stp d24, d25, [jssp, #16]
0xffff5823739c   732  stp d18, d19, [jssp, #-32]!
0xffff582373a0   736  stp d20, d21, [jssp, #16]
0xffff582373a4   740  stp d6, d7, [jssp, #-32]!
0xffff582373a8   744  stp d16, d17, [jssp, #16]
0xffff582373ac   748  stp d2, d3, [jssp, #-32]!
0xffff582373b0   752  stp d4, d5, [jssp, #16]
0xffff582373b4   756  stp d0, d1, [jssp, #-16]!
0xffff582373b8   760  mov x0, x1
0xffff582373bc   764  mov x1, x6
0xffff582373c0   768  ldr x2, pc+1056 (addr 0x0000ffff582377e0)    ;; external reference (isolate)
0xffff582373c4   772  ldr x16, pc+1060 (addr 0x0000ffff582377e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582373c8   776  and csp, jssp, #0xfffffffffffffff0
0xffff582373cc   780  blr x16
0xffff582373d0   784  ldp d2, d3, [jssp, #16]
0xffff582373d4   788  ldp d0, d1, [jssp], #32
0xffff582373d8   792  ldp d6, d7, [jssp, #16]
0xffff582373dc   796  ldp d4, d5, [jssp], #32
0xffff582373e0   800  ldp d18, d19, [jssp, #16]
0xffff582373e4   804  ldp d16, d17, [jssp], #32
0xffff582373e8   808  ldp d22, d23, [jssp, #16]
0xffff582373ec   812  ldp d20, d21, [jssp], #32
0xffff582373f0   816  ldp d26, d27, [jssp, #16]
0xffff582373f4   820  ldp d24, d25, [jssp], #32
0xffff582373f8   824  ldp d28, d29, [jssp], #16
0xffff582373fc   828  ldp x4, x5, [jssp, #16]
0xffff58237400   832  ldp x1, x3, [jssp], #32
0xffff58237404   836  ldp x8, x9, [jssp, #16]
0xffff58237408   840  ldp x6, x7, [jssp], #32
0xffff5823740c   844  ldp x12, x14, [jssp, #16]
0xffff58237410   848  ldp x10, x11, [jssp], #32
0xffff58237414   852  ldr lr, [jssp, #16]
0xffff58237418   856  ldp x15, x18, [jssp], #24
0xffff5823741c   860  ldp x2, x0, [jssp], #16
0xffff58237420   864  ret
0xffff58237424   868  sub csp, jssp, #0x10 (16)
0xffff58237428   872  stp x2, x0, [jssp, #-16]!
0xffff5823742c   876  ldr x13, [x6]
0xffff58237430   880  and x16, x13, #0xfffffffffff00000
0xffff58237434   884  ldr x16, [x16, #8]
0xffff58237438   888  tst x16, #0x18
0xffff5823743c   892  b.eq #+0x1f8 (addr 0xffff58237634)
0xffff58237440   896  and x16, x1, #0xfffffffffff00000
0xffff58237444   900  ldr x16, [x16, #8]
0xffff58237448   904  tst x16, #0x18
0xffff5823744c   908  b.ne #+0x1e8 (addr 0xffff58237634)
0xffff58237450   912  and x13, x1, #0xfffffffffff00000
0xffff58237454   916  ldr x0, [x13, #104]
0xffff58237458   920  subs x0, x0, #0x1 (1)
0xffff5823745c   924  str x0, [x13, #104]
0xffff58237460   928  b.mi #+0xe4 (addr 0xffff58237544)
0xffff58237464   932  ubfx x16, x1, #8, #12
0xffff58237468   936  and x13, x1, #0xfffffffffff00000
0xffff5823746c   940  add x13, x13, x16, lsl #2
0xffff58237470   944  ubfx x0, x1, #3, #5
0xffff58237474   948  ldr x13, [x13, #360]
0xffff58237478   952  lsr x13, x13, x0
0xffff5823747c   956  tbz w13, #0, #+0x8 (addr 0xffff58237484)
0xffff58237480   960  tbnz w13, #1, #+0x3c (addr 0xffff582374bc)
0xffff58237484   964  ldp x2, x0, [jssp], #16
0xffff58237488   968  ldr x16, pc+872 (addr 0x0000ffff582377f0)    ;; external reference (store_buffer_top)
0xffff5823748c   972  ldr x13, [x16]
0xffff58237490   976  str x6, [x13], #8
0xffff58237494   980  str x13, [x16]
0xffff58237498   984  tst x13, #0x1ffff
0xffff5823749c   988  b.eq #+0x8 (addr 0xffff582374a4)
0xffff582374a0   992  ret
0xffff582374a4   996  sub csp, jssp, #0x8 (8)
0xffff582374a8  1000  str lr, [jssp, #-8]!
0xffff582374ac  1004  ldr x17, pc+844 (addr 0x0000ffff582377f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582374b0  1008  blr x17
0xffff582374b4  1012  ldr lr, [jssp], #8
0xffff582374b8  1016  ret
0xffff582374bc  1020  ldr x13, [x6]
0xffff582374c0  1024  and x0, x13, #0xfffffffffff00000
0xffff582374c4  1028  ldr x0, [x0, #8]
0xffff582374c8  1032  tbz w0, #6, #+0x18 (addr 0xffff582374e0)
0xffff582374cc  1036  and x0, x1, #0xfffffffffff00000
0xffff582374d0  1040  ldr x0, [x0, #8]
0xffff582374d4  1044  movz x16, #0x58
0xffff582374d8  1048  tst x0, x16
0xffff582374dc  1052  b.eq #+0x68 (addr 0xffff58237544)
0xffff582374e0  1056  sub csp, jssp, #0x10 (16)
0xffff582374e4  1060  stp x1, x6, [jssp, #-16]!
0xffff582374e8  1064  ubfx x16, x13, #8, #12
0xffff582374ec  1068  and x0, x13, #0xfffffffffff00000
0xffff582374f0  1072  add x0, x0, x16, lsl #2
0xffff582374f4  1076  ubfx x1, x13, #3, #5
0xffff582374f8  1080  ldr x6, [x0, #360]
0xffff582374fc  1084  lsr x6, x6, x1
0xffff58237500  1088  tbz w6, #0, #+0x40 (addr 0xffff58237540)
0xffff58237504  1092  ldp x1, x6, [jssp], #16
0xffff58237508  1096  ldp x2, x0, [jssp], #16
0xffff5823750c  1100  ldr x16, pc+756 (addr 0x0000ffff58237800)    ;; external reference (store_buffer_top)
0xffff58237510  1104  ldr x13, [x16]
0xffff58237514  1108  str x6, [x13], #8
0xffff58237518  1112  str x13, [x16]
0xffff5823751c  1116  tst x13, #0x1ffff
0xffff58237520  1120  b.eq #+0x8 (addr 0xffff58237528)
0xffff58237524  1124  ret
0xffff58237528  1128  sub csp, jssp, #0x8 (8)
0xffff5823752c  1132  str lr, [jssp, #-8]!
0xffff58237530  1136  ldr x17, pc+728 (addr 0x0000ffff58237808)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58237534  1140  blr x17
0xffff58237538  1144  ldr lr, [jssp], #8
0xffff5823753c  1148  ret
0xffff58237540  1152  ldp x1, x6, [jssp], #16
0xffff58237544  1156  sub csp, jssp, #0x78 (120)
0xffff58237548  1160  stp x14, x15, [jssp, #-32]!
0xffff5823754c  1164  stp x18, lr, [jssp, #16]
0xffff58237550  1168  stp x9, x10, [jssp, #-32]!
0xffff58237554  1172  stp x11, x12, [jssp, #16]
0xffff58237558  1176  stp x5, x6, [jssp, #-32]!
0xffff5823755c  1180  stp x7, x8, [jssp, #16]
0xffff58237560  1184  stp x1, x3, [jssp, #-24]!
0xffff58237564  1188  str x4, [jssp, #16]
0xffff58237568  1192  sub csp, jssp, #0xb0 (176)
0xffff5823756c  1196  stp d26, d27, [jssp, #-32]!
0xffff58237570  1200  stp d28, d29, [jssp, #16]
0xffff58237574  1204  stp d22, d23, [jssp, #-32]!
0xffff58237578  1208  stp d24, d25, [jssp, #16]
0xffff5823757c  1212  stp d18, d19, [jssp, #-32]!
0xffff58237580  1216  stp d20, d21, [jssp, #16]
0xffff58237584  1220  stp d6, d7, [jssp, #-32]!
0xffff58237588  1224  stp d16, d17, [jssp, #16]
0xffff5823758c  1228  stp d2, d3, [jssp, #-32]!
0xffff58237590  1232  stp d4, d5, [jssp, #16]
0xffff58237594  1236  stp d0, d1, [jssp, #-16]!
0xffff58237598  1240  mov x0, x1
0xffff5823759c  1244  mov x1, x6
0xffff582375a0  1248  ldr x2, pc+624 (addr 0x0000ffff58237810)    ;; external reference (isolate)
0xffff582375a4  1252  ldr x16, pc+628 (addr 0x0000ffff58237818)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582375a8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff582375ac  1260  blr x16
0xffff582375b0  1264  ldp d2, d3, [jssp, #16]
0xffff582375b4  1268  ldp d0, d1, [jssp], #32
0xffff582375b8  1272  ldp d6, d7, [jssp, #16]
0xffff582375bc  1276  ldp d4, d5, [jssp], #32
0xffff582375c0  1280  ldp d18, d19, [jssp, #16]
0xffff582375c4  1284  ldp d16, d17, [jssp], #32
0xffff582375c8  1288  ldp d22, d23, [jssp, #16]
0xffff582375cc  1292  ldp d20, d21, [jssp], #32
0xffff582375d0  1296  ldp d26, d27, [jssp, #16]
0xffff582375d4  1300  ldp d24, d25, [jssp], #32
0xffff582375d8  1304  ldp d28, d29, [jssp], #16
0xffff582375dc  1308  ldp x4, x5, [jssp, #16]
0xffff582375e0  1312  ldp x1, x3, [jssp], #32
0xffff582375e4  1316  ldp x8, x9, [jssp, #16]
0xffff582375e8  1320  ldp x6, x7, [jssp], #32
0xffff582375ec  1324  ldp x12, x14, [jssp, #16]
0xffff582375f0  1328  ldp x10, x11, [jssp], #32
0xffff582375f4  1332  ldr lr, [jssp, #16]
0xffff582375f8  1336  ldp x15, x18, [jssp], #24
0xffff582375fc  1340  ldp x2, x0, [jssp], #16
0xffff58237600  1344  ldr x16, pc+544 (addr 0x0000ffff58237820)    ;; external reference (store_buffer_top)
0xffff58237604  1348  ldr x13, [x16]
0xffff58237608  1352  str x6, [x13], #8
0xffff5823760c  1356  str x13, [x16]
0xffff58237610  1360  tst x13, #0x1ffff
0xffff58237614  1364  b.eq #+0x8 (addr 0xffff5823761c)
0xffff58237618  1368  ret
0xffff5823761c  1372  sub csp, jssp, #0x8 (8)
0xffff58237620  1376  str lr, [jssp, #-8]!
0xffff58237624  1380  ldr x17, pc+516 (addr 0x0000ffff58237828)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58237628  1384  blr x17
0xffff5823762c  1388  ldr lr, [jssp], #8
0xffff58237630  1392  ret
0xffff58237634  1396  and x13, x1, #0xfffffffffff00000
0xffff58237638  1400  ldr x0, [x13, #104]
0xffff5823763c  1404  subs x0, x0, #0x1 (1)
0xffff58237640  1408  str x0, [x13, #104]
0xffff58237644  1412  b.mi #+0x84 (addr 0xffff582376c8)
0xffff58237648  1416  ubfx x16, x1, #8, #12
0xffff5823764c  1420  and x13, x1, #0xfffffffffff00000
0xffff58237650  1424  add x13, x13, x16, lsl #2
0xffff58237654  1428  ubfx x0, x1, #3, #5
0xffff58237658  1432  ldr x13, [x13, #360]
0xffff5823765c  1436  lsr x13, x13, x0
0xffff58237660  1440  tbz w13, #0, #+0x8 (addr 0xffff58237668)
0xffff58237664  1444  tbnz w13, #1, #+0xc (addr 0xffff58237670)
0xffff58237668  1448  ldp x2, x0, [jssp], #16
0xffff5823766c  1452  ret
0xffff58237670  1456  ldr x13, [x6]
0xffff58237674  1460  and x0, x13, #0xfffffffffff00000
0xffff58237678  1464  ldr x0, [x0, #8]
0xffff5823767c  1468  tbz w0, #6, #+0x18 (addr 0xffff58237694)
0xffff58237680  1472  and x0, x1, #0xfffffffffff00000
0xffff58237684  1476  ldr x0, [x0, #8]
0xffff58237688  1480  movz x16, #0x58
0xffff5823768c  1484  tst x0, x16
0xffff58237690  1488  b.eq #+0x38 (addr 0xffff582376c8)
0xffff58237694  1492  sub csp, jssp, #0x10 (16)
0xffff58237698  1496  stp x1, x6, [jssp, #-16]!
0xffff5823769c  1500  ubfx x16, x13, #8, #12
0xffff582376a0  1504  and x0, x13, #0xfffffffffff00000
0xffff582376a4  1508  add x0, x0, x16, lsl #2
0xffff582376a8  1512  ubfx x1, x13, #3, #5
0xffff582376ac  1516  ldr x6, [x0, #360]
0xffff582376b0  1520  lsr x6, x6, x1
0xffff582376b4  1524  tbz w6, #0, #+0x10 (addr 0xffff582376c4)
0xffff582376b8  1528  ldp x1, x6, [jssp], #16
0xffff582376bc  1532  ldp x2, x0, [jssp], #16
0xffff582376c0  1536  ret
0xffff582376c4  1540  ldp x1, x6, [jssp], #16
0xffff582376c8  1544  sub csp, jssp, #0x78 (120)
0xffff582376cc  1548  stp x14, x15, [jssp, #-32]!
0xffff582376d0  1552  stp x18, lr, [jssp, #16]
0xffff582376d4  1556  stp x9, x10, [jssp, #-32]!
0xffff582376d8  1560  stp x11, x12, [jssp, #16]
0xffff582376dc  1564  stp x5, x6, [jssp, #-32]!
0xffff582376e0  1568  stp x7, x8, [jssp, #16]
0xffff582376e4  1572  stp x1, x3, [jssp, #-24]!
0xffff582376e8  1576  str x4, [jssp, #16]
0xffff582376ec  1580  sub csp, jssp, #0xb0 (176)
0xffff582376f0  1584  stp d26, d27, [jssp, #-32]!
0xffff582376f4  1588  stp d28, d29, [jssp, #16]
0xffff582376f8  1592  stp d22, d23, [jssp, #-32]!
0xffff582376fc  1596  stp d24, d25, [jssp, #16]
0xffff58237700  1600  stp d18, d19, [jssp, #-32]!
0xffff58237704  1604  stp d20, d21, [jssp, #16]
0xffff58237708  1608  stp d6, d7, [jssp, #-32]!
0xffff5823770c  1612  stp d16, d17, [jssp, #16]
0xffff58237710  1616  stp d2, d3, [jssp, #-32]!
0xffff58237714  1620  stp d4, d5, [jssp, #16]
0xffff58237718  1624  stp d0, d1, [jssp, #-16]!
0xffff5823771c  1628  mov x0, x1
0xffff58237720  1632  mov x1, x6
0xffff58237724  1636  ldr x2, pc+268 (addr 0x0000ffff58237830)    ;; external reference (isolate)
0xffff58237728  1640  ldr x16, pc+272 (addr 0x0000ffff58237838)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5823772c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff58237730  1648  blr x16
0xffff58237734  1652  ldp d2, d3, [jssp, #16]
0xffff58237738  1656  ldp d0, d1, [jssp], #32
0xffff5823773c  1660  ldp d6, d7, [jssp, #16]
0xffff58237740  1664  ldp d4, d5, [jssp], #32
0xffff58237744  1668  ldp d18, d19, [jssp, #16]
0xffff58237748  1672  ldp d16, d17, [jssp], #32
0xffff5823774c  1676  ldp d22, d23, [jssp, #16]
0xffff58237750  1680  ldp d20, d21, [jssp], #32
0xffff58237754  1684  ldp d26, d27, [jssp, #16]
0xffff58237758  1688  ldp d24, d25, [jssp], #32
0xffff5823775c  1692  ldp d28, d29, [jssp], #16
0xffff58237760  1696  ldp x4, x5, [jssp, #16]
0xffff58237764  1700  ldp x1, x3, [jssp], #32
0xffff58237768  1704  ldp x8, x9, [jssp, #16]
0xffff5823776c  1708  ldp x6, x7, [jssp], #32
0xffff58237770  1712  ldp x12, x14, [jssp, #16]
0xffff58237774  1716  ldp x10, x11, [jssp], #32
0xffff58237778  1720  ldr lr, [jssp, #16]
0xffff5823777c  1724  ldp x15, x18, [jssp], #24
0xffff58237780  1728  ldp x2, x0, [jssp], #16
0xffff58237784  1732  ret
0xffff58237788  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5823778c  1740  d63f03e0       constant
0xffff58237790  1744  16e798c0       constant
0xffff58237794  1748  00000000       constant
0xffff58237798  1752  582065a0       constant
0xffff5823779c  1756  0000ffff       constant
0xffff582377a0  1760  16e798c0       constant
0xffff582377a4  1764  00000000       constant
0xffff582377a8  1768  582065a0       constant
0xffff582377ac  1772  0000ffff       constant
0xffff582377b0  1776  16e798c0       constant
0xffff582377b4  1780  00000000       constant
0xffff582377b8  1784  582065a0       constant
0xffff582377bc  1788  0000ffff       constant
0xffff582377c0  1792  16e782d0       constant
0xffff582377c4  1796  00000000       constant
0xffff582377c8  1800  00c2d958       constant
0xffff582377cc  1804  00000000       constant
0xffff582377d0  1808  16e798c0       constant
0xffff582377d4  1812  00000000       constant
0xffff582377d8  1816  582065a0       constant
0xffff582377dc  1820  0000ffff       constant
0xffff582377e0  1824  16e782d0       constant
0xffff582377e4  1828  00000000       constant
0xffff582377e8  1832  00c2d958       constant
0xffff582377ec  1836  00000000       constant
0xffff582377f0  1840  16e798c0       constant
0xffff582377f4  1844  00000000       constant
0xffff582377f8  1848  582065a0       constant
0xffff582377fc  1852  0000ffff       constant
0xffff58237800  1856  16e798c0       constant
0xffff58237804  1860  00000000       constant
0xffff58237808  1864  582065a0       constant
0xffff5823780c  1868  0000ffff       constant
0xffff58237810  1872  16e782d0       constant
0xffff58237814  1876  00000000       constant
0xffff58237818  1880  00c2d958       constant
0xffff5823781c  1884  00000000       constant
0xffff58237820  1888  16e798c0       constant
0xffff58237824  1892  00000000       constant
0xffff58237828  1896  582065a0       constant
0xffff5823782c  1900  0000ffff       constant
0xffff58237830  1904  16e782d0       constant
0xffff58237834  1908  00000000       constant
0xffff58237838  1912  00c2d958       constant
0xffff5823783c  1916  00000000       constant


RelocInfo (size = 65)
0xffff582370c8  external reference (store_buffer_top)  (0x16e798c0)
0xffff582370ec  code target (STUB)  (0xffff582065a0)
0xffff58237164  external reference (store_buffer_top)  (0x16e798c0)
0xffff58237188  code target (STUB)  (0xffff582065a0)
0xffff582371c8  external reference (store_buffer_top)  (0x16e798c0)
0xffff582371ec  code target (STUB)  (0xffff582065a0)
0xffff5823725c  external reference (isolate)  (0x16e782d0)
0xffff58237260  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582372bc  external reference (store_buffer_top)  (0x16e798c0)
0xffff582372e0  code target (STUB)  (0xffff582065a0)
0xffff582373c0  external reference (isolate)  (0x16e782d0)
0xffff582373c4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58237488  external reference (store_buffer_top)  (0x16e798c0)
0xffff582374ac  code target (STUB)  (0xffff582065a0)
0xffff5823750c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58237530  code target (STUB)  (0xffff582065a0)
0xffff582375a0  external reference (isolate)  (0x16e782d0)
0xffff582375a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58237600  external reference (store_buffer_top)  (0x16e798c0)
0xffff58237624  code target (STUB)  (0xffff582065a0)
0xffff58237724  external reference (isolate)  (0x16e782d0)
0xffff58237728  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58237788  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff582378a0     0  adr xzr, #+0x40 (addr 0xffff582378e0)
0xffff582378a4     4  adr xzr, #+0x360 (addr 0xffff58237c04)
0xffff582378a8     8  ldr x16, pc+1736 (addr 0x0000ffff58237f70)    ;; external reference (store_buffer_top)
0xffff582378ac    12  ldr x2, [x16]
0xffff582378b0    16  str x3, [x2], #8
0xffff582378b4    20  str x2, [x16]
0xffff582378b8    24  tst x2, #0x1ffff
0xffff582378bc    28  b.eq #+0x8 (addr 0xffff582378c4)
0xffff582378c0    32  ret
0xffff582378c4    36  sub csp, jssp, #0x8 (8)
0xffff582378c8    40  str lr, [jssp, #-8]!
0xffff582378cc    44  ldr x17, pc+1708 (addr 0x0000ffff58237f78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582378d0    48  blr x17
0xffff582378d4    52  ldr lr, [jssp], #8
0xffff582378d8    56  ret
0xffff582378dc    60  ret
0xffff582378e0    64  sub csp, jssp, #0x10 (16)
0xffff582378e4    68  stp x1, x0, [jssp, #-16]!
0xffff582378e8    72  ldr x2, [x3]
0xffff582378ec    76  and x16, x2, #0xfffffffffff00000
0xffff582378f0    80  ldr x16, [x16, #8]
0xffff582378f4    84  tst x16, #0x18
0xffff582378f8    88  b.eq #+0x1d8 (addr 0xffff58237ad0)
0xffff582378fc    92  and x16, x4, #0xfffffffffff00000
0xffff58237900    96  ldr x16, [x16, #8]
0xffff58237904   100  tst x16, #0x18
0xffff58237908   104  b.ne #+0x1c8 (addr 0xffff58237ad0)
0xffff5823790c   108  and x2, x4, #0xfffffffffff00000
0xffff58237910   112  ldr x0, [x2, #104]
0xffff58237914   116  subs x0, x0, #0x1 (1)
0xffff58237918   120  str x0, [x2, #104]
0xffff5823791c   124  b.mi #+0xc4 (addr 0xffff582379e0)
0xffff58237920   128  ubfx x16, x4, #8, #12
0xffff58237924   132  and x2, x4, #0xfffffffffff00000
0xffff58237928   136  add x2, x2, x16, lsl #2
0xffff5823792c   140  ubfx x0, x4, #3, #5
0xffff58237930   144  ldr x2, [x2, #360]
0xffff58237934   148  lsr x2, x2, x0
0xffff58237938   152  tbz w2, #0, #+0x8 (addr 0xffff58237940)
0xffff5823793c   156  tbnz w2, #1, #+0x3c (addr 0xffff58237978)
0xffff58237940   160  ldp x1, x0, [jssp], #16
0xffff58237944   164  ldr x16, pc+1596 (addr 0x0000ffff58237f80)    ;; external reference (store_buffer_top)
0xffff58237948   168  ldr x2, [x16]
0xffff5823794c   172  str x3, [x2], #8
0xffff58237950   176  str x2, [x16]
0xffff58237954   180  tst x2, #0x1ffff
0xffff58237958   184  b.eq #+0x8 (addr 0xffff58237960)
0xffff5823795c   188  ret
0xffff58237960   192  sub csp, jssp, #0x8 (8)
0xffff58237964   196  str lr, [jssp, #-8]!
0xffff58237968   200  ldr x17, pc+1568 (addr 0x0000ffff58237f88)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5823796c   204  blr x17
0xffff58237970   208  ldr lr, [jssp], #8
0xffff58237974   212  ret
0xffff58237978   216  ldr x2, [x3]
0xffff5823797c   220  sub csp, jssp, #0x10 (16)
0xffff58237980   224  stp x4, x3, [jssp, #-16]!
0xffff58237984   228  ubfx x16, x2, #8, #12
0xffff58237988   232  and x0, x2, #0xfffffffffff00000
0xffff5823798c   236  add x0, x0, x16, lsl #2
0xffff58237990   240  ubfx x4, x2, #3, #5
0xffff58237994   244  ldr x3, [x0, #360]
0xffff58237998   248  lsr x3, x3, x4
0xffff5823799c   252  tbz w3, #0, #+0x40 (addr 0xffff582379dc)
0xffff582379a0   256  ldp x4, x3, [jssp], #16
0xffff582379a4   260  ldp x1, x0, [jssp], #16
0xffff582379a8   264  ldr x16, pc+1512 (addr 0x0000ffff58237f90)    ;; external reference (store_buffer_top)
0xffff582379ac   268  ldr x2, [x16]
0xffff582379b0   272  str x3, [x2], #8
0xffff582379b4   276  str x2, [x16]
0xffff582379b8   280  tst x2, #0x1ffff
0xffff582379bc   284  b.eq #+0x8 (addr 0xffff582379c4)
0xffff582379c0   288  ret
0xffff582379c4   292  sub csp, jssp, #0x8 (8)
0xffff582379c8   296  str lr, [jssp, #-8]!
0xffff582379cc   300  ldr x17, pc+1484 (addr 0x0000ffff58237f98)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582379d0   304  blr x17
0xffff582379d4   308  ldr lr, [jssp], #8
0xffff582379d8   312  ret
0xffff582379dc   316  ldp x4, x3, [jssp], #16
0xffff582379e0   320  sub csp, jssp, #0x78 (120)
0xffff582379e4   324  stp x14, x15, [jssp, #-32]!
0xffff582379e8   328  stp x18, lr, [jssp, #16]
0xffff582379ec   332  stp x10, x11, [jssp, #-32]!
0xffff582379f0   336  stp x12, x13, [jssp, #16]
0xffff582379f4   340  stp x6, x7, [jssp, #-32]!
0xffff582379f8   344  stp x8, x9, [jssp, #16]
0xffff582379fc   348  stp x3, x4, [jssp, #-24]!
0xffff58237a00   352  str x5, [jssp, #16]
0xffff58237a04   356  sub csp, jssp, #0xb0 (176)
0xffff58237a08   360  stp d26, d27, [jssp, #-32]!
0xffff58237a0c   364  stp d28, d29, [jssp, #16]
0xffff58237a10   368  stp d22, d23, [jssp, #-32]!
0xffff58237a14   372  stp d24, d25, [jssp, #16]
0xffff58237a18   376  stp d18, d19, [jssp, #-32]!
0xffff58237a1c   380  stp d20, d21, [jssp, #16]
0xffff58237a20   384  stp d6, d7, [jssp, #-32]!
0xffff58237a24   388  stp d16, d17, [jssp, #16]
0xffff58237a28   392  stp d2, d3, [jssp, #-32]!
0xffff58237a2c   396  stp d4, d5, [jssp, #16]
0xffff58237a30   400  stp d0, d1, [jssp, #-16]!
0xffff58237a34   404  mov x0, x4
0xffff58237a38   408  mov x1, x3
0xffff58237a3c   412  ldr x2, pc+1380 (addr 0x0000ffff58237fa0)    ;; external reference (isolate)
0xffff58237a40   416  ldr x16, pc+1384 (addr 0x0000ffff58237fa8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58237a44   420  and csp, jssp, #0xfffffffffffffff0
0xffff58237a48   424  blr x16
0xffff58237a4c   428  ldp d2, d3, [jssp, #16]
0xffff58237a50   432  ldp d0, d1, [jssp], #32
0xffff58237a54   436  ldp d6, d7, [jssp, #16]
0xffff58237a58   440  ldp d4, d5, [jssp], #32
0xffff58237a5c   444  ldp d18, d19, [jssp, #16]
0xffff58237a60   448  ldp d16, d17, [jssp], #32
0xffff58237a64   452  ldp d22, d23, [jssp, #16]
0xffff58237a68   456  ldp d20, d21, [jssp], #32
0xffff58237a6c   460  ldp d26, d27, [jssp, #16]
0xffff58237a70   464  ldp d24, d25, [jssp], #32
0xffff58237a74   468  ldp d28, d29, [jssp], #16
0xffff58237a78   472  ldp x5, x6, [jssp, #16]
0xffff58237a7c   476  ldp x3, x4, [jssp], #32
0xffff58237a80   480  ldp x9, x10, [jssp, #16]
0xffff58237a84   484  ldp x7, x8, [jssp], #32
0xffff58237a88   488  ldp x13, x14, [jssp, #16]
0xffff58237a8c   492  ldp x11, x12, [jssp], #32
0xffff58237a90   496  ldr lr, [jssp, #16]
0xffff58237a94   500  ldp x15, x18, [jssp], #24
0xffff58237a98   504  ldp x1, x0, [jssp], #16
0xffff58237a9c   508  ldr x16, pc+1300 (addr 0x0000ffff58237fb0)    ;; external reference (store_buffer_top)
0xffff58237aa0   512  ldr x2, [x16]
0xffff58237aa4   516  str x3, [x2], #8
0xffff58237aa8   520  str x2, [x16]
0xffff58237aac   524  tst x2, #0x1ffff
0xffff58237ab0   528  b.eq #+0x8 (addr 0xffff58237ab8)
0xffff58237ab4   532  ret
0xffff58237ab8   536  sub csp, jssp, #0x8 (8)
0xffff58237abc   540  str lr, [jssp, #-8]!
0xffff58237ac0   544  ldr x17, pc+1272 (addr 0x0000ffff58237fb8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58237ac4   548  blr x17
0xffff58237ac8   552  ldr lr, [jssp], #8
0xffff58237acc   556  ret
0xffff58237ad0   560  and x2, x4, #0xfffffffffff00000
0xffff58237ad4   564  ldr x0, [x2, #104]
0xffff58237ad8   568  subs x0, x0, #0x1 (1)
0xffff58237adc   572  str x0, [x2, #104]
0xffff58237ae0   576  b.mi #+0x64 (addr 0xffff58237b44)
0xffff58237ae4   580  ubfx x16, x4, #8, #12
0xffff58237ae8   584  and x2, x4, #0xfffffffffff00000
0xffff58237aec   588  add x2, x2, x16, lsl #2
0xffff58237af0   592  ubfx x0, x4, #3, #5
0xffff58237af4   596  ldr x2, [x2, #360]
0xffff58237af8   600  lsr x2, x2, x0
0xffff58237afc   604  tbz w2, #0, #+0x8 (addr 0xffff58237b04)
0xffff58237b00   608  tbnz w2, #1, #+0xc (addr 0xffff58237b0c)
0xffff58237b04   612  ldp x1, x0, [jssp], #16
0xffff58237b08   616  ret
0xffff58237b0c   620  ldr x2, [x3]
0xffff58237b10   624  sub csp, jssp, #0x10 (16)
0xffff58237b14   628  stp x4, x3, [jssp, #-16]!
0xffff58237b18   632  ubfx x16, x2, #8, #12
0xffff58237b1c   636  and x0, x2, #0xfffffffffff00000
0xffff58237b20   640  add x0, x0, x16, lsl #2
0xffff58237b24   644  ubfx x4, x2, #3, #5
0xffff58237b28   648  ldr x3, [x0, #360]
0xffff58237b2c   652  lsr x3, x3, x4
0xffff58237b30   656  tbz w3, #0, #+0x10 (addr 0xffff58237b40)
0xffff58237b34   660  ldp x4, x3, [jssp], #16
0xffff58237b38   664  ldp x1, x0, [jssp], #16
0xffff58237b3c   668  ret
0xffff58237b40   672  ldp x4, x3, [jssp], #16
0xffff58237b44   676  sub csp, jssp, #0x78 (120)
0xffff58237b48   680  stp x14, x15, [jssp, #-32]!
0xffff58237b4c   684  stp x18, lr, [jssp, #16]
0xffff58237b50   688  stp x10, x11, [jssp, #-32]!
0xffff58237b54   692  stp x12, x13, [jssp, #16]
0xffff58237b58   696  stp x6, x7, [jssp, #-32]!
0xffff58237b5c   700  stp x8, x9, [jssp, #16]
0xffff58237b60   704  stp x3, x4, [jssp, #-24]!
0xffff58237b64   708  str x5, [jssp, #16]
0xffff58237b68   712  sub csp, jssp, #0xb0 (176)
0xffff58237b6c   716  stp d26, d27, [jssp, #-32]!
0xffff58237b70   720  stp d28, d29, [jssp, #16]
0xffff58237b74   724  stp d22, d23, [jssp, #-32]!
0xffff58237b78   728  stp d24, d25, [jssp, #16]
0xffff58237b7c   732  stp d18, d19, [jssp, #-32]!
0xffff58237b80   736  stp d20, d21, [jssp, #16]
0xffff58237b84   740  stp d6, d7, [jssp, #-32]!
0xffff58237b88   744  stp d16, d17, [jssp, #16]
0xffff58237b8c   748  stp d2, d3, [jssp, #-32]!
0xffff58237b90   752  stp d4, d5, [jssp, #16]
0xffff58237b94   756  stp d0, d1, [jssp, #-16]!
0xffff58237b98   760  mov x0, x4
0xffff58237b9c   764  mov x1, x3
0xffff58237ba0   768  ldr x2, pc+1056 (addr 0x0000ffff58237fc0)    ;; external reference (isolate)
0xffff58237ba4   772  ldr x16, pc+1060 (addr 0x0000ffff58237fc8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58237ba8   776  and csp, jssp, #0xfffffffffffffff0
0xffff58237bac   780  blr x16
0xffff58237bb0   784  ldp d2, d3, [jssp, #16]
0xffff58237bb4   788  ldp d0, d1, [jssp], #32
0xffff58237bb8   792  ldp d6, d7, [jssp, #16]
0xffff58237bbc   796  ldp d4, d5, [jssp], #32
0xffff58237bc0   800  ldp d18, d19, [jssp, #16]
0xffff58237bc4   804  ldp d16, d17, [jssp], #32
0xffff58237bc8   808  ldp d22, d23, [jssp, #16]
0xffff58237bcc   812  ldp d20, d21, [jssp], #32
0xffff58237bd0   816  ldp d26, d27, [jssp, #16]
0xffff58237bd4   820  ldp d24, d25, [jssp], #32
0xffff58237bd8   824  ldp d28, d29, [jssp], #16
0xffff58237bdc   828  ldp x5, x6, [jssp, #16]
0xffff58237be0   832  ldp x3, x4, [jssp], #32
0xffff58237be4   836  ldp x9, x10, [jssp, #16]
0xffff58237be8   840  ldp x7, x8, [jssp], #32
0xffff58237bec   844  ldp x13, x14, [jssp, #16]
0xffff58237bf0   848  ldp x11, x12, [jssp], #32
0xffff58237bf4   852  ldr lr, [jssp, #16]
0xffff58237bf8   856  ldp x15, x18, [jssp], #24
0xffff58237bfc   860  ldp x1, x0, [jssp], #16
0xffff58237c00   864  ret
0xffff58237c04   868  sub csp, jssp, #0x10 (16)
0xffff58237c08   872  stp x1, x0, [jssp, #-16]!
0xffff58237c0c   876  ldr x2, [x3]
0xffff58237c10   880  and x16, x2, #0xfffffffffff00000
0xffff58237c14   884  ldr x16, [x16, #8]
0xffff58237c18   888  tst x16, #0x18
0xffff58237c1c   892  b.eq #+0x1f8 (addr 0xffff58237e14)
0xffff58237c20   896  and x16, x4, #0xfffffffffff00000
0xffff58237c24   900  ldr x16, [x16, #8]
0xffff58237c28   904  tst x16, #0x18
0xffff58237c2c   908  b.ne #+0x1e8 (addr 0xffff58237e14)
0xffff58237c30   912  and x2, x4, #0xfffffffffff00000
0xffff58237c34   916  ldr x0, [x2, #104]
0xffff58237c38   920  subs x0, x0, #0x1 (1)
0xffff58237c3c   924  str x0, [x2, #104]
0xffff58237c40   928  b.mi #+0xe4 (addr 0xffff58237d24)
0xffff58237c44   932  ubfx x16, x4, #8, #12
0xffff58237c48   936  and x2, x4, #0xfffffffffff00000
0xffff58237c4c   940  add x2, x2, x16, lsl #2
0xffff58237c50   944  ubfx x0, x4, #3, #5
0xffff58237c54   948  ldr x2, [x2, #360]
0xffff58237c58   952  lsr x2, x2, x0
0xffff58237c5c   956  tbz w2, #0, #+0x8 (addr 0xffff58237c64)
0xffff58237c60   960  tbnz w2, #1, #+0x3c (addr 0xffff58237c9c)
0xffff58237c64   964  ldp x1, x0, [jssp], #16
0xffff58237c68   968  ldr x16, pc+872 (addr 0x0000ffff58237fd0)    ;; external reference (store_buffer_top)
0xffff58237c6c   972  ldr x2, [x16]
0xffff58237c70   976  str x3, [x2], #8
0xffff58237c74   980  str x2, [x16]
0xffff58237c78   984  tst x2, #0x1ffff
0xffff58237c7c   988  b.eq #+0x8 (addr 0xffff58237c84)
0xffff58237c80   992  ret
0xffff58237c84   996  sub csp, jssp, #0x8 (8)
0xffff58237c88  1000  str lr, [jssp, #-8]!
0xffff58237c8c  1004  ldr x17, pc+844 (addr 0x0000ffff58237fd8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58237c90  1008  blr x17
0xffff58237c94  1012  ldr lr, [jssp], #8
0xffff58237c98  1016  ret
0xffff58237c9c  1020  ldr x2, [x3]
0xffff58237ca0  1024  and x0, x2, #0xfffffffffff00000
0xffff58237ca4  1028  ldr x0, [x0, #8]
0xffff58237ca8  1032  tbz w0, #6, #+0x18 (addr 0xffff58237cc0)
0xffff58237cac  1036  and x0, x4, #0xfffffffffff00000
0xffff58237cb0  1040  ldr x0, [x0, #8]
0xffff58237cb4  1044  movz x16, #0x58
0xffff58237cb8  1048  tst x0, x16
0xffff58237cbc  1052  b.eq #+0x68 (addr 0xffff58237d24)
0xffff58237cc0  1056  sub csp, jssp, #0x10 (16)
0xffff58237cc4  1060  stp x4, x3, [jssp, #-16]!
0xffff58237cc8  1064  ubfx x16, x2, #8, #12
0xffff58237ccc  1068  and x0, x2, #0xfffffffffff00000
0xffff58237cd0  1072  add x0, x0, x16, lsl #2
0xffff58237cd4  1076  ubfx x4, x2, #3, #5
0xffff58237cd8  1080  ldr x3, [x0, #360]
0xffff58237cdc  1084  lsr x3, x3, x4
0xffff58237ce0  1088  tbz w3, #0, #+0x40 (addr 0xffff58237d20)
0xffff58237ce4  1092  ldp x4, x3, [jssp], #16
0xffff58237ce8  1096  ldp x1, x0, [jssp], #16
0xffff58237cec  1100  ldr x16, pc+756 (addr 0x0000ffff58237fe0)    ;; external reference (store_buffer_top)
0xffff58237cf0  1104  ldr x2, [x16]
0xffff58237cf4  1108  str x3, [x2], #8
0xffff58237cf8  1112  str x2, [x16]
0xffff58237cfc  1116  tst x2, #0x1ffff
0xffff58237d00  1120  b.eq #+0x8 (addr 0xffff58237d08)
0xffff58237d04  1124  ret
0xffff58237d08  1128  sub csp, jssp, #0x8 (8)
0xffff58237d0c  1132  str lr, [jssp, #-8]!
0xffff58237d10  1136  ldr x17, pc+728 (addr 0x0000ffff58237fe8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58237d14  1140  blr x17
0xffff58237d18  1144  ldr lr, [jssp], #8
0xffff58237d1c  1148  ret
0xffff58237d20  1152  ldp x4, x3, [jssp], #16
0xffff58237d24  1156  sub csp, jssp, #0x78 (120)
0xffff58237d28  1160  stp x14, x15, [jssp, #-32]!
0xffff58237d2c  1164  stp x18, lr, [jssp, #16]
0xffff58237d30  1168  stp x10, x11, [jssp, #-32]!
0xffff58237d34  1172  stp x12, x13, [jssp, #16]
0xffff58237d38  1176  stp x6, x7, [jssp, #-32]!
0xffff58237d3c  1180  stp x8, x9, [jssp, #16]
0xffff58237d40  1184  stp x3, x4, [jssp, #-24]!
0xffff58237d44  1188  str x5, [jssp, #16]
0xffff58237d48  1192  sub csp, jssp, #0xb0 (176)
0xffff58237d4c  1196  stp d26, d27, [jssp, #-32]!
0xffff58237d50  1200  stp d28, d29, [jssp, #16]
0xffff58237d54  1204  stp d22, d23, [jssp, #-32]!
0xffff58237d58  1208  stp d24, d25, [jssp, #16]
0xffff58237d5c  1212  stp d18, d19, [jssp, #-32]!
0xffff58237d60  1216  stp d20, d21, [jssp, #16]
0xffff58237d64  1220  stp d6, d7, [jssp, #-32]!
0xffff58237d68  1224  stp d16, d17, [jssp, #16]
0xffff58237d6c  1228  stp d2, d3, [jssp, #-32]!
0xffff58237d70  1232  stp d4, d5, [jssp, #16]
0xffff58237d74  1236  stp d0, d1, [jssp, #-16]!
0xffff58237d78  1240  mov x0, x4
0xffff58237d7c  1244  mov x1, x3
0xffff58237d80  1248  ldr x2, pc+624 (addr 0x0000ffff58237ff0)    ;; external reference (isolate)
0xffff58237d84  1252  ldr x16, pc+628 (addr 0x0000ffff58237ff8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58237d88  1256  and csp, jssp, #0xfffffffffffffff0
0xffff58237d8c  1260  blr x16
0xffff58237d90  1264  ldp d2, d3, [jssp, #16]
0xffff58237d94  1268  ldp d0, d1, [jssp], #32
0xffff58237d98  1272  ldp d6, d7, [jssp, #16]
0xffff58237d9c  1276  ldp d4, d5, [jssp], #32
0xffff58237da0  1280  ldp d18, d19, [jssp, #16]
0xffff58237da4  1284  ldp d16, d17, [jssp], #32
0xffff58237da8  1288  ldp d22, d23, [jssp, #16]
0xffff58237dac  1292  ldp d20, d21, [jssp], #32
0xffff58237db0  1296  ldp d26, d27, [jssp, #16]
0xffff58237db4  1300  ldp d24, d25, [jssp], #32
0xffff58237db8  1304  ldp d28, d29, [jssp], #16
0xffff58237dbc  1308  ldp x5, x6, [jssp, #16]
0xffff58237dc0  1312  ldp x3, x4, [jssp], #32
0xffff58237dc4  1316  ldp x9, x10, [jssp, #16]
0xffff58237dc8  1320  ldp x7, x8, [jssp], #32
0xffff58237dcc  1324  ldp x13, x14, [jssp, #16]
0xffff58237dd0  1328  ldp x11, x12, [jssp], #32
0xffff58237dd4  1332  ldr lr, [jssp, #16]
0xffff58237dd8  1336  ldp x15, x18, [jssp], #24
0xffff58237ddc  1340  ldp x1, x0, [jssp], #16
0xffff58237de0  1344  ldr x16, pc+544 (addr 0x0000ffff58238000)    ;; external reference (store_buffer_top)
0xffff58237de4  1348  ldr x2, [x16]
0xffff58237de8  1352  str x3, [x2], #8
0xffff58237dec  1356  str x2, [x16]
0xffff58237df0  1360  tst x2, #0x1ffff
0xffff58237df4  1364  b.eq #+0x8 (addr 0xffff58237dfc)
0xffff58237df8  1368  ret
0xffff58237dfc  1372  sub csp, jssp, #0x8 (8)
0xffff58237e00  1376  str lr, [jssp, #-8]!
0xffff58237e04  1380  ldr x17, pc+516 (addr 0x0000ffff58238008)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58237e08  1384  blr x17
0xffff58237e0c  1388  ldr lr, [jssp], #8
0xffff58237e10  1392  ret
0xffff58237e14  1396  and x2, x4, #0xfffffffffff00000
0xffff58237e18  1400  ldr x0, [x2, #104]
0xffff58237e1c  1404  subs x0, x0, #0x1 (1)
0xffff58237e20  1408  str x0, [x2, #104]
0xffff58237e24  1412  b.mi #+0x84 (addr 0xffff58237ea8)
0xffff58237e28  1416  ubfx x16, x4, #8, #12
0xffff58237e2c  1420  and x2, x4, #0xfffffffffff00000
0xffff58237e30  1424  add x2, x2, x16, lsl #2
0xffff58237e34  1428  ubfx x0, x4, #3, #5
0xffff58237e38  1432  ldr x2, [x2, #360]
0xffff58237e3c  1436  lsr x2, x2, x0
0xffff58237e40  1440  tbz w2, #0, #+0x8 (addr 0xffff58237e48)
0xffff58237e44  1444  tbnz w2, #1, #+0xc (addr 0xffff58237e50)
0xffff58237e48  1448  ldp x1, x0, [jssp], #16
0xffff58237e4c  1452  ret
0xffff58237e50  1456  ldr x2, [x3]
0xffff58237e54  1460  and x0, x2, #0xfffffffffff00000
0xffff58237e58  1464  ldr x0, [x0, #8]
0xffff58237e5c  1468  tbz w0, #6, #+0x18 (addr 0xffff58237e74)
0xffff58237e60  1472  and x0, x4, #0xfffffffffff00000
0xffff58237e64  1476  ldr x0, [x0, #8]
0xffff58237e68  1480  movz x16, #0x58
0xffff58237e6c  1484  tst x0, x16
0xffff58237e70  1488  b.eq #+0x38 (addr 0xffff58237ea8)
0xffff58237e74  1492  sub csp, jssp, #0x10 (16)
0xffff58237e78  1496  stp x4, x3, [jssp, #-16]!
0xffff58237e7c  1500  ubfx x16, x2, #8, #12
0xffff58237e80  1504  and x0, x2, #0xfffffffffff00000
0xffff58237e84  1508  add x0, x0, x16, lsl #2
0xffff58237e88  1512  ubfx x4, x2, #3, #5
0xffff58237e8c  1516  ldr x3, [x0, #360]
0xffff58237e90  1520  lsr x3, x3, x4
0xffff58237e94  1524  tbz w3, #0, #+0x10 (addr 0xffff58237ea4)
0xffff58237e98  1528  ldp x4, x3, [jssp], #16
0xffff58237e9c  1532  ldp x1, x0, [jssp], #16
0xffff58237ea0  1536  ret
0xffff58237ea4  1540  ldp x4, x3, [jssp], #16
0xffff58237ea8  1544  sub csp, jssp, #0x78 (120)
0xffff58237eac  1548  stp x14, x15, [jssp, #-32]!
0xffff58237eb0  1552  stp x18, lr, [jssp, #16]
0xffff58237eb4  1556  stp x10, x11, [jssp, #-32]!
0xffff58237eb8  1560  stp x12, x13, [jssp, #16]
0xffff58237ebc  1564  stp x6, x7, [jssp, #-32]!
0xffff58237ec0  1568  stp x8, x9, [jssp, #16]
0xffff58237ec4  1572  stp x3, x4, [jssp, #-24]!
0xffff58237ec8  1576  str x5, [jssp, #16]
0xffff58237ecc  1580  sub csp, jssp, #0xb0 (176)
0xffff58237ed0  1584  stp d26, d27, [jssp, #-32]!
0xffff58237ed4  1588  stp d28, d29, [jssp, #16]
0xffff58237ed8  1592  stp d22, d23, [jssp, #-32]!
0xffff58237edc  1596  stp d24, d25, [jssp, #16]
0xffff58237ee0  1600  stp d18, d19, [jssp, #-32]!
0xffff58237ee4  1604  stp d20, d21, [jssp, #16]
0xffff58237ee8  1608  stp d6, d7, [jssp, #-32]!
0xffff58237eec  1612  stp d16, d17, [jssp, #16]
0xffff58237ef0  1616  stp d2, d3, [jssp, #-32]!
0xffff58237ef4  1620  stp d4, d5, [jssp, #16]
0xffff58237ef8  1624  stp d0, d1, [jssp, #-16]!
0xffff58237efc  1628  mov x0, x4
0xffff58237f00  1632  mov x1, x3
0xffff58237f04  1636  ldr x2, pc+268 (addr 0x0000ffff58238010)    ;; external reference (isolate)
0xffff58237f08  1640  ldr x16, pc+272 (addr 0x0000ffff58238018)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58237f0c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff58237f10  1648  blr x16
0xffff58237f14  1652  ldp d2, d3, [jssp, #16]
0xffff58237f18  1656  ldp d0, d1, [jssp], #32
0xffff58237f1c  1660  ldp d6, d7, [jssp, #16]
0xffff58237f20  1664  ldp d4, d5, [jssp], #32
0xffff58237f24  1668  ldp d18, d19, [jssp, #16]
0xffff58237f28  1672  ldp d16, d17, [jssp], #32
0xffff58237f2c  1676  ldp d22, d23, [jssp, #16]
0xffff58237f30  1680  ldp d20, d21, [jssp], #32
0xffff58237f34  1684  ldp d26, d27, [jssp, #16]
0xffff58237f38  1688  ldp d24, d25, [jssp], #32
0xffff58237f3c  1692  ldp d28, d29, [jssp], #16
0xffff58237f40  1696  ldp x5, x6, [jssp, #16]
0xffff58237f44  1700  ldp x3, x4, [jssp], #32
0xffff58237f48  1704  ldp x9, x10, [jssp, #16]
0xffff58237f4c  1708  ldp x7, x8, [jssp], #32
0xffff58237f50  1712  ldp x13, x14, [jssp, #16]
0xffff58237f54  1716  ldp x11, x12, [jssp], #32
0xffff58237f58  1720  ldr lr, [jssp, #16]
0xffff58237f5c  1724  ldp x15, x18, [jssp], #24
0xffff58237f60  1728  ldp x1, x0, [jssp], #16
0xffff58237f64  1732  ret
0xffff58237f68  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff58237f6c  1740  d63f03e0       constant
0xffff58237f70  1744  16e798c0       constant
0xffff58237f74  1748  00000000       constant
0xffff58237f78  1752  582065a0       constant
0xffff58237f7c  1756  0000ffff       constant
0xffff58237f80  1760  16e798c0       constant
0xffff58237f84  1764  00000000       constant
0xffff58237f88  1768  582065a0       constant
0xffff58237f8c  1772  0000ffff       constant
0xffff58237f90  1776  16e798c0       constant
0xffff58237f94  1780  00000000       constant
0xffff58237f98  1784  582065a0       constant
0xffff58237f9c  1788  0000ffff       constant
0xffff58237fa0  1792  16e782d0       constant
0xffff58237fa4  1796  00000000       constant
0xffff58237fa8  1800  00c2d958       constant
0xffff58237fac  1804  00000000       constant
0xffff58237fb0  1808  16e798c0       constant
0xffff58237fb4  1812  00000000       constant
0xffff58237fb8  1816  582065a0       constant
0xffff58237fbc  1820  0000ffff       constant
0xffff58237fc0  1824  16e782d0       constant
0xffff58237fc4  1828  00000000       constant
0xffff58237fc8  1832  00c2d958       constant
0xffff58237fcc  1836  00000000       constant
0xffff58237fd0  1840  16e798c0       constant
0xffff58237fd4  1844  00000000       constant
0xffff58237fd8  1848  582065a0       constant
0xffff58237fdc  1852  0000ffff       constant
0xffff58237fe0  1856  16e798c0       constant
0xffff58237fe4  1860  00000000       constant
0xffff58237fe8  1864  582065a0       constant
0xffff58237fec  1868  0000ffff       constant
0xffff58237ff0  1872  16e782d0       constant
0xffff58237ff4  1876  00000000       constant
0xffff58237ff8  1880  00c2d958       constant
0xffff58237ffc  1884  00000000       constant
0xffff58238000  1888  16e798c0       constant
0xffff58238004  1892  00000000       constant
0xffff58238008  1896  582065a0       constant
0xffff5823800c  1900  0000ffff       constant
0xffff58238010  1904  16e782d0       constant
0xffff58238014  1908  00000000       constant
0xffff58238018  1912  00c2d958       constant
0xffff5823801c  1916  00000000       constant


RelocInfo (size = 65)
0xffff582378a8  external reference (store_buffer_top)  (0x16e798c0)
0xffff582378cc  code target (STUB)  (0xffff582065a0)
0xffff58237944  external reference (store_buffer_top)  (0x16e798c0)
0xffff58237968  code target (STUB)  (0xffff582065a0)
0xffff582379a8  external reference (store_buffer_top)  (0x16e798c0)
0xffff582379cc  code target (STUB)  (0xffff582065a0)
0xffff58237a3c  external reference (isolate)  (0x16e782d0)
0xffff58237a40  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58237a9c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58237ac0  code target (STUB)  (0xffff582065a0)
0xffff58237ba0  external reference (isolate)  (0x16e782d0)
0xffff58237ba4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58237c68  external reference (store_buffer_top)  (0x16e798c0)
0xffff58237c8c  code target (STUB)  (0xffff582065a0)
0xffff58237cec  external reference (store_buffer_top)  (0x16e798c0)
0xffff58237d10  code target (STUB)  (0xffff582065a0)
0xffff58237d80  external reference (isolate)  (0x16e782d0)
0xffff58237d84  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58237de0  external reference (store_buffer_top)  (0x16e798c0)
0xffff58237e04  code target (STUB)  (0xffff582065a0)
0xffff58237f04  external reference (isolate)  (0x16e782d0)
0xffff58237f08  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58237f68  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff58238080     0  adr xzr, #+0x40 (addr 0xffff582380c0)
0xffff58238084     4  adr xzr, #+0x360 (addr 0xffff582383e4)
0xffff58238088     8  ldr x16, pc+1736 (addr 0x0000ffff58238750)    ;; external reference (store_buffer_top)
0xffff5823808c    12  ldr x5, [x16]
0xffff58238090    16  str x2, [x5], #8
0xffff58238094    20  str x5, [x16]
0xffff58238098    24  tst x5, #0x1ffff
0xffff5823809c    28  b.eq #+0x8 (addr 0xffff582380a4)
0xffff582380a0    32  ret
0xffff582380a4    36  sub csp, jssp, #0x8 (8)
0xffff582380a8    40  str lr, [jssp, #-8]!
0xffff582380ac    44  ldr x17, pc+1708 (addr 0x0000ffff58238758)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582380b0    48  blr x17
0xffff582380b4    52  ldr lr, [jssp], #8
0xffff582380b8    56  ret
0xffff582380bc    60  ret
0xffff582380c0    64  sub csp, jssp, #0x10 (16)
0xffff582380c4    68  stp x3, x0, [jssp, #-16]!
0xffff582380c8    72  ldr x5, [x2]
0xffff582380cc    76  and x16, x5, #0xfffffffffff00000
0xffff582380d0    80  ldr x16, [x16, #8]
0xffff582380d4    84  tst x16, #0x18
0xffff582380d8    88  b.eq #+0x1d8 (addr 0xffff582382b0)
0xffff582380dc    92  and x16, x1, #0xfffffffffff00000
0xffff582380e0    96  ldr x16, [x16, #8]
0xffff582380e4   100  tst x16, #0x18
0xffff582380e8   104  b.ne #+0x1c8 (addr 0xffff582382b0)
0xffff582380ec   108  and x5, x1, #0xfffffffffff00000
0xffff582380f0   112  ldr x0, [x5, #104]
0xffff582380f4   116  subs x0, x0, #0x1 (1)
0xffff582380f8   120  str x0, [x5, #104]
0xffff582380fc   124  b.mi #+0xc4 (addr 0xffff582381c0)
0xffff58238100   128  ubfx x16, x1, #8, #12
0xffff58238104   132  and x5, x1, #0xfffffffffff00000
0xffff58238108   136  add x5, x5, x16, lsl #2
0xffff5823810c   140  ubfx x0, x1, #3, #5
0xffff58238110   144  ldr x5, [x5, #360]
0xffff58238114   148  lsr x5, x5, x0
0xffff58238118   152  tbz w5, #0, #+0x8 (addr 0xffff58238120)
0xffff5823811c   156  tbnz w5, #1, #+0x3c (addr 0xffff58238158)
0xffff58238120   160  ldp x3, x0, [jssp], #16
0xffff58238124   164  ldr x16, pc+1596 (addr 0x0000ffff58238760)    ;; external reference (store_buffer_top)
0xffff58238128   168  ldr x5, [x16]
0xffff5823812c   172  str x2, [x5], #8
0xffff58238130   176  str x5, [x16]
0xffff58238134   180  tst x5, #0x1ffff
0xffff58238138   184  b.eq #+0x8 (addr 0xffff58238140)
0xffff5823813c   188  ret
0xffff58238140   192  sub csp, jssp, #0x8 (8)
0xffff58238144   196  str lr, [jssp, #-8]!
0xffff58238148   200  ldr x17, pc+1568 (addr 0x0000ffff58238768)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5823814c   204  blr x17
0xffff58238150   208  ldr lr, [jssp], #8
0xffff58238154   212  ret
0xffff58238158   216  ldr x5, [x2]
0xffff5823815c   220  sub csp, jssp, #0x10 (16)
0xffff58238160   224  stp x1, x2, [jssp, #-16]!
0xffff58238164   228  ubfx x16, x5, #8, #12
0xffff58238168   232  and x0, x5, #0xfffffffffff00000
0xffff5823816c   236  add x0, x0, x16, lsl #2
0xffff58238170   240  ubfx x1, x5, #3, #5
0xffff58238174   244  ldr x2, [x0, #360]
0xffff58238178   248  lsr x2, x2, x1
0xffff5823817c   252  tbz w2, #0, #+0x40 (addr 0xffff582381bc)
0xffff58238180   256  ldp x1, x2, [jssp], #16
0xffff58238184   260  ldp x3, x0, [jssp], #16
0xffff58238188   264  ldr x16, pc+1512 (addr 0x0000ffff58238770)    ;; external reference (store_buffer_top)
0xffff5823818c   268  ldr x5, [x16]
0xffff58238190   272  str x2, [x5], #8
0xffff58238194   276  str x5, [x16]
0xffff58238198   280  tst x5, #0x1ffff
0xffff5823819c   284  b.eq #+0x8 (addr 0xffff582381a4)
0xffff582381a0   288  ret
0xffff582381a4   292  sub csp, jssp, #0x8 (8)
0xffff582381a8   296  str lr, [jssp, #-8]!
0xffff582381ac   300  ldr x17, pc+1484 (addr 0x0000ffff58238778)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582381b0   304  blr x17
0xffff582381b4   308  ldr lr, [jssp], #8
0xffff582381b8   312  ret
0xffff582381bc   316  ldp x1, x2, [jssp], #16
0xffff582381c0   320  sub csp, jssp, #0x78 (120)
0xffff582381c4   324  stp x14, x15, [jssp, #-32]!
0xffff582381c8   328  stp x18, lr, [jssp, #16]
0xffff582381cc   332  stp x10, x11, [jssp, #-32]!
0xffff582381d0   336  stp x12, x13, [jssp, #16]
0xffff582381d4   340  stp x6, x7, [jssp, #-32]!
0xffff582381d8   344  stp x8, x9, [jssp, #16]
0xffff582381dc   348  stp x1, x2, [jssp, #-24]!
0xffff582381e0   352  str x4, [jssp, #16]
0xffff582381e4   356  sub csp, jssp, #0xb0 (176)
0xffff582381e8   360  stp d26, d27, [jssp, #-32]!
0xffff582381ec   364  stp d28, d29, [jssp, #16]
0xffff582381f0   368  stp d22, d23, [jssp, #-32]!
0xffff582381f4   372  stp d24, d25, [jssp, #16]
0xffff582381f8   376  stp d18, d19, [jssp, #-32]!
0xffff582381fc   380  stp d20, d21, [jssp, #16]
0xffff58238200   384  stp d6, d7, [jssp, #-32]!
0xffff58238204   388  stp d16, d17, [jssp, #16]
0xffff58238208   392  stp d2, d3, [jssp, #-32]!
0xffff5823820c   396  stp d4, d5, [jssp, #16]
0xffff58238210   400  stp d0, d1, [jssp, #-16]!
0xffff58238214   404  mov x0, x1
0xffff58238218   408  mov x1, x2
0xffff5823821c   412  ldr x2, pc+1380 (addr 0x0000ffff58238780)    ;; external reference (isolate)
0xffff58238220   416  ldr x16, pc+1384 (addr 0x0000ffff58238788)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58238224   420  and csp, jssp, #0xfffffffffffffff0
0xffff58238228   424  blr x16
0xffff5823822c   428  ldp d2, d3, [jssp, #16]
0xffff58238230   432  ldp d0, d1, [jssp], #32
0xffff58238234   436  ldp d6, d7, [jssp, #16]
0xffff58238238   440  ldp d4, d5, [jssp], #32
0xffff5823823c   444  ldp d18, d19, [jssp, #16]
0xffff58238240   448  ldp d16, d17, [jssp], #32
0xffff58238244   452  ldp d22, d23, [jssp, #16]
0xffff58238248   456  ldp d20, d21, [jssp], #32
0xffff5823824c   460  ldp d26, d27, [jssp, #16]
0xffff58238250   464  ldp d24, d25, [jssp], #32
0xffff58238254   468  ldp d28, d29, [jssp], #16
0xffff58238258   472  ldp x4, x6, [jssp, #16]
0xffff5823825c   476  ldp x1, x2, [jssp], #32
0xffff58238260   480  ldp x9, x10, [jssp, #16]
0xffff58238264   484  ldp x7, x8, [jssp], #32
0xffff58238268   488  ldp x13, x14, [jssp, #16]
0xffff5823826c   492  ldp x11, x12, [jssp], #32
0xffff58238270   496  ldr lr, [jssp, #16]
0xffff58238274   500  ldp x15, x18, [jssp], #24
0xffff58238278   504  ldp x3, x0, [jssp], #16
0xffff5823827c   508  ldr x16, pc+1300 (addr 0x0000ffff58238790)    ;; external reference (store_buffer_top)
0xffff58238280   512  ldr x5, [x16]
0xffff58238284   516  str x2, [x5], #8
0xffff58238288   520  str x5, [x16]
0xffff5823828c   524  tst x5, #0x1ffff
0xffff58238290   528  b.eq #+0x8 (addr 0xffff58238298)
0xffff58238294   532  ret
0xffff58238298   536  sub csp, jssp, #0x8 (8)
0xffff5823829c   540  str lr, [jssp, #-8]!
0xffff582382a0   544  ldr x17, pc+1272 (addr 0x0000ffff58238798)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582382a4   548  blr x17
0xffff582382a8   552  ldr lr, [jssp], #8
0xffff582382ac   556  ret
0xffff582382b0   560  and x5, x1, #0xfffffffffff00000
0xffff582382b4   564  ldr x0, [x5, #104]
0xffff582382b8   568  subs x0, x0, #0x1 (1)
0xffff582382bc   572  str x0, [x5, #104]
0xffff582382c0   576  b.mi #+0x64 (addr 0xffff58238324)
0xffff582382c4   580  ubfx x16, x1, #8, #12
0xffff582382c8   584  and x5, x1, #0xfffffffffff00000
0xffff582382cc   588  add x5, x5, x16, lsl #2
0xffff582382d0   592  ubfx x0, x1, #3, #5
0xffff582382d4   596  ldr x5, [x5, #360]
0xffff582382d8   600  lsr x5, x5, x0
0xffff582382dc   604  tbz w5, #0, #+0x8 (addr 0xffff582382e4)
0xffff582382e0   608  tbnz w5, #1, #+0xc (addr 0xffff582382ec)
0xffff582382e4   612  ldp x3, x0, [jssp], #16
0xffff582382e8   616  ret
0xffff582382ec   620  ldr x5, [x2]
0xffff582382f0   624  sub csp, jssp, #0x10 (16)
0xffff582382f4   628  stp x1, x2, [jssp, #-16]!
0xffff582382f8   632  ubfx x16, x5, #8, #12
0xffff582382fc   636  and x0, x5, #0xfffffffffff00000
0xffff58238300   640  add x0, x0, x16, lsl #2
0xffff58238304   644  ubfx x1, x5, #3, #5
0xffff58238308   648  ldr x2, [x0, #360]
0xffff5823830c   652  lsr x2, x2, x1
0xffff58238310   656  tbz w2, #0, #+0x10 (addr 0xffff58238320)
0xffff58238314   660  ldp x1, x2, [jssp], #16
0xffff58238318   664  ldp x3, x0, [jssp], #16
0xffff5823831c   668  ret
0xffff58238320   672  ldp x1, x2, [jssp], #16
0xffff58238324   676  sub csp, jssp, #0x78 (120)
0xffff58238328   680  stp x14, x15, [jssp, #-32]!
0xffff5823832c   684  stp x18, lr, [jssp, #16]
0xffff58238330   688  stp x10, x11, [jssp, #-32]!
0xffff58238334   692  stp x12, x13, [jssp, #16]
0xffff58238338   696  stp x6, x7, [jssp, #-32]!
0xffff5823833c   700  stp x8, x9, [jssp, #16]
0xffff58238340   704  stp x1, x2, [jssp, #-24]!
0xffff58238344   708  str x4, [jssp, #16]
0xffff58238348   712  sub csp, jssp, #0xb0 (176)
0xffff5823834c   716  stp d26, d27, [jssp, #-32]!
0xffff58238350   720  stp d28, d29, [jssp, #16]
0xffff58238354   724  stp d22, d23, [jssp, #-32]!
0xffff58238358   728  stp d24, d25, [jssp, #16]
0xffff5823835c   732  stp d18, d19, [jssp, #-32]!
0xffff58238360   736  stp d20, d21, [jssp, #16]
0xffff58238364   740  stp d6, d7, [jssp, #-32]!
0xffff58238368   744  stp d16, d17, [jssp, #16]
0xffff5823836c   748  stp d2, d3, [jssp, #-32]!
0xffff58238370   752  stp d4, d5, [jssp, #16]
0xffff58238374   756  stp d0, d1, [jssp, #-16]!
0xffff58238378   760  mov x0, x1
0xffff5823837c   764  mov x1, x2
0xffff58238380   768  ldr x2, pc+1056 (addr 0x0000ffff582387a0)    ;; external reference (isolate)
0xffff58238384   772  ldr x16, pc+1060 (addr 0x0000ffff582387a8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58238388   776  and csp, jssp, #0xfffffffffffffff0
0xffff5823838c   780  blr x16
0xffff58238390   784  ldp d2, d3, [jssp, #16]
0xffff58238394   788  ldp d0, d1, [jssp], #32
0xffff58238398   792  ldp d6, d7, [jssp, #16]
0xffff5823839c   796  ldp d4, d5, [jssp], #32
0xffff582383a0   800  ldp d18, d19, [jssp, #16]
0xffff582383a4   804  ldp d16, d17, [jssp], #32
0xffff582383a8   808  ldp d22, d23, [jssp, #16]
0xffff582383ac   812  ldp d20, d21, [jssp], #32
0xffff582383b0   816  ldp d26, d27, [jssp, #16]
0xffff582383b4   820  ldp d24, d25, [jssp], #32
0xffff582383b8   824  ldp d28, d29, [jssp], #16
0xffff582383bc   828  ldp x4, x6, [jssp, #16]
0xffff582383c0   832  ldp x1, x2, [jssp], #32
0xffff582383c4   836  ldp x9, x10, [jssp, #16]
0xffff582383c8   840  ldp x7, x8, [jssp], #32
0xffff582383cc   844  ldp x13, x14, [jssp, #16]
0xffff582383d0   848  ldp x11, x12, [jssp], #32
0xffff582383d4   852  ldr lr, [jssp, #16]
0xffff582383d8   856  ldp x15, x18, [jssp], #24
0xffff582383dc   860  ldp x3, x0, [jssp], #16
0xffff582383e0   864  ret
0xffff582383e4   868  sub csp, jssp, #0x10 (16)
0xffff582383e8   872  stp x3, x0, [jssp, #-16]!
0xffff582383ec   876  ldr x5, [x2]
0xffff582383f0   880  and x16, x5, #0xfffffffffff00000
0xffff582383f4   884  ldr x16, [x16, #8]
0xffff582383f8   888  tst x16, #0x18
0xffff582383fc   892  b.eq #+0x1f8 (addr 0xffff582385f4)
0xffff58238400   896  and x16, x1, #0xfffffffffff00000
0xffff58238404   900  ldr x16, [x16, #8]
0xffff58238408   904  tst x16, #0x18
0xffff5823840c   908  b.ne #+0x1e8 (addr 0xffff582385f4)
0xffff58238410   912  and x5, x1, #0xfffffffffff00000
0xffff58238414   916  ldr x0, [x5, #104]
0xffff58238418   920  subs x0, x0, #0x1 (1)
0xffff5823841c   924  str x0, [x5, #104]
0xffff58238420   928  b.mi #+0xe4 (addr 0xffff58238504)
0xffff58238424   932  ubfx x16, x1, #8, #12
0xffff58238428   936  and x5, x1, #0xfffffffffff00000
0xffff5823842c   940  add x5, x5, x16, lsl #2
0xffff58238430   944  ubfx x0, x1, #3, #5
0xffff58238434   948  ldr x5, [x5, #360]
0xffff58238438   952  lsr x5, x5, x0
0xffff5823843c   956  tbz w5, #0, #+0x8 (addr 0xffff58238444)
0xffff58238440   960  tbnz w5, #1, #+0x3c (addr 0xffff5823847c)
0xffff58238444   964  ldp x3, x0, [jssp], #16
0xffff58238448   968  ldr x16, pc+872 (addr 0x0000ffff582387b0)    ;; external reference (store_buffer_top)
0xffff5823844c   972  ldr x5, [x16]
0xffff58238450   976  str x2, [x5], #8
0xffff58238454   980  str x5, [x16]
0xffff58238458   984  tst x5, #0x1ffff
0xffff5823845c   988  b.eq #+0x8 (addr 0xffff58238464)
0xffff58238460   992  ret
0xffff58238464   996  sub csp, jssp, #0x8 (8)
0xffff58238468  1000  str lr, [jssp, #-8]!
0xffff5823846c  1004  ldr x17, pc+844 (addr 0x0000ffff582387b8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58238470  1008  blr x17
0xffff58238474  1012  ldr lr, [jssp], #8
0xffff58238478  1016  ret
0xffff5823847c  1020  ldr x5, [x2]
0xffff58238480  1024  and x0, x5, #0xfffffffffff00000
0xffff58238484  1028  ldr x0, [x0, #8]
0xffff58238488  1032  tbz w0, #6, #+0x18 (addr 0xffff582384a0)
0xffff5823848c  1036  and x0, x1, #0xfffffffffff00000
0xffff58238490  1040  ldr x0, [x0, #8]
0xffff58238494  1044  movz x16, #0x58
0xffff58238498  1048  tst x0, x16
0xffff5823849c  1052  b.eq #+0x68 (addr 0xffff58238504)
0xffff582384a0  1056  sub csp, jssp, #0x10 (16)
0xffff582384a4  1060  stp x1, x2, [jssp, #-16]!
0xffff582384a8  1064  ubfx x16, x5, #8, #12
0xffff582384ac  1068  and x0, x5, #0xfffffffffff00000
0xffff582384b0  1072  add x0, x0, x16, lsl #2
0xffff582384b4  1076  ubfx x1, x5, #3, #5
0xffff582384b8  1080  ldr x2, [x0, #360]
0xffff582384bc  1084  lsr x2, x2, x1
0xffff582384c0  1088  tbz w2, #0, #+0x40 (addr 0xffff58238500)
0xffff582384c4  1092  ldp x1, x2, [jssp], #16
0xffff582384c8  1096  ldp x3, x0, [jssp], #16
0xffff582384cc  1100  ldr x16, pc+756 (addr 0x0000ffff582387c0)    ;; external reference (store_buffer_top)
0xffff582384d0  1104  ldr x5, [x16]
0xffff582384d4  1108  str x2, [x5], #8
0xffff582384d8  1112  str x5, [x16]
0xffff582384dc  1116  tst x5, #0x1ffff
0xffff582384e0  1120  b.eq #+0x8 (addr 0xffff582384e8)
0xffff582384e4  1124  ret
0xffff582384e8  1128  sub csp, jssp, #0x8 (8)
0xffff582384ec  1132  str lr, [jssp, #-8]!
0xffff582384f0  1136  ldr x17, pc+728 (addr 0x0000ffff582387c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582384f4  1140  blr x17
0xffff582384f8  1144  ldr lr, [jssp], #8
0xffff582384fc  1148  ret
0xffff58238500  1152  ldp x1, x2, [jssp], #16
0xffff58238504  1156  sub csp, jssp, #0x78 (120)
0xffff58238508  1160  stp x14, x15, [jssp, #-32]!
0xffff5823850c  1164  stp x18, lr, [jssp, #16]
0xffff58238510  1168  stp x10, x11, [jssp, #-32]!
0xffff58238514  1172  stp x12, x13, [jssp, #16]
0xffff58238518  1176  stp x6, x7, [jssp, #-32]!
0xffff5823851c  1180  stp x8, x9, [jssp, #16]
0xffff58238520  1184  stp x1, x2, [jssp, #-24]!
0xffff58238524  1188  str x4, [jssp, #16]
0xffff58238528  1192  sub csp, jssp, #0xb0 (176)
0xffff5823852c  1196  stp d26, d27, [jssp, #-32]!
0xffff58238530  1200  stp d28, d29, [jssp, #16]
0xffff58238534  1204  stp d22, d23, [jssp, #-32]!
0xffff58238538  1208  stp d24, d25, [jssp, #16]
0xffff5823853c  1212  stp d18, d19, [jssp, #-32]!
0xffff58238540  1216  stp d20, d21, [jssp, #16]
0xffff58238544  1220  stp d6, d7, [jssp, #-32]!
0xffff58238548  1224  stp d16, d17, [jssp, #16]
0xffff5823854c  1228  stp d2, d3, [jssp, #-32]!
0xffff58238550  1232  stp d4, d5, [jssp, #16]
0xffff58238554  1236  stp d0, d1, [jssp, #-16]!
0xffff58238558  1240  mov x0, x1
0xffff5823855c  1244  mov x1, x2
0xffff58238560  1248  ldr x2, pc+624 (addr 0x0000ffff582387d0)    ;; external reference (isolate)
0xffff58238564  1252  ldr x16, pc+628 (addr 0x0000ffff582387d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58238568  1256  and csp, jssp, #0xfffffffffffffff0
0xffff5823856c  1260  blr x16
0xffff58238570  1264  ldp d2, d3, [jssp, #16]
0xffff58238574  1268  ldp d0, d1, [jssp], #32
0xffff58238578  1272  ldp d6, d7, [jssp, #16]
0xffff5823857c  1276  ldp d4, d5, [jssp], #32
0xffff58238580  1280  ldp d18, d19, [jssp, #16]
0xffff58238584  1284  ldp d16, d17, [jssp], #32
0xffff58238588  1288  ldp d22, d23, [jssp, #16]
0xffff5823858c  1292  ldp d20, d21, [jssp], #32
0xffff58238590  1296  ldp d26, d27, [jssp, #16]
0xffff58238594  1300  ldp d24, d25, [jssp], #32
0xffff58238598  1304  ldp d28, d29, [jssp], #16
0xffff5823859c  1308  ldp x4, x6, [jssp, #16]
0xffff582385a0  1312  ldp x1, x2, [jssp], #32
0xffff582385a4  1316  ldp x9, x10, [jssp, #16]
0xffff582385a8  1320  ldp x7, x8, [jssp], #32
0xffff582385ac  1324  ldp x13, x14, [jssp, #16]
0xffff582385b0  1328  ldp x11, x12, [jssp], #32
0xffff582385b4  1332  ldr lr, [jssp, #16]
0xffff582385b8  1336  ldp x15, x18, [jssp], #24
0xffff582385bc  1340  ldp x3, x0, [jssp], #16
0xffff582385c0  1344  ldr x16, pc+544 (addr 0x0000ffff582387e0)    ;; external reference (store_buffer_top)
0xffff582385c4  1348  ldr x5, [x16]
0xffff582385c8  1352  str x2, [x5], #8
0xffff582385cc  1356  str x5, [x16]
0xffff582385d0  1360  tst x5, #0x1ffff
0xffff582385d4  1364  b.eq #+0x8 (addr 0xffff582385dc)
0xffff582385d8  1368  ret
0xffff582385dc  1372  sub csp, jssp, #0x8 (8)
0xffff582385e0  1376  str lr, [jssp, #-8]!
0xffff582385e4  1380  ldr x17, pc+516 (addr 0x0000ffff582387e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582385e8  1384  blr x17
0xffff582385ec  1388  ldr lr, [jssp], #8
0xffff582385f0  1392  ret
0xffff582385f4  1396  and x5, x1, #0xfffffffffff00000
0xffff582385f8  1400  ldr x0, [x5, #104]
0xffff582385fc  1404  subs x0, x0, #0x1 (1)
0xffff58238600  1408  str x0, [x5, #104]
0xffff58238604  1412  b.mi #+0x84 (addr 0xffff58238688)
0xffff58238608  1416  ubfx x16, x1, #8, #12
0xffff5823860c  1420  and x5, x1, #0xfffffffffff00000
0xffff58238610  1424  add x5, x5, x16, lsl #2
0xffff58238614  1428  ubfx x0, x1, #3, #5
0xffff58238618  1432  ldr x5, [x5, #360]
0xffff5823861c  1436  lsr x5, x5, x0
0xffff58238620  1440  tbz w5, #0, #+0x8 (addr 0xffff58238628)
0xffff58238624  1444  tbnz w5, #1, #+0xc (addr 0xffff58238630)
0xffff58238628  1448  ldp x3, x0, [jssp], #16
0xffff5823862c  1452  ret
0xffff58238630  1456  ldr x5, [x2]
0xffff58238634  1460  and x0, x5, #0xfffffffffff00000
0xffff58238638  1464  ldr x0, [x0, #8]
0xffff5823863c  1468  tbz w0, #6, #+0x18 (addr 0xffff58238654)
0xffff58238640  1472  and x0, x1, #0xfffffffffff00000
0xffff58238644  1476  ldr x0, [x0, #8]
0xffff58238648  1480  movz x16, #0x58
0xffff5823864c  1484  tst x0, x16
0xffff58238650  1488  b.eq #+0x38 (addr 0xffff58238688)
0xffff58238654  1492  sub csp, jssp, #0x10 (16)
0xffff58238658  1496  stp x1, x2, [jssp, #-16]!
0xffff5823865c  1500  ubfx x16, x5, #8, #12
0xffff58238660  1504  and x0, x5, #0xfffffffffff00000
0xffff58238664  1508  add x0, x0, x16, lsl #2
0xffff58238668  1512  ubfx x1, x5, #3, #5
0xffff5823866c  1516  ldr x2, [x0, #360]
0xffff58238670  1520  lsr x2, x2, x1
0xffff58238674  1524  tbz w2, #0, #+0x10 (addr 0xffff58238684)
0xffff58238678  1528  ldp x1, x2, [jssp], #16
0xffff5823867c  1532  ldp x3, x0, [jssp], #16
0xffff58238680  1536  ret
0xffff58238684  1540  ldp x1, x2, [jssp], #16
0xffff58238688  1544  sub csp, jssp, #0x78 (120)
0xffff5823868c  1548  stp x14, x15, [jssp, #-32]!
0xffff58238690  1552  stp x18, lr, [jssp, #16]
0xffff58238694  1556  stp x10, x11, [jssp, #-32]!
0xffff58238698  1560  stp x12, x13, [jssp, #16]
0xffff5823869c  1564  stp x6, x7, [jssp, #-32]!
0xffff582386a0  1568  stp x8, x9, [jssp, #16]
0xffff582386a4  1572  stp x1, x2, [jssp, #-24]!
0xffff582386a8  1576  str x4, [jssp, #16]
0xffff582386ac  1580  sub csp, jssp, #0xb0 (176)
0xffff582386b0  1584  stp d26, d27, [jssp, #-32]!
0xffff582386b4  1588  stp d28, d29, [jssp, #16]
0xffff582386b8  1592  stp d22, d23, [jssp, #-32]!
0xffff582386bc  1596  stp d24, d25, [jssp, #16]
0xffff582386c0  1600  stp d18, d19, [jssp, #-32]!
0xffff582386c4  1604  stp d20, d21, [jssp, #16]
0xffff582386c8  1608  stp d6, d7, [jssp, #-32]!
0xffff582386cc  1612  stp d16, d17, [jssp, #16]
0xffff582386d0  1616  stp d2, d3, [jssp, #-32]!
0xffff582386d4  1620  stp d4, d5, [jssp, #16]
0xffff582386d8  1624  stp d0, d1, [jssp, #-16]!
0xffff582386dc  1628  mov x0, x1
0xffff582386e0  1632  mov x1, x2
0xffff582386e4  1636  ldr x2, pc+268 (addr 0x0000ffff582387f0)    ;; external reference (isolate)
0xffff582386e8  1640  ldr x16, pc+272 (addr 0x0000ffff582387f8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582386ec  1644  and csp, jssp, #0xfffffffffffffff0
0xffff582386f0  1648  blr x16
0xffff582386f4  1652  ldp d2, d3, [jssp, #16]
0xffff582386f8  1656  ldp d0, d1, [jssp], #32
0xffff582386fc  1660  ldp d6, d7, [jssp, #16]
0xffff58238700  1664  ldp d4, d5, [jssp], #32
0xffff58238704  1668  ldp d18, d19, [jssp, #16]
0xffff58238708  1672  ldp d16, d17, [jssp], #32
0xffff5823870c  1676  ldp d22, d23, [jssp, #16]
0xffff58238710  1680  ldp d20, d21, [jssp], #32
0xffff58238714  1684  ldp d26, d27, [jssp, #16]
0xffff58238718  1688  ldp d24, d25, [jssp], #32
0xffff5823871c  1692  ldp d28, d29, [jssp], #16
0xffff58238720  1696  ldp x4, x6, [jssp, #16]
0xffff58238724  1700  ldp x1, x2, [jssp], #32
0xffff58238728  1704  ldp x9, x10, [jssp, #16]
0xffff5823872c  1708  ldp x7, x8, [jssp], #32
0xffff58238730  1712  ldp x13, x14, [jssp, #16]
0xffff58238734  1716  ldp x11, x12, [jssp], #32
0xffff58238738  1720  ldr lr, [jssp, #16]
0xffff5823873c  1724  ldp x15, x18, [jssp], #24
0xffff58238740  1728  ldp x3, x0, [jssp], #16
0xffff58238744  1732  ret
0xffff58238748  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5823874c  1740  d63f03e0       constant
0xffff58238750  1744  16e798c0       constant
0xffff58238754  1748  00000000       constant
0xffff58238758  1752  582065a0       constant
0xffff5823875c  1756  0000ffff       constant
0xffff58238760  1760  16e798c0       constant
0xffff58238764  1764  00000000       constant
0xffff58238768  1768  582065a0       constant
0xffff5823876c  1772  0000ffff       constant
0xffff58238770  1776  16e798c0       constant
0xffff58238774  1780  00000000       constant
0xffff58238778  1784  582065a0       constant
0xffff5823877c  1788  0000ffff       constant
0xffff58238780  1792  16e782d0       constant
0xffff58238784  1796  00000000       constant
0xffff58238788  1800  00c2d958       constant
0xffff5823878c  1804  00000000       constant
0xffff58238790  1808  16e798c0       constant
0xffff58238794  1812  00000000       constant
0xffff58238798  1816  582065a0       constant
0xffff5823879c  1820  0000ffff       constant
0xffff582387a0  1824  16e782d0       constant
0xffff582387a4  1828  00000000       constant
0xffff582387a8  1832  00c2d958       constant
0xffff582387ac  1836  00000000       constant
0xffff582387b0  1840  16e798c0       constant
0xffff582387b4  1844  00000000       constant
0xffff582387b8  1848  582065a0       constant
0xffff582387bc  1852  0000ffff       constant
0xffff582387c0  1856  16e798c0       constant
0xffff582387c4  1860  00000000       constant
0xffff582387c8  1864  582065a0       constant
0xffff582387cc  1868  0000ffff       constant
0xffff582387d0  1872  16e782d0       constant
0xffff582387d4  1876  00000000       constant
0xffff582387d8  1880  00c2d958       constant
0xffff582387dc  1884  00000000       constant
0xffff582387e0  1888  16e798c0       constant
0xffff582387e4  1892  00000000       constant
0xffff582387e8  1896  582065a0       constant
0xffff582387ec  1900  0000ffff       constant
0xffff582387f0  1904  16e782d0       constant
0xffff582387f4  1908  00000000       constant
0xffff582387f8  1912  00c2d958       constant
0xffff582387fc  1916  00000000       constant


RelocInfo (size = 65)
0xffff58238088  external reference (store_buffer_top)  (0x16e798c0)
0xffff582380ac  code target (STUB)  (0xffff582065a0)
0xffff58238124  external reference (store_buffer_top)  (0x16e798c0)
0xffff58238148  code target (STUB)  (0xffff582065a0)
0xffff58238188  external reference (store_buffer_top)  (0x16e798c0)
0xffff582381ac  code target (STUB)  (0xffff582065a0)
0xffff5823821c  external reference (isolate)  (0x16e782d0)
0xffff58238220  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5823827c  external reference (store_buffer_top)  (0x16e798c0)
0xffff582382a0  code target (STUB)  (0xffff582065a0)
0xffff58238380  external reference (isolate)  (0x16e782d0)
0xffff58238384  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58238448  external reference (store_buffer_top)  (0x16e798c0)
0xffff5823846c  code target (STUB)  (0xffff582065a0)
0xffff582384cc  external reference (store_buffer_top)  (0x16e798c0)
0xffff582384f0  code target (STUB)  (0xffff582065a0)
0xffff58238560  external reference (isolate)  (0x16e782d0)
0xffff58238564  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582385c0  external reference (store_buffer_top)  (0x16e798c0)
0xffff582385e4  code target (STUB)  (0xffff582065a0)
0xffff582386e4  external reference (isolate)  (0x16e782d0)
0xffff582386e8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58238748  constant pool (size 184)


kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff58238860     0  ldur x6, [x1, #7]
0xffff58238864     4  ldur w7, [x6, #11]
0xffff58238868     8  adds w8, w7, #0x3 (3)
0xffff5823886c    12  b.vs #+0x1dc (addr 0xffff58238a48)
0xffff58238870    16  movz w16, #0x95ff
0xffff58238874    20  cmp w8, w16, lsl #1
0xffff58238878    24  b.hs #+0x1e0 (addr 0xffff58238a58)
0xffff5823887c    28  lsl x9, x8, #32
0xffff58238880    32  lsl w10, w8, #3
0xffff58238884    36  add w10, w10, #0x10 (16)
0xffff58238888    40  sxtw x10, w10
0xffff5823888c    44  movz x11, #0x92c0
0xffff58238890    48  movk x11, #0x16e7, lsl #16
0xffff58238894    52  ldp x13, x16, [x11]
0xffff58238898    56  adds x12, x13, x10
0xffff5823889c    60  ccmp x12, x16, #nzCv, lo
0xffff582388a0    64  b.hi #+0xf8 (addr 0xffff58238998)
0xffff582388a4    68  str x12, [x11]
0xffff582388a8    72  orr x13, x13, #0x1
0xffff582388ac    76  ldr x10, pc+348 (addr 0x0000ffff58238a08)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582388b0    80  stur x10, [x13, #-1]
0xffff582388b4    84  stur x9, [x13, #7]
0xffff582388b8    88  cmp w7, w8
0xffff582388bc    92  b.ge #+0x18 (addr 0xffff582388d4)
0xffff582388c0    96  sub w8, w8, #0x1 (1)
0xffff582388c4   100  ldr x9, pc+332 (addr 0x0000ffff58238a10)    ;; object: 0x39c04241 <undefined>
0xffff582388c8   104  add x10, x13, #0xf (15)
0xffff582388cc   108  str x9, [x10, w8, sxtw #3]
0xffff582388d0   112  b #-0x18 (addr 0xffff582388b8)
0xffff582388d4   116  cmp w7, #0x0 (0)
0xffff582388d8   120  b.le #+0x1c (addr 0xffff582388f4)
0xffff582388dc   124  sub w7, w7, #0x1 (1)
0xffff582388e0   128  add x8, x6, #0xf (15)
0xffff582388e4   132  ldr x9, [x8, w7, sxtw #3]
0xffff582388e8   136  add x8, x13, #0xf (15)
0xffff582388ec   140  str x9, [x8, w7, sxtw #3]
0xffff582388f0   144  b #-0x1c (addr 0xffff582388d4)
0xffff582388f4   148  stur x13, [x1, #7]
0xffff582388f8   152  add x6, x1, #0x7 (7)
0xffff582388fc   156  and x13, x1, #0xfffffffffff00000
0xffff58238900   160  ldr x13, [x13, #8]
0xffff58238904   164  tbz w13, #2, #+0x18 (addr 0xffff5823891c)
0xffff58238908   168  sub csp, jssp, #0x8 (8)
0xffff5823890c   172  str lr, [jssp, #-8]!
0xffff58238910   176  ldr x16, pc+264 (addr 0x0000ffff58238a18)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff58238914   180  blr x16
0xffff58238918   184  ldr lr, [jssp], #8
0xffff5823891c   188  tbz w0, #0, #+0x14c (addr 0xffff58238a68)
0xffff58238920   192  mov x2, x0
0xffff58238924   196  ldur x4, [x1, #7]
0xffff58238928   200  stur x2, [x4, #15]
0xffff5823892c   204  add x3, x4, #0xf (15)
0xffff58238930   208  and x2, x2, #0xfffffffffff00000
0xffff58238934   212  ldr x2, [x2, #8]
0xffff58238938   216  tbz w2, #1, #+0x24 (addr 0xffff5823895c)
0xffff5823893c   220  and x2, x4, #0xfffffffffff00000
0xffff58238940   224  ldr x2, [x2, #8]
0xffff58238944   228  tbz w2, #2, #+0x18 (addr 0xffff5823895c)
0xffff58238948   232  sub csp, jssp, #0x8 (8)
0xffff5823894c   236  str lr, [jssp, #-8]!
0xffff58238950   240  ldr x16, pc+208 (addr 0x0000ffff58238a20)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff58238954   244  blr x16
0xffff58238958   248  ldr lr, [jssp], #8
0xffff5823895c   252  stur x5, [x1, #-1]
0xffff58238960   256  tbz w5, #0, #+0x34 (addr 0xffff58238994)
0xffff58238964   260  sub x2, x1, #0x1 (1)
0xffff58238968   264  and x5, x5, #0xfffffffffff00000
0xffff5823896c   268  ldr x5, [x5, #8]
0xffff58238970   272  tbz w5, #1, #+0x24 (addr 0xffff58238994)
0xffff58238974   276  and x5, x1, #0xfffffffffff00000
0xffff58238978   280  ldr x5, [x5, #8]
0xffff5823897c   284  tbz w5, #2, #+0x18 (addr 0xffff58238994)
0xffff58238980   288  sub csp, jssp, #0x8 (8)
0xffff58238984   292  str lr, [jssp, #-8]!
0xffff58238988   296  ldr x16, pc+160 (addr 0x0000ffff58238a28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5823898c   300  blr x16
0xffff58238990   304  ldr lr, [jssp], #8
0xffff58238994   308  ret
0xffff58238998   312  sub csp, jssp, #0x10 (16)
0xffff5823899c   316  stp fp, lr, [jssp, #-16]!
0xffff582389a0   320  movz fp, #0xa00000000
0xffff582389a4   324  sub csp, jssp, #0x8 (8)
0xffff582389a8   328  str fp, [jssp, #-8]!
0xffff582389ac   332  add fp, jssp, #0x8 (8)
0xffff582389b0   336  movz x13, #0x0
0xffff582389b4   340  mov x16, lr
0xffff582389b8   344  ldr x17, pc+120 (addr 0x0000ffff58238a30)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582389bc   348  blr x17
0xffff582389c0   352  lsl x0, x10, #32
0xffff582389c4   356  movz x10, #0x0
0xffff582389c8   360  sub csp, jssp, #0x10 (16)
0xffff582389cc   364  stp x10, x0, [jssp, #-16]!
0xffff582389d0   368  movz x0, #0x2
0xffff582389d4   372  movz x1, #0x5b88
0xffff582389d8   376  movk x1, #0xe2, lsl #16
0xffff582389dc   380  ldr x16, pc+92 (addr 0x0000ffff58238a38)    ;; code: STUB, CEntryStub, minor: 5
0xffff582389e0   384  blr x16
0xffff582389e4   388  str x0, [jssp, #104]
0xffff582389e8   392  ldr x16, pc+88 (addr 0x0000ffff58238a40)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582389ec   396  blr x16
0xffff582389f0   400  ldr lr, [jssp, #16]
0xffff582389f4   404  ldp xzr, fp, [jssp], #24
0xffff582389f8   408  b #-0x14c (addr 0xffff582388ac)
0xffff582389fc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff58238a00   416  d63f03e0       constant
0xffff58238a04   420  d503201f       constant
0xffff58238a08   424  32b04259       constant
0xffff58238a0c   428  00000000       constant
0xffff58238a10   432  39c04241       constant
0xffff58238a14   436  00000000       constant
0xffff58238a18   440  582370c0       constant
0xffff58238a1c   444  0000ffff       constant
0xffff58238a20   448  582378a0       constant
0xffff58238a24   452  0000ffff       constant
0xffff58238a28   456  58238080       constant
0xffff58238a2c   460  0000ffff       constant
0xffff58238a30   464  58206820       constant
0xffff58238a34   468  0000ffff       constant
0xffff58238a38   472  58206260       constant
0xffff58238a3c   476  0000ffff       constant
0xffff58238a40   480  582068e0       constant
0xffff58238a44   484  0000ffff       constant
0xffff58238a48   488  movz x16, #0x0
0xffff58238a4c   492  sub csp, jssp, #0x10 (16)
0xffff58238a50   496  stp fp, lr, [jssp, #-16]!
0xffff58238a54   500  bl #+0x24 (addr 0xffff58238a78)
0xffff58238a58   504  movz x16, #0x8
0xffff58238a5c   508  sub csp, jssp, #0x10 (16)
0xffff58238a60   512  stp fp, lr, [jssp, #-16]!
0xffff58238a64   516  bl #+0x14 (addr 0xffff58238a78)
0xffff58238a68   520  movz x16, #0x10
0xffff58238a6c   524  sub csp, jssp, #0x10 (16)
0xffff58238a70   528  stp fp, lr, [jssp, #-16]!
0xffff58238a74   532  bl #+0x4 (addr 0xffff58238a78)
0xffff58238a78   536  movz x17, #0xa00000000
0xffff58238a7c   540  sub csp, jssp, #0x10 (16)
0xffff58238a80   544  stp x17, cp, [jssp, #-16]!
0xffff58238a84   548  add fp, jssp, #0x10 (16)
0xffff58238a88   552  ldr x17, pc+24 (addr 0x0000ffff58238aa0)    ;; lazy deoptimization bailout 0
0xffff58238a8c   556  add x17, x17, x16
0xffff58238a90   560  br x17
0xffff58238a94   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58238a98   568  d63f03e0       constant
0xffff58238a9c   572  d503201f       constant
0xffff58238aa0   576  58006000       constant
0xffff58238aa4   580  0000ffff       constant


Safepoints (size = 21)
0xffff582389e4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff582388ac  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582388c4  embedded object  (0x39c04241 <undefined>)
0xffff58238910  code target (STUB)  (0xffff582370c0)
0xffff58238950  code target (STUB)  (0xffff582378a0)
0xffff58238988  code target (STUB)  (0xffff58238080)
0xffff582389b8  code target (STUB)  (0xffff58206820)
0xffff582389dc  code target (STUB)  (0xffff58206260)
0xffff582389e8  code target (STUB)  (0xffff582068e0)
0xffff582389fc  constant pool (size 76)
0xffff58238a88  runtime entry
0xffff58238a94  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff58238b20     0  sub csp, jssp, #0x8 (8)
0xffff58238b24     4  str x3, [jssp, #-8]!
0xffff58238b28     8  sub csp, jssp, #0x8 (8)
0xffff58238b2c    12  str x4, [jssp, #-8]!
0xffff58238b30    16  ldr x3, pc+88 (addr 0x0000ffff58238b88)    ;; object: 0x39c57a89 Cell for 0
0xffff58238b34    20  ldur x3, [x3, #7]
0xffff58238b38    24  cmp x3, #0x0 (0)
0xffff58238b3c    28  b.ne #+0x30 (addr 0xffff58238b6c)
0xffff58238b40    32  tbz w0, #0, #+0x2c (addr 0xffff58238b6c)
0xffff58238b44    36  ldr x5, pc+76 (addr 0x0000ffff58238b90)    ;; object: 0x39c57a99 WeakCell for 0x32b0b581 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58238b48    40  ldur x5, [x5, #7]
0xffff58238b4c    44  tbz w5, #0, #+0x20 (addr 0xffff58238b6c)
0xffff58238b50    48  ldursw x4, [x5, #15]
0xffff58238b54    52  tbnz w4, #23, #+0x18 (addr 0xffff58238b6c)
0xffff58238b58    56  ldr x4, [jssp], #8
0xffff58238b5c    60  ldr x3, [jssp], #8
0xffff58238b60    64  ldr x2, pc+56 (addr 0x0000ffff58238b98)    ;; object: 0x39c05209 <String[4]: next>
0xffff58238b64    68  ldr x16, pc+60 (addr 0x0000ffff58238ba0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff58238b68    72  br x16
0xffff58238b6c    76  ldr x2, pc+60 (addr 0x0000ffff58238ba8)    ;; object: 0x39c05209 <String[4]: next>
0xffff58238b70    80  ldr x4, [jssp], #8
0xffff58238b74    84  ldr x3, [jssp], #8
0xffff58238b78    88  ldr x16, pc+56 (addr 0x0000ffff58238bb0)    ;; code: BUILTIN
0xffff58238b7c    92  br x16
0xffff58238b80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff58238b84   100  d63f03e0       constant
0xffff58238b88   104  39c57a89       constant
0xffff58238b8c   108  00000000       constant
0xffff58238b90   112  39c57a99       constant
0xffff58238b94   116  00000000       constant
0xffff58238b98   120  39c05209       constant
0xffff58238b9c   124  00000000       constant
0xffff58238ba0   128  58238860       constant
0xffff58238ba4   132  0000ffff       constant
0xffff58238ba8   136  39c05209       constant
0xffff58238bac   140  00000000       constant
0xffff58238bb0   144  58222420       constant
0xffff58238bb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff58238b30  embedded object  (0x39c57a89 Cell for 0)
0xffff58238b44  embedded object  (0x39c57a99 WeakCell for 0x32b0b581 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58238b60  embedded object  (0x39c05209 <String[4]: next>)
0xffff58238b64  code target (HANDLER)  (0xffff58238860)
0xffff58238b6c  embedded object  (0x39c05209 <String[4]: next>)
0xffff58238b78  code target (BUILTIN)  (0xffff58222420)
0xffff58238b80  constant pool (size 56)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff58238c20     0  movz x16, #0xc00000000
0xffff58238c24     4  sub csp, jssp, #0x10 (16)
0xffff58238c28     8  stp fp, lr, [jssp, #-16]!
0xffff58238c2c    12  sub csp, jssp, #0x10 (16)
0xffff58238c30    16  str x16, [jssp, #-8]!
0xffff58238c34    20  ldr x17, pc+92 (addr 0x0000ffff58238c90)    ;; object: 0xffff58238bc1 <Code: COMPARE_IC>
0xffff58238c38    24  sub csp, jssp, #0x10 (16)
0xffff58238c3c    28  str x17, [jssp, #-8]!
0xffff58238c40    32  add fp, jssp, #0x10 (16)
0xffff58238c44    36  sub csp, jssp, #0x18 (24)
0xffff58238c48    40  stp lr, x0, [jssp, #-24]!
0xffff58238c4c    44  str x1, [jssp, #16]
0xffff58238c50    48  movz x10, #0x3100000000
0xffff58238c54    52  sub csp, jssp, #0x18 (24)
0xffff58238c58    56  stp x10, x0, [jssp, #-24]!
0xffff58238c5c    60  str x1, [jssp, #16]
0xffff58238c60    64  movz x0, #0x3
0xffff58238c64    68  ldr x1, pc+52 (addr 0x0000ffff58238c98)    ;; external reference (Runtime::CompareIC_Miss)
0xffff58238c68    72  ldr x16, pc+56 (addr 0x0000ffff58238ca0)    ;; code: STUB, CEntryStub, minor: 4
0xffff58238c6c    76  blr x16
0xffff58238c70    80  add x11, x0, #0x5f (95)
0xffff58238c74    84  ldr x1, [jssp, #16]
0xffff58238c78    88  ldp lr, x0, [jssp], #24
0xffff58238c7c    92  mov jssp, fp
0xffff58238c80    96  ldp fp, lr, [jssp], #16
0xffff58238c84   100  br x11
0xffff58238c88   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58238c8c   108  d63f03e0       constant
0xffff58238c90   112  58238bc1       constant
0xffff58238c94   116  0000ffff       constant
0xffff58238c98   120  00c8a980       constant
0xffff58238c9c   124  00000000       constant
0xffff58238ca0   128  58206060       constant
0xffff58238ca4   132  0000ffff       constant


RelocInfo (size = 10)
0xffff58238c34  embedded object  (0xffff58238bc1 <Code: COMPARE_IC>)
0xffff58238c64  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff58238c68  code target (STUB)  (0xffff58206060)
0xffff58238c88  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff58239120     0  orr x16, x0, x1
0xffff58239124     4  tbnz w16, #0, #+0x10 (addr 0xffff58239134)
0xffff58239128     8  asr x1, x1, #32
0xffff5823912c    12  sub x0, x1, x0, asr #32
0xffff58239130    16  ret
0xffff58239134    20  movz x16, #0xc00000000
0xffff58239138    24  sub csp, jssp, #0x10 (16)
0xffff5823913c    28  stp fp, lr, [jssp, #-16]!
0xffff58239140    32  sub csp, jssp, #0x10 (16)
0xffff58239144    36  str x16, [jssp, #-8]!
0xffff58239148    40  ldr x17, pc+96 (addr 0x0000ffff582391a8)    ;; object: 0xffff582390c1 <Code: COMPARE_IC>
0xffff5823914c    44  sub csp, jssp, #0x10 (16)
0xffff58239150    48  str x17, [jssp, #-8]!
0xffff58239154    52  add fp, jssp, #0x10 (16)
0xffff58239158    56  sub csp, jssp, #0x18 (24)
0xffff5823915c    60  stp lr, x0, [jssp, #-24]!
0xffff58239160    64  str x1, [jssp, #16]
0xffff58239164    68  movz x10, #0x3100000000
0xffff58239168    72  sub csp, jssp, #0x18 (24)
0xffff5823916c    76  stp x10, x0, [jssp, #-24]!
0xffff58239170    80  str x1, [jssp, #16]
0xffff58239174    84  movz x0, #0x3
0xffff58239178    88  ldr x1, pc+56 (addr 0x0000ffff582391b0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5823917c    92  ldr x16, pc+60 (addr 0x0000ffff582391b8)    ;; code: STUB, CEntryStub, minor: 4
0xffff58239180    96  blr x16
0xffff58239184   100  add x11, x0, #0x5f (95)
0xffff58239188   104  ldr x1, [jssp, #16]
0xffff5823918c   108  ldp lr, x0, [jssp], #24
0xffff58239190   112  mov jssp, fp
0xffff58239194   116  ldp fp, lr, [jssp], #16
0xffff58239198   120  br x11
0xffff5823919c   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff582391a0   128  d63f03e0       constant
0xffff582391a4   132  d503201f       constant
0xffff582391a8   136  582390c1       constant
0xffff582391ac   140  0000ffff       constant
0xffff582391b0   144  00c8a980       constant
0xffff582391b4   148  00000000       constant
0xffff582391b8   152  58206060       constant
0xffff582391bc   156  0000ffff       constant


RelocInfo (size = 10)
0xffff58239148  embedded object  (0xffff582390c1 <Code: COMPARE_IC>)
0xffff58239178  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5823917c  code target (STUB)  (0xffff58206060)
0xffff5823919c  constant pool (size 36)


kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 168)
0xffff58239220     0  ldur x4, [x1, #15]
0xffff58239224     4  ldur w5, [x1, #27]
0xffff58239228     8  tbnz w2, #0, #+0x20 (addr 0xffff58239248)
0xffff5823922c    12  asr x7, x2, #32
0xffff58239230    16  cmp w7, w5
0xffff58239234    20  b.hs #+0x3c (addr 0xffff58239270)
0xffff58239238    24  add x0, x4, #0xf (15)
0xffff5823923c    28  ldr x1, [x0, w7, sxtw #3]
0xffff58239240    32  mov x0, x1
0xffff58239244    36  ret
0xffff58239248    40  ldur x16, [x2, #-1]
0xffff5823924c    44  ldr x17, [x26, #120]
0xffff58239250    48  cmp x16, x17
0xffff58239254    52  b.ne #+0x2c (addr 0xffff58239280)
0xffff58239258    56  ldur d29, [x2, #7]
0xffff5823925c    60  fcvtzs w7, d29
0xffff58239260    64  scvtf d0, w7
0xffff58239264    68  fcmp d29, d0
0xffff58239268    72  b.ne #+0x18 (addr 0xffff58239280)
0xffff5823926c    76  b #-0x3c (addr 0xffff58239230)
0xffff58239270    80  movz x16, #0x0
0xffff58239274    84  sub csp, jssp, #0x10 (16)
0xffff58239278    88  stp fp, lr, [jssp, #-16]!
0xffff5823927c    92  bl #+0x14 (addr 0xffff58239290)
0xffff58239280    96  movz x16, #0x8
0xffff58239284   100  sub csp, jssp, #0x10 (16)
0xffff58239288   104  stp fp, lr, [jssp, #-16]!
0xffff5823928c   108  bl #+0x4 (addr 0xffff58239290)
0xffff58239290   112  movz x17, #0xa00000000
0xffff58239294   116  sub csp, jssp, #0x10 (16)
0xffff58239298   120  stp x17, cp, [jssp, #-16]!
0xffff5823929c   124  add fp, jssp, #0x10 (16)
0xffff582392a0   128  ldr x17, pc+24 (addr 0x0000ffff582392b8)    ;; lazy deoptimization bailout 0
0xffff582392a4   132  add x17, x17, x16
0xffff582392a8   136  br x17
0xffff582392ac   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582392b0   144  d63f03e0       constant
0xffff582392b4   148  d503201f       constant
0xffff582392b8   152  58006000       constant
0xffff582392bc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582392a0  runtime entry
0xffff582392ac  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff58239340     0  ldur x0, [x1, #23]
0xffff58239344     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393218
name = CallICStub(args(2), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff582393c0     0  add x4, x2, x3, asr #29
0xffff582393c4     4  ldur x4, [x4, #15]
0xffff582393c8     8  ldur x5, [x4, #7]
0xffff582393cc    12  cmp x5, x1
0xffff582393d0    16  b.ne #+0x2c (addr 0xffff582393fc)
0xffff582393d4    20  tbz w1, #0, #+0x28 (addr 0xffff582393fc)
0xffff582393d8    24  add x2, x2, x3, asr #29
0xffff582393dc    28  add x2, x2, #0x18 (24)
0xffff582393e0    32  ldur x3, [x2, #-1]
0xffff582393e4    36  movz x16, #0x200000000
0xffff582393e8    40  add x3, x3, x16
0xffff582393ec    44  stur x3, [x2, #-1]
0xffff582393f0    48  movz x0, #0x2
0xffff582393f4    52  ldr x16, pc+372 (addr 0x0000ffff58239568)    ;; code: BUILTIN
0xffff582393f8    56  br x16
0xffff582393fc    60  ldr x16, [x26, #2400]
0xffff58239400    64  cmp x4, x16
0xffff58239404    68  b.eq #+0x78 (addr 0xffff5823947c)
0xffff58239408    72  ldur x5, [x4, #-1]
0xffff5823940c    76  ldr x16, [x26, #2736]
0xffff58239410    80  cmp x5, x16
0xffff58239414    84  b.ne #+0x40 (addr 0xffff58239454)
0xffff58239418    88  ldur x5, [cp, #39]
0xffff5823941c    92  ldur x5, [x5, #95]
0xffff58239420    96  cmp x1, x5
0xffff58239424   100  b.ne #+0xec (addr 0xffff58239510)
0xffff58239428   104  movz x0, #0x2
0xffff5823942c   108  add x2, x2, x3, asr #29
0xffff58239430   112  add x2, x2, #0x18 (24)
0xffff58239434   116  ldur x3, [x2, #-1]
0xffff58239438   120  movz x16, #0x200000000
0xffff5823943c   124  add x3, x3, x16
0xffff58239440   128  stur x3, [x2, #-1]
0xffff58239444   132  mov x2, x4
0xffff58239448   136  mov x3, x1
0xffff5823944c   140  ldr x16, pc+292 (addr 0x0000ffff58239570)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff58239450   144  br x16
0xffff58239454   148  ldr x16, [x26, #2568]
0xffff58239458   152  cmp x4, x16
0xffff5823945c   156  b.eq #+0xb4 (addr 0xffff58239510)
0xffff58239460   160  ldur x5, [x4, #-1]
0xffff58239464   164  ldrb w5, [x5, #11]
0xffff58239468   168  cmp x5, #0xc9 (201)
0xffff5823946c   172  b.ne #+0xa4 (addr 0xffff58239510)
0xffff58239470   176  add x4, x2, x3, asr #29
0xffff58239474   180  ldr x5, [x26, #2400]
0xffff58239478   184  stur x5, [x4, #15]
0xffff5823947c   188  movz x0, #0x2
0xffff58239480   192  ldr x16, pc+248 (addr 0x0000ffff58239578)    ;; code: BUILTIN
0xffff58239484   196  br x16
0xffff58239488   200  tbz w1, #0, #+0x88 (addr 0xffff58239510)
0xffff5823948c   204  ldur x5, [x1, #-1]
0xffff58239490   208  ldrb w5, [x5, #11]
0xffff58239494   212  cmp x5, #0xc9 (201)
0xffff58239498   216  b.ne #+0x78 (addr 0xffff58239510)
0xffff5823949c   220  ldur x5, [cp, #39]
0xffff582394a0   224  ldur x5, [x5, #95]
0xffff582394a4   228  cmp x1, x5
0xffff582394a8   232  b.eq #+0x68 (addr 0xffff58239510)
0xffff582394ac   236  ldur x4, [x1, #39]
0xffff582394b0   240  ldur x4, [x4, #39]
0xffff582394b4   244  ldur x5, [cp, #39]
0xffff582394b8   248  cmp x4, x5
0xffff582394bc   252  b.ne #+0x54 (addr 0xffff58239510)
0xffff582394c0   256  movz x5, #0x200000000
0xffff582394c4   260  adds x4, x2, x3, asr #29
0xffff582394c8   264  stur x5, [x4, #23]
0xffff582394cc   268  movz x16, #0xc00000000
0xffff582394d0   272  sub csp, jssp, #0x10 (16)
0xffff582394d4   276  stp fp, lr, [jssp, #-16]!
0xffff582394d8   280  sub csp, jssp, #0x10 (16)
0xffff582394dc   284  str x16, [jssp, #-8]!
0xffff582394e0   288  ldr x17, pc+160 (addr 0x0000ffff58239580)    ;; object: 0xffff58239361 <Code: CALL_IC>
0xffff582394e4   292  sub csp, jssp, #0x10 (16)
0xffff582394e8   296  str x17, [jssp, #-8]!
0xffff582394ec   300  add fp, jssp, #0x10 (16)
0xffff582394f0   304  sub csp, jssp, #0x8 (8)
0xffff582394f4   308  str x1, [jssp, #-8]!
0xffff582394f8   312  ldr x16, pc+144 (addr 0x0000ffff58239588)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff582394fc   316  blr x16
0xffff58239500   320  ldr x1, [jssp], #8
0xffff58239504   324  mov jssp, fp
0xffff58239508   328  ldp fp, lr, [jssp], #16
0xffff5823950c   332  b #-0x11c (addr 0xffff582393f0)
0xffff58239510   336  movz x16, #0xc00000000
0xffff58239514   340  sub csp, jssp, #0x10 (16)
0xffff58239518   344  stp fp, lr, [jssp, #-16]!
0xffff5823951c   348  sub csp, jssp, #0x10 (16)
0xffff58239520   352  str x16, [jssp, #-8]!
0xffff58239524   356  ldr x17, pc+108 (addr 0x0000ffff58239590)    ;; object: 0xffff58239361 <Code: CALL_IC>
0xffff58239528   360  sub csp, jssp, #0x10 (16)
0xffff5823952c   364  str x17, [jssp, #-8]!
0xffff58239530   368  add fp, jssp, #0x10 (16)
0xffff58239534   372  sub csp, jssp, #0x18 (24)
0xffff58239538   376  stp x3, x2, [jssp, #-24]!
0xffff5823953c   380  str x1, [jssp, #16]
0xffff58239540   384  movz x0, #0x3
0xffff58239544   388  ldr x1, pc+84 (addr 0x0000ffff58239598)    ;; external reference (Runtime::CallIC_Miss)
0xffff58239548   392  ldr x16, pc+88 (addr 0x0000ffff582395a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823954c   396  blr x16
0xffff58239550   400  mov x1, x0
0xffff58239554   404  mov jssp, fp
0xffff58239558   408  ldp fp, lr, [jssp], #16
0xffff5823955c   412  b #-0xe0 (addr 0xffff5823947c)
0xffff58239560   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff58239564   420  d63f03e0       constant
0xffff58239568   424  5821e820       constant
0xffff5823956c   428  0000ffff       constant
0xffff58239570   432  58233b00       constant
0xffff58239574   436  0000ffff       constant
0xffff58239578   440  5821f820       constant
0xffff5823957c   444  0000ffff       constant
0xffff58239580   448  58239361       constant
0xffff58239584   452  0000ffff       constant
0xffff58239588   456  5820ddc0       constant
0xffff5823958c   460  0000ffff       constant
0xffff58239590   464  58239361       constant
0xffff58239594   468  0000ffff       constant
0xffff58239598   472  00c86928       constant
0xffff5823959c   476  00000000       constant
0xffff582395a0   480  58206060       constant
0xffff582395a4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff582393f4  code target (BUILTIN)  (0xffff5821e820)
0xffff5823944c  code target (STUB)  (0xffff58233b00)
0xffff58239480  code target (BUILTIN)  (0xffff5821f820)
0xffff582394e0  embedded object  (0xffff58239361 <Code: CALL_IC>)
0xffff582394f8  code target (STUB)  (0xffff5820ddc0)
0xffff58239524  embedded object  (0xffff58239361 <Code: CALL_IC>)
0xffff58239544  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58239548  code target (STUB)  (0xffff58206060)
0xffff58239560  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393218
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff58239620     0  ldur x2, [fp, #-16]
0xffff58239624     4  ldur x2, [x2, #31]
0xffff58239628     8  ldur x2, [x2, #87]
0xffff5823962c    12  ldr x16, pc+20 (addr 0x0000ffff58239640)    ;; code: CALL_IC, GENERIC
0xffff58239630    16  br x16
0xffff58239634    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58239638    24  d63f03e0       constant
0xffff5823963c    28  d503201f       constant
0xffff58239640    32  582393c0       constant
0xffff58239644    36  0000ffff       constant


RelocInfo (size = 7)
0xffff5823962c  code target (CALL_IC)  (0xffff582393c0)
0xffff58239634  constant pool (size 20)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
name = ToBooleanICStub(None)
compiler = unknown
Instructions (size = 104)
0xffff58239e00     0  movz x16, #0xc00000000
0xffff58239e04     4  sub csp, jssp, #0x10 (16)
0xffff58239e08     8  stp fp, lr, [jssp, #-16]!
0xffff58239e0c    12  sub csp, jssp, #0x10 (16)
0xffff58239e10    16  str x16, [jssp, #-8]!
0xffff58239e14    20  ldr x17, pc+60 (addr 0x0000ffff58239e50)    ;; object: 0xffff58239da1 <Code: TO_BOOLEAN_IC>
0xffff58239e18    24  sub csp, jssp, #0x10 (16)
0xffff58239e1c    28  str x17, [jssp, #-8]!
0xffff58239e20    32  add fp, jssp, #0x10 (16)
0xffff58239e24    36  sub csp, jssp, #0x8 (8)
0xffff58239e28    40  str x0, [jssp, #-8]!
0xffff58239e2c    44  movz x0, #0x1
0xffff58239e30    48  ldr x1, pc+40 (addr 0x0000ffff58239e58)    ;; external reference (Runtime::ToBooleanIC_Miss)
0xffff58239e34    52  ldr x16, pc+44 (addr 0x0000ffff58239e60)    ;; code: STUB, CEntryStub, minor: 4
0xffff58239e38    56  blr x16
0xffff58239e3c    60  mov jssp, fp
0xffff58239e40    64  ldp fp, lr, [jssp], #16
0xffff58239e44    68  ret
0xffff58239e48    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58239e4c    76  d63f03e0       constant
0xffff58239e50    80  58239da1       constant
0xffff58239e54    84  0000ffff       constant
0xffff58239e58    88  00c8b000       constant
0xffff58239e5c    92  00000000       constant
0xffff58239e60    96  58206060       constant
0xffff58239e64   100  0000ffff       constant


RelocInfo (size = 10)
0xffff58239e14  embedded object  (0xffff58239da1 <Code: TO_BOOLEAN_IC>)
0xffff58239e30  external reference (Runtime::ToBooleanIC_Miss)  (0xc8b000)
0xffff58239e34  code target (STUB)  (0xffff58206060)
0xffff58239e48  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = GTE
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff58239ee0     0  movz x16, #0xc00000000
0xffff58239ee4     4  sub csp, jssp, #0x10 (16)
0xffff58239ee8     8  stp fp, lr, [jssp, #-16]!
0xffff58239eec    12  sub csp, jssp, #0x10 (16)
0xffff58239ef0    16  str x16, [jssp, #-8]!
0xffff58239ef4    20  ldr x17, pc+92 (addr 0x0000ffff58239f50)    ;; object: 0xffff58239e81 <Code: COMPARE_IC>
0xffff58239ef8    24  sub csp, jssp, #0x10 (16)
0xffff58239efc    28  str x17, [jssp, #-8]!
0xffff58239f00    32  add fp, jssp, #0x10 (16)
0xffff58239f04    36  sub csp, jssp, #0x18 (24)
0xffff58239f08    40  stp lr, x0, [jssp, #-24]!
0xffff58239f0c    44  str x1, [jssp, #16]
0xffff58239f10    48  movz x10, #0x3400000000
0xffff58239f14    52  sub csp, jssp, #0x18 (24)
0xffff58239f18    56  stp x10, x0, [jssp, #-24]!
0xffff58239f1c    60  str x1, [jssp, #16]
0xffff58239f20    64  movz x0, #0x3
0xffff58239f24    68  ldr x1, pc+52 (addr 0x0000ffff58239f58)    ;; external reference (Runtime::CompareIC_Miss)
0xffff58239f28    72  ldr x16, pc+56 (addr 0x0000ffff58239f60)    ;; code: STUB, CEntryStub, minor: 4
0xffff58239f2c    76  blr x16
0xffff58239f30    80  add x11, x0, #0x5f (95)
0xffff58239f34    84  ldr x1, [jssp, #16]
0xffff58239f38    88  ldp lr, x0, [jssp], #24
0xffff58239f3c    92  mov jssp, fp
0xffff58239f40    96  ldp fp, lr, [jssp], #16
0xffff58239f44   100  br x11
0xffff58239f48   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58239f4c   108  d63f03e0       constant
0xffff58239f50   112  58239e81       constant
0xffff58239f54   116  0000ffff       constant
0xffff58239f58   120  00c8a980       constant
0xffff58239f5c   124  00000000       constant
0xffff58239f60   128  58206060       constant
0xffff58239f64   132  0000ffff       constant


RelocInfo (size = 10)
0xffff58239ef4  embedded object  (0xffff58239e81 <Code: COMPARE_IC>)
0xffff58239f24  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff58239f28  code target (STUB)  (0xffff58206060)
0xffff58239f48  constant pool (size 32)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 16
type = NORMAL
name = ToBooleanICStub(SpecObject)
compiler = crankshaft
Instructions (size = 144)
0xffff5823a6e0     0  tbz w0, #0, #+0x48 (addr 0xffff5823a728)
0xffff5823a6e4     4  ldur x2, [x0, #-1]
0xffff5823a6e8     8  ldrb w1, [x2, #12]
0xffff5823a6ec    12  tbnz w1, #4, #+0x14 (addr 0xffff5823a700)
0xffff5823a6f0    16  ldrb w1, [x2, #11]
0xffff5823a6f4    20  cmp x1, #0xb1 (177)
0xffff5823a6f8    24  b.ge #+0x10 (addr 0xffff5823a708)
0xffff5823a6fc    28  b #+0x2c (addr 0xffff5823a728)
0xffff5823a700    32  ldr x0, pc+24 (addr 0x0000ffff5823a718)    ;; object: 0x39c042b1 <false>
0xffff5823a704    36  ret
0xffff5823a708    40  ldr x0, pc+24 (addr 0x0000ffff5823a720)    ;; object: 0x39c04281 <true>
0xffff5823a70c    44  ret
0xffff5823a710    48  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5823a714    52  d63f03e0       constant
0xffff5823a718    56  39c042b1       constant
0xffff5823a71c    60  00000000       constant
0xffff5823a720    64  39c04281       constant
0xffff5823a724    68  00000000       constant
0xffff5823a728    72  movz x16, #0x0
0xffff5823a72c    76  sub csp, jssp, #0x10 (16)
0xffff5823a730    80  stp fp, lr, [jssp, #-16]!
0xffff5823a734    84  bl #+0x4 (addr 0xffff5823a738)
0xffff5823a738    88  movz x17, #0xa00000000
0xffff5823a73c    92  sub csp, jssp, #0x10 (16)
0xffff5823a740    96  stp x17, cp, [jssp, #-16]!
0xffff5823a744   100  add fp, jssp, #0x10 (16)
0xffff5823a748   104  ldr x17, pc+24 (addr 0x0000ffff5823a760)    ;; lazy deoptimization bailout 0
0xffff5823a74c   108  add x17, x17, x16
0xffff5823a750   112  br x17
0xffff5823a754   116  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5823a758   120  d63f03e0       constant
0xffff5823a75c   124  d503201f       constant
0xffff5823a760   128  58006000       constant
0xffff5823a764   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5823a700  embedded object  (0x39c042b1 <false>)
0xffff5823a708  embedded object  (0x39c04281 <true>)
0xffff5823a710  constant pool (size 24)
0xffff5823a748  runtime entry
0xffff5823a754  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = GTE
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff5823a7e0     0  orr x16, x0, x1
0xffff5823a7e4     4  tbnz w16, #0, #+0x10 (addr 0xffff5823a7f4)
0xffff5823a7e8     8  asr x1, x1, #32
0xffff5823a7ec    12  sub x0, x1, x0, asr #32
0xffff5823a7f0    16  ret
0xffff5823a7f4    20  movz x16, #0xc00000000
0xffff5823a7f8    24  sub csp, jssp, #0x10 (16)
0xffff5823a7fc    28  stp fp, lr, [jssp, #-16]!
0xffff5823a800    32  sub csp, jssp, #0x10 (16)
0xffff5823a804    36  str x16, [jssp, #-8]!
0xffff5823a808    40  ldr x17, pc+96 (addr 0x0000ffff5823a868)    ;; object: 0xffff5823a781 <Code: COMPARE_IC>
0xffff5823a80c    44  sub csp, jssp, #0x10 (16)
0xffff5823a810    48  str x17, [jssp, #-8]!
0xffff5823a814    52  add fp, jssp, #0x10 (16)
0xffff5823a818    56  sub csp, jssp, #0x18 (24)
0xffff5823a81c    60  stp lr, x0, [jssp, #-24]!
0xffff5823a820    64  str x1, [jssp, #16]
0xffff5823a824    68  movz x10, #0x3400000000
0xffff5823a828    72  sub csp, jssp, #0x18 (24)
0xffff5823a82c    76  stp x10, x0, [jssp, #-24]!
0xffff5823a830    80  str x1, [jssp, #16]
0xffff5823a834    84  movz x0, #0x3
0xffff5823a838    88  ldr x1, pc+56 (addr 0x0000ffff5823a870)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5823a83c    92  ldr x16, pc+60 (addr 0x0000ffff5823a878)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823a840    96  blr x16
0xffff5823a844   100  add x11, x0, #0x5f (95)
0xffff5823a848   104  ldr x1, [jssp, #16]
0xffff5823a84c   108  ldp lr, x0, [jssp], #24
0xffff5823a850   112  mov jssp, fp
0xffff5823a854   116  ldp fp, lr, [jssp], #16
0xffff5823a858   120  br x11
0xffff5823a85c   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5823a860   128  d63f03e0       constant
0xffff5823a864   132  d503201f       constant
0xffff5823a868   136  5823a781       constant
0xffff5823a86c   140  0000ffff       constant
0xffff5823a870   144  00c8a980       constant
0xffff5823a874   148  00000000       constant
0xffff5823a878   152  58206060       constant
0xffff5823a87c   156  0000ffff       constant


RelocInfo (size = 10)
0xffff5823a808  embedded object  (0xffff5823a781 <Code: COMPARE_IC>)
0xffff5823a838  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5823a83c  code target (STUB)  (0xffff58206060)
0xffff5823a85c  constant pool (size 36)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff5823a8e0     0  movz x16, #0xc00000000
0xffff5823a8e4     4  sub csp, jssp, #0x10 (16)
0xffff5823a8e8     8  stp fp, lr, [jssp, #-16]!
0xffff5823a8ec    12  sub csp, jssp, #0x10 (16)
0xffff5823a8f0    16  str x16, [jssp, #-8]!
0xffff5823a8f4    20  ldr x17, pc+92 (addr 0x0000ffff5823a950)    ;; object: 0xffff5823a881 <Code: COMPARE_IC>
0xffff5823a8f8    24  sub csp, jssp, #0x10 (16)
0xffff5823a8fc    28  str x17, [jssp, #-8]!
0xffff5823a900    32  add fp, jssp, #0x10 (16)
0xffff5823a904    36  sub csp, jssp, #0x18 (24)
0xffff5823a908    40  stp lr, x0, [jssp, #-24]!
0xffff5823a90c    44  str x1, [jssp, #16]
0xffff5823a910    48  movz x10, #0x2d00000000
0xffff5823a914    52  sub csp, jssp, #0x18 (24)
0xffff5823a918    56  stp x10, x0, [jssp, #-24]!
0xffff5823a91c    60  str x1, [jssp, #16]
0xffff5823a920    64  movz x0, #0x3
0xffff5823a924    68  ldr x1, pc+52 (addr 0x0000ffff5823a958)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5823a928    72  ldr x16, pc+56 (addr 0x0000ffff5823a960)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823a92c    76  blr x16
0xffff5823a930    80  add x11, x0, #0x5f (95)
0xffff5823a934    84  ldr x1, [jssp, #16]
0xffff5823a938    88  ldp lr, x0, [jssp], #24
0xffff5823a93c    92  mov jssp, fp
0xffff5823a940    96  ldp fp, lr, [jssp], #16
0xffff5823a944   100  br x11
0xffff5823a948   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5823a94c   108  d63f03e0       constant
0xffff5823a950   112  5823a881       constant
0xffff5823a954   116  0000ffff       constant
0xffff5823a958   120  00c8a980       constant
0xffff5823a95c   124  00000000       constant
0xffff5823a960   128  58206060       constant
0xffff5823a964   132  0000ffff       constant


RelocInfo (size = 10)
0xffff5823a8f4  embedded object  (0xffff5823a881 <Code: COMPARE_IC>)
0xffff5823a924  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5823a928  code target (STUB)  (0xffff58206060)
0xffff5823a948  constant pool (size 32)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393219
name = CallICStub(args(3), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff5823ac00     0  add x4, x2, x3, asr #29
0xffff5823ac04     4  ldur x4, [x4, #15]
0xffff5823ac08     8  ldur x5, [x4, #7]
0xffff5823ac0c    12  cmp x5, x1
0xffff5823ac10    16  b.ne #+0x2c (addr 0xffff5823ac3c)
0xffff5823ac14    20  tbz w1, #0, #+0x28 (addr 0xffff5823ac3c)
0xffff5823ac18    24  add x2, x2, x3, asr #29
0xffff5823ac1c    28  add x2, x2, #0x18 (24)
0xffff5823ac20    32  ldur x3, [x2, #-1]
0xffff5823ac24    36  movz x16, #0x200000000
0xffff5823ac28    40  add x3, x3, x16
0xffff5823ac2c    44  stur x3, [x2, #-1]
0xffff5823ac30    48  movz x0, #0x3
0xffff5823ac34    52  ldr x16, pc+372 (addr 0x0000ffff5823ada8)    ;; code: BUILTIN
0xffff5823ac38    56  br x16
0xffff5823ac3c    60  ldr x16, [x26, #2400]
0xffff5823ac40    64  cmp x4, x16
0xffff5823ac44    68  b.eq #+0x78 (addr 0xffff5823acbc)
0xffff5823ac48    72  ldur x5, [x4, #-1]
0xffff5823ac4c    76  ldr x16, [x26, #2736]
0xffff5823ac50    80  cmp x5, x16
0xffff5823ac54    84  b.ne #+0x40 (addr 0xffff5823ac94)
0xffff5823ac58    88  ldur x5, [cp, #39]
0xffff5823ac5c    92  ldur x5, [x5, #95]
0xffff5823ac60    96  cmp x1, x5
0xffff5823ac64   100  b.ne #+0xec (addr 0xffff5823ad50)
0xffff5823ac68   104  movz x0, #0x3
0xffff5823ac6c   108  add x2, x2, x3, asr #29
0xffff5823ac70   112  add x2, x2, #0x18 (24)
0xffff5823ac74   116  ldur x3, [x2, #-1]
0xffff5823ac78   120  movz x16, #0x200000000
0xffff5823ac7c   124  add x3, x3, x16
0xffff5823ac80   128  stur x3, [x2, #-1]
0xffff5823ac84   132  mov x2, x4
0xffff5823ac88   136  mov x3, x1
0xffff5823ac8c   140  ldr x16, pc+292 (addr 0x0000ffff5823adb0)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff5823ac90   144  br x16
0xffff5823ac94   148  ldr x16, [x26, #2568]
0xffff5823ac98   152  cmp x4, x16
0xffff5823ac9c   156  b.eq #+0xb4 (addr 0xffff5823ad50)
0xffff5823aca0   160  ldur x5, [x4, #-1]
0xffff5823aca4   164  ldrb w5, [x5, #11]
0xffff5823aca8   168  cmp x5, #0xc9 (201)
0xffff5823acac   172  b.ne #+0xa4 (addr 0xffff5823ad50)
0xffff5823acb0   176  add x4, x2, x3, asr #29
0xffff5823acb4   180  ldr x5, [x26, #2400]
0xffff5823acb8   184  stur x5, [x4, #15]
0xffff5823acbc   188  movz x0, #0x3
0xffff5823acc0   192  ldr x16, pc+248 (addr 0x0000ffff5823adb8)    ;; code: BUILTIN
0xffff5823acc4   196  br x16
0xffff5823acc8   200  tbz w1, #0, #+0x88 (addr 0xffff5823ad50)
0xffff5823accc   204  ldur x5, [x1, #-1]
0xffff5823acd0   208  ldrb w5, [x5, #11]
0xffff5823acd4   212  cmp x5, #0xc9 (201)
0xffff5823acd8   216  b.ne #+0x78 (addr 0xffff5823ad50)
0xffff5823acdc   220  ldur x5, [cp, #39]
0xffff5823ace0   224  ldur x5, [x5, #95]
0xffff5823ace4   228  cmp x1, x5
0xffff5823ace8   232  b.eq #+0x68 (addr 0xffff5823ad50)
0xffff5823acec   236  ldur x4, [x1, #39]
0xffff5823acf0   240  ldur x4, [x4, #39]
0xffff5823acf4   244  ldur x5, [cp, #39]
0xffff5823acf8   248  cmp x4, x5
0xffff5823acfc   252  b.ne #+0x54 (addr 0xffff5823ad50)
0xffff5823ad00   256  movz x5, #0x200000000
0xffff5823ad04   260  adds x4, x2, x3, asr #29
0xffff5823ad08   264  stur x5, [x4, #23]
0xffff5823ad0c   268  movz x16, #0xc00000000
0xffff5823ad10   272  sub csp, jssp, #0x10 (16)
0xffff5823ad14   276  stp fp, lr, [jssp, #-16]!
0xffff5823ad18   280  sub csp, jssp, #0x10 (16)
0xffff5823ad1c   284  str x16, [jssp, #-8]!
0xffff5823ad20   288  ldr x17, pc+160 (addr 0x0000ffff5823adc0)    ;; object: 0xffff5823aba1 <Code: CALL_IC>
0xffff5823ad24   292  sub csp, jssp, #0x10 (16)
0xffff5823ad28   296  str x17, [jssp, #-8]!
0xffff5823ad2c   300  add fp, jssp, #0x10 (16)
0xffff5823ad30   304  sub csp, jssp, #0x8 (8)
0xffff5823ad34   308  str x1, [jssp, #-8]!
0xffff5823ad38   312  ldr x16, pc+144 (addr 0x0000ffff5823adc8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff5823ad3c   316  blr x16
0xffff5823ad40   320  ldr x1, [jssp], #8
0xffff5823ad44   324  mov jssp, fp
0xffff5823ad48   328  ldp fp, lr, [jssp], #16
0xffff5823ad4c   332  b #-0x11c (addr 0xffff5823ac30)
0xffff5823ad50   336  movz x16, #0xc00000000
0xffff5823ad54   340  sub csp, jssp, #0x10 (16)
0xffff5823ad58   344  stp fp, lr, [jssp, #-16]!
0xffff5823ad5c   348  sub csp, jssp, #0x10 (16)
0xffff5823ad60   352  str x16, [jssp, #-8]!
0xffff5823ad64   356  ldr x17, pc+108 (addr 0x0000ffff5823add0)    ;; object: 0xffff5823aba1 <Code: CALL_IC>
0xffff5823ad68   360  sub csp, jssp, #0x10 (16)
0xffff5823ad6c   364  str x17, [jssp, #-8]!
0xffff5823ad70   368  add fp, jssp, #0x10 (16)
0xffff5823ad74   372  sub csp, jssp, #0x18 (24)
0xffff5823ad78   376  stp x3, x2, [jssp, #-24]!
0xffff5823ad7c   380  str x1, [jssp, #16]
0xffff5823ad80   384  movz x0, #0x3
0xffff5823ad84   388  ldr x1, pc+84 (addr 0x0000ffff5823add8)    ;; external reference (Runtime::CallIC_Miss)
0xffff5823ad88   392  ldr x16, pc+88 (addr 0x0000ffff5823ade0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823ad8c   396  blr x16
0xffff5823ad90   400  mov x1, x0
0xffff5823ad94   404  mov jssp, fp
0xffff5823ad98   408  ldp fp, lr, [jssp], #16
0xffff5823ad9c   412  b #-0xe0 (addr 0xffff5823acbc)
0xffff5823ada0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff5823ada4   420  d63f03e0       constant
0xffff5823ada8   424  5821e820       constant
0xffff5823adac   428  0000ffff       constant
0xffff5823adb0   432  58233b00       constant
0xffff5823adb4   436  0000ffff       constant
0xffff5823adb8   440  5821f820       constant
0xffff5823adbc   444  0000ffff       constant
0xffff5823adc0   448  5823aba1       constant
0xffff5823adc4   452  0000ffff       constant
0xffff5823adc8   456  5820ddc0       constant
0xffff5823adcc   460  0000ffff       constant
0xffff5823add0   464  5823aba1       constant
0xffff5823add4   468  0000ffff       constant
0xffff5823add8   472  00c86928       constant
0xffff5823addc   476  00000000       constant
0xffff5823ade0   480  58206060       constant
0xffff5823ade4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff5823ac34  code target (BUILTIN)  (0xffff5821e820)
0xffff5823ac8c  code target (STUB)  (0xffff58233b00)
0xffff5823acc0  code target (BUILTIN)  (0xffff5821f820)
0xffff5823ad20  embedded object  (0xffff5823aba1 <Code: CALL_IC>)
0xffff5823ad38  code target (STUB)  (0xffff5820ddc0)
0xffff5823ad64  embedded object  (0xffff5823aba1 <Code: CALL_IC>)
0xffff5823ad84  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff5823ad88  code target (STUB)  (0xffff58206060)
0xffff5823ada0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393219
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff5823ae60     0  ldur x2, [fp, #-16]
0xffff5823ae64     4  ldur x2, [x2, #31]
0xffff5823ae68     8  ldur x2, [x2, #87]
0xffff5823ae6c    12  ldr x16, pc+20 (addr 0x0000ffff5823ae80)    ;; code: CALL_IC, GENERIC
0xffff5823ae70    16  br x16
0xffff5823ae74    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5823ae78    24  d63f03e0       constant
0xffff5823ae7c    28  d503201f       constant
0xffff5823ae80    32  5823ac00       constant
0xffff5823ae84    36  0000ffff       constant


RelocInfo (size = 7)
0xffff5823ae6c  code target (CALL_IC)  (0xffff5823ac00)
0xffff5823ae74  constant pool (size 20)


kind = STUB
major_key = BinaryOpWithAllocationSiteStub
name = BinaryOpWithAllocationSiteStub(ADD_CreateAllocationMementos:String*String->String)
compiler = crankshaft
Instructions (size = 1164)
0xffff5823b220     0  movz x16, #0xa00000000
0xffff5823b224     4  sub csp, jssp, #0x10 (16)
0xffff5823b228     8  stp fp, lr, [jssp, #-16]!
0xffff5823b22c    12  mov fp, jssp
0xffff5823b230    16  sub csp, jssp, #0x28 (40)
0xffff5823b234    20  sub jssp, jssp, #0x28 (40)
0xffff5823b238    24  stur x16, [fp, #-8]
0xffff5823b23c    28  str x2, [jssp, #24]
0xffff5823b240    32  str x1, [jssp, #16]
0xffff5823b244    36  str x0, [jssp, #8]
0xffff5823b248    40  str cp, [jssp]
0xffff5823b24c    44  mov x3, cp
0xffff5823b250    48  tbz w1, #0, #+0x3d8 (addr 0xffff5823b628)
0xffff5823b254    52  ldur x4, [x1, #-1]
0xffff5823b258    56  ldrb w4, [x4, #11]
0xffff5823b25c    60  tbnz w4, #7, #+0x3d4 (addr 0xffff5823b630)
0xffff5823b260    64  tbz w0, #0, #+0x3d8 (addr 0xffff5823b638)
0xffff5823b264    68  ldur x4, [x0, #-1]
0xffff5823b268    72  ldrb w4, [x4, #11]
0xffff5823b26c    76  tbnz w4, #7, #+0x3d4 (addr 0xffff5823b640)
0xffff5823b270    80  ldur w4, [x1, #19]
0xffff5823b274    84  ldur w5, [x0, #19]
0xffff5823b278    88  cbz w4, #+0x288 (addr 0xffff5823b500)
0xffff5823b27c    92  cbz w5, #+0x27c (addr 0xffff5823b4f8)
0xffff5823b280    96  add w6, w4, w5
0xffff5823b284   100  movn w16, #0xe0
0xffff5823b288   104  cmp w6, w16, lsr #4
0xffff5823b28c   108  b.hs #+0x3bc (addr 0xffff5823b648)
0xffff5823b290   112  cmp w6, #0xd (13)
0xffff5823b294   116  b.ge #+0x1c0 (addr 0xffff5823b454)
0xffff5823b298   120  ldur x7, [x1, #-1]
0xffff5823b29c   124  ldrb w7, [x7, #11]
0xffff5823b2a0   128  ldur x8, [x0, #-1]
0xffff5823b2a4   132  ldrb w8, [x8, #11]
0xffff5823b2a8   136  orr w9, w7, w8
0xffff5823b2ac   140  eor w7, w7, w8
0xffff5823b2b0   144  and w7, w7, #0x4
0xffff5823b2b4   148  cbnz w7, #+0xc (addr 0xffff5823b2c0)
0xffff5823b2b8   152  and w7, w9, #0x3
0xffff5823b2bc   156  cbz w7, #+0x28 (addr 0xffff5823b2e4)
0xffff5823b2c0   160  sub csp, jssp, #0x10 (16)
0xffff5823b2c4   164  stp x0, x1, [jssp, #-16]!
0xffff5823b2c8   168  mov cp, x3
0xffff5823b2cc   172  movz x0, #0x2
0xffff5823b2d0   176  movz x1, #0xa6c0
0xffff5823b2d4   180  movk x1, #0xec, lsl #16
0xffff5823b2d8   184  ldr x16, pc+728 (addr 0x0000ffff5823b5b0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823b2dc   188  blr x16
0xffff5823b2e0   192  b #+0x228 (addr 0xffff5823b508)
0xffff5823b2e4   196  and w0, w9, #0x4
0xffff5823b2e8   200  cbnz w0, #+0x14 (addr 0xffff5823b2fc)
0xffff5823b2ec   204  lsl w0, w6, #1
0xffff5823b2f0   208  mov x1, x0
0xffff5823b2f4   212  ldr x0, pc+708 (addr 0x0000ffff5823b5b8)    ;; object: 0x32b04ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823b2f8   216  b #+0xc (addr 0xffff5823b304)
0xffff5823b2fc   220  mov x1, x6
0xffff5823b300   224  ldr x0, pc+704 (addr 0x0000ffff5823b5c0)    ;; object: 0x32b04bf9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823b304   228  add w1, w1, #0x1f (31)
0xffff5823b308   232  and w1, w1, #0xfffffff8
0xffff5823b30c   236  cmp w1, #0x96000 (614400)
0xffff5823b310   240  b.lt #+0x2c (addr 0xffff5823b33c)
0xffff5823b314   244  sub csp, jssp, #0x10 (16)
0xffff5823b318   248  ldp x1, x0, [jssp, #8]
0xffff5823b31c   252  stp x1, x0, [jssp, #-16]!
0xffff5823b320   256  ldr cp, [jssp, #16]
0xffff5823b324   260  movz x0, #0x2
0xffff5823b328   264  movz x1, #0xa6c0
0xffff5823b32c   268  movk x1, #0xec, lsl #16
0xffff5823b330   272  ldr x16, pc+664 (addr 0x0000ffff5823b5c8)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823b334   276  blr x16
0xffff5823b338   280  b #+0x1d0 (addr 0xffff5823b508)
0xffff5823b33c   284  add w2, w1, #0x10 (16)
0xffff5823b340   288  sxtw x2, w2
0xffff5823b344   292  movz x3, #0x92c0
0xffff5823b348   296  movk x3, #0x16e7, lsl #16
0xffff5823b34c   300  ldp x8, x16, [x3]
0xffff5823b350   304  adds x7, x8, x2
0xffff5823b354   308  ccmp x7, x16, #nzCv, lo
0xffff5823b358   312  b.hi #+0x1c0 (addr 0xffff5823b518)
0xffff5823b35c   316  str x7, [x3]
0xffff5823b360   320  orr x8, x8, #0x1
0xffff5823b364   324  add x1, x8, w1, sxtw
0xffff5823b368   328  ldr x2, pc+616 (addr 0x0000ffff5823b5d0)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823b36c   332  stur x2, [x1, #-1]
0xffff5823b370   336  ldr x2, [jssp, #24]
0xffff5823b374   340  stur x2, [x1, #7]
0xffff5823b378   344  ldur w1, [x2, #35]
0xffff5823b37c   348  add w1, w1, #0x1 (1)
0xffff5823b380   352  lsl x1, x1, #32
0xffff5823b384   356  stur x1, [x2, #31]
0xffff5823b388   360  stur x0, [x8, #-1]
0xffff5823b38c   364  movz w1, #0x3
0xffff5823b390   368  stur w1, [x8, #7]
0xffff5823b394   372  lsl x1, x6, #32
0xffff5823b398   376  stur x1, [x8, #15]
0xffff5823b39c   380  ldr x1, pc+572 (addr 0x0000ffff5823b5d8)    ;; object: 0x32b04ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823b3a0   384  cmp x0, x1
0xffff5823b3a4   388  b.eq #+0x58 (addr 0xffff5823b3fc)
0xffff5823b3a8   392  ldr x1, [jssp, #16]
0xffff5823b3ac   396  movz x0, #0x0
0xffff5823b3b0   400  cmp w4, w0
0xffff5823b3b4   404  b.le #+0x1c (addr 0xffff5823b3d0)
0xffff5823b3b8   408  add x2, x1, #0x17 (23)
0xffff5823b3bc   412  ldrb w3, [x2, w0, sxtw]
0xffff5823b3c0   416  add x2, x8, #0x17 (23)
0xffff5823b3c4   420  strb w3, [x2, w0, sxtw]
0xffff5823b3c8   424  add w0, w0, #0x1 (1)
0xffff5823b3cc   428  b #-0x1c (addr 0xffff5823b3b0)
0xffff5823b3d0   432  ldr x3, [jssp, #8]
0xffff5823b3d4   436  movz x0, #0x0
0xffff5823b3d8   440  cmp w5, w0
0xffff5823b3dc   444  b.le #+0x70 (addr 0xffff5823b44c)
0xffff5823b3e0   448  add x1, x3, #0x17 (23)
0xffff5823b3e4   452  ldrb w2, [x1, w0, sxtw]
0xffff5823b3e8   456  add w1, w4, w0
0xffff5823b3ec   460  add x6, x8, #0x17 (23)
0xffff5823b3f0   464  strb w2, [x6, w1, sxtw]
0xffff5823b3f4   468  add w0, w0, #0x1 (1)
0xffff5823b3f8   472  b #-0x20 (addr 0xffff5823b3d8)
0xffff5823b3fc   476  ldp x3, x1, [jssp, #8]
0xffff5823b400   480  movz x0, #0x0
0xffff5823b404   484  cmp w4, w0
0xffff5823b408   488  b.le #+0x1c (addr 0xffff5823b424)
0xffff5823b40c   492  add x2, x1, #0x17 (23)
0xffff5823b410   496  ldrh w6, [x2, w0, sxtw #1]
0xffff5823b414   500  add x2, x8, #0x17 (23)
0xffff5823b418   504  strh w6, [x2, w0, sxtw #1]
0xffff5823b41c   508  add w0, w0, #0x1 (1)
0xffff5823b420   512  b #-0x1c (addr 0xffff5823b404)
0xffff5823b424   516  movz x0, #0x0
0xffff5823b428   520  cmp w5, w0
0xffff5823b42c   524  b.le #+0x20 (addr 0xffff5823b44c)
0xffff5823b430   528  add x1, x3, #0x17 (23)
0xffff5823b434   532  ldrh w2, [x1, w0, sxtw #1]
0xffff5823b438   536  add w1, w4, w0
0xffff5823b43c   540  add x6, x8, #0x17 (23)
0xffff5823b440   544  strh w2, [x6, w1, sxtw #1]
0xffff5823b444   548  add w0, w0, #0x1 (1)
0xffff5823b448   552  b #-0x20 (addr 0xffff5823b428)
0xffff5823b44c   556  mov x0, x8
0xffff5823b450   560  b #+0xb8 (addr 0xffff5823b508)
0xffff5823b454   564  mov x3, x0
0xffff5823b458   568  ldur x0, [x1, #-1]
0xffff5823b45c   572  ldrb w0, [x0, #11]
0xffff5823b460   576  ldur x4, [x3, #-1]
0xffff5823b464   580  ldrb w4, [x4, #11]
0xffff5823b468   584  movz x7, #0x92c0
0xffff5823b46c   588  movk x7, #0x16e7, lsl #16
0xffff5823b470   592  ldp x8, x5, [x7]
0xffff5823b474   596  adds x16, x8, #0x38 (56)
0xffff5823b478   600  ccmp x16, x5, #nzCv, lo
0xffff5823b47c   604  b.hi #+0xe4 (addr 0xffff5823b560)
0xffff5823b480   608  str x16, [x7]
0xffff5823b484   612  orr x8, x8, #0x1
0xffff5823b488   616  add x5, x8, #0x28 (40)
0xffff5823b48c   620  ldr x7, pc+340 (addr 0x0000ffff5823b5e0)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823b490   624  stur x7, [x5, #-1]
0xffff5823b494   628  stur x2, [x5, #7]
0xffff5823b498   632  ldur w5, [x2, #35]
0xffff5823b49c   636  add w5, w5, #0x1 (1)
0xffff5823b4a0   640  lsl x5, x5, #32
0xffff5823b4a4   644  stur x5, [x2, #31]
0xffff5823b4a8   648  and w2, w0, w4
0xffff5823b4ac   652  eor w0, w0, w4
0xffff5823b4b0   656  and w2, w2, #0xc
0xffff5823b4b4   660  cbnz w2, #+0x1c (addr 0xffff5823b4d0)
0xffff5823b4b8   664  and w0, w0, #0xc
0xffff5823b4bc   668  cmp w0, #0xc (12)
0xffff5823b4c0   672  b.eq #+0x10 (addr 0xffff5823b4d0)
0xffff5823b4c4   676  ldr x0, pc+292 (addr 0x0000ffff5823b5e8)    ;; object: 0x32b04c51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823b4c8   680  stur x0, [x8, #-1]
0xffff5823b4cc   684  b #+0xc (addr 0xffff5823b4d8)
0xffff5823b4d0   688  ldr x0, pc+288 (addr 0x0000ffff5823b5f0)    ;; object: 0x32b04ca9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823b4d4   692  stur x0, [x8, #-1]
0xffff5823b4d8   696  movz w0, #0x3
0xffff5823b4dc   700  stur w0, [x8, #7]
0xffff5823b4e0   704  lsl x0, x6, #32
0xffff5823b4e4   708  stur x0, [x8, #15]
0xffff5823b4e8   712  stur x1, [x8, #23]
0xffff5823b4ec   716  stur x3, [x8, #31]
0xffff5823b4f0   720  mov x0, x8
0xffff5823b4f4   724  b #+0x14 (addr 0xffff5823b508)
0xffff5823b4f8   728  mov x0, x1
0xffff5823b4fc   732  b #+0xc (addr 0xffff5823b508)
0xffff5823b500   736  mov x3, x0
0xffff5823b504   740  mov x0, x3
0xffff5823b508   744  ldr cp, [jssp]
0xffff5823b50c   748  mov jssp, fp
0xffff5823b510   752  ldp fp, lr, [jssp], #16
0xffff5823b514   756  ret
0xffff5823b518   760  movz x8, #0x0
0xffff5823b51c   764  mov x16, lr
0xffff5823b520   768  ldr x17, pc+216 (addr 0x0000ffff5823b5f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5823b524   772  blr x17
0xffff5823b528   776  lsl x0, x2, #32
0xffff5823b52c   780  movz x10, #0x0
0xffff5823b530   784  sub csp, jssp, #0x10 (16)
0xffff5823b534   788  stp x10, x0, [jssp, #-16]!
0xffff5823b538   792  ldur cp, [fp, #-40]
0xffff5823b53c   796  movz x0, #0x2
0xffff5823b540   800  movz x1, #0x5b88
0xffff5823b544   804  movk x1, #0xe2, lsl #16
0xffff5823b548   808  ldr x16, pc+184 (addr 0x0000ffff5823b600)    ;; code: STUB, CEntryStub, minor: 5
0xffff5823b54c   812  blr x16
0xffff5823b550   816  str x0, [jssp, #64]
0xffff5823b554   820  ldr x16, pc+180 (addr 0x0000ffff5823b608)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5823b558   824  blr x16
0xffff5823b55c   828  b #-0x1f8 (addr 0xffff5823b364)
0xffff5823b560   832  movz x8, #0x0
0xffff5823b564   836  mov x16, lr
0xffff5823b568   840  ldr x17, pc+168 (addr 0x0000ffff5823b610)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5823b56c   844  blr x17
0xffff5823b570   848  movz x0, #0x3800000000
0xffff5823b574   852  movz x10, #0x0
0xffff5823b578   856  sub csp, jssp, #0x10 (16)
0xffff5823b57c   860  stp x10, x0, [jssp, #-16]!
0xffff5823b580   864  ldur cp, [fp, #-40]
0xffff5823b584   868  movz x0, #0x2
0xffff5823b588   872  movz x1, #0x5b88
0xffff5823b58c   876  movk x1, #0xe2, lsl #16
0xffff5823b590   880  ldr x16, pc+136 (addr 0x0000ffff5823b618)    ;; code: STUB, CEntryStub, minor: 5
0xffff5823b594   884  blr x16
0xffff5823b598   888  str x0, [jssp, #64]
0xffff5823b59c   892  ldr x16, pc+132 (addr 0x0000ffff5823b620)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5823b5a0   896  blr x16
0xffff5823b5a4   900  b #-0x11c (addr 0xffff5823b488)
0xffff5823b5a8   904  580003ff       constant pool begin (num_const = 31)    ;; constant pool
0xffff5823b5ac   908  d63f03e0       constant
0xffff5823b5b0   912  58206060       constant
0xffff5823b5b4   916  0000ffff       constant
0xffff5823b5b8   920  32b04ba1       constant
0xffff5823b5bc   924  00000000       constant
0xffff5823b5c0   928  32b04bf9       constant
0xffff5823b5c4   932  00000000       constant
0xffff5823b5c8   936  58206060       constant
0xffff5823b5cc   940  0000ffff       constant
0xffff5823b5d0   944  32b05d81       constant
0xffff5823b5d4   948  00000000       constant
0xffff5823b5d8   952  32b04ba1       constant
0xffff5823b5dc   956  00000000       constant
0xffff5823b5e0   960  32b05d81       constant
0xffff5823b5e4   964  00000000       constant
0xffff5823b5e8   968  32b04c51       constant
0xffff5823b5ec   972  00000000       constant
0xffff5823b5f0   976  32b04ca9       constant
0xffff5823b5f4   980  00000000       constant
0xffff5823b5f8   984  58206820       constant
0xffff5823b5fc   988  0000ffff       constant
0xffff5823b600   992  58206260       constant
0xffff5823b604   996  0000ffff       constant
0xffff5823b608  1000  582068e0       constant
0xffff5823b60c  1004  0000ffff       constant
0xffff5823b610  1008  58206820       constant
0xffff5823b614  1012  0000ffff       constant
0xffff5823b618  1016  58206260       constant
0xffff5823b61c  1020  0000ffff       constant
0xffff5823b620  1024  582068e0       constant
0xffff5823b624  1028  0000ffff       constant
0xffff5823b628  1032  movz x16, #0x0
0xffff5823b62c  1036  bl #+0x24 (addr 0xffff5823b650)
0xffff5823b630  1040  movz x16, #0x8
0xffff5823b634  1044  bl #+0x1c (addr 0xffff5823b650)
0xffff5823b638  1048  movz x16, #0x10
0xffff5823b63c  1052  bl #+0x14 (addr 0xffff5823b650)
0xffff5823b640  1056  movz x16, #0x18
0xffff5823b644  1060  bl #+0xc (addr 0xffff5823b650)
0xffff5823b648  1064  movz x16, #0x20
0xffff5823b64c  1068  bl #+0x4 (addr 0xffff5823b650)
0xffff5823b650  1072  ldr x17, pc+24 (addr 0x0000ffff5823b668)    ;; lazy deoptimization bailout 0
0xffff5823b654  1076  add x17, x17, x16
0xffff5823b658  1080  br x17
0xffff5823b65c  1084  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5823b660  1088  d63f03e0       constant
0xffff5823b664  1092  d503201f       constant
0xffff5823b668  1096  58006000       constant
0xffff5823b66c  1100  0000ffff       constant


Safepoints (size = 60)
0xffff5823b2e0   192  1111000 (sp -> fp)       5
0xffff5823b338   280  1111000 (sp -> fp)       6
0xffff5823b550   816  1111000 | x0 | x8 (sp -> fp)  <none> argc: 2
0xffff5823b598   888  1111000 | x1 | x2 | x3 | x8 (sp -> fp)  <none> argc: 2

RelocInfo (size = 37)
0xffff5823b2d8  code target (STUB)  (0xffff58206060)
0xffff5823b2f4  embedded object  (0x32b04ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5823b300  embedded object  (0x32b04bf9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5823b330  code target (STUB)  (0xffff58206060)
0xffff5823b368  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5823b39c  embedded object  (0x32b04ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5823b48c  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5823b4c4  embedded object  (0x32b04c51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5823b4d0  embedded object  (0x32b04ca9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5823b520  code target (STUB)  (0xffff58206820)
0xffff5823b548  code target (STUB)  (0xffff58206260)
0xffff5823b554  code target (STUB)  (0xffff582068e0)
0xffff5823b568  code target (STUB)  (0xffff58206820)
0xffff5823b590  code target (STUB)  (0xffff58206260)
0xffff5823b59c  code target (STUB)  (0xffff582068e0)
0xffff5823b5a8  constant pool (size 128)
0xffff5823b650  runtime entry
0xffff5823b65c  constant pool (size 20)


kind = BINARY_OP_IC
major_key = BinaryOpICWithAllocationSiteStub
ic_state = MONOMORPHIC
extra_ic_state = 8775
type = NORMAL
name = BinaryOpICWithAllocationSiteStub(ADD_CreateAllocationMementos:String*String->String)
compiler = unknown
Instructions (size = 40)
0xffff5823b720     0  ldr x2, pc+24 (addr 0x0000ffff5823b738)    ;; object: 0x39c04241 <undefined>
0xffff5823b724     4  ldr x16, pc+28 (addr 0x0000ffff5823b740)    ;; code: STUB, BinaryOpWithAllocationSiteStub, minor: 8775
0xffff5823b728     8  br x16
0xffff5823b72c    12  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff5823b730    16  d63f03e0       constant
0xffff5823b734    20  d503201f       constant
0xffff5823b738    24  39c04241       constant
0xffff5823b73c    28  00000000       constant
0xffff5823b740    32  5823b220       constant
0xffff5823b744    36  0000ffff       constant


RelocInfo (size = 8)
0xffff5823b720  embedded object  (0x39c04241 <undefined>)
0xffff5823b724  code target (STUB)  (0xffff5823b220)
0xffff5823b72c  constant pool (size 28)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 285)
0xffff5823bc80     0  movz x2, #0x92c0
0xffff5823bc84     4  movk x2, #0x16e7, lsl #16
0xffff5823bc88     8  ldp x3, x0, [x2]
0xffff5823bc8c    12  adds x16, x3, #0x40 (64)
0xffff5823bc90    16  ccmp x16, x0, #nzCv, lo
0xffff5823bc94    20  b.hi #+0x4c (addr 0xffff5823bce0)
0xffff5823bc98    24  str x16, [x2]
0xffff5823bc9c    28  orr x3, x3, #0x1
0xffff5823bca0    32  ldr x0, pc+176 (addr 0x0000ffff5823bd50)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823bca4    36  stur x0, [x3, #-1]
0xffff5823bca8    40  movz x0, #0x600000000
0xffff5823bcac    44  stur x0, [x3, #7]
0xffff5823bcb0    48  stur x1, [x3, #15]
0xffff5823bcb4    52  stur cp, [x3, #23]
0xffff5823bcb8    56  ldr x0, pc+160 (addr 0x0000ffff5823bd58)    ;; object: 0x39c04519 <the hole>
0xffff5823bcbc    60  stur x0, [x3, #31]
0xffff5823bcc0    64  ldur x0, [cp, #39]
0xffff5823bcc4    68  stur x0, [x3, #39]
0xffff5823bcc8    72  ldr x0, pc+152 (addr 0x0000ffff5823bd60)    ;; object: 0x39c04241 <undefined>
0xffff5823bccc    76  stur x0, [x3, #47]
0xffff5823bcd0    80  ldr x0, pc+152 (addr 0x0000ffff5823bd68)    ;; object: 0x39c04241 <undefined>
0xffff5823bcd4    84  stur x0, [x3, #55]
0xffff5823bcd8    88  mov x0, x3
0xffff5823bcdc    92  ret
0xffff5823bce0    96  sub csp, jssp, #0x10 (16)
0xffff5823bce4   100  stp fp, lr, [jssp, #-16]!
0xffff5823bce8   104  movz fp, #0xa00000000
0xffff5823bcec   108  sub csp, jssp, #0x8 (8)
0xffff5823bcf0   112  str fp, [jssp, #-8]!
0xffff5823bcf4   116  add fp, jssp, #0x8 (8)
0xffff5823bcf8   120  movz x3, #0x0
0xffff5823bcfc   124  mov x16, lr
0xffff5823bd00   128  ldr x17, pc+112 (addr 0x0000ffff5823bd70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5823bd04   132  blr x17
0xffff5823bd08   136  movz x0, #0x4000000000
0xffff5823bd0c   140  movz x10, #0x0
0xffff5823bd10   144  sub csp, jssp, #0x10 (16)
0xffff5823bd14   148  stp x10, x0, [jssp, #-16]!
0xffff5823bd18   152  movz x0, #0x2
0xffff5823bd1c   156  movz x1, #0x5b88
0xffff5823bd20   160  movk x1, #0xe2, lsl #16
0xffff5823bd24   164  ldr x16, pc+84 (addr 0x0000ffff5823bd78)    ;; code: STUB, CEntryStub, minor: 5
0xffff5823bd28   168  blr x16
0xffff5823bd2c   172  str x0, [jssp, #24]
0xffff5823bd30   176  ldr x16, pc+80 (addr 0x0000ffff5823bd80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5823bd34   180  blr x16
0xffff5823bd38   184  ldr lr, [jssp, #16]
0xffff5823bd3c   188  ldp xzr, fp, [jssp], #24
0xffff5823bd40   192  b #-0xa0 (addr 0xffff5823bca0)
0xffff5823bd44   196  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff5823bd48   200  d63f03e0       constant
0xffff5823bd4c   204  d503201f       constant
0xffff5823bd50   208  32b06149       constant
0xffff5823bd54   212  00000000       constant
0xffff5823bd58   216  39c04519       constant
0xffff5823bd5c   220  00000000       constant
0xffff5823bd60   224  39c04241       constant
0xffff5823bd64   228  00000000       constant
0xffff5823bd68   232  39c04241       constant
0xffff5823bd6c   236  00000000       constant
0xffff5823bd70   240  58206820       constant
0xffff5823bd74   244  0000ffff       constant
0xffff5823bd78   248  58206260       constant
0xffff5823bd7c   252  0000ffff       constant
0xffff5823bd80   256  582068e0       constant
0xffff5823bd84   260  0000ffff       constant


Safepoints (size = 21)
0xffff5823bd2c   172  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 13)
0xffff5823bca0  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5823bcb8  embedded object  (0x39c04519 <the hole>)
0xffff5823bcc8  embedded object  (0x39c04241 <undefined>)
0xffff5823bcd0  embedded object  (0x39c04241 <undefined>)
0xffff5823bd00  code target (STUB)  (0xffff58206820)
0xffff5823bd24  code target (STUB)  (0xffff58206260)
0xffff5823bd30  code target (STUB)  (0xffff582068e0)
0xffff5823bd44  constant pool (size 68)


kind = KEYED_STORE_IC
major_key = VectorKeyedStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = STRICT
name = VectorKeyedStoreICTrampolineStub
compiler = unknown
Instructions (size = 384)
0xffff5823be00     0  ldur x3, [fp, #-16]
0xffff5823be04     4  ldur x3, [x3, #31]
0xffff5823be08     8  ldur x3, [x3, #87]
0xffff5823be0c    12  add x5, x3, x4, asr #29
0xffff5823be10    16  ldur x5, [x5, #15]
0xffff5823be14    20  tbz w1, #0, #+0x140 (addr 0xffff5823bf54)
0xffff5823be18    24  ldur x6, [x1, #-1]
0xffff5823be1c    28  ldur x7, [x5, #7]
0xffff5823be20    32  cmp x7, x6
0xffff5823be24    36  b.ne #+0x14 (addr 0xffff5823be38)
0xffff5823be28    40  add x5, x3, x4, asr #29
0xffff5823be2c    44  ldur x5, [x5, #23]
0xffff5823be30    48  add x5, x5, #0x5f (95)
0xffff5823be34    52  br x5
0xffff5823be38    56  ldur x7, [x5, #-1]
0xffff5823be3c    60  ldr x16, [x26, #224]
0xffff5823be40    64  cmp x7, x16
0xffff5823be44    68  b.ne #+0x68 (addr 0xffff5823beac)
0xffff5823be48    72  ldur x8, [x5, #7]
0xffff5823be4c    76  add x8, x5, x8, asr #29
0xffff5823be50    80  add x8, x8, #0xf (15)
0xffff5823be54    84  add x5, x5, #0xf (15)
0xffff5823be58    88  ldr x7, [x5]
0xffff5823be5c    92  ldur x7, [x7, #7]
0xffff5823be60    96  cmp x6, x7
0xffff5823be64   100  b.ne #+0x38 (addr 0xffff5823be9c)
0xffff5823be68   104  ldr x8, [x5, #8]
0xffff5823be6c   108  ldr x16, [x26, #40]
0xffff5823be70   112  cmp x8, x16
0xffff5823be74   116  b.ne #+0x10 (addr 0xffff5823be84)
0xffff5823be78   120  ldr x5, [x5, #16]
0xffff5823be7c   124  add x5, x5, #0x5f (95)
0xffff5823be80   128  br x5
0xffff5823be84   132  ldur x8, [x8, #7]
0xffff5823be88   136  tbz w8, #0, #+0xac (addr 0xffff5823bf34)
0xffff5823be8c   140  ldr x6, [x5, #16]
0xffff5823be90   144  mov x5, x8
0xffff5823be94   148  add x6, x6, #0x5f (95)
0xffff5823be98   152  br x6
0xffff5823be9c   156  add x5, x5, #0x18 (24)
0xffff5823bea0   160  cmp x5, x8
0xffff5823bea4   164  b.lt #-0x4c (addr 0xffff5823be58)
0xffff5823bea8   168  b #+0x8c (addr 0xffff5823bf34)
0xffff5823beac   172  ldr x16, [x26, #2400]
0xffff5823beb0   176  cmp x5, x16
0xffff5823beb4   180  b.ne #+0xc (addr 0xffff5823bec0)
0xffff5823beb8   184  ldr x16, pc+176 (addr 0x0000ffff5823bf68)    ;; code: KEYED_STORE_IC, MEGAMORPHIC
0xffff5823bebc   188  br x16
0xffff5823bec0   192  cmp x2, x5
0xffff5823bec4   196  b.ne #+0x70 (addr 0xffff5823bf34)
0xffff5823bec8   200  add x5, x3, x4, asr #29
0xffff5823becc   204  ldur x5, [x5, #23]
0xffff5823bed0   208  ldur x7, [x5, #15]
0xffff5823bed4   212  ldur x7, [x7, #7]
0xffff5823bed8   216  cmp x6, x7
0xffff5823bedc   220  b.ne #+0x10 (addr 0xffff5823beec)
0xffff5823bee0   224  ldur x5, [x5, #23]
0xffff5823bee4   228  add x5, x5, #0x5f (95)
0xffff5823bee8   232  br x5
0xffff5823beec   236  ldur x8, [x5, #7]
0xffff5823bef0   240  movz x16, #0x200000000
0xffff5823bef4   244  cmp x8, x16
0xffff5823bef8   248  b.eq #+0x3c (addr 0xffff5823bf34)
0xffff5823befc   252  add x8, x5, x8, asr #29
0xffff5823bf00   256  add x8, x8, #0xf (15)
0xffff5823bf04   260  add x5, x5, #0x1f (31)
0xffff5823bf08   264  ldr x7, [x5]
0xffff5823bf0c   268  ldur x7, [x7, #7]
0xffff5823bf10   272  cmp x6, x7
0xffff5823bf14   276  b.ne #+0x10 (addr 0xffff5823bf24)
0xffff5823bf18   280  ldr x5, [x5, #8]
0xffff5823bf1c   284  add x5, x5, #0x5f (95)
0xffff5823bf20   288  br x5
0xffff5823bf24   292  add x5, x5, #0x10 (16)
0xffff5823bf28   296  cmp x5, x8
0xffff5823bf2c   300  b.lt #-0x24 (addr 0xffff5823bf08)
0xffff5823bf30   304  b #+0x4 (addr 0xffff5823bf34)
0xffff5823bf34   308  sub csp, jssp, #0x28 (40)
0xffff5823bf38   312  stp x4, x0, [jssp, #-32]!
0xffff5823bf3c   316  stp x2, x1, [jssp, #16]
0xffff5823bf40   320  str x3, [jssp, #-8]!
0xffff5823bf44   324  movz x0, #0x5
0xffff5823bf48   328  ldr x1, pc+40 (addr 0x0000ffff5823bf70)    ;; external reference (Runtime::KeyedStoreIC_Miss)
0xffff5823bf4c   332  ldr x16, pc+44 (addr 0x0000ffff5823bf78)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823bf50   336  br x16
0xffff5823bf54   340  ldr x6, [x26, #120]
0xffff5823bf58   344  b #-0x13c (addr 0xffff5823be1c)
0xffff5823bf5c   348  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5823bf60   352  d63f03e0       constant
0xffff5823bf64   356  d503201f       constant
0xffff5823bf68   360  582263a0       constant
0xffff5823bf6c   364  0000ffff       constant
0xffff5823bf70   368  00c88e08       constant
0xffff5823bf74   372  00000000       constant
0xffff5823bf78   376  58206060       constant
0xffff5823bf7c   380  0000ffff       constant


RelocInfo (size = 14)
0xffff5823beb8  code target (KEYED_STORE_IC)  (0xffff582263a0)
0xffff5823bf48  external reference (Runtime::KeyedStoreIC_Miss)  (0xc88e08)
0xffff5823bf4c  code target (STUB)  (0xffff58206060)
0xffff5823bf5c  constant pool (size 36)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff5823cc20     0  ldur x0, [x1, #7]
0xffff5823cc24     4  movz x16, #0x1bf
0xffff5823cc28     8  ldr x0, [x0, x16]
0xffff5823cc2c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff5823cca0     0  ldur x0, [x1, #7]
0xffff5823cca4     4  movz x16, #0x1c7
0xffff5823cca8     8  ldr x0, [x0, x16]
0xffff5823ccac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff5823cd20     0  ldur x0, [x1, #7]
0xffff5823cd24     4  movz x16, #0x17f
0xffff5823cd28     8  ldr x0, [x0, x16]
0xffff5823cd2c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff5823cda0     0  ldur x0, [x1, #7]
0xffff5823cda4     4  movz x16, #0x1af
0xffff5823cda8     8  ldr x0, [x0, x16]
0xffff5823cdac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff5823ce20     0  ldur x0, [x1, #7]
0xffff5823ce24     4  movz x16, #0x1b7
0xffff5823ce28     8  ldr x0, [x0, x16]
0xffff5823ce2c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 88)
0xffff5823cea0     0  stur x5, [x1, #-1]
0xffff5823cea4     4  tbz w5, #0, #+0x34 (addr 0xffff5823ced8)
0xffff5823cea8     8  sub x2, x1, #0x1 (1)
0xffff5823ceac    12  and x5, x5, #0xfffffffffff00000
0xffff5823ceb0    16  ldr x5, [x5, #8]
0xffff5823ceb4    20  tbz w5, #1, #+0x24 (addr 0xffff5823ced8)
0xffff5823ceb8    24  and x5, x1, #0xfffffffffff00000
0xffff5823cebc    28  ldr x5, [x5, #8]
0xffff5823cec0    32  tbz w5, #2, #+0x18 (addr 0xffff5823ced8)
0xffff5823cec4    36  sub csp, jssp, #0x8 (8)
0xffff5823cec8    40  str lr, [jssp, #-8]!
0xffff5823cecc    44  ldr x16, pc+28 (addr 0x0000ffff5823cee8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5823ced0    48  blr x16
0xffff5823ced4    52  ldr lr, [jssp], #8
0xffff5823ced8    56  ret
0xffff5823cedc    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5823cee0    64  d63f03e0       constant
0xffff5823cee4    68  d503201f       constant
0xffff5823cee8    72  58238080       constant
0xffff5823ceec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff5823cecc  code target (STUB)  (0xffff58238080)
0xffff5823cedc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 168)
0xffff5823cf60     0  sub csp, jssp, #0x8 (8)
0xffff5823cf64     4  str x3, [jssp, #-8]!
0xffff5823cf68     8  sub csp, jssp, #0x8 (8)
0xffff5823cf6c    12  str x4, [jssp, #-8]!
0xffff5823cf70    16  ldr x3, pc+104 (addr 0x0000ffff5823cfd8)    ;; object: 0x39c5b0f1 Cell for 0
0xffff5823cf74    20  ldur x3, [x3, #7]
0xffff5823cf78    24  cmp x3, #0x0 (0)
0xffff5823cf7c    28  b.ne #+0x3c (addr 0xffff5823cfb8)
0xffff5823cf80    32  ldr x5, pc+96 (addr 0x0000ffff5823cfe0)    ;; object: 0x39c5b101 WeakCell for 0x32b0c6b1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823cf84    36  ldur x5, [x5, #7]
0xffff5823cf88    40  tbz w5, #0, #+0x30 (addr 0xffff5823cfb8)
0xffff5823cf8c    44  ldursw x4, [x5, #15]
0xffff5823cf90    48  tbnz w4, #23, #+0x28 (addr 0xffff5823cfb8)
0xffff5823cf94    52  ldur x4, [x5, #47]
0xffff5823cf98    56  ldur x4, [x4, #119]
0xffff5823cf9c    60  cmp x0, x4
0xffff5823cfa0    64  b.ne #+0x18 (addr 0xffff5823cfb8)
0xffff5823cfa4    68  ldr x4, [jssp], #8
0xffff5823cfa8    72  ldr x3, [jssp], #8
0xffff5823cfac    76  ldr x2, pc+60 (addr 0x0000ffff5823cfe8)    ;; object: 0x39c05209 <String[4]: next>
0xffff5823cfb0    80  ldr x16, pc+64 (addr 0x0000ffff5823cff0)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff5823cfb4    84  br x16
0xffff5823cfb8    88  ldr x2, pc+64 (addr 0x0000ffff5823cff8)    ;; object: 0x39c05209 <String[4]: next>
0xffff5823cfbc    92  ldr x4, [jssp], #8
0xffff5823cfc0    96  ldr x3, [jssp], #8
0xffff5823cfc4   100  ldr x16, pc+60 (addr 0x0000ffff5823d000)    ;; code: BUILTIN
0xffff5823cfc8   104  br x16
0xffff5823cfcc   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff5823cfd0   112  d63f03e0       constant
0xffff5823cfd4   116  d503201f       constant
0xffff5823cfd8   120  39c5b0f1       constant
0xffff5823cfdc   124  00000000       constant
0xffff5823cfe0   128  39c5b101       constant
0xffff5823cfe4   132  00000000       constant
0xffff5823cfe8   136  39c05209       constant
0xffff5823cfec   140  00000000       constant
0xffff5823cff0   144  5823cea0       constant
0xffff5823cff4   148  0000ffff       constant
0xffff5823cff8   152  39c05209       constant
0xffff5823cffc   156  00000000       constant
0xffff5823d000   160  58222420       constant
0xffff5823d004   164  0000ffff       constant


RelocInfo (size = 12)
0xffff5823cf70  embedded object  (0x39c5b0f1 Cell for 0)
0xffff5823cf80  embedded object  (0x39c5b101 WeakCell for 0x32b0c6b1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5823cfac  embedded object  (0x39c05209 <String[4]: next>)
0xffff5823cfb0  code target (HANDLER)  (0xffff5823cea0)
0xffff5823cfb8  embedded object  (0x39c05209 <String[4]: next>)
0xffff5823cfc4  code target (BUILTIN)  (0xffff58222420)
0xffff5823cfcc  constant pool (size 60)

kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 509)
0xffff5823d320     0  ldur x4, [x3, #47]
0xffff5823d324     4  tbnz w2, #0, #+0xc0 (addr 0xffff5823d3e4)
0xffff5823d328     8  asr x6, x2, #32
0xffff5823d32c    12  add x5, x4, #0x17 (23)
0xffff5823d330    16  ldr x7, [x5, w6, sxtw #3]
0xffff5823d334    20  ldr x4, pc+356 (addr 0x0000ffff5823d498)    ;; object: 0x39c04241 <undefined>
0xffff5823d338    24  cmp x7, x4
0xffff5823d33c    28  b.eq #+0xa4 (addr 0xffff5823d3e0)
0xffff5823d340    32  ldur x4, [x7, #7]
0xffff5823d344    36  ldur x5, [x4, #-1]
0xffff5823d348    40  ldrb w6, [x5, #7]
0xffff5823d34c    44  cmp w6, #0x9 (9)
0xffff5823d350    48  b.ne #+0x90 (addr 0xffff5823d3e0)
0xffff5823d354    52  movz x1, #0x92c0
0xffff5823d358    56  movk x1, #0x16e7, lsl #16
0xffff5823d35c    60  ldp x2, x0, [x1]
0xffff5823d360    64  adds x16, x2, #0x58 (88)
0xffff5823d364    68  ccmp x16, x0, #nzCv, lo
0xffff5823d368    72  b.hi #+0xc4 (addr 0xffff5823d42c)
0xffff5823d36c    76  str x16, [x1]
0xffff5823d370    80  orr x2, x2, #0x1
0xffff5823d374    84  stur x5, [x2, #-1]
0xffff5823d378    88  ldur x0, [x4, #7]
0xffff5823d37c    92  stur x0, [x2, #7]
0xffff5823d380    96  ldur x0, [x4, #15]
0xffff5823d384   100  stur x0, [x2, #15]
0xffff5823d388   104  ldur x0, [x4, #23]
0xffff5823d38c   108  stur x0, [x2, #23]
0xffff5823d390   112  ldur x0, [x4, #31]
0xffff5823d394   116  stur x0, [x2, #31]
0xffff5823d398   120  ldur x0, [x4, #39]
0xffff5823d39c   124  stur x0, [x2, #39]
0xffff5823d3a0   128  ldur x0, [x4, #47]
0xffff5823d3a4   132  stur x0, [x2, #47]
0xffff5823d3a8   136  ldur x0, [x4, #55]
0xffff5823d3ac   140  stur x0, [x2, #55]
0xffff5823d3b0   144  ldur x0, [x4, #63]
0xffff5823d3b4   148  stur x0, [x2, #63]
0xffff5823d3b8   152  add x0, x2, #0x48 (72)
0xffff5823d3bc   156  ldr x1, pc+228 (addr 0x0000ffff5823d4a0)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5823d3c0   160  stur x1, [x0, #-1]
0xffff5823d3c4   164  stur x7, [x0, #7]
0xffff5823d3c8   168  ldur w0, [x7, #35]
0xffff5823d3cc   172  add w0, w0, #0x1 (1)
0xffff5823d3d0   176  lsl x0, x0, #32
0xffff5823d3d4   180  stur x0, [x7, #31]
0xffff5823d3d8   184  mov x0, x2
0xffff5823d3dc   188  ret
0xffff5823d3e0   192  b #+0xe0 (addr 0xffff5823d4c0)
0xffff5823d3e4   196  sub csp, jssp, #0x10 (16)
0xffff5823d3e8   200  stp fp, lr, [jssp, #-16]!
0xffff5823d3ec   204  movz fp, #0xa00000000
0xffff5823d3f0   208  sub csp, jssp, #0x8 (8)
0xffff5823d3f4   212  str fp, [jssp, #-8]!
0xffff5823d3f8   216  add fp, jssp, #0x8 (8)
0xffff5823d3fc   220  ldur x16, [x2, #-1]
0xffff5823d400   224  ldr x17, [x26, #120]
0xffff5823d404   228  cmp x16, x17
0xffff5823d408   232  b.ne #+0xc8 (addr 0xffff5823d4d0)
0xffff5823d40c   236  ldur d29, [x2, #7]
0xffff5823d410   240  fcvtzs w6, d29
0xffff5823d414   244  scvtf d0, w6
0xffff5823d418   248  fcmp d29, d0
0xffff5823d41c   252  b.ne #+0xb4 (addr 0xffff5823d4d0)
0xffff5823d420   256  ldr lr, [jssp, #16]
0xffff5823d424   260  ldp xzr, fp, [jssp], #24
0xffff5823d428   264  b #-0xfc (addr 0xffff5823d32c)
0xffff5823d42c   268  sub csp, jssp, #0x10 (16)
0xffff5823d430   272  stp fp, lr, [jssp, #-16]!
0xffff5823d434   276  movz fp, #0xa00000000
0xffff5823d438   280  sub csp, jssp, #0x8 (8)
0xffff5823d43c   284  str fp, [jssp, #-8]!
0xffff5823d440   288  add fp, jssp, #0x8 (8)
0xffff5823d444   292  movz x2, #0x0
0xffff5823d448   296  mov x16, lr
0xffff5823d44c   300  ldr x17, pc+92 (addr 0x0000ffff5823d4a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5823d450   304  blr x17
0xffff5823d454   308  movz x0, #0x5800000000
0xffff5823d458   312  movz x10, #0x0
0xffff5823d45c   316  sub csp, jssp, #0x10 (16)
0xffff5823d460   320  stp x10, x0, [jssp, #-16]!
0xffff5823d464   324  movz x0, #0x2
0xffff5823d468   328  movz x1, #0x5b88
0xffff5823d46c   332  movk x1, #0xe2, lsl #16
0xffff5823d470   336  ldr x16, pc+64 (addr 0x0000ffff5823d4b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff5823d474   340  blr x16
0xffff5823d478   344  str x0, [jssp, #16]
0xffff5823d47c   348  ldr x16, pc+60 (addr 0x0000ffff5823d4b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5823d480   352  blr x16
0xffff5823d484   356  ldr lr, [jssp, #16]
0xffff5823d488   360  ldp xzr, fp, [jssp], #24
0xffff5823d48c   364  b #-0x118 (addr 0xffff5823d374)
0xffff5823d490   368  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff5823d494   372  d63f03e0       constant
0xffff5823d498   376  39c04241       constant
0xffff5823d49c   380  00000000       constant
0xffff5823d4a0   384  32b05d81       constant
0xffff5823d4a4   388  00000000       constant
0xffff5823d4a8   392  58206820       constant
0xffff5823d4ac   396  0000ffff       constant
0xffff5823d4b0   400  58206260       constant
0xffff5823d4b4   404  0000ffff       constant
0xffff5823d4b8   408  582068e0       constant
0xffff5823d4bc   412  0000ffff       constant
0xffff5823d4c0   416  movz x16, #0x0
0xffff5823d4c4   420  sub csp, jssp, #0x10 (16)
0xffff5823d4c8   424  stp fp, lr, [jssp, #-16]!
0xffff5823d4cc   428  bl #+0xc (addr 0xffff5823d4d8)
0xffff5823d4d0   432  movz x16, #0x8
0xffff5823d4d4   436  bl #+0x14 (addr 0xffff5823d4e8)
0xffff5823d4d8   440  movz x17, #0xa00000000
0xffff5823d4dc   444  sub csp, jssp, #0x10 (16)
0xffff5823d4e0   448  stp x17, cp, [jssp, #-16]!
0xffff5823d4e4   452  add fp, jssp, #0x10 (16)
0xffff5823d4e8   456  ldr x17, pc+24 (addr 0x0000ffff5823d500)    ;; lazy deoptimization bailout 0
0xffff5823d4ec   460  add x17, x17, x16
0xffff5823d4f0   464  br x17
0xffff5823d4f4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5823d4f8   472  d63f03e0       constant
0xffff5823d4fc   476  d503201f       constant
0xffff5823d500   480  58006000       constant
0xffff5823d504   484  0000ffff       constant


Safepoints (size = 21)
0xffff5823d478   344  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff5823d334  embedded object  (0x39c04241 <undefined>)
0xffff5823d3bc  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5823d44c  code target (STUB)  (0xffff58206820)
0xffff5823d470  code target (STUB)  (0xffff58206260)
0xffff5823d47c  code target (STUB)  (0xffff582068e0)
0xffff5823d490  constant pool (size 48)
0xffff5823d4e8  runtime entry
0xffff5823d4f4  constant pool (size 20)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_None
compiler = unknown
Instructions (size = 288)
0xffff5823d580     0  ldur cp, [x1, #39]
0xffff5823d584     4  cmp x3, x1
0xffff5823d588     8  b.ne #+0x98 (addr 0xffff5823d620)
0xffff5823d58c    12  ldr x16, [x26, #40]
0xffff5823d590    16  cmp x2, x16
0xffff5823d594    20  b.eq #+0x84 (addr 0xffff5823d618)
0xffff5823d598    24  ldursw x3, [x2, #11]
0xffff5823d59c    28  and x3, x3, #0x7fff
0xffff5823d5a0    32  cbnz x3, #+0xc (addr 0xffff5823d5ac)
0xffff5823d5a4    36  ldr x16, pc+164 (addr 0x0000ffff5823d648)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 0
0xffff5823d5a8    40  br x16
0xffff5823d5ac    44  cmp x3, #0x1 (1)
0xffff5823d5b0    48  b.ne #+0xc (addr 0xffff5823d5bc)
0xffff5823d5b4    52  ldr x16, pc+156 (addr 0x0000ffff5823d650)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 1
0xffff5823d5b8    56  br x16
0xffff5823d5bc    60  cmp x3, #0x4 (4)
0xffff5823d5c0    64  b.ne #+0xc (addr 0xffff5823d5cc)
0xffff5823d5c4    68  ldr x16, pc+148 (addr 0x0000ffff5823d658)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 4
0xffff5823d5c8    72  br x16
0xffff5823d5cc    76  cmp x3, #0x5 (5)
0xffff5823d5d0    80  b.ne #+0xc (addr 0xffff5823d5dc)
0xffff5823d5d4    84  ldr x16, pc+140 (addr 0x0000ffff5823d660)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 5
0xffff5823d5d8    88  br x16
0xffff5823d5dc    92  cmp x3, #0x2 (2)
0xffff5823d5e0    96  b.ne #+0xc (addr 0xffff5823d5ec)
0xffff5823d5e4   100  ldr x16, pc+132 (addr 0x0000ffff5823d668)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 2
0xffff5823d5e8   104  br x16
0xffff5823d5ec   108  cmp x3, #0x3 (3)
0xffff5823d5f0   112  b.ne #+0xc (addr 0xffff5823d5fc)
0xffff5823d5f4   116  ldr x16, pc+124 (addr 0x0000ffff5823d670)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 3
0xffff5823d5f8   120  br x16
0xffff5823d5fc   124  movz x0, #0x9f00000000
0xffff5823d600   128  sub csp, jssp, #0x8 (8)
0xffff5823d604   132  str x0, [jssp, #-8]!
0xffff5823d608   136  movz x0, #0x1
0xffff5823d60c   140  ldr x1, pc+108 (addr 0x0000ffff5823d678)    ;; external reference (Runtime::Abort)
0xffff5823d610   144  ldr x16, pc+112 (addr 0x0000ffff5823d680)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823d614   148  blr x16
0xffff5823d618   152  ldr x16, pc+112 (addr 0x0000ffff5823d688)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 256
0xffff5823d61c   156  br x16
0xffff5823d620   160  str x1, [jssp]
0xffff5823d624   164  movz x0, #0x3
0xffff5823d628   168  sub csp, jssp, #0x10 (16)
0xffff5823d62c   172  stp x2, x3, [jssp, #-16]!
0xffff5823d630   176  ldr x1, pc+96 (addr 0x0000ffff5823d690)    ;; external reference (Runtime::NewArray)
0xffff5823d634   180  ldr x16, pc+100 (addr 0x0000ffff5823d698)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823d638   184  br x16
0xffff5823d63c   188  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff5823d640   192  d63f03e0       constant
0xffff5823d644   196  d503201f       constant
0xffff5823d648   200  582069a0       constant
0xffff5823d64c   204  0000ffff       constant
0xffff5823d650   208  58206e00       constant
0xffff5823d654   212  0000ffff       constant
0xffff5823d658   216  58207280       constant
0xffff5823d65c   220  0000ffff       constant
0xffff5823d660   224  58207480       constant
0xffff5823d664   228  0000ffff       constant
0xffff5823d668   232  58207680       constant
0xffff5823d66c   236  0000ffff       constant
0xffff5823d670   240  582078a0       constant
0xffff5823d674   244  0000ffff       constant
0xffff5823d678   248  00eda820       constant
0xffff5823d67c   252  00000000       constant
0xffff5823d680   256  58206060       constant
0xffff5823d684   260  0000ffff       constant
0xffff5823d688   264  58206be0       constant
0xffff5823d68c   268  0000ffff       constant
0xffff5823d690   272  00de2850       constant
0xffff5823d694   276  00000000       constant
0xffff5823d698   280  58206060       constant
0xffff5823d69c   284  0000ffff       constant


RelocInfo (size = 19)
0xffff5823d5a4  code target (STUB)  (0xffff582069a0)
0xffff5823d5b4  code target (STUB)  (0xffff58206e00)
0xffff5823d5c4  code target (STUB)  (0xffff58207280)
0xffff5823d5d4  code target (STUB)  (0xffff58207480)
0xffff5823d5e4  code target (STUB)  (0xffff58207680)
0xffff5823d5f4  code target (STUB)  (0xffff582078a0)
0xffff5823d60c  external reference (Runtime::Abort)  (0xeda820)
0xffff5823d610  code target (STUB)  (0xffff58206060)
0xffff5823d618  code target (STUB)  (0xffff58206be0)
0xffff5823d630  external reference (Runtime::NewArray)  (0xde2850)
0xffff5823d634  code target (STUB)  (0xffff58206060)
0xffff5823d63c  constant pool (size 100)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393216
name = CallICStub(args(0), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff5823d700     0  add x4, x2, x3, asr #29
0xffff5823d704     4  ldur x4, [x4, #15]
0xffff5823d708     8  ldur x5, [x4, #7]
0xffff5823d70c    12  cmp x5, x1
0xffff5823d710    16  b.ne #+0x2c (addr 0xffff5823d73c)
0xffff5823d714    20  tbz w1, #0, #+0x28 (addr 0xffff5823d73c)
0xffff5823d718    24  add x2, x2, x3, asr #29
0xffff5823d71c    28  add x2, x2, #0x18 (24)
0xffff5823d720    32  ldur x3, [x2, #-1]
0xffff5823d724    36  movz x16, #0x200000000
0xffff5823d728    40  add x3, x3, x16
0xffff5823d72c    44  stur x3, [x2, #-1]
0xffff5823d730    48  movz x0, #0x0
0xffff5823d734    52  ldr x16, pc+372 (addr 0x0000ffff5823d8a8)    ;; code: BUILTIN
0xffff5823d738    56  br x16
0xffff5823d73c    60  ldr x16, [x26, #2400]
0xffff5823d740    64  cmp x4, x16
0xffff5823d744    68  b.eq #+0x78 (addr 0xffff5823d7bc)
0xffff5823d748    72  ldur x5, [x4, #-1]
0xffff5823d74c    76  ldr x16, [x26, #2736]
0xffff5823d750    80  cmp x5, x16
0xffff5823d754    84  b.ne #+0x40 (addr 0xffff5823d794)
0xffff5823d758    88  ldur x5, [cp, #39]
0xffff5823d75c    92  ldur x5, [x5, #95]
0xffff5823d760    96  cmp x1, x5
0xffff5823d764   100  b.ne #+0xec (addr 0xffff5823d850)
0xffff5823d768   104  movz x0, #0x0
0xffff5823d76c   108  add x2, x2, x3, asr #29
0xffff5823d770   112  add x2, x2, #0x18 (24)
0xffff5823d774   116  ldur x3, [x2, #-1]
0xffff5823d778   120  movz x16, #0x200000000
0xffff5823d77c   124  add x3, x3, x16
0xffff5823d780   128  stur x3, [x2, #-1]
0xffff5823d784   132  mov x2, x4
0xffff5823d788   136  mov x3, x1
0xffff5823d78c   140  ldr x16, pc+292 (addr 0x0000ffff5823d8b0)    ;; code: STUB, ArrayConstructorStub, minor: 1
0xffff5823d790   144  br x16
0xffff5823d794   148  ldr x16, [x26, #2568]
0xffff5823d798   152  cmp x4, x16
0xffff5823d79c   156  b.eq #+0xb4 (addr 0xffff5823d850)
0xffff5823d7a0   160  ldur x5, [x4, #-1]
0xffff5823d7a4   164  ldrb w5, [x5, #11]
0xffff5823d7a8   168  cmp x5, #0xc9 (201)
0xffff5823d7ac   172  b.ne #+0xa4 (addr 0xffff5823d850)
0xffff5823d7b0   176  add x4, x2, x3, asr #29
0xffff5823d7b4   180  ldr x5, [x26, #2400]
0xffff5823d7b8   184  stur x5, [x4, #15]
0xffff5823d7bc   188  movz x0, #0x0
0xffff5823d7c0   192  ldr x16, pc+248 (addr 0x0000ffff5823d8b8)    ;; code: BUILTIN
0xffff5823d7c4   196  br x16
0xffff5823d7c8   200  tbz w1, #0, #+0x88 (addr 0xffff5823d850)
0xffff5823d7cc   204  ldur x5, [x1, #-1]
0xffff5823d7d0   208  ldrb w5, [x5, #11]
0xffff5823d7d4   212  cmp x5, #0xc9 (201)
0xffff5823d7d8   216  b.ne #+0x78 (addr 0xffff5823d850)
0xffff5823d7dc   220  ldur x5, [cp, #39]
0xffff5823d7e0   224  ldur x5, [x5, #95]
0xffff5823d7e4   228  cmp x1, x5
0xffff5823d7e8   232  b.eq #+0x68 (addr 0xffff5823d850)
0xffff5823d7ec   236  ldur x4, [x1, #39]
0xffff5823d7f0   240  ldur x4, [x4, #39]
0xffff5823d7f4   244  ldur x5, [cp, #39]
0xffff5823d7f8   248  cmp x4, x5
0xffff5823d7fc   252  b.ne #+0x54 (addr 0xffff5823d850)
0xffff5823d800   256  movz x5, #0x200000000
0xffff5823d804   260  adds x4, x2, x3, asr #29
0xffff5823d808   264  stur x5, [x4, #23]
0xffff5823d80c   268  movz x16, #0xc00000000
0xffff5823d810   272  sub csp, jssp, #0x10 (16)
0xffff5823d814   276  stp fp, lr, [jssp, #-16]!
0xffff5823d818   280  sub csp, jssp, #0x10 (16)
0xffff5823d81c   284  str x16, [jssp, #-8]!
0xffff5823d820   288  ldr x17, pc+160 (addr 0x0000ffff5823d8c0)    ;; object: 0xffff5823d6a1 <Code: CALL_IC>
0xffff5823d824   292  sub csp, jssp, #0x10 (16)
0xffff5823d828   296  str x17, [jssp, #-8]!
0xffff5823d82c   300  add fp, jssp, #0x10 (16)
0xffff5823d830   304  sub csp, jssp, #0x8 (8)
0xffff5823d834   308  str x1, [jssp, #-8]!
0xffff5823d838   312  ldr x16, pc+144 (addr 0x0000ffff5823d8c8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff5823d83c   316  blr x16
0xffff5823d840   320  ldr x1, [jssp], #8
0xffff5823d844   324  mov jssp, fp
0xffff5823d848   328  ldp fp, lr, [jssp], #16
0xffff5823d84c   332  b #-0x11c (addr 0xffff5823d730)
0xffff5823d850   336  movz x16, #0xc00000000
0xffff5823d854   340  sub csp, jssp, #0x10 (16)
0xffff5823d858   344  stp fp, lr, [jssp, #-16]!
0xffff5823d85c   348  sub csp, jssp, #0x10 (16)
0xffff5823d860   352  str x16, [jssp, #-8]!
0xffff5823d864   356  ldr x17, pc+108 (addr 0x0000ffff5823d8d0)    ;; object: 0xffff5823d6a1 <Code: CALL_IC>
0xffff5823d868   360  sub csp, jssp, #0x10 (16)
0xffff5823d86c   364  str x17, [jssp, #-8]!
0xffff5823d870   368  add fp, jssp, #0x10 (16)
0xffff5823d874   372  sub csp, jssp, #0x18 (24)
0xffff5823d878   376  stp x3, x2, [jssp, #-24]!
0xffff5823d87c   380  str x1, [jssp, #16]
0xffff5823d880   384  movz x0, #0x3
0xffff5823d884   388  ldr x1, pc+84 (addr 0x0000ffff5823d8d8)    ;; external reference (Runtime::CallIC_Miss)
0xffff5823d888   392  ldr x16, pc+88 (addr 0x0000ffff5823d8e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5823d88c   396  blr x16
0xffff5823d890   400  mov x1, x0
0xffff5823d894   404  mov jssp, fp
0xffff5823d898   408  ldp fp, lr, [jssp], #16
0xffff5823d89c   412  b #-0xe0 (addr 0xffff5823d7bc)
0xffff5823d8a0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff5823d8a4   420  d63f03e0       constant
0xffff5823d8a8   424  5821e820       constant
0xffff5823d8ac   428  0000ffff       constant
0xffff5823d8b0   432  5823d580       constant
0xffff5823d8b4   436  0000ffff       constant
0xffff5823d8b8   440  5821f820       constant
0xffff5823d8bc   444  0000ffff       constant
0xffff5823d8c0   448  5823d6a1       constant
0xffff5823d8c4   452  0000ffff       constant
0xffff5823d8c8   456  5820ddc0       constant
0xffff5823d8cc   460  0000ffff       constant
0xffff5823d8d0   464  5823d6a1       constant
0xffff5823d8d4   468  0000ffff       constant
0xffff5823d8d8   472  00c86928       constant
0xffff5823d8dc   476  00000000       constant
0xffff5823d8e0   480  58206060       constant
0xffff5823d8e4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff5823d734  code target (BUILTIN)  (0xffff5821e820)
0xffff5823d78c  code target (STUB)  (0xffff5823d580)
0xffff5823d7c0  code target (BUILTIN)  (0xffff5821f820)
0xffff5823d820  embedded object  (0xffff5823d6a1 <Code: CALL_IC>)
0xffff5823d838  code target (STUB)  (0xffff5820ddc0)
0xffff5823d864  embedded object  (0xffff5823d6a1 <Code: CALL_IC>)
0xffff5823d884  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff5823d888  code target (STUB)  (0xffff58206060)
0xffff5823d8a0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393216
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff5823d960     0  ldur x2, [fp, #-16]
0xffff5823d964     4  ldur x2, [x2, #31]
0xffff5823d968     8  ldur x2, [x2, #87]
0xffff5823d96c    12  ldr x16, pc+20 (addr 0x0000ffff5823d980)    ;; code: CALL_IC, GENERIC
0xffff5823d970    16  br x16
0xffff5823d974    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5823d978    24  d63f03e0       constant
0xffff5823d97c    28  d503201f       constant
0xffff5823d980    32  5823d700       constant
0xffff5823d984    36  0000ffff       constant


RelocInfo (size = 7)
0xffff5823d96c  code target (CALL_IC)  (0xffff5823d700)
0xffff5823d974  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff582411c0     0  sub csp, jssp, #0x8 (8)
0xffff582411c4     4  str x3, [jssp, #-8]!
0xffff582411c8     8  sub csp, jssp, #0x8 (8)
0xffff582411cc    12  str x4, [jssp, #-8]!
0xffff582411d0    16  ldr x3, pc+88 (addr 0x0000ffff58241228)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582411d4    20  ldur x3, [x3, #7]
0xffff582411d8    24  cmp x3, #0x0 (0)
0xffff582411dc    28  b.ne #+0x30 (addr 0xffff5824120c)
0xffff582411e0    32  tbz w0, #0, #+0x2c (addr 0xffff5824120c)
0xffff582411e4    36  ldr x5, pc+76 (addr 0x0000ffff58241230)    ;; object: 0x39c62a21 WeakCell for 0x32b0c9c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582411e8    40  ldur x5, [x5, #7]
0xffff582411ec    44  tbz w5, #0, #+0x20 (addr 0xffff5824120c)
0xffff582411f0    48  ldursw x4, [x5, #15]
0xffff582411f4    52  tbnz w4, #23, #+0x18 (addr 0xffff5824120c)
0xffff582411f8    56  ldr x4, [jssp], #8
0xffff582411fc    60  ldr x3, [jssp], #8
0xffff58241200    64  ldr x2, pc+56 (addr 0x0000ffff58241238)    ;; object: 0x39c05209 <String[4]: next>
0xffff58241204    68  ldr x16, pc+60 (addr 0x0000ffff58241240)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff58241208    72  br x16
0xffff5824120c    76  ldr x2, pc+60 (addr 0x0000ffff58241248)    ;; object: 0x39c05209 <String[4]: next>
0xffff58241210    80  ldr x4, [jssp], #8
0xffff58241214    84  ldr x3, [jssp], #8
0xffff58241218    88  ldr x16, pc+56 (addr 0x0000ffff58241250)    ;; code: BUILTIN
0xffff5824121c    92  br x16
0xffff58241220    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff58241224   100  d63f03e0       constant
0xffff58241228   104  39c5b0f1       constant
0xffff5824122c   108  00000000       constant
0xffff58241230   112  39c62a21       constant
0xffff58241234   116  00000000       constant
0xffff58241238   120  39c05209       constant
0xffff5824123c   124  00000000       constant
0xffff58241240   128  58238860       constant
0xffff58241244   132  0000ffff       constant
0xffff58241248   136  39c05209       constant
0xffff5824124c   140  00000000       constant
0xffff58241250   144  58222420       constant
0xffff58241254   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582411d0  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582411e4  embedded object  (0x39c62a21 WeakCell for 0x32b0c9c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58241200  embedded object  (0x39c05209 <String[4]: next>)
0xffff58241204  code target (HANDLER)  (0xffff58238860)
0xffff5824120c  embedded object  (0x39c05209 <String[4]: next>)
0xffff58241218  code target (BUILTIN)  (0xffff58222420)
0xffff58241220  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff582412c0     0  sub csp, jssp, #0x8 (8)
0xffff582412c4     4  str x3, [jssp, #-8]!
0xffff582412c8     8  sub csp, jssp, #0x8 (8)
0xffff582412cc    12  str x4, [jssp, #-8]!
0xffff582412d0    16  ldr x3, pc+88 (addr 0x0000ffff58241328)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582412d4    20  ldur x3, [x3, #7]
0xffff582412d8    24  cmp x3, #0x0 (0)
0xffff582412dc    28  b.ne #+0x30 (addr 0xffff5824130c)
0xffff582412e0    32  tbz w0, #0, #+0x2c (addr 0xffff5824130c)
0xffff582412e4    36  ldr x5, pc+76 (addr 0x0000ffff58241330)    ;; object: 0x39c62a21 WeakCell for 0x32b0c9c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582412e8    40  ldur x5, [x5, #7]
0xffff582412ec    44  tbz w5, #0, #+0x20 (addr 0xffff5824130c)
0xffff582412f0    48  ldursw x4, [x5, #15]
0xffff582412f4    52  tbnz w4, #23, #+0x18 (addr 0xffff5824130c)
0xffff582412f8    56  ldr x4, [jssp], #8
0xffff582412fc    60  ldr x3, [jssp], #8
0xffff58241300    64  ldr x2, pc+56 (addr 0x0000ffff58241338)    ;; object: 0x39c05209 <String[4]: next>
0xffff58241304    68  ldr x16, pc+60 (addr 0x0000ffff58241340)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff58241308    72  br x16
0xffff5824130c    76  ldr x2, pc+60 (addr 0x0000ffff58241348)    ;; object: 0x39c05209 <String[4]: next>
0xffff58241310    80  ldr x4, [jssp], #8
0xffff58241314    84  ldr x3, [jssp], #8
0xffff58241318    88  ldr x16, pc+56 (addr 0x0000ffff58241350)    ;; code: BUILTIN
0xffff5824131c    92  br x16
0xffff58241320    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff58241324   100  d63f03e0       constant
0xffff58241328   104  39c5b0f1       constant
0xffff5824132c   108  00000000       constant
0xffff58241330   112  39c62a21       constant
0xffff58241334   116  00000000       constant
0xffff58241338   120  39c05209       constant
0xffff5824133c   124  00000000       constant
0xffff58241340   128  58238860       constant
0xffff58241344   132  0000ffff       constant
0xffff58241348   136  39c05209       constant
0xffff5824134c   140  00000000       constant
0xffff58241350   144  58222420       constant
0xffff58241354   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582412d0  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582412e4  embedded object  (0x39c62a21 WeakCell for 0x32b0c9c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58241300  embedded object  (0x39c05209 <String[4]: next>)
0xffff58241304  code target (HANDLER)  (0xffff58238860)
0xffff5824130c  embedded object  (0x39c05209 <String[4]: next>)
0xffff58241318  code target (BUILTIN)  (0xffff58222420)
0xffff58241320  constant pool (size 56)

kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff58241580     0  adr xzr, #+0x40 (addr 0xffff582415c0)
0xffff58241584     4  adr xzr, #+0x360 (addr 0xffff582418e4)
0xffff58241588     8  ldr x16, pc+1736 (addr 0x0000ffff58241c50)    ;; external reference (store_buffer_top)
0xffff5824158c    12  ldr x6, [x16]
0xffff58241590    16  str x7, [x6], #8
0xffff58241594    20  str x6, [x16]
0xffff58241598    24  tst x6, #0x1ffff
0xffff5824159c    28  b.eq #+0x8 (addr 0xffff582415a4)
0xffff582415a0    32  ret
0xffff582415a4    36  sub csp, jssp, #0x8 (8)
0xffff582415a8    40  str lr, [jssp, #-8]!
0xffff582415ac    44  ldr x17, pc+1708 (addr 0x0000ffff58241c58)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582415b0    48  blr x17
0xffff582415b4    52  ldr lr, [jssp], #8
0xffff582415b8    56  ret
0xffff582415bc    60  ret
0xffff582415c0    64  sub csp, jssp, #0x10 (16)
0xffff582415c4    68  stp x2, x0, [jssp, #-16]!
0xffff582415c8    72  ldr x6, [x7]
0xffff582415cc    76  and x16, x6, #0xfffffffffff00000
0xffff582415d0    80  ldr x16, [x16, #8]
0xffff582415d4    84  tst x16, #0x18
0xffff582415d8    88  b.eq #+0x1d8 (addr 0xffff582417b0)
0xffff582415dc    92  and x16, x1, #0xfffffffffff00000
0xffff582415e0    96  ldr x16, [x16, #8]
0xffff582415e4   100  tst x16, #0x18
0xffff582415e8   104  b.ne #+0x1c8 (addr 0xffff582417b0)
0xffff582415ec   108  and x6, x1, #0xfffffffffff00000
0xffff582415f0   112  ldr x0, [x6, #104]
0xffff582415f4   116  subs x0, x0, #0x1 (1)
0xffff582415f8   120  str x0, [x6, #104]
0xffff582415fc   124  b.mi #+0xc4 (addr 0xffff582416c0)
0xffff58241600   128  ubfx x16, x1, #8, #12
0xffff58241604   132  and x6, x1, #0xfffffffffff00000
0xffff58241608   136  add x6, x6, x16, lsl #2
0xffff5824160c   140  ubfx x0, x1, #3, #5
0xffff58241610   144  ldr x6, [x6, #360]
0xffff58241614   148  lsr x6, x6, x0
0xffff58241618   152  tbz w6, #0, #+0x8 (addr 0xffff58241620)
0xffff5824161c   156  tbnz w6, #1, #+0x3c (addr 0xffff58241658)
0xffff58241620   160  ldp x2, x0, [jssp], #16
0xffff58241624   164  ldr x16, pc+1596 (addr 0x0000ffff58241c60)    ;; external reference (store_buffer_top)
0xffff58241628   168  ldr x6, [x16]
0xffff5824162c   172  str x7, [x6], #8
0xffff58241630   176  str x6, [x16]
0xffff58241634   180  tst x6, #0x1ffff
0xffff58241638   184  b.eq #+0x8 (addr 0xffff58241640)
0xffff5824163c   188  ret
0xffff58241640   192  sub csp, jssp, #0x8 (8)
0xffff58241644   196  str lr, [jssp, #-8]!
0xffff58241648   200  ldr x17, pc+1568 (addr 0x0000ffff58241c68)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff5824164c   204  blr x17
0xffff58241650   208  ldr lr, [jssp], #8
0xffff58241654   212  ret
0xffff58241658   216  ldr x6, [x7]
0xffff5824165c   220  sub csp, jssp, #0x10 (16)
0xffff58241660   224  stp x1, x7, [jssp, #-16]!
0xffff58241664   228  ubfx x16, x6, #8, #12
0xffff58241668   232  and x0, x6, #0xfffffffffff00000
0xffff5824166c   236  add x0, x0, x16, lsl #2
0xffff58241670   240  ubfx x1, x6, #3, #5
0xffff58241674   244  ldr x7, [x0, #360]
0xffff58241678   248  lsr x7, x7, x1
0xffff5824167c   252  tbz w7, #0, #+0x40 (addr 0xffff582416bc)
0xffff58241680   256  ldp x1, x7, [jssp], #16
0xffff58241684   260  ldp x2, x0, [jssp], #16
0xffff58241688   264  ldr x16, pc+1512 (addr 0x0000ffff58241c70)    ;; external reference (store_buffer_top)
0xffff5824168c   268  ldr x6, [x16]
0xffff58241690   272  str x7, [x6], #8
0xffff58241694   276  str x6, [x16]
0xffff58241698   280  tst x6, #0x1ffff
0xffff5824169c   284  b.eq #+0x8 (addr 0xffff582416a4)
0xffff582416a0   288  ret
0xffff582416a4   292  sub csp, jssp, #0x8 (8)
0xffff582416a8   296  str lr, [jssp, #-8]!
0xffff582416ac   300  ldr x17, pc+1484 (addr 0x0000ffff58241c78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582416b0   304  blr x17
0xffff582416b4   308  ldr lr, [jssp], #8
0xffff582416b8   312  ret
0xffff582416bc   316  ldp x1, x7, [jssp], #16
0xffff582416c0   320  sub csp, jssp, #0x78 (120)
0xffff582416c4   324  stp x14, x15, [jssp, #-32]!
0xffff582416c8   328  stp x18, lr, [jssp, #16]
0xffff582416cc   332  stp x10, x11, [jssp, #-32]!
0xffff582416d0   336  stp x12, x13, [jssp, #16]
0xffff582416d4   340  stp x5, x7, [jssp, #-32]!
0xffff582416d8   344  stp x8, x9, [jssp, #16]
0xffff582416dc   348  stp x1, x3, [jssp, #-24]!
0xffff582416e0   352  str x4, [jssp, #16]
0xffff582416e4   356  sub csp, jssp, #0xb0 (176)
0xffff582416e8   360  stp d26, d27, [jssp, #-32]!
0xffff582416ec   364  stp d28, d29, [jssp, #16]
0xffff582416f0   368  stp d22, d23, [jssp, #-32]!
0xffff582416f4   372  stp d24, d25, [jssp, #16]
0xffff582416f8   376  stp d18, d19, [jssp, #-32]!
0xffff582416fc   380  stp d20, d21, [jssp, #16]
0xffff58241700   384  stp d6, d7, [jssp, #-32]!
0xffff58241704   388  stp d16, d17, [jssp, #16]
0xffff58241708   392  stp d2, d3, [jssp, #-32]!
0xffff5824170c   396  stp d4, d5, [jssp, #16]
0xffff58241710   400  stp d0, d1, [jssp, #-16]!
0xffff58241714   404  mov x0, x1
0xffff58241718   408  mov x1, x7
0xffff5824171c   412  ldr x2, pc+1380 (addr 0x0000ffff58241c80)    ;; external reference (isolate)
0xffff58241720   416  ldr x16, pc+1384 (addr 0x0000ffff58241c88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58241724   420  and csp, jssp, #0xfffffffffffffff0
0xffff58241728   424  blr x16
0xffff5824172c   428  ldp d2, d3, [jssp, #16]
0xffff58241730   432  ldp d0, d1, [jssp], #32
0xffff58241734   436  ldp d6, d7, [jssp, #16]
0xffff58241738   440  ldp d4, d5, [jssp], #32
0xffff5824173c   444  ldp d18, d19, [jssp, #16]
0xffff58241740   448  ldp d16, d17, [jssp], #32
0xffff58241744   452  ldp d22, d23, [jssp, #16]
0xffff58241748   456  ldp d20, d21, [jssp], #32
0xffff5824174c   460  ldp d26, d27, [jssp, #16]
0xffff58241750   464  ldp d24, d25, [jssp], #32
0xffff58241754   468  ldp d28, d29, [jssp], #16
0xffff58241758   472  ldp x4, x5, [jssp, #16]
0xffff5824175c   476  ldp x1, x3, [jssp], #32
0xffff58241760   480  ldp x9, x10, [jssp, #16]
0xffff58241764   484  ldp x7, x8, [jssp], #32
0xffff58241768   488  ldp x13, x14, [jssp, #16]
0xffff5824176c   492  ldp x11, x12, [jssp], #32
0xffff58241770   496  ldr lr, [jssp, #16]
0xffff58241774   500  ldp x15, x18, [jssp], #24
0xffff58241778   504  ldp x2, x0, [jssp], #16
0xffff5824177c   508  ldr x16, pc+1300 (addr 0x0000ffff58241c90)    ;; external reference (store_buffer_top)
0xffff58241780   512  ldr x6, [x16]
0xffff58241784   516  str x7, [x6], #8
0xffff58241788   520  str x6, [x16]
0xffff5824178c   524  tst x6, #0x1ffff
0xffff58241790   528  b.eq #+0x8 (addr 0xffff58241798)
0xffff58241794   532  ret
0xffff58241798   536  sub csp, jssp, #0x8 (8)
0xffff5824179c   540  str lr, [jssp, #-8]!
0xffff582417a0   544  ldr x17, pc+1272 (addr 0x0000ffff58241c98)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582417a4   548  blr x17
0xffff582417a8   552  ldr lr, [jssp], #8
0xffff582417ac   556  ret
0xffff582417b0   560  and x6, x1, #0xfffffffffff00000
0xffff582417b4   564  ldr x0, [x6, #104]
0xffff582417b8   568  subs x0, x0, #0x1 (1)
0xffff582417bc   572  str x0, [x6, #104]
0xffff582417c0   576  b.mi #+0x64 (addr 0xffff58241824)
0xffff582417c4   580  ubfx x16, x1, #8, #12
0xffff582417c8   584  and x6, x1, #0xfffffffffff00000
0xffff582417cc   588  add x6, x6, x16, lsl #2
0xffff582417d0   592  ubfx x0, x1, #3, #5
0xffff582417d4   596  ldr x6, [x6, #360]
0xffff582417d8   600  lsr x6, x6, x0
0xffff582417dc   604  tbz w6, #0, #+0x8 (addr 0xffff582417e4)
0xffff582417e0   608  tbnz w6, #1, #+0xc (addr 0xffff582417ec)
0xffff582417e4   612  ldp x2, x0, [jssp], #16
0xffff582417e8   616  ret
0xffff582417ec   620  ldr x6, [x7]
0xffff582417f0   624  sub csp, jssp, #0x10 (16)
0xffff582417f4   628  stp x1, x7, [jssp, #-16]!
0xffff582417f8   632  ubfx x16, x6, #8, #12
0xffff582417fc   636  and x0, x6, #0xfffffffffff00000
0xffff58241800   640  add x0, x0, x16, lsl #2
0xffff58241804   644  ubfx x1, x6, #3, #5
0xffff58241808   648  ldr x7, [x0, #360]
0xffff5824180c   652  lsr x7, x7, x1
0xffff58241810   656  tbz w7, #0, #+0x10 (addr 0xffff58241820)
0xffff58241814   660  ldp x1, x7, [jssp], #16
0xffff58241818   664  ldp x2, x0, [jssp], #16
0xffff5824181c   668  ret
0xffff58241820   672  ldp x1, x7, [jssp], #16
0xffff58241824   676  sub csp, jssp, #0x78 (120)
0xffff58241828   680  stp x14, x15, [jssp, #-32]!
0xffff5824182c   684  stp x18, lr, [jssp, #16]
0xffff58241830   688  stp x10, x11, [jssp, #-32]!
0xffff58241834   692  stp x12, x13, [jssp, #16]
0xffff58241838   696  stp x5, x7, [jssp, #-32]!
0xffff5824183c   700  stp x8, x9, [jssp, #16]
0xffff58241840   704  stp x1, x3, [jssp, #-24]!
0xffff58241844   708  str x4, [jssp, #16]
0xffff58241848   712  sub csp, jssp, #0xb0 (176)
0xffff5824184c   716  stp d26, d27, [jssp, #-32]!
0xffff58241850   720  stp d28, d29, [jssp, #16]
0xffff58241854   724  stp d22, d23, [jssp, #-32]!
0xffff58241858   728  stp d24, d25, [jssp, #16]
0xffff5824185c   732  stp d18, d19, [jssp, #-32]!
0xffff58241860   736  stp d20, d21, [jssp, #16]
0xffff58241864   740  stp d6, d7, [jssp, #-32]!
0xffff58241868   744  stp d16, d17, [jssp, #16]
0xffff5824186c   748  stp d2, d3, [jssp, #-32]!
0xffff58241870   752  stp d4, d5, [jssp, #16]
0xffff58241874   756  stp d0, d1, [jssp, #-16]!
0xffff58241878   760  mov x0, x1
0xffff5824187c   764  mov x1, x7
0xffff58241880   768  ldr x2, pc+1056 (addr 0x0000ffff58241ca0)    ;; external reference (isolate)
0xffff58241884   772  ldr x16, pc+1060 (addr 0x0000ffff58241ca8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58241888   776  and csp, jssp, #0xfffffffffffffff0
0xffff5824188c   780  blr x16
0xffff58241890   784  ldp d2, d3, [jssp, #16]
0xffff58241894   788  ldp d0, d1, [jssp], #32
0xffff58241898   792  ldp d6, d7, [jssp, #16]
0xffff5824189c   796  ldp d4, d5, [jssp], #32
0xffff582418a0   800  ldp d18, d19, [jssp, #16]
0xffff582418a4   804  ldp d16, d17, [jssp], #32
0xffff582418a8   808  ldp d22, d23, [jssp, #16]
0xffff582418ac   812  ldp d20, d21, [jssp], #32
0xffff582418b0   816  ldp d26, d27, [jssp, #16]
0xffff582418b4   820  ldp d24, d25, [jssp], #32
0xffff582418b8   824  ldp d28, d29, [jssp], #16
0xffff582418bc   828  ldp x4, x5, [jssp, #16]
0xffff582418c0   832  ldp x1, x3, [jssp], #32
0xffff582418c4   836  ldp x9, x10, [jssp, #16]
0xffff582418c8   840  ldp x7, x8, [jssp], #32
0xffff582418cc   844  ldp x13, x14, [jssp, #16]
0xffff582418d0   848  ldp x11, x12, [jssp], #32
0xffff582418d4   852  ldr lr, [jssp, #16]
0xffff582418d8   856  ldp x15, x18, [jssp], #24
0xffff582418dc   860  ldp x2, x0, [jssp], #16
0xffff582418e0   864  ret
0xffff582418e4   868  sub csp, jssp, #0x10 (16)
0xffff582418e8   872  stp x2, x0, [jssp, #-16]!
0xffff582418ec   876  ldr x6, [x7]
0xffff582418f0   880  and x16, x6, #0xfffffffffff00000
0xffff582418f4   884  ldr x16, [x16, #8]
0xffff582418f8   888  tst x16, #0x18
0xffff582418fc   892  b.eq #+0x1f8 (addr 0xffff58241af4)
0xffff58241900   896  and x16, x1, #0xfffffffffff00000
0xffff58241904   900  ldr x16, [x16, #8]
0xffff58241908   904  tst x16, #0x18
0xffff5824190c   908  b.ne #+0x1e8 (addr 0xffff58241af4)
0xffff58241910   912  and x6, x1, #0xfffffffffff00000
0xffff58241914   916  ldr x0, [x6, #104]
0xffff58241918   920  subs x0, x0, #0x1 (1)
0xffff5824191c   924  str x0, [x6, #104]
0xffff58241920   928  b.mi #+0xe4 (addr 0xffff58241a04)
0xffff58241924   932  ubfx x16, x1, #8, #12
0xffff58241928   936  and x6, x1, #0xfffffffffff00000
0xffff5824192c   940  add x6, x6, x16, lsl #2
0xffff58241930   944  ubfx x0, x1, #3, #5
0xffff58241934   948  ldr x6, [x6, #360]
0xffff58241938   952  lsr x6, x6, x0
0xffff5824193c   956  tbz w6, #0, #+0x8 (addr 0xffff58241944)
0xffff58241940   960  tbnz w6, #1, #+0x3c (addr 0xffff5824197c)
0xffff58241944   964  ldp x2, x0, [jssp], #16
0xffff58241948   968  ldr x16, pc+872 (addr 0x0000ffff58241cb0)    ;; external reference (store_buffer_top)
0xffff5824194c   972  ldr x6, [x16]
0xffff58241950   976  str x7, [x6], #8
0xffff58241954   980  str x6, [x16]
0xffff58241958   984  tst x6, #0x1ffff
0xffff5824195c   988  b.eq #+0x8 (addr 0xffff58241964)
0xffff58241960   992  ret
0xffff58241964   996  sub csp, jssp, #0x8 (8)
0xffff58241968  1000  str lr, [jssp, #-8]!
0xffff5824196c  1004  ldr x17, pc+844 (addr 0x0000ffff58241cb8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58241970  1008  blr x17
0xffff58241974  1012  ldr lr, [jssp], #8
0xffff58241978  1016  ret
0xffff5824197c  1020  ldr x6, [x7]
0xffff58241980  1024  and x0, x6, #0xfffffffffff00000
0xffff58241984  1028  ldr x0, [x0, #8]
0xffff58241988  1032  tbz w0, #6, #+0x18 (addr 0xffff582419a0)
0xffff5824198c  1036  and x0, x1, #0xfffffffffff00000
0xffff58241990  1040  ldr x0, [x0, #8]
0xffff58241994  1044  movz x16, #0x58
0xffff58241998  1048  tst x0, x16
0xffff5824199c  1052  b.eq #+0x68 (addr 0xffff58241a04)
0xffff582419a0  1056  sub csp, jssp, #0x10 (16)
0xffff582419a4  1060  stp x1, x7, [jssp, #-16]!
0xffff582419a8  1064  ubfx x16, x6, #8, #12
0xffff582419ac  1068  and x0, x6, #0xfffffffffff00000
0xffff582419b0  1072  add x0, x0, x16, lsl #2
0xffff582419b4  1076  ubfx x1, x6, #3, #5
0xffff582419b8  1080  ldr x7, [x0, #360]
0xffff582419bc  1084  lsr x7, x7, x1
0xffff582419c0  1088  tbz w7, #0, #+0x40 (addr 0xffff58241a00)
0xffff582419c4  1092  ldp x1, x7, [jssp], #16
0xffff582419c8  1096  ldp x2, x0, [jssp], #16
0xffff582419cc  1100  ldr x16, pc+756 (addr 0x0000ffff58241cc0)    ;; external reference (store_buffer_top)
0xffff582419d0  1104  ldr x6, [x16]
0xffff582419d4  1108  str x7, [x6], #8
0xffff582419d8  1112  str x6, [x16]
0xffff582419dc  1116  tst x6, #0x1ffff
0xffff582419e0  1120  b.eq #+0x8 (addr 0xffff582419e8)
0xffff582419e4  1124  ret
0xffff582419e8  1128  sub csp, jssp, #0x8 (8)
0xffff582419ec  1132  str lr, [jssp, #-8]!
0xffff582419f0  1136  ldr x17, pc+728 (addr 0x0000ffff58241cc8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582419f4  1140  blr x17
0xffff582419f8  1144  ldr lr, [jssp], #8
0xffff582419fc  1148  ret
0xffff58241a00  1152  ldp x1, x7, [jssp], #16
0xffff58241a04  1156  sub csp, jssp, #0x78 (120)
0xffff58241a08  1160  stp x14, x15, [jssp, #-32]!
0xffff58241a0c  1164  stp x18, lr, [jssp, #16]
0xffff58241a10  1168  stp x10, x11, [jssp, #-32]!
0xffff58241a14  1172  stp x12, x13, [jssp, #16]
0xffff58241a18  1176  stp x5, x7, [jssp, #-32]!
0xffff58241a1c  1180  stp x8, x9, [jssp, #16]
0xffff58241a20  1184  stp x1, x3, [jssp, #-24]!
0xffff58241a24  1188  str x4, [jssp, #16]
0xffff58241a28  1192  sub csp, jssp, #0xb0 (176)
0xffff58241a2c  1196  stp d26, d27, [jssp, #-32]!
0xffff58241a30  1200  stp d28, d29, [jssp, #16]
0xffff58241a34  1204  stp d22, d23, [jssp, #-32]!
0xffff58241a38  1208  stp d24, d25, [jssp, #16]
0xffff58241a3c  1212  stp d18, d19, [jssp, #-32]!
0xffff58241a40  1216  stp d20, d21, [jssp, #16]
0xffff58241a44  1220  stp d6, d7, [jssp, #-32]!
0xffff58241a48  1224  stp d16, d17, [jssp, #16]
0xffff58241a4c  1228  stp d2, d3, [jssp, #-32]!
0xffff58241a50  1232  stp d4, d5, [jssp, #16]
0xffff58241a54  1236  stp d0, d1, [jssp, #-16]!
0xffff58241a58  1240  mov x0, x1
0xffff58241a5c  1244  mov x1, x7
0xffff58241a60  1248  ldr x2, pc+624 (addr 0x0000ffff58241cd0)    ;; external reference (isolate)
0xffff58241a64  1252  ldr x16, pc+628 (addr 0x0000ffff58241cd8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58241a68  1256  and csp, jssp, #0xfffffffffffffff0
0xffff58241a6c  1260  blr x16
0xffff58241a70  1264  ldp d2, d3, [jssp, #16]
0xffff58241a74  1268  ldp d0, d1, [jssp], #32
0xffff58241a78  1272  ldp d6, d7, [jssp, #16]
0xffff58241a7c  1276  ldp d4, d5, [jssp], #32
0xffff58241a80  1280  ldp d18, d19, [jssp, #16]
0xffff58241a84  1284  ldp d16, d17, [jssp], #32
0xffff58241a88  1288  ldp d22, d23, [jssp, #16]
0xffff58241a8c  1292  ldp d20, d21, [jssp], #32
0xffff58241a90  1296  ldp d26, d27, [jssp, #16]
0xffff58241a94  1300  ldp d24, d25, [jssp], #32
0xffff58241a98  1304  ldp d28, d29, [jssp], #16
0xffff58241a9c  1308  ldp x4, x5, [jssp, #16]
0xffff58241aa0  1312  ldp x1, x3, [jssp], #32
0xffff58241aa4  1316  ldp x9, x10, [jssp, #16]
0xffff58241aa8  1320  ldp x7, x8, [jssp], #32
0xffff58241aac  1324  ldp x13, x14, [jssp, #16]
0xffff58241ab0  1328  ldp x11, x12, [jssp], #32
0xffff58241ab4  1332  ldr lr, [jssp, #16]
0xffff58241ab8  1336  ldp x15, x18, [jssp], #24
0xffff58241abc  1340  ldp x2, x0, [jssp], #16
0xffff58241ac0  1344  ldr x16, pc+544 (addr 0x0000ffff58241ce0)    ;; external reference (store_buffer_top)
0xffff58241ac4  1348  ldr x6, [x16]
0xffff58241ac8  1352  str x7, [x6], #8
0xffff58241acc  1356  str x6, [x16]
0xffff58241ad0  1360  tst x6, #0x1ffff
0xffff58241ad4  1364  b.eq #+0x8 (addr 0xffff58241adc)
0xffff58241ad8  1368  ret
0xffff58241adc  1372  sub csp, jssp, #0x8 (8)
0xffff58241ae0  1376  str lr, [jssp, #-8]!
0xffff58241ae4  1380  ldr x17, pc+516 (addr 0x0000ffff58241ce8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58241ae8  1384  blr x17
0xffff58241aec  1388  ldr lr, [jssp], #8
0xffff58241af0  1392  ret
0xffff58241af4  1396  and x6, x1, #0xfffffffffff00000
0xffff58241af8  1400  ldr x0, [x6, #104]
0xffff58241afc  1404  subs x0, x0, #0x1 (1)
0xffff58241b00  1408  str x0, [x6, #104]
0xffff58241b04  1412  b.mi #+0x84 (addr 0xffff58241b88)
0xffff58241b08  1416  ubfx x16, x1, #8, #12
0xffff58241b0c  1420  and x6, x1, #0xfffffffffff00000
0xffff58241b10  1424  add x6, x6, x16, lsl #2
0xffff58241b14  1428  ubfx x0, x1, #3, #5
0xffff58241b18  1432  ldr x6, [x6, #360]
0xffff58241b1c  1436  lsr x6, x6, x0
0xffff58241b20  1440  tbz w6, #0, #+0x8 (addr 0xffff58241b28)
0xffff58241b24  1444  tbnz w6, #1, #+0xc (addr 0xffff58241b30)
0xffff58241b28  1448  ldp x2, x0, [jssp], #16
0xffff58241b2c  1452  ret
0xffff58241b30  1456  ldr x6, [x7]
0xffff58241b34  1460  and x0, x6, #0xfffffffffff00000
0xffff58241b38  1464  ldr x0, [x0, #8]
0xffff58241b3c  1468  tbz w0, #6, #+0x18 (addr 0xffff58241b54)
0xffff58241b40  1472  and x0, x1, #0xfffffffffff00000
0xffff58241b44  1476  ldr x0, [x0, #8]
0xffff58241b48  1480  movz x16, #0x58
0xffff58241b4c  1484  tst x0, x16
0xffff58241b50  1488  b.eq #+0x38 (addr 0xffff58241b88)
0xffff58241b54  1492  sub csp, jssp, #0x10 (16)
0xffff58241b58  1496  stp x1, x7, [jssp, #-16]!
0xffff58241b5c  1500  ubfx x16, x6, #8, #12
0xffff58241b60  1504  and x0, x6, #0xfffffffffff00000
0xffff58241b64  1508  add x0, x0, x16, lsl #2
0xffff58241b68  1512  ubfx x1, x6, #3, #5
0xffff58241b6c  1516  ldr x7, [x0, #360]
0xffff58241b70  1520  lsr x7, x7, x1
0xffff58241b74  1524  tbz w7, #0, #+0x10 (addr 0xffff58241b84)
0xffff58241b78  1528  ldp x1, x7, [jssp], #16
0xffff58241b7c  1532  ldp x2, x0, [jssp], #16
0xffff58241b80  1536  ret
0xffff58241b84  1540  ldp x1, x7, [jssp], #16
0xffff58241b88  1544  sub csp, jssp, #0x78 (120)
0xffff58241b8c  1548  stp x14, x15, [jssp, #-32]!
0xffff58241b90  1552  stp x18, lr, [jssp, #16]
0xffff58241b94  1556  stp x10, x11, [jssp, #-32]!
0xffff58241b98  1560  stp x12, x13, [jssp, #16]
0xffff58241b9c  1564  stp x5, x7, [jssp, #-32]!
0xffff58241ba0  1568  stp x8, x9, [jssp, #16]
0xffff58241ba4  1572  stp x1, x3, [jssp, #-24]!
0xffff58241ba8  1576  str x4, [jssp, #16]
0xffff58241bac  1580  sub csp, jssp, #0xb0 (176)
0xffff58241bb0  1584  stp d26, d27, [jssp, #-32]!
0xffff58241bb4  1588  stp d28, d29, [jssp, #16]
0xffff58241bb8  1592  stp d22, d23, [jssp, #-32]!
0xffff58241bbc  1596  stp d24, d25, [jssp, #16]
0xffff58241bc0  1600  stp d18, d19, [jssp, #-32]!
0xffff58241bc4  1604  stp d20, d21, [jssp, #16]
0xffff58241bc8  1608  stp d6, d7, [jssp, #-32]!
0xffff58241bcc  1612  stp d16, d17, [jssp, #16]
0xffff58241bd0  1616  stp d2, d3, [jssp, #-32]!
0xffff58241bd4  1620  stp d4, d5, [jssp, #16]
0xffff58241bd8  1624  stp d0, d1, [jssp, #-16]!
0xffff58241bdc  1628  mov x0, x1
0xffff58241be0  1632  mov x1, x7
0xffff58241be4  1636  ldr x2, pc+268 (addr 0x0000ffff58241cf0)    ;; external reference (isolate)
0xffff58241be8  1640  ldr x16, pc+272 (addr 0x0000ffff58241cf8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58241bec  1644  and csp, jssp, #0xfffffffffffffff0
0xffff58241bf0  1648  blr x16
0xffff58241bf4  1652  ldp d2, d3, [jssp, #16]
0xffff58241bf8  1656  ldp d0, d1, [jssp], #32
0xffff58241bfc  1660  ldp d6, d7, [jssp, #16]
0xffff58241c00  1664  ldp d4, d5, [jssp], #32
0xffff58241c04  1668  ldp d18, d19, [jssp, #16]
0xffff58241c08  1672  ldp d16, d17, [jssp], #32
0xffff58241c0c  1676  ldp d22, d23, [jssp, #16]
0xffff58241c10  1680  ldp d20, d21, [jssp], #32
0xffff58241c14  1684  ldp d26, d27, [jssp, #16]
0xffff58241c18  1688  ldp d24, d25, [jssp], #32
0xffff58241c1c  1692  ldp d28, d29, [jssp], #16
0xffff58241c20  1696  ldp x4, x5, [jssp, #16]
0xffff58241c24  1700  ldp x1, x3, [jssp], #32
0xffff58241c28  1704  ldp x9, x10, [jssp, #16]
0xffff58241c2c  1708  ldp x7, x8, [jssp], #32
0xffff58241c30  1712  ldp x13, x14, [jssp, #16]
0xffff58241c34  1716  ldp x11, x12, [jssp], #32
0xffff58241c38  1720  ldr lr, [jssp, #16]
0xffff58241c3c  1724  ldp x15, x18, [jssp], #24
0xffff58241c40  1728  ldp x2, x0, [jssp], #16
0xffff58241c44  1732  ret
0xffff58241c48  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff58241c4c  1740  d63f03e0       constant
0xffff58241c50  1744  16e798c0       constant
0xffff58241c54  1748  00000000       constant
0xffff58241c58  1752  582065a0       constant
0xffff58241c5c  1756  0000ffff       constant
0xffff58241c60  1760  16e798c0       constant
0xffff58241c64  1764  00000000       constant
0xffff58241c68  1768  582065a0       constant
0xffff58241c6c  1772  0000ffff       constant
0xffff58241c70  1776  16e798c0       constant
0xffff58241c74  1780  00000000       constant
0xffff58241c78  1784  582065a0       constant
0xffff58241c7c  1788  0000ffff       constant
0xffff58241c80  1792  16e782d0       constant
0xffff58241c84  1796  00000000       constant
0xffff58241c88  1800  00c2d958       constant
0xffff58241c8c  1804  00000000       constant
0xffff58241c90  1808  16e798c0       constant
0xffff58241c94  1812  00000000       constant
0xffff58241c98  1816  582065a0       constant
0xffff58241c9c  1820  0000ffff       constant
0xffff58241ca0  1824  16e782d0       constant
0xffff58241ca4  1828  00000000       constant
0xffff58241ca8  1832  00c2d958       constant
0xffff58241cac  1836  00000000       constant
0xffff58241cb0  1840  16e798c0       constant
0xffff58241cb4  1844  00000000       constant
0xffff58241cb8  1848  582065a0       constant
0xffff58241cbc  1852  0000ffff       constant
0xffff58241cc0  1856  16e798c0       constant
0xffff58241cc4  1860  00000000       constant
0xffff58241cc8  1864  582065a0       constant
0xffff58241ccc  1868  0000ffff       constant
0xffff58241cd0  1872  16e782d0       constant
0xffff58241cd4  1876  00000000       constant
0xffff58241cd8  1880  00c2d958       constant
0xffff58241cdc  1884  00000000       constant
0xffff58241ce0  1888  16e798c0       constant
0xffff58241ce4  1892  00000000       constant
0xffff58241ce8  1896  582065a0       constant
0xffff58241cec  1900  0000ffff       constant
0xffff58241cf0  1904  16e782d0       constant
0xffff58241cf4  1908  00000000       constant
0xffff58241cf8  1912  00c2d958       constant
0xffff58241cfc  1916  00000000       constant


RelocInfo (size = 65)
0xffff58241588  external reference (store_buffer_top)  (0x16e798c0)
0xffff582415ac  code target (STUB)  (0xffff582065a0)
0xffff58241624  external reference (store_buffer_top)  (0x16e798c0)
0xffff58241648  code target (STUB)  (0xffff582065a0)
0xffff58241688  external reference (store_buffer_top)  (0x16e798c0)
0xffff582416ac  code target (STUB)  (0xffff582065a0)
0xffff5824171c  external reference (isolate)  (0x16e782d0)
0xffff58241720  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff5824177c  external reference (store_buffer_top)  (0x16e798c0)
0xffff582417a0  code target (STUB)  (0xffff582065a0)
0xffff58241880  external reference (isolate)  (0x16e782d0)
0xffff58241884  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58241948  external reference (store_buffer_top)  (0x16e798c0)
0xffff5824196c  code target (STUB)  (0xffff582065a0)
0xffff582419cc  external reference (store_buffer_top)  (0x16e798c0)
0xffff582419f0  code target (STUB)  (0xffff582065a0)
0xffff58241a60  external reference (isolate)  (0x16e782d0)
0xffff58241a64  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58241ac0  external reference (store_buffer_top)  (0x16e798c0)
0xffff58241ae4  code target (STUB)  (0xffff582065a0)
0xffff58241be4  external reference (isolate)  (0x16e782d0)
0xffff58241be8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58241c48  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff58241d60     0  adr xzr, #+0x40 (addr 0xffff58241da0)
0xffff58241d64     4  adr xzr, #+0x360 (addr 0xffff582420c4)
0xffff58241d68     8  ldr x16, pc+1736 (addr 0x0000ffff58242430)    ;; external reference (store_buffer_top)
0xffff58241d6c    12  ldr x5, [x16]
0xffff58241d70    16  str x9, [x5], #8
0xffff58241d74    20  str x5, [x16]
0xffff58241d78    24  tst x5, #0x1ffff
0xffff58241d7c    28  b.eq #+0x8 (addr 0xffff58241d84)
0xffff58241d80    32  ret
0xffff58241d84    36  sub csp, jssp, #0x8 (8)
0xffff58241d88    40  str lr, [jssp, #-8]!
0xffff58241d8c    44  ldr x17, pc+1708 (addr 0x0000ffff58242438)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58241d90    48  blr x17
0xffff58241d94    52  ldr lr, [jssp], #8
0xffff58241d98    56  ret
0xffff58241d9c    60  ret
0xffff58241da0    64  sub csp, jssp, #0x10 (16)
0xffff58241da4    68  stp x1, x0, [jssp, #-16]!
0xffff58241da8    72  ldr x5, [x9]
0xffff58241dac    76  and x16, x5, #0xfffffffffff00000
0xffff58241db0    80  ldr x16, [x16, #8]
0xffff58241db4    84  tst x16, #0x18
0xffff58241db8    88  b.eq #+0x1d8 (addr 0xffff58241f90)
0xffff58241dbc    92  and x16, x8, #0xfffffffffff00000
0xffff58241dc0    96  ldr x16, [x16, #8]
0xffff58241dc4   100  tst x16, #0x18
0xffff58241dc8   104  b.ne #+0x1c8 (addr 0xffff58241f90)
0xffff58241dcc   108  and x5, x8, #0xfffffffffff00000
0xffff58241dd0   112  ldr x0, [x5, #104]
0xffff58241dd4   116  subs x0, x0, #0x1 (1)
0xffff58241dd8   120  str x0, [x5, #104]
0xffff58241ddc   124  b.mi #+0xc4 (addr 0xffff58241ea0)
0xffff58241de0   128  ubfx x16, x8, #8, #12
0xffff58241de4   132  and x5, x8, #0xfffffffffff00000
0xffff58241de8   136  add x5, x5, x16, lsl #2
0xffff58241dec   140  ubfx x0, x8, #3, #5
0xffff58241df0   144  ldr x5, [x5, #360]
0xffff58241df4   148  lsr x5, x5, x0
0xffff58241df8   152  tbz w5, #0, #+0x8 (addr 0xffff58241e00)
0xffff58241dfc   156  tbnz w5, #1, #+0x3c (addr 0xffff58241e38)
0xffff58241e00   160  ldp x1, x0, [jssp], #16
0xffff58241e04   164  ldr x16, pc+1596 (addr 0x0000ffff58242440)    ;; external reference (store_buffer_top)
0xffff58241e08   168  ldr x5, [x16]
0xffff58241e0c   172  str x9, [x5], #8
0xffff58241e10   176  str x5, [x16]
0xffff58241e14   180  tst x5, #0x1ffff
0xffff58241e18   184  b.eq #+0x8 (addr 0xffff58241e20)
0xffff58241e1c   188  ret
0xffff58241e20   192  sub csp, jssp, #0x8 (8)
0xffff58241e24   196  str lr, [jssp, #-8]!
0xffff58241e28   200  ldr x17, pc+1568 (addr 0x0000ffff58242448)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58241e2c   204  blr x17
0xffff58241e30   208  ldr lr, [jssp], #8
0xffff58241e34   212  ret
0xffff58241e38   216  ldr x5, [x9]
0xffff58241e3c   220  sub csp, jssp, #0x10 (16)
0xffff58241e40   224  stp x8, x9, [jssp, #-16]!
0xffff58241e44   228  ubfx x16, x5, #8, #12
0xffff58241e48   232  and x0, x5, #0xfffffffffff00000
0xffff58241e4c   236  add x0, x0, x16, lsl #2
0xffff58241e50   240  ubfx x8, x5, #3, #5
0xffff58241e54   244  ldr x9, [x0, #360]
0xffff58241e58   248  lsr x9, x9, x8
0xffff58241e5c   252  tbz w9, #0, #+0x40 (addr 0xffff58241e9c)
0xffff58241e60   256  ldp x8, x9, [jssp], #16
0xffff58241e64   260  ldp x1, x0, [jssp], #16
0xffff58241e68   264  ldr x16, pc+1512 (addr 0x0000ffff58242450)    ;; external reference (store_buffer_top)
0xffff58241e6c   268  ldr x5, [x16]
0xffff58241e70   272  str x9, [x5], #8
0xffff58241e74   276  str x5, [x16]
0xffff58241e78   280  tst x5, #0x1ffff
0xffff58241e7c   284  b.eq #+0x8 (addr 0xffff58241e84)
0xffff58241e80   288  ret
0xffff58241e84   292  sub csp, jssp, #0x8 (8)
0xffff58241e88   296  str lr, [jssp, #-8]!
0xffff58241e8c   300  ldr x17, pc+1484 (addr 0x0000ffff58242458)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58241e90   304  blr x17
0xffff58241e94   308  ldr lr, [jssp], #8
0xffff58241e98   312  ret
0xffff58241e9c   316  ldp x8, x9, [jssp], #16
0xffff58241ea0   320  sub csp, jssp, #0x78 (120)
0xffff58241ea4   324  stp x14, x15, [jssp, #-32]!
0xffff58241ea8   328  stp x18, lr, [jssp, #16]
0xffff58241eac   332  stp x10, x11, [jssp, #-32]!
0xffff58241eb0   336  stp x12, x13, [jssp, #16]
0xffff58241eb4   340  stp x6, x7, [jssp, #-32]!
0xffff58241eb8   344  stp x8, x9, [jssp, #16]
0xffff58241ebc   348  stp x2, x3, [jssp, #-24]!
0xffff58241ec0   352  str x4, [jssp, #16]
0xffff58241ec4   356  sub csp, jssp, #0xb0 (176)
0xffff58241ec8   360  stp d26, d27, [jssp, #-32]!
0xffff58241ecc   364  stp d28, d29, [jssp, #16]
0xffff58241ed0   368  stp d22, d23, [jssp, #-32]!
0xffff58241ed4   372  stp d24, d25, [jssp, #16]
0xffff58241ed8   376  stp d18, d19, [jssp, #-32]!
0xffff58241edc   380  stp d20, d21, [jssp, #16]
0xffff58241ee0   384  stp d6, d7, [jssp, #-32]!
0xffff58241ee4   388  stp d16, d17, [jssp, #16]
0xffff58241ee8   392  stp d2, d3, [jssp, #-32]!
0xffff58241eec   396  stp d4, d5, [jssp, #16]
0xffff58241ef0   400  stp d0, d1, [jssp, #-16]!
0xffff58241ef4   404  mov x0, x8
0xffff58241ef8   408  mov x1, x9
0xffff58241efc   412  ldr x2, pc+1380 (addr 0x0000ffff58242460)    ;; external reference (isolate)
0xffff58241f00   416  ldr x16, pc+1384 (addr 0x0000ffff58242468)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58241f04   420  and csp, jssp, #0xfffffffffffffff0
0xffff58241f08   424  blr x16
0xffff58241f0c   428  ldp d2, d3, [jssp, #16]
0xffff58241f10   432  ldp d0, d1, [jssp], #32
0xffff58241f14   436  ldp d6, d7, [jssp, #16]
0xffff58241f18   440  ldp d4, d5, [jssp], #32
0xffff58241f1c   444  ldp d18, d19, [jssp, #16]
0xffff58241f20   448  ldp d16, d17, [jssp], #32
0xffff58241f24   452  ldp d22, d23, [jssp, #16]
0xffff58241f28   456  ldp d20, d21, [jssp], #32
0xffff58241f2c   460  ldp d26, d27, [jssp, #16]
0xffff58241f30   464  ldp d24, d25, [jssp], #32
0xffff58241f34   468  ldp d28, d29, [jssp], #16
0xffff58241f38   472  ldp x4, x6, [jssp, #16]
0xffff58241f3c   476  ldp x2, x3, [jssp], #32
0xffff58241f40   480  ldp x9, x10, [jssp, #16]
0xffff58241f44   484  ldp x7, x8, [jssp], #32
0xffff58241f48   488  ldp x13, x14, [jssp, #16]
0xffff58241f4c   492  ldp x11, x12, [jssp], #32
0xffff58241f50   496  ldr lr, [jssp, #16]
0xffff58241f54   500  ldp x15, x18, [jssp], #24
0xffff58241f58   504  ldp x1, x0, [jssp], #16
0xffff58241f5c   508  ldr x16, pc+1300 (addr 0x0000ffff58242470)    ;; external reference (store_buffer_top)
0xffff58241f60   512  ldr x5, [x16]
0xffff58241f64   516  str x9, [x5], #8
0xffff58241f68   520  str x5, [x16]
0xffff58241f6c   524  tst x5, #0x1ffff
0xffff58241f70   528  b.eq #+0x8 (addr 0xffff58241f78)
0xffff58241f74   532  ret
0xffff58241f78   536  sub csp, jssp, #0x8 (8)
0xffff58241f7c   540  str lr, [jssp, #-8]!
0xffff58241f80   544  ldr x17, pc+1272 (addr 0x0000ffff58242478)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58241f84   548  blr x17
0xffff58241f88   552  ldr lr, [jssp], #8
0xffff58241f8c   556  ret
0xffff58241f90   560  and x5, x8, #0xfffffffffff00000
0xffff58241f94   564  ldr x0, [x5, #104]
0xffff58241f98   568  subs x0, x0, #0x1 (1)
0xffff58241f9c   572  str x0, [x5, #104]
0xffff58241fa0   576  b.mi #+0x64 (addr 0xffff58242004)
0xffff58241fa4   580  ubfx x16, x8, #8, #12
0xffff58241fa8   584  and x5, x8, #0xfffffffffff00000
0xffff58241fac   588  add x5, x5, x16, lsl #2
0xffff58241fb0   592  ubfx x0, x8, #3, #5
0xffff58241fb4   596  ldr x5, [x5, #360]
0xffff58241fb8   600  lsr x5, x5, x0
0xffff58241fbc   604  tbz w5, #0, #+0x8 (addr 0xffff58241fc4)
0xffff58241fc0   608  tbnz w5, #1, #+0xc (addr 0xffff58241fcc)
0xffff58241fc4   612  ldp x1, x0, [jssp], #16
0xffff58241fc8   616  ret
0xffff58241fcc   620  ldr x5, [x9]
0xffff58241fd0   624  sub csp, jssp, #0x10 (16)
0xffff58241fd4   628  stp x8, x9, [jssp, #-16]!
0xffff58241fd8   632  ubfx x16, x5, #8, #12
0xffff58241fdc   636  and x0, x5, #0xfffffffffff00000
0xffff58241fe0   640  add x0, x0, x16, lsl #2
0xffff58241fe4   644  ubfx x8, x5, #3, #5
0xffff58241fe8   648  ldr x9, [x0, #360]
0xffff58241fec   652  lsr x9, x9, x8
0xffff58241ff0   656  tbz w9, #0, #+0x10 (addr 0xffff58242000)
0xffff58241ff4   660  ldp x8, x9, [jssp], #16
0xffff58241ff8   664  ldp x1, x0, [jssp], #16
0xffff58241ffc   668  ret
0xffff58242000   672  ldp x8, x9, [jssp], #16
0xffff58242004   676  sub csp, jssp, #0x78 (120)
0xffff58242008   680  stp x14, x15, [jssp, #-32]!
0xffff5824200c   684  stp x18, lr, [jssp, #16]
0xffff58242010   688  stp x10, x11, [jssp, #-32]!
0xffff58242014   692  stp x12, x13, [jssp, #16]
0xffff58242018   696  stp x6, x7, [jssp, #-32]!
0xffff5824201c   700  stp x8, x9, [jssp, #16]
0xffff58242020   704  stp x2, x3, [jssp, #-24]!
0xffff58242024   708  str x4, [jssp, #16]
0xffff58242028   712  sub csp, jssp, #0xb0 (176)
0xffff5824202c   716  stp d26, d27, [jssp, #-32]!
0xffff58242030   720  stp d28, d29, [jssp, #16]
0xffff58242034   724  stp d22, d23, [jssp, #-32]!
0xffff58242038   728  stp d24, d25, [jssp, #16]
0xffff5824203c   732  stp d18, d19, [jssp, #-32]!
0xffff58242040   736  stp d20, d21, [jssp, #16]
0xffff58242044   740  stp d6, d7, [jssp, #-32]!
0xffff58242048   744  stp d16, d17, [jssp, #16]
0xffff5824204c   748  stp d2, d3, [jssp, #-32]!
0xffff58242050   752  stp d4, d5, [jssp, #16]
0xffff58242054   756  stp d0, d1, [jssp, #-16]!
0xffff58242058   760  mov x0, x8
0xffff5824205c   764  mov x1, x9
0xffff58242060   768  ldr x2, pc+1056 (addr 0x0000ffff58242480)    ;; external reference (isolate)
0xffff58242064   772  ldr x16, pc+1060 (addr 0x0000ffff58242488)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58242068   776  and csp, jssp, #0xfffffffffffffff0
0xffff5824206c   780  blr x16
0xffff58242070   784  ldp d2, d3, [jssp, #16]
0xffff58242074   788  ldp d0, d1, [jssp], #32
0xffff58242078   792  ldp d6, d7, [jssp, #16]
0xffff5824207c   796  ldp d4, d5, [jssp], #32
0xffff58242080   800  ldp d18, d19, [jssp, #16]
0xffff58242084   804  ldp d16, d17, [jssp], #32
0xffff58242088   808  ldp d22, d23, [jssp, #16]
0xffff5824208c   812  ldp d20, d21, [jssp], #32
0xffff58242090   816  ldp d26, d27, [jssp, #16]
0xffff58242094   820  ldp d24, d25, [jssp], #32
0xffff58242098   824  ldp d28, d29, [jssp], #16
0xffff5824209c   828  ldp x4, x6, [jssp, #16]
0xffff582420a0   832  ldp x2, x3, [jssp], #32
0xffff582420a4   836  ldp x9, x10, [jssp, #16]
0xffff582420a8   840  ldp x7, x8, [jssp], #32
0xffff582420ac   844  ldp x13, x14, [jssp, #16]
0xffff582420b0   848  ldp x11, x12, [jssp], #32
0xffff582420b4   852  ldr lr, [jssp, #16]
0xffff582420b8   856  ldp x15, x18, [jssp], #24
0xffff582420bc   860  ldp x1, x0, [jssp], #16
0xffff582420c0   864  ret
0xffff582420c4   868  sub csp, jssp, #0x10 (16)
0xffff582420c8   872  stp x1, x0, [jssp, #-16]!
0xffff582420cc   876  ldr x5, [x9]
0xffff582420d0   880  and x16, x5, #0xfffffffffff00000
0xffff582420d4   884  ldr x16, [x16, #8]
0xffff582420d8   888  tst x16, #0x18
0xffff582420dc   892  b.eq #+0x1f8 (addr 0xffff582422d4)
0xffff582420e0   896  and x16, x8, #0xfffffffffff00000
0xffff582420e4   900  ldr x16, [x16, #8]
0xffff582420e8   904  tst x16, #0x18
0xffff582420ec   908  b.ne #+0x1e8 (addr 0xffff582422d4)
0xffff582420f0   912  and x5, x8, #0xfffffffffff00000
0xffff582420f4   916  ldr x0, [x5, #104]
0xffff582420f8   920  subs x0, x0, #0x1 (1)
0xffff582420fc   924  str x0, [x5, #104]
0xffff58242100   928  b.mi #+0xe4 (addr 0xffff582421e4)
0xffff58242104   932  ubfx x16, x8, #8, #12
0xffff58242108   936  and x5, x8, #0xfffffffffff00000
0xffff5824210c   940  add x5, x5, x16, lsl #2
0xffff58242110   944  ubfx x0, x8, #3, #5
0xffff58242114   948  ldr x5, [x5, #360]
0xffff58242118   952  lsr x5, x5, x0
0xffff5824211c   956  tbz w5, #0, #+0x8 (addr 0xffff58242124)
0xffff58242120   960  tbnz w5, #1, #+0x3c (addr 0xffff5824215c)
0xffff58242124   964  ldp x1, x0, [jssp], #16
0xffff58242128   968  ldr x16, pc+872 (addr 0x0000ffff58242490)    ;; external reference (store_buffer_top)
0xffff5824212c   972  ldr x5, [x16]
0xffff58242130   976  str x9, [x5], #8
0xffff58242134   980  str x5, [x16]
0xffff58242138   984  tst x5, #0x1ffff
0xffff5824213c   988  b.eq #+0x8 (addr 0xffff58242144)
0xffff58242140   992  ret
0xffff58242144   996  sub csp, jssp, #0x8 (8)
0xffff58242148  1000  str lr, [jssp, #-8]!
0xffff5824214c  1004  ldr x17, pc+844 (addr 0x0000ffff58242498)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58242150  1008  blr x17
0xffff58242154  1012  ldr lr, [jssp], #8
0xffff58242158  1016  ret
0xffff5824215c  1020  ldr x5, [x9]
0xffff58242160  1024  and x0, x5, #0xfffffffffff00000
0xffff58242164  1028  ldr x0, [x0, #8]
0xffff58242168  1032  tbz w0, #6, #+0x18 (addr 0xffff58242180)
0xffff5824216c  1036  and x0, x8, #0xfffffffffff00000
0xffff58242170  1040  ldr x0, [x0, #8]
0xffff58242174  1044  movz x16, #0x58
0xffff58242178  1048  tst x0, x16
0xffff5824217c  1052  b.eq #+0x68 (addr 0xffff582421e4)
0xffff58242180  1056  sub csp, jssp, #0x10 (16)
0xffff58242184  1060  stp x8, x9, [jssp, #-16]!
0xffff58242188  1064  ubfx x16, x5, #8, #12
0xffff5824218c  1068  and x0, x5, #0xfffffffffff00000
0xffff58242190  1072  add x0, x0, x16, lsl #2
0xffff58242194  1076  ubfx x8, x5, #3, #5
0xffff58242198  1080  ldr x9, [x0, #360]
0xffff5824219c  1084  lsr x9, x9, x8
0xffff582421a0  1088  tbz w9, #0, #+0x40 (addr 0xffff582421e0)
0xffff582421a4  1092  ldp x8, x9, [jssp], #16
0xffff582421a8  1096  ldp x1, x0, [jssp], #16
0xffff582421ac  1100  ldr x16, pc+756 (addr 0x0000ffff582424a0)    ;; external reference (store_buffer_top)
0xffff582421b0  1104  ldr x5, [x16]
0xffff582421b4  1108  str x9, [x5], #8
0xffff582421b8  1112  str x5, [x16]
0xffff582421bc  1116  tst x5, #0x1ffff
0xffff582421c0  1120  b.eq #+0x8 (addr 0xffff582421c8)
0xffff582421c4  1124  ret
0xffff582421c8  1128  sub csp, jssp, #0x8 (8)
0xffff582421cc  1132  str lr, [jssp, #-8]!
0xffff582421d0  1136  ldr x17, pc+728 (addr 0x0000ffff582424a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582421d4  1140  blr x17
0xffff582421d8  1144  ldr lr, [jssp], #8
0xffff582421dc  1148  ret
0xffff582421e0  1152  ldp x8, x9, [jssp], #16
0xffff582421e4  1156  sub csp, jssp, #0x78 (120)
0xffff582421e8  1160  stp x14, x15, [jssp, #-32]!
0xffff582421ec  1164  stp x18, lr, [jssp, #16]
0xffff582421f0  1168  stp x10, x11, [jssp, #-32]!
0xffff582421f4  1172  stp x12, x13, [jssp, #16]
0xffff582421f8  1176  stp x6, x7, [jssp, #-32]!
0xffff582421fc  1180  stp x8, x9, [jssp, #16]
0xffff58242200  1184  stp x2, x3, [jssp, #-24]!
0xffff58242204  1188  str x4, [jssp, #16]
0xffff58242208  1192  sub csp, jssp, #0xb0 (176)
0xffff5824220c  1196  stp d26, d27, [jssp, #-32]!
0xffff58242210  1200  stp d28, d29, [jssp, #16]
0xffff58242214  1204  stp d22, d23, [jssp, #-32]!
0xffff58242218  1208  stp d24, d25, [jssp, #16]
0xffff5824221c  1212  stp d18, d19, [jssp, #-32]!
0xffff58242220  1216  stp d20, d21, [jssp, #16]
0xffff58242224  1220  stp d6, d7, [jssp, #-32]!
0xffff58242228  1224  stp d16, d17, [jssp, #16]
0xffff5824222c  1228  stp d2, d3, [jssp, #-32]!
0xffff58242230  1232  stp d4, d5, [jssp, #16]
0xffff58242234  1236  stp d0, d1, [jssp, #-16]!
0xffff58242238  1240  mov x0, x8
0xffff5824223c  1244  mov x1, x9
0xffff58242240  1248  ldr x2, pc+624 (addr 0x0000ffff582424b0)    ;; external reference (isolate)
0xffff58242244  1252  ldr x16, pc+628 (addr 0x0000ffff582424b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58242248  1256  and csp, jssp, #0xfffffffffffffff0
0xffff5824224c  1260  blr x16
0xffff58242250  1264  ldp d2, d3, [jssp, #16]
0xffff58242254  1268  ldp d0, d1, [jssp], #32
0xffff58242258  1272  ldp d6, d7, [jssp, #16]
0xffff5824225c  1276  ldp d4, d5, [jssp], #32
0xffff58242260  1280  ldp d18, d19, [jssp, #16]
0xffff58242264  1284  ldp d16, d17, [jssp], #32
0xffff58242268  1288  ldp d22, d23, [jssp, #16]
0xffff5824226c  1292  ldp d20, d21, [jssp], #32
0xffff58242270  1296  ldp d26, d27, [jssp, #16]
0xffff58242274  1300  ldp d24, d25, [jssp], #32
0xffff58242278  1304  ldp d28, d29, [jssp], #16
0xffff5824227c  1308  ldp x4, x6, [jssp, #16]
0xffff58242280  1312  ldp x2, x3, [jssp], #32
0xffff58242284  1316  ldp x9, x10, [jssp, #16]
0xffff58242288  1320  ldp x7, x8, [jssp], #32
0xffff5824228c  1324  ldp x13, x14, [jssp, #16]
0xffff58242290  1328  ldp x11, x12, [jssp], #32
0xffff58242294  1332  ldr lr, [jssp, #16]
0xffff58242298  1336  ldp x15, x18, [jssp], #24
0xffff5824229c  1340  ldp x1, x0, [jssp], #16
0xffff582422a0  1344  ldr x16, pc+544 (addr 0x0000ffff582424c0)    ;; external reference (store_buffer_top)
0xffff582422a4  1348  ldr x5, [x16]
0xffff582422a8  1352  str x9, [x5], #8
0xffff582422ac  1356  str x5, [x16]
0xffff582422b0  1360  tst x5, #0x1ffff
0xffff582422b4  1364  b.eq #+0x8 (addr 0xffff582422bc)
0xffff582422b8  1368  ret
0xffff582422bc  1372  sub csp, jssp, #0x8 (8)
0xffff582422c0  1376  str lr, [jssp, #-8]!
0xffff582422c4  1380  ldr x17, pc+516 (addr 0x0000ffff582424c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff582422c8  1384  blr x17
0xffff582422cc  1388  ldr lr, [jssp], #8
0xffff582422d0  1392  ret
0xffff582422d4  1396  and x5, x8, #0xfffffffffff00000
0xffff582422d8  1400  ldr x0, [x5, #104]
0xffff582422dc  1404  subs x0, x0, #0x1 (1)
0xffff582422e0  1408  str x0, [x5, #104]
0xffff582422e4  1412  b.mi #+0x84 (addr 0xffff58242368)
0xffff582422e8  1416  ubfx x16, x8, #8, #12
0xffff582422ec  1420  and x5, x8, #0xfffffffffff00000
0xffff582422f0  1424  add x5, x5, x16, lsl #2
0xffff582422f4  1428  ubfx x0, x8, #3, #5
0xffff582422f8  1432  ldr x5, [x5, #360]
0xffff582422fc  1436  lsr x5, x5, x0
0xffff58242300  1440  tbz w5, #0, #+0x8 (addr 0xffff58242308)
0xffff58242304  1444  tbnz w5, #1, #+0xc (addr 0xffff58242310)
0xffff58242308  1448  ldp x1, x0, [jssp], #16
0xffff5824230c  1452  ret
0xffff58242310  1456  ldr x5, [x9]
0xffff58242314  1460  and x0, x5, #0xfffffffffff00000
0xffff58242318  1464  ldr x0, [x0, #8]
0xffff5824231c  1468  tbz w0, #6, #+0x18 (addr 0xffff58242334)
0xffff58242320  1472  and x0, x8, #0xfffffffffff00000
0xffff58242324  1476  ldr x0, [x0, #8]
0xffff58242328  1480  movz x16, #0x58
0xffff5824232c  1484  tst x0, x16
0xffff58242330  1488  b.eq #+0x38 (addr 0xffff58242368)
0xffff58242334  1492  sub csp, jssp, #0x10 (16)
0xffff58242338  1496  stp x8, x9, [jssp, #-16]!
0xffff5824233c  1500  ubfx x16, x5, #8, #12
0xffff58242340  1504  and x0, x5, #0xfffffffffff00000
0xffff58242344  1508  add x0, x0, x16, lsl #2
0xffff58242348  1512  ubfx x8, x5, #3, #5
0xffff5824234c  1516  ldr x9, [x0, #360]
0xffff58242350  1520  lsr x9, x9, x8
0xffff58242354  1524  tbz w9, #0, #+0x10 (addr 0xffff58242364)
0xffff58242358  1528  ldp x8, x9, [jssp], #16
0xffff5824235c  1532  ldp x1, x0, [jssp], #16
0xffff58242360  1536  ret
0xffff58242364  1540  ldp x8, x9, [jssp], #16
0xffff58242368  1544  sub csp, jssp, #0x78 (120)
0xffff5824236c  1548  stp x14, x15, [jssp, #-32]!
0xffff58242370  1552  stp x18, lr, [jssp, #16]
0xffff58242374  1556  stp x10, x11, [jssp, #-32]!
0xffff58242378  1560  stp x12, x13, [jssp, #16]
0xffff5824237c  1564  stp x6, x7, [jssp, #-32]!
0xffff58242380  1568  stp x8, x9, [jssp, #16]
0xffff58242384  1572  stp x2, x3, [jssp, #-24]!
0xffff58242388  1576  str x4, [jssp, #16]
0xffff5824238c  1580  sub csp, jssp, #0xb0 (176)
0xffff58242390  1584  stp d26, d27, [jssp, #-32]!
0xffff58242394  1588  stp d28, d29, [jssp, #16]
0xffff58242398  1592  stp d22, d23, [jssp, #-32]!
0xffff5824239c  1596  stp d24, d25, [jssp, #16]
0xffff582423a0  1600  stp d18, d19, [jssp, #-32]!
0xffff582423a4  1604  stp d20, d21, [jssp, #16]
0xffff582423a8  1608  stp d6, d7, [jssp, #-32]!
0xffff582423ac  1612  stp d16, d17, [jssp, #16]
0xffff582423b0  1616  stp d2, d3, [jssp, #-32]!
0xffff582423b4  1620  stp d4, d5, [jssp, #16]
0xffff582423b8  1624  stp d0, d1, [jssp, #-16]!
0xffff582423bc  1628  mov x0, x8
0xffff582423c0  1632  mov x1, x9
0xffff582423c4  1636  ldr x2, pc+268 (addr 0x0000ffff582424d0)    ;; external reference (isolate)
0xffff582423c8  1640  ldr x16, pc+272 (addr 0x0000ffff582424d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582423cc  1644  and csp, jssp, #0xfffffffffffffff0
0xffff582423d0  1648  blr x16
0xffff582423d4  1652  ldp d2, d3, [jssp, #16]
0xffff582423d8  1656  ldp d0, d1, [jssp], #32
0xffff582423dc  1660  ldp d6, d7, [jssp, #16]
0xffff582423e0  1664  ldp d4, d5, [jssp], #32
0xffff582423e4  1668  ldp d18, d19, [jssp, #16]
0xffff582423e8  1672  ldp d16, d17, [jssp], #32
0xffff582423ec  1676  ldp d22, d23, [jssp, #16]
0xffff582423f0  1680  ldp d20, d21, [jssp], #32
0xffff582423f4  1684  ldp d26, d27, [jssp, #16]
0xffff582423f8  1688  ldp d24, d25, [jssp], #32
0xffff582423fc  1692  ldp d28, d29, [jssp], #16
0xffff58242400  1696  ldp x4, x6, [jssp, #16]
0xffff58242404  1700  ldp x2, x3, [jssp], #32
0xffff58242408  1704  ldp x9, x10, [jssp, #16]
0xffff5824240c  1708  ldp x7, x8, [jssp], #32
0xffff58242410  1712  ldp x13, x14, [jssp, #16]
0xffff58242414  1716  ldp x11, x12, [jssp], #32
0xffff58242418  1720  ldr lr, [jssp, #16]
0xffff5824241c  1724  ldp x15, x18, [jssp], #24
0xffff58242420  1728  ldp x1, x0, [jssp], #16
0xffff58242424  1732  ret
0xffff58242428  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff5824242c  1740  d63f03e0       constant
0xffff58242430  1744  16e798c0       constant
0xffff58242434  1748  00000000       constant
0xffff58242438  1752  582065a0       constant
0xffff5824243c  1756  0000ffff       constant
0xffff58242440  1760  16e798c0       constant
0xffff58242444  1764  00000000       constant
0xffff58242448  1768  582065a0       constant
0xffff5824244c  1772  0000ffff       constant
0xffff58242450  1776  16e798c0       constant
0xffff58242454  1780  00000000       constant
0xffff58242458  1784  582065a0       constant
0xffff5824245c  1788  0000ffff       constant
0xffff58242460  1792  16e782d0       constant
0xffff58242464  1796  00000000       constant
0xffff58242468  1800  00c2d958       constant
0xffff5824246c  1804  00000000       constant
0xffff58242470  1808  16e798c0       constant
0xffff58242474  1812  00000000       constant
0xffff58242478  1816  582065a0       constant
0xffff5824247c  1820  0000ffff       constant
0xffff58242480  1824  16e782d0       constant
0xffff58242484  1828  00000000       constant
0xffff58242488  1832  00c2d958       constant
0xffff5824248c  1836  00000000       constant
0xffff58242490  1840  16e798c0       constant
0xffff58242494  1844  00000000       constant
0xffff58242498  1848  582065a0       constant
0xffff5824249c  1852  0000ffff       constant
0xffff582424a0  1856  16e798c0       constant
0xffff582424a4  1860  00000000       constant
0xffff582424a8  1864  582065a0       constant
0xffff582424ac  1868  0000ffff       constant
0xffff582424b0  1872  16e782d0       constant
0xffff582424b4  1876  00000000       constant
0xffff582424b8  1880  00c2d958       constant
0xffff582424bc  1884  00000000       constant
0xffff582424c0  1888  16e798c0       constant
0xffff582424c4  1892  00000000       constant
0xffff582424c8  1896  582065a0       constant
0xffff582424cc  1900  0000ffff       constant
0xffff582424d0  1904  16e782d0       constant
0xffff582424d4  1908  00000000       constant
0xffff582424d8  1912  00c2d958       constant
0xffff582424dc  1916  00000000       constant


RelocInfo (size = 65)
0xffff58241d68  external reference (store_buffer_top)  (0x16e798c0)
0xffff58241d8c  code target (STUB)  (0xffff582065a0)
0xffff58241e04  external reference (store_buffer_top)  (0x16e798c0)
0xffff58241e28  code target (STUB)  (0xffff582065a0)
0xffff58241e68  external reference (store_buffer_top)  (0x16e798c0)
0xffff58241e8c  code target (STUB)  (0xffff582065a0)
0xffff58241efc  external reference (isolate)  (0x16e782d0)
0xffff58241f00  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58241f5c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58241f80  code target (STUB)  (0xffff582065a0)
0xffff58242060  external reference (isolate)  (0x16e782d0)
0xffff58242064  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58242128  external reference (store_buffer_top)  (0x16e798c0)
0xffff5824214c  code target (STUB)  (0xffff582065a0)
0xffff582421ac  external reference (store_buffer_top)  (0x16e798c0)
0xffff582421d0  code target (STUB)  (0xffff582065a0)
0xffff58242240  external reference (isolate)  (0x16e782d0)
0xffff58242244  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582422a0  external reference (store_buffer_top)  (0x16e798c0)
0xffff582422c4  code target (STUB)  (0xffff582065a0)
0xffff582423c4  external reference (isolate)  (0x16e782d0)
0xffff582423c8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58242428  constant pool (size 184)


kind = STUB
major_key = FastArrayPushStub
name = FastArrayPushStub
compiler = crankshaft
Instructions (size = 2199)
0xffff58242540     0  movz x16, #0xa00000000
0xffff58242544     4  sub csp, jssp, #0x10 (16)
0xffff58242548     8  stp fp, lr, [jssp, #-16]!
0xffff5824254c    12  mov fp, jssp
0xffff58242550    16  sub csp, jssp, #0x8 (8)
0xffff58242554    20  sub jssp, jssp, #0x8 (8)
0xffff58242558    24  stur x16, [fp, #-8]
0xffff5824255c    28  mov x2, fp
0xffff58242560    32  add w1, w0, #0x2 (2)
0xffff58242564    36  ldr x1, [x2, w1, uxtw #3]
0xffff58242568    40  tbz w1, #0, #+0x758 (addr 0xffff58242cc0)
0xffff5824256c    44  ldur x3, [x1, #-1]
0xffff58242570    48  ldur x4, [x1, #-1]
0xffff58242574    52  ldrb w4, [x4, #11]
0xffff58242578    56  cmp x4, #0xbc (188)
0xffff5824257c    60  b.ne #+0x74c (addr 0xffff58242cc8)
0xffff58242580    64  ldrb w4, [x3, #13]
0xffff58242584    68  movz w16, #0x5
0xffff58242588    72  and w5, w4, w16
0xffff5824258c    76  cmp w5, #0x1 (1)
0xffff58242590    80  b.ne #+0x568 (addr 0xffff58242af8)
0xffff58242594    84  ldrb w5, [x3, #12]
0xffff58242598    88  and w5, w5, #0x20
0xffff5824259c    92  cmp w5, #0x20 (32)
0xffff582425a0    96  b.eq #+0x550 (addr 0xffff58242af0)
0xffff582425a4   100  ldur w5, [x3, #15]
0xffff582425a8   104  and w5, w5, #0x100000
0xffff582425ac   108  cmp w5, #0x100000 (1048576)
0xffff582425b0   112  b.eq #+0x538 (addr 0xffff58242ae8)
0xffff582425b4   116  ldur x5, [x3, #47]
0xffff582425b8   120  ldur w6, [x5, #43]
0xffff582425bc   124  and w5, w6, #0x4
0xffff582425c0   128  cmp w5, #0x4 (4)
0xffff582425c4   132  b.eq #+0x51c (addr 0xffff58242ae0)
0xffff582425c8   136  ldr x5, [x26, #56]
0xffff582425cc   140  ldr x6, [x26, #304]
0xffff582425d0   144  ldur x3, [x3, #23]
0xffff582425d4   148  cmp x3, x5
0xffff582425d8   152  b.eq #+0x40 (addr 0xffff58242618)
0xffff582425dc   156  ldur x7, [x3, #-1]
0xffff582425e0   160  ldrb w8, [x7, #11]
0xffff582425e4   164  cmp w8, #0xb4 (180)
0xffff582425e8   168  b.le #+0x20 (addr 0xffff58242608)
0xffff582425ec   172  cmp w8, #0xb6 (182)
0xffff582425f0   176  b.eq #+0x18 (addr 0xffff58242608)
0xffff582425f4   180  ldur x3, [x3, #15]
0xffff582425f8   184  cmp x3, x6
0xffff582425fc   188  b.ne #+0x14 (addr 0xffff58242610)
0xffff58242600   192  mov x3, x7
0xffff58242604   196  b #-0x34 (addr 0xffff582425d0)
0xffff58242608   200  ldr x16, pc+1488 (addr 0x0000ffff58242bd8)    ;; lazy deoptimization bailout 2
0xffff5824260c   204  blr x16
0xffff58242610   208  ldr x16, pc+1488 (addr 0x0000ffff58242be0)    ;; lazy deoptimization bailout 3
0xffff58242614   212  blr x16
0xffff58242618   216  and w3, w4, #0xf8
0xffff5824261c   220  lsr w3, w3, #3
0xffff58242620   224  cmp w3, #0x1 (1)
0xffff58242624   228  b.le #+0x330 (addr 0xffff58242954)
0xffff58242628   232  cmp w3, #0x3 (3)
0xffff5824262c   236  b.le #+0x1b8 (addr 0xffff582427e4)
0xffff58242630   240  cmp w3, #0x5 (5)
0xffff58242634   244  b.le #+0xc (addr 0xffff58242640)
0xffff58242638   248  ldr x16, pc+1456 (addr 0x0000ffff58242be8)    ;; lazy deoptimization bailout 4
0xffff5824263c   252  blr x16
0xffff58242640   256  movz x3, #0x0
0xffff58242644   260  cmp w0, w3
0xffff58242648   264  b.le #+0x34 (addr 0xffff5824267c)
0xffff5824264c   268  sub w4, w0, w3
0xffff58242650   272  add w4, w4, #0x1 (1)
0xffff58242654   276  ldr x4, [x2, w4, uxtw #3]
0xffff58242658   280  tbz w4, #0, #+0x14 (addr 0xffff5824266c)
0xffff5824265c   284  ldur x4, [x4, #-1]
0xffff58242660   288  ldr x16, pc+1480 (addr 0x0000ffff58242c28)    ;; object: 0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58242664   292  cmp x4, x16
0xffff58242668   296  b.ne #+0xc (addr 0xffff58242674)
0xffff5824266c   300  add w3, w3, #0x1 (1)
0xffff58242670   304  b #-0x2c (addr 0xffff58242644)
0xffff58242674   308  ldr x16, pc+1404 (addr 0x0000ffff58242bf0)    ;; lazy deoptimization bailout 5
0xffff58242678   312  blr x16
0xffff5824267c   316  ldur w3, [x1, #27]
0xffff58242680   320  adds w4, w3, w0
0xffff58242684   324  b.vs #+0x64c (addr 0xffff58242cd0)
0xffff58242688   328  subs w5, w4, #0x1 (1)
0xffff5824268c   332  b.vs #+0x64c (addr 0xffff58242cd8)
0xffff58242690   336  ldur x6, [x1, #15]
0xffff58242694   340  cmp w3, w5
0xffff58242698   344  b.le #+0x10 (addr 0xffff582426a8)
0xffff5824269c   348  cmp w5, w3
0xffff582426a0   352  b.hs #+0x640 (addr 0xffff58242ce0)
0xffff582426a4   356  b #+0xe4 (addr 0xffff58242788)
0xffff582426a8   360  ldur w7, [x6, #11]
0xffff582426ac   364  cmp w7, w5
0xffff582426b0   368  b.gt #+0xcc (addr 0xffff5824277c)
0xffff582426b4   372  adds w7, w7, #0x400 (1024)
0xffff582426b8   376  b.vs #+0x630 (addr 0xffff58242ce8)
0xffff582426bc   380  cmp w5, w7
0xffff582426c0   384  b.hs #+0x630 (addr 0xffff58242cf0)
0xffff582426c4   388  add w7, w5, w5, lsr #1
0xffff582426c8   392  add w7, w7, #0x10 (16)
0xffff582426cc   396  movz w16, #0x95ff
0xffff582426d0   400  cmp w7, w16, lsl #1
0xffff582426d4   404  b.hs #+0x624 (addr 0xffff58242cf8)
0xffff582426d8   408  lsl x8, x7, #32
0xffff582426dc   412  lsl w9, w7, #3
0xffff582426e0   416  add w7, w9, #0x10 (16)
0xffff582426e4   420  sxtw x7, w7
0xffff582426e8   424  movz x9, #0x92c0
0xffff582426ec   428  movk x9, #0x16e7, lsl #16
0xffff582426f0   432  ldp x11, x16, [x9]
0xffff582426f4   436  adds x10, x11, x7
0xffff582426f8   440  ccmp x10, x16, #nzCv, lo
0xffff582426fc   444  b.hi #+0x404 (addr 0xffff58242b00)
0xffff58242700   448  str x10, [x9]
0xffff58242704   452  orr x11, x11, #0x1
0xffff58242708   456  ldr x7, pc+1320 (addr 0x0000ffff58242c30)    ;; object: 0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5824270c   460  stur x7, [x11, #-1]
0xffff58242710   464  stur x8, [x11, #7]
0xffff58242714   468  ldr d0, pc+1292 (addr 0x0000ffff58242c20)
0xffff58242718   472  ldur w7, [x11, #11]
0xffff5824271c   476  cmp w3, w7
0xffff58242720   480  b.ge #+0x14 (addr 0xffff58242734)
0xffff58242724   484  sub w7, w7, #0x1 (1)
0xffff58242728   488  add x8, x11, #0xf (15)
0xffff5824272c   492  str d0, [x8, w7, sxtw #3]
0xffff58242730   496  b #-0x14 (addr 0xffff5824271c)
0xffff58242734   500  mov x7, x3
0xffff58242738   504  cmp w7, #0x0 (0)
0xffff5824273c   508  b.le #+0x1c (addr 0xffff58242758)
0xffff58242740   512  sub w7, w7, #0x1 (1)
0xffff58242744   516  add x8, x6, #0xf (15)
0xffff58242748   520  ldr d0, [x8, w7, sxtw #3]
0xffff5824274c   524  add x8, x11, #0xf (15)
0xffff58242750   528  str d0, [x8, w7, sxtw #3]
0xffff58242754   532  b #-0x1c (addr 0xffff58242738)
0xffff58242758   536  mov x6, x11
0xffff5824275c   540  stur x6, [x1, #15]
0xffff58242760   544  add x7, x1, #0xf (15)
0xffff58242764   548  and x6, x1, #0xfffffffffff00000
0xffff58242768   552  ldr x6, [x6, #8]
0xffff5824276c   556  tbz w6, #2, #+0xc (addr 0xffff58242778)
0xffff58242770   560  ldr x16, pc+1224 (addr 0x0000ffff58242c38)    ;; code: STUB, RecordWriteStub, minor: 72897
0xffff58242774   564  blr x16
0xffff58242778   568  mov x6, x11
0xffff5824277c   572  add w5, w5, #0x1 (1)
0xffff58242780   576  lsl x5, x5, #32
0xffff58242784   580  stur x5, [x1, #23]
0xffff58242788   584  movz x1, #0x0
0xffff5824278c   588  cmp w0, w1
0xffff58242790   592  b.le #+0x4c (addr 0xffff582427dc)
0xffff58242794   596  sub w5, w0, w1
0xffff58242798   600  add w5, w5, #0x1 (1)
0xffff5824279c   604  ldr x5, [x2, w5, uxtw #3]
0xffff582427a0   608  adds w7, w1, w3
0xffff582427a4   612  b.vs #+0x55c (addr 0xffff58242d00)
0xffff582427a8   616  tbz w5, #0, #+0x1c (addr 0xffff582427c4)
0xffff582427ac   620  ldur x16, [x5, #-1]
0xffff582427b0   624  ldr x17, [x26, #120]
0xffff582427b4   628  cmp x16, x17
0xffff582427b8   632  b.ne #+0x550 (addr 0xffff58242d08)
0xffff582427bc   636  ldur d0, [x5, #7]
0xffff582427c0   640  b #+0x8 (addr 0xffff582427c8)
0xffff582427c4   644  scvtf d0, x5, #32
0xffff582427c8   648  add x5, x6, #0xf (15)
0xffff582427cc   652  fsub d29, d0, d15
0xffff582427d0   656  str d29, [x5, w7, sxtw #3]
0xffff582427d4   660  add w1, w1, #0x1 (1)
0xffff582427d8   664  b #-0x4c (addr 0xffff5824278c)
0xffff582427dc   668  lsl x1, x4, #32
0xffff582427e0   672  b #+0x2e4 (addr 0xffff58242ac4)
0xffff582427e4   676  ldur w3, [x1, #27]
0xffff582427e8   680  adds w4, w3, w0
0xffff582427ec   684  b.vs #+0x524 (addr 0xffff58242d10)
0xffff582427f0   688  subs w5, w4, #0x1 (1)
0xffff582427f4   692  b.vs #+0x524 (addr 0xffff58242d18)
0xffff582427f8   696  ldur x6, [x1, #15]
0xffff582427fc   700  cmp w3, w5
0xffff58242800   704  b.le #+0x10 (addr 0xffff58242810)
0xffff58242804   708  cmp w5, w3
0xffff58242808   712  b.hs #+0x518 (addr 0xffff58242d20)
0xffff5824280c   716  b #+0xe4 (addr 0xffff582428f0)
0xffff58242810   720  ldur w7, [x6, #11]
0xffff58242814   724  cmp w7, w5
0xffff58242818   728  b.gt #+0xcc (addr 0xffff582428e4)
0xffff5824281c   732  adds w7, w7, #0x400 (1024)
0xffff58242820   736  b.vs #+0x508 (addr 0xffff58242d28)
0xffff58242824   740  cmp w5, w7
0xffff58242828   744  b.hs #+0x508 (addr 0xffff58242d30)
0xffff5824282c   748  add w7, w5, w5, lsr #1
0xffff58242830   752  add w7, w7, #0x10 (16)
0xffff58242834   756  movz w16, #0x95ff
0xffff58242838   760  cmp w7, w16, lsl #1
0xffff5824283c   764  b.hs #+0x4fc (addr 0xffff58242d38)
0xffff58242840   768  lsl x8, x7, #32
0xffff58242844   772  lsl w9, w7, #3
0xffff58242848   776  add w7, w9, #0x10 (16)
0xffff5824284c   780  sxtw x7, w7
0xffff58242850   784  movz x9, #0x92c0
0xffff58242854   788  movk x9, #0x16e7, lsl #16
0xffff58242858   792  ldp x11, x16, [x9]
0xffff5824285c   796  adds x10, x11, x7
0xffff58242860   800  ccmp x10, x16, #nzCv, lo
0xffff58242864   804  b.hi #+0x2e0 (addr 0xffff58242b44)
0xffff58242868   808  str x10, [x9]
0xffff5824286c   812  orr x11, x11, #0x1
0xffff58242870   816  ldr x7, pc+976 (addr 0x0000ffff58242c40)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58242874   820  stur x7, [x11, #-1]
0xffff58242878   824  stur x8, [x11, #7]
0xffff5824287c   828  ldur w7, [x11, #11]
0xffff58242880   832  cmp w3, w7
0xffff58242884   836  b.ge #+0x18 (addr 0xffff5824289c)
0xffff58242888   840  sub w7, w7, #0x1 (1)
0xffff5824288c   844  ldr x8, pc+956 (addr 0x0000ffff58242c48)    ;; object: 0x39c04519 <the hole>
0xffff58242890   848  add x9, x11, #0xf (15)
0xffff58242894   852  str x8, [x9, w7, sxtw #3]
0xffff58242898   856  b #-0x18 (addr 0xffff58242880)
0xffff5824289c   860  mov x7, x3
0xffff582428a0   864  cmp w7, #0x0 (0)
0xffff582428a4   868  b.le #+0x1c (addr 0xffff582428c0)
0xffff582428a8   872  sub w7, w7, #0x1 (1)
0xffff582428ac   876  add x8, x6, #0xf (15)
0xffff582428b0   880  ldr x9, [x8, w7, sxtw #3]
0xffff582428b4   884  add x8, x11, #0xf (15)
0xffff582428b8   888  str x9, [x8, w7, sxtw #3]
0xffff582428bc   892  b #-0x1c (addr 0xffff582428a0)
0xffff582428c0   896  mov x6, x11
0xffff582428c4   900  stur x6, [x1, #15]
0xffff582428c8   904  add x7, x1, #0xf (15)
0xffff582428cc   908  and x6, x1, #0xfffffffffff00000
0xffff582428d0   912  ldr x6, [x6, #8]
0xffff582428d4   916  tbz w6, #2, #+0xc (addr 0xffff582428e0)
0xffff582428d8   920  ldr x16, pc+888 (addr 0x0000ffff58242c50)    ;; code: STUB, RecordWriteStub, minor: 72897
0xffff582428dc   924  blr x16
0xffff582428e0   928  mov x6, x11
0xffff582428e4   932  add w5, w5, #0x1 (1)
0xffff582428e8   936  lsl x5, x5, #32
0xffff582428ec   940  stur x5, [x1, #23]
0xffff582428f0   944  movz x1, #0x0
0xffff582428f4   948  cmp w0, w1
0xffff582428f8   952  b.le #+0x54 (addr 0xffff5824294c)
0xffff582428fc   956  sub w5, w0, w1
0xffff58242900   960  add w5, w5, #0x1 (1)
0xffff58242904   964  ldr x5, [x2, w5, uxtw #3]
0xffff58242908   968  adds w7, w1, w3
0xffff5824290c   972  b.vs #+0x434 (addr 0xffff58242d40)
0xffff58242910   976  mov x8, x6
0xffff58242914   980  add x9, x8, #0xf (15)
0xffff58242918   984  str x5, [x9, w7, sxtw #3]
0xffff5824291c   988  add x9, x9, w7, sxtw #3
0xffff58242920   992  tbz w5, #0, #+0x24 (addr 0xffff58242944)
0xffff58242924   996  and x5, x5, #0xfffffffffff00000
0xffff58242928  1000  ldr x5, [x5, #8]
0xffff5824292c  1004  tbz w5, #1, #+0x18 (addr 0xffff58242944)
0xffff58242930  1008  and x5, x8, #0xfffffffffff00000
0xffff58242934  1012  ldr x5, [x5, #8]
0xffff58242938  1016  tbz w5, #2, #+0xc (addr 0xffff58242944)
0xffff5824293c  1020  ldr x16, pc+796 (addr 0x0000ffff58242c58)    ;; code: STUB, RecordWriteStub, minor: 74920
0xffff58242940  1024  blr x16
0xffff58242944  1028  add w1, w1, #0x1 (1)
0xffff58242948  1032  b #-0x54 (addr 0xffff582428f4)
0xffff5824294c  1036  lsl x1, x4, #32
0xffff58242950  1040  b #+0x174 (addr 0xffff58242ac4)
0xffff58242954  1044  movz x3, #0x0
0xffff58242958  1048  cmp w0, w3
0xffff5824295c  1052  b.le #+0x24 (addr 0xffff58242980)
0xffff58242960  1056  sub w4, w0, w3
0xffff58242964  1060  add w4, w4, #0x1 (1)
0xffff58242968  1064  ldr x4, [x2, w4, uxtw #3]
0xffff5824296c  1068  tbnz w4, #0, #+0xc (addr 0xffff58242978)
0xffff58242970  1072  add w3, w3, #0x1 (1)
0xffff58242974  1076  b #-0x1c (addr 0xffff58242958)
0xffff58242978  1080  ldr x16, pc+640 (addr 0x0000ffff58242bf8)    ;; lazy deoptimization bailout 21
0xffff5824297c  1084  blr x16
0xffff58242980  1088  ldur w3, [x1, #27]
0xffff58242984  1092  adds w4, w3, w0
0xffff58242988  1096  b.vs #+0x3c0 (addr 0xffff58242d48)
0xffff5824298c  1100  subs w5, w4, #0x1 (1)
0xffff58242990  1104  b.vs #+0x3c0 (addr 0xffff58242d50)
0xffff58242994  1108  ldur x6, [x1, #15]
0xffff58242998  1112  cmp w3, w5
0xffff5824299c  1116  b.le #+0x10 (addr 0xffff582429ac)
0xffff582429a0  1120  cmp w5, w3
0xffff582429a4  1124  b.hs #+0x3b4 (addr 0xffff58242d58)
0xffff582429a8  1128  b #+0xe4 (addr 0xffff58242a8c)
0xffff582429ac  1132  ldur w7, [x6, #11]
0xffff582429b0  1136  cmp w7, w5
0xffff582429b4  1140  b.gt #+0xcc (addr 0xffff58242a80)
0xffff582429b8  1144  adds w7, w7, #0x400 (1024)
0xffff582429bc  1148  b.vs #+0x3a4 (addr 0xffff58242d60)
0xffff582429c0  1152  cmp w5, w7
0xffff582429c4  1156  b.hs #+0x3a4 (addr 0xffff58242d68)
0xffff582429c8  1160  add w7, w5, w5, lsr #1
0xffff582429cc  1164  add w7, w7, #0x10 (16)
0xffff582429d0  1168  movz w16, #0x95ff
0xffff582429d4  1172  cmp w7, w16, lsl #1
0xffff582429d8  1176  b.hs #+0x398 (addr 0xffff58242d70)
0xffff582429dc  1180  lsl x8, x7, #32
0xffff582429e0  1184  lsl w9, w7, #3
0xffff582429e4  1188  add w7, w9, #0x10 (16)
0xffff582429e8  1192  sxtw x7, w7
0xffff582429ec  1196  movz x9, #0x92c0
0xffff582429f0  1200  movk x9, #0x16e7, lsl #16
0xffff582429f4  1204  ldp x11, x16, [x9]
0xffff582429f8  1208  adds x10, x11, x7
0xffff582429fc  1212  ccmp x10, x16, #nzCv, lo
0xffff58242a00  1216  b.hi #+0x188 (addr 0xffff58242b88)
0xffff58242a04  1220  str x10, [x9]
0xffff58242a08  1224  orr x11, x11, #0x1
0xffff58242a0c  1228  ldr x7, pc+596 (addr 0x0000ffff58242c60)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58242a10  1232  stur x7, [x11, #-1]
0xffff58242a14  1236  stur x8, [x11, #7]
0xffff58242a18  1240  ldur w7, [x11, #11]
0xffff58242a1c  1244  cmp w3, w7
0xffff58242a20  1248  b.ge #+0x18 (addr 0xffff58242a38)
0xffff58242a24  1252  sub w7, w7, #0x1 (1)
0xffff58242a28  1256  ldr x8, pc+576 (addr 0x0000ffff58242c68)    ;; object: 0x39c04519 <the hole>
0xffff58242a2c  1260  add x9, x11, #0xf (15)
0xffff58242a30  1264  str x8, [x9, w7, sxtw #3]
0xffff58242a34  1268  b #-0x18 (addr 0xffff58242a1c)
0xffff58242a38  1272  mov x7, x3
0xffff58242a3c  1276  cmp w7, #0x0 (0)
0xffff58242a40  1280  b.le #+0x1c (addr 0xffff58242a5c)
0xffff58242a44  1284  sub w7, w7, #0x1 (1)
0xffff58242a48  1288  add x8, x6, #0xf (15)
0xffff58242a4c  1292  ldr x9, [x8, w7, sxtw #3]
0xffff58242a50  1296  add x8, x11, #0xf (15)
0xffff58242a54  1300  str x9, [x8, w7, sxtw #3]
0xffff58242a58  1304  b #-0x1c (addr 0xffff58242a3c)
0xffff58242a5c  1308  mov x6, x11
0xffff58242a60  1312  stur x6, [x1, #15]
0xffff58242a64  1316  add x7, x1, #0xf (15)
0xffff58242a68  1320  and x6, x1, #0xfffffffffff00000
0xffff58242a6c  1324  ldr x6, [x6, #8]
0xffff58242a70  1328  tbz w6, #2, #+0xc (addr 0xffff58242a7c)
0xffff58242a74  1332  ldr x16, pc+508 (addr 0x0000ffff58242c70)    ;; code: STUB, RecordWriteStub, minor: 72897
0xffff58242a78  1336  blr x16
0xffff58242a7c  1340  mov x6, x11
0xffff58242a80  1344  add w5, w5, #0x1 (1)
0xffff58242a84  1348  lsl x5, x5, #32
0xffff58242a88  1352  stur x5, [x1, #23]
0xffff58242a8c  1356  movz x1, #0x0
0xffff58242a90  1360  cmp w0, w1
0xffff58242a94  1364  b.le #+0x2c (addr 0xffff58242ac0)
0xffff58242a98  1368  sub w5, w0, w1
0xffff58242a9c  1372  add w5, w5, #0x1 (1)
0xffff58242aa0  1376  ldr x5, [x2, w5, uxtw #3]
0xffff58242aa4  1380  adds w7, w1, w3
0xffff58242aa8  1384  b.vs #+0x2d0 (addr 0xffff58242d78)
0xffff58242aac  1388  tbnz w5, #0, #+0x2d4 (addr 0xffff58242d80)
0xffff58242ab0  1392  add x8, x6, #0xf (15)
0xffff58242ab4  1396  str x5, [x8, w7, sxtw #3]
0xffff58242ab8  1400  add w1, w1, #0x1 (1)
0xffff58242abc  1404  b #-0x2c (addr 0xffff58242a90)
0xffff58242ac0  1408  lsl x1, x4, #32
0xffff58242ac4  1412  add w0, w0, #0x1 (1)
0xffff58242ac8  1416  lsl x2, x0, #32
0xffff58242acc  1420  mov x0, x1
0xffff58242ad0  1424  mov jssp, fp
0xffff58242ad4  1428  ldp fp, lr, [jssp], #16
0xffff58242ad8  1432  add jssp, jssp, x2, lsr #29
0xffff58242adc  1436  ret
0xffff58242ae0  1440  ldr x16, pc+288 (addr 0x0000ffff58242c00)    ;; lazy deoptimization bailout 30
0xffff58242ae4  1444  blr x16
0xffff58242ae8  1448  ldr x16, pc+288 (addr 0x0000ffff58242c08)    ;; lazy deoptimization bailout 31
0xffff58242aec  1452  blr x16
0xffff58242af0  1456  ldr x16, pc+288 (addr 0x0000ffff58242c10)    ;; lazy deoptimization bailout 32
0xffff58242af4  1460  blr x16
0xffff58242af8  1464  ldr x16, pc+288 (addr 0x0000ffff58242c18)    ;; lazy deoptimization bailout 33
0xffff58242afc  1468  blr x16
0xffff58242b00  1472  movz x11, #0x0
0xffff58242b04  1476  mov x16, lr
0xffff58242b08  1480  ldr x17, pc+368 (addr 0x0000ffff58242c78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58242b0c  1484  blr x17
0xffff58242b10  1488  lsl x0, x7, #32
0xffff58242b14  1492  movz x10, #0x100000000
0xffff58242b18  1496  sub csp, jssp, #0x10 (16)
0xffff58242b1c  1500  stp x10, x0, [jssp, #-16]!
0xffff58242b20  1504  movz x0, #0x2
0xffff58242b24  1508  movz x1, #0x5b88
0xffff58242b28  1512  movk x1, #0xe2, lsl #16
0xffff58242b2c  1516  ldr x16, pc+340 (addr 0x0000ffff58242c80)    ;; code: STUB, CEntryStub, minor: 5
0xffff58242b30  1520  blr x16
0xffff58242b34  1524  str x0, [jssp, #88]
0xffff58242b38  1528  ldr x16, pc+336 (addr 0x0000ffff58242c88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58242b3c  1532  blr x16
0xffff58242b40  1536  b #-0x438 (addr 0xffff58242708)
0xffff58242b44  1540  movz x11, #0x0
0xffff58242b48  1544  mov x16, lr
0xffff58242b4c  1548  ldr x17, pc+324 (addr 0x0000ffff58242c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58242b50  1552  blr x17
0xffff58242b54  1556  lsl x0, x7, #32
0xffff58242b58  1560  movz x10, #0x0
0xffff58242b5c  1564  sub csp, jssp, #0x10 (16)
0xffff58242b60  1568  stp x10, x0, [jssp, #-16]!
0xffff58242b64  1572  movz x0, #0x2
0xffff58242b68  1576  movz x1, #0x5b88
0xffff58242b6c  1580  movk x1, #0xe2, lsl #16
0xffff58242b70  1584  ldr x16, pc+296 (addr 0x0000ffff58242c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff58242b74  1588  blr x16
0xffff58242b78  1592  str x0, [jssp, #88]
0xffff58242b7c  1596  ldr x16, pc+292 (addr 0x0000ffff58242ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58242b80  1600  blr x16
0xffff58242b84  1604  b #-0x314 (addr 0xffff58242870)
0xffff58242b88  1608  movz x11, #0x0
0xffff58242b8c  1612  mov x16, lr
0xffff58242b90  1616  ldr x17, pc+280 (addr 0x0000ffff58242ca8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58242b94  1620  blr x17
0xffff58242b98  1624  lsl x0, x7, #32
0xffff58242b9c  1628  movz x10, #0x0
0xffff58242ba0  1632  sub csp, jssp, #0x10 (16)
0xffff58242ba4  1636  stp x10, x0, [jssp, #-16]!
0xffff58242ba8  1640  movz x0, #0x2
0xffff58242bac  1644  movz x1, #0x5b88
0xffff58242bb0  1648  movk x1, #0xe2, lsl #16
0xffff58242bb4  1652  ldr x16, pc+252 (addr 0x0000ffff58242cb0)    ;; code: STUB, CEntryStub, minor: 5
0xffff58242bb8  1656  blr x16
0xffff58242bbc  1660  str x0, [jssp, #88]
0xffff58242bc0  1664  ldr x16, pc+248 (addr 0x0000ffff58242cb8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58242bc4  1668  blr x16
0xffff58242bc8  1672  b #-0x1bc (addr 0xffff58242a0c)
0xffff58242bcc  1676  5800079f       constant pool begin (num_const = 60)    ;; constant pool
0xffff58242bd0  1680  d63f03e0       constant
0xffff58242bd4  1684  d503201f       constant
0xffff58242bd8  1688  58006010       constant
0xffff58242bdc  1692  0000ffff       constant
0xffff58242be0  1696  58006018       constant
0xffff58242be4  1700  0000ffff       constant
0xffff58242be8  1704  58006020       constant
0xffff58242bec  1708  0000ffff       constant
0xffff58242bf0  1712  58006028       constant
0xffff58242bf4  1716  0000ffff       constant
0xffff58242bf8  1720  580060a8       constant
0xffff58242bfc  1724  0000ffff       constant
0xffff58242c00  1728  580060f0       constant
0xffff58242c04  1732  0000ffff       constant
0xffff58242c08  1736  580060f8       constant
0xffff58242c0c  1740  0000ffff       constant
0xffff58242c10  1744  58006100       constant
0xffff58242c14  1748  0000ffff       constant
0xffff58242c18  1752  58006108       constant
0xffff58242c1c  1756  0000ffff       constant
0xffff58242c20  1760  fff7ffff       constant
0xffff58242c24  1764  fff7ffff       constant
0xffff58242c28  1768  32b04411       constant
0xffff58242c2c  1772  00000000       constant
0xffff58242c30  1776  32b052d9       constant
0xffff58242c34  1780  00000000       constant
0xffff58242c38  1784  58241580       constant
0xffff58242c3c  1788  0000ffff       constant
0xffff58242c40  1792  32b04259       constant
0xffff58242c44  1796  00000000       constant
0xffff58242c48  1800  39c04519       constant
0xffff58242c4c  1804  00000000       constant
0xffff58242c50  1808  58241580       constant
0xffff58242c54  1812  0000ffff       constant
0xffff58242c58  1816  58241d60       constant
0xffff58242c5c  1820  0000ffff       constant
0xffff58242c60  1824  32b04259       constant
0xffff58242c64  1828  00000000       constant
0xffff58242c68  1832  39c04519       constant
0xffff58242c6c  1836  00000000       constant
0xffff58242c70  1840  58241580       constant
0xffff58242c74  1844  0000ffff       constant
0xffff58242c78  1848  58206820       constant
0xffff58242c7c  1852  0000ffff       constant
0xffff58242c80  1856  58206260       constant
0xffff58242c84  1860  0000ffff       constant
0xffff58242c88  1864  582068e0       constant
0xffff58242c8c  1868  0000ffff       constant
0xffff58242c90  1872  58206820       constant
0xffff58242c94  1876  0000ffff       constant
0xffff58242c98  1880  58206260       constant
0xffff58242c9c  1884  0000ffff       constant
0xffff58242ca0  1888  582068e0       constant
0xffff58242ca4  1892  0000ffff       constant
0xffff58242ca8  1896  58206820       constant
0xffff58242cac  1900  0000ffff       constant
0xffff58242cb0  1904  58206260       constant
0xffff58242cb4  1908  0000ffff       constant
0xffff58242cb8  1912  582068e0       constant
0xffff58242cbc  1916  0000ffff       constant
0xffff58242cc0  1920  movz x16, #0x0
0xffff58242cc4  1924  bl #+0xc4 (addr 0xffff58242d88)
0xffff58242cc8  1928  movz x16, #0x8
0xffff58242ccc  1932  bl #+0xbc (addr 0xffff58242d88)
0xffff58242cd0  1936  movz x16, #0x30
0xffff58242cd4  1940  bl #+0xb4 (addr 0xffff58242d88)
0xffff58242cd8  1944  movz x16, #0x38
0xffff58242cdc  1948  bl #+0xac (addr 0xffff58242d88)
0xffff58242ce0  1952  movz x16, #0x40
0xffff58242ce4  1956  bl #+0xa4 (addr 0xffff58242d88)
0xffff58242ce8  1960  movz x16, #0x48
0xffff58242cec  1964  bl #+0x9c (addr 0xffff58242d88)
0xffff58242cf0  1968  movz x16, #0x50
0xffff58242cf4  1972  bl #+0x94 (addr 0xffff58242d88)
0xffff58242cf8  1976  movz x16, #0x58
0xffff58242cfc  1980  bl #+0x8c (addr 0xffff58242d88)
0xffff58242d00  1984  movz x16, #0x60
0xffff58242d04  1988  bl #+0x84 (addr 0xffff58242d88)
0xffff58242d08  1992  movz x16, #0x68
0xffff58242d0c  1996  bl #+0x7c (addr 0xffff58242d88)
0xffff58242d10  2000  movz x16, #0x70
0xffff58242d14  2004  bl #+0x74 (addr 0xffff58242d88)
0xffff58242d18  2008  movz x16, #0x78
0xffff58242d1c  2012  bl #+0x6c (addr 0xffff58242d88)
0xffff58242d20  2016  movz x16, #0x80
0xffff58242d24  2020  bl #+0x64 (addr 0xffff58242d88)
0xffff58242d28  2024  movz x16, #0x88
0xffff58242d2c  2028  bl #+0x5c (addr 0xffff58242d88)
0xffff58242d30  2032  movz x16, #0x90
0xffff58242d34  2036  bl #+0x54 (addr 0xffff58242d88)
0xffff58242d38  2040  movz x16, #0x98
0xffff58242d3c  2044  bl #+0x4c (addr 0xffff58242d88)
0xffff58242d40  2048  movz x16, #0xa0
0xffff58242d44  2052  bl #+0x44 (addr 0xffff58242d88)
0xffff58242d48  2056  movz x16, #0xb0
0xffff58242d4c  2060  bl #+0x3c (addr 0xffff58242d88)
0xffff58242d50  2064  movz x16, #0xb8
0xffff58242d54  2068  bl #+0x34 (addr 0xffff58242d88)
0xffff58242d58  2072  movz x16, #0xc0
0xffff58242d5c  2076  bl #+0x2c (addr 0xffff58242d88)
0xffff58242d60  2080  movz x16, #0xc8
0xffff58242d64  2084  bl #+0x24 (addr 0xffff58242d88)
0xffff58242d68  2088  movz x16, #0xd0
0xffff58242d6c  2092  bl #+0x1c (addr 0xffff58242d88)
0xffff58242d70  2096  movz x16, #0xd8
0xffff58242d74  2100  bl #+0x14 (addr 0xffff58242d88)
0xffff58242d78  2104  movz x16, #0xe0
0xffff58242d7c  2108  bl #+0xc (addr 0xffff58242d88)
0xffff58242d80  2112  movz x16, #0xe8
0xffff58242d84  2116  bl #+0x4 (addr 0xffff58242d88)
0xffff58242d88  2120  ldr x17, pc+24 (addr 0x0000ffff58242da0)    ;; lazy deoptimization bailout 0
0xffff58242d8c  2124  add x17, x17, x16
0xffff58242d90  2128  br x17
0xffff58242d94  2132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58242d98  2136  d63f03e0       constant
0xffff58242d9c  2140  d503201f       constant
0xffff58242da0  2144  58006000       constant
0xffff58242da4  2148  0000ffff       constant


Safepoints (size = 47)
0xffff58242b34  1524  000 | x1 | x2 | x6 | x11 | x27 (sp -> fp)  <none> argc: 2
0xffff58242b78  1592  000 | x1 | x2 | x6 | x11 | x27 (sp -> fp)  <none> argc: 2
0xffff58242bbc  1660  000 | x1 | x2 | x6 | x11 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 71)
0xffff58242608  runtime entry
0xffff58242610  runtime entry
0xffff58242638  runtime entry
0xffff58242660  embedded object  (0x32b04411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58242674  runtime entry
0xffff58242708  embedded object  (0x32b052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58242770  code target (STUB)  (0xffff58241580)
0xffff58242870  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5824288c  embedded object  (0x39c04519 <the hole>)
0xffff582428d8  code target (STUB)  (0xffff58241580)
0xffff5824293c  code target (STUB)  (0xffff58241d60)
0xffff58242978  runtime entry
0xffff58242a0c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff58242a28  embedded object  (0x39c04519 <the hole>)
0xffff58242a74  code target (STUB)  (0xffff58241580)
0xffff58242ae0  runtime entry
0xffff58242ae8  runtime entry
0xffff58242af0  runtime entry
0xffff58242af8  runtime entry
0xffff58242b08  code target (STUB)  (0xffff58206820)
0xffff58242b2c  code target (STUB)  (0xffff58206260)
0xffff58242b38  code target (STUB)  (0xffff582068e0)
0xffff58242b4c  code target (STUB)  (0xffff58206820)
0xffff58242b70  code target (STUB)  (0xffff58206260)
0xffff58242b7c  code target (STUB)  (0xffff582068e0)
0xffff58242b90  code target (STUB)  (0xffff58206820)
0xffff58242bb4  code target (STUB)  (0xffff58206260)
0xffff58242bc0  code target (STUB)  (0xffff582068e0)
0xffff58242bcc  constant pool (size 244)
0xffff58242d88  runtime entry
0xffff58242d94  constant pool (size 20)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 2
type = NORMAL
name = ToBooleanICStub(Bool)
compiler = crankshaft
Instructions (size = 144)
0xffff582430a0     0  ldr x16, [x26, #64]
0xffff582430a4     4  cmp x0, x16
0xffff582430a8     8  b.eq #+0x1c (addr 0xffff582430c4)
0xffff582430ac    12  ldr x16, [x26, #72]
0xffff582430b0    16  cmp x0, x16
0xffff582430b4    20  b.eq #+0x8 (addr 0xffff582430bc)
0xffff582430b8    24  b #+0x30 (addr 0xffff582430e8)
0xffff582430bc    28  ldr x0, pc+28 (addr 0x0000ffff582430d8)    ;; object: 0x39c042b1 <false>
0xffff582430c0    32  ret
0xffff582430c4    36  ldr x0, pc+28 (addr 0x0000ffff582430e0)    ;; object: 0x39c04281 <true>
0xffff582430c8    40  ret
0xffff582430cc    44  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582430d0    48  d63f03e0       constant
0xffff582430d4    52  d503201f       constant
0xffff582430d8    56  39c042b1       constant
0xffff582430dc    60  00000000       constant
0xffff582430e0    64  39c04281       constant
0xffff582430e4    68  00000000       constant
0xffff582430e8    72  movz x16, #0x0
0xffff582430ec    76  sub csp, jssp, #0x10 (16)
0xffff582430f0    80  stp fp, lr, [jssp, #-16]!
0xffff582430f4    84  bl #+0x4 (addr 0xffff582430f8)
0xffff582430f8    88  movz x17, #0xa00000000
0xffff582430fc    92  sub csp, jssp, #0x10 (16)
0xffff58243100    96  stp x17, cp, [jssp, #-16]!
0xffff58243104   100  add fp, jssp, #0x10 (16)
0xffff58243108   104  ldr x17, pc+24 (addr 0x0000ffff58243120)    ;; lazy deoptimization bailout 0
0xffff5824310c   108  add x17, x17, x16
0xffff58243110   112  br x17
0xffff58243114   116  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58243118   120  d63f03e0       constant
0xffff5824311c   124  d503201f       constant
0xffff58243120   128  58006000       constant
0xffff58243124   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582430bc  embedded object  (0x39c042b1 <false>)
0xffff582430c4  embedded object  (0x39c04281 <true>)
0xffff582430cc  constant pool (size 28)
0xffff58243108  runtime entry
0xffff58243114  constant pool (size 20)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff582431a0     0  ldur x0, [x1, #-1]
0xffff582431a4     4  ldur x0, [x0, #47]
0xffff582431a8     8  ldur x0, [x0, #47]
0xffff582431ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = hasOwnProperty
compiler = unknown
Instructions (size = 120)
0xffff58243220     0  sub csp, jssp, #0x8 (8)
0xffff58243224     4  str x3, [jssp, #-8]!
0xffff58243228     8  sub csp, jssp, #0x8 (8)
0xffff5824322c    12  str x0, [jssp, #-8]!
0xffff58243230    16  ldr x0, pc+72 (addr 0x0000ffff58243278)    ;; object: 0x39c63e59 Cell for 0
0xffff58243234    20  ldur x0, [x0, #7]
0xffff58243238    24  cmp x0, #0x0 (0)
0xffff5824323c    28  b.ne #+0x14 (addr 0xffff58243250)
0xffff58243240    32  ldr x3, pc+64 (addr 0x0000ffff58243280)    ;; object: 0x39c63e69 WeakCell for 0x39c3ff39 <an Object with map 0x32b0c081>
0xffff58243244    36  ldur x3, [x3, #7]
0xffff58243248    40  tbz w3, #0, #+0x8 (addr 0xffff58243250)
0xffff5824324c    44  b #+0x14 (addr 0xffff58243260)
0xffff58243250    48  ldr x0, [jssp], #8
0xffff58243254    52  ldr x3, [jssp], #8
0xffff58243258    56  ldr x16, pc+48 (addr 0x0000ffff58243288)    ;; code: BUILTIN
0xffff5824325c    60  br x16
0xffff58243260    64  add jssp, jssp, #0x10 (16)
0xffff58243264    68  mov x1, x3
0xffff58243268    72  ldr x16, pc+40 (addr 0x0000ffff58243290)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff5824326c    76  br x16
0xffff58243270    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff58243274    84  d63f03e0       constant
0xffff58243278    88  39c63e59       constant
0xffff5824327c    92  00000000       constant
0xffff58243280    96  39c63e69       constant
0xffff58243284   100  00000000       constant
0xffff58243288   104  582222e0       constant
0xffff5824328c   108  0000ffff       constant
0xffff58243290   112  582431a0       constant
0xffff58243294   116  0000ffff       constant


RelocInfo (size = 10)
0xffff58243230  embedded object  (0x39c63e59 Cell for 0)
0xffff58243240  embedded object  (0x39c63e69 WeakCell for 0x39c3ff39 <an Object with map 0x32b0c081>)
0xffff58243258  code target (BUILTIN)  (0xffff582222e0)
0xffff58243268  code target (HANDLER)  (0xffff582431a0)
0xffff58243270  constant pool (size 40)

kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff58243300     0  ldur x0, [x1, #-1]
0xffff58243304     4  ldur x0, [x0, #47]
0xffff58243308     8  ldur x0, [x0, #71]
0xffff5824330c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff58243380     0  ldur x0, [x1, #-1]
0xffff58243384     4  ldur x0, [x0, #47]
0xffff58243388     8  ldur x0, [x0, #95]
0xffff5824338c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff58243400     0  ldur x0, [x1, #-1]
0xffff58243404     4  ldur x0, [x0, #47]
0xffff58243408     8  ldur x0, [x0, #119]
0xffff5824340c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff58243480     0  ldur x0, [x1, #-1]
0xffff58243484     4  ldur x0, [x0, #47]
0xffff58243488     8  ldur x0, [x0, #143]
0xffff5824348c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff58243500     0  ldur x0, [x1, #-1]
0xffff58243504     4  ldur x0, [x0, #47]
0xffff58243508     8  ldur x0, [x0, #167]
0xffff5824350c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = FunctionPrototypeStub
name = FunctionPrototypeStub
compiler = unknown
Instructions (size = 72)
0xffff58243580     0  ldur x10, [x1, #23]
0xffff58243584     4  ldr x16, [x26, #88]
0xffff58243588     8  cmp x10, x16
0xffff5824358c    12  b.eq #+0x20 (addr 0xffff582435ac)
0xffff58243590    16  ldur x11, [x10, #-1]
0xffff58243594    20  ldrb w11, [x11, #11]
0xffff58243598    24  cmp x11, #0x84 (132)
0xffff5824359c    28  b.ne #+0x8 (addr 0xffff582435a4)
0xffff582435a0    32  ldur x10, [x10, #23]
0xffff582435a4    36  mov x0, x10
0xffff582435a8    40  ret
0xffff582435ac    44  ldr x16, pc+20 (addr 0x0000ffff582435c0)    ;; code: BUILTIN
0xffff582435b0    48  br x16
0xffff582435b4    52  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582435b8    56  d63f03e0       constant
0xffff582435bc    60  d503201f       constant
0xffff582435c0    64  582222e0       constant
0xffff582435c4    68  0000ffff       constant


RelocInfo (size = 7)
0xffff582435ac  code target (BUILTIN)  (0xffff582222e0)
0xffff582435b4  constant pool (size 20)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 653)
0xffff58243d60     0  movz x2, #0x92c0
0xffff58243d64     4  movk x2, #0x16e7, lsl #16
0xffff58243d68     8  ldp x3, x0, [x2]
0xffff58243d6c    12  adds x16, x3, #0xf8 (248)
0xffff58243d70    16  ccmp x16, x0, #nzCv, lo
0xffff58243d74    20  b.hi #+0x104 (addr 0xffff58243e78)
0xffff58243d78    24  str x16, [x2]
0xffff58243d7c    28  orr x3, x3, #0x1
0xffff58243d80    32  ldr x0, pc+360 (addr 0x0000ffff58243ee8)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58243d84    36  stur x0, [x3, #-1]
0xffff58243d88    40  movz x0, #0x1d00000000
0xffff58243d8c    44  stur x0, [x3, #7]
0xffff58243d90    48  stur x1, [x3, #15]
0xffff58243d94    52  stur cp, [x3, #23]
0xffff58243d98    56  ldr x0, pc+344 (addr 0x0000ffff58243ef0)    ;; object: 0x39c04519 <the hole>
0xffff58243d9c    60  stur x0, [x3, #31]
0xffff58243da0    64  ldur x0, [cp, #39]
0xffff58243da4    68  stur x0, [x3, #39]
0xffff58243da8    72  ldr x0, pc+336 (addr 0x0000ffff58243ef8)    ;; object: 0x39c04241 <undefined>
0xffff58243dac    76  stur x0, [x3, #47]
0xffff58243db0    80  ldr x0, pc+336 (addr 0x0000ffff58243f00)    ;; object: 0x39c04241 <undefined>
0xffff58243db4    84  stur x0, [x3, #55]
0xffff58243db8    88  ldr x0, pc+336 (addr 0x0000ffff58243f08)    ;; object: 0x39c04241 <undefined>
0xffff58243dbc    92  stur x0, [x3, #63]
0xffff58243dc0    96  ldr x0, pc+336 (addr 0x0000ffff58243f10)    ;; object: 0x39c04241 <undefined>
0xffff58243dc4   100  stur x0, [x3, #71]
0xffff58243dc8   104  ldr x0, pc+336 (addr 0x0000ffff58243f18)    ;; object: 0x39c04241 <undefined>
0xffff58243dcc   108  stur x0, [x3, #79]
0xffff58243dd0   112  ldr x0, pc+336 (addr 0x0000ffff58243f20)    ;; object: 0x39c04241 <undefined>
0xffff58243dd4   116  stur x0, [x3, #87]
0xffff58243dd8   120  ldr x0, pc+336 (addr 0x0000ffff58243f28)    ;; object: 0x39c04241 <undefined>
0xffff58243ddc   124  stur x0, [x3, #95]
0xffff58243de0   128  ldr x0, pc+336 (addr 0x0000ffff58243f30)    ;; object: 0x39c04241 <undefined>
0xffff58243de4   132  stur x0, [x3, #103]
0xffff58243de8   136  ldr x0, pc+336 (addr 0x0000ffff58243f38)    ;; object: 0x39c04241 <undefined>
0xffff58243dec   140  stur x0, [x3, #111]
0xffff58243df0   144  ldr x0, pc+336 (addr 0x0000ffff58243f40)    ;; object: 0x39c04241 <undefined>
0xffff58243df4   148  stur x0, [x3, #119]
0xffff58243df8   152  ldr x0, pc+336 (addr 0x0000ffff58243f48)    ;; object: 0x39c04241 <undefined>
0xffff58243dfc   156  stur x0, [x3, #127]
0xffff58243e00   160  ldr x0, pc+336 (addr 0x0000ffff58243f50)    ;; object: 0x39c04241 <undefined>
0xffff58243e04   164  stur x0, [x3, #135]
0xffff58243e08   168  ldr x0, pc+336 (addr 0x0000ffff58243f58)    ;; object: 0x39c04241 <undefined>
0xffff58243e0c   172  stur x0, [x3, #143]
0xffff58243e10   176  ldr x0, pc+336 (addr 0x0000ffff58243f60)    ;; object: 0x39c04241 <undefined>
0xffff58243e14   180  stur x0, [x3, #151]
0xffff58243e18   184  ldr x0, pc+336 (addr 0x0000ffff58243f68)    ;; object: 0x39c04241 <undefined>
0xffff58243e1c   188  stur x0, [x3, #159]
0xffff58243e20   192  ldr x0, pc+336 (addr 0x0000ffff58243f70)    ;; object: 0x39c04241 <undefined>
0xffff58243e24   196  stur x0, [x3, #167]
0xffff58243e28   200  ldr x0, pc+336 (addr 0x0000ffff58243f78)    ;; object: 0x39c04241 <undefined>
0xffff58243e2c   204  stur x0, [x3, #175]
0xffff58243e30   208  ldr x0, pc+336 (addr 0x0000ffff58243f80)    ;; object: 0x39c04241 <undefined>
0xffff58243e34   212  stur x0, [x3, #183]
0xffff58243e38   216  ldr x0, pc+336 (addr 0x0000ffff58243f88)    ;; object: 0x39c04241 <undefined>
0xffff58243e3c   220  stur x0, [x3, #191]
0xffff58243e40   224  ldr x0, pc+336 (addr 0x0000ffff58243f90)    ;; object: 0x39c04241 <undefined>
0xffff58243e44   228  stur x0, [x3, #199]
0xffff58243e48   232  ldr x0, pc+336 (addr 0x0000ffff58243f98)    ;; object: 0x39c04241 <undefined>
0xffff58243e4c   236  stur x0, [x3, #207]
0xffff58243e50   240  ldr x0, pc+336 (addr 0x0000ffff58243fa0)    ;; object: 0x39c04241 <undefined>
0xffff58243e54   244  stur x0, [x3, #215]
0xffff58243e58   248  ldr x0, pc+336 (addr 0x0000ffff58243fa8)    ;; object: 0x39c04241 <undefined>
0xffff58243e5c   252  stur x0, [x3, #223]
0xffff58243e60   256  ldr x0, pc+336 (addr 0x0000ffff58243fb0)    ;; object: 0x39c04241 <undefined>
0xffff58243e64   260  stur x0, [x3, #231]
0xffff58243e68   264  ldr x0, pc+336 (addr 0x0000ffff58243fb8)    ;; object: 0x39c04241 <undefined>
0xffff58243e6c   268  stur x0, [x3, #239]
0xffff58243e70   272  mov x0, x3
0xffff58243e74   276  ret
0xffff58243e78   280  sub csp, jssp, #0x10 (16)
0xffff58243e7c   284  stp fp, lr, [jssp, #-16]!
0xffff58243e80   288  movz fp, #0xa00000000
0xffff58243e84   292  sub csp, jssp, #0x8 (8)
0xffff58243e88   296  str fp, [jssp, #-8]!
0xffff58243e8c   300  add fp, jssp, #0x8 (8)
0xffff58243e90   304  movz x3, #0x0
0xffff58243e94   308  mov x16, lr
0xffff58243e98   312  ldr x17, pc+296 (addr 0x0000ffff58243fc0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58243e9c   316  blr x17
0xffff58243ea0   320  movz x0, #0xf800000000
0xffff58243ea4   324  movz x10, #0x0
0xffff58243ea8   328  sub csp, jssp, #0x10 (16)
0xffff58243eac   332  stp x10, x0, [jssp, #-16]!
0xffff58243eb0   336  movz x0, #0x2
0xffff58243eb4   340  movz x1, #0x5b88
0xffff58243eb8   344  movk x1, #0xe2, lsl #16
0xffff58243ebc   348  ldr x16, pc+268 (addr 0x0000ffff58243fc8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58243ec0   352  blr x16
0xffff58243ec4   356  str x0, [jssp, #24]
0xffff58243ec8   360  ldr x16, pc+264 (addr 0x0000ffff58243fd0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58243ecc   364  blr x16
0xffff58243ed0   368  ldr lr, [jssp, #16]
0xffff58243ed4   372  ldp xzr, fp, [jssp], #24
0xffff58243ed8   376  b #-0x158 (addr 0xffff58243d80)
0xffff58243edc   380  580007df       constant pool begin (num_const = 62)    ;; constant pool
0xffff58243ee0   384  d63f03e0       constant
0xffff58243ee4   388  d503201f       constant
0xffff58243ee8   392  32b06149       constant
0xffff58243eec   396  00000000       constant
0xffff58243ef0   400  39c04519       constant
0xffff58243ef4   404  00000000       constant
0xffff58243ef8   408  39c04241       constant
0xffff58243efc   412  00000000       constant
0xffff58243f00   416  39c04241       constant
0xffff58243f04   420  00000000       constant
0xffff58243f08   424  39c04241       constant
0xffff58243f0c   428  00000000       constant
0xffff58243f10   432  39c04241       constant
0xffff58243f14   436  00000000       constant
0xffff58243f18   440  39c04241       constant
0xffff58243f1c   444  00000000       constant
0xffff58243f20   448  39c04241       constant
0xffff58243f24   452  00000000       constant
0xffff58243f28   456  39c04241       constant
0xffff58243f2c   460  00000000       constant
0xffff58243f30   464  39c04241       constant
0xffff58243f34   468  00000000       constant
0xffff58243f38   472  39c04241       constant
0xffff58243f3c   476  00000000       constant
0xffff58243f40   480  39c04241       constant
0xffff58243f44   484  00000000       constant
0xffff58243f48   488  39c04241       constant
0xffff58243f4c   492  00000000       constant
0xffff58243f50   496  39c04241       constant
0xffff58243f54   500  00000000       constant
0xffff58243f58   504  39c04241       constant
0xffff58243f5c   508  00000000       constant
0xffff58243f60   512  39c04241       constant
0xffff58243f64   516  00000000       constant
0xffff58243f68   520  39c04241       constant
0xffff58243f6c   524  00000000       constant
0xffff58243f70   528  39c04241       constant
0xffff58243f74   532  00000000       constant
0xffff58243f78   536  39c04241       constant
0xffff58243f7c   540  00000000       constant
0xffff58243f80   544  39c04241       constant
0xffff58243f84   548  00000000       constant
0xffff58243f88   552  39c04241       constant
0xffff58243f8c   556  00000000       constant
0xffff58243f90   560  39c04241       constant
0xffff58243f94   564  00000000       constant
0xffff58243f98   568  39c04241       constant
0xffff58243f9c   572  00000000       constant
0xffff58243fa0   576  39c04241       constant
0xffff58243fa4   580  00000000       constant
0xffff58243fa8   584  39c04241       constant
0xffff58243fac   588  00000000       constant
0xffff58243fb0   592  39c04241       constant
0xffff58243fb4   596  00000000       constant
0xffff58243fb8   600  39c04241       constant
0xffff58243fbc   604  00000000       constant
0xffff58243fc0   608  58206820       constant
0xffff58243fc4   612  0000ffff       constant
0xffff58243fc8   616  58206260       constant
0xffff58243fcc   620  0000ffff       constant
0xffff58243fd0   624  582068e0       constant
0xffff58243fd4   628  0000ffff       constant


Safepoints (size = 21)
0xffff58243ec4   356  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 36)
0xffff58243d80  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58243d98  embedded object  (0x39c04519 <the hole>)
0xffff58243da8  embedded object  (0x39c04241 <undefined>)
0xffff58243db0  embedded object  (0x39c04241 <undefined>)
0xffff58243db8  embedded object  (0x39c04241 <undefined>)
0xffff58243dc0  embedded object  (0x39c04241 <undefined>)
0xffff58243dc8  embedded object  (0x39c04241 <undefined>)
0xffff58243dd0  embedded object  (0x39c04241 <undefined>)
0xffff58243dd8  embedded object  (0x39c04241 <undefined>)
0xffff58243de0  embedded object  (0x39c04241 <undefined>)
0xffff58243de8  embedded object  (0x39c04241 <undefined>)
0xffff58243df0  embedded object  (0x39c04241 <undefined>)
0xffff58243df8  embedded object  (0x39c04241 <undefined>)
0xffff58243e00  embedded object  (0x39c04241 <undefined>)
0xffff58243e08  embedded object  (0x39c04241 <undefined>)
0xffff58243e10  embedded object  (0x39c04241 <undefined>)
0xffff58243e18  embedded object  (0x39c04241 <undefined>)
0xffff58243e20  embedded object  (0x39c04241 <undefined>)
0xffff58243e28  embedded object  (0x39c04241 <undefined>)
0xffff58243e30  embedded object  (0x39c04241 <undefined>)
0xffff58243e38  embedded object  (0x39c04241 <undefined>)
0xffff58243e40  embedded object  (0x39c04241 <undefined>)
0xffff58243e48  embedded object  (0x39c04241 <undefined>)
0xffff58243e50  embedded object  (0x39c04241 <undefined>)
0xffff58243e58  embedded object  (0x39c04241 <undefined>)
0xffff58243e60  embedded object  (0x39c04241 <undefined>)
0xffff58243e68  embedded object  (0x39c04241 <undefined>)
0xffff58243e98  code target (STUB)  (0xffff58206820)
0xffff58243ebc  code target (STUB)  (0xffff58206260)
0xffff58243ec8  code target (STUB)  (0xffff582068e0)
0xffff58243edc  constant pool (size 252)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58245980     0  ldur x0, [x1, #7]
0xffff58245984     4  movz x16, #0x187
0xffff58245988     8  ldr x0, [x0, x16]
0xffff5824598c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58245a00     0  ldur x0, [x1, #7]
0xffff58245a04     4  movz x16, #0x18f
0xffff58245a08     8  ldr x0, [x0, x16]
0xffff58245a0c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58245a80     0  ldur x0, [x1, #7]
0xffff58245a84     4  movz x16, #0x197
0xffff58245a88     8  ldr x0, [x0, x16]
0xffff58245a8c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58245b00     0  ldur x0, [x1, #7]
0xffff58245b04     4  movz x16, #0x1a7
0xffff58245b08     8  ldr x0, [x0, x16]
0xffff58245b0c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff58245b80     0  sub csp, jssp, #0x8 (8)
0xffff58245b84     4  str x3, [jssp, #-8]!
0xffff58245b88     8  sub csp, jssp, #0x8 (8)
0xffff58245b8c    12  str x4, [jssp, #-8]!
0xffff58245b90    16  ldr x3, pc+88 (addr 0x0000ffff58245be8)    ;; object: 0x39c5b0f1 Cell for 0
0xffff58245b94    20  ldur x3, [x3, #7]
0xffff58245b98    24  cmp x3, #0x0 (0)
0xffff58245b9c    28  b.ne #+0x30 (addr 0xffff58245bcc)
0xffff58245ba0    32  tbz w0, #0, #+0x2c (addr 0xffff58245bcc)
0xffff58245ba4    36  ldr x5, pc+76 (addr 0x0000ffff58245bf0)    ;; object: 0x39c57a99 WeakCell for 0x32b0b581 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58245ba8    40  ldur x5, [x5, #7]
0xffff58245bac    44  tbz w5, #0, #+0x20 (addr 0xffff58245bcc)
0xffff58245bb0    48  ldursw x4, [x5, #15]
0xffff58245bb4    52  tbnz w4, #23, #+0x18 (addr 0xffff58245bcc)
0xffff58245bb8    56  ldr x4, [jssp], #8
0xffff58245bbc    60  ldr x3, [jssp], #8
0xffff58245bc0    64  ldr x2, pc+56 (addr 0x0000ffff58245bf8)    ;; object: 0x39c05209 <String[4]: next>
0xffff58245bc4    68  ldr x16, pc+60 (addr 0x0000ffff58245c00)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff58245bc8    72  br x16
0xffff58245bcc    76  ldr x2, pc+60 (addr 0x0000ffff58245c08)    ;; object: 0x39c05209 <String[4]: next>
0xffff58245bd0    80  ldr x4, [jssp], #8
0xffff58245bd4    84  ldr x3, [jssp], #8
0xffff58245bd8    88  ldr x16, pc+56 (addr 0x0000ffff58245c10)    ;; code: BUILTIN
0xffff58245bdc    92  br x16
0xffff58245be0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff58245be4   100  d63f03e0       constant
0xffff58245be8   104  39c5b0f1       constant
0xffff58245bec   108  00000000       constant
0xffff58245bf0   112  39c57a99       constant
0xffff58245bf4   116  00000000       constant
0xffff58245bf8   120  39c05209       constant
0xffff58245bfc   124  00000000       constant
0xffff58245c00   128  58238860       constant
0xffff58245c04   132  0000ffff       constant
0xffff58245c08   136  39c05209       constant
0xffff58245c0c   140  00000000       constant
0xffff58245c10   144  58222420       constant
0xffff58245c14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff58245b90  embedded object  (0x39c5b0f1 Cell for 0)
0xffff58245ba4  embedded object  (0x39c57a99 WeakCell for 0x32b0b581 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58245bc0  embedded object  (0x39c05209 <String[4]: next>)
0xffff58245bc4  code target (HANDLER)  (0xffff58238860)
0xffff58245bcc  embedded object  (0x39c05209 <String[4]: next>)
0xffff58245bd8  code target (BUILTIN)  (0xffff58222420)
0xffff58245be0  constant pool (size 56)

kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 461)
0xffff58245fc0     0  movz x2, #0x92c0
0xffff58245fc4     4  movk x2, #0x16e7, lsl #16
0xffff58245fc8     8  ldp x3, x0, [x2]
0xffff58245fcc    12  adds x16, x3, #0x98 (152)
0xffff58245fd0    16  ccmp x16, x0, #nzCv, lo
0xffff58245fd4    20  b.hi #+0xa4 (addr 0xffff58246078)
0xffff58245fd8    24  str x16, [x2]
0xffff58245fdc    28  orr x3, x3, #0x1
0xffff58245fe0    32  ldr x0, pc+264 (addr 0x0000ffff582460e8)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58245fe4    36  stur x0, [x3, #-1]
0xffff58245fe8    40  movz x0, #0x1100000000
0xffff58245fec    44  stur x0, [x3, #7]
0xffff58245ff0    48  stur x1, [x3, #15]
0xffff58245ff4    52  stur cp, [x3, #23]
0xffff58245ff8    56  ldr x0, pc+248 (addr 0x0000ffff582460f0)    ;; object: 0x39c04519 <the hole>
0xffff58245ffc    60  stur x0, [x3, #31]
0xffff58246000    64  ldur x0, [cp, #39]
0xffff58246004    68  stur x0, [x3, #39]
0xffff58246008    72  ldr x0, pc+240 (addr 0x0000ffff582460f8)    ;; object: 0x39c04241 <undefined>
0xffff5824600c    76  stur x0, [x3, #47]
0xffff58246010    80  ldr x0, pc+240 (addr 0x0000ffff58246100)    ;; object: 0x39c04241 <undefined>
0xffff58246014    84  stur x0, [x3, #55]
0xffff58246018    88  ldr x0, pc+240 (addr 0x0000ffff58246108)    ;; object: 0x39c04241 <undefined>
0xffff5824601c    92  stur x0, [x3, #63]
0xffff58246020    96  ldr x0, pc+240 (addr 0x0000ffff58246110)    ;; object: 0x39c04241 <undefined>
0xffff58246024   100  stur x0, [x3, #71]
0xffff58246028   104  ldr x0, pc+240 (addr 0x0000ffff58246118)    ;; object: 0x39c04241 <undefined>
0xffff5824602c   108  stur x0, [x3, #79]
0xffff58246030   112  ldr x0, pc+240 (addr 0x0000ffff58246120)    ;; object: 0x39c04241 <undefined>
0xffff58246034   116  stur x0, [x3, #87]
0xffff58246038   120  ldr x0, pc+240 (addr 0x0000ffff58246128)    ;; object: 0x39c04241 <undefined>
0xffff5824603c   124  stur x0, [x3, #95]
0xffff58246040   128  ldr x0, pc+240 (addr 0x0000ffff58246130)    ;; object: 0x39c04241 <undefined>
0xffff58246044   132  stur x0, [x3, #103]
0xffff58246048   136  ldr x0, pc+240 (addr 0x0000ffff58246138)    ;; object: 0x39c04241 <undefined>
0xffff5824604c   140  stur x0, [x3, #111]
0xffff58246050   144  ldr x0, pc+240 (addr 0x0000ffff58246140)    ;; object: 0x39c04241 <undefined>
0xffff58246054   148  stur x0, [x3, #119]
0xffff58246058   152  ldr x0, pc+240 (addr 0x0000ffff58246148)    ;; object: 0x39c04241 <undefined>
0xffff5824605c   156  stur x0, [x3, #127]
0xffff58246060   160  ldr x0, pc+240 (addr 0x0000ffff58246150)    ;; object: 0x39c04241 <undefined>
0xffff58246064   164  stur x0, [x3, #135]
0xffff58246068   168  ldr x0, pc+240 (addr 0x0000ffff58246158)    ;; object: 0x39c04241 <undefined>
0xffff5824606c   172  stur x0, [x3, #143]
0xffff58246070   176  mov x0, x3
0xffff58246074   180  ret
0xffff58246078   184  sub csp, jssp, #0x10 (16)
0xffff5824607c   188  stp fp, lr, [jssp, #-16]!
0xffff58246080   192  movz fp, #0xa00000000
0xffff58246084   196  sub csp, jssp, #0x8 (8)
0xffff58246088   200  str fp, [jssp, #-8]!
0xffff5824608c   204  add fp, jssp, #0x8 (8)
0xffff58246090   208  movz x3, #0x0
0xffff58246094   212  mov x16, lr
0xffff58246098   216  ldr x17, pc+200 (addr 0x0000ffff58246160)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5824609c   220  blr x17
0xffff582460a0   224  movz x0, #0x9800000000
0xffff582460a4   228  movz x10, #0x0
0xffff582460a8   232  sub csp, jssp, #0x10 (16)
0xffff582460ac   236  stp x10, x0, [jssp, #-16]!
0xffff582460b0   240  movz x0, #0x2
0xffff582460b4   244  movz x1, #0x5b88
0xffff582460b8   248  movk x1, #0xe2, lsl #16
0xffff582460bc   252  ldr x16, pc+172 (addr 0x0000ffff58246168)    ;; code: STUB, CEntryStub, minor: 5
0xffff582460c0   256  blr x16
0xffff582460c4   260  str x0, [jssp, #24]
0xffff582460c8   264  ldr x16, pc+168 (addr 0x0000ffff58246170)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582460cc   268  blr x16
0xffff582460d0   272  ldr lr, [jssp, #16]
0xffff582460d4   276  ldp xzr, fp, [jssp], #24
0xffff582460d8   280  b #-0xf8 (addr 0xffff58245fe0)
0xffff582460dc   284  580004df       constant pool begin (num_const = 38)    ;; constant pool
0xffff582460e0   288  d63f03e0       constant
0xffff582460e4   292  d503201f       constant
0xffff582460e8   296  32b06149       constant
0xffff582460ec   300  00000000       constant
0xffff582460f0   304  39c04519       constant
0xffff582460f4   308  00000000       constant
0xffff582460f8   312  39c04241       constant
0xffff582460fc   316  00000000       constant
0xffff58246100   320  39c04241       constant
0xffff58246104   324  00000000       constant
0xffff58246108   328  39c04241       constant
0xffff5824610c   332  00000000       constant
0xffff58246110   336  39c04241       constant
0xffff58246114   340  00000000       constant
0xffff58246118   344  39c04241       constant
0xffff5824611c   348  00000000       constant
0xffff58246120   352  39c04241       constant
0xffff58246124   356  00000000       constant
0xffff58246128   360  39c04241       constant
0xffff5824612c   364  00000000       constant
0xffff58246130   368  39c04241       constant
0xffff58246134   372  00000000       constant
0xffff58246138   376  39c04241       constant
0xffff5824613c   380  00000000       constant
0xffff58246140   384  39c04241       constant
0xffff58246144   388  00000000       constant
0xffff58246148   392  39c04241       constant
0xffff5824614c   396  00000000       constant
0xffff58246150   400  39c04241       constant
0xffff58246154   404  00000000       constant
0xffff58246158   408  39c04241       constant
0xffff5824615c   412  00000000       constant
0xffff58246160   416  58206820       constant
0xffff58246164   420  0000ffff       constant
0xffff58246168   424  58206260       constant
0xffff5824616c   428  0000ffff       constant
0xffff58246170   432  582068e0       constant
0xffff58246174   436  0000ffff       constant


Safepoints (size = 21)
0xffff582460c4   260  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 24)
0xffff58245fe0  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58245ff8  embedded object  (0x39c04519 <the hole>)
0xffff58246008  embedded object  (0x39c04241 <undefined>)
0xffff58246010  embedded object  (0x39c04241 <undefined>)
0xffff58246018  embedded object  (0x39c04241 <undefined>)
0xffff58246020  embedded object  (0x39c04241 <undefined>)
0xffff58246028  embedded object  (0x39c04241 <undefined>)
0xffff58246030  embedded object  (0x39c04241 <undefined>)
0xffff58246038  embedded object  (0x39c04241 <undefined>)
0xffff58246040  embedded object  (0x39c04241 <undefined>)
0xffff58246048  embedded object  (0x39c04241 <undefined>)
0xffff58246050  embedded object  (0x39c04241 <undefined>)
0xffff58246058  embedded object  (0x39c04241 <undefined>)
0xffff58246060  embedded object  (0x39c04241 <undefined>)
0xffff58246068  embedded object  (0x39c04241 <undefined>)
0xffff58246098  code target (STUB)  (0xffff58206820)
0xffff582460bc  code target (STUB)  (0xffff58206260)
0xffff582460c8  code target (STUB)  (0xffff582068e0)
0xffff582460dc  constant pool (size 156)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 381)
0xffff58246b40     0  movz x2, #0x92c0
0xffff58246b44     4  movk x2, #0x16e7, lsl #16
0xffff58246b48     8  ldp x3, x0, [x2]
0xffff58246b4c    12  adds x16, x3, #0x70 (112)
0xffff58246b50    16  ccmp x16, x0, #nzCv, lo
0xffff58246b54    20  b.hi #+0x7c (addr 0xffff58246bd0)
0xffff58246b58    24  str x16, [x2]
0xffff58246b5c    28  orr x3, x3, #0x1
0xffff58246b60    32  ldr x0, pc+224 (addr 0x0000ffff58246c40)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58246b64    36  stur x0, [x3, #-1]
0xffff58246b68    40  movz x0, #0xc00000000
0xffff58246b6c    44  stur x0, [x3, #7]
0xffff58246b70    48  stur x1, [x3, #15]
0xffff58246b74    52  stur cp, [x3, #23]
0xffff58246b78    56  ldr x0, pc+208 (addr 0x0000ffff58246c48)    ;; object: 0x39c04519 <the hole>
0xffff58246b7c    60  stur x0, [x3, #31]
0xffff58246b80    64  ldur x0, [cp, #39]
0xffff58246b84    68  stur x0, [x3, #39]
0xffff58246b88    72  ldr x0, pc+200 (addr 0x0000ffff58246c50)    ;; object: 0x39c04241 <undefined>
0xffff58246b8c    76  stur x0, [x3, #47]
0xffff58246b90    80  ldr x0, pc+200 (addr 0x0000ffff58246c58)    ;; object: 0x39c04241 <undefined>
0xffff58246b94    84  stur x0, [x3, #55]
0xffff58246b98    88  ldr x0, pc+200 (addr 0x0000ffff58246c60)    ;; object: 0x39c04241 <undefined>
0xffff58246b9c    92  stur x0, [x3, #63]
0xffff58246ba0    96  ldr x0, pc+200 (addr 0x0000ffff58246c68)    ;; object: 0x39c04241 <undefined>
0xffff58246ba4   100  stur x0, [x3, #71]
0xffff58246ba8   104  ldr x0, pc+200 (addr 0x0000ffff58246c70)    ;; object: 0x39c04241 <undefined>
0xffff58246bac   108  stur x0, [x3, #79]
0xffff58246bb0   112  ldr x0, pc+200 (addr 0x0000ffff58246c78)    ;; object: 0x39c04241 <undefined>
0xffff58246bb4   116  stur x0, [x3, #87]
0xffff58246bb8   120  ldr x0, pc+200 (addr 0x0000ffff58246c80)    ;; object: 0x39c04241 <undefined>
0xffff58246bbc   124  stur x0, [x3, #95]
0xffff58246bc0   128  ldr x0, pc+200 (addr 0x0000ffff58246c88)    ;; object: 0x39c04241 <undefined>
0xffff58246bc4   132  stur x0, [x3, #103]
0xffff58246bc8   136  mov x0, x3
0xffff58246bcc   140  ret
0xffff58246bd0   144  sub csp, jssp, #0x10 (16)
0xffff58246bd4   148  stp fp, lr, [jssp, #-16]!
0xffff58246bd8   152  movz fp, #0xa00000000
0xffff58246bdc   156  sub csp, jssp, #0x8 (8)
0xffff58246be0   160  str fp, [jssp, #-8]!
0xffff58246be4   164  add fp, jssp, #0x8 (8)
0xffff58246be8   168  movz x3, #0x0
0xffff58246bec   172  mov x16, lr
0xffff58246bf0   176  ldr x17, pc+160 (addr 0x0000ffff58246c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58246bf4   180  blr x17
0xffff58246bf8   184  movz x0, #0x7000000000
0xffff58246bfc   188  movz x10, #0x0
0xffff58246c00   192  sub csp, jssp, #0x10 (16)
0xffff58246c04   196  stp x10, x0, [jssp, #-16]!
0xffff58246c08   200  movz x0, #0x2
0xffff58246c0c   204  movz x1, #0x5b88
0xffff58246c10   208  movk x1, #0xe2, lsl #16
0xffff58246c14   212  ldr x16, pc+132 (addr 0x0000ffff58246c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff58246c18   216  blr x16
0xffff58246c1c   220  str x0, [jssp, #24]
0xffff58246c20   224  ldr x16, pc+128 (addr 0x0000ffff58246ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58246c24   228  blr x16
0xffff58246c28   232  ldr lr, [jssp, #16]
0xffff58246c2c   236  ldp xzr, fp, [jssp], #24
0xffff58246c30   240  b #-0xd0 (addr 0xffff58246b60)
0xffff58246c34   244  5800039f       constant pool begin (num_const = 28)    ;; constant pool
0xffff58246c38   248  d63f03e0       constant
0xffff58246c3c   252  d503201f       constant
0xffff58246c40   256  32b06149       constant
0xffff58246c44   260  00000000       constant
0xffff58246c48   264  39c04519       constant
0xffff58246c4c   268  00000000       constant
0xffff58246c50   272  39c04241       constant
0xffff58246c54   276  00000000       constant
0xffff58246c58   280  39c04241       constant
0xffff58246c5c   284  00000000       constant
0xffff58246c60   288  39c04241       constant
0xffff58246c64   292  00000000       constant
0xffff58246c68   296  39c04241       constant
0xffff58246c6c   300  00000000       constant
0xffff58246c70   304  39c04241       constant
0xffff58246c74   308  00000000       constant
0xffff58246c78   312  39c04241       constant
0xffff58246c7c   316  00000000       constant
0xffff58246c80   320  39c04241       constant
0xffff58246c84   324  00000000       constant
0xffff58246c88   328  39c04241       constant
0xffff58246c8c   332  00000000       constant
0xffff58246c90   336  58206820       constant
0xffff58246c94   340  0000ffff       constant
0xffff58246c98   344  58206260       constant
0xffff58246c9c   348  0000ffff       constant
0xffff58246ca0   352  582068e0       constant
0xffff58246ca4   356  0000ffff       constant


Safepoints (size = 21)
0xffff58246c1c   220  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 19)
0xffff58246b60  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58246b78  embedded object  (0x39c04519 <the hole>)
0xffff58246b88  embedded object  (0x39c04241 <undefined>)
0xffff58246b90  embedded object  (0x39c04241 <undefined>)
0xffff58246b98  embedded object  (0x39c04241 <undefined>)
0xffff58246ba0  embedded object  (0x39c04241 <undefined>)
0xffff58246ba8  embedded object  (0x39c04241 <undefined>)
0xffff58246bb0  embedded object  (0x39c04241 <undefined>)
0xffff58246bb8  embedded object  (0x39c04241 <undefined>)
0xffff58246bc0  embedded object  (0x39c04241 <undefined>)
0xffff58246bf0  code target (STUB)  (0xffff58206820)
0xffff58246c14  code target (STUB)  (0xffff58206260)
0xffff58246c20  code target (STUB)  (0xffff582068e0)
0xffff58246c34  constant pool (size 116)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327685
name = CallICStub(args(5), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff58248400     0  add x4, x2, x3, asr #29
0xffff58248404     4  ldur x4, [x4, #15]
0xffff58248408     8  ldur x5, [x4, #7]
0xffff5824840c    12  cmp x5, x1
0xffff58248410    16  b.ne #+0x2c (addr 0xffff5824843c)
0xffff58248414    20  tbz w1, #0, #+0x28 (addr 0xffff5824843c)
0xffff58248418    24  add x2, x2, x3, asr #29
0xffff5824841c    28  add x2, x2, #0x18 (24)
0xffff58248420    32  ldur x3, [x2, #-1]
0xffff58248424    36  movz x16, #0x200000000
0xffff58248428    40  add x3, x3, x16
0xffff5824842c    44  stur x3, [x2, #-1]
0xffff58248430    48  movz x0, #0x5
0xffff58248434    52  ldr x16, pc+372 (addr 0x0000ffff582485a8)    ;; code: BUILTIN
0xffff58248438    56  br x16
0xffff5824843c    60  ldr x16, [x26, #2400]
0xffff58248440    64  cmp x4, x16
0xffff58248444    68  b.eq #+0x78 (addr 0xffff582484bc)
0xffff58248448    72  ldur x5, [x4, #-1]
0xffff5824844c    76  ldr x16, [x26, #2736]
0xffff58248450    80  cmp x5, x16
0xffff58248454    84  b.ne #+0x40 (addr 0xffff58248494)
0xffff58248458    88  ldur x5, [cp, #39]
0xffff5824845c    92  ldur x5, [x5, #95]
0xffff58248460    96  cmp x1, x5
0xffff58248464   100  b.ne #+0xec (addr 0xffff58248550)
0xffff58248468   104  movz x0, #0x5
0xffff5824846c   108  add x2, x2, x3, asr #29
0xffff58248470   112  add x2, x2, #0x18 (24)
0xffff58248474   116  ldur x3, [x2, #-1]
0xffff58248478   120  movz x16, #0x200000000
0xffff5824847c   124  add x3, x3, x16
0xffff58248480   128  stur x3, [x2, #-1]
0xffff58248484   132  mov x2, x4
0xffff58248488   136  mov x3, x1
0xffff5824848c   140  ldr x16, pc+292 (addr 0x0000ffff582485b0)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff58248490   144  br x16
0xffff58248494   148  ldr x16, [x26, #2568]
0xffff58248498   152  cmp x4, x16
0xffff5824849c   156  b.eq #+0xb4 (addr 0xffff58248550)
0xffff582484a0   160  ldur x5, [x4, #-1]
0xffff582484a4   164  ldrb w5, [x5, #11]
0xffff582484a8   168  cmp x5, #0xc9 (201)
0xffff582484ac   172  b.ne #+0xa4 (addr 0xffff58248550)
0xffff582484b0   176  add x4, x2, x3, asr #29
0xffff582484b4   180  ldr x5, [x26, #2400]
0xffff582484b8   184  stur x5, [x4, #15]
0xffff582484bc   188  movz x0, #0x5
0xffff582484c0   192  ldr x16, pc+248 (addr 0x0000ffff582485b8)    ;; code: BUILTIN
0xffff582484c4   196  br x16
0xffff582484c8   200  tbz w1, #0, #+0x88 (addr 0xffff58248550)
0xffff582484cc   204  ldur x5, [x1, #-1]
0xffff582484d0   208  ldrb w5, [x5, #11]
0xffff582484d4   212  cmp x5, #0xc9 (201)
0xffff582484d8   216  b.ne #+0x78 (addr 0xffff58248550)
0xffff582484dc   220  ldur x5, [cp, #39]
0xffff582484e0   224  ldur x5, [x5, #95]
0xffff582484e4   228  cmp x1, x5
0xffff582484e8   232  b.eq #+0x68 (addr 0xffff58248550)
0xffff582484ec   236  ldur x4, [x1, #39]
0xffff582484f0   240  ldur x4, [x4, #39]
0xffff582484f4   244  ldur x5, [cp, #39]
0xffff582484f8   248  cmp x4, x5
0xffff582484fc   252  b.ne #+0x54 (addr 0xffff58248550)
0xffff58248500   256  movz x5, #0x200000000
0xffff58248504   260  adds x4, x2, x3, asr #29
0xffff58248508   264  stur x5, [x4, #23]
0xffff5824850c   268  movz x16, #0xc00000000
0xffff58248510   272  sub csp, jssp, #0x10 (16)
0xffff58248514   276  stp fp, lr, [jssp, #-16]!
0xffff58248518   280  sub csp, jssp, #0x10 (16)
0xffff5824851c   284  str x16, [jssp, #-8]!
0xffff58248520   288  ldr x17, pc+160 (addr 0x0000ffff582485c0)    ;; object: 0xffff582483a1 <Code: CALL_IC>
0xffff58248524   292  sub csp, jssp, #0x10 (16)
0xffff58248528   296  str x17, [jssp, #-8]!
0xffff5824852c   300  add fp, jssp, #0x10 (16)
0xffff58248530   304  sub csp, jssp, #0x8 (8)
0xffff58248534   308  str x1, [jssp, #-8]!
0xffff58248538   312  ldr x16, pc+144 (addr 0x0000ffff582485c8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff5824853c   316  blr x16
0xffff58248540   320  ldr x1, [jssp], #8
0xffff58248544   324  mov jssp, fp
0xffff58248548   328  ldp fp, lr, [jssp], #16
0xffff5824854c   332  b #-0x11c (addr 0xffff58248430)
0xffff58248550   336  movz x16, #0xc00000000
0xffff58248554   340  sub csp, jssp, #0x10 (16)
0xffff58248558   344  stp fp, lr, [jssp, #-16]!
0xffff5824855c   348  sub csp, jssp, #0x10 (16)
0xffff58248560   352  str x16, [jssp, #-8]!
0xffff58248564   356  ldr x17, pc+108 (addr 0x0000ffff582485d0)    ;; object: 0xffff582483a1 <Code: CALL_IC>
0xffff58248568   360  sub csp, jssp, #0x10 (16)
0xffff5824856c   364  str x17, [jssp, #-8]!
0xffff58248570   368  add fp, jssp, #0x10 (16)
0xffff58248574   372  sub csp, jssp, #0x18 (24)
0xffff58248578   376  stp x3, x2, [jssp, #-24]!
0xffff5824857c   380  str x1, [jssp, #16]
0xffff58248580   384  movz x0, #0x3
0xffff58248584   388  ldr x1, pc+84 (addr 0x0000ffff582485d8)    ;; external reference (Runtime::CallIC_Miss)
0xffff58248588   392  ldr x16, pc+88 (addr 0x0000ffff582485e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5824858c   396  blr x16
0xffff58248590   400  mov x1, x0
0xffff58248594   404  mov jssp, fp
0xffff58248598   408  ldp fp, lr, [jssp], #16
0xffff5824859c   412  b #-0xe0 (addr 0xffff582484bc)
0xffff582485a0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff582485a4   420  d63f03e0       constant
0xffff582485a8   424  5821e600       constant
0xffff582485ac   428  0000ffff       constant
0xffff582485b0   432  58233b00       constant
0xffff582485b4   436  0000ffff       constant
0xffff582485b8   440  5821f6c0       constant
0xffff582485bc   444  0000ffff       constant
0xffff582485c0   448  582483a1       constant
0xffff582485c4   452  0000ffff       constant
0xffff582485c8   456  5820ddc0       constant
0xffff582485cc   460  0000ffff       constant
0xffff582485d0   464  582483a1       constant
0xffff582485d4   468  0000ffff       constant
0xffff582485d8   472  00c86928       constant
0xffff582485dc   476  00000000       constant
0xffff582485e0   480  58206060       constant
0xffff582485e4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff58248434  code target (BUILTIN)  (0xffff5821e600)
0xffff5824848c  code target (STUB)  (0xffff58233b00)
0xffff582484c0  code target (BUILTIN)  (0xffff5821f6c0)
0xffff58248520  embedded object  (0xffff582483a1 <Code: CALL_IC>)
0xffff58248538  code target (STUB)  (0xffff5820ddc0)
0xffff58248564  embedded object  (0xffff582483a1 <Code: CALL_IC>)
0xffff58248584  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58248588  code target (STUB)  (0xffff58206060)
0xffff582485a0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327685
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff58248660     0  ldur x2, [fp, #-16]
0xffff58248664     4  ldur x2, [x2, #31]
0xffff58248668     8  ldur x2, [x2, #87]
0xffff5824866c    12  ldr x16, pc+20 (addr 0x0000ffff58248680)    ;; code: CALL_IC, GENERIC
0xffff58248670    16  br x16
0xffff58248674    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58248678    24  d63f03e0       constant
0xffff5824867c    28  d503201f       constant
0xffff58248680    32  58248400       constant
0xffff58248684    36  0000ffff       constant


RelocInfo (size = 7)
0xffff5824866c  code target (CALL_IC)  (0xffff58248400)
0xffff58248674  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = RECEIVER*RECEIVER -> KNOWN_RECEIVER
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 192)
0xffff5824ad80     0  and x16, x0, x1
0xffff5824ad84     4  tbz w16, #0, #+0x2c (addr 0xffff5824adb0)
0xffff5824ad88     8  ldr x12, pc+152 (addr 0x0000ffff5824ae20)    ;; object: 0x39c747c1 WeakCell for 0x32b0c131 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5824ad8c    12  ldur x12, [x12, #7]
0xffff5824ad90    16  ldur x10, [x0, #-1]
0xffff5824ad94    20  ldur x11, [x1, #-1]
0xffff5824ad98    24  cmp x10, x12
0xffff5824ad9c    28  b.ne #+0x14 (addr 0xffff5824adb0)
0xffff5824ada0    32  cmp x11, x12
0xffff5824ada4    36  b.ne #+0xc (addr 0xffff5824adb0)
0xffff5824ada8    40  sub x0, x0, x1
0xffff5824adac    44  ret
0xffff5824adb0    48  movz x16, #0xc00000000
0xffff5824adb4    52  sub csp, jssp, #0x10 (16)
0xffff5824adb8    56  stp fp, lr, [jssp, #-16]!
0xffff5824adbc    60  sub csp, jssp, #0x10 (16)
0xffff5824adc0    64  str x16, [jssp, #-8]!
0xffff5824adc4    68  ldr x17, pc+100 (addr 0x0000ffff5824ae28)    ;; object: 0xffff5824ad21 <Code: COMPARE_IC>
0xffff5824adc8    72  sub csp, jssp, #0x10 (16)
0xffff5824adcc    76  str x17, [jssp, #-8]!
0xffff5824add0    80  add fp, jssp, #0x10 (16)
0xffff5824add4    84  sub csp, jssp, #0x18 (24)
0xffff5824add8    88  stp lr, x0, [jssp, #-24]!
0xffff5824addc    92  str x1, [jssp, #16]
0xffff5824ade0    96  movz x10, #0x2d00000000
0xffff5824ade4   100  sub csp, jssp, #0x18 (24)
0xffff5824ade8   104  stp x10, x0, [jssp, #-24]!
0xffff5824adec   108  str x1, [jssp, #16]
0xffff5824adf0   112  movz x0, #0x3
0xffff5824adf4   116  ldr x1, pc+60 (addr 0x0000ffff5824ae30)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5824adf8   120  ldr x16, pc+64 (addr 0x0000ffff5824ae38)    ;; code: STUB, CEntryStub, minor: 4
0xffff5824adfc   124  blr x16
0xffff5824ae00   128  add x11, x0, #0x5f (95)
0xffff5824ae04   132  ldr x1, [jssp, #16]
0xffff5824ae08   136  ldp lr, x0, [jssp], #24
0xffff5824ae0c   140  mov jssp, fp
0xffff5824ae10   144  ldp fp, lr, [jssp], #16
0xffff5824ae14   148  br x11
0xffff5824ae18   152  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5824ae1c   156  d63f03e0       constant
0xffff5824ae20   160  39c747c1       constant
0xffff5824ae24   164  00000000       constant
0xffff5824ae28   168  5824ad21       constant
0xffff5824ae2c   172  0000ffff       constant
0xffff5824ae30   176  00c8a980       constant
0xffff5824ae34   180  00000000       constant
0xffff5824ae38   184  58206060       constant
0xffff5824ae3c   188  0000ffff       constant


RelocInfo (size = 11)
0xffff5824ad88  embedded object  (0x39c747c1 WeakCell for 0x32b0c131 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5824adc4  embedded object  (0xffff5824ad21 <Code: COMPARE_IC>)
0xffff5824adf4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5824adf8  code target (STUB)  (0xffff58206060)
0xffff5824ae18  constant pool (size 40)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff5824aea0     0  movz x16, #0xc00000000
0xffff5824aea4     4  sub csp, jssp, #0x10 (16)
0xffff5824aea8     8  stp fp, lr, [jssp, #-16]!
0xffff5824aeac    12  sub csp, jssp, #0x10 (16)
0xffff5824aeb0    16  str x16, [jssp, #-8]!
0xffff5824aeb4    20  ldr x17, pc+92 (addr 0x0000ffff5824af10)    ;; object: 0xffff5824ae41 <Code: COMPARE_IC>
0xffff5824aeb8    24  sub csp, jssp, #0x10 (16)
0xffff5824aebc    28  str x17, [jssp, #-8]!
0xffff5824aec0    32  add fp, jssp, #0x10 (16)
0xffff5824aec4    36  sub csp, jssp, #0x18 (24)
0xffff5824aec8    40  stp lr, x0, [jssp, #-24]!
0xffff5824aecc    44  str x1, [jssp, #16]
0xffff5824aed0    48  movz x10, #0x2f00000000
0xffff5824aed4    52  sub csp, jssp, #0x18 (24)
0xffff5824aed8    56  stp x10, x0, [jssp, #-24]!
0xffff5824aedc    60  str x1, [jssp, #16]
0xffff5824aee0    64  movz x0, #0x3
0xffff5824aee4    68  ldr x1, pc+52 (addr 0x0000ffff5824af18)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5824aee8    72  ldr x16, pc+56 (addr 0x0000ffff5824af20)    ;; code: STUB, CEntryStub, minor: 4
0xffff5824aeec    76  blr x16
0xffff5824aef0    80  add x11, x0, #0x5f (95)
0xffff5824aef4    84  ldr x1, [jssp, #16]
0xffff5824aef8    88  ldp lr, x0, [jssp], #24
0xffff5824aefc    92  mov jssp, fp
0xffff5824af00    96  ldp fp, lr, [jssp], #16
0xffff5824af04   100  br x11
0xffff5824af08   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5824af0c   108  d63f03e0       constant
0xffff5824af10   112  5824ae41       constant
0xffff5824af14   116  0000ffff       constant
0xffff5824af18   120  00c8a980       constant
0xffff5824af1c   124  00000000       constant
0xffff5824af20   128  58206060       constant
0xffff5824af24   132  0000ffff       constant


RelocInfo (size = 10)
0xffff5824aeb4  embedded object  (0xffff5824ae41 <Code: COMPARE_IC>)
0xffff5824aee4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5824aee8  code target (STUB)  (0xffff58206060)
0xffff5824af08  constant pool (size 32)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff5824b6c0     0  sub csp, jssp, #0x10 (16)
0xffff5824b6c4     4  stp x2, x1, [jssp, #-16]!
0xffff5824b6c8     8  ldur x7, [x0, #7]
0xffff5824b6cc    12  ubfx x1, x7, #52, #11
0xffff5824b6d0    16  cmp x1, #0x453 (1107)
0xffff5824b6d4    20  csel x7, xzr, x7, ge
0xffff5824b6d8    24  b.ge #+0x1c (addr 0xffff5824b6f4)
0xffff5824b6dc    28  ubfx x2, x7, #0, #52
0xffff5824b6e0    32  orr x2, x2, #0x10000000000000
0xffff5824b6e4    36  tst x7, #0x8000000000000000
0xffff5824b6e8    40  cneg x2, x2, ne
0xffff5824b6ec    44  sub x1, x1, #0x433 (1075)
0xffff5824b6f0    48  lsl x7, x2, x1
0xffff5824b6f4    52  ldp x2, x1, [jssp], #16
0xffff5824b6f8    56  ret


RelocInfo (size = 0)


kind = STUB
major_key = BinaryOpWithAllocationSiteStub
name = BinaryOpWithAllocationSiteStub(ADD_CreateAllocationMementos:String*Smi->String)
compiler = crankshaft
Instructions (size = 1377)
0xffff5824b760     0  movz x16, #0xa00000000
0xffff5824b764     4  sub csp, jssp, #0x10 (16)
0xffff5824b768     8  stp fp, lr, [jssp, #-16]!
0xffff5824b76c    12  mov fp, jssp
0xffff5824b770    16  sub csp, jssp, #0x28 (40)
0xffff5824b774    20  sub jssp, jssp, #0x28 (40)
0xffff5824b778    24  stur x16, [fp, #-8]
0xffff5824b77c    28  str x2, [jssp, #24]
0xffff5824b780    32  str x1, [jssp, #16]
0xffff5824b784    36  str x0, [jssp, #8]
0xffff5824b788    40  str cp, [jssp]
0xffff5824b78c    44  mov x3, cp
0xffff5824b790    48  tbz w1, #0, #+0x4a8 (addr 0xffff5824bc38)
0xffff5824b794    52  ldur x4, [x1, #-1]
0xffff5824b798    56  ldrb w4, [x4, #11]
0xffff5824b79c    60  tbnz w4, #7, #+0x4a4 (addr 0xffff5824bc40)
0xffff5824b7a0    64  ldr x4, [x26, #368]
0xffff5824b7a4    68  ldur w5, [x4, #11]
0xffff5824b7a8    72  asr w5, w5, #1
0xffff5824b7ac    76  sub w5, w5, #0x1 (1)
0xffff5824b7b0    80  tbz w0, #0, #+0xc (addr 0xffff5824b7bc)
0xffff5824b7b4    84  ldr x16, pc+1012 (addr 0x0000ffff5824bba8)    ;; lazy deoptimization bailout 2
0xffff5824b7b8    88  blr x16
0xffff5824b7bc    92  tbnz w0, #0, #+0x2f4 (addr 0xffff5824bab0)
0xffff5824b7c0    96  asr x7, x0, #32
0xffff5824b7c4   100  and w5, w5, w7
0xffff5824b7c8   104  lsl w5, w5, #1
0xffff5824b7cc   108  add x6, x4, #0xf (15)
0xffff5824b7d0   112  ldr x7, [x6, w5, sxtw #3]
0xffff5824b7d4   116  cmp x0, x7
0xffff5824b7d8   120  b.eq #+0x28 (addr 0xffff5824b800)
0xffff5824b7dc   124  sub csp, jssp, #0x8 (8)
0xffff5824b7e0   128  str x0, [jssp, #-8]!
0xffff5824b7e4   132  mov cp, x3
0xffff5824b7e8   136  movz x0, #0x1
0xffff5824b7ec   140  movz x1, #0xce00
0xffff5824b7f0   144  movk x1, #0xe3, lsl #16
0xffff5824b7f4   148  ldr x16, pc+956 (addr 0x0000ffff5824bbb0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5824b7f8   152  blr x16
0xffff5824b7fc   156  b #+0x10 (addr 0xffff5824b80c)
0xffff5824b800   160  add x0, x4, #0x17 (23)
0xffff5824b804   164  ldr x1, [x0, w5, sxtw #3]
0xffff5824b808   168  mov x0, x1
0xffff5824b80c   172  ldr x1, [jssp, #16]
0xffff5824b810   176  ldur w2, [x1, #19]
0xffff5824b814   180  ldur w3, [x0, #19]
0xffff5824b818   184  cbz w2, #+0x288 (addr 0xffff5824baa0)
0xffff5824b81c   188  cbz w3, #+0x27c (addr 0xffff5824ba98)
0xffff5824b820   192  add w4, w2, w3
0xffff5824b824   196  movn w16, #0xe0
0xffff5824b828   200  cmp w4, w16, lsr #4
0xffff5824b82c   204  b.hs #+0x41c (addr 0xffff5824bc48)
0xffff5824b830   208  cmp w4, #0xd (13)
0xffff5824b834   212  b.ge #+0x1bc (addr 0xffff5824b9f0)
0xffff5824b838   216  ldur x5, [x1, #-1]
0xffff5824b83c   220  ldrb w5, [x5, #11]
0xffff5824b840   224  ldur x6, [x0, #-1]
0xffff5824b844   228  ldrb w6, [x6, #11]
0xffff5824b848   232  orr w7, w5, w6
0xffff5824b84c   236  eor w5, w5, w6
0xffff5824b850   240  and w5, w5, #0x4
0xffff5824b854   244  cbnz w5, #+0xc (addr 0xffff5824b860)
0xffff5824b858   248  and w5, w7, #0x3
0xffff5824b85c   252  cbz w5, #+0x28 (addr 0xffff5824b884)
0xffff5824b860   256  sub csp, jssp, #0x10 (16)
0xffff5824b864   260  stp x0, x1, [jssp, #-16]!
0xffff5824b868   264  ldr cp, [jssp, #16]
0xffff5824b86c   268  movz x0, #0x2
0xffff5824b870   272  movz x1, #0xa6c0
0xffff5824b874   276  movk x1, #0xec, lsl #16
0xffff5824b878   280  ldr x16, pc+832 (addr 0x0000ffff5824bbb8)    ;; code: STUB, CEntryStub, minor: 4
0xffff5824b87c   284  blr x16
0xffff5824b880   288  b #+0x220 (addr 0xffff5824baa0)
0xffff5824b884   292  and w1, w7, #0x4
0xffff5824b888   296  cbnz w1, #+0x14 (addr 0xffff5824b89c)
0xffff5824b88c   300  lsl w1, w4, #1
0xffff5824b890   304  mov x5, x1
0xffff5824b894   308  ldr x1, pc+812 (addr 0x0000ffff5824bbc0)    ;; object: 0x32b04ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5824b898   312  b #+0xc (addr 0xffff5824b8a4)
0xffff5824b89c   316  mov x5, x4
0xffff5824b8a0   320  ldr x1, pc+808 (addr 0x0000ffff5824bbc8)    ;; object: 0x32b04bf9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5824b8a4   324  add w5, w5, #0x1f (31)
0xffff5824b8a8   328  and w5, w5, #0xfffffff8
0xffff5824b8ac   332  cmp w5, #0x96000 (614400)
0xffff5824b8b0   336  b.lt #+0x2c (addr 0xffff5824b8dc)
0xffff5824b8b4   340  sub csp, jssp, #0x10 (16)
0xffff5824b8b8   344  ldr x1, [jssp, #16]
0xffff5824b8bc   348  stp x0, x1, [jssp, #-16]!
0xffff5824b8c0   352  ldr cp, [jssp, #16]
0xffff5824b8c4   356  movz x0, #0x2
0xffff5824b8c8   360  movz x1, #0xa6c0
0xffff5824b8cc   364  movk x1, #0xec, lsl #16
0xffff5824b8d0   368  ldr x16, pc+768 (addr 0x0000ffff5824bbd0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5824b8d4   372  blr x16
0xffff5824b8d8   376  b #+0x1c8 (addr 0xffff5824baa0)
0xffff5824b8dc   380  add w6, w5, #0x10 (16)
0xffff5824b8e0   384  sxtw x6, w6
0xffff5824b8e4   388  movz x7, #0x92c0
0xffff5824b8e8   392  movk x7, #0x16e7, lsl #16
0xffff5824b8ec   396  ldp x9, x16, [x7]
0xffff5824b8f0   400  adds x8, x9, x6
0xffff5824b8f4   404  ccmp x8, x16, #nzCv, lo
0xffff5824b8f8   408  b.hi #+0x218 (addr 0xffff5824bb10)
0xffff5824b8fc   412  str x8, [x7]
0xffff5824b900   416  orr x9, x9, #0x1
0xffff5824b904   420  add x5, x9, w5, sxtw
0xffff5824b908   424  ldr x6, pc+720 (addr 0x0000ffff5824bbd8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5824b90c   428  stur x6, [x5, #-1]
0xffff5824b910   432  ldr x6, [jssp, #24]
0xffff5824b914   436  stur x6, [x5, #7]
0xffff5824b918   440  ldur w5, [x6, #35]
0xffff5824b91c   444  add w5, w5, #0x1 (1)
0xffff5824b920   448  lsl x5, x5, #32
0xffff5824b924   452  stur x5, [x6, #31]
0xffff5824b928   456  stur x1, [x9, #-1]
0xffff5824b92c   460  movz w5, #0x3
0xffff5824b930   464  stur w5, [x9, #7]
0xffff5824b934   468  lsl x4, x4, #32
0xffff5824b938   472  stur x4, [x9, #15]
0xffff5824b93c   476  ldr x4, pc+676 (addr 0x0000ffff5824bbe0)    ;; object: 0x32b04ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5824b940   480  cmp x1, x4
0xffff5824b944   484  b.eq #+0x54 (addr 0xffff5824b998)
0xffff5824b948   488  ldr x5, [jssp, #16]
0xffff5824b94c   492  movz x1, #0x0
0xffff5824b950   496  cmp w2, w1
0xffff5824b954   500  b.le #+0x1c (addr 0xffff5824b970)
0xffff5824b958   504  add x4, x5, #0x17 (23)
0xffff5824b95c   508  ldrb w6, [x4, w1, sxtw]
0xffff5824b960   512  add x4, x9, #0x17 (23)
0xffff5824b964   516  strb w6, [x4, w1, sxtw]
0xffff5824b968   520  add w1, w1, #0x1 (1)
0xffff5824b96c   524  b #-0x1c (addr 0xffff5824b950)
0xffff5824b970   528  movz x1, #0x0
0xffff5824b974   532  cmp w3, w1
0xffff5824b978   536  b.le #+0x70 (addr 0xffff5824b9e8)
0xffff5824b97c   540  add x4, x0, #0x17 (23)
0xffff5824b980   544  ldrb w5, [x4, w1, sxtw]
0xffff5824b984   548  add w4, w2, w1
0xffff5824b988   552  add x6, x9, #0x17 (23)
0xffff5824b98c   556  strb w5, [x6, w4, sxtw]
0xffff5824b990   560  add w1, w1, #0x1 (1)
0xffff5824b994   564  b #-0x20 (addr 0xffff5824b974)
0xffff5824b998   568  ldr x5, [jssp, #16]
0xffff5824b99c   572  movz x1, #0x0
0xffff5824b9a0   576  cmp w2, w1
0xffff5824b9a4   580  b.le #+0x1c (addr 0xffff5824b9c0)
0xffff5824b9a8   584  add x4, x5, #0x17 (23)
0xffff5824b9ac   588  ldrh w6, [x4, w1, sxtw #1]
0xffff5824b9b0   592  add x4, x9, #0x17 (23)
0xffff5824b9b4   596  strh w6, [x4, w1, sxtw #1]
0xffff5824b9b8   600  add w1, w1, #0x1 (1)
0xffff5824b9bc   604  b #-0x1c (addr 0xffff5824b9a0)
0xffff5824b9c0   608  movz x1, #0x0
0xffff5824b9c4   612  cmp w3, w1
0xffff5824b9c8   616  b.le #+0x20 (addr 0xffff5824b9e8)
0xffff5824b9cc   620  add x4, x0, #0x17 (23)
0xffff5824b9d0   624  ldrh w5, [x4, w1, sxtw #1]
0xffff5824b9d4   628  add w4, w2, w1
0xffff5824b9d8   632  add x6, x9, #0x17 (23)
0xffff5824b9dc   636  strh w5, [x6, w4, sxtw #1]
0xffff5824b9e0   640  add w1, w1, #0x1 (1)
0xffff5824b9e4   644  b #-0x20 (addr 0xffff5824b9c4)
0xffff5824b9e8   648  mov x0, x9
0xffff5824b9ec   652  b #+0xb4 (addr 0xffff5824baa0)
0xffff5824b9f0   656  ldr x6, [jssp, #24]
0xffff5824b9f4   660  mov x5, x1
0xffff5824b9f8   664  ldur x1, [x5, #-1]
0xffff5824b9fc   668  ldrb w1, [x1, #11]
0xffff5824ba00   672  ldur x2, [x0, #-1]
0xffff5824ba04   676  ldrb w2, [x2, #11]
0xffff5824ba08   680  movz x7, #0x92c0
0xffff5824ba0c   684  movk x7, #0x16e7, lsl #16
0xffff5824ba10   688  ldp x8, x3, [x7]
0xffff5824ba14   692  adds x16, x8, #0x38 (56)
0xffff5824ba18   696  ccmp x16, x3, #nzCv, lo
0xffff5824ba1c   700  b.hi #+0x13c (addr 0xffff5824bb58)
0xffff5824ba20   704  str x16, [x7]
0xffff5824ba24   708  orr x8, x8, #0x1
0xffff5824ba28   712  add x3, x8, #0x28 (40)
0xffff5824ba2c   716  ldr x7, pc+444 (addr 0x0000ffff5824bbe8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5824ba30   720  stur x7, [x3, #-1]
0xffff5824ba34   724  stur x6, [x3, #7]
0xffff5824ba38   728  ldur w3, [x6, #35]
0xffff5824ba3c   732  add w3, w3, #0x1 (1)
0xffff5824ba40   736  lsl x3, x3, #32
0xffff5824ba44   740  stur x3, [x6, #31]
0xffff5824ba48   744  and w3, w1, w2
0xffff5824ba4c   748  eor w1, w1, w2
0xffff5824ba50   752  and w2, w3, #0xc
0xffff5824ba54   756  cbnz w2, #+0x1c (addr 0xffff5824ba70)
0xffff5824ba58   760  and w1, w1, #0xc
0xffff5824ba5c   764  cmp w1, #0xc (12)
0xffff5824ba60   768  b.eq #+0x10 (addr 0xffff5824ba70)
0xffff5824ba64   772  ldr x1, pc+396 (addr 0x0000ffff5824bbf0)    ;; object: 0x32b04c51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5824ba68   776  stur x1, [x8, #-1]
0xffff5824ba6c   780  b #+0xc (addr 0xffff5824ba78)
0xffff5824ba70   784  ldr x1, pc+392 (addr 0x0000ffff5824bbf8)    ;; object: 0x32b04ca9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5824ba74   788  stur x1, [x8, #-1]
0xffff5824ba78   792  movz w1, #0x3
0xffff5824ba7c   796  stur w1, [x8, #7]
0xffff5824ba80   800  lsl x1, x4, #32
0xffff5824ba84   804  stur x1, [x8, #15]
0xffff5824ba88   808  stur x5, [x8, #23]
0xffff5824ba8c   812  stur x0, [x8, #31]
0xffff5824ba90   816  mov x0, x8
0xffff5824ba94   820  b #+0xc (addr 0xffff5824baa0)
0xffff5824ba98   824  mov x5, x1
0xffff5824ba9c   828  mov x0, x5
0xffff5824baa0   832  ldr cp, [jssp]
0xffff5824baa4   836  mov jssp, fp
0xffff5824baa8   840  ldp fp, lr, [jssp], #16
0xffff5824baac   844  ret
0xffff5824bab0   848  ldur x16, [x0, #-1]
0xffff5824bab4   852  ldr x17, [x26, #120]
0xffff5824bab8   856  cmp x16, x17
0xffff5824babc   860  b.ne #+0x30 (addr 0xffff5824baec)
0xffff5824bac0   864  ldur d30, [x0, #7]
0xffff5824bac4   868  fcvtzs x7, d30
0xffff5824bac8   872  cmp x7, #0x1 (1)
0xffff5824bacc   876  ccmn x7, #1, #nzcV, vc
0xffff5824bad0   880  b.vc #+0x18 (addr 0xffff5824bae8)
0xffff5824bad4   884  sub csp, jssp, #0x8 (8)
0xffff5824bad8   888  str lr, [jssp, #-8]!
0xffff5824badc   892  ldr x16, pc+292 (addr 0x0000ffff5824bc00)    ;; code: STUB, DoubleToIStub, minor: 127424
0xffff5824bae0   896  blr x16
0xffff5824bae4   900  ldr lr, [jssp], #8
0xffff5824bae8   904  b #+0x24 (addr 0xffff5824bb0c)
0xffff5824baec   908  ldp x7, x6, [x26, #64]
0xffff5824baf0   912  cmp x0, x7
0xffff5824baf4   916  cset x7, eq
0xffff5824baf8   920  ccmp x0, x6, #nZcv, ne
0xffff5824bafc   924  b.eq #+0x10 (addr 0xffff5824bb0c)
0xffff5824bb00   928  ldr x16, [x26, #40]
0xffff5824bb04   932  cmp x0, x16
0xffff5824bb08   936  b.ne #+0x148 (addr 0xffff5824bc50)
0xffff5824bb0c   940  b #-0x348 (addr 0xffff5824b7c4)
0xffff5824bb10   944  movz x9, #0x0
0xffff5824bb14   948  mov x16, lr
0xffff5824bb18   952  ldr x17, pc+240 (addr 0x0000ffff5824bc08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5824bb1c   956  blr x17
0xffff5824bb20   960  lsl x0, x6, #32
0xffff5824bb24   964  movz x10, #0x0
0xffff5824bb28   968  sub csp, jssp, #0x10 (16)
0xffff5824bb2c   972  stp x10, x0, [jssp, #-16]!
0xffff5824bb30   976  ldur cp, [fp, #-40]
0xffff5824bb34   980  movz x0, #0x2
0xffff5824bb38   984  movz x1, #0x5b88
0xffff5824bb3c   988  movk x1, #0xe2, lsl #16
0xffff5824bb40   992  ldr x16, pc+208 (addr 0x0000ffff5824bc10)    ;; code: STUB, CEntryStub, minor: 5
0xffff5824bb44   996  blr x16
0xffff5824bb48  1000  str x0, [jssp, #72]
0xffff5824bb4c  1004  ldr x16, pc+204 (addr 0x0000ffff5824bc18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5824bb50  1008  blr x16
0xffff5824bb54  1012  b #-0x250 (addr 0xffff5824b904)
0xffff5824bb58  1016  movz x8, #0x0
0xffff5824bb5c  1020  mov x16, lr
0xffff5824bb60  1024  ldr x17, pc+192 (addr 0x0000ffff5824bc20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5824bb64  1028  blr x17
0xffff5824bb68  1032  movz x0, #0x3800000000
0xffff5824bb6c  1036  movz x10, #0x0
0xffff5824bb70  1040  sub csp, jssp, #0x10 (16)
0xffff5824bb74  1044  stp x10, x0, [jssp, #-16]!
0xffff5824bb78  1048  ldur cp, [fp, #-40]
0xffff5824bb7c  1052  movz x0, #0x2
0xffff5824bb80  1056  movz x1, #0x5b88
0xffff5824bb84  1060  movk x1, #0xe2, lsl #16
0xffff5824bb88  1064  ldr x16, pc+160 (addr 0x0000ffff5824bc28)    ;; code: STUB, CEntryStub, minor: 5
0xffff5824bb8c  1068  blr x16
0xffff5824bb90  1072  str x0, [jssp, #64]
0xffff5824bb94  1076  ldr x16, pc+156 (addr 0x0000ffff5824bc30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5824bb98  1080  blr x16
0xffff5824bb9c  1084  b #-0x174 (addr 0xffff5824ba28)
0xffff5824bba0  1088  580004bf       constant pool begin (num_const = 37)    ;; constant pool
0xffff5824bba4  1092  d63f03e0       constant
0xffff5824bba8  1096  58006010       constant
0xffff5824bbac  1100  0000ffff       constant
0xffff5824bbb0  1104  58206060       constant
0xffff5824bbb4  1108  0000ffff       constant
0xffff5824bbb8  1112  58206060       constant
0xffff5824bbbc  1116  0000ffff       constant
0xffff5824bbc0  1120  32b04ba1       constant
0xffff5824bbc4  1124  00000000       constant
0xffff5824bbc8  1128  32b04bf9       constant
0xffff5824bbcc  1132  00000000       constant
0xffff5824bbd0  1136  58206060       constant
0xffff5824bbd4  1140  0000ffff       constant
0xffff5824bbd8  1144  32b05d81       constant
0xffff5824bbdc  1148  00000000       constant
0xffff5824bbe0  1152  32b04ba1       constant
0xffff5824bbe4  1156  00000000       constant
0xffff5824bbe8  1160  32b05d81       constant
0xffff5824bbec  1164  00000000       constant
0xffff5824bbf0  1168  32b04c51       constant
0xffff5824bbf4  1172  00000000       constant
0xffff5824bbf8  1176  32b04ca9       constant
0xffff5824bbfc  1180  00000000       constant
0xffff5824bc00  1184  5824b6c0       constant
0xffff5824bc04  1188  0000ffff       constant
0xffff5824bc08  1192  58206820       constant
0xffff5824bc0c  1196  0000ffff       constant
0xffff5824bc10  1200  58206260       constant
0xffff5824bc14  1204  0000ffff       constant
0xffff5824bc18  1208  582068e0       constant
0xffff5824bc1c  1212  0000ffff       constant
0xffff5824bc20  1216  58206820       constant
0xffff5824bc24  1220  0000ffff       constant
0xffff5824bc28  1224  58206260       constant
0xffff5824bc2c  1228  0000ffff       constant
0xffff5824bc30  1232  582068e0       constant
0xffff5824bc34  1236  0000ffff       constant
0xffff5824bc38  1240  movz x16, #0x0
0xffff5824bc3c  1244  bl #+0x1c (addr 0xffff5824bc58)
0xffff5824bc40  1248  movz x16, #0x8
0xffff5824bc44  1252  bl #+0x14 (addr 0xffff5824bc58)
0xffff5824bc48  1256  movz x16, #0x20
0xffff5824bc4c  1260  bl #+0xc (addr 0xffff5824bc58)
0xffff5824bc50  1264  movz x16, #0x38
0xffff5824bc54  1268  bl #+0x4 (addr 0xffff5824bc58)
0xffff5824bc58  1272  ldr x17, pc+24 (addr 0x0000ffff5824bc70)    ;; lazy deoptimization bailout 0
0xffff5824bc5c  1276  add x17, x17, x16
0xffff5824bc60  1280  br x17
0xffff5824bc64  1284  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5824bc68  1288  d63f03e0       constant
0xffff5824bc6c  1292  d503201f       constant
0xffff5824bc70  1296  58006000       constant
0xffff5824bc74  1300  0000ffff       constant


Safepoints (size = 73)
0xffff5824b7fc   156  1111000 (sp -> fp)       3
0xffff5824b880   288  1111000 (sp -> fp)       5
0xffff5824b8d8   376  1111000 (sp -> fp)       6
0xffff5824bb48  1000  1011000 | x0 | x1 | x9 (sp -> fp)  <none> argc: 2
0xffff5824bb90  1072  1011000 | x0 | x5 | x6 | x8 (sp -> fp)  <none> argc: 2

RelocInfo (size = 45)
0xffff5824b7b4  runtime entry
0xffff5824b7f4  code target (STUB)  (0xffff58206060)
0xffff5824b878  code target (STUB)  (0xffff58206060)
0xffff5824b894  embedded object  (0x32b04ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5824b8a0  embedded object  (0x32b04bf9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5824b8d0  code target (STUB)  (0xffff58206060)
0xffff5824b908  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5824b93c  embedded object  (0x32b04ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5824ba2c  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5824ba64  embedded object  (0x32b04c51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5824ba70  embedded object  (0x32b04ca9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5824badc  code target (STUB)  (0xffff5824b6c0)
0xffff5824bb18  code target (STUB)  (0xffff58206820)
0xffff5824bb40  code target (STUB)  (0xffff58206260)
0xffff5824bb4c  code target (STUB)  (0xffff582068e0)
0xffff5824bb60  code target (STUB)  (0xffff58206820)
0xffff5824bb88  code target (STUB)  (0xffff58206260)
0xffff5824bb94  code target (STUB)  (0xffff582068e0)
0xffff5824bba0  constant pool (size 152)
0xffff5824bc58  runtime entry
0xffff5824bc64  constant pool (size 20)


kind = BINARY_OP_IC
major_key = BinaryOpICWithAllocationSiteStub
ic_state = MONOMORPHIC
extra_ic_state = 2631
type = NORMAL
name = BinaryOpICWithAllocationSiteStub(ADD_CreateAllocationMementos:String*Smi->String)
compiler = unknown
Instructions (size = 40)
0xffff5824bd40     0  ldr x2, pc+24 (addr 0x0000ffff5824bd58)    ;; object: 0x39c04241 <undefined>
0xffff5824bd44     4  ldr x16, pc+28 (addr 0x0000ffff5824bd60)    ;; code: STUB, BinaryOpWithAllocationSiteStub, minor: 2631
0xffff5824bd48     8  br x16
0xffff5824bd4c    12  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff5824bd50    16  d63f03e0       constant
0xffff5824bd54    20  d503201f       constant
0xffff5824bd58    24  39c04241       constant
0xffff5824bd5c    28  00000000       constant
0xffff5824bd60    32  5824b760       constant
0xffff5824bd64    36  0000ffff       constant


RelocInfo (size = 8)
0xffff5824bd40  embedded object  (0x39c04241 <undefined>)
0xffff5824bd44  code target (STUB)  (0xffff5824b760)
0xffff5824bd4c  constant pool (size 28)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 269)
0xffff5824be80     0  movz x2, #0x92c0
0xffff5824be84     4  movk x2, #0x16e7, lsl #16
0xffff5824be88     8  ldp x3, x0, [x2]
0xffff5824be8c    12  adds x16, x3, #0x38 (56)
0xffff5824be90    16  ccmp x16, x0, #nzCv, lo
0xffff5824be94    20  b.hi #+0x44 (addr 0xffff5824bed8)
0xffff5824be98    24  str x16, [x2]
0xffff5824be9c    28  orr x3, x3, #0x1
0xffff5824bea0    32  ldr x0, pc+168 (addr 0x0000ffff5824bf48)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5824bea4    36  stur x0, [x3, #-1]
0xffff5824bea8    40  movz x0, #0x500000000
0xffff5824beac    44  stur x0, [x3, #7]
0xffff5824beb0    48  stur x1, [x3, #15]
0xffff5824beb4    52  stur cp, [x3, #23]
0xffff5824beb8    56  ldr x0, pc+152 (addr 0x0000ffff5824bf50)    ;; object: 0x39c04519 <the hole>
0xffff5824bebc    60  stur x0, [x3, #31]
0xffff5824bec0    64  ldur x0, [cp, #39]
0xffff5824bec4    68  stur x0, [x3, #39]
0xffff5824bec8    72  ldr x0, pc+144 (addr 0x0000ffff5824bf58)    ;; object: 0x39c04241 <undefined>
0xffff5824becc    76  stur x0, [x3, #47]
0xffff5824bed0    80  mov x0, x3
0xffff5824bed4    84  ret
0xffff5824bed8    88  sub csp, jssp, #0x10 (16)
0xffff5824bedc    92  stp fp, lr, [jssp, #-16]!
0xffff5824bee0    96  movz fp, #0xa00000000
0xffff5824bee4   100  sub csp, jssp, #0x8 (8)
0xffff5824bee8   104  str fp, [jssp, #-8]!
0xffff5824beec   108  add fp, jssp, #0x8 (8)
0xffff5824bef0   112  movz x3, #0x0
0xffff5824bef4   116  mov x16, lr
0xffff5824bef8   120  ldr x17, pc+104 (addr 0x0000ffff5824bf60)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5824befc   124  blr x17
0xffff5824bf00   128  movz x0, #0x3800000000
0xffff5824bf04   132  movz x10, #0x0
0xffff5824bf08   136  sub csp, jssp, #0x10 (16)
0xffff5824bf0c   140  stp x10, x0, [jssp, #-16]!
0xffff5824bf10   144  movz x0, #0x2
0xffff5824bf14   148  movz x1, #0x5b88
0xffff5824bf18   152  movk x1, #0xe2, lsl #16
0xffff5824bf1c   156  ldr x16, pc+76 (addr 0x0000ffff5824bf68)    ;; code: STUB, CEntryStub, minor: 5
0xffff5824bf20   160  blr x16
0xffff5824bf24   164  str x0, [jssp, #24]
0xffff5824bf28   168  ldr x16, pc+72 (addr 0x0000ffff5824bf70)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5824bf2c   172  blr x16
0xffff5824bf30   176  ldr lr, [jssp, #16]
0xffff5824bf34   180  ldp xzr, fp, [jssp], #24
0xffff5824bf38   184  b #-0x98 (addr 0xffff5824bea0)
0xffff5824bf3c   188  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff5824bf40   192  d63f03e0       constant
0xffff5824bf44   196  d503201f       constant
0xffff5824bf48   200  32b06149       constant
0xffff5824bf4c   204  00000000       constant
0xffff5824bf50   208  39c04519       constant
0xffff5824bf54   212  00000000       constant
0xffff5824bf58   216  39c04241       constant
0xffff5824bf5c   220  00000000       constant
0xffff5824bf60   224  58206820       constant
0xffff5824bf64   228  0000ffff       constant
0xffff5824bf68   232  58206260       constant
0xffff5824bf6c   236  0000ffff       constant
0xffff5824bf70   240  582068e0       constant
0xffff5824bf74   244  0000ffff       constant


Safepoints (size = 21)
0xffff5824bf24   164  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 12)
0xffff5824bea0  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5824beb8  embedded object  (0x39c04519 <the hole>)
0xffff5824bec8  embedded object  (0x39c04241 <undefined>)
0xffff5824bef8  code target (STUB)  (0xffff58206820)
0xffff5824bf1c  code target (STUB)  (0xffff58206260)
0xffff5824bf28  code target (STUB)  (0xffff582068e0)
0xffff5824bf3c  constant pool (size 60)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff5824c160     0  ldur x0, [x1, #-1]
0xffff5824c164     4  ldur x0, [x0, #47]
0xffff5824c168     8  ldur x0, [x0, #239]
0xffff5824c16c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58252500     0  ldur x0, [x1, #-1]
0xffff58252504     4  ldur x0, [x0, #47]
0xffff58252508     8  movz x16, #0x7f7
0xffff5825250c    12  ldr x0, [x0, x16]
0xffff58252510    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393220
name = CallICStub(args(4), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff58252580     0  add x4, x2, x3, asr #29
0xffff58252584     4  ldur x4, [x4, #15]
0xffff58252588     8  ldur x5, [x4, #7]
0xffff5825258c    12  cmp x5, x1
0xffff58252590    16  b.ne #+0x2c (addr 0xffff582525bc)
0xffff58252594    20  tbz w1, #0, #+0x28 (addr 0xffff582525bc)
0xffff58252598    24  add x2, x2, x3, asr #29
0xffff5825259c    28  add x2, x2, #0x18 (24)
0xffff582525a0    32  ldur x3, [x2, #-1]
0xffff582525a4    36  movz x16, #0x200000000
0xffff582525a8    40  add x3, x3, x16
0xffff582525ac    44  stur x3, [x2, #-1]
0xffff582525b0    48  movz x0, #0x4
0xffff582525b4    52  ldr x16, pc+372 (addr 0x0000ffff58252728)    ;; code: BUILTIN
0xffff582525b8    56  br x16
0xffff582525bc    60  ldr x16, [x26, #2400]
0xffff582525c0    64  cmp x4, x16
0xffff582525c4    68  b.eq #+0x78 (addr 0xffff5825263c)
0xffff582525c8    72  ldur x5, [x4, #-1]
0xffff582525cc    76  ldr x16, [x26, #2736]
0xffff582525d0    80  cmp x5, x16
0xffff582525d4    84  b.ne #+0x40 (addr 0xffff58252614)
0xffff582525d8    88  ldur x5, [cp, #39]
0xffff582525dc    92  ldur x5, [x5, #95]
0xffff582525e0    96  cmp x1, x5
0xffff582525e4   100  b.ne #+0xec (addr 0xffff582526d0)
0xffff582525e8   104  movz x0, #0x4
0xffff582525ec   108  add x2, x2, x3, asr #29
0xffff582525f0   112  add x2, x2, #0x18 (24)
0xffff582525f4   116  ldur x3, [x2, #-1]
0xffff582525f8   120  movz x16, #0x200000000
0xffff582525fc   124  add x3, x3, x16
0xffff58252600   128  stur x3, [x2, #-1]
0xffff58252604   132  mov x2, x4
0xffff58252608   136  mov x3, x1
0xffff5825260c   140  ldr x16, pc+292 (addr 0x0000ffff58252730)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff58252610   144  br x16
0xffff58252614   148  ldr x16, [x26, #2568]
0xffff58252618   152  cmp x4, x16
0xffff5825261c   156  b.eq #+0xb4 (addr 0xffff582526d0)
0xffff58252620   160  ldur x5, [x4, #-1]
0xffff58252624   164  ldrb w5, [x5, #11]
0xffff58252628   168  cmp x5, #0xc9 (201)
0xffff5825262c   172  b.ne #+0xa4 (addr 0xffff582526d0)
0xffff58252630   176  add x4, x2, x3, asr #29
0xffff58252634   180  ldr x5, [x26, #2400]
0xffff58252638   184  stur x5, [x4, #15]
0xffff5825263c   188  movz x0, #0x4
0xffff58252640   192  ldr x16, pc+248 (addr 0x0000ffff58252738)    ;; code: BUILTIN
0xffff58252644   196  br x16
0xffff58252648   200  tbz w1, #0, #+0x88 (addr 0xffff582526d0)
0xffff5825264c   204  ldur x5, [x1, #-1]
0xffff58252650   208  ldrb w5, [x5, #11]
0xffff58252654   212  cmp x5, #0xc9 (201)
0xffff58252658   216  b.ne #+0x78 (addr 0xffff582526d0)
0xffff5825265c   220  ldur x5, [cp, #39]
0xffff58252660   224  ldur x5, [x5, #95]
0xffff58252664   228  cmp x1, x5
0xffff58252668   232  b.eq #+0x68 (addr 0xffff582526d0)
0xffff5825266c   236  ldur x4, [x1, #39]
0xffff58252670   240  ldur x4, [x4, #39]
0xffff58252674   244  ldur x5, [cp, #39]
0xffff58252678   248  cmp x4, x5
0xffff5825267c   252  b.ne #+0x54 (addr 0xffff582526d0)
0xffff58252680   256  movz x5, #0x200000000
0xffff58252684   260  adds x4, x2, x3, asr #29
0xffff58252688   264  stur x5, [x4, #23]
0xffff5825268c   268  movz x16, #0xc00000000
0xffff58252690   272  sub csp, jssp, #0x10 (16)
0xffff58252694   276  stp fp, lr, [jssp, #-16]!
0xffff58252698   280  sub csp, jssp, #0x10 (16)
0xffff5825269c   284  str x16, [jssp, #-8]!
0xffff582526a0   288  ldr x17, pc+160 (addr 0x0000ffff58252740)    ;; object: 0xffff58252521 <Code: CALL_IC>
0xffff582526a4   292  sub csp, jssp, #0x10 (16)
0xffff582526a8   296  str x17, [jssp, #-8]!
0xffff582526ac   300  add fp, jssp, #0x10 (16)
0xffff582526b0   304  sub csp, jssp, #0x8 (8)
0xffff582526b4   308  str x1, [jssp, #-8]!
0xffff582526b8   312  ldr x16, pc+144 (addr 0x0000ffff58252748)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff582526bc   316  blr x16
0xffff582526c0   320  ldr x1, [jssp], #8
0xffff582526c4   324  mov jssp, fp
0xffff582526c8   328  ldp fp, lr, [jssp], #16
0xffff582526cc   332  b #-0x11c (addr 0xffff582525b0)
0xffff582526d0   336  movz x16, #0xc00000000
0xffff582526d4   340  sub csp, jssp, #0x10 (16)
0xffff582526d8   344  stp fp, lr, [jssp, #-16]!
0xffff582526dc   348  sub csp, jssp, #0x10 (16)
0xffff582526e0   352  str x16, [jssp, #-8]!
0xffff582526e4   356  ldr x17, pc+108 (addr 0x0000ffff58252750)    ;; object: 0xffff58252521 <Code: CALL_IC>
0xffff582526e8   360  sub csp, jssp, #0x10 (16)
0xffff582526ec   364  str x17, [jssp, #-8]!
0xffff582526f0   368  add fp, jssp, #0x10 (16)
0xffff582526f4   372  sub csp, jssp, #0x18 (24)
0xffff582526f8   376  stp x3, x2, [jssp, #-24]!
0xffff582526fc   380  str x1, [jssp, #16]
0xffff58252700   384  movz x0, #0x3
0xffff58252704   388  ldr x1, pc+84 (addr 0x0000ffff58252758)    ;; external reference (Runtime::CallIC_Miss)
0xffff58252708   392  ldr x16, pc+88 (addr 0x0000ffff58252760)    ;; code: STUB, CEntryStub, minor: 4
0xffff5825270c   396  blr x16
0xffff58252710   400  mov x1, x0
0xffff58252714   404  mov jssp, fp
0xffff58252718   408  ldp fp, lr, [jssp], #16
0xffff5825271c   412  b #-0xe0 (addr 0xffff5825263c)
0xffff58252720   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff58252724   420  d63f03e0       constant
0xffff58252728   424  5821e820       constant
0xffff5825272c   428  0000ffff       constant
0xffff58252730   432  58233b00       constant
0xffff58252734   436  0000ffff       constant
0xffff58252738   440  5821f820       constant
0xffff5825273c   444  0000ffff       constant
0xffff58252740   448  58252521       constant
0xffff58252744   452  0000ffff       constant
0xffff58252748   456  5820ddc0       constant
0xffff5825274c   460  0000ffff       constant
0xffff58252750   464  58252521       constant
0xffff58252754   468  0000ffff       constant
0xffff58252758   472  00c86928       constant
0xffff5825275c   476  00000000       constant
0xffff58252760   480  58206060       constant
0xffff58252764   484  0000ffff       constant


RelocInfo (size = 19)
0xffff582525b4  code target (BUILTIN)  (0xffff5821e820)
0xffff5825260c  code target (STUB)  (0xffff58233b00)
0xffff58252640  code target (BUILTIN)  (0xffff5821f820)
0xffff582526a0  embedded object  (0xffff58252521 <Code: CALL_IC>)
0xffff582526b8  code target (STUB)  (0xffff5820ddc0)
0xffff582526e4  embedded object  (0xffff58252521 <Code: CALL_IC>)
0xffff58252704  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58252708  code target (STUB)  (0xffff58206060)
0xffff58252720  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393220
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff582527e0     0  ldur x2, [fp, #-16]
0xffff582527e4     4  ldur x2, [x2, #31]
0xffff582527e8     8  ldur x2, [x2, #87]
0xffff582527ec    12  ldr x16, pc+20 (addr 0x0000ffff58252800)    ;; code: CALL_IC, GENERIC
0xffff582527f0    16  br x16
0xffff582527f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582527f8    24  d63f03e0       constant
0xffff582527fc    28  d503201f       constant
0xffff58252800    32  58252580       constant
0xffff58252804    36  0000ffff       constant


RelocInfo (size = 7)
0xffff582527ec  code target (CALL_IC)  (0xffff58252580)
0xffff582527f4  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582569e0     0  ldur x0, [x1, #7]
0xffff582569e4     4  movz x16, #0x1d7
0xffff582569e8     8  ldr x0, [x0, x16]
0xffff582569ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58257320     0  ldur x0, [x1, #7]
0xffff58257324     4  movz x16, #0x1df
0xffff58257328     8  ldr x0, [x0, x16]
0xffff5825732c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582573a0     0  ldur x0, [x1, #-1]
0xffff582573a4     4  ldur x0, [x0, #47]
0xffff582573a8     8  movz x16, #0x5cf
0xffff582573ac    12  ldr x0, [x0, x16]
0xffff582573b0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 1165)
0xffff58257420     0  movz x2, #0x92c0
0xffff58257424     4  movk x2, #0x16e7, lsl #16
0xffff58257428     8  ldp x3, x0, [x2]
0xffff5825742c    12  adds x16, x3, #0x1c8 (456)
0xffff58257430    16  ccmp x16, x0, #nzCv, lo
0xffff58257434    20  b.hi #+0x234 (addr 0xffff58257668)
0xffff58257438    24  str x16, [x2]
0xffff5825743c    28  orr x3, x3, #0x1
0xffff58257440    32  ldr x0, pc+664 (addr 0x0000ffff582576d8)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58257444    36  stur x0, [x3, #-1]
0xffff58257448    40  movz x0, #0x3700000000
0xffff5825744c    44  stur x0, [x3, #7]
0xffff58257450    48  stur x1, [x3, #15]
0xffff58257454    52  stur cp, [x3, #23]
0xffff58257458    56  ldr x0, pc+648 (addr 0x0000ffff582576e0)    ;; object: 0x39c04519 <the hole>
0xffff5825745c    60  stur x0, [x3, #31]
0xffff58257460    64  ldur x0, [cp, #39]
0xffff58257464    68  stur x0, [x3, #39]
0xffff58257468    72  ldr x0, pc+640 (addr 0x0000ffff582576e8)    ;; object: 0x39c04241 <undefined>
0xffff5825746c    76  stur x0, [x3, #47]
0xffff58257470    80  ldr x0, pc+640 (addr 0x0000ffff582576f0)    ;; object: 0x39c04241 <undefined>
0xffff58257474    84  stur x0, [x3, #55]
0xffff58257478    88  ldr x0, pc+640 (addr 0x0000ffff582576f8)    ;; object: 0x39c04241 <undefined>
0xffff5825747c    92  stur x0, [x3, #63]
0xffff58257480    96  ldr x0, pc+640 (addr 0x0000ffff58257700)    ;; object: 0x39c04241 <undefined>
0xffff58257484   100  stur x0, [x3, #71]
0xffff58257488   104  ldr x0, pc+640 (addr 0x0000ffff58257708)    ;; object: 0x39c04241 <undefined>
0xffff5825748c   108  stur x0, [x3, #79]
0xffff58257490   112  ldr x0, pc+640 (addr 0x0000ffff58257710)    ;; object: 0x39c04241 <undefined>
0xffff58257494   116  stur x0, [x3, #87]
0xffff58257498   120  ldr x0, pc+640 (addr 0x0000ffff58257718)    ;; object: 0x39c04241 <undefined>
0xffff5825749c   124  stur x0, [x3, #95]
0xffff582574a0   128  ldr x0, pc+640 (addr 0x0000ffff58257720)    ;; object: 0x39c04241 <undefined>
0xffff582574a4   132  stur x0, [x3, #103]
0xffff582574a8   136  ldr x0, pc+640 (addr 0x0000ffff58257728)    ;; object: 0x39c04241 <undefined>
0xffff582574ac   140  stur x0, [x3, #111]
0xffff582574b0   144  ldr x0, pc+640 (addr 0x0000ffff58257730)    ;; object: 0x39c04241 <undefined>
0xffff582574b4   148  stur x0, [x3, #119]
0xffff582574b8   152  ldr x0, pc+640 (addr 0x0000ffff58257738)    ;; object: 0x39c04241 <undefined>
0xffff582574bc   156  stur x0, [x3, #127]
0xffff582574c0   160  ldr x0, pc+640 (addr 0x0000ffff58257740)    ;; object: 0x39c04241 <undefined>
0xffff582574c4   164  stur x0, [x3, #135]
0xffff582574c8   168  ldr x0, pc+640 (addr 0x0000ffff58257748)    ;; object: 0x39c04241 <undefined>
0xffff582574cc   172  stur x0, [x3, #143]
0xffff582574d0   176  ldr x0, pc+640 (addr 0x0000ffff58257750)    ;; object: 0x39c04241 <undefined>
0xffff582574d4   180  stur x0, [x3, #151]
0xffff582574d8   184  ldr x0, pc+640 (addr 0x0000ffff58257758)    ;; object: 0x39c04241 <undefined>
0xffff582574dc   188  stur x0, [x3, #159]
0xffff582574e0   192  ldr x0, pc+640 (addr 0x0000ffff58257760)    ;; object: 0x39c04241 <undefined>
0xffff582574e4   196  stur x0, [x3, #167]
0xffff582574e8   200  ldr x0, pc+640 (addr 0x0000ffff58257768)    ;; object: 0x39c04241 <undefined>
0xffff582574ec   204  stur x0, [x3, #175]
0xffff582574f0   208  ldr x0, pc+640 (addr 0x0000ffff58257770)    ;; object: 0x39c04241 <undefined>
0xffff582574f4   212  stur x0, [x3, #183]
0xffff582574f8   216  ldr x0, pc+640 (addr 0x0000ffff58257778)    ;; object: 0x39c04241 <undefined>
0xffff582574fc   220  stur x0, [x3, #191]
0xffff58257500   224  ldr x0, pc+640 (addr 0x0000ffff58257780)    ;; object: 0x39c04241 <undefined>
0xffff58257504   228  stur x0, [x3, #199]
0xffff58257508   232  ldr x0, pc+640 (addr 0x0000ffff58257788)    ;; object: 0x39c04241 <undefined>
0xffff5825750c   236  stur x0, [x3, #207]
0xffff58257510   240  ldr x0, pc+640 (addr 0x0000ffff58257790)    ;; object: 0x39c04241 <undefined>
0xffff58257514   244  stur x0, [x3, #215]
0xffff58257518   248  ldr x0, pc+640 (addr 0x0000ffff58257798)    ;; object: 0x39c04241 <undefined>
0xffff5825751c   252  stur x0, [x3, #223]
0xffff58257520   256  ldr x0, pc+640 (addr 0x0000ffff582577a0)    ;; object: 0x39c04241 <undefined>
0xffff58257524   260  stur x0, [x3, #231]
0xffff58257528   264  ldr x0, pc+640 (addr 0x0000ffff582577a8)    ;; object: 0x39c04241 <undefined>
0xffff5825752c   268  stur x0, [x3, #239]
0xffff58257530   272  ldr x0, pc+640 (addr 0x0000ffff582577b0)    ;; object: 0x39c04241 <undefined>
0xffff58257534   276  stur x0, [x3, #247]
0xffff58257538   280  ldr x0, pc+640 (addr 0x0000ffff582577b8)    ;; object: 0x39c04241 <undefined>
0xffff5825753c   284  stur x0, [x3, #255]
0xffff58257540   288  ldr x0, pc+640 (addr 0x0000ffff582577c0)    ;; object: 0x39c04241 <undefined>
0xffff58257544   292  movz x16, #0x107
0xffff58257548   296  str x0, [x3, x16]
0xffff5825754c   300  ldr x0, pc+636 (addr 0x0000ffff582577c8)    ;; object: 0x39c04241 <undefined>
0xffff58257550   304  movz x16, #0x10f
0xffff58257554   308  str x0, [x3, x16]
0xffff58257558   312  ldr x0, pc+632 (addr 0x0000ffff582577d0)    ;; object: 0x39c04241 <undefined>
0xffff5825755c   316  movz x16, #0x117
0xffff58257560   320  str x0, [x3, x16]
0xffff58257564   324  ldr x0, pc+628 (addr 0x0000ffff582577d8)    ;; object: 0x39c04241 <undefined>
0xffff58257568   328  movz x16, #0x11f
0xffff5825756c   332  str x0, [x3, x16]
0xffff58257570   336  ldr x0, pc+624 (addr 0x0000ffff582577e0)    ;; object: 0x39c04241 <undefined>
0xffff58257574   340  movz x16, #0x127
0xffff58257578   344  str x0, [x3, x16]
0xffff5825757c   348  ldr x0, pc+620 (addr 0x0000ffff582577e8)    ;; object: 0x39c04241 <undefined>
0xffff58257580   352  movz x16, #0x12f
0xffff58257584   356  str x0, [x3, x16]
0xffff58257588   360  ldr x0, pc+616 (addr 0x0000ffff582577f0)    ;; object: 0x39c04241 <undefined>
0xffff5825758c   364  movz x16, #0x137
0xffff58257590   368  str x0, [x3, x16]
0xffff58257594   372  ldr x0, pc+612 (addr 0x0000ffff582577f8)    ;; object: 0x39c04241 <undefined>
0xffff58257598   376  movz x16, #0x13f
0xffff5825759c   380  str x0, [x3, x16]
0xffff582575a0   384  ldr x0, pc+608 (addr 0x0000ffff58257800)    ;; object: 0x39c04241 <undefined>
0xffff582575a4   388  movz x16, #0x147
0xffff582575a8   392  str x0, [x3, x16]
0xffff582575ac   396  ldr x0, pc+604 (addr 0x0000ffff58257808)    ;; object: 0x39c04241 <undefined>
0xffff582575b0   400  movz x16, #0x14f
0xffff582575b4   404  str x0, [x3, x16]
0xffff582575b8   408  ldr x0, pc+600 (addr 0x0000ffff58257810)    ;; object: 0x39c04241 <undefined>
0xffff582575bc   412  movz x16, #0x157
0xffff582575c0   416  str x0, [x3, x16]
0xffff582575c4   420  ldr x0, pc+596 (addr 0x0000ffff58257818)    ;; object: 0x39c04241 <undefined>
0xffff582575c8   424  movz x16, #0x15f
0xffff582575cc   428  str x0, [x3, x16]
0xffff582575d0   432  ldr x0, pc+592 (addr 0x0000ffff58257820)    ;; object: 0x39c04241 <undefined>
0xffff582575d4   436  movz x16, #0x167
0xffff582575d8   440  str x0, [x3, x16]
0xffff582575dc   444  ldr x0, pc+588 (addr 0x0000ffff58257828)    ;; object: 0x39c04241 <undefined>
0xffff582575e0   448  movz x16, #0x16f
0xffff582575e4   452  str x0, [x3, x16]
0xffff582575e8   456  ldr x0, pc+584 (addr 0x0000ffff58257830)    ;; object: 0x39c04241 <undefined>
0xffff582575ec   460  movz x16, #0x177
0xffff582575f0   464  str x0, [x3, x16]
0xffff582575f4   468  ldr x0, pc+580 (addr 0x0000ffff58257838)    ;; object: 0x39c04241 <undefined>
0xffff582575f8   472  movz x16, #0x17f
0xffff582575fc   476  str x0, [x3, x16]
0xffff58257600   480  ldr x0, pc+576 (addr 0x0000ffff58257840)    ;; object: 0x39c04241 <undefined>
0xffff58257604   484  movz x16, #0x187
0xffff58257608   488  str x0, [x3, x16]
0xffff5825760c   492  ldr x0, pc+572 (addr 0x0000ffff58257848)    ;; object: 0x39c04241 <undefined>
0xffff58257610   496  movz x16, #0x18f
0xffff58257614   500  str x0, [x3, x16]
0xffff58257618   504  ldr x0, pc+568 (addr 0x0000ffff58257850)    ;; object: 0x39c04241 <undefined>
0xffff5825761c   508  movz x16, #0x197
0xffff58257620   512  str x0, [x3, x16]
0xffff58257624   516  ldr x0, pc+564 (addr 0x0000ffff58257858)    ;; object: 0x39c04241 <undefined>
0xffff58257628   520  movz x16, #0x19f
0xffff5825762c   524  str x0, [x3, x16]
0xffff58257630   528  ldr x0, pc+560 (addr 0x0000ffff58257860)    ;; object: 0x39c04241 <undefined>
0xffff58257634   532  movz x16, #0x1a7
0xffff58257638   536  str x0, [x3, x16]
0xffff5825763c   540  ldr x0, pc+556 (addr 0x0000ffff58257868)    ;; object: 0x39c04241 <undefined>
0xffff58257640   544  movz x16, #0x1af
0xffff58257644   548  str x0, [x3, x16]
0xffff58257648   552  ldr x0, pc+552 (addr 0x0000ffff58257870)    ;; object: 0x39c04241 <undefined>
0xffff5825764c   556  movz x16, #0x1b7
0xffff58257650   560  str x0, [x3, x16]
0xffff58257654   564  ldr x0, pc+548 (addr 0x0000ffff58257878)    ;; object: 0x39c04241 <undefined>
0xffff58257658   568  movz x16, #0x1bf
0xffff5825765c   572  str x0, [x3, x16]
0xffff58257660   576  mov x0, x3
0xffff58257664   580  ret
0xffff58257668   584  sub csp, jssp, #0x10 (16)
0xffff5825766c   588  stp fp, lr, [jssp, #-16]!
0xffff58257670   592  movz fp, #0xa00000000
0xffff58257674   596  sub csp, jssp, #0x8 (8)
0xffff58257678   600  str fp, [jssp, #-8]!
0xffff5825767c   604  add fp, jssp, #0x8 (8)
0xffff58257680   608  movz x3, #0x0
0xffff58257684   612  mov x16, lr
0xffff58257688   616  ldr x17, pc+504 (addr 0x0000ffff58257880)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5825768c   620  blr x17
0xffff58257690   624  movz x0, #0x1c800000000
0xffff58257694   628  movz x10, #0x0
0xffff58257698   632  sub csp, jssp, #0x10 (16)
0xffff5825769c   636  stp x10, x0, [jssp, #-16]!
0xffff582576a0   640  movz x0, #0x2
0xffff582576a4   644  movz x1, #0x5b88
0xffff582576a8   648  movk x1, #0xe2, lsl #16
0xffff582576ac   652  ldr x16, pc+476 (addr 0x0000ffff58257888)    ;; code: STUB, CEntryStub, minor: 5
0xffff582576b0   656  blr x16
0xffff582576b4   660  str x0, [jssp, #24]
0xffff582576b8   664  ldr x16, pc+472 (addr 0x0000ffff58257890)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582576bc   668  blr x16
0xffff582576c0   672  ldr lr, [jssp, #16]
0xffff582576c4   676  ldp xzr, fp, [jssp], #24
0xffff582576c8   680  b #-0x288 (addr 0xffff58257440)
0xffff582576cc   684  58000e5f       constant pool begin (num_const = 114)    ;; constant pool
0xffff582576d0   688  d63f03e0       constant
0xffff582576d4   692  d503201f       constant
0xffff582576d8   696  32b06149       constant
0xffff582576dc   700  00000000       constant
0xffff582576e0   704  39c04519       constant
0xffff582576e4   708  00000000       constant
0xffff582576e8   712  39c04241       constant
0xffff582576ec   716  00000000       constant
0xffff582576f0   720  39c04241       constant
0xffff582576f4   724  00000000       constant
0xffff582576f8   728  39c04241       constant
0xffff582576fc   732  00000000       constant
0xffff58257700   736  39c04241       constant
0xffff58257704   740  00000000       constant
0xffff58257708   744  39c04241       constant
0xffff5825770c   748  00000000       constant
0xffff58257710   752  39c04241       constant
0xffff58257714   756  00000000       constant
0xffff58257718   760  39c04241       constant
0xffff5825771c   764  00000000       constant
0xffff58257720   768  39c04241       constant
0xffff58257724   772  00000000       constant
0xffff58257728   776  39c04241       constant
0xffff5825772c   780  00000000       constant
0xffff58257730   784  39c04241       constant
0xffff58257734   788  00000000       constant
0xffff58257738   792  39c04241       constant
0xffff5825773c   796  00000000       constant
0xffff58257740   800  39c04241       constant
0xffff58257744   804  00000000       constant
0xffff58257748   808  39c04241       constant
0xffff5825774c   812  00000000       constant
0xffff58257750   816  39c04241       constant
0xffff58257754   820  00000000       constant
0xffff58257758   824  39c04241       constant
0xffff5825775c   828  00000000       constant
0xffff58257760   832  39c04241       constant
0xffff58257764   836  00000000       constant
0xffff58257768   840  39c04241       constant
0xffff5825776c   844  00000000       constant
0xffff58257770   848  39c04241       constant
0xffff58257774   852  00000000       constant
0xffff58257778   856  39c04241       constant
0xffff5825777c   860  00000000       constant
0xffff58257780   864  39c04241       constant
0xffff58257784   868  00000000       constant
0xffff58257788   872  39c04241       constant
0xffff5825778c   876  00000000       constant
0xffff58257790   880  39c04241       constant
0xffff58257794   884  00000000       constant
0xffff58257798   888  39c04241       constant
0xffff5825779c   892  00000000       constant
0xffff582577a0   896  39c04241       constant
0xffff582577a4   900  00000000       constant
0xffff582577a8   904  39c04241       constant
0xffff582577ac   908  00000000       constant
0xffff582577b0   912  39c04241       constant
0xffff582577b4   916  00000000       constant
0xffff582577b8   920  39c04241       constant
0xffff582577bc   924  00000000       constant
0xffff582577c0   928  39c04241       constant
0xffff582577c4   932  00000000       constant
0xffff582577c8   936  39c04241       constant
0xffff582577cc   940  00000000       constant
0xffff582577d0   944  39c04241       constant
0xffff582577d4   948  00000000       constant
0xffff582577d8   952  39c04241       constant
0xffff582577dc   956  00000000       constant
0xffff582577e0   960  39c04241       constant
0xffff582577e4   964  00000000       constant
0xffff582577e8   968  39c04241       constant
0xffff582577ec   972  00000000       constant
0xffff582577f0   976  39c04241       constant
0xffff582577f4   980  00000000       constant
0xffff582577f8   984  39c04241       constant
0xffff582577fc   988  00000000       constant
0xffff58257800   992  39c04241       constant
0xffff58257804   996  00000000       constant
0xffff58257808  1000  39c04241       constant
0xffff5825780c  1004  00000000       constant
0xffff58257810  1008  39c04241       constant
0xffff58257814  1012  00000000       constant
0xffff58257818  1016  39c04241       constant
0xffff5825781c  1020  00000000       constant
0xffff58257820  1024  39c04241       constant
0xffff58257824  1028  00000000       constant
0xffff58257828  1032  39c04241       constant
0xffff5825782c  1036  00000000       constant
0xffff58257830  1040  39c04241       constant
0xffff58257834  1044  00000000       constant
0xffff58257838  1048  39c04241       constant
0xffff5825783c  1052  00000000       constant
0xffff58257840  1056  39c04241       constant
0xffff58257844  1060  00000000       constant
0xffff58257848  1064  39c04241       constant
0xffff5825784c  1068  00000000       constant
0xffff58257850  1072  39c04241       constant
0xffff58257854  1076  00000000       constant
0xffff58257858  1080  39c04241       constant
0xffff5825785c  1084  00000000       constant
0xffff58257860  1088  39c04241       constant
0xffff58257864  1092  00000000       constant
0xffff58257868  1096  39c04241       constant
0xffff5825786c  1100  00000000       constant
0xffff58257870  1104  39c04241       constant
0xffff58257874  1108  00000000       constant
0xffff58257878  1112  39c04241       constant
0xffff5825787c  1116  00000000       constant
0xffff58257880  1120  58206820       constant
0xffff58257884  1124  0000ffff       constant
0xffff58257888  1128  58206260       constant
0xffff5825788c  1132  0000ffff       constant
0xffff58257890  1136  582068e0       constant
0xffff58257894  1140  0000ffff       constant


Safepoints (size = 21)
0xffff582576b4   660  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 62)
0xffff58257440  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58257458  embedded object  (0x39c04519 <the hole>)
0xffff58257468  embedded object  (0x39c04241 <undefined>)
0xffff58257470  embedded object  (0x39c04241 <undefined>)
0xffff58257478  embedded object  (0x39c04241 <undefined>)
0xffff58257480  embedded object  (0x39c04241 <undefined>)
0xffff58257488  embedded object  (0x39c04241 <undefined>)
0xffff58257490  embedded object  (0x39c04241 <undefined>)
0xffff58257498  embedded object  (0x39c04241 <undefined>)
0xffff582574a0  embedded object  (0x39c04241 <undefined>)
0xffff582574a8  embedded object  (0x39c04241 <undefined>)
0xffff582574b0  embedded object  (0x39c04241 <undefined>)
0xffff582574b8  embedded object  (0x39c04241 <undefined>)
0xffff582574c0  embedded object  (0x39c04241 <undefined>)
0xffff582574c8  embedded object  (0x39c04241 <undefined>)
0xffff582574d0  embedded object  (0x39c04241 <undefined>)
0xffff582574d8  embedded object  (0x39c04241 <undefined>)
0xffff582574e0  embedded object  (0x39c04241 <undefined>)
0xffff582574e8  embedded object  (0x39c04241 <undefined>)
0xffff582574f0  embedded object  (0x39c04241 <undefined>)
0xffff582574f8  embedded object  (0x39c04241 <undefined>)
0xffff58257500  embedded object  (0x39c04241 <undefined>)
0xffff58257508  embedded object  (0x39c04241 <undefined>)
0xffff58257510  embedded object  (0x39c04241 <undefined>)
0xffff58257518  embedded object  (0x39c04241 <undefined>)
0xffff58257520  embedded object  (0x39c04241 <undefined>)
0xffff58257528  embedded object  (0x39c04241 <undefined>)
0xffff58257530  embedded object  (0x39c04241 <undefined>)
0xffff58257538  embedded object  (0x39c04241 <undefined>)
0xffff58257540  embedded object  (0x39c04241 <undefined>)
0xffff5825754c  embedded object  (0x39c04241 <undefined>)
0xffff58257558  embedded object  (0x39c04241 <undefined>)
0xffff58257564  embedded object  (0x39c04241 <undefined>)
0xffff58257570  embedded object  (0x39c04241 <undefined>)
0xffff5825757c  embedded object  (0x39c04241 <undefined>)
0xffff58257588  embedded object  (0x39c04241 <undefined>)
0xffff58257594  embedded object  (0x39c04241 <undefined>)
0xffff582575a0  embedded object  (0x39c04241 <undefined>)
0xffff582575ac  embedded object  (0x39c04241 <undefined>)
0xffff582575b8  embedded object  (0x39c04241 <undefined>)
0xffff582575c4  embedded object  (0x39c04241 <undefined>)
0xffff582575d0  embedded object  (0x39c04241 <undefined>)
0xffff582575dc  embedded object  (0x39c04241 <undefined>)
0xffff582575e8  embedded object  (0x39c04241 <undefined>)
0xffff582575f4  embedded object  (0x39c04241 <undefined>)
0xffff58257600  embedded object  (0x39c04241 <undefined>)
0xffff5825760c  embedded object  (0x39c04241 <undefined>)
0xffff58257618  embedded object  (0x39c04241 <undefined>)
0xffff58257624  embedded object  (0x39c04241 <undefined>)
0xffff58257630  embedded object  (0x39c04241 <undefined>)
0xffff5825763c  embedded object  (0x39c04241 <undefined>)
0xffff58257648  embedded object  (0x39c04241 <undefined>)
0xffff58257654  embedded object  (0x39c04241 <undefined>)
0xffff58257688  code target (STUB)  (0xffff58206820)
0xffff582576ac  code target (STUB)  (0xffff58206260)
0xffff582576b8  code target (STUB)  (0xffff582068e0)
0xffff582576cc  constant pool (size 460)


kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff58259c60     0  mov x6, x0
0xffff58259c64     4  tbnz w6, #0, #+0x5c (addr 0xffff58259cc0)
0xffff58259c68     8  ldur x3, [x1, #7]
0xffff58259c6c    12  stur x6, [x3, #23]
0xffff58259c70    16  stur x5, [x1, #-1]
0xffff58259c74    20  tbz w5, #0, #+0x34 (addr 0xffff58259ca8)
0xffff58259c78    24  sub x2, x1, #0x1 (1)
0xffff58259c7c    28  and x5, x5, #0xfffffffffff00000
0xffff58259c80    32  ldr x5, [x5, #8]
0xffff58259c84    36  tbz w5, #1, #+0x24 (addr 0xffff58259ca8)
0xffff58259c88    40  and x5, x1, #0xfffffffffff00000
0xffff58259c8c    44  ldr x5, [x5, #8]
0xffff58259c90    48  tbz w5, #2, #+0x18 (addr 0xffff58259ca8)
0xffff58259c94    52  sub csp, jssp, #0x8 (8)
0xffff58259c98    56  str lr, [jssp, #-8]!
0xffff58259c9c    60  ldr x16, pc+28 (addr 0x0000ffff58259cb8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff58259ca0    64  blr x16
0xffff58259ca4    68  ldr lr, [jssp], #8
0xffff58259ca8    72  ret
0xffff58259cac    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58259cb0    80  d63f03e0       constant
0xffff58259cb4    84  d503201f       constant
0xffff58259cb8    88  58238080       constant
0xffff58259cbc    92  0000ffff       constant
0xffff58259cc0    96  movz x16, #0x0
0xffff58259cc4   100  sub csp, jssp, #0x10 (16)
0xffff58259cc8   104  stp fp, lr, [jssp, #-16]!
0xffff58259ccc   108  bl #+0x4 (addr 0xffff58259cd0)
0xffff58259cd0   112  movz x17, #0xa00000000
0xffff58259cd4   116  sub csp, jssp, #0x10 (16)
0xffff58259cd8   120  stp x17, cp, [jssp, #-16]!
0xffff58259cdc   124  add fp, jssp, #0x10 (16)
0xffff58259ce0   128  ldr x17, pc+24 (addr 0x0000ffff58259cf8)    ;; lazy deoptimization bailout 0
0xffff58259ce4   132  add x17, x17, x16
0xffff58259ce8   136  br x17
0xffff58259cec   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58259cf0   144  d63f03e0       constant
0xffff58259cf4   148  d503201f       constant
0xffff58259cf8   152  58006000       constant
0xffff58259cfc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff58259c9c  code target (STUB)  (0xffff58238080)
0xffff58259cac  constant pool (size 20)
0xffff58259ce0  runtime entry
0xffff58259cec  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = update
compiler = unknown
Instructions (size = 128)
0xffff58259d80     0  sub csp, jssp, #0x8 (8)
0xffff58259d84     4  str x3, [jssp, #-8]!
0xffff58259d88     8  sub csp, jssp, #0x8 (8)
0xffff58259d8c    12  str x4, [jssp, #-8]!
0xffff58259d90    16  ldr x5, pc+72 (addr 0x0000ffff58259dd8)    ;; object: 0x39c88701 WeakCell for 0x32b10d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58259d94    20  ldur x5, [x5, #7]
0xffff58259d98    24  tbz w5, #0, #+0x20 (addr 0xffff58259db8)
0xffff58259d9c    28  ldursw x4, [x5, #15]
0xffff58259da0    32  tbnz w4, #23, #+0x18 (addr 0xffff58259db8)
0xffff58259da4    36  ldr x4, [jssp], #8
0xffff58259da8    40  ldr x3, [jssp], #8
0xffff58259dac    44  ldr x2, pc+52 (addr 0x0000ffff58259de0)    ;; object: 0x39c83a31 <String[6]: update>
0xffff58259db0    48  ldr x16, pc+56 (addr 0x0000ffff58259de8)    ;; code: HANDLER, StoreTransitionStub, minor: 172035
0xffff58259db4    52  br x16
0xffff58259db8    56  ldr x2, pc+56 (addr 0x0000ffff58259df0)    ;; object: 0x39c83a31 <String[6]: update>
0xffff58259dbc    60  ldr x4, [jssp], #8
0xffff58259dc0    64  ldr x3, [jssp], #8
0xffff58259dc4    68  ldr x16, pc+52 (addr 0x0000ffff58259df8)    ;; code: BUILTIN
0xffff58259dc8    72  br x16
0xffff58259dcc    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff58259dd0    80  d63f03e0       constant
0xffff58259dd4    84  d503201f       constant
0xffff58259dd8    88  39c88701       constant
0xffff58259ddc    92  00000000       constant
0xffff58259de0    96  39c83a31       constant
0xffff58259de4   100  00000000       constant
0xffff58259de8   104  58259c60       constant
0xffff58259dec   108  0000ffff       constant
0xffff58259df0   112  39c83a31       constant
0xffff58259df4   116  00000000       constant
0xffff58259df8   120  58222420       constant
0xffff58259dfc   124  0000ffff       constant


RelocInfo (size = 11)
0xffff58259d90  embedded object  (0x39c88701 WeakCell for 0x32b10d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58259dac  embedded object  (0x39c83a31 <String[6]: update>)
0xffff58259db0  code target (HANDLER)  (0xffff58259c60)
0xffff58259db8  embedded object  (0x39c83a31 <String[6]: update>)
0xffff58259dc4  code target (BUILTIN)  (0xffff58222420)
0xffff58259dcc  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff58259e60     0  mov x6, x0
0xffff58259e64     4  tbnz w6, #0, #+0x5c (addr 0xffff58259ec0)
0xffff58259e68     8  ldur x3, [x1, #7]
0xffff58259e6c    12  stur x6, [x3, #31]
0xffff58259e70    16  stur x5, [x1, #-1]
0xffff58259e74    20  tbz w5, #0, #+0x34 (addr 0xffff58259ea8)
0xffff58259e78    24  sub x2, x1, #0x1 (1)
0xffff58259e7c    28  and x5, x5, #0xfffffffffff00000
0xffff58259e80    32  ldr x5, [x5, #8]
0xffff58259e84    36  tbz w5, #1, #+0x24 (addr 0xffff58259ea8)
0xffff58259e88    40  and x5, x1, #0xfffffffffff00000
0xffff58259e8c    44  ldr x5, [x5, #8]
0xffff58259e90    48  tbz w5, #2, #+0x18 (addr 0xffff58259ea8)
0xffff58259e94    52  sub csp, jssp, #0x8 (8)
0xffff58259e98    56  str lr, [jssp, #-8]!
0xffff58259e9c    60  ldr x16, pc+28 (addr 0x0000ffff58259eb8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff58259ea0    64  blr x16
0xffff58259ea4    68  ldr lr, [jssp], #8
0xffff58259ea8    72  ret
0xffff58259eac    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58259eb0    80  d63f03e0       constant
0xffff58259eb4    84  d503201f       constant
0xffff58259eb8    88  58238080       constant
0xffff58259ebc    92  0000ffff       constant
0xffff58259ec0    96  movz x16, #0x0
0xffff58259ec4   100  sub csp, jssp, #0x10 (16)
0xffff58259ec8   104  stp fp, lr, [jssp, #-16]!
0xffff58259ecc   108  bl #+0x4 (addr 0xffff58259ed0)
0xffff58259ed0   112  movz x17, #0xa00000000
0xffff58259ed4   116  sub csp, jssp, #0x10 (16)
0xffff58259ed8   120  stp x17, cp, [jssp, #-16]!
0xffff58259edc   124  add fp, jssp, #0x10 (16)
0xffff58259ee0   128  ldr x17, pc+24 (addr 0x0000ffff58259ef8)    ;; lazy deoptimization bailout 0
0xffff58259ee4   132  add x17, x17, x16
0xffff58259ee8   136  br x17
0xffff58259eec   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58259ef0   144  d63f03e0       constant
0xffff58259ef4   148  d503201f       constant
0xffff58259ef8   152  58006000       constant
0xffff58259efc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff58259e9c  code target (STUB)  (0xffff58238080)
0xffff58259eac  constant pool (size 20)
0xffff58259ee0  runtime entry
0xffff58259eec  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = delete
compiler = unknown
Instructions (size = 128)
0xffff58259f80     0  sub csp, jssp, #0x8 (8)
0xffff58259f84     4  str x3, [jssp, #-8]!
0xffff58259f88     8  sub csp, jssp, #0x8 (8)
0xffff58259f8c    12  str x4, [jssp, #-8]!
0xffff58259f90    16  ldr x5, pc+72 (addr 0x0000ffff58259fd8)    ;; object: 0x39c88809 WeakCell for 0x32b10dd9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58259f94    20  ldur x5, [x5, #7]
0xffff58259f98    24  tbz w5, #0, #+0x20 (addr 0xffff58259fb8)
0xffff58259f9c    28  ldursw x4, [x5, #15]
0xffff58259fa0    32  tbnz w4, #23, #+0x18 (addr 0xffff58259fb8)
0xffff58259fa4    36  ldr x4, [jssp], #8
0xffff58259fa8    40  ldr x3, [jssp], #8
0xffff58259fac    44  ldr x2, pc+52 (addr 0x0000ffff58259fe0)    ;; object: 0x39c83a51 <String[6]: delete>
0xffff58259fb0    48  ldr x16, pc+56 (addr 0x0000ffff58259fe8)    ;; code: HANDLER, StoreTransitionStub, minor: 172036
0xffff58259fb4    52  br x16
0xffff58259fb8    56  ldr x2, pc+56 (addr 0x0000ffff58259ff0)    ;; object: 0x39c83a51 <String[6]: delete>
0xffff58259fbc    60  ldr x4, [jssp], #8
0xffff58259fc0    64  ldr x3, [jssp], #8
0xffff58259fc4    68  ldr x16, pc+52 (addr 0x0000ffff58259ff8)    ;; code: BUILTIN
0xffff58259fc8    72  br x16
0xffff58259fcc    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff58259fd0    80  d63f03e0       constant
0xffff58259fd4    84  d503201f       constant
0xffff58259fd8    88  39c88809       constant
0xffff58259fdc    92  00000000       constant
0xffff58259fe0    96  39c83a51       constant
0xffff58259fe4   100  00000000       constant
0xffff58259fe8   104  58259e60       constant
0xffff58259fec   108  0000ffff       constant
0xffff58259ff0   112  39c83a51       constant
0xffff58259ff4   116  00000000       constant
0xffff58259ff8   120  58222420       constant
0xffff58259ffc   124  0000ffff       constant


RelocInfo (size = 11)
0xffff58259f90  embedded object  (0x39c88809 WeakCell for 0x32b10dd9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58259fac  embedded object  (0x39c83a51 <String[6]: delete>)
0xffff58259fb0  code target (HANDLER)  (0xffff58259e60)
0xffff58259fb8  embedded object  (0x39c83a51 <String[6]: delete>)
0xffff58259fc4  code target (BUILTIN)  (0xffff58222420)
0xffff58259fcc  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 549)
0xffff5825a060     0  ldur x6, [x1, #7]
0xffff5825a064     4  ldur w7, [x6, #11]
0xffff5825a068     8  adds w8, w7, #0x3 (3)
0xffff5825a06c    12  b.vs #+0x1a4 (addr 0xffff5825a210)
0xffff5825a070    16  movz w16, #0x95ff
0xffff5825a074    20  cmp w8, w16, lsl #1
0xffff5825a078    24  b.hs #+0x1a8 (addr 0xffff5825a220)
0xffff5825a07c    28  lsl x9, x8, #32
0xffff5825a080    32  lsl w10, w8, #3
0xffff5825a084    36  add w10, w10, #0x10 (16)
0xffff5825a088    40  sxtw x10, w10
0xffff5825a08c    44  movz x11, #0x92c0
0xffff5825a090    48  movk x11, #0x16e7, lsl #16
0xffff5825a094    52  ldp x13, x16, [x11]
0xffff5825a098    56  adds x12, x13, x10
0xffff5825a09c    60  ccmp x12, x16, #nzCv, lo
0xffff5825a0a0    64  b.hi #+0xc8 (addr 0xffff5825a168)
0xffff5825a0a4    68  str x12, [x11]
0xffff5825a0a8    72  orr x13, x13, #0x1
0xffff5825a0ac    76  ldr x10, pc+300 (addr 0x0000ffff5825a1d8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5825a0b0    80  stur x10, [x13, #-1]
0xffff5825a0b4    84  stur x9, [x13, #7]
0xffff5825a0b8    88  cmp w7, w8
0xffff5825a0bc    92  b.ge #+0x18 (addr 0xffff5825a0d4)
0xffff5825a0c0    96  sub w8, w8, #0x1 (1)
0xffff5825a0c4   100  ldr x9, pc+284 (addr 0x0000ffff5825a1e0)    ;; object: 0x39c04241 <undefined>
0xffff5825a0c8   104  add x10, x13, #0xf (15)
0xffff5825a0cc   108  str x9, [x10, w8, sxtw #3]
0xffff5825a0d0   112  b #-0x18 (addr 0xffff5825a0b8)
0xffff5825a0d4   116  cmp w7, #0x0 (0)
0xffff5825a0d8   120  b.le #+0x1c (addr 0xffff5825a0f4)
0xffff5825a0dc   124  sub w7, w7, #0x1 (1)
0xffff5825a0e0   128  add x8, x6, #0xf (15)
0xffff5825a0e4   132  ldr x9, [x8, w7, sxtw #3]
0xffff5825a0e8   136  add x8, x13, #0xf (15)
0xffff5825a0ec   140  str x9, [x8, w7, sxtw #3]
0xffff5825a0f0   144  b #-0x1c (addr 0xffff5825a0d4)
0xffff5825a0f4   148  stur x13, [x1, #7]
0xffff5825a0f8   152  add x6, x1, #0x7 (7)
0xffff5825a0fc   156  and x13, x1, #0xfffffffffff00000
0xffff5825a100   160  ldr x13, [x13, #8]
0xffff5825a104   164  tbz w13, #2, #+0x18 (addr 0xffff5825a11c)
0xffff5825a108   168  sub csp, jssp, #0x8 (8)
0xffff5825a10c   172  str lr, [jssp, #-8]!
0xffff5825a110   176  ldr x16, pc+216 (addr 0x0000ffff5825a1e8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff5825a114   180  blr x16
0xffff5825a118   184  ldr lr, [jssp], #8
0xffff5825a11c   188  mov x6, x0
0xffff5825a120   192  tbnz w6, #0, #+0x110 (addr 0xffff5825a230)
0xffff5825a124   196  ldur x3, [x1, #7]
0xffff5825a128   200  stur x6, [x3, #39]
0xffff5825a12c   204  stur x5, [x1, #-1]
0xffff5825a130   208  tbz w5, #0, #+0x34 (addr 0xffff5825a164)
0xffff5825a134   212  sub x2, x1, #0x1 (1)
0xffff5825a138   216  and x5, x5, #0xfffffffffff00000
0xffff5825a13c   220  ldr x5, [x5, #8]
0xffff5825a140   224  tbz w5, #1, #+0x24 (addr 0xffff5825a164)
0xffff5825a144   228  and x5, x1, #0xfffffffffff00000
0xffff5825a148   232  ldr x5, [x5, #8]
0xffff5825a14c   236  tbz w5, #2, #+0x18 (addr 0xffff5825a164)
0xffff5825a150   240  sub csp, jssp, #0x8 (8)
0xffff5825a154   244  str lr, [jssp, #-8]!
0xffff5825a158   248  ldr x16, pc+152 (addr 0x0000ffff5825a1f0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5825a15c   252  blr x16
0xffff5825a160   256  ldr lr, [jssp], #8
0xffff5825a164   260  ret
0xffff5825a168   264  sub csp, jssp, #0x10 (16)
0xffff5825a16c   268  stp fp, lr, [jssp, #-16]!
0xffff5825a170   272  movz fp, #0xa00000000
0xffff5825a174   276  sub csp, jssp, #0x8 (8)
0xffff5825a178   280  str fp, [jssp, #-8]!
0xffff5825a17c   284  add fp, jssp, #0x8 (8)
0xffff5825a180   288  movz x13, #0x0
0xffff5825a184   292  mov x16, lr
0xffff5825a188   296  ldr x17, pc+112 (addr 0x0000ffff5825a1f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5825a18c   300  blr x17
0xffff5825a190   304  lsl x0, x10, #32
0xffff5825a194   308  movz x10, #0x0
0xffff5825a198   312  sub csp, jssp, #0x10 (16)
0xffff5825a19c   316  stp x10, x0, [jssp, #-16]!
0xffff5825a1a0   320  movz x0, #0x2
0xffff5825a1a4   324  movz x1, #0x5b88
0xffff5825a1a8   328  movk x1, #0xe2, lsl #16
0xffff5825a1ac   332  ldr x16, pc+84 (addr 0x0000ffff5825a200)    ;; code: STUB, CEntryStub, minor: 5
0xffff5825a1b0   336  blr x16
0xffff5825a1b4   340  str x0, [jssp, #104]
0xffff5825a1b8   344  ldr x16, pc+80 (addr 0x0000ffff5825a208)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5825a1bc   348  blr x16
0xffff5825a1c0   352  ldr lr, [jssp, #16]
0xffff5825a1c4   356  ldp xzr, fp, [jssp], #24
0xffff5825a1c8   360  b #-0x11c (addr 0xffff5825a0ac)
0xffff5825a1cc   364  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff5825a1d0   368  d63f03e0       constant
0xffff5825a1d4   372  d503201f       constant
0xffff5825a1d8   376  32b04259       constant
0xffff5825a1dc   380  00000000       constant
0xffff5825a1e0   384  39c04241       constant
0xffff5825a1e4   388  00000000       constant
0xffff5825a1e8   392  582370c0       constant
0xffff5825a1ec   396  0000ffff       constant
0xffff5825a1f0   400  58238080       constant
0xffff5825a1f4   404  0000ffff       constant
0xffff5825a1f8   408  58206820       constant
0xffff5825a1fc   412  0000ffff       constant
0xffff5825a200   416  58206260       constant
0xffff5825a204   420  0000ffff       constant
0xffff5825a208   424  582068e0       constant
0xffff5825a20c   428  0000ffff       constant
0xffff5825a210   432  movz x16, #0x0
0xffff5825a214   436  sub csp, jssp, #0x10 (16)
0xffff5825a218   440  stp fp, lr, [jssp, #-16]!
0xffff5825a21c   444  bl #+0x24 (addr 0xffff5825a240)
0xffff5825a220   448  movz x16, #0x8
0xffff5825a224   452  sub csp, jssp, #0x10 (16)
0xffff5825a228   456  stp fp, lr, [jssp, #-16]!
0xffff5825a22c   460  bl #+0x14 (addr 0xffff5825a240)
0xffff5825a230   464  movz x16, #0x10
0xffff5825a234   468  sub csp, jssp, #0x10 (16)
0xffff5825a238   472  stp fp, lr, [jssp, #-16]!
0xffff5825a23c   476  bl #+0x4 (addr 0xffff5825a240)
0xffff5825a240   480  movz x17, #0xa00000000
0xffff5825a244   484  sub csp, jssp, #0x10 (16)
0xffff5825a248   488  stp x17, cp, [jssp, #-16]!
0xffff5825a24c   492  add fp, jssp, #0x10 (16)
0xffff5825a250   496  ldr x17, pc+24 (addr 0x0000ffff5825a268)    ;; lazy deoptimization bailout 0
0xffff5825a254   500  add x17, x17, x16
0xffff5825a258   504  br x17
0xffff5825a25c   508  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5825a260   512  d63f03e0       constant
0xffff5825a264   516  d503201f       constant
0xffff5825a268   520  58006000       constant
0xffff5825a26c   524  0000ffff       constant


Safepoints (size = 21)
0xffff5825a1b4   340  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff5825a0ac  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5825a0c4  embedded object  (0x39c04241 <undefined>)
0xffff5825a110  code target (STUB)  (0xffff582370c0)
0xffff5825a158  code target (STUB)  (0xffff58238080)
0xffff5825a188  code target (STUB)  (0xffff58206820)
0xffff5825a1ac  code target (STUB)  (0xffff58206260)
0xffff5825a1b8  code target (STUB)  (0xffff582068e0)
0xffff5825a1cc  constant pool (size 68)
0xffff5825a250  runtime entry
0xffff5825a25c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = setPrototype
compiler = unknown
Instructions (size = 128)
0xffff5825a300     0  sub csp, jssp, #0x8 (8)
0xffff5825a304     4  str x3, [jssp, #-8]!
0xffff5825a308     8  sub csp, jssp, #0x8 (8)
0xffff5825a30c    12  str x4, [jssp, #-8]!
0xffff5825a310    16  ldr x5, pc+72 (addr 0x0000ffff5825a358)    ;; object: 0x39c88911 WeakCell for 0x32b10e31 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5825a314    20  ldur x5, [x5, #7]
0xffff5825a318    24  tbz w5, #0, #+0x20 (addr 0xffff5825a338)
0xffff5825a31c    28  ldursw x4, [x5, #15]
0xffff5825a320    32  tbnz w4, #23, #+0x18 (addr 0xffff5825a338)
0xffff5825a324    36  ldr x4, [jssp], #8
0xffff5825a328    40  ldr x3, [jssp], #8
0xffff5825a32c    44  ldr x2, pc+52 (addr 0x0000ffff5825a360)    ;; object: 0x39c83a71 <String[12]: setPrototype>
0xffff5825a330    48  ldr x16, pc+56 (addr 0x0000ffff5825a368)    ;; code: HANDLER, StoreTransitionStub, minor: 303109
0xffff5825a334    52  br x16
0xffff5825a338    56  ldr x2, pc+56 (addr 0x0000ffff5825a370)    ;; object: 0x39c83a71 <String[12]: setPrototype>
0xffff5825a33c    60  ldr x4, [jssp], #8
0xffff5825a340    64  ldr x3, [jssp], #8
0xffff5825a344    68  ldr x16, pc+52 (addr 0x0000ffff5825a378)    ;; code: BUILTIN
0xffff5825a348    72  br x16
0xffff5825a34c    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff5825a350    80  d63f03e0       constant
0xffff5825a354    84  d503201f       constant
0xffff5825a358    88  39c88911       constant
0xffff5825a35c    92  00000000       constant
0xffff5825a360    96  39c83a71       constant
0xffff5825a364   100  00000000       constant
0xffff5825a368   104  5825a060       constant
0xffff5825a36c   108  0000ffff       constant
0xffff5825a370   112  39c83a71       constant
0xffff5825a374   116  00000000       constant
0xffff5825a378   120  58222420       constant
0xffff5825a37c   124  0000ffff       constant


RelocInfo (size = 11)
0xffff5825a310  embedded object  (0x39c88911 WeakCell for 0x32b10e31 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5825a32c  embedded object  (0x39c83a71 <String[12]: setPrototype>)
0xffff5825a330  code target (HANDLER)  (0xffff5825a060)
0xffff5825a338  embedded object  (0x39c83a71 <String[12]: setPrototype>)
0xffff5825a344  code target (BUILTIN)  (0xffff58222420)
0xffff5825a34c  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff5825a3e0     0  mov x6, x0
0xffff5825a3e4     4  tbnz w6, #0, #+0x5c (addr 0xffff5825a440)
0xffff5825a3e8     8  ldur x3, [x1, #7]
0xffff5825a3ec    12  stur x6, [x3, #47]
0xffff5825a3f0    16  stur x5, [x1, #-1]
0xffff5825a3f4    20  tbz w5, #0, #+0x34 (addr 0xffff5825a428)
0xffff5825a3f8    24  sub x2, x1, #0x1 (1)
0xffff5825a3fc    28  and x5, x5, #0xfffffffffff00000
0xffff5825a400    32  ldr x5, [x5, #8]
0xffff5825a404    36  tbz w5, #1, #+0x24 (addr 0xffff5825a428)
0xffff5825a408    40  and x5, x1, #0xfffffffffff00000
0xffff5825a40c    44  ldr x5, [x5, #8]
0xffff5825a410    48  tbz w5, #2, #+0x18 (addr 0xffff5825a428)
0xffff5825a414    52  sub csp, jssp, #0x8 (8)
0xffff5825a418    56  str lr, [jssp, #-8]!
0xffff5825a41c    60  ldr x16, pc+28 (addr 0x0000ffff5825a438)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5825a420    64  blr x16
0xffff5825a424    68  ldr lr, [jssp], #8
0xffff5825a428    72  ret
0xffff5825a42c    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5825a430    80  d63f03e0       constant
0xffff5825a434    84  d503201f       constant
0xffff5825a438    88  58238080       constant
0xffff5825a43c    92  0000ffff       constant
0xffff5825a440    96  movz x16, #0x0
0xffff5825a444   100  sub csp, jssp, #0x10 (16)
0xffff5825a448   104  stp fp, lr, [jssp, #-16]!
0xffff5825a44c   108  bl #+0x4 (addr 0xffff5825a450)
0xffff5825a450   112  movz x17, #0xa00000000
0xffff5825a454   116  sub csp, jssp, #0x10 (16)
0xffff5825a458   120  stp x17, cp, [jssp, #-16]!
0xffff5825a45c   124  add fp, jssp, #0x10 (16)
0xffff5825a460   128  ldr x17, pc+24 (addr 0x0000ffff5825a478)    ;; lazy deoptimization bailout 0
0xffff5825a464   132  add x17, x17, x16
0xffff5825a468   136  br x17
0xffff5825a46c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5825a470   144  d63f03e0       constant
0xffff5825a474   148  d503201f       constant
0xffff5825a478   152  58006000       constant
0xffff5825a47c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff5825a41c  code target (STUB)  (0xffff58238080)
0xffff5825a42c  constant pool (size 20)
0xffff5825a460  runtime entry
0xffff5825a46c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = reconfigure
compiler = unknown
Instructions (size = 128)
0xffff5825a500     0  sub csp, jssp, #0x8 (8)
0xffff5825a504     4  str x3, [jssp, #-8]!
0xffff5825a508     8  sub csp, jssp, #0x8 (8)
0xffff5825a50c    12  str x4, [jssp, #-8]!
0xffff5825a510    16  ldr x5, pc+72 (addr 0x0000ffff5825a558)    ;; object: 0x39c88a91 WeakCell for 0x32b10e89 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5825a514    20  ldur x5, [x5, #7]
0xffff5825a518    24  tbz w5, #0, #+0x20 (addr 0xffff5825a538)
0xffff5825a51c    28  ldursw x4, [x5, #15]
0xffff5825a520    32  tbnz w4, #23, #+0x18 (addr 0xffff5825a538)
0xffff5825a524    36  ldr x4, [jssp], #8
0xffff5825a528    40  ldr x3, [jssp], #8
0xffff5825a52c    44  ldr x2, pc+52 (addr 0x0000ffff5825a560)    ;; object: 0x39c83a99 <String[11]: reconfigure>
0xffff5825a530    48  ldr x16, pc+56 (addr 0x0000ffff5825a568)    ;; code: HANDLER, StoreTransitionStub, minor: 172038
0xffff5825a534    52  br x16
0xffff5825a538    56  ldr x2, pc+56 (addr 0x0000ffff5825a570)    ;; object: 0x39c83a99 <String[11]: reconfigure>
0xffff5825a53c    60  ldr x4, [jssp], #8
0xffff5825a540    64  ldr x3, [jssp], #8
0xffff5825a544    68  ldr x16, pc+52 (addr 0x0000ffff5825a578)    ;; code: BUILTIN
0xffff5825a548    72  br x16
0xffff5825a54c    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff5825a550    80  d63f03e0       constant
0xffff5825a554    84  d503201f       constant
0xffff5825a558    88  39c88a91       constant
0xffff5825a55c    92  00000000       constant
0xffff5825a560    96  39c83a99       constant
0xffff5825a564   100  00000000       constant
0xffff5825a568   104  5825a3e0       constant
0xffff5825a56c   108  0000ffff       constant
0xffff5825a570   112  39c83a99       constant
0xffff5825a574   116  00000000       constant
0xffff5825a578   120  58222420       constant
0xffff5825a57c   124  0000ffff       constant


RelocInfo (size = 11)
0xffff5825a510  embedded object  (0x39c88a91 WeakCell for 0x32b10e89 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5825a52c  embedded object  (0x39c83a99 <String[11]: reconfigure>)
0xffff5825a530  code target (HANDLER)  (0xffff5825a3e0)
0xffff5825a538  embedded object  (0x39c83a99 <String[11]: reconfigure>)
0xffff5825a544  code target (BUILTIN)  (0xffff58222420)
0xffff5825a54c  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff5825a5e0     0  mov x6, x0
0xffff5825a5e4     4  tbnz w6, #0, #+0x5c (addr 0xffff5825a640)
0xffff5825a5e8     8  ldur x3, [x1, #7]
0xffff5825a5ec    12  stur x6, [x3, #55]
0xffff5825a5f0    16  stur x5, [x1, #-1]
0xffff5825a5f4    20  tbz w5, #0, #+0x34 (addr 0xffff5825a628)
0xffff5825a5f8    24  sub x2, x1, #0x1 (1)
0xffff5825a5fc    28  and x5, x5, #0xfffffffffff00000
0xffff5825a600    32  ldr x5, [x5, #8]
0xffff5825a604    36  tbz w5, #1, #+0x24 (addr 0xffff5825a628)
0xffff5825a608    40  and x5, x1, #0xfffffffffff00000
0xffff5825a60c    44  ldr x5, [x5, #8]
0xffff5825a610    48  tbz w5, #2, #+0x18 (addr 0xffff5825a628)
0xffff5825a614    52  sub csp, jssp, #0x8 (8)
0xffff5825a618    56  str lr, [jssp, #-8]!
0xffff5825a61c    60  ldr x16, pc+28 (addr 0x0000ffff5825a638)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5825a620    64  blr x16
0xffff5825a624    68  ldr lr, [jssp], #8
0xffff5825a628    72  ret
0xffff5825a62c    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5825a630    80  d63f03e0       constant
0xffff5825a634    84  d503201f       constant
0xffff5825a638    88  58238080       constant
0xffff5825a63c    92  0000ffff       constant
0xffff5825a640    96  movz x16, #0x0
0xffff5825a644   100  sub csp, jssp, #0x10 (16)
0xffff5825a648   104  stp fp, lr, [jssp, #-16]!
0xffff5825a64c   108  bl #+0x4 (addr 0xffff5825a650)
0xffff5825a650   112  movz x17, #0xa00000000
0xffff5825a654   116  sub csp, jssp, #0x10 (16)
0xffff5825a658   120  stp x17, cp, [jssp, #-16]!
0xffff5825a65c   124  add fp, jssp, #0x10 (16)
0xffff5825a660   128  ldr x17, pc+24 (addr 0x0000ffff5825a678)    ;; lazy deoptimization bailout 0
0xffff5825a664   132  add x17, x17, x16
0xffff5825a668   136  br x17
0xffff5825a66c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5825a670   144  d63f03e0       constant
0xffff5825a674   148  d503201f       constant
0xffff5825a678   152  58006000       constant
0xffff5825a67c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff5825a61c  code target (STUB)  (0xffff58238080)
0xffff5825a62c  constant pool (size 20)
0xffff5825a660  runtime entry
0xffff5825a66c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = preventExtensions
compiler = unknown
Instructions (size = 128)
0xffff5825a700     0  sub csp, jssp, #0x8 (8)
0xffff5825a704     4  str x3, [jssp, #-8]!
0xffff5825a708     8  sub csp, jssp, #0x8 (8)
0xffff5825a70c    12  str x4, [jssp, #-8]!
0xffff5825a710    16  ldr x5, pc+72 (addr 0x0000ffff5825a758)    ;; object: 0x39c88b99 WeakCell for 0x32b10ee1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5825a714    20  ldur x5, [x5, #7]
0xffff5825a718    24  tbz w5, #0, #+0x20 (addr 0xffff5825a738)
0xffff5825a71c    28  ldursw x4, [x5, #15]
0xffff5825a720    32  tbnz w4, #23, #+0x18 (addr 0xffff5825a738)
0xffff5825a724    36  ldr x4, [jssp], #8
0xffff5825a728    40  ldr x3, [jssp], #8
0xffff5825a72c    44  ldr x2, pc+52 (addr 0x0000ffff5825a760)    ;; object: 0x39c052d1 <String[17]: preventExtensions>
0xffff5825a730    48  ldr x16, pc+56 (addr 0x0000ffff5825a768)    ;; code: HANDLER, StoreTransitionStub, minor: 172039
0xffff5825a734    52  br x16
0xffff5825a738    56  ldr x2, pc+56 (addr 0x0000ffff5825a770)    ;; object: 0x39c052d1 <String[17]: preventExtensions>
0xffff5825a73c    60  ldr x4, [jssp], #8
0xffff5825a740    64  ldr x3, [jssp], #8
0xffff5825a744    68  ldr x16, pc+52 (addr 0x0000ffff5825a778)    ;; code: BUILTIN
0xffff5825a748    72  br x16
0xffff5825a74c    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff5825a750    80  d63f03e0       constant
0xffff5825a754    84  d503201f       constant
0xffff5825a758    88  39c88b99       constant
0xffff5825a75c    92  00000000       constant
0xffff5825a760    96  39c052d1       constant
0xffff5825a764   100  00000000       constant
0xffff5825a768   104  5825a5e0       constant
0xffff5825a76c   108  0000ffff       constant
0xffff5825a770   112  39c052d1       constant
0xffff5825a774   116  00000000       constant
0xffff5825a778   120  58222420       constant
0xffff5825a77c   124  0000ffff       constant


RelocInfo (size = 11)
0xffff5825a710  embedded object  (0x39c88b99 WeakCell for 0x32b10ee1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5825a72c  embedded object  (0x39c052d1 <String[17]: preventExtensions>)
0xffff5825a730  code target (HANDLER)  (0xffff5825a5e0)
0xffff5825a738  embedded object  (0x39c052d1 <String[17]: preventExtensions>)
0xffff5825a744  code target (BUILTIN)  (0xffff58222420)
0xffff5825a74c  constant pool (size 52)

kind = STUB
major_key = ToLengthStub
name = ToLengthStub
compiler = turbofan
Instructions (size = 442)
0xffff5825a7e0     0  and x1, x0, #0x8000000000000001
0xffff5825a7e4     4  cmp x1, #0x0 (0)
0xffff5825a7e8     8  b.eq #+0xb0 (addr 0xffff5825a898)
0xffff5825a7ec    12  and x1, x0, #0x1
0xffff5825a7f0    16  cmp x1, #0x0 (0)
0xffff5825a7f4    20  b.eq #+0x154 (addr 0xffff5825a948)
0xffff5825a7f8    24  ldur x1, [x0, #-1]
0xffff5825a7fc    28  ldr x2, [x26, #120]
0xffff5825a800    32  cmp x1, x2
0xffff5825a804    36  b.ne #+0x98 (addr 0xffff5825a89c)
0xffff5825a808    40  ldur d0, [x0, #7]
0xffff5825a80c    44  fcmp d0, #0.0
0xffff5825a810    48  b.le #+0x138 (addr 0xffff5825a948)
0xffff5825a814    52  ldr d1, pc+324 (addr 0x0000ffff5825a958)
0xffff5825a818    56  fcmp d1, d0
0xffff5825a81c    60  b.ls #+0x124 (addr 0xffff5825a940)
0xffff5825a820    64  frintm d0, d0
0xffff5825a824    68  fcvtzs w0, d0
0xffff5825a828    72  scvtf d1, w0
0xffff5825a82c    76  fcmp d0, d1
0xffff5825a830    80  b.ne #+0x24 (addr 0xffff5825a854)
0xffff5825a834    84  fcmp d0, #0.0
0xffff5825a838    88  b.ne #+0x14 (addr 0xffff5825a84c)
0xffff5825a83c    92  fmov x1, d0
0xffff5825a840    96  lsr x1, x1, #32
0xffff5825a844   100  cmp w1, #0x0 (0)
0xffff5825a848   104  b.lt #+0xc (addr 0xffff5825a854)
0xffff5825a84c   108  lsl x0, x0, #32
0xffff5825a850   112  b #+0x40 (addr 0xffff5825a890)
0xffff5825a854   116  movz x0, #0x92c0
0xffff5825a858   120  movk x0, #0x16e7, lsl #16
0xffff5825a85c   124  ldr x1, [x0]
0xffff5825a860   128  movz x2, #0x92c8
0xffff5825a864   132  movk x2, #0x16e7, lsl #16
0xffff5825a868   136  ldr x2, [x2]
0xffff5825a86c   140  sub x2, x2, x1
0xffff5825a870   144  cmp x2, #0x10 (16)
0xffff5825a874   148  b.lt #+0x64 (addr 0xffff5825a8d8)
0xffff5825a878   152  add x2, x1, #0x10 (16)
0xffff5825a87c   156  str x2, [x0]
0xffff5825a880   160  add x0, x1, #0x1 (1)
0xffff5825a884   164  ldr x1, [x26, #120]
0xffff5825a888   168  stur x1, [x0, #-1]
0xffff5825a88c   172  stur d0, [x0, #7]
0xffff5825a890   176  ret
0xffff5825a894   180  b #+0xb4 (addr 0xffff5825a948)
0xffff5825a898   184  ret
0xffff5825a89c   188  movz x16, #0xa00000000
0xffff5825a8a0   192  sub csp, jssp, #0x10 (16)
0xffff5825a8a4   196  stp fp, lr, [jssp, #-16]!
0xffff5825a8a8   200  mov fp, jssp
0xffff5825a8ac   204  sub csp, jssp, #0x20 (32)
0xffff5825a8b0   208  sub jssp, jssp, #0x20 (32)
0xffff5825a8b4   212  stur x16, [fp, #-8]
0xffff5825a8b8   216  mov x1, cp
0xffff5825a8bc   220  str cp, [jssp, #8]
0xffff5825a8c0   224  ldr x16, pc+160 (addr 0x0000ffff5825a960)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff5825a8c4   228  blr x16
0xffff5825a8c8   232  ldr cp, [jssp, #8]
0xffff5825a8cc   236  mov jssp, fp
0xffff5825a8d0   240  ldp fp, lr, [jssp], #16
0xffff5825a8d4   244  b #-0xf4 (addr 0xffff5825a7e0)
0xffff5825a8d8   248  movz x16, #0xa00000000
0xffff5825a8dc   252  sub csp, jssp, #0x10 (16)
0xffff5825a8e0   256  stp fp, lr, [jssp, #-16]!
0xffff5825a8e4   260  mov fp, jssp
0xffff5825a8e8   264  sub csp, jssp, #0x20 (32)
0xffff5825a8ec   268  sub jssp, jssp, #0x20 (32)
0xffff5825a8f0   272  stur x16, [fp, #-8]
0xffff5825a8f4   276  movz x0, #0x0
0xffff5825a8f8   280  lsl x0, x0, #32
0xffff5825a8fc   284  movz x1, #0x10
0xffff5825a900   288  lsl x1, x1, #32
0xffff5825a904   292  sub csp, jssp, #0x10 (16)
0xffff5825a908   296  sub jssp, jssp, #0x10 (16)
0xffff5825a90c   300  str x1, [jssp, #8]
0xffff5825a910   304  str x0, [jssp]
0xffff5825a914   308  str d0, [jssp, #32]
0xffff5825a918   312  movz x1, #0x5b88
0xffff5825a91c   316  movk x1, #0xe2, lsl #16
0xffff5825a920   320  movz x0, #0x2
0xffff5825a924   324  movz cp, #0x0
0xffff5825a928   328  ldr x16, pc+64 (addr 0x0000ffff5825a968)    ;; code: STUB, CEntryStub, minor: 4
0xffff5825a92c   332  blr x16
0xffff5825a930   336  ldr d0, [jssp, #16]
0xffff5825a934   340  mov jssp, fp
0xffff5825a938   344  ldp fp, lr, [jssp], #16
0xffff5825a93c   348  b #-0xb8 (addr 0xffff5825a884)
0xffff5825a940   352  ldr x0, pc+48 (addr 0x0000ffff5825a970)    ;; object: 0x39c88e41 <Number: 9.0072e+15>
0xffff5825a944   356  ret
0xffff5825a948   360  movz x0, #0x0
0xffff5825a94c   364  ret
0xffff5825a950   368  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5825a954   372  d63f03e0       constant
0xffff5825a958   376  ffffffff       constant
0xffff5825a95c   380  433fffff       constant
0xffff5825a960   384  58229d80       constant
0xffff5825a964   388  0000ffff       constant
0xffff5825a968   392  58206060       constant
0xffff5825a96c   396  0000ffff       constant
0xffff5825a970   400  39c88e41       constant
0xffff5825a974   404  00000000       constant


Safepoints (size = 34)
0xffff5825a8c8   232  010000 (sp -> fp)  <none>
0xffff5825a930   336  000000 (sp -> fp)  <none>

RelocInfo (size = 13)
0xffff5825a8c0  code target (STUB)  (0xffff58229d80)
0xffff5825a928  code target (STUB)  (0xffff58206060)
0xffff5825a940  embedded object  (0x39c88e41 <Number: 9.0072e+15>)
0xffff5825a950  constant pool (size 40)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 152)
0xffff5825b5e0     0  orr x16, x0, x1
0xffff5825b5e4     4  tbnz w16, #0, #+0xc (addr 0xffff5825b5f0)
0xffff5825b5e8     8  sub x0, x0, x1
0xffff5825b5ec    12  ret
0xffff5825b5f0    16  movz x16, #0xc00000000
0xffff5825b5f4    20  sub csp, jssp, #0x10 (16)
0xffff5825b5f8    24  stp fp, lr, [jssp, #-16]!
0xffff5825b5fc    28  sub csp, jssp, #0x10 (16)
0xffff5825b600    32  str x16, [jssp, #-8]!
0xffff5825b604    36  ldr x17, pc+92 (addr 0x0000ffff5825b660)    ;; object: 0xffff5825b581 <Code: COMPARE_IC>
0xffff5825b608    40  sub csp, jssp, #0x10 (16)
0xffff5825b60c    44  str x17, [jssp, #-8]!
0xffff5825b610    48  add fp, jssp, #0x10 (16)
0xffff5825b614    52  sub csp, jssp, #0x18 (24)
0xffff5825b618    56  stp lr, x0, [jssp, #-24]!
0xffff5825b61c    60  str x1, [jssp, #16]
0xffff5825b620    64  movz x10, #0x2f00000000
0xffff5825b624    68  sub csp, jssp, #0x18 (24)
0xffff5825b628    72  stp x10, x0, [jssp, #-24]!
0xffff5825b62c    76  str x1, [jssp, #16]
0xffff5825b630    80  movz x0, #0x3
0xffff5825b634    84  ldr x1, pc+52 (addr 0x0000ffff5825b668)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5825b638    88  ldr x16, pc+56 (addr 0x0000ffff5825b670)    ;; code: STUB, CEntryStub, minor: 4
0xffff5825b63c    92  blr x16
0xffff5825b640    96  add x11, x0, #0x5f (95)
0xffff5825b644   100  ldr x1, [jssp, #16]
0xffff5825b648   104  ldp lr, x0, [jssp], #24
0xffff5825b64c   108  mov jssp, fp
0xffff5825b650   112  ldp fp, lr, [jssp], #16
0xffff5825b654   116  br x11
0xffff5825b658   120  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5825b65c   124  d63f03e0       constant
0xffff5825b660   128  5825b581       constant
0xffff5825b664   132  0000ffff       constant
0xffff5825b668   136  00c8a980       constant
0xffff5825b66c   140  00000000       constant
0xffff5825b670   144  58206060       constant
0xffff5825b674   148  0000ffff       constant


RelocInfo (size = 10)
0xffff5825b604  embedded object  (0xffff5825b581 <Code: COMPARE_IC>)
0xffff5825b634  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5825b638  code target (STUB)  (0xffff58206060)
0xffff5825b658  constant pool (size 32)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 445)
0xffff5825b920     0  movz x2, #0x92c0
0xffff5825b924     4  movk x2, #0x16e7, lsl #16
0xffff5825b928     8  ldp x3, x0, [x2]
0xffff5825b92c    12  adds x16, x3, #0x90 (144)
0xffff5825b930    16  ccmp x16, x0, #nzCv, lo
0xffff5825b934    20  b.hi #+0x9c (addr 0xffff5825b9d0)
0xffff5825b938    24  str x16, [x2]
0xffff5825b93c    28  orr x3, x3, #0x1
0xffff5825b940    32  ldr x0, pc+256 (addr 0x0000ffff5825ba40)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5825b944    36  stur x0, [x3, #-1]
0xffff5825b948    40  movz x0, #0x1000000000
0xffff5825b94c    44  stur x0, [x3, #7]
0xffff5825b950    48  stur x1, [x3, #15]
0xffff5825b954    52  stur cp, [x3, #23]
0xffff5825b958    56  ldr x0, pc+240 (addr 0x0000ffff5825ba48)    ;; object: 0x39c04519 <the hole>
0xffff5825b95c    60  stur x0, [x3, #31]
0xffff5825b960    64  ldur x0, [cp, #39]
0xffff5825b964    68  stur x0, [x3, #39]
0xffff5825b968    72  ldr x0, pc+232 (addr 0x0000ffff5825ba50)    ;; object: 0x39c04241 <undefined>
0xffff5825b96c    76  stur x0, [x3, #47]
0xffff5825b970    80  ldr x0, pc+232 (addr 0x0000ffff5825ba58)    ;; object: 0x39c04241 <undefined>
0xffff5825b974    84  stur x0, [x3, #55]
0xffff5825b978    88  ldr x0, pc+232 (addr 0x0000ffff5825ba60)    ;; object: 0x39c04241 <undefined>
0xffff5825b97c    92  stur x0, [x3, #63]
0xffff5825b980    96  ldr x0, pc+232 (addr 0x0000ffff5825ba68)    ;; object: 0x39c04241 <undefined>
0xffff5825b984   100  stur x0, [x3, #71]
0xffff5825b988   104  ldr x0, pc+232 (addr 0x0000ffff5825ba70)    ;; object: 0x39c04241 <undefined>
0xffff5825b98c   108  stur x0, [x3, #79]
0xffff5825b990   112  ldr x0, pc+232 (addr 0x0000ffff5825ba78)    ;; object: 0x39c04241 <undefined>
0xffff5825b994   116  stur x0, [x3, #87]
0xffff5825b998   120  ldr x0, pc+232 (addr 0x0000ffff5825ba80)    ;; object: 0x39c04241 <undefined>
0xffff5825b99c   124  stur x0, [x3, #95]
0xffff5825b9a0   128  ldr x0, pc+232 (addr 0x0000ffff5825ba88)    ;; object: 0x39c04241 <undefined>
0xffff5825b9a4   132  stur x0, [x3, #103]
0xffff5825b9a8   136  ldr x0, pc+232 (addr 0x0000ffff5825ba90)    ;; object: 0x39c04241 <undefined>
0xffff5825b9ac   140  stur x0, [x3, #111]
0xffff5825b9b0   144  ldr x0, pc+232 (addr 0x0000ffff5825ba98)    ;; object: 0x39c04241 <undefined>
0xffff5825b9b4   148  stur x0, [x3, #119]
0xffff5825b9b8   152  ldr x0, pc+232 (addr 0x0000ffff5825baa0)    ;; object: 0x39c04241 <undefined>
0xffff5825b9bc   156  stur x0, [x3, #127]
0xffff5825b9c0   160  ldr x0, pc+232 (addr 0x0000ffff5825baa8)    ;; object: 0x39c04241 <undefined>
0xffff5825b9c4   164  stur x0, [x3, #135]
0xffff5825b9c8   168  mov x0, x3
0xffff5825b9cc   172  ret
0xffff5825b9d0   176  sub csp, jssp, #0x10 (16)
0xffff5825b9d4   180  stp fp, lr, [jssp, #-16]!
0xffff5825b9d8   184  movz fp, #0xa00000000
0xffff5825b9dc   188  sub csp, jssp, #0x8 (8)
0xffff5825b9e0   192  str fp, [jssp, #-8]!
0xffff5825b9e4   196  add fp, jssp, #0x8 (8)
0xffff5825b9e8   200  movz x3, #0x0
0xffff5825b9ec   204  mov x16, lr
0xffff5825b9f0   208  ldr x17, pc+192 (addr 0x0000ffff5825bab0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5825b9f4   212  blr x17
0xffff5825b9f8   216  movz x0, #0x9000000000
0xffff5825b9fc   220  movz x10, #0x0
0xffff5825ba00   224  sub csp, jssp, #0x10 (16)
0xffff5825ba04   228  stp x10, x0, [jssp, #-16]!
0xffff5825ba08   232  movz x0, #0x2
0xffff5825ba0c   236  movz x1, #0x5b88
0xffff5825ba10   240  movk x1, #0xe2, lsl #16
0xffff5825ba14   244  ldr x16, pc+164 (addr 0x0000ffff5825bab8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5825ba18   248  blr x16
0xffff5825ba1c   252  str x0, [jssp, #24]
0xffff5825ba20   256  ldr x16, pc+160 (addr 0x0000ffff5825bac0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5825ba24   260  blr x16
0xffff5825ba28   264  ldr lr, [jssp, #16]
0xffff5825ba2c   268  ldp xzr, fp, [jssp], #24
0xffff5825ba30   272  b #-0xf0 (addr 0xffff5825b940)
0xffff5825ba34   276  5800049f       constant pool begin (num_const = 36)    ;; constant pool
0xffff5825ba38   280  d63f03e0       constant
0xffff5825ba3c   284  d503201f       constant
0xffff5825ba40   288  32b06149       constant
0xffff5825ba44   292  00000000       constant
0xffff5825ba48   296  39c04519       constant
0xffff5825ba4c   300  00000000       constant
0xffff5825ba50   304  39c04241       constant
0xffff5825ba54   308  00000000       constant
0xffff5825ba58   312  39c04241       constant
0xffff5825ba5c   316  00000000       constant
0xffff5825ba60   320  39c04241       constant
0xffff5825ba64   324  00000000       constant
0xffff5825ba68   328  39c04241       constant
0xffff5825ba6c   332  00000000       constant
0xffff5825ba70   336  39c04241       constant
0xffff5825ba74   340  00000000       constant
0xffff5825ba78   344  39c04241       constant
0xffff5825ba7c   348  00000000       constant
0xffff5825ba80   352  39c04241       constant
0xffff5825ba84   356  00000000       constant
0xffff5825ba88   360  39c04241       constant
0xffff5825ba8c   364  00000000       constant
0xffff5825ba90   368  39c04241       constant
0xffff5825ba94   372  00000000       constant
0xffff5825ba98   376  39c04241       constant
0xffff5825ba9c   380  00000000       constant
0xffff5825baa0   384  39c04241       constant
0xffff5825baa4   388  00000000       constant
0xffff5825baa8   392  39c04241       constant
0xffff5825baac   396  00000000       constant
0xffff5825bab0   400  58206820       constant
0xffff5825bab4   404  0000ffff       constant
0xffff5825bab8   408  58206260       constant
0xffff5825babc   412  0000ffff       constant
0xffff5825bac0   416  582068e0       constant
0xffff5825bac4   420  0000ffff       constant


Safepoints (size = 21)
0xffff5825ba1c   252  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 23)
0xffff5825b940  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5825b958  embedded object  (0x39c04519 <the hole>)
0xffff5825b968  embedded object  (0x39c04241 <undefined>)
0xffff5825b970  embedded object  (0x39c04241 <undefined>)
0xffff5825b978  embedded object  (0x39c04241 <undefined>)
0xffff5825b980  embedded object  (0x39c04241 <undefined>)
0xffff5825b988  embedded object  (0x39c04241 <undefined>)
0xffff5825b990  embedded object  (0x39c04241 <undefined>)
0xffff5825b998  embedded object  (0x39c04241 <undefined>)
0xffff5825b9a0  embedded object  (0x39c04241 <undefined>)
0xffff5825b9a8  embedded object  (0x39c04241 <undefined>)
0xffff5825b9b0  embedded object  (0x39c04241 <undefined>)
0xffff5825b9b8  embedded object  (0x39c04241 <undefined>)
0xffff5825b9c0  embedded object  (0x39c04241 <undefined>)
0xffff5825b9f0  code target (STUB)  (0xffff58206820)
0xffff5825ba14  code target (STUB)  (0xffff58206260)
0xffff5825ba20  code target (STUB)  (0xffff582068e0)
0xffff5825ba34  constant pool (size 148)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff5825cee0     0  ldur x0, [x1, #7]
0xffff5825cee4     4  ldur x0, [x0, #143]
0xffff5825cee8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327680
name = CallICStub(args(0), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff5825cf60     0  add x4, x2, x3, asr #29
0xffff5825cf64     4  ldur x4, [x4, #15]
0xffff5825cf68     8  ldur x5, [x4, #7]
0xffff5825cf6c    12  cmp x5, x1
0xffff5825cf70    16  b.ne #+0x2c (addr 0xffff5825cf9c)
0xffff5825cf74    20  tbz w1, #0, #+0x28 (addr 0xffff5825cf9c)
0xffff5825cf78    24  add x2, x2, x3, asr #29
0xffff5825cf7c    28  add x2, x2, #0x18 (24)
0xffff5825cf80    32  ldur x3, [x2, #-1]
0xffff5825cf84    36  movz x16, #0x200000000
0xffff5825cf88    40  add x3, x3, x16
0xffff5825cf8c    44  stur x3, [x2, #-1]
0xffff5825cf90    48  movz x0, #0x0
0xffff5825cf94    52  ldr x16, pc+372 (addr 0x0000ffff5825d108)    ;; code: BUILTIN
0xffff5825cf98    56  br x16
0xffff5825cf9c    60  ldr x16, [x26, #2400]
0xffff5825cfa0    64  cmp x4, x16
0xffff5825cfa4    68  b.eq #+0x78 (addr 0xffff5825d01c)
0xffff5825cfa8    72  ldur x5, [x4, #-1]
0xffff5825cfac    76  ldr x16, [x26, #2736]
0xffff5825cfb0    80  cmp x5, x16
0xffff5825cfb4    84  b.ne #+0x40 (addr 0xffff5825cff4)
0xffff5825cfb8    88  ldur x5, [cp, #39]
0xffff5825cfbc    92  ldur x5, [x5, #95]
0xffff5825cfc0    96  cmp x1, x5
0xffff5825cfc4   100  b.ne #+0xec (addr 0xffff5825d0b0)
0xffff5825cfc8   104  movz x0, #0x0
0xffff5825cfcc   108  add x2, x2, x3, asr #29
0xffff5825cfd0   112  add x2, x2, #0x18 (24)
0xffff5825cfd4   116  ldur x3, [x2, #-1]
0xffff5825cfd8   120  movz x16, #0x200000000
0xffff5825cfdc   124  add x3, x3, x16
0xffff5825cfe0   128  stur x3, [x2, #-1]
0xffff5825cfe4   132  mov x2, x4
0xffff5825cfe8   136  mov x3, x1
0xffff5825cfec   140  ldr x16, pc+292 (addr 0x0000ffff5825d110)    ;; code: STUB, ArrayConstructorStub, minor: 1
0xffff5825cff0   144  br x16
0xffff5825cff4   148  ldr x16, [x26, #2568]
0xffff5825cff8   152  cmp x4, x16
0xffff5825cffc   156  b.eq #+0xb4 (addr 0xffff5825d0b0)
0xffff5825d000   160  ldur x5, [x4, #-1]
0xffff5825d004   164  ldrb w5, [x5, #11]
0xffff5825d008   168  cmp x5, #0xc9 (201)
0xffff5825d00c   172  b.ne #+0xa4 (addr 0xffff5825d0b0)
0xffff5825d010   176  add x4, x2, x3, asr #29
0xffff5825d014   180  ldr x5, [x26, #2400]
0xffff5825d018   184  stur x5, [x4, #15]
0xffff5825d01c   188  movz x0, #0x0
0xffff5825d020   192  ldr x16, pc+248 (addr 0x0000ffff5825d118)    ;; code: BUILTIN
0xffff5825d024   196  br x16
0xffff5825d028   200  tbz w1, #0, #+0x88 (addr 0xffff5825d0b0)
0xffff5825d02c   204  ldur x5, [x1, #-1]
0xffff5825d030   208  ldrb w5, [x5, #11]
0xffff5825d034   212  cmp x5, #0xc9 (201)
0xffff5825d038   216  b.ne #+0x78 (addr 0xffff5825d0b0)
0xffff5825d03c   220  ldur x5, [cp, #39]
0xffff5825d040   224  ldur x5, [x5, #95]
0xffff5825d044   228  cmp x1, x5
0xffff5825d048   232  b.eq #+0x68 (addr 0xffff5825d0b0)
0xffff5825d04c   236  ldur x4, [x1, #39]
0xffff5825d050   240  ldur x4, [x4, #39]
0xffff5825d054   244  ldur x5, [cp, #39]
0xffff5825d058   248  cmp x4, x5
0xffff5825d05c   252  b.ne #+0x54 (addr 0xffff5825d0b0)
0xffff5825d060   256  movz x5, #0x200000000
0xffff5825d064   260  adds x4, x2, x3, asr #29
0xffff5825d068   264  stur x5, [x4, #23]
0xffff5825d06c   268  movz x16, #0xc00000000
0xffff5825d070   272  sub csp, jssp, #0x10 (16)
0xffff5825d074   276  stp fp, lr, [jssp, #-16]!
0xffff5825d078   280  sub csp, jssp, #0x10 (16)
0xffff5825d07c   284  str x16, [jssp, #-8]!
0xffff5825d080   288  ldr x17, pc+160 (addr 0x0000ffff5825d120)    ;; object: 0xffff5825cf01 <Code: CALL_IC>
0xffff5825d084   292  sub csp, jssp, #0x10 (16)
0xffff5825d088   296  str x17, [jssp, #-8]!
0xffff5825d08c   300  add fp, jssp, #0x10 (16)
0xffff5825d090   304  sub csp, jssp, #0x8 (8)
0xffff5825d094   308  str x1, [jssp, #-8]!
0xffff5825d098   312  ldr x16, pc+144 (addr 0x0000ffff5825d128)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff5825d09c   316  blr x16
0xffff5825d0a0   320  ldr x1, [jssp], #8
0xffff5825d0a4   324  mov jssp, fp
0xffff5825d0a8   328  ldp fp, lr, [jssp], #16
0xffff5825d0ac   332  b #-0x11c (addr 0xffff5825cf90)
0xffff5825d0b0   336  movz x16, #0xc00000000
0xffff5825d0b4   340  sub csp, jssp, #0x10 (16)
0xffff5825d0b8   344  stp fp, lr, [jssp, #-16]!
0xffff5825d0bc   348  sub csp, jssp, #0x10 (16)
0xffff5825d0c0   352  str x16, [jssp, #-8]!
0xffff5825d0c4   356  ldr x17, pc+108 (addr 0x0000ffff5825d130)    ;; object: 0xffff5825cf01 <Code: CALL_IC>
0xffff5825d0c8   360  sub csp, jssp, #0x10 (16)
0xffff5825d0cc   364  str x17, [jssp, #-8]!
0xffff5825d0d0   368  add fp, jssp, #0x10 (16)
0xffff5825d0d4   372  sub csp, jssp, #0x18 (24)
0xffff5825d0d8   376  stp x3, x2, [jssp, #-24]!
0xffff5825d0dc   380  str x1, [jssp, #16]
0xffff5825d0e0   384  movz x0, #0x3
0xffff5825d0e4   388  ldr x1, pc+84 (addr 0x0000ffff5825d138)    ;; external reference (Runtime::CallIC_Miss)
0xffff5825d0e8   392  ldr x16, pc+88 (addr 0x0000ffff5825d140)    ;; code: STUB, CEntryStub, minor: 4
0xffff5825d0ec   396  blr x16
0xffff5825d0f0   400  mov x1, x0
0xffff5825d0f4   404  mov jssp, fp
0xffff5825d0f8   408  ldp fp, lr, [jssp], #16
0xffff5825d0fc   412  b #-0xe0 (addr 0xffff5825d01c)
0xffff5825d100   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff5825d104   420  d63f03e0       constant
0xffff5825d108   424  5821e600       constant
0xffff5825d10c   428  0000ffff       constant
0xffff5825d110   432  5823d580       constant
0xffff5825d114   436  0000ffff       constant
0xffff5825d118   440  5821f6c0       constant
0xffff5825d11c   444  0000ffff       constant
0xffff5825d120   448  5825cf01       constant
0xffff5825d124   452  0000ffff       constant
0xffff5825d128   456  5820ddc0       constant
0xffff5825d12c   460  0000ffff       constant
0xffff5825d130   464  5825cf01       constant
0xffff5825d134   468  0000ffff       constant
0xffff5825d138   472  00c86928       constant
0xffff5825d13c   476  00000000       constant
0xffff5825d140   480  58206060       constant
0xffff5825d144   484  0000ffff       constant


RelocInfo (size = 19)
0xffff5825cf94  code target (BUILTIN)  (0xffff5821e600)
0xffff5825cfec  code target (STUB)  (0xffff5823d580)
0xffff5825d020  code target (BUILTIN)  (0xffff5821f6c0)
0xffff5825d080  embedded object  (0xffff5825cf01 <Code: CALL_IC>)
0xffff5825d098  code target (STUB)  (0xffff5820ddc0)
0xffff5825d0c4  embedded object  (0xffff5825cf01 <Code: CALL_IC>)
0xffff5825d0e4  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff5825d0e8  code target (STUB)  (0xffff58206060)
0xffff5825d100  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327680
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff5825d1c0     0  ldur x2, [fp, #-16]
0xffff5825d1c4     4  ldur x2, [x2, #31]
0xffff5825d1c8     8  ldur x2, [x2, #87]
0xffff5825d1cc    12  ldr x16, pc+20 (addr 0x0000ffff5825d1e0)    ;; code: CALL_IC, GENERIC
0xffff5825d1d0    16  br x16
0xffff5825d1d4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5825d1d8    24  d63f03e0       constant
0xffff5825d1dc    28  d503201f       constant
0xffff5825d1e0    32  5825cf60       constant
0xffff5825d1e4    36  0000ffff       constant


RelocInfo (size = 7)
0xffff5825d1cc  code target (CALL_IC)  (0xffff5825cf60)
0xffff5825d1d4  constant pool (size 20)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 301)
0xffff5825e860     0  movz x2, #0x92c0
0xffff5825e864     4  movk x2, #0x16e7, lsl #16
0xffff5825e868     8  ldp x3, x0, [x2]
0xffff5825e86c    12  adds x16, x3, #0x48 (72)
0xffff5825e870    16  ccmp x16, x0, #nzCv, lo
0xffff5825e874    20  b.hi #+0x54 (addr 0xffff5825e8c8)
0xffff5825e878    24  str x16, [x2]
0xffff5825e87c    28  orr x3, x3, #0x1
0xffff5825e880    32  ldr x0, pc+184 (addr 0x0000ffff5825e938)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5825e884    36  stur x0, [x3, #-1]
0xffff5825e888    40  movz x0, #0x700000000
0xffff5825e88c    44  stur x0, [x3, #7]
0xffff5825e890    48  stur x1, [x3, #15]
0xffff5825e894    52  stur cp, [x3, #23]
0xffff5825e898    56  ldr x0, pc+168 (addr 0x0000ffff5825e940)    ;; object: 0x39c04519 <the hole>
0xffff5825e89c    60  stur x0, [x3, #31]
0xffff5825e8a0    64  ldur x0, [cp, #39]
0xffff5825e8a4    68  stur x0, [x3, #39]
0xffff5825e8a8    72  ldr x0, pc+160 (addr 0x0000ffff5825e948)    ;; object: 0x39c04241 <undefined>
0xffff5825e8ac    76  stur x0, [x3, #47]
0xffff5825e8b0    80  ldr x0, pc+160 (addr 0x0000ffff5825e950)    ;; object: 0x39c04241 <undefined>
0xffff5825e8b4    84  stur x0, [x3, #55]
0xffff5825e8b8    88  ldr x0, pc+160 (addr 0x0000ffff5825e958)    ;; object: 0x39c04241 <undefined>
0xffff5825e8bc    92  stur x0, [x3, #63]
0xffff5825e8c0    96  mov x0, x3
0xffff5825e8c4   100  ret
0xffff5825e8c8   104  sub csp, jssp, #0x10 (16)
0xffff5825e8cc   108  stp fp, lr, [jssp, #-16]!
0xffff5825e8d0   112  movz fp, #0xa00000000
0xffff5825e8d4   116  sub csp, jssp, #0x8 (8)
0xffff5825e8d8   120  str fp, [jssp, #-8]!
0xffff5825e8dc   124  add fp, jssp, #0x8 (8)
0xffff5825e8e0   128  movz x3, #0x0
0xffff5825e8e4   132  mov x16, lr
0xffff5825e8e8   136  ldr x17, pc+120 (addr 0x0000ffff5825e960)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5825e8ec   140  blr x17
0xffff5825e8f0   144  movz x0, #0x4800000000
0xffff5825e8f4   148  movz x10, #0x0
0xffff5825e8f8   152  sub csp, jssp, #0x10 (16)
0xffff5825e8fc   156  stp x10, x0, [jssp, #-16]!
0xffff5825e900   160  movz x0, #0x2
0xffff5825e904   164  movz x1, #0x5b88
0xffff5825e908   168  movk x1, #0xe2, lsl #16
0xffff5825e90c   172  ldr x16, pc+92 (addr 0x0000ffff5825e968)    ;; code: STUB, CEntryStub, minor: 5
0xffff5825e910   176  blr x16
0xffff5825e914   180  str x0, [jssp, #24]
0xffff5825e918   184  ldr x16, pc+88 (addr 0x0000ffff5825e970)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5825e91c   188  blr x16
0xffff5825e920   192  ldr lr, [jssp, #16]
0xffff5825e924   196  ldp xzr, fp, [jssp], #24
0xffff5825e928   200  b #-0xa8 (addr 0xffff5825e880)
0xffff5825e92c   204  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff5825e930   208  d63f03e0       constant
0xffff5825e934   212  d503201f       constant
0xffff5825e938   216  32b06149       constant
0xffff5825e93c   220  00000000       constant
0xffff5825e940   224  39c04519       constant
0xffff5825e944   228  00000000       constant
0xffff5825e948   232  39c04241       constant
0xffff5825e94c   236  00000000       constant
0xffff5825e950   240  39c04241       constant
0xffff5825e954   244  00000000       constant
0xffff5825e958   248  39c04241       constant
0xffff5825e95c   252  00000000       constant
0xffff5825e960   256  58206820       constant
0xffff5825e964   260  0000ffff       constant
0xffff5825e968   264  58206260       constant
0xffff5825e96c   268  0000ffff       constant
0xffff5825e970   272  582068e0       constant
0xffff5825e974   276  0000ffff       constant


Safepoints (size = 21)
0xffff5825e914   180  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 14)
0xffff5825e880  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5825e898  embedded object  (0x39c04519 <the hole>)
0xffff5825e8a8  embedded object  (0x39c04241 <undefined>)
0xffff5825e8b0  embedded object  (0x39c04241 <undefined>)
0xffff5825e8b8  embedded object  (0x39c04241 <undefined>)
0xffff5825e8e8  code target (STUB)  (0xffff58206820)
0xffff5825e90c  code target (STUB)  (0xffff58206260)
0xffff5825e918  code target (STUB)  (0xffff582068e0)
0xffff5825e92c  constant pool (size 76)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 365)
0xffff582609e0     0  movz x2, #0x92c0
0xffff582609e4     4  movk x2, #0x16e7, lsl #16
0xffff582609e8     8  ldp x3, x0, [x2]
0xffff582609ec    12  adds x16, x3, #0x68 (104)
0xffff582609f0    16  ccmp x16, x0, #nzCv, lo
0xffff582609f4    20  b.hi #+0x74 (addr 0xffff58260a68)
0xffff582609f8    24  str x16, [x2]
0xffff582609fc    28  orr x3, x3, #0x1
0xffff58260a00    32  ldr x0, pc+216 (addr 0x0000ffff58260ad8)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58260a04    36  stur x0, [x3, #-1]
0xffff58260a08    40  movz x0, #0xb00000000
0xffff58260a0c    44  stur x0, [x3, #7]
0xffff58260a10    48  stur x1, [x3, #15]
0xffff58260a14    52  stur cp, [x3, #23]
0xffff58260a18    56  ldr x0, pc+200 (addr 0x0000ffff58260ae0)    ;; object: 0x39c04519 <the hole>
0xffff58260a1c    60  stur x0, [x3, #31]
0xffff58260a20    64  ldur x0, [cp, #39]
0xffff58260a24    68  stur x0, [x3, #39]
0xffff58260a28    72  ldr x0, pc+192 (addr 0x0000ffff58260ae8)    ;; object: 0x39c04241 <undefined>
0xffff58260a2c    76  stur x0, [x3, #47]
0xffff58260a30    80  ldr x0, pc+192 (addr 0x0000ffff58260af0)    ;; object: 0x39c04241 <undefined>
0xffff58260a34    84  stur x0, [x3, #55]
0xffff58260a38    88  ldr x0, pc+192 (addr 0x0000ffff58260af8)    ;; object: 0x39c04241 <undefined>
0xffff58260a3c    92  stur x0, [x3, #63]
0xffff58260a40    96  ldr x0, pc+192 (addr 0x0000ffff58260b00)    ;; object: 0x39c04241 <undefined>
0xffff58260a44   100  stur x0, [x3, #71]
0xffff58260a48   104  ldr x0, pc+192 (addr 0x0000ffff58260b08)    ;; object: 0x39c04241 <undefined>
0xffff58260a4c   108  stur x0, [x3, #79]
0xffff58260a50   112  ldr x0, pc+192 (addr 0x0000ffff58260b10)    ;; object: 0x39c04241 <undefined>
0xffff58260a54   116  stur x0, [x3, #87]
0xffff58260a58   120  ldr x0, pc+192 (addr 0x0000ffff58260b18)    ;; object: 0x39c04241 <undefined>
0xffff58260a5c   124  stur x0, [x3, #95]
0xffff58260a60   128  mov x0, x3
0xffff58260a64   132  ret
0xffff58260a68   136  sub csp, jssp, #0x10 (16)
0xffff58260a6c   140  stp fp, lr, [jssp, #-16]!
0xffff58260a70   144  movz fp, #0xa00000000
0xffff58260a74   148  sub csp, jssp, #0x8 (8)
0xffff58260a78   152  str fp, [jssp, #-8]!
0xffff58260a7c   156  add fp, jssp, #0x8 (8)
0xffff58260a80   160  movz x3, #0x0
0xffff58260a84   164  mov x16, lr
0xffff58260a88   168  ldr x17, pc+152 (addr 0x0000ffff58260b20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58260a8c   172  blr x17
0xffff58260a90   176  movz x0, #0x6800000000
0xffff58260a94   180  movz x10, #0x0
0xffff58260a98   184  sub csp, jssp, #0x10 (16)
0xffff58260a9c   188  stp x10, x0, [jssp, #-16]!
0xffff58260aa0   192  movz x0, #0x2
0xffff58260aa4   196  movz x1, #0x5b88
0xffff58260aa8   200  movk x1, #0xe2, lsl #16
0xffff58260aac   204  ldr x16, pc+124 (addr 0x0000ffff58260b28)    ;; code: STUB, CEntryStub, minor: 5
0xffff58260ab0   208  blr x16
0xffff58260ab4   212  str x0, [jssp, #24]
0xffff58260ab8   216  ldr x16, pc+120 (addr 0x0000ffff58260b30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58260abc   220  blr x16
0xffff58260ac0   224  ldr lr, [jssp, #16]
0xffff58260ac4   228  ldp xzr, fp, [jssp], #24
0xffff58260ac8   232  b #-0xc8 (addr 0xffff58260a00)
0xffff58260acc   236  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff58260ad0   240  d63f03e0       constant
0xffff58260ad4   244  d503201f       constant
0xffff58260ad8   248  32b06149       constant
0xffff58260adc   252  00000000       constant
0xffff58260ae0   256  39c04519       constant
0xffff58260ae4   260  00000000       constant
0xffff58260ae8   264  39c04241       constant
0xffff58260aec   268  00000000       constant
0xffff58260af0   272  39c04241       constant
0xffff58260af4   276  00000000       constant
0xffff58260af8   280  39c04241       constant
0xffff58260afc   284  00000000       constant
0xffff58260b00   288  39c04241       constant
0xffff58260b04   292  00000000       constant
0xffff58260b08   296  39c04241       constant
0xffff58260b0c   300  00000000       constant
0xffff58260b10   304  39c04241       constant
0xffff58260b14   308  00000000       constant
0xffff58260b18   312  39c04241       constant
0xffff58260b1c   316  00000000       constant
0xffff58260b20   320  58206820       constant
0xffff58260b24   324  0000ffff       constant
0xffff58260b28   328  58206260       constant
0xffff58260b2c   332  0000ffff       constant
0xffff58260b30   336  582068e0       constant
0xffff58260b34   340  0000ffff       constant


Safepoints (size = 21)
0xffff58260ab4   212  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 18)
0xffff58260a00  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58260a18  embedded object  (0x39c04519 <the hole>)
0xffff58260a28  embedded object  (0x39c04241 <undefined>)
0xffff58260a30  embedded object  (0x39c04241 <undefined>)
0xffff58260a38  embedded object  (0x39c04241 <undefined>)
0xffff58260a40  embedded object  (0x39c04241 <undefined>)
0xffff58260a48  embedded object  (0x39c04241 <undefined>)
0xffff58260a50  embedded object  (0x39c04241 <undefined>)
0xffff58260a58  embedded object  (0x39c04241 <undefined>)
0xffff58260a88  code target (STUB)  (0xffff58206820)
0xffff58260aac  code target (STUB)  (0xffff58206260)
0xffff58260ab8  code target (STUB)  (0xffff582068e0)
0xffff58260acc  constant pool (size 108)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58261b20     0  ldur x0, [x1, #-1]
0xffff58261b24     4  ldur x0, [x0, #47]
0xffff58261b28     8  movz x16, #0x5ff
0xffff58261b2c    12  ldr x0, [x0, x16]
0xffff58261b30    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58261ba0     0  ldur x0, [x1, #-1]
0xffff58261ba4     4  ldur x0, [x0, #47]
0xffff58261ba8     8  movz x16, #0x5e7
0xffff58261bac    12  ldr x0, [x0, x16]
0xffff58261bb0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 821)
0xffff582620e0     0  movz x2, #0x92c0
0xffff582620e4     4  movk x2, #0x16e7, lsl #16
0xffff582620e8     8  ldp x3, x0, [x2]
0xffff582620ec    12  adds x16, x3, #0x140 (320)
0xffff582620f0    16  ccmp x16, x0, #nzCv, lo
0xffff582620f4    20  b.hi #+0x168 (addr 0xffff5826225c)
0xffff582620f8    24  str x16, [x2]
0xffff582620fc    28  orr x3, x3, #0x1
0xffff58262100    32  ldr x0, pc+456 (addr 0x0000ffff582622c8)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58262104    36  stur x0, [x3, #-1]
0xffff58262108    40  movz x0, #0x2600000000
0xffff5826210c    44  stur x0, [x3, #7]
0xffff58262110    48  stur x1, [x3, #15]
0xffff58262114    52  stur cp, [x3, #23]
0xffff58262118    56  ldr x0, pc+440 (addr 0x0000ffff582622d0)    ;; object: 0x39c04519 <the hole>
0xffff5826211c    60  stur x0, [x3, #31]
0xffff58262120    64  ldur x0, [cp, #39]
0xffff58262124    68  stur x0, [x3, #39]
0xffff58262128    72  ldr x0, pc+432 (addr 0x0000ffff582622d8)    ;; object: 0x39c04241 <undefined>
0xffff5826212c    76  stur x0, [x3, #47]
0xffff58262130    80  ldr x0, pc+432 (addr 0x0000ffff582622e0)    ;; object: 0x39c04241 <undefined>
0xffff58262134    84  stur x0, [x3, #55]
0xffff58262138    88  ldr x0, pc+432 (addr 0x0000ffff582622e8)    ;; object: 0x39c04241 <undefined>
0xffff5826213c    92  stur x0, [x3, #63]
0xffff58262140    96  ldr x0, pc+432 (addr 0x0000ffff582622f0)    ;; object: 0x39c04241 <undefined>
0xffff58262144   100  stur x0, [x3, #71]
0xffff58262148   104  ldr x0, pc+432 (addr 0x0000ffff582622f8)    ;; object: 0x39c04241 <undefined>
0xffff5826214c   108  stur x0, [x3, #79]
0xffff58262150   112  ldr x0, pc+432 (addr 0x0000ffff58262300)    ;; object: 0x39c04241 <undefined>
0xffff58262154   116  stur x0, [x3, #87]
0xffff58262158   120  ldr x0, pc+432 (addr 0x0000ffff58262308)    ;; object: 0x39c04241 <undefined>
0xffff5826215c   124  stur x0, [x3, #95]
0xffff58262160   128  ldr x0, pc+432 (addr 0x0000ffff58262310)    ;; object: 0x39c04241 <undefined>
0xffff58262164   132  stur x0, [x3, #103]
0xffff58262168   136  ldr x0, pc+432 (addr 0x0000ffff58262318)    ;; object: 0x39c04241 <undefined>
0xffff5826216c   140  stur x0, [x3, #111]
0xffff58262170   144  ldr x0, pc+432 (addr 0x0000ffff58262320)    ;; object: 0x39c04241 <undefined>
0xffff58262174   148  stur x0, [x3, #119]
0xffff58262178   152  ldr x0, pc+432 (addr 0x0000ffff58262328)    ;; object: 0x39c04241 <undefined>
0xffff5826217c   156  stur x0, [x3, #127]
0xffff58262180   160  ldr x0, pc+432 (addr 0x0000ffff58262330)    ;; object: 0x39c04241 <undefined>
0xffff58262184   164  stur x0, [x3, #135]
0xffff58262188   168  ldr x0, pc+432 (addr 0x0000ffff58262338)    ;; object: 0x39c04241 <undefined>
0xffff5826218c   172  stur x0, [x3, #143]
0xffff58262190   176  ldr x0, pc+432 (addr 0x0000ffff58262340)    ;; object: 0x39c04241 <undefined>
0xffff58262194   180  stur x0, [x3, #151]
0xffff58262198   184  ldr x0, pc+432 (addr 0x0000ffff58262348)    ;; object: 0x39c04241 <undefined>
0xffff5826219c   188  stur x0, [x3, #159]
0xffff582621a0   192  ldr x0, pc+432 (addr 0x0000ffff58262350)    ;; object: 0x39c04241 <undefined>
0xffff582621a4   196  stur x0, [x3, #167]
0xffff582621a8   200  ldr x0, pc+432 (addr 0x0000ffff58262358)    ;; object: 0x39c04241 <undefined>
0xffff582621ac   204  stur x0, [x3, #175]
0xffff582621b0   208  ldr x0, pc+432 (addr 0x0000ffff58262360)    ;; object: 0x39c04241 <undefined>
0xffff582621b4   212  stur x0, [x3, #183]
0xffff582621b8   216  ldr x0, pc+432 (addr 0x0000ffff58262368)    ;; object: 0x39c04241 <undefined>
0xffff582621bc   220  stur x0, [x3, #191]
0xffff582621c0   224  ldr x0, pc+432 (addr 0x0000ffff58262370)    ;; object: 0x39c04241 <undefined>
0xffff582621c4   228  stur x0, [x3, #199]
0xffff582621c8   232  ldr x0, pc+432 (addr 0x0000ffff58262378)    ;; object: 0x39c04241 <undefined>
0xffff582621cc   236  stur x0, [x3, #207]
0xffff582621d0   240  ldr x0, pc+432 (addr 0x0000ffff58262380)    ;; object: 0x39c04241 <undefined>
0xffff582621d4   244  stur x0, [x3, #215]
0xffff582621d8   248  ldr x0, pc+432 (addr 0x0000ffff58262388)    ;; object: 0x39c04241 <undefined>
0xffff582621dc   252  stur x0, [x3, #223]
0xffff582621e0   256  ldr x0, pc+432 (addr 0x0000ffff58262390)    ;; object: 0x39c04241 <undefined>
0xffff582621e4   260  stur x0, [x3, #231]
0xffff582621e8   264  ldr x0, pc+432 (addr 0x0000ffff58262398)    ;; object: 0x39c04241 <undefined>
0xffff582621ec   268  stur x0, [x3, #239]
0xffff582621f0   272  ldr x0, pc+432 (addr 0x0000ffff582623a0)    ;; object: 0x39c04241 <undefined>
0xffff582621f4   276  stur x0, [x3, #247]
0xffff582621f8   280  ldr x0, pc+432 (addr 0x0000ffff582623a8)    ;; object: 0x39c04241 <undefined>
0xffff582621fc   284  stur x0, [x3, #255]
0xffff58262200   288  ldr x0, pc+432 (addr 0x0000ffff582623b0)    ;; object: 0x39c04241 <undefined>
0xffff58262204   292  movz x16, #0x107
0xffff58262208   296  str x0, [x3, x16]
0xffff5826220c   300  ldr x0, pc+428 (addr 0x0000ffff582623b8)    ;; object: 0x39c04241 <undefined>
0xffff58262210   304  movz x16, #0x10f
0xffff58262214   308  str x0, [x3, x16]
0xffff58262218   312  ldr x0, pc+424 (addr 0x0000ffff582623c0)    ;; object: 0x39c04241 <undefined>
0xffff5826221c   316  movz x16, #0x117
0xffff58262220   320  str x0, [x3, x16]
0xffff58262224   324  ldr x0, pc+420 (addr 0x0000ffff582623c8)    ;; object: 0x39c04241 <undefined>
0xffff58262228   328  movz x16, #0x11f
0xffff5826222c   332  str x0, [x3, x16]
0xffff58262230   336  ldr x0, pc+416 (addr 0x0000ffff582623d0)    ;; object: 0x39c04241 <undefined>
0xffff58262234   340  movz x16, #0x127
0xffff58262238   344  str x0, [x3, x16]
0xffff5826223c   348  ldr x0, pc+412 (addr 0x0000ffff582623d8)    ;; object: 0x39c04241 <undefined>
0xffff58262240   352  movz x16, #0x12f
0xffff58262244   356  str x0, [x3, x16]
0xffff58262248   360  ldr x0, pc+408 (addr 0x0000ffff582623e0)    ;; object: 0x39c04241 <undefined>
0xffff5826224c   364  movz x16, #0x137
0xffff58262250   368  str x0, [x3, x16]
0xffff58262254   372  mov x0, x3
0xffff58262258   376  ret
0xffff5826225c   380  sub csp, jssp, #0x10 (16)
0xffff58262260   384  stp fp, lr, [jssp, #-16]!
0xffff58262264   388  movz fp, #0xa00000000
0xffff58262268   392  sub csp, jssp, #0x8 (8)
0xffff5826226c   396  str fp, [jssp, #-8]!
0xffff58262270   400  add fp, jssp, #0x8 (8)
0xffff58262274   404  movz x3, #0x0
0xffff58262278   408  mov x16, lr
0xffff5826227c   412  ldr x17, pc+364 (addr 0x0000ffff582623e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58262280   416  blr x17
0xffff58262284   420  movz x0, #0x14000000000
0xffff58262288   424  movz x10, #0x0
0xffff5826228c   428  sub csp, jssp, #0x10 (16)
0xffff58262290   432  stp x10, x0, [jssp, #-16]!
0xffff58262294   436  movz x0, #0x2
0xffff58262298   440  movz x1, #0x5b88
0xffff5826229c   444  movk x1, #0xe2, lsl #16
0xffff582622a0   448  ldr x16, pc+336 (addr 0x0000ffff582623f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff582622a4   452  blr x16
0xffff582622a8   456  str x0, [jssp, #24]
0xffff582622ac   460  ldr x16, pc+332 (addr 0x0000ffff582623f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582622b0   464  blr x16
0xffff582622b4   468  ldr lr, [jssp, #16]
0xffff582622b8   472  ldp xzr, fp, [jssp], #24
0xffff582622bc   476  b #-0x1bc (addr 0xffff58262100)
0xffff582622c0   480  580009ff       constant pool begin (num_const = 79)    ;; constant pool
0xffff582622c4   484  d63f03e0       constant
0xffff582622c8   488  32b06149       constant
0xffff582622cc   492  00000000       constant
0xffff582622d0   496  39c04519       constant
0xffff582622d4   500  00000000       constant
0xffff582622d8   504  39c04241       constant
0xffff582622dc   508  00000000       constant
0xffff582622e0   512  39c04241       constant
0xffff582622e4   516  00000000       constant
0xffff582622e8   520  39c04241       constant
0xffff582622ec   524  00000000       constant
0xffff582622f0   528  39c04241       constant
0xffff582622f4   532  00000000       constant
0xffff582622f8   536  39c04241       constant
0xffff582622fc   540  00000000       constant
0xffff58262300   544  39c04241       constant
0xffff58262304   548  00000000       constant
0xffff58262308   552  39c04241       constant
0xffff5826230c   556  00000000       constant
0xffff58262310   560  39c04241       constant
0xffff58262314   564  00000000       constant
0xffff58262318   568  39c04241       constant
0xffff5826231c   572  00000000       constant
0xffff58262320   576  39c04241       constant
0xffff58262324   580  00000000       constant
0xffff58262328   584  39c04241       constant
0xffff5826232c   588  00000000       constant
0xffff58262330   592  39c04241       constant
0xffff58262334   596  00000000       constant
0xffff58262338   600  39c04241       constant
0xffff5826233c   604  00000000       constant
0xffff58262340   608  39c04241       constant
0xffff58262344   612  00000000       constant
0xffff58262348   616  39c04241       constant
0xffff5826234c   620  00000000       constant
0xffff58262350   624  39c04241       constant
0xffff58262354   628  00000000       constant
0xffff58262358   632  39c04241       constant
0xffff5826235c   636  00000000       constant
0xffff58262360   640  39c04241       constant
0xffff58262364   644  00000000       constant
0xffff58262368   648  39c04241       constant
0xffff5826236c   652  00000000       constant
0xffff58262370   656  39c04241       constant
0xffff58262374   660  00000000       constant
0xffff58262378   664  39c04241       constant
0xffff5826237c   668  00000000       constant
0xffff58262380   672  39c04241       constant
0xffff58262384   676  00000000       constant
0xffff58262388   680  39c04241       constant
0xffff5826238c   684  00000000       constant
0xffff58262390   688  39c04241       constant
0xffff58262394   692  00000000       constant
0xffff58262398   696  39c04241       constant
0xffff5826239c   700  00000000       constant
0xffff582623a0   704  39c04241       constant
0xffff582623a4   708  00000000       constant
0xffff582623a8   712  39c04241       constant
0xffff582623ac   716  00000000       constant
0xffff582623b0   720  39c04241       constant
0xffff582623b4   724  00000000       constant
0xffff582623b8   728  39c04241       constant
0xffff582623bc   732  00000000       constant
0xffff582623c0   736  39c04241       constant
0xffff582623c4   740  00000000       constant
0xffff582623c8   744  39c04241       constant
0xffff582623cc   748  00000000       constant
0xffff582623d0   752  39c04241       constant
0xffff582623d4   756  00000000       constant
0xffff582623d8   760  39c04241       constant
0xffff582623dc   764  00000000       constant
0xffff582623e0   768  39c04241       constant
0xffff582623e4   772  00000000       constant
0xffff582623e8   776  58206820       constant
0xffff582623ec   780  0000ffff       constant
0xffff582623f0   784  58206260       constant
0xffff582623f4   788  0000ffff       constant
0xffff582623f8   792  582068e0       constant
0xffff582623fc   796  0000ffff       constant


Safepoints (size = 21)
0xffff582622a8   456  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 45)
0xffff58262100  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58262118  embedded object  (0x39c04519 <the hole>)
0xffff58262128  embedded object  (0x39c04241 <undefined>)
0xffff58262130  embedded object  (0x39c04241 <undefined>)
0xffff58262138  embedded object  (0x39c04241 <undefined>)
0xffff58262140  embedded object  (0x39c04241 <undefined>)
0xffff58262148  embedded object  (0x39c04241 <undefined>)
0xffff58262150  embedded object  (0x39c04241 <undefined>)
0xffff58262158  embedded object  (0x39c04241 <undefined>)
0xffff58262160  embedded object  (0x39c04241 <undefined>)
0xffff58262168  embedded object  (0x39c04241 <undefined>)
0xffff58262170  embedded object  (0x39c04241 <undefined>)
0xffff58262178  embedded object  (0x39c04241 <undefined>)
0xffff58262180  embedded object  (0x39c04241 <undefined>)
0xffff58262188  embedded object  (0x39c04241 <undefined>)
0xffff58262190  embedded object  (0x39c04241 <undefined>)
0xffff58262198  embedded object  (0x39c04241 <undefined>)
0xffff582621a0  embedded object  (0x39c04241 <undefined>)
0xffff582621a8  embedded object  (0x39c04241 <undefined>)
0xffff582621b0  embedded object  (0x39c04241 <undefined>)
0xffff582621b8  embedded object  (0x39c04241 <undefined>)
0xffff582621c0  embedded object  (0x39c04241 <undefined>)
0xffff582621c8  embedded object  (0x39c04241 <undefined>)
0xffff582621d0  embedded object  (0x39c04241 <undefined>)
0xffff582621d8  embedded object  (0x39c04241 <undefined>)
0xffff582621e0  embedded object  (0x39c04241 <undefined>)
0xffff582621e8  embedded object  (0x39c04241 <undefined>)
0xffff582621f0  embedded object  (0x39c04241 <undefined>)
0xffff582621f8  embedded object  (0x39c04241 <undefined>)
0xffff58262200  embedded object  (0x39c04241 <undefined>)
0xffff5826220c  embedded object  (0x39c04241 <undefined>)
0xffff58262218  embedded object  (0x39c04241 <undefined>)
0xffff58262224  embedded object  (0x39c04241 <undefined>)
0xffff58262230  embedded object  (0x39c04241 <undefined>)
0xffff5826223c  embedded object  (0x39c04241 <undefined>)
0xffff58262248  embedded object  (0x39c04241 <undefined>)
0xffff5826227c  code target (STUB)  (0xffff58206820)
0xffff582622a0  code target (STUB)  (0xffff58206260)
0xffff582622ac  code target (STUB)  (0xffff582068e0)
0xffff582622c0  constant pool (size 320)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff58262480     0  movz x1, #0x92c0
0xffff58262484     4  movk x1, #0x16e7, lsl #16
0xffff58262488     8  ldp x3, x0, [x1]
0xffff5826248c    12  adds x16, x3, #0x48 (72)
0xffff58262490    16  ccmp x16, x0, #nzCv, lo
0xffff58262494    20  b.hi #+0x1bc (addr 0xffff58262650)
0xffff58262498    24  str x16, [x1]
0xffff5826249c    28  orr x3, x3, #0x1
0xffff582624a0    32  ldur x0, [cp, #39]
0xffff582624a4    36  movz x16, #0x2d7
0xffff582624a8    40  ldr x1, [x0, x16]
0xffff582624ac    44  stur x1, [x3, #-1]
0xffff582624b0    48  ldr x1, pc+528 (addr 0x0000ffff582626c0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582624b4    52  stur x1, [x3, #7]
0xffff582624b8    56  ldr x1, pc+528 (addr 0x0000ffff582626c8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582624bc    60  stur x1, [x3, #15]
0xffff582624c0    64  ldr x1, pc+528 (addr 0x0000ffff582626d0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582624c4    68  stur x1, [x3, #47]
0xffff582624c8    72  ldr x1, pc+528 (addr 0x0000ffff582626d8)    ;; object: 0x39c04519 <the hole>
0xffff582624cc    76  stur x1, [x3, #23]
0xffff582624d0    80  stur x2, [x3, #31]
0xffff582624d4    84  stur cp, [x3, #39]
0xffff582624d8    88  ldur x1, [x2, #23]
0xffff582624dc    92  movz x4, #0x0
0xffff582624e0    96  cmp x1, x4
0xffff582624e4   100  b.eq #+0x150 (addr 0xffff58262634)
0xffff582624e8   104  ldur w4, [x1, #11]
0xffff582624ec   108  subs w4, w4, #0x4 (4)
0xffff582624f0   112  b.vs #+0x230 (addr 0xffff58262720)
0xffff582624f4   116  mov x5, x4
0xffff582624f8   120  cmp w5, #0x1 (1)
0xffff582624fc   124  b.lt #+0xb4 (addr 0xffff582625b0)
0xffff58262500   128  add x4, x1, #0xf (15)
0xffff58262504   132  ldr x6, [x4, w5, sxtw #3]
0xffff58262508   136  ldur x4, [x6, #7]
0xffff5826250c   140  add x6, x1, #0x27 (39)
0xffff58262510   144  ldr x7, [x6, w5, sxtw #3]
0xffff58262514   148  add x6, x1, #0x17 (23)
0xffff58262518   152  ldr x8, [x6, w5, sxtw #3]
0xffff5826251c   156  ldur x6, [x8, #7]
0xffff58262520   160  cmp x0, x4
0xffff58262524   164  b.ne #+0x1c (addr 0xffff58262540)
0xffff58262528   168  mov x4, #0xffffffff00000000
0xffff5826252c   172  cmp x7, x4
0xffff58262530   176  b.ne #+0x10 (addr 0xffff58262540)
0xffff58262534   180  movz x4, #0x0
0xffff58262538   184  cmp x6, x4
0xffff5826253c   188  b.ne #+0xc (addr 0xffff58262548)
0xffff58262540   192  sub w5, w5, #0x4 (4)
0xffff58262544   196  b #-0x4c (addr 0xffff582624f8)
0xffff58262548   200  add x4, x1, #0x1f (31)
0xffff5826254c   204  ldr x7, [x4, w5, sxtw #3]
0xffff58262550   208  ldur x7, [x7, #7]
0xffff58262554   212  movz x4, #0x0
0xffff58262558   216  cmp x7, x4
0xffff5826255c   220  b.eq #+0x50 (addr 0xffff582625ac)
0xffff58262560   224  add x4, x6, #0x5f (95)
0xffff58262564   228  stur x4, [x3, #55]
0xffff58262568   232  stur x7, [x3, #47]
0xffff5826256c   236  movz x16, #0x557
0xffff58262570   240  ldr x4, [x0, x16]
0xffff58262574   244  stur x4, [x3, #63]
0xffff58262578   248  mov x4, x3
0xffff5826257c   252  movz x16, #0x557
0xffff58262580   256  str x4, [x0, x16]
0xffff58262584   260  add x6, x0, #0x557 (1367)
0xffff58262588   264  and x4, x0, #0xfffffffffff00000
0xffff5826258c   268  ldr x4, [x4, #8]
0xffff58262590   272  tbz w4, #2, #+0x18 (addr 0xffff582625a8)
0xffff58262594   276  sub csp, jssp, #0x8 (8)
0xffff58262598   280  str lr, [jssp, #-8]!
0xffff5826259c   284  ldr x16, pc+324 (addr 0x0000ffff582626e0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff582625a0   288  blr x16
0xffff582625a4   292  ldr lr, [jssp], #8
0xffff582625a8   296  b #+0x8 (addr 0xffff582625b0)
0xffff582625ac   300  b #+0x184 (addr 0xffff58262730)
0xffff582625b0   304  cmp w5, #0x1 (1)
0xffff582625b4   308  b.ge #+0x94 (addr 0xffff58262648)
0xffff582625b8   312  ldur x1, [x1, #15]
0xffff582625bc   316  ldur x1, [x1, #7]
0xffff582625c0   320  movz x4, #0x0
0xffff582625c4   324  cmp x1, x4
0xffff582625c8   328  b.eq #+0x54 (addr 0xffff5826261c)
0xffff582625cc   332  add x1, x1, #0x5f (95)
0xffff582625d0   336  stur x1, [x3, #55]
0xffff582625d4   340  ldr x1, pc+276 (addr 0x0000ffff582626e8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff582625d8   344  stur x1, [x3, #47]
0xffff582625dc   348  movz x16, #0x557
0xffff582625e0   352  ldr x1, [x0, x16]
0xffff582625e4   356  stur x1, [x3, #63]
0xffff582625e8   360  mov x1, x3
0xffff582625ec   364  movz x16, #0x557
0xffff582625f0   368  str x1, [x0, x16]
0xffff582625f4   372  add x2, x0, #0x557 (1367)
0xffff582625f8   376  and x1, x0, #0xfffffffffff00000
0xffff582625fc   380  ldr x1, [x1, #8]
0xffff58262600   384  tbz w1, #2, #+0x18 (addr 0xffff58262618)
0xffff58262604   388  sub csp, jssp, #0x8 (8)
0xffff58262608   392  str lr, [jssp, #-8]!
0xffff5826260c   396  ldr x16, pc+228 (addr 0x0000ffff582626f0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff58262610   400  blr x16
0xffff58262614   404  ldr lr, [jssp], #8
0xffff58262618   408  b #+0x30 (addr 0xffff58262648)
0xffff5826261c   412  ldr x0, pc+220 (addr 0x0000ffff582626f8)    ;; object: 0x39c04241 <undefined>
0xffff58262620   416  stur x0, [x3, #63]
0xffff58262624   420  ldur x0, [x2, #15]
0xffff58262628   424  add x0, x0, #0x5f (95)
0xffff5826262c   428  stur x0, [x3, #55]
0xffff58262630   432  b #+0x18 (addr 0xffff58262648)
0xffff58262634   436  ldr x0, pc+204 (addr 0x0000ffff58262700)    ;; object: 0x39c04241 <undefined>
0xffff58262638   440  stur x0, [x3, #63]
0xffff5826263c   444  ldur x0, [x2, #15]
0xffff58262640   448  add x0, x0, #0x5f (95)
0xffff58262644   452  stur x0, [x3, #55]
0xffff58262648   456  mov x0, x3
0xffff5826264c   460  ret
0xffff58262650   464  sub csp, jssp, #0x10 (16)
0xffff58262654   468  stp fp, lr, [jssp, #-16]!
0xffff58262658   472  movz fp, #0xa00000000
0xffff5826265c   476  sub csp, jssp, #0x8 (8)
0xffff58262660   480  str fp, [jssp, #-8]!
0xffff58262664   484  add fp, jssp, #0x8 (8)
0xffff58262668   488  movz x3, #0x0
0xffff5826266c   492  mov x16, lr
0xffff58262670   496  ldr x17, pc+152 (addr 0x0000ffff58262708)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58262674   500  blr x17
0xffff58262678   504  movz x0, #0x4800000000
0xffff5826267c   508  movz x10, #0x0
0xffff58262680   512  sub csp, jssp, #0x10 (16)
0xffff58262684   516  stp x10, x0, [jssp, #-16]!
0xffff58262688   520  movz x0, #0x2
0xffff5826268c   524  movz x1, #0x5b88
0xffff58262690   528  movk x1, #0xe2, lsl #16
0xffff58262694   532  ldr x16, pc+124 (addr 0x0000ffff58262710)    ;; code: STUB, CEntryStub, minor: 5
0xffff58262698   536  blr x16
0xffff5826269c   540  str x0, [jssp, #24]
0xffff582626a0   544  ldr x16, pc+120 (addr 0x0000ffff58262718)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582626a4   548  blr x16
0xffff582626a8   552  ldr lr, [jssp, #16]
0xffff582626ac   556  ldp xzr, fp, [jssp], #24
0xffff582626b0   560  b #-0x210 (addr 0xffff582624a0)
0xffff582626b4   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff582626b8   568  d63f03e0       constant
0xffff582626bc   572  d503201f       constant
0xffff582626c0   576  39c04201       constant
0xffff582626c4   580  00000000       constant
0xffff582626c8   584  39c04201       constant
0xffff582626cc   588  00000000       constant
0xffff582626d0   592  39c04201       constant
0xffff582626d4   596  00000000       constant
0xffff582626d8   600  39c04519       constant
0xffff582626dc   604  00000000       constant
0xffff582626e0   608  5822d2c0       constant
0xffff582626e4   612  0000ffff       constant
0xffff582626e8   616  39c04201       constant
0xffff582626ec   620  00000000       constant
0xffff582626f0   624  5822daa0       constant
0xffff582626f4   628  0000ffff       constant
0xffff582626f8   632  39c04241       constant
0xffff582626fc   636  00000000       constant
0xffff58262700   640  39c04241       constant
0xffff58262704   644  00000000       constant
0xffff58262708   648  58206820       constant
0xffff5826270c   652  0000ffff       constant
0xffff58262710   656  58206260       constant
0xffff58262714   660  0000ffff       constant
0xffff58262718   664  582068e0       constant
0xffff5826271c   668  0000ffff       constant
0xffff58262720   672  movz x16, #0x0
0xffff58262724   676  sub csp, jssp, #0x10 (16)
0xffff58262728   680  stp fp, lr, [jssp, #-16]!
0xffff5826272c   684  bl #+0x14 (addr 0xffff58262740)
0xffff58262730   688  movz x16, #0x8
0xffff58262734   692  sub csp, jssp, #0x10 (16)
0xffff58262738   696  stp fp, lr, [jssp, #-16]!
0xffff5826273c   700  bl #+0x4 (addr 0xffff58262740)
0xffff58262740   704  movz x17, #0xa00000000
0xffff58262744   708  sub csp, jssp, #0x10 (16)
0xffff58262748   712  stp x17, cp, [jssp, #-16]!
0xffff5826274c   716  add fp, jssp, #0x10 (16)
0xffff58262750   720  ldr x17, pc+24 (addr 0x0000ffff58262768)    ;; lazy deoptimization bailout 0
0xffff58262754   724  add x17, x17, x16
0xffff58262758   728  br x17
0xffff5826275c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58262760   736  d63f03e0       constant
0xffff58262764   740  d503201f       constant
0xffff58262768   744  58006000       constant
0xffff5826276c   748  0000ffff       constant


Safepoints (size = 21)
0xffff5826269c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff582624b0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582624b8  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582624c0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff582624c8  embedded object  (0x39c04519 <the hole>)
0xffff5826259c  code target (STUB)  (0xffff5822d2c0)
0xffff582625d4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5826260c  code target (STUB)  (0xffff5822daa0)
0xffff5826261c  embedded object  (0x39c04241 <undefined>)
0xffff58262634  embedded object  (0x39c04241 <undefined>)
0xffff58262670  code target (STUB)  (0xffff58206820)
0xffff58262694  code target (STUB)  (0xffff58206260)
0xffff582626a0  code target (STUB)  (0xffff582068e0)
0xffff582626b4  constant pool (size 108)
0xffff58262750  runtime entry
0xffff5826275c  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58264020     0  ldur x0, [x1, #7]
0xffff58264024     4  movz x16, #0x10f
0xffff58264028     8  ldr x0, [x0, x16]
0xffff5826402c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582640a0     0  ldur x0, [x1, #7]
0xffff582640a4     4  movz x16, #0x11f
0xffff582640a8     8  ldr x0, [x0, x16]
0xffff582640ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58264120     0  ldur x0, [x1, #7]
0xffff58264124     4  movz x16, #0x12f
0xffff58264128     8  ldr x0, [x0, x16]
0xffff5826412c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582641a0     0  ldur x0, [x1, #7]
0xffff582641a4     4  movz x16, #0x127
0xffff582641a8     8  ldr x0, [x0, x16]
0xffff582641ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58264220     0  ldur x0, [x1, #7]
0xffff58264224     4  movz x16, #0x137
0xffff58264228     8  ldr x0, [x0, x16]
0xffff5826422c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582642a0     0  ldur x0, [x1, #7]
0xffff582642a4     4  movz x16, #0x13f
0xffff582642a8     8  ldr x0, [x0, x16]
0xffff582642ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58264320     0  ldur x0, [x1, #7]
0xffff58264324     4  movz x16, #0x147
0xffff58264328     8  ldr x0, [x0, x16]
0xffff5826432c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 1301)
0xffff582646a0     0  movz x2, #0x92c0
0xffff582646a4     4  movk x2, #0x16e7, lsl #16
0xffff582646a8     8  ldp x3, x0, [x2]
0xffff582646ac    12  adds x16, x3, #0x200 (512)
0xffff582646b0    16  ccmp x16, x0, #nzCv, lo
0xffff582646b4    20  b.hi #+0x288 (addr 0xffff5826493c)
0xffff582646b8    24  str x16, [x2]
0xffff582646bc    28  orr x3, x3, #0x1
0xffff582646c0    32  ldr x0, pc+744 (addr 0x0000ffff582649a8)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582646c4    36  stur x0, [x3, #-1]
0xffff582646c8    40  movz x0, #0x3e00000000
0xffff582646cc    44  stur x0, [x3, #7]
0xffff582646d0    48  stur x1, [x3, #15]
0xffff582646d4    52  stur cp, [x3, #23]
0xffff582646d8    56  ldr x0, pc+728 (addr 0x0000ffff582649b0)    ;; object: 0x39c04519 <the hole>
0xffff582646dc    60  stur x0, [x3, #31]
0xffff582646e0    64  ldur x0, [cp, #39]
0xffff582646e4    68  stur x0, [x3, #39]
0xffff582646e8    72  ldr x0, pc+720 (addr 0x0000ffff582649b8)    ;; object: 0x39c04241 <undefined>
0xffff582646ec    76  stur x0, [x3, #47]
0xffff582646f0    80  ldr x0, pc+720 (addr 0x0000ffff582649c0)    ;; object: 0x39c04241 <undefined>
0xffff582646f4    84  stur x0, [x3, #55]
0xffff582646f8    88  ldr x0, pc+720 (addr 0x0000ffff582649c8)    ;; object: 0x39c04241 <undefined>
0xffff582646fc    92  stur x0, [x3, #63]
0xffff58264700    96  ldr x0, pc+720 (addr 0x0000ffff582649d0)    ;; object: 0x39c04241 <undefined>
0xffff58264704   100  stur x0, [x3, #71]
0xffff58264708   104  ldr x0, pc+720 (addr 0x0000ffff582649d8)    ;; object: 0x39c04241 <undefined>
0xffff5826470c   108  stur x0, [x3, #79]
0xffff58264710   112  ldr x0, pc+720 (addr 0x0000ffff582649e0)    ;; object: 0x39c04241 <undefined>
0xffff58264714   116  stur x0, [x3, #87]
0xffff58264718   120  ldr x0, pc+720 (addr 0x0000ffff582649e8)    ;; object: 0x39c04241 <undefined>
0xffff5826471c   124  stur x0, [x3, #95]
0xffff58264720   128  ldr x0, pc+720 (addr 0x0000ffff582649f0)    ;; object: 0x39c04241 <undefined>
0xffff58264724   132  stur x0, [x3, #103]
0xffff58264728   136  ldr x0, pc+720 (addr 0x0000ffff582649f8)    ;; object: 0x39c04241 <undefined>
0xffff5826472c   140  stur x0, [x3, #111]
0xffff58264730   144  ldr x0, pc+720 (addr 0x0000ffff58264a00)    ;; object: 0x39c04241 <undefined>
0xffff58264734   148  stur x0, [x3, #119]
0xffff58264738   152  ldr x0, pc+720 (addr 0x0000ffff58264a08)    ;; object: 0x39c04241 <undefined>
0xffff5826473c   156  stur x0, [x3, #127]
0xffff58264740   160  ldr x0, pc+720 (addr 0x0000ffff58264a10)    ;; object: 0x39c04241 <undefined>
0xffff58264744   164  stur x0, [x3, #135]
0xffff58264748   168  ldr x0, pc+720 (addr 0x0000ffff58264a18)    ;; object: 0x39c04241 <undefined>
0xffff5826474c   172  stur x0, [x3, #143]
0xffff58264750   176  ldr x0, pc+720 (addr 0x0000ffff58264a20)    ;; object: 0x39c04241 <undefined>
0xffff58264754   180  stur x0, [x3, #151]
0xffff58264758   184  ldr x0, pc+720 (addr 0x0000ffff58264a28)    ;; object: 0x39c04241 <undefined>
0xffff5826475c   188  stur x0, [x3, #159]
0xffff58264760   192  ldr x0, pc+720 (addr 0x0000ffff58264a30)    ;; object: 0x39c04241 <undefined>
0xffff58264764   196  stur x0, [x3, #167]
0xffff58264768   200  ldr x0, pc+720 (addr 0x0000ffff58264a38)    ;; object: 0x39c04241 <undefined>
0xffff5826476c   204  stur x0, [x3, #175]
0xffff58264770   208  ldr x0, pc+720 (addr 0x0000ffff58264a40)    ;; object: 0x39c04241 <undefined>
0xffff58264774   212  stur x0, [x3, #183]
0xffff58264778   216  ldr x0, pc+720 (addr 0x0000ffff58264a48)    ;; object: 0x39c04241 <undefined>
0xffff5826477c   220  stur x0, [x3, #191]
0xffff58264780   224  ldr x0, pc+720 (addr 0x0000ffff58264a50)    ;; object: 0x39c04241 <undefined>
0xffff58264784   228  stur x0, [x3, #199]
0xffff58264788   232  ldr x0, pc+720 (addr 0x0000ffff58264a58)    ;; object: 0x39c04241 <undefined>
0xffff5826478c   236  stur x0, [x3, #207]
0xffff58264790   240  ldr x0, pc+720 (addr 0x0000ffff58264a60)    ;; object: 0x39c04241 <undefined>
0xffff58264794   244  stur x0, [x3, #215]
0xffff58264798   248  ldr x0, pc+720 (addr 0x0000ffff58264a68)    ;; object: 0x39c04241 <undefined>
0xffff5826479c   252  stur x0, [x3, #223]
0xffff582647a0   256  ldr x0, pc+720 (addr 0x0000ffff58264a70)    ;; object: 0x39c04241 <undefined>
0xffff582647a4   260  stur x0, [x3, #231]
0xffff582647a8   264  ldr x0, pc+720 (addr 0x0000ffff58264a78)    ;; object: 0x39c04241 <undefined>
0xffff582647ac   268  stur x0, [x3, #239]
0xffff582647b0   272  ldr x0, pc+720 (addr 0x0000ffff58264a80)    ;; object: 0x39c04241 <undefined>
0xffff582647b4   276  stur x0, [x3, #247]
0xffff582647b8   280  ldr x0, pc+720 (addr 0x0000ffff58264a88)    ;; object: 0x39c04241 <undefined>
0xffff582647bc   284  stur x0, [x3, #255]
0xffff582647c0   288  ldr x0, pc+720 (addr 0x0000ffff58264a90)    ;; object: 0x39c04241 <undefined>
0xffff582647c4   292  movz x16, #0x107
0xffff582647c8   296  str x0, [x3, x16]
0xffff582647cc   300  ldr x0, pc+716 (addr 0x0000ffff58264a98)    ;; object: 0x39c04241 <undefined>
0xffff582647d0   304  movz x16, #0x10f
0xffff582647d4   308  str x0, [x3, x16]
0xffff582647d8   312  ldr x0, pc+712 (addr 0x0000ffff58264aa0)    ;; object: 0x39c04241 <undefined>
0xffff582647dc   316  movz x16, #0x117
0xffff582647e0   320  str x0, [x3, x16]
0xffff582647e4   324  ldr x0, pc+708 (addr 0x0000ffff58264aa8)    ;; object: 0x39c04241 <undefined>
0xffff582647e8   328  movz x16, #0x11f
0xffff582647ec   332  str x0, [x3, x16]
0xffff582647f0   336  ldr x0, pc+704 (addr 0x0000ffff58264ab0)    ;; object: 0x39c04241 <undefined>
0xffff582647f4   340  movz x16, #0x127
0xffff582647f8   344  str x0, [x3, x16]
0xffff582647fc   348  ldr x0, pc+700 (addr 0x0000ffff58264ab8)    ;; object: 0x39c04241 <undefined>
0xffff58264800   352  movz x16, #0x12f
0xffff58264804   356  str x0, [x3, x16]
0xffff58264808   360  ldr x0, pc+696 (addr 0x0000ffff58264ac0)    ;; object: 0x39c04241 <undefined>
0xffff5826480c   364  movz x16, #0x137
0xffff58264810   368  str x0, [x3, x16]
0xffff58264814   372  ldr x0, pc+692 (addr 0x0000ffff58264ac8)    ;; object: 0x39c04241 <undefined>
0xffff58264818   376  movz x16, #0x13f
0xffff5826481c   380  str x0, [x3, x16]
0xffff58264820   384  ldr x0, pc+688 (addr 0x0000ffff58264ad0)    ;; object: 0x39c04241 <undefined>
0xffff58264824   388  movz x16, #0x147
0xffff58264828   392  str x0, [x3, x16]
0xffff5826482c   396  ldr x0, pc+684 (addr 0x0000ffff58264ad8)    ;; object: 0x39c04241 <undefined>
0xffff58264830   400  movz x16, #0x14f
0xffff58264834   404  str x0, [x3, x16]
0xffff58264838   408  ldr x0, pc+680 (addr 0x0000ffff58264ae0)    ;; object: 0x39c04241 <undefined>
0xffff5826483c   412  movz x16, #0x157
0xffff58264840   416  str x0, [x3, x16]
0xffff58264844   420  ldr x0, pc+676 (addr 0x0000ffff58264ae8)    ;; object: 0x39c04241 <undefined>
0xffff58264848   424  movz x16, #0x15f
0xffff5826484c   428  str x0, [x3, x16]
0xffff58264850   432  ldr x0, pc+672 (addr 0x0000ffff58264af0)    ;; object: 0x39c04241 <undefined>
0xffff58264854   436  movz x16, #0x167
0xffff58264858   440  str x0, [x3, x16]
0xffff5826485c   444  ldr x0, pc+668 (addr 0x0000ffff58264af8)    ;; object: 0x39c04241 <undefined>
0xffff58264860   448  movz x16, #0x16f
0xffff58264864   452  str x0, [x3, x16]
0xffff58264868   456  ldr x0, pc+664 (addr 0x0000ffff58264b00)    ;; object: 0x39c04241 <undefined>
0xffff5826486c   460  movz x16, #0x177
0xffff58264870   464  str x0, [x3, x16]
0xffff58264874   468  ldr x0, pc+660 (addr 0x0000ffff58264b08)    ;; object: 0x39c04241 <undefined>
0xffff58264878   472  movz x16, #0x17f
0xffff5826487c   476  str x0, [x3, x16]
0xffff58264880   480  ldr x0, pc+656 (addr 0x0000ffff58264b10)    ;; object: 0x39c04241 <undefined>
0xffff58264884   484  movz x16, #0x187
0xffff58264888   488  str x0, [x3, x16]
0xffff5826488c   492  ldr x0, pc+652 (addr 0x0000ffff58264b18)    ;; object: 0x39c04241 <undefined>
0xffff58264890   496  movz x16, #0x18f
0xffff58264894   500  str x0, [x3, x16]
0xffff58264898   504  ldr x0, pc+648 (addr 0x0000ffff58264b20)    ;; object: 0x39c04241 <undefined>
0xffff5826489c   508  movz x16, #0x197
0xffff582648a0   512  str x0, [x3, x16]
0xffff582648a4   516  ldr x0, pc+644 (addr 0x0000ffff58264b28)    ;; object: 0x39c04241 <undefined>
0xffff582648a8   520  movz x16, #0x19f
0xffff582648ac   524  str x0, [x3, x16]
0xffff582648b0   528  ldr x0, pc+640 (addr 0x0000ffff58264b30)    ;; object: 0x39c04241 <undefined>
0xffff582648b4   532  movz x16, #0x1a7
0xffff582648b8   536  str x0, [x3, x16]
0xffff582648bc   540  ldr x0, pc+636 (addr 0x0000ffff58264b38)    ;; object: 0x39c04241 <undefined>
0xffff582648c0   544  movz x16, #0x1af
0xffff582648c4   548  str x0, [x3, x16]
0xffff582648c8   552  ldr x0, pc+632 (addr 0x0000ffff58264b40)    ;; object: 0x39c04241 <undefined>
0xffff582648cc   556  movz x16, #0x1b7
0xffff582648d0   560  str x0, [x3, x16]
0xffff582648d4   564  ldr x0, pc+628 (addr 0x0000ffff58264b48)    ;; object: 0x39c04241 <undefined>
0xffff582648d8   568  movz x16, #0x1bf
0xffff582648dc   572  str x0, [x3, x16]
0xffff582648e0   576  ldr x0, pc+624 (addr 0x0000ffff58264b50)    ;; object: 0x39c04241 <undefined>
0xffff582648e4   580  movz x16, #0x1c7
0xffff582648e8   584  str x0, [x3, x16]
0xffff582648ec   588  ldr x0, pc+620 (addr 0x0000ffff58264b58)    ;; object: 0x39c04241 <undefined>
0xffff582648f0   592  movz x16, #0x1cf
0xffff582648f4   596  str x0, [x3, x16]
0xffff582648f8   600  ldr x0, pc+616 (addr 0x0000ffff58264b60)    ;; object: 0x39c04241 <undefined>
0xffff582648fc   604  movz x16, #0x1d7
0xffff58264900   608  str x0, [x3, x16]
0xffff58264904   612  ldr x0, pc+612 (addr 0x0000ffff58264b68)    ;; object: 0x39c04241 <undefined>
0xffff58264908   616  movz x16, #0x1df
0xffff5826490c   620  str x0, [x3, x16]
0xffff58264910   624  ldr x0, pc+608 (addr 0x0000ffff58264b70)    ;; object: 0x39c04241 <undefined>
0xffff58264914   628  movz x16, #0x1e7
0xffff58264918   632  str x0, [x3, x16]
0xffff5826491c   636  ldr x0, pc+604 (addr 0x0000ffff58264b78)    ;; object: 0x39c04241 <undefined>
0xffff58264920   640  movz x16, #0x1ef
0xffff58264924   644  str x0, [x3, x16]
0xffff58264928   648  ldr x0, pc+600 (addr 0x0000ffff58264b80)    ;; object: 0x39c04241 <undefined>
0xffff5826492c   652  movz x16, #0x1f7
0xffff58264930   656  str x0, [x3, x16]
0xffff58264934   660  mov x0, x3
0xffff58264938   664  ret
0xffff5826493c   668  sub csp, jssp, #0x10 (16)
0xffff58264940   672  stp fp, lr, [jssp, #-16]!
0xffff58264944   676  movz fp, #0xa00000000
0xffff58264948   680  sub csp, jssp, #0x8 (8)
0xffff5826494c   684  str fp, [jssp, #-8]!
0xffff58264950   688  add fp, jssp, #0x8 (8)
0xffff58264954   692  movz x3, #0x0
0xffff58264958   696  mov x16, lr
0xffff5826495c   700  ldr x17, pc+556 (addr 0x0000ffff58264b88)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58264960   704  blr x17
0xffff58264964   708  movz x0, #0x20000000000
0xffff58264968   712  movz x10, #0x0
0xffff5826496c   716  sub csp, jssp, #0x10 (16)
0xffff58264970   720  stp x10, x0, [jssp, #-16]!
0xffff58264974   724  movz x0, #0x2
0xffff58264978   728  movz x1, #0x5b88
0xffff5826497c   732  movk x1, #0xe2, lsl #16
0xffff58264980   736  ldr x16, pc+528 (addr 0x0000ffff58264b90)    ;; code: STUB, CEntryStub, minor: 5
0xffff58264984   740  blr x16
0xffff58264988   744  str x0, [jssp, #24]
0xffff5826498c   748  ldr x16, pc+524 (addr 0x0000ffff58264b98)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58264990   752  blr x16
0xffff58264994   756  ldr lr, [jssp, #16]
0xffff58264998   760  ldp xzr, fp, [jssp], #24
0xffff5826499c   764  b #-0x2dc (addr 0xffff582646c0)
0xffff582649a0   768  58000fff       constant pool begin (num_const = 127)    ;; constant pool
0xffff582649a4   772  d63f03e0       constant
0xffff582649a8   776  32b06149       constant
0xffff582649ac   780  00000000       constant
0xffff582649b0   784  39c04519       constant
0xffff582649b4   788  00000000       constant
0xffff582649b8   792  39c04241       constant
0xffff582649bc   796  00000000       constant
0xffff582649c0   800  39c04241       constant
0xffff582649c4   804  00000000       constant
0xffff582649c8   808  39c04241       constant
0xffff582649cc   812  00000000       constant
0xffff582649d0   816  39c04241       constant
0xffff582649d4   820  00000000       constant
0xffff582649d8   824  39c04241       constant
0xffff582649dc   828  00000000       constant
0xffff582649e0   832  39c04241       constant
0xffff582649e4   836  00000000       constant
0xffff582649e8   840  39c04241       constant
0xffff582649ec   844  00000000       constant
0xffff582649f0   848  39c04241       constant
0xffff582649f4   852  00000000       constant
0xffff582649f8   856  39c04241       constant
0xffff582649fc   860  00000000       constant
0xffff58264a00   864  39c04241       constant
0xffff58264a04   868  00000000       constant
0xffff58264a08   872  39c04241       constant
0xffff58264a0c   876  00000000       constant
0xffff58264a10   880  39c04241       constant
0xffff58264a14   884  00000000       constant
0xffff58264a18   888  39c04241       constant
0xffff58264a1c   892  00000000       constant
0xffff58264a20   896  39c04241       constant
0xffff58264a24   900  00000000       constant
0xffff58264a28   904  39c04241       constant
0xffff58264a2c   908  00000000       constant
0xffff58264a30   912  39c04241       constant
0xffff58264a34   916  00000000       constant
0xffff58264a38   920  39c04241       constant
0xffff58264a3c   924  00000000       constant
0xffff58264a40   928  39c04241       constant
0xffff58264a44   932  00000000       constant
0xffff58264a48   936  39c04241       constant
0xffff58264a4c   940  00000000       constant
0xffff58264a50   944  39c04241       constant
0xffff58264a54   948  00000000       constant
0xffff58264a58   952  39c04241       constant
0xffff58264a5c   956  00000000       constant
0xffff58264a60   960  39c04241       constant
0xffff58264a64   964  00000000       constant
0xffff58264a68   968  39c04241       constant
0xffff58264a6c   972  00000000       constant
0xffff58264a70   976  39c04241       constant
0xffff58264a74   980  00000000       constant
0xffff58264a78   984  39c04241       constant
0xffff58264a7c   988  00000000       constant
0xffff58264a80   992  39c04241       constant
0xffff58264a84   996  00000000       constant
0xffff58264a88  1000  39c04241       constant
0xffff58264a8c  1004  00000000       constant
0xffff58264a90  1008  39c04241       constant
0xffff58264a94  1012  00000000       constant
0xffff58264a98  1016  39c04241       constant
0xffff58264a9c  1020  00000000       constant
0xffff58264aa0  1024  39c04241       constant
0xffff58264aa4  1028  00000000       constant
0xffff58264aa8  1032  39c04241       constant
0xffff58264aac  1036  00000000       constant
0xffff58264ab0  1040  39c04241       constant
0xffff58264ab4  1044  00000000       constant
0xffff58264ab8  1048  39c04241       constant
0xffff58264abc  1052  00000000       constant
0xffff58264ac0  1056  39c04241       constant
0xffff58264ac4  1060  00000000       constant
0xffff58264ac8  1064  39c04241       constant
0xffff58264acc  1068  00000000       constant
0xffff58264ad0  1072  39c04241       constant
0xffff58264ad4  1076  00000000       constant
0xffff58264ad8  1080  39c04241       constant
0xffff58264adc  1084  00000000       constant
0xffff58264ae0  1088  39c04241       constant
0xffff58264ae4  1092  00000000       constant
0xffff58264ae8  1096  39c04241       constant
0xffff58264aec  1100  00000000       constant
0xffff58264af0  1104  39c04241       constant
0xffff58264af4  1108  00000000       constant
0xffff58264af8  1112  39c04241       constant
0xffff58264afc  1116  00000000       constant
0xffff58264b00  1120  39c04241       constant
0xffff58264b04  1124  00000000       constant
0xffff58264b08  1128  39c04241       constant
0xffff58264b0c  1132  00000000       constant
0xffff58264b10  1136  39c04241       constant
0xffff58264b14  1140  00000000       constant
0xffff58264b18  1144  39c04241       constant
0xffff58264b1c  1148  00000000       constant
0xffff58264b20  1152  39c04241       constant
0xffff58264b24  1156  00000000       constant
0xffff58264b28  1160  39c04241       constant
0xffff58264b2c  1164  00000000       constant
0xffff58264b30  1168  39c04241       constant
0xffff58264b34  1172  00000000       constant
0xffff58264b38  1176  39c04241       constant
0xffff58264b3c  1180  00000000       constant
0xffff58264b40  1184  39c04241       constant
0xffff58264b44  1188  00000000       constant
0xffff58264b48  1192  39c04241       constant
0xffff58264b4c  1196  00000000       constant
0xffff58264b50  1200  39c04241       constant
0xffff58264b54  1204  00000000       constant
0xffff58264b58  1208  39c04241       constant
0xffff58264b5c  1212  00000000       constant
0xffff58264b60  1216  39c04241       constant
0xffff58264b64  1220  00000000       constant
0xffff58264b68  1224  39c04241       constant
0xffff58264b6c  1228  00000000       constant
0xffff58264b70  1232  39c04241       constant
0xffff58264b74  1236  00000000       constant
0xffff58264b78  1240  39c04241       constant
0xffff58264b7c  1244  00000000       constant
0xffff58264b80  1248  39c04241       constant
0xffff58264b84  1252  00000000       constant
0xffff58264b88  1256  58206820       constant
0xffff58264b8c  1260  0000ffff       constant
0xffff58264b90  1264  58206260       constant
0xffff58264b94  1268  0000ffff       constant
0xffff58264b98  1272  582068e0       constant
0xffff58264b9c  1276  0000ffff       constant


Safepoints (size = 21)
0xffff58264988   744  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 69)
0xffff582646c0  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582646d8  embedded object  (0x39c04519 <the hole>)
0xffff582646e8  embedded object  (0x39c04241 <undefined>)
0xffff582646f0  embedded object  (0x39c04241 <undefined>)
0xffff582646f8  embedded object  (0x39c04241 <undefined>)
0xffff58264700  embedded object  (0x39c04241 <undefined>)
0xffff58264708  embedded object  (0x39c04241 <undefined>)
0xffff58264710  embedded object  (0x39c04241 <undefined>)
0xffff58264718  embedded object  (0x39c04241 <undefined>)
0xffff58264720  embedded object  (0x39c04241 <undefined>)
0xffff58264728  embedded object  (0x39c04241 <undefined>)
0xffff58264730  embedded object  (0x39c04241 <undefined>)
0xffff58264738  embedded object  (0x39c04241 <undefined>)
0xffff58264740  embedded object  (0x39c04241 <undefined>)
0xffff58264748  embedded object  (0x39c04241 <undefined>)
0xffff58264750  embedded object  (0x39c04241 <undefined>)
0xffff58264758  embedded object  (0x39c04241 <undefined>)
0xffff58264760  embedded object  (0x39c04241 <undefined>)
0xffff58264768  embedded object  (0x39c04241 <undefined>)
0xffff58264770  embedded object  (0x39c04241 <undefined>)
0xffff58264778  embedded object  (0x39c04241 <undefined>)
0xffff58264780  embedded object  (0x39c04241 <undefined>)
0xffff58264788  embedded object  (0x39c04241 <undefined>)
0xffff58264790  embedded object  (0x39c04241 <undefined>)
0xffff58264798  embedded object  (0x39c04241 <undefined>)
0xffff582647a0  embedded object  (0x39c04241 <undefined>)
0xffff582647a8  embedded object  (0x39c04241 <undefined>)
0xffff582647b0  embedded object  (0x39c04241 <undefined>)
0xffff582647b8  embedded object  (0x39c04241 <undefined>)
0xffff582647c0  embedded object  (0x39c04241 <undefined>)
0xffff582647cc  embedded object  (0x39c04241 <undefined>)
0xffff582647d8  embedded object  (0x39c04241 <undefined>)
0xffff582647e4  embedded object  (0x39c04241 <undefined>)
0xffff582647f0  embedded object  (0x39c04241 <undefined>)
0xffff582647fc  embedded object  (0x39c04241 <undefined>)
0xffff58264808  embedded object  (0x39c04241 <undefined>)
0xffff58264814  embedded object  (0x39c04241 <undefined>)
0xffff58264820  embedded object  (0x39c04241 <undefined>)
0xffff5826482c  embedded object  (0x39c04241 <undefined>)
0xffff58264838  embedded object  (0x39c04241 <undefined>)
0xffff58264844  embedded object  (0x39c04241 <undefined>)
0xffff58264850  embedded object  (0x39c04241 <undefined>)
0xffff5826485c  embedded object  (0x39c04241 <undefined>)
0xffff58264868  embedded object  (0x39c04241 <undefined>)
0xffff58264874  embedded object  (0x39c04241 <undefined>)
0xffff58264880  embedded object  (0x39c04241 <undefined>)
0xffff5826488c  embedded object  (0x39c04241 <undefined>)
0xffff58264898  embedded object  (0x39c04241 <undefined>)
0xffff582648a4  embedded object  (0x39c04241 <undefined>)
0xffff582648b0  embedded object  (0x39c04241 <undefined>)
0xffff582648bc  embedded object  (0x39c04241 <undefined>)
0xffff582648c8  embedded object  (0x39c04241 <undefined>)
0xffff582648d4  embedded object  (0x39c04241 <undefined>)
0xffff582648e0  embedded object  (0x39c04241 <undefined>)
0xffff582648ec  embedded object  (0x39c04241 <undefined>)
0xffff582648f8  embedded object  (0x39c04241 <undefined>)
0xffff58264904  embedded object  (0x39c04241 <undefined>)
0xffff58264910  embedded object  (0x39c04241 <undefined>)
0xffff5826491c  embedded object  (0x39c04241 <undefined>)
0xffff58264928  embedded object  (0x39c04241 <undefined>)
0xffff5826495c  code target (STUB)  (0xffff58206820)
0xffff58264980  code target (STUB)  (0xffff58206260)
0xffff5826498c  code target (STUB)  (0xffff582068e0)
0xffff582649a0  constant pool (size 512)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff58267340     0  ldur x0, [x1, #7]
0xffff58267344     4  ldur x0, [x0, #55]
0xffff58267348     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582673c0     0  ldur x0, [x1, #7]
0xffff582673c4     4  ldur x0, [x0, #39]
0xffff582673c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff58267440     0  ldur x0, [x1, #7]
0xffff58267444     4  ldur x0, [x0, #47]
0xffff58267448     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582674c0     0  ldur x0, [x1, #7]
0xffff582674c4     4  ldur x0, [x0, #63]
0xffff582674c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff58267540     0  ldur x0, [x1, #7]
0xffff58267544     4  ldur x0, [x0, #127]
0xffff58267548     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582675c0     0  ldur x0, [x1, #7]
0xffff582675c4     4  ldur x0, [x0, #167]
0xffff582675c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58267640     0  ldur x0, [x1, #-1]
0xffff58267644     4  ldur x0, [x0, #47]
0xffff58267648     8  movz x16, #0x617
0xffff5826764c    12  ldr x0, [x0, x16]
0xffff58267650    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582676c0     0  ldur x0, [x1, #7]
0xffff582676c4     4  movz x16, #0x157
0xffff582676c8     8  ldr x0, [x0, x16]
0xffff582676cc    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = INTERNALIZED_STRING*INTERNALIZED_STRING -> INTERNALIZED_STRING
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 184)
0xffff58267de0     0  and x16, x1, x0
0xffff58267de4     4  tbz w16, #0, #+0x2c (addr 0xffff58267e10)
0xffff58267de8     8  ldur x11, [x1, #-1]
0xffff58267dec    12  ldur x10, [x0, #-1]
0xffff58267df0    16  ldrb w11, [x11, #11]
0xffff58267df4    20  ldrb w10, [x10, #11]
0xffff58267df8    24  orr x12, x11, x10
0xffff58267dfc    28  tst x12, #0xc0
0xffff58267e00    32  b.ne #+0x10 (addr 0xffff58267e10)
0xffff58267e04    36  cmp x1, x0
0xffff58267e08    40  cset x0, ne
0xffff58267e0c    44  ret
0xffff58267e10    48  movz x16, #0xc00000000
0xffff58267e14    52  sub csp, jssp, #0x10 (16)
0xffff58267e18    56  stp fp, lr, [jssp, #-16]!
0xffff58267e1c    60  sub csp, jssp, #0x10 (16)
0xffff58267e20    64  str x16, [jssp, #-8]!
0xffff58267e24    68  ldr x17, pc+92 (addr 0x0000ffff58267e80)    ;; object: 0xffff58267d81 <Code: COMPARE_IC>
0xffff58267e28    72  sub csp, jssp, #0x10 (16)
0xffff58267e2c    76  str x17, [jssp, #-8]!
0xffff58267e30    80  add fp, jssp, #0x10 (16)
0xffff58267e34    84  sub csp, jssp, #0x18 (24)
0xffff58267e38    88  stp lr, x0, [jssp, #-24]!
0xffff58267e3c    92  str x1, [jssp, #16]
0xffff58267e40    96  movz x10, #0x2f00000000
0xffff58267e44   100  sub csp, jssp, #0x18 (24)
0xffff58267e48   104  stp x10, x0, [jssp, #-24]!
0xffff58267e4c   108  str x1, [jssp, #16]
0xffff58267e50   112  movz x0, #0x3
0xffff58267e54   116  ldr x1, pc+52 (addr 0x0000ffff58267e88)    ;; external reference (Runtime::CompareIC_Miss)
0xffff58267e58   120  ldr x16, pc+56 (addr 0x0000ffff58267e90)    ;; code: STUB, CEntryStub, minor: 4
0xffff58267e5c   124  blr x16
0xffff58267e60   128  add x11, x0, #0x5f (95)
0xffff58267e64   132  ldr x1, [jssp, #16]
0xffff58267e68   136  ldp lr, x0, [jssp], #24
0xffff58267e6c   140  mov jssp, fp
0xffff58267e70   144  ldp fp, lr, [jssp], #16
0xffff58267e74   148  br x11
0xffff58267e78   152  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58267e7c   156  d63f03e0       constant
0xffff58267e80   160  58267d81       constant
0xffff58267e84   164  0000ffff       constant
0xffff58267e88   168  00c8a980       constant
0xffff58267e8c   172  00000000       constant
0xffff58267e90   176  58206060       constant
0xffff58267e94   180  0000ffff       constant


RelocInfo (size = 12)
0xffff58267e24  embedded object  (0xffff58267d81 <Code: COMPARE_IC>)
0xffff58267e54  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff58267e58  code target (STUB)  (0xffff58206060)
0xffff58267e78  constant pool (size 32)


kind = STUB
major_key = DirectCEntryStub
name = DirectCEntryStub
compiler = unknown
Instructions (size = 16)
0xffff58268200     0  str lr, [csp]
0xffff58268204     4  blr x10
0xffff58268208     8  ldr lr, [csp]
0xffff5826820c    12  ret


RelocInfo (size = 0)


kind = STUB
major_key = CallApiGetterStub
name = CallApiGetterStub
compiler = unknown
Instructions (size = 440)
0xffff58268280     0  mov x0, jssp
0xffff58268284     4  add x1, x0, #0x8 (8)
0xffff58268288     8  sub csp, jssp, #0x10 (16)
0xffff5826828c    12  stp fp, lr, [jssp, #-16]!
0xffff58268290    16  mov fp, jssp
0xffff58268294    20  movz x10, #0x300000000
0xffff58268298    24  sub csp, jssp, #0x8 (8)
0xffff5826829c    28  str x10, [jssp, #-8]!
0xffff582682a0    32  sub csp, jssp, #0x8 (8)
0xffff582682a4    36  str xzr, [jssp, #-8]!
0xffff582682a8    40  ldr x10, pc+288 (addr 0x0000ffff582683c8)    ;; object: 0xffff58268221 <Code: STUB>
0xffff582682ac    44  sub csp, jssp, #0x8 (8)
0xffff582682b0    48  str x10, [jssp, #-8]!
0xffff582682b4    52  ldr x10, pc+284 (addr 0x0000ffff582683d0)    ;; external reference (Isolate::c_entry_fp_address)
0xffff582682b8    56  str fp, [x10]
0xffff582682bc    60  ldr x10, pc+284 (addr 0x0000ffff582683d8)    ;; external reference (Isolate::context_address)
0xffff582682c0    64  str cp, [x10]
0xffff582682c4    68  sub csp, jssp, #0x30 (48)
0xffff582682c8    72  sub jssp, jssp, #0x30 (48)
0xffff582682cc    76  and csp, jssp, #0xfffffffffffffff0
0xffff582682d0    80  add x10, csp, #0x8 (8)
0xffff582682d4    84  stur x10, [fp, #-16]
0xffff582682d8    88  str x1, [csp, #8]
0xffff582682dc    92  add x1, csp, #0x8 (8)
0xffff582682e0    96  ldr x10, pc+256 (addr 0x0000ffff582683e0)    ;; external reference (CpuProfiler::is_profiling)
0xffff582682e4   100  ldrb w10, [x10]
0xffff582682e8   104  cbz w10, #+0xc (addr 0xffff582682f4)
0xffff582682ec   108  ldr x3, pc+252 (addr 0x0000ffff582683e8)    ;; external reference (InvokeAccessorGetterCallback)
0xffff582682f0   112  b #+0x8 (addr 0xffff582682f8)
0xffff582682f4   116  mov x3, x2
0xffff582682f8   120  str x19, [csp, #16]
0xffff582682fc   124  str x20, [csp, #24]
0xffff58268300   128  str x21, [csp, #32]
0xffff58268304   132  str x22, [csp, #40]
0xffff58268308   136  ldr x22, pc+232 (addr 0x0000ffff582683f0)    ;; external reference (HandleScope::next)
0xffff5826830c   140  ldr x19, [x22]
0xffff58268310   144  ldr x20, [x22, #8]
0xffff58268314   148  ldr w21, [x22, #16]
0xffff58268318   152  add w21, w21, #0x1 (1)
0xffff5826831c   156  str w21, [x22, #16]
0xffff58268320   160  ldr lr, pc+216 (addr 0x0000ffff582683f8)    ;; code: STUB, DirectCEntryStub, minor: 0
0xffff58268324   164  mov x10, x3
0xffff58268328   168  blr lr
0xffff5826832c   172  ldr x0, [fp, #56]
0xffff58268330   176  str x19, [x22]
0xffff58268334   180  sub w21, w21, #0x1 (1)
0xffff58268338   184  str w21, [x22, #16]
0xffff5826833c   188  ldr x1, [x22, #8]
0xffff58268340   192  cmp x20, x1
0xffff58268344   196  b.ne #+0x58 (addr 0xffff5826839c)
0xffff58268348   200  ldr x19, [csp, #16]
0xffff5826834c   204  ldr x20, [csp, #24]
0xffff58268350   208  ldr x21, [csp, #32]
0xffff58268354   212  ldr x22, [csp, #40]
0xffff58268358   216  ldr x1, pc+168 (addr 0x0000ffff58268400)    ;; external reference (Isolate::context_address)
0xffff5826835c   220  ldr cp, [x1]
0xffff58268360   224  ldr x1, pc+168 (addr 0x0000ffff58268408)    ;; external reference (Isolate::c_entry_fp_address)
0xffff58268364   228  str xzr, [x1]
0xffff58268368   232  mov jssp, fp
0xffff5826836c   236  ldp fp, lr, [jssp], #16
0xffff58268370   240  ldr x5, pc+160 (addr 0x0000ffff58268410)    ;; external reference (Isolate::scheduled_exception)
0xffff58268374   244  ldr x5, [x5]
0xffff58268378   248  ldr x16, [x26, #88]
0xffff5826837c   252  cmp x5, x16
0xffff58268380   256  b.ne #+0xc (addr 0xffff5826838c)
0xffff58268384   260  add jssp, jssp, #0x40 (64)
0xffff58268388   264  ret
0xffff5826838c   268  movz x0, #0x0
0xffff58268390   272  ldr x1, pc+136 (addr 0x0000ffff58268418)    ;; external reference (Runtime::PromoteScheduledException)
0xffff58268394   276  ldr x16, pc+140 (addr 0x0000ffff58268420)    ;; code: STUB, CEntryStub, minor: 4
0xffff58268398   280  br x16
0xffff5826839c   284  str x20, [x22, #8]
0xffff582683a0   288  mov x19, x0
0xffff582683a4   292  ldr x0, pc+132 (addr 0x0000ffff58268428)    ;; external reference (isolate)
0xffff582683a8   296  ldr x16, pc+136 (addr 0x0000ffff58268430)    ;; external reference (HandleScope::DeleteExtensions)
0xffff582683ac   300  and csp, jssp, #0xfffffffffffffff0
0xffff582683b0   304  blr x16
0xffff582683b4   308  mov x0, x19
0xffff582683b8   312  b #-0x70 (addr 0xffff58268348)
0xffff582683bc   316  580003df       constant pool begin (num_const = 30)    ;; constant pool
0xffff582683c0   320  d63f03e0       constant
0xffff582683c4   324  d503201f       constant
0xffff582683c8   328  58268221       constant
0xffff582683cc   332  0000ffff       constant
0xffff582683d0   336  16e79df8       constant
0xffff582683d4   340  00000000       constant
0xffff582683d8   344  16e79d90       constant
0xffff582683dc   348  00000000       constant
0xffff582683e0   352  16ea35e1       constant
0xffff582683e4   356  00000000       constant
0xffff582683e8   360  009274e0       constant
0xffff582683ec   364  00000000       constant
0xffff582683f0   368  16e79e70       constant
0xffff582683f4   372  00000000       constant
0xffff582683f8   376  58268200       constant
0xffff582683fc   380  0000ffff       constant
0xffff58268400   384  16e79d90       constant
0xffff58268404   388  00000000       constant
0xffff58268408   392  16e79df8       constant
0xffff5826840c   396  00000000       constant
0xffff58268410   400  16e79de0       constant
0xffff58268414   404  00000000       constant
0xffff58268418   408  00e234b8       constant
0xffff5826841c   412  00000000       constant
0xffff58268420   416  58206060       constant
0xffff58268424   420  0000ffff       constant
0xffff58268428   424  16e782d0       constant
0xffff5826842c   428  00000000       constant
0xffff58268430   432  00c05c20       constant
0xffff58268434   436  00000000       constant


RelocInfo (size = 31)
0xffff582682a8  embedded object  (0xffff58268221 <Code: STUB>)
0xffff582682b4  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff582682bc  external reference (Isolate::context_address)  (0x16e79d90)
0xffff582682e0  external reference (CpuProfiler::is_profiling)  (0x16ea35e1)
0xffff582682ec  external reference (InvokeAccessorGetterCallback)  (0x9274e0)
0xffff58268308  external reference (HandleScope::next)  (0x16e79e70)
0xffff58268320  code target (STUB)  (0xffff58268200)
0xffff58268358  external reference (Isolate::context_address)  (0x16e79d90)
0xffff58268360  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff58268370  external reference (Isolate::scheduled_exception)  (0x16e79de0)
0xffff58268390  external reference (Runtime::PromoteScheduledException)  (0xe234b8)
0xffff58268394  code target (STUB)  (0xffff58206060)
0xffff582683a4  external reference (isolate)  (0x16e782d0)
0xffff582683a8  external reference (HandleScope::DeleteExtensions)  (0xc05c20)
0xffff582683bc  constant pool (size 124)


kind = HANDLER
major_key = <NoCache>Stub
name = name
compiler = unknown
Instructions (size = 184)
0xffff582684a0     0  sub csp, jssp, #0x8 (8)
0xffff582684a4     4  str x3, [jssp, #-8]!
0xffff582684a8     8  sub csp, jssp, #0x8 (8)
0xffff582684ac    12  str x0, [jssp, #-8]!
0xffff582684b0    16  ldr x0, pc+120 (addr 0x0000ffff58268528)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582684b4    20  ldur x0, [x0, #7]
0xffff582684b8    24  cmp x0, #0x0 (0)
0xffff582684bc    28  b.ne #+0x8 (addr 0xffff582684c4)
0xffff582684c0    32  b #+0x14 (addr 0xffff582684d4)
0xffff582684c4    36  ldr x0, [jssp], #8
0xffff582684c8    40  ldr x3, [jssp], #8
0xffff582684cc    44  ldr x16, pc+100 (addr 0x0000ffff58268530)    ;; code: BUILTIN
0xffff582684d0    48  br x16
0xffff582684d4    52  add jssp, jssp, #0x10 (16)
0xffff582684d8    56  sub csp, jssp, #0x8 (8)
0xffff582684dc    60  str x1, [jssp, #-8]!
0xffff582684e0    64  ldr x4, pc+88 (addr 0x0000ffff58268538)    ;; object: 0x39c04241 <undefined>
0xffff582684e4    68  ldr x5, [x26, #40]
0xffff582684e8    72  ldr x0, pc+88 (addr 0x0000ffff58268540)    ;; external reference (isolate)
0xffff582684ec    76  sub csp, jssp, #0x28 (40)
0xffff582684f0    80  stp x0, x5, [jssp, #-32]!
0xffff582684f4    84  stp x5, x4, [jssp, #16]
0xffff582684f8    88  str x1, [jssp, #-8]!
0xffff582684fc    92  movz x16, #0x0
0xffff58268500    96  sub csp, jssp, #0x8 (8)
0xffff58268504   100  str x16, [jssp, #-8]!
0xffff58268508   104  sub csp, jssp, #0x8 (8)
0xffff5826850c   108  str x2, [jssp, #-8]!
0xffff58268510   112  ldr x2, pc+56 (addr 0x0000ffff58268548)    ;; external reference (Accessors::FunctionNameGetter)
0xffff58268514   116  ldr x16, pc+60 (addr 0x0000ffff58268550)    ;; code: STUB, CallApiGetterStub, minor: 0
0xffff58268518   120  br x16
0xffff5826851c   124  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff58268520   128  d63f03e0       constant
0xffff58268524   132  d503201f       constant
0xffff58268528   136  39c5b0f1       constant
0xffff5826852c   140  00000000       constant
0xffff58268530   144  582222e0       constant
0xffff58268534   148  0000ffff       constant
0xffff58268538   152  39c04241       constant
0xffff5826853c   156  00000000       constant
0xffff58268540   160  16e782d0       constant
0xffff58268544   164  00000000       constant
0xffff58268548   168  008fefd8       constant
0xffff5826854c   172  00000000       constant
0xffff58268550   176  58268280       constant
0xffff58268554   180  0000ffff       constant


RelocInfo (size = 14)
0xffff582684b0  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582684cc  code target (BUILTIN)  (0xffff582222e0)
0xffff582684e0  embedded object  (0x39c04241 <undefined>)
0xffff582684e8  external reference (isolate)  (0x16e782d0)
0xffff58268510  external reference (Accessors::FunctionNameGetter)  (0x8fefd8)
0xffff58268514  code target (STUB)  (0xffff58268280)
0xffff5826851c  constant pool (size 60)

kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393221
name = CallICStub(args(5), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff582685c0     0  add x4, x2, x3, asr #29
0xffff582685c4     4  ldur x4, [x4, #15]
0xffff582685c8     8  ldur x5, [x4, #7]
0xffff582685cc    12  cmp x5, x1
0xffff582685d0    16  b.ne #+0x2c (addr 0xffff582685fc)
0xffff582685d4    20  tbz w1, #0, #+0x28 (addr 0xffff582685fc)
0xffff582685d8    24  add x2, x2, x3, asr #29
0xffff582685dc    28  add x2, x2, #0x18 (24)
0xffff582685e0    32  ldur x3, [x2, #-1]
0xffff582685e4    36  movz x16, #0x200000000
0xffff582685e8    40  add x3, x3, x16
0xffff582685ec    44  stur x3, [x2, #-1]
0xffff582685f0    48  movz x0, #0x5
0xffff582685f4    52  ldr x16, pc+372 (addr 0x0000ffff58268768)    ;; code: BUILTIN
0xffff582685f8    56  br x16
0xffff582685fc    60  ldr x16, [x26, #2400]
0xffff58268600    64  cmp x4, x16
0xffff58268604    68  b.eq #+0x78 (addr 0xffff5826867c)
0xffff58268608    72  ldur x5, [x4, #-1]
0xffff5826860c    76  ldr x16, [x26, #2736]
0xffff58268610    80  cmp x5, x16
0xffff58268614    84  b.ne #+0x40 (addr 0xffff58268654)
0xffff58268618    88  ldur x5, [cp, #39]
0xffff5826861c    92  ldur x5, [x5, #95]
0xffff58268620    96  cmp x1, x5
0xffff58268624   100  b.ne #+0xec (addr 0xffff58268710)
0xffff58268628   104  movz x0, #0x5
0xffff5826862c   108  add x2, x2, x3, asr #29
0xffff58268630   112  add x2, x2, #0x18 (24)
0xffff58268634   116  ldur x3, [x2, #-1]
0xffff58268638   120  movz x16, #0x200000000
0xffff5826863c   124  add x3, x3, x16
0xffff58268640   128  stur x3, [x2, #-1]
0xffff58268644   132  mov x2, x4
0xffff58268648   136  mov x3, x1
0xffff5826864c   140  ldr x16, pc+292 (addr 0x0000ffff58268770)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff58268650   144  br x16
0xffff58268654   148  ldr x16, [x26, #2568]
0xffff58268658   152  cmp x4, x16
0xffff5826865c   156  b.eq #+0xb4 (addr 0xffff58268710)
0xffff58268660   160  ldur x5, [x4, #-1]
0xffff58268664   164  ldrb w5, [x5, #11]
0xffff58268668   168  cmp x5, #0xc9 (201)
0xffff5826866c   172  b.ne #+0xa4 (addr 0xffff58268710)
0xffff58268670   176  add x4, x2, x3, asr #29
0xffff58268674   180  ldr x5, [x26, #2400]
0xffff58268678   184  stur x5, [x4, #15]
0xffff5826867c   188  movz x0, #0x5
0xffff58268680   192  ldr x16, pc+248 (addr 0x0000ffff58268778)    ;; code: BUILTIN
0xffff58268684   196  br x16
0xffff58268688   200  tbz w1, #0, #+0x88 (addr 0xffff58268710)
0xffff5826868c   204  ldur x5, [x1, #-1]
0xffff58268690   208  ldrb w5, [x5, #11]
0xffff58268694   212  cmp x5, #0xc9 (201)
0xffff58268698   216  b.ne #+0x78 (addr 0xffff58268710)
0xffff5826869c   220  ldur x5, [cp, #39]
0xffff582686a0   224  ldur x5, [x5, #95]
0xffff582686a4   228  cmp x1, x5
0xffff582686a8   232  b.eq #+0x68 (addr 0xffff58268710)
0xffff582686ac   236  ldur x4, [x1, #39]
0xffff582686b0   240  ldur x4, [x4, #39]
0xffff582686b4   244  ldur x5, [cp, #39]
0xffff582686b8   248  cmp x4, x5
0xffff582686bc   252  b.ne #+0x54 (addr 0xffff58268710)
0xffff582686c0   256  movz x5, #0x200000000
0xffff582686c4   260  adds x4, x2, x3, asr #29
0xffff582686c8   264  stur x5, [x4, #23]
0xffff582686cc   268  movz x16, #0xc00000000
0xffff582686d0   272  sub csp, jssp, #0x10 (16)
0xffff582686d4   276  stp fp, lr, [jssp, #-16]!
0xffff582686d8   280  sub csp, jssp, #0x10 (16)
0xffff582686dc   284  str x16, [jssp, #-8]!
0xffff582686e0   288  ldr x17, pc+160 (addr 0x0000ffff58268780)    ;; object: 0xffff58268561 <Code: CALL_IC>
0xffff582686e4   292  sub csp, jssp, #0x10 (16)
0xffff582686e8   296  str x17, [jssp, #-8]!
0xffff582686ec   300  add fp, jssp, #0x10 (16)
0xffff582686f0   304  sub csp, jssp, #0x8 (8)
0xffff582686f4   308  str x1, [jssp, #-8]!
0xffff582686f8   312  ldr x16, pc+144 (addr 0x0000ffff58268788)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff582686fc   316  blr x16
0xffff58268700   320  ldr x1, [jssp], #8
0xffff58268704   324  mov jssp, fp
0xffff58268708   328  ldp fp, lr, [jssp], #16
0xffff5826870c   332  b #-0x11c (addr 0xffff582685f0)
0xffff58268710   336  movz x16, #0xc00000000
0xffff58268714   340  sub csp, jssp, #0x10 (16)
0xffff58268718   344  stp fp, lr, [jssp, #-16]!
0xffff5826871c   348  sub csp, jssp, #0x10 (16)
0xffff58268720   352  str x16, [jssp, #-8]!
0xffff58268724   356  ldr x17, pc+108 (addr 0x0000ffff58268790)    ;; object: 0xffff58268561 <Code: CALL_IC>
0xffff58268728   360  sub csp, jssp, #0x10 (16)
0xffff5826872c   364  str x17, [jssp, #-8]!
0xffff58268730   368  add fp, jssp, #0x10 (16)
0xffff58268734   372  sub csp, jssp, #0x18 (24)
0xffff58268738   376  stp x3, x2, [jssp, #-24]!
0xffff5826873c   380  str x1, [jssp, #16]
0xffff58268740   384  movz x0, #0x3
0xffff58268744   388  ldr x1, pc+84 (addr 0x0000ffff58268798)    ;; external reference (Runtime::CallIC_Miss)
0xffff58268748   392  ldr x16, pc+88 (addr 0x0000ffff582687a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5826874c   396  blr x16
0xffff58268750   400  mov x1, x0
0xffff58268754   404  mov jssp, fp
0xffff58268758   408  ldp fp, lr, [jssp], #16
0xffff5826875c   412  b #-0xe0 (addr 0xffff5826867c)
0xffff58268760   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff58268764   420  d63f03e0       constant
0xffff58268768   424  5821e820       constant
0xffff5826876c   428  0000ffff       constant
0xffff58268770   432  58233b00       constant
0xffff58268774   436  0000ffff       constant
0xffff58268778   440  5821f820       constant
0xffff5826877c   444  0000ffff       constant
0xffff58268780   448  58268561       constant
0xffff58268784   452  0000ffff       constant
0xffff58268788   456  5820ddc0       constant
0xffff5826878c   460  0000ffff       constant
0xffff58268790   464  58268561       constant
0xffff58268794   468  0000ffff       constant
0xffff58268798   472  00c86928       constant
0xffff5826879c   476  00000000       constant
0xffff582687a0   480  58206060       constant
0xffff582687a4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff582685f4  code target (BUILTIN)  (0xffff5821e820)
0xffff5826864c  code target (STUB)  (0xffff58233b00)
0xffff58268680  code target (BUILTIN)  (0xffff5821f820)
0xffff582686e0  embedded object  (0xffff58268561 <Code: CALL_IC>)
0xffff582686f8  code target (STUB)  (0xffff5820ddc0)
0xffff58268724  embedded object  (0xffff58268561 <Code: CALL_IC>)
0xffff58268744  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58268748  code target (STUB)  (0xffff58206060)
0xffff58268760  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393221
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff58268820     0  ldur x2, [fp, #-16]
0xffff58268824     4  ldur x2, [x2, #31]
0xffff58268828     8  ldur x2, [x2, #87]
0xffff5826882c    12  ldr x16, pc+20 (addr 0x0000ffff58268840)    ;; code: CALL_IC, GENERIC
0xffff58268830    16  br x16
0xffff58268834    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58268838    24  d63f03e0       constant
0xffff5826883c    28  d503201f       constant
0xffff58268840    32  582685c0       constant
0xffff58268844    36  0000ffff       constant


RelocInfo (size = 7)
0xffff5826882c  code target (CALL_IC)  (0xffff582685c0)
0xffff58268834  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff58268f60     0  movz x16, #0xc00000000
0xffff58268f64     4  sub csp, jssp, #0x10 (16)
0xffff58268f68     8  stp fp, lr, [jssp, #-16]!
0xffff58268f6c    12  sub csp, jssp, #0x10 (16)
0xffff58268f70    16  str x16, [jssp, #-8]!
0xffff58268f74    20  ldr x17, pc+92 (addr 0x0000ffff58268fd0)    ;; object: 0xffff58268f01 <Code: COMPARE_IC>
0xffff58268f78    24  sub csp, jssp, #0x10 (16)
0xffff58268f7c    28  str x17, [jssp, #-8]!
0xffff58268f80    32  add fp, jssp, #0x10 (16)
0xffff58268f84    36  sub csp, jssp, #0x18 (24)
0xffff58268f88    40  stp lr, x0, [jssp, #-24]!
0xffff58268f8c    44  str x1, [jssp, #16]
0xffff58268f90    48  movz x10, #0x3200000000
0xffff58268f94    52  sub csp, jssp, #0x18 (24)
0xffff58268f98    56  stp x10, x0, [jssp, #-24]!
0xffff58268f9c    60  str x1, [jssp, #16]
0xffff58268fa0    64  movz x0, #0x3
0xffff58268fa4    68  ldr x1, pc+52 (addr 0x0000ffff58268fd8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff58268fa8    72  ldr x16, pc+56 (addr 0x0000ffff58268fe0)    ;; code: STUB, CEntryStub, minor: 4
0xffff58268fac    76  blr x16
0xffff58268fb0    80  add x11, x0, #0x5f (95)
0xffff58268fb4    84  ldr x1, [jssp, #16]
0xffff58268fb8    88  ldp lr, x0, [jssp], #24
0xffff58268fbc    92  mov jssp, fp
0xffff58268fc0    96  ldp fp, lr, [jssp], #16
0xffff58268fc4   100  br x11
0xffff58268fc8   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58268fcc   108  d63f03e0       constant
0xffff58268fd0   112  58268f01       constant
0xffff58268fd4   116  0000ffff       constant
0xffff58268fd8   120  00c8a980       constant
0xffff58268fdc   124  00000000       constant
0xffff58268fe0   128  58206060       constant
0xffff58268fe4   132  0000ffff       constant


RelocInfo (size = 10)
0xffff58268f74  embedded object  (0xffff58268f01 <Code: COMPARE_IC>)
0xffff58268fa4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff58268fa8  code target (STUB)  (0xffff58206060)
0xffff58268fc8  constant pool (size 32)


kind = STUB
major_key = SubStringStub
name = SubStringStub
compiler = unknown
Instructions (size = 824)
0xffff58269060     0  ldr x0, [jssp]
0xffff58269064     4  ldr x15, [jssp, #8]
0xffff58269068     8  orr x16, x15, x0
0xffff5826906c    12  tbnz w16, #0, #+0x228 (addr 0xffff58269294)
0xffff58269070    16  asr x15, x15, #32
0xffff58269074    20  asr x0, x0, #32
0xffff58269078    24  subs x1, x0, x15
0xffff5826907c    28  b.mi #+0x218 (addr 0xffff58269294)
0xffff58269080    32  tbnz w15, #31, #+0x214 (addr 0xffff58269294)
0xffff58269084    36  ldr x10, [jssp, #16]
0xffff58269088    40  tbz w10, #0, #+0x20c (addr 0xffff58269294)
0xffff5826908c    44  ldur x12, [x10, #-1]
0xffff58269090    48  ldrb w12, [x12, #11]
0xffff58269094    52  tbnz w12, #7, #+0x200 (addr 0xffff58269294)
0xffff58269098    56  cmp x1, #0x1 (1)
0xffff5826909c    60  b.eq #+0x208 (addr 0xffff582692a4)
0xffff582690a0    64  ldursw x11, [x10, #19]
0xffff582690a4    68  cmp x1, x11
0xffff582690a8    72  csel x0, x10, x0, eq
0xffff582690ac    76  b.eq #+0x1e0 (addr 0xffff5826928c)
0xffff582690b0    80  b.hi #+0x1e4 (addr 0xffff58269294)
0xffff582690b4    84  tst x12, #0x1
0xffff582690b8    88  b.eq #+0x38 (addr 0xffff582690f0)
0xffff582690bc    92  tst x12, #0x2
0xffff582690c0    96  b.ne #+0x1c (addr 0xffff582690dc)
0xffff582690c4   100  ldur x3, [x10, #31]
0xffff582690c8   104  ldr x16, [x26, #80]
0xffff582690cc   108  cmp x3, x16
0xffff582690d0   112  b.ne #+0x1c4 (addr 0xffff58269294)
0xffff582690d4   116  ldur x10, [x10, #23]
0xffff582690d8   120  b #+0x10 (addr 0xffff582690e8)
0xffff582690dc   124  ldursw x3, [x10, #35]
0xffff582690e0   128  add x15, x15, x3
0xffff582690e4   132  ldur x10, [x10, #23]
0xffff582690e8   136  ldur x3, [x10, #-1]
0xffff582690ec   140  ldrb w12, [x3, #11]
0xffff582690f0   144  cmp x1, #0xd (13)
0xffff582690f4   148  b.lt #+0x84 (addr 0xffff58269178)
0xffff582690f8   152  tbz w12, #2, #+0x3c (addr 0xffff58269134)
0xffff582690fc   156  ldr x3, pc+620 (addr 0x0000ffff58269368)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff58269100   160  ldp x0, x4, [x3]
0xffff58269104   164  adds x16, x0, #0x28 (40)
0xffff58269108   168  ccmp x16, x4, #nzCv, lo
0xffff5826910c   172  b.hi #+0x188 (addr 0xffff58269294)
0xffff58269110   176  str x16, [x3]
0xffff58269114   180  orr x0, x0, #0x1
0xffff58269118   184  ldr x4, [x26, #488]
0xffff5826911c   188  lsl x3, x1, #32
0xffff58269120   192  stur x4, [x0, #-1]
0xffff58269124   196  movz x4, #0x3
0xffff58269128   200  stur x3, [x0, #15]
0xffff5826912c   204  stur x4, [x0, #7]
0xffff58269130   208  b #+0x38 (addr 0xffff58269168)
0xffff58269134   212  ldr x3, pc+572 (addr 0x0000ffff58269370)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff58269138   216  ldp x0, x4, [x3]
0xffff5826913c   220  adds x16, x0, #0x28 (40)
0xffff58269140   224  ccmp x16, x4, #nzCv, lo
0xffff58269144   228  b.hi #+0x150 (addr 0xffff58269294)
0xffff58269148   232  str x16, [x3]
0xffff5826914c   236  orr x0, x0, #0x1
0xffff58269150   240  ldr x4, [x26, #480]
0xffff58269154   244  lsl x3, x1, #32
0xffff58269158   248  stur x4, [x0, #-1]
0xffff5826915c   252  movz x4, #0x3
0xffff58269160   256  stur x3, [x0, #15]
0xffff58269164   260  stur x4, [x0, #7]
0xffff58269168   264  lsl x15, x15, #32
0xffff5826916c   268  stur x15, [x0, #31]
0xffff58269170   272  stur x10, [x0, #23]
0xffff58269174   276  b #+0x118 (addr 0xffff5826928c)
0xffff58269178   280  tst x12, #0x2
0xffff5826917c   284  b.eq #+0x14 (addr 0xffff58269190)
0xffff58269180   288  tst x12, #0x10
0xffff58269184   292  b.ne #+0x110 (addr 0xffff58269294)
0xffff58269188   296  ldur x13, [x10, #31]
0xffff5826918c   300  b #+0x8 (addr 0xffff58269194)
0xffff58269190   304  add x13, x10, #0x17 (23)
0xffff58269194   308  tbz w12, #2, #+0x7c (addr 0xffff58269210)
0xffff58269198   312  add x3, x1, #0x1f (31)
0xffff5826919c   316  and x3, x3, #0xfffffffffffffff8
0xffff582691a0   320  ldr x5, pc+472 (addr 0x0000ffff58269378)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff582691a4   324  ldp x0, x16, [x5]
0xffff582691a8   328  adds x4, x0, x3
0xffff582691ac   332  ccmp x4, x16, #nzCv, lo
0xffff582691b0   336  b.hi #+0xe4 (addr 0xffff58269294)
0xffff582691b4   340  str x4, [x5]
0xffff582691b8   344  orr x0, x0, #0x1
0xffff582691bc   348  ldr x4, [x26, #280]
0xffff582691c0   352  lsl x3, x1, #32
0xffff582691c4   356  stur x4, [x0, #-1]
0xffff582691c8   360  movz x4, #0x3
0xffff582691cc   364  stur x3, [x0, #15]
0xffff582691d0   368  stur x4, [x0, #7]
0xffff582691d4   372  add x13, x13, x15
0xffff582691d8   376  add x14, x0, #0x17 (23)
0xffff582691dc   380  and x3, x1, #0xfffffffffffffff0
0xffff582691e0   384  cbz x3, #+0x18 (addr 0xffff582691f8)
0xffff582691e4   388  sub x3, x3, #0x10 (16)
0xffff582691e8   392  ldp x16, x17, [x13], #16
0xffff582691ec   396  stp x16, x17, [x14], #16
0xffff582691f0   400  cbnz x3, #-0xc (addr 0xffff582691e4)
0xffff582691f4   404  and x1, x1, #0xf
0xffff582691f8   408  cbz x1, #+0x14 (addr 0xffff5826920c)
0xffff582691fc   412  sub x1, x1, #0x1 (1)
0xffff58269200   416  ldrb w16, [x13], #1
0xffff58269204   420  strb w16, [x14], #1
0xffff58269208   424  cbnz x1, #-0xc (addr 0xffff582691fc)
0xffff5826920c   428  b #+0x80 (addr 0xffff5826928c)
0xffff58269210   432  add x3, x1, x1
0xffff58269214   436  add x3, x3, #0x1f (31)
0xffff58269218   440  and x3, x3, #0xfffffffffffffff8
0xffff5826921c   444  ldr x5, pc+356 (addr 0x0000ffff58269380)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff58269220   448  ldp x0, x16, [x5]
0xffff58269224   452  adds x4, x0, x3
0xffff58269228   456  ccmp x4, x16, #nzCv, lo
0xffff5826922c   460  b.hi #+0x68 (addr 0xffff58269294)
0xffff58269230   464  str x4, [x5]
0xffff58269234   468  orr x0, x0, #0x1
0xffff58269238   472  ldr x4, [x26, #456]
0xffff5826923c   476  lsl x3, x1, #32
0xffff58269240   480  stur x4, [x0, #-1]
0xffff58269244   484  movz x4, #0x3
0xffff58269248   488  stur x3, [x0, #15]
0xffff5826924c   492  stur x4, [x0, #7]
0xffff58269250   496  add x13, x13, x15, lsl #1
0xffff58269254   500  add x14, x0, #0x17 (23)
0xffff58269258   504  add x1, x1, x1
0xffff5826925c   508  and x3, x1, #0xfffffffffffffff0
0xffff58269260   512  cbz x3, #+0x18 (addr 0xffff58269278)
0xffff58269264   516  sub x3, x3, #0x10 (16)
0xffff58269268   520  ldp x16, x17, [x13], #16
0xffff5826926c   524  stp x16, x17, [x14], #16
0xffff58269270   528  cbnz x3, #-0xc (addr 0xffff58269264)
0xffff58269274   532  and x1, x1, #0xf
0xffff58269278   536  cbz x1, #+0x14 (addr 0xffff5826928c)
0xffff5826927c   540  sub x1, x1, #0x1 (1)
0xffff58269280   544  ldrb w16, [x13], #1
0xffff58269284   548  strb w16, [x14], #1
0xffff58269288   552  cbnz x1, #-0xc (addr 0xffff5826927c)
0xffff5826928c   556  add jssp, jssp, #0x18 (24)
0xffff58269290   560  ret
0xffff58269294   564  movz x0, #0x3
0xffff58269298   568  ldr x1, pc+240 (addr 0x0000ffff58269388)    ;; external reference (Runtime::SubString)
0xffff5826929c   572  ldr x16, pc+244 (addr 0x0000ffff58269390)    ;; code: STUB, CEntryStub, minor: 4
0xffff582692a0   576  br x16
0xffff582692a4   580  lsl x15, x15, #32
0xffff582692a8   584  tbnz w15, #0, #+0xb0 (addr 0xffff58269358)
0xffff582692ac   588  ldursw x1, [x10, #19]
0xffff582692b0   592  cmp x1, x15, asr #32
0xffff582692b4   596  b.ls #-0x20 (addr 0xffff58269294)
0xffff582692b8   600  asr x15, x15, #32
0xffff582692bc   604  ldur x1, [x10, #-1]
0xffff582692c0   608  ldrb w1, [x1, #11]
0xffff582692c4   612  tbz w1, #0, #+0x34 (addr 0xffff582692f8)
0xffff582692c8   616  tbz w1, #1, #+0x14 (addr 0xffff582692dc)
0xffff582692cc   620  ldur w1, [x10, #35]
0xffff582692d0   624  ldur x10, [x10, #23]
0xffff582692d4   628  add w15, w15, w1
0xffff582692d8   632  b #+0x18 (addr 0xffff582692f0)
0xffff582692dc   636  ldur x1, [x10, #31]
0xffff582692e0   640  ldr x16, [x26, #80]
0xffff582692e4   644  cmp x1, x16
0xffff582692e8   648  b.ne #+0x70 (addr 0xffff58269358)
0xffff582692ec   652  ldur x10, [x10, #23]
0xffff582692f0   656  ldur x1, [x10, #-1]
0xffff582692f4   660  ldrb w1, [x1, #11]
0xffff582692f8   664  tst x1, #0x3
0xffff582692fc   668  b.ne #+0xc (addr 0xffff58269308)
0xffff58269300   672  add x10, x10, #0x17 (23)
0xffff58269304   676  b #+0x10 (addr 0xffff58269314)
0xffff58269308   680  tst x1, #0x10
0xffff5826930c   684  b.ne #+0x4c (addr 0xffff58269358)
0xffff58269310   688  ldur x10, [x10, #31]
0xffff58269314   692  tbnz w1, #2, #+0xc (addr 0xffff58269320)
0xffff58269318   696  ldrh w1, [x10, w15, sxtw #1]
0xffff5826931c   700  b #+0x8 (addr 0xffff58269324)
0xffff58269320   704  ldrb w1, [x10, w15, sxtw]
0xffff58269324   708  lsl x1, x1, #32
0xffff58269328   712  tbnz w1, #0, #+0x34 (addr 0xffff5826935c)
0xffff5826932c   716  movz x16, #0xff00000000
0xffff58269330   720  cmp x1, x16
0xffff58269334   724  b.hi #+0x28 (addr 0xffff5826935c)
0xffff58269338   728  ldr x0, [x26, #400]
0xffff5826933c   732  add x0, x0, x1, asr #29
0xffff58269340   736  ldur x0, [x0, #15]
0xffff58269344   740  ldr x16, [x26, #40]
0xffff58269348   744  cmp x0, x16
0xffff5826934c   748  b.eq #+0x10 (addr 0xffff5826935c)
0xffff58269350   752  add jssp, jssp, #0x18 (24)
0xffff58269354   756  ret
0xffff58269358   760  b #-0xc4 (addr 0xffff58269294)
0xffff5826935c   764  b #-0xc8 (addr 0xffff58269294)
0xffff58269360   768  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff58269364   772  d63f03e0       constant
0xffff58269368   776  16e792c0       constant
0xffff5826936c   780  00000000       constant
0xffff58269370   784  16e792c0       constant
0xffff58269374   788  00000000       constant
0xffff58269378   792  16e792c0       constant
0xffff5826937c   796  00000000       constant
0xffff58269380   800  16e792c0       constant
0xffff58269384   804  00000000       constant
0xffff58269388   808  00eca0d8       constant
0xffff5826938c   812  00000000       constant
0xffff58269390   816  58206060       constant
0xffff58269394   820  0000ffff       constant


RelocInfo (size = 27)
0xffff582690fc  external reference (Heap::NewSpaceAllocationTopAddress())  (0x16e792c0)
0xffff58269134  external reference (Heap::NewSpaceAllocationTopAddress())  (0x16e792c0)
0xffff582691a0  external reference (Heap::NewSpaceAllocationTopAddress())  (0x16e792c0)
0xffff5826921c  external reference (Heap::NewSpaceAllocationTopAddress())  (0x16e792c0)
0xffff58269298  external reference (Runtime::SubString)  (0xeca0d8)
0xffff5826929c  code target (STUB)  (0xffff58206060)
0xffff58269360  constant pool (size 56)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 493)
0xffff5826a5e0     0  movz x2, #0x92c0
0xffff5826a5e4     4  movk x2, #0x16e7, lsl #16
0xffff5826a5e8     8  ldp x3, x0, [x2]
0xffff5826a5ec    12  adds x16, x3, #0xa8 (168)
0xffff5826a5f0    16  ccmp x16, x0, #nzCv, lo
0xffff5826a5f4    20  b.hi #+0xb4 (addr 0xffff5826a6a8)
0xffff5826a5f8    24  str x16, [x2]
0xffff5826a5fc    28  orr x3, x3, #0x1
0xffff5826a600    32  ldr x0, pc+280 (addr 0x0000ffff5826a718)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5826a604    36  stur x0, [x3, #-1]
0xffff5826a608    40  movz x0, #0x1300000000
0xffff5826a60c    44  stur x0, [x3, #7]
0xffff5826a610    48  stur x1, [x3, #15]
0xffff5826a614    52  stur cp, [x3, #23]
0xffff5826a618    56  ldr x0, pc+264 (addr 0x0000ffff5826a720)    ;; object: 0x39c04519 <the hole>
0xffff5826a61c    60  stur x0, [x3, #31]
0xffff5826a620    64  ldur x0, [cp, #39]
0xffff5826a624    68  stur x0, [x3, #39]
0xffff5826a628    72  ldr x0, pc+256 (addr 0x0000ffff5826a728)    ;; object: 0x39c04241 <undefined>
0xffff5826a62c    76  stur x0, [x3, #47]
0xffff5826a630    80  ldr x0, pc+256 (addr 0x0000ffff5826a730)    ;; object: 0x39c04241 <undefined>
0xffff5826a634    84  stur x0, [x3, #55]
0xffff5826a638    88  ldr x0, pc+256 (addr 0x0000ffff5826a738)    ;; object: 0x39c04241 <undefined>
0xffff5826a63c    92  stur x0, [x3, #63]
0xffff5826a640    96  ldr x0, pc+256 (addr 0x0000ffff5826a740)    ;; object: 0x39c04241 <undefined>
0xffff5826a644   100  stur x0, [x3, #71]
0xffff5826a648   104  ldr x0, pc+256 (addr 0x0000ffff5826a748)    ;; object: 0x39c04241 <undefined>
0xffff5826a64c   108  stur x0, [x3, #79]
0xffff5826a650   112  ldr x0, pc+256 (addr 0x0000ffff5826a750)    ;; object: 0x39c04241 <undefined>
0xffff5826a654   116  stur x0, [x3, #87]
0xffff5826a658   120  ldr x0, pc+256 (addr 0x0000ffff5826a758)    ;; object: 0x39c04241 <undefined>
0xffff5826a65c   124  stur x0, [x3, #95]
0xffff5826a660   128  ldr x0, pc+256 (addr 0x0000ffff5826a760)    ;; object: 0x39c04241 <undefined>
0xffff5826a664   132  stur x0, [x3, #103]
0xffff5826a668   136  ldr x0, pc+256 (addr 0x0000ffff5826a768)    ;; object: 0x39c04241 <undefined>
0xffff5826a66c   140  stur x0, [x3, #111]
0xffff5826a670   144  ldr x0, pc+256 (addr 0x0000ffff5826a770)    ;; object: 0x39c04241 <undefined>
0xffff5826a674   148  stur x0, [x3, #119]
0xffff5826a678   152  ldr x0, pc+256 (addr 0x0000ffff5826a778)    ;; object: 0x39c04241 <undefined>
0xffff5826a67c   156  stur x0, [x3, #127]
0xffff5826a680   160  ldr x0, pc+256 (addr 0x0000ffff5826a780)    ;; object: 0x39c04241 <undefined>
0xffff5826a684   164  stur x0, [x3, #135]
0xffff5826a688   168  ldr x0, pc+256 (addr 0x0000ffff5826a788)    ;; object: 0x39c04241 <undefined>
0xffff5826a68c   172  stur x0, [x3, #143]
0xffff5826a690   176  ldr x0, pc+256 (addr 0x0000ffff5826a790)    ;; object: 0x39c04241 <undefined>
0xffff5826a694   180  stur x0, [x3, #151]
0xffff5826a698   184  ldr x0, pc+256 (addr 0x0000ffff5826a798)    ;; object: 0x39c04241 <undefined>
0xffff5826a69c   188  stur x0, [x3, #159]
0xffff5826a6a0   192  mov x0, x3
0xffff5826a6a4   196  ret
0xffff5826a6a8   200  sub csp, jssp, #0x10 (16)
0xffff5826a6ac   204  stp fp, lr, [jssp, #-16]!
0xffff5826a6b0   208  movz fp, #0xa00000000
0xffff5826a6b4   212  sub csp, jssp, #0x8 (8)
0xffff5826a6b8   216  str fp, [jssp, #-8]!
0xffff5826a6bc   220  add fp, jssp, #0x8 (8)
0xffff5826a6c0   224  movz x3, #0x0
0xffff5826a6c4   228  mov x16, lr
0xffff5826a6c8   232  ldr x17, pc+216 (addr 0x0000ffff5826a7a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5826a6cc   236  blr x17
0xffff5826a6d0   240  movz x0, #0xa800000000
0xffff5826a6d4   244  movz x10, #0x0
0xffff5826a6d8   248  sub csp, jssp, #0x10 (16)
0xffff5826a6dc   252  stp x10, x0, [jssp, #-16]!
0xffff5826a6e0   256  movz x0, #0x2
0xffff5826a6e4   260  movz x1, #0x5b88
0xffff5826a6e8   264  movk x1, #0xe2, lsl #16
0xffff5826a6ec   268  ldr x16, pc+188 (addr 0x0000ffff5826a7a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5826a6f0   272  blr x16
0xffff5826a6f4   276  str x0, [jssp, #24]
0xffff5826a6f8   280  ldr x16, pc+184 (addr 0x0000ffff5826a7b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5826a6fc   284  blr x16
0xffff5826a700   288  ldr lr, [jssp, #16]
0xffff5826a704   292  ldp xzr, fp, [jssp], #24
0xffff5826a708   296  b #-0x108 (addr 0xffff5826a600)
0xffff5826a70c   300  5800055f       constant pool begin (num_const = 42)    ;; constant pool
0xffff5826a710   304  d63f03e0       constant
0xffff5826a714   308  d503201f       constant
0xffff5826a718   312  32b06149       constant
0xffff5826a71c   316  00000000       constant
0xffff5826a720   320  39c04519       constant
0xffff5826a724   324  00000000       constant
0xffff5826a728   328  39c04241       constant
0xffff5826a72c   332  00000000       constant
0xffff5826a730   336  39c04241       constant
0xffff5826a734   340  00000000       constant
0xffff5826a738   344  39c04241       constant
0xffff5826a73c   348  00000000       constant
0xffff5826a740   352  39c04241       constant
0xffff5826a744   356  00000000       constant
0xffff5826a748   360  39c04241       constant
0xffff5826a74c   364  00000000       constant
0xffff5826a750   368  39c04241       constant
0xffff5826a754   372  00000000       constant
0xffff5826a758   376  39c04241       constant
0xffff5826a75c   380  00000000       constant
0xffff5826a760   384  39c04241       constant
0xffff5826a764   388  00000000       constant
0xffff5826a768   392  39c04241       constant
0xffff5826a76c   396  00000000       constant
0xffff5826a770   400  39c04241       constant
0xffff5826a774   404  00000000       constant
0xffff5826a778   408  39c04241       constant
0xffff5826a77c   412  00000000       constant
0xffff5826a780   416  39c04241       constant
0xffff5826a784   420  00000000       constant
0xffff5826a788   424  39c04241       constant
0xffff5826a78c   428  00000000       constant
0xffff5826a790   432  39c04241       constant
0xffff5826a794   436  00000000       constant
0xffff5826a798   440  39c04241       constant
0xffff5826a79c   444  00000000       constant
0xffff5826a7a0   448  58206820       constant
0xffff5826a7a4   452  0000ffff       constant
0xffff5826a7a8   456  58206260       constant
0xffff5826a7ac   460  0000ffff       constant
0xffff5826a7b0   464  582068e0       constant
0xffff5826a7b4   468  0000ffff       constant


Safepoints (size = 21)
0xffff5826a6f4   276  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff5826a600  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5826a618  embedded object  (0x39c04519 <the hole>)
0xffff5826a628  embedded object  (0x39c04241 <undefined>)
0xffff5826a630  embedded object  (0x39c04241 <undefined>)
0xffff5826a638  embedded object  (0x39c04241 <undefined>)
0xffff5826a640  embedded object  (0x39c04241 <undefined>)
0xffff5826a648  embedded object  (0x39c04241 <undefined>)
0xffff5826a650  embedded object  (0x39c04241 <undefined>)
0xffff5826a658  embedded object  (0x39c04241 <undefined>)
0xffff5826a660  embedded object  (0x39c04241 <undefined>)
0xffff5826a668  embedded object  (0x39c04241 <undefined>)
0xffff5826a670  embedded object  (0x39c04241 <undefined>)
0xffff5826a678  embedded object  (0x39c04241 <undefined>)
0xffff5826a680  embedded object  (0x39c04241 <undefined>)
0xffff5826a688  embedded object  (0x39c04241 <undefined>)
0xffff5826a690  embedded object  (0x39c04241 <undefined>)
0xffff5826a698  embedded object  (0x39c04241 <undefined>)
0xffff5826a6c8  code target (STUB)  (0xffff58206820)
0xffff5826a6ec  code target (STUB)  (0xffff58206260)
0xffff5826a6f8  code target (STUB)  (0xffff582068e0)
0xffff5826a70c  constant pool (size 172)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff5826c260     0  ldur x0, [x1, #7]
0xffff5826c264     4  ldur x0, [x0, #15]
0xffff5826c268     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff5826c2e0     0  ldur x0, [x1, #7]
0xffff5826c2e4     4  ldur x0, [x0, #23]
0xffff5826c2e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff5826c360     0  ldur x0, [x1, #7]
0xffff5826c364     4  ldur x0, [x0, #31]
0xffff5826c368     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff5826d0c0     0  ldur x0, [x1, #7]
0xffff5826d0c4     4  movz x16, #0x167
0xffff5826d0c8     8  ldr x0, [x0, x16]
0xffff5826d0cc    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff5826d140     0  ldur x0, [x1, #7]
0xffff5826d144     4  movz x16, #0x16f
0xffff5826d148     8  ldr x0, [x0, x16]
0xffff5826d14c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff5826e060     0  movz x1, #0x92c0
0xffff5826e064     4  movk x1, #0x16e7, lsl #16
0xffff5826e068     8  ldp x3, x0, [x1]
0xffff5826e06c    12  adds x16, x3, #0x48 (72)
0xffff5826e070    16  ccmp x16, x0, #nzCv, lo
0xffff5826e074    20  b.hi #+0x1bc (addr 0xffff5826e230)
0xffff5826e078    24  str x16, [x1]
0xffff5826e07c    28  orr x3, x3, #0x1
0xffff5826e080    32  ldur x0, [cp, #39]
0xffff5826e084    36  movz x16, #0x2d7
0xffff5826e088    40  ldr x1, [x0, x16]
0xffff5826e08c    44  stur x1, [x3, #-1]
0xffff5826e090    48  ldr x1, pc+528 (addr 0x0000ffff5826e2a0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5826e094    52  stur x1, [x3, #7]
0xffff5826e098    56  ldr x1, pc+528 (addr 0x0000ffff5826e2a8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5826e09c    60  stur x1, [x3, #15]
0xffff5826e0a0    64  ldr x1, pc+528 (addr 0x0000ffff5826e2b0)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5826e0a4    68  stur x1, [x3, #47]
0xffff5826e0a8    72  ldr x1, pc+528 (addr 0x0000ffff5826e2b8)    ;; object: 0x39c04519 <the hole>
0xffff5826e0ac    76  stur x1, [x3, #23]
0xffff5826e0b0    80  stur x2, [x3, #31]
0xffff5826e0b4    84  stur cp, [x3, #39]
0xffff5826e0b8    88  ldur x1, [x2, #23]
0xffff5826e0bc    92  movz x4, #0x0
0xffff5826e0c0    96  cmp x1, x4
0xffff5826e0c4   100  b.eq #+0x150 (addr 0xffff5826e214)
0xffff5826e0c8   104  ldur w4, [x1, #11]
0xffff5826e0cc   108  subs w4, w4, #0x4 (4)
0xffff5826e0d0   112  b.vs #+0x230 (addr 0xffff5826e300)
0xffff5826e0d4   116  mov x5, x4
0xffff5826e0d8   120  cmp w5, #0x1 (1)
0xffff5826e0dc   124  b.lt #+0xb4 (addr 0xffff5826e190)
0xffff5826e0e0   128  add x4, x1, #0xf (15)
0xffff5826e0e4   132  ldr x6, [x4, w5, sxtw #3]
0xffff5826e0e8   136  ldur x4, [x6, #7]
0xffff5826e0ec   140  add x6, x1, #0x27 (39)
0xffff5826e0f0   144  ldr x7, [x6, w5, sxtw #3]
0xffff5826e0f4   148  add x6, x1, #0x17 (23)
0xffff5826e0f8   152  ldr x8, [x6, w5, sxtw #3]
0xffff5826e0fc   156  ldur x6, [x8, #7]
0xffff5826e100   160  cmp x0, x4
0xffff5826e104   164  b.ne #+0x1c (addr 0xffff5826e120)
0xffff5826e108   168  mov x4, #0xffffffff00000000
0xffff5826e10c   172  cmp x7, x4
0xffff5826e110   176  b.ne #+0x10 (addr 0xffff5826e120)
0xffff5826e114   180  movz x4, #0x0
0xffff5826e118   184  cmp x6, x4
0xffff5826e11c   188  b.ne #+0xc (addr 0xffff5826e128)
0xffff5826e120   192  sub w5, w5, #0x4 (4)
0xffff5826e124   196  b #-0x4c (addr 0xffff5826e0d8)
0xffff5826e128   200  add x4, x1, #0x1f (31)
0xffff5826e12c   204  ldr x7, [x4, w5, sxtw #3]
0xffff5826e130   208  ldur x7, [x7, #7]
0xffff5826e134   212  movz x4, #0x0
0xffff5826e138   216  cmp x7, x4
0xffff5826e13c   220  b.eq #+0x50 (addr 0xffff5826e18c)
0xffff5826e140   224  add x4, x6, #0x5f (95)
0xffff5826e144   228  stur x4, [x3, #55]
0xffff5826e148   232  stur x7, [x3, #47]
0xffff5826e14c   236  movz x16, #0x557
0xffff5826e150   240  ldr x4, [x0, x16]
0xffff5826e154   244  stur x4, [x3, #63]
0xffff5826e158   248  mov x4, x3
0xffff5826e15c   252  movz x16, #0x557
0xffff5826e160   256  str x4, [x0, x16]
0xffff5826e164   260  add x6, x0, #0x557 (1367)
0xffff5826e168   264  and x4, x0, #0xfffffffffff00000
0xffff5826e16c   268  ldr x4, [x4, #8]
0xffff5826e170   272  tbz w4, #2, #+0x18 (addr 0xffff5826e188)
0xffff5826e174   276  sub csp, jssp, #0x8 (8)
0xffff5826e178   280  str lr, [jssp, #-8]!
0xffff5826e17c   284  ldr x16, pc+324 (addr 0x0000ffff5826e2c0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff5826e180   288  blr x16
0xffff5826e184   292  ldr lr, [jssp], #8
0xffff5826e188   296  b #+0x8 (addr 0xffff5826e190)
0xffff5826e18c   300  b #+0x184 (addr 0xffff5826e310)
0xffff5826e190   304  cmp w5, #0x1 (1)
0xffff5826e194   308  b.ge #+0x94 (addr 0xffff5826e228)
0xffff5826e198   312  ldur x1, [x1, #15]
0xffff5826e19c   316  ldur x1, [x1, #7]
0xffff5826e1a0   320  movz x4, #0x0
0xffff5826e1a4   324  cmp x1, x4
0xffff5826e1a8   328  b.eq #+0x54 (addr 0xffff5826e1fc)
0xffff5826e1ac   332  add x1, x1, #0x5f (95)
0xffff5826e1b0   336  stur x1, [x3, #55]
0xffff5826e1b4   340  ldr x1, pc+276 (addr 0x0000ffff5826e2c8)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff5826e1b8   344  stur x1, [x3, #47]
0xffff5826e1bc   348  movz x16, #0x557
0xffff5826e1c0   352  ldr x1, [x0, x16]
0xffff5826e1c4   356  stur x1, [x3, #63]
0xffff5826e1c8   360  mov x1, x3
0xffff5826e1cc   364  movz x16, #0x557
0xffff5826e1d0   368  str x1, [x0, x16]
0xffff5826e1d4   372  add x2, x0, #0x557 (1367)
0xffff5826e1d8   376  and x1, x0, #0xfffffffffff00000
0xffff5826e1dc   380  ldr x1, [x1, #8]
0xffff5826e1e0   384  tbz w1, #2, #+0x18 (addr 0xffff5826e1f8)
0xffff5826e1e4   388  sub csp, jssp, #0x8 (8)
0xffff5826e1e8   392  str lr, [jssp, #-8]!
0xffff5826e1ec   396  ldr x16, pc+228 (addr 0x0000ffff5826e2d0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff5826e1f0   400  blr x16
0xffff5826e1f4   404  ldr lr, [jssp], #8
0xffff5826e1f8   408  b #+0x30 (addr 0xffff5826e228)
0xffff5826e1fc   412  ldr x0, pc+220 (addr 0x0000ffff5826e2d8)    ;; object: 0x39c04241 <undefined>
0xffff5826e200   416  stur x0, [x3, #63]
0xffff5826e204   420  ldur x0, [x2, #15]
0xffff5826e208   424  add x0, x0, #0x5f (95)
0xffff5826e20c   428  stur x0, [x3, #55]
0xffff5826e210   432  b #+0x18 (addr 0xffff5826e228)
0xffff5826e214   436  ldr x0, pc+204 (addr 0x0000ffff5826e2e0)    ;; object: 0x39c04241 <undefined>
0xffff5826e218   440  stur x0, [x3, #63]
0xffff5826e21c   444  ldur x0, [x2, #15]
0xffff5826e220   448  add x0, x0, #0x5f (95)
0xffff5826e224   452  stur x0, [x3, #55]
0xffff5826e228   456  mov x0, x3
0xffff5826e22c   460  ret
0xffff5826e230   464  sub csp, jssp, #0x10 (16)
0xffff5826e234   468  stp fp, lr, [jssp, #-16]!
0xffff5826e238   472  movz fp, #0xa00000000
0xffff5826e23c   476  sub csp, jssp, #0x8 (8)
0xffff5826e240   480  str fp, [jssp, #-8]!
0xffff5826e244   484  add fp, jssp, #0x8 (8)
0xffff5826e248   488  movz x3, #0x0
0xffff5826e24c   492  mov x16, lr
0xffff5826e250   496  ldr x17, pc+152 (addr 0x0000ffff5826e2e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5826e254   500  blr x17
0xffff5826e258   504  movz x0, #0x4800000000
0xffff5826e25c   508  movz x10, #0x0
0xffff5826e260   512  sub csp, jssp, #0x10 (16)
0xffff5826e264   516  stp x10, x0, [jssp, #-16]!
0xffff5826e268   520  movz x0, #0x2
0xffff5826e26c   524  movz x1, #0x5b88
0xffff5826e270   528  movk x1, #0xe2, lsl #16
0xffff5826e274   532  ldr x16, pc+124 (addr 0x0000ffff5826e2f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff5826e278   536  blr x16
0xffff5826e27c   540  str x0, [jssp, #24]
0xffff5826e280   544  ldr x16, pc+120 (addr 0x0000ffff5826e2f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5826e284   548  blr x16
0xffff5826e288   552  ldr lr, [jssp, #16]
0xffff5826e28c   556  ldp xzr, fp, [jssp], #24
0xffff5826e290   560  b #-0x210 (addr 0xffff5826e080)
0xffff5826e294   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff5826e298   568  d63f03e0       constant
0xffff5826e29c   572  d503201f       constant
0xffff5826e2a0   576  39c04201       constant
0xffff5826e2a4   580  00000000       constant
0xffff5826e2a8   584  39c04201       constant
0xffff5826e2ac   588  00000000       constant
0xffff5826e2b0   592  39c04201       constant
0xffff5826e2b4   596  00000000       constant
0xffff5826e2b8   600  39c04519       constant
0xffff5826e2bc   604  00000000       constant
0xffff5826e2c0   608  5822d2c0       constant
0xffff5826e2c4   612  0000ffff       constant
0xffff5826e2c8   616  39c04201       constant
0xffff5826e2cc   620  00000000       constant
0xffff5826e2d0   624  5822daa0       constant
0xffff5826e2d4   628  0000ffff       constant
0xffff5826e2d8   632  39c04241       constant
0xffff5826e2dc   636  00000000       constant
0xffff5826e2e0   640  39c04241       constant
0xffff5826e2e4   644  00000000       constant
0xffff5826e2e8   648  58206820       constant
0xffff5826e2ec   652  0000ffff       constant
0xffff5826e2f0   656  58206260       constant
0xffff5826e2f4   660  0000ffff       constant
0xffff5826e2f8   664  582068e0       constant
0xffff5826e2fc   668  0000ffff       constant
0xffff5826e300   672  movz x16, #0x0
0xffff5826e304   676  sub csp, jssp, #0x10 (16)
0xffff5826e308   680  stp fp, lr, [jssp, #-16]!
0xffff5826e30c   684  bl #+0x14 (addr 0xffff5826e320)
0xffff5826e310   688  movz x16, #0x8
0xffff5826e314   692  sub csp, jssp, #0x10 (16)
0xffff5826e318   696  stp fp, lr, [jssp, #-16]!
0xffff5826e31c   700  bl #+0x4 (addr 0xffff5826e320)
0xffff5826e320   704  movz x17, #0xa00000000
0xffff5826e324   708  sub csp, jssp, #0x10 (16)
0xffff5826e328   712  stp x17, cp, [jssp, #-16]!
0xffff5826e32c   716  add fp, jssp, #0x10 (16)
0xffff5826e330   720  ldr x17, pc+24 (addr 0x0000ffff5826e348)    ;; lazy deoptimization bailout 0
0xffff5826e334   724  add x17, x17, x16
0xffff5826e338   728  br x17
0xffff5826e33c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5826e340   736  d63f03e0       constant
0xffff5826e344   740  d503201f       constant
0xffff5826e348   744  58006000       constant
0xffff5826e34c   748  0000ffff       constant


Safepoints (size = 21)
0xffff5826e27c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff5826e090  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5826e098  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5826e0a0  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5826e0a8  embedded object  (0x39c04519 <the hole>)
0xffff5826e17c  code target (STUB)  (0xffff5822d2c0)
0xffff5826e1b4  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5826e1ec  code target (STUB)  (0xffff5822daa0)
0xffff5826e1fc  embedded object  (0x39c04241 <undefined>)
0xffff5826e214  embedded object  (0x39c04241 <undefined>)
0xffff5826e250  code target (STUB)  (0xffff58206820)
0xffff5826e274  code target (STUB)  (0xffff58206260)
0xffff5826e280  code target (STUB)  (0xffff582068e0)
0xffff5826e294  constant pool (size 108)
0xffff5826e330  runtime entry
0xffff5826e33c  constant pool (size 20)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58271c60     0  ldur x0, [x1, #-1]
0xffff58271c64     4  ldur x0, [x0, #47]
0xffff58271c68     8  movz x16, #0x737
0xffff58271c6c    12  ldr x0, [x0, x16]
0xffff58271c70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58271ce0     0  ldur x0, [x1, #-1]
0xffff58271ce4     4  ldur x0, [x0, #47]
0xffff58271ce8     8  movz x16, #0x74f
0xffff58271cec    12  ldr x0, [x0, x16]
0xffff58271cf0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58271d60     0  ldur x0, [x1, #-1]
0xffff58271d64     4  ldur x0, [x0, #47]
0xffff58271d68     8  movz x16, #0x767
0xffff58271d6c    12  ldr x0, [x0, x16]
0xffff58271d70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff58271de0     0  ldur x0, [x1, #7]
0xffff58271de4     4  ldur x0, [x0, #191]
0xffff58271de8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff58271e60     0  ldur x0, [x1, #7]
0xffff58271e64     4  ldur x0, [x0, #199]
0xffff58271e68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 317)
0xffff582722e0     0  movz x2, #0x92c0
0xffff582722e4     4  movk x2, #0x16e7, lsl #16
0xffff582722e8     8  ldp x3, x0, [x2]
0xffff582722ec    12  adds x16, x3, #0x50 (80)
0xffff582722f0    16  ccmp x16, x0, #nzCv, lo
0xffff582722f4    20  b.hi #+0x5c (addr 0xffff58272350)
0xffff582722f8    24  str x16, [x2]
0xffff582722fc    28  orr x3, x3, #0x1
0xffff58272300    32  ldr x0, pc+192 (addr 0x0000ffff582723c0)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58272304    36  stur x0, [x3, #-1]
0xffff58272308    40  movz x0, #0x800000000
0xffff5827230c    44  stur x0, [x3, #7]
0xffff58272310    48  stur x1, [x3, #15]
0xffff58272314    52  stur cp, [x3, #23]
0xffff58272318    56  ldr x0, pc+176 (addr 0x0000ffff582723c8)    ;; object: 0x39c04519 <the hole>
0xffff5827231c    60  stur x0, [x3, #31]
0xffff58272320    64  ldur x0, [cp, #39]
0xffff58272324    68  stur x0, [x3, #39]
0xffff58272328    72  ldr x0, pc+168 (addr 0x0000ffff582723d0)    ;; object: 0x39c04241 <undefined>
0xffff5827232c    76  stur x0, [x3, #47]
0xffff58272330    80  ldr x0, pc+168 (addr 0x0000ffff582723d8)    ;; object: 0x39c04241 <undefined>
0xffff58272334    84  stur x0, [x3, #55]
0xffff58272338    88  ldr x0, pc+168 (addr 0x0000ffff582723e0)    ;; object: 0x39c04241 <undefined>
0xffff5827233c    92  stur x0, [x3, #63]
0xffff58272340    96  ldr x0, pc+168 (addr 0x0000ffff582723e8)    ;; object: 0x39c04241 <undefined>
0xffff58272344   100  stur x0, [x3, #71]
0xffff58272348   104  mov x0, x3
0xffff5827234c   108  ret
0xffff58272350   112  sub csp, jssp, #0x10 (16)
0xffff58272354   116  stp fp, lr, [jssp, #-16]!
0xffff58272358   120  movz fp, #0xa00000000
0xffff5827235c   124  sub csp, jssp, #0x8 (8)
0xffff58272360   128  str fp, [jssp, #-8]!
0xffff58272364   132  add fp, jssp, #0x8 (8)
0xffff58272368   136  movz x3, #0x0
0xffff5827236c   140  mov x16, lr
0xffff58272370   144  ldr x17, pc+128 (addr 0x0000ffff582723f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58272374   148  blr x17
0xffff58272378   152  movz x0, #0x5000000000
0xffff5827237c   156  movz x10, #0x0
0xffff58272380   160  sub csp, jssp, #0x10 (16)
0xffff58272384   164  stp x10, x0, [jssp, #-16]!
0xffff58272388   168  movz x0, #0x2
0xffff5827238c   172  movz x1, #0x5b88
0xffff58272390   176  movk x1, #0xe2, lsl #16
0xffff58272394   180  ldr x16, pc+100 (addr 0x0000ffff582723f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58272398   184  blr x16
0xffff5827239c   188  str x0, [jssp, #24]
0xffff582723a0   192  ldr x16, pc+96 (addr 0x0000ffff58272400)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582723a4   196  blr x16
0xffff582723a8   200  ldr lr, [jssp, #16]
0xffff582723ac   204  ldp xzr, fp, [jssp], #24
0xffff582723b0   208  b #-0xb0 (addr 0xffff58272300)
0xffff582723b4   212  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff582723b8   216  d63f03e0       constant
0xffff582723bc   220  d503201f       constant
0xffff582723c0   224  32b06149       constant
0xffff582723c4   228  00000000       constant
0xffff582723c8   232  39c04519       constant
0xffff582723cc   236  00000000       constant
0xffff582723d0   240  39c04241       constant
0xffff582723d4   244  00000000       constant
0xffff582723d8   248  39c04241       constant
0xffff582723dc   252  00000000       constant
0xffff582723e0   256  39c04241       constant
0xffff582723e4   260  00000000       constant
0xffff582723e8   264  39c04241       constant
0xffff582723ec   268  00000000       constant
0xffff582723f0   272  58206820       constant
0xffff582723f4   276  0000ffff       constant
0xffff582723f8   280  58206260       constant
0xffff582723fc   284  0000ffff       constant
0xffff58272400   288  582068e0       constant
0xffff58272404   292  0000ffff       constant


Safepoints (size = 21)
0xffff5827239c   188  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 15)
0xffff58272300  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58272318  embedded object  (0x39c04519 <the hole>)
0xffff58272328  embedded object  (0x39c04241 <undefined>)
0xffff58272330  embedded object  (0x39c04241 <undefined>)
0xffff58272338  embedded object  (0x39c04241 <undefined>)
0xffff58272340  embedded object  (0x39c04241 <undefined>)
0xffff58272370  code target (STUB)  (0xffff58206820)
0xffff58272394  code target (STUB)  (0xffff58206260)
0xffff582723a0  code target (STUB)  (0xffff582068e0)
0xffff582723b4  constant pool (size 84)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 1
type = NORMAL
name = ToBooleanICStub(Undefined)
compiler = crankshaft
Instructions (size = 128)
0xffff582729c0     0  ldr x16, [x26, #40]
0xffff582729c4     4  cmp x0, x16
0xffff582729c8     8  b.eq #+0x8 (addr 0xffff582729d0)
0xffff582729cc    12  b #+0x2c (addr 0xffff582729f8)
0xffff582729d0    16  ldr x0, pc+24 (addr 0x0000ffff582729e8)    ;; object: 0x39c042b1 <false>
0xffff582729d4    20  ret
0xffff582729d8    24  ldr x0, pc+24 (addr 0x0000ffff582729f0)    ;; object: 0x39c04281 <true>
0xffff582729dc    28  ret
0xffff582729e0    32  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582729e4    36  d63f03e0       constant
0xffff582729e8    40  39c042b1       constant
0xffff582729ec    44  00000000       constant
0xffff582729f0    48  39c04281       constant
0xffff582729f4    52  00000000       constant
0xffff582729f8    56  movz x16, #0x0
0xffff582729fc    60  sub csp, jssp, #0x10 (16)
0xffff58272a00    64  stp fp, lr, [jssp, #-16]!
0xffff58272a04    68  bl #+0x4 (addr 0xffff58272a08)
0xffff58272a08    72  movz x17, #0xa00000000
0xffff58272a0c    76  sub csp, jssp, #0x10 (16)
0xffff58272a10    80  stp x17, cp, [jssp, #-16]!
0xffff58272a14    84  add fp, jssp, #0x10 (16)
0xffff58272a18    88  ldr x17, pc+24 (addr 0x0000ffff58272a30)    ;; lazy deoptimization bailout 0
0xffff58272a1c    92  add x17, x17, x16
0xffff58272a20    96  br x17
0xffff58272a24   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58272a28   104  d63f03e0       constant
0xffff58272a2c   108  d503201f       constant
0xffff58272a30   112  58006000       constant
0xffff58272a34   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582729d0  embedded object  (0x39c042b1 <false>)
0xffff582729d8  embedded object  (0x39c04281 <true>)
0xffff582729e0  constant pool (size 24)
0xffff58272a18  runtime entry
0xffff58272a24  constant pool (size 20)


kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff58272aa0     0  mov x2, x0
0xffff58272aa4     4  stur x2, [x1, #23]
0xffff58272aa8     8  tbz w2, #0, #+0x34 (addr 0xffff58272adc)
0xffff58272aac    12  add x3, x1, #0x17 (23)
0xffff58272ab0    16  and x2, x2, #0xfffffffffff00000
0xffff58272ab4    20  ldr x2, [x2, #8]
0xffff58272ab8    24  tbz w2, #1, #+0x24 (addr 0xffff58272adc)
0xffff58272abc    28  and x2, x1, #0xfffffffffff00000
0xffff58272ac0    32  ldr x2, [x2, #8]
0xffff58272ac4    36  tbz w2, #2, #+0x18 (addr 0xffff58272adc)
0xffff58272ac8    40  sub csp, jssp, #0x8 (8)
0xffff58272acc    44  str lr, [jssp, #-8]!
0xffff58272ad0    48  ldr x16, pc+24 (addr 0x0000ffff58272ae8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58272ad4    52  blr x16
0xffff58272ad8    56  ldr lr, [jssp], #8
0xffff58272adc    60  ret
0xffff58272ae0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58272ae4    68  d63f03e0       constant
0xffff58272ae8    72  582170c0       constant
0xffff58272aec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff58272ad0  code target (STUB)  (0xffff582170c0)
0xffff58272ae0  constant pool (size 16)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 152)
0xffff58278bc0     0  orr x16, x0, x1
0xffff58278bc4     4  tbnz w16, #0, #+0xc (addr 0xffff58278bd0)
0xffff58278bc8     8  sub x0, x0, x1
0xffff58278bcc    12  ret
0xffff58278bd0    16  movz x16, #0xc00000000
0xffff58278bd4    20  sub csp, jssp, #0x10 (16)
0xffff58278bd8    24  stp fp, lr, [jssp, #-16]!
0xffff58278bdc    28  sub csp, jssp, #0x10 (16)
0xffff58278be0    32  str x16, [jssp, #-8]!
0xffff58278be4    36  ldr x17, pc+92 (addr 0x0000ffff58278c40)    ;; object: 0xffff58278b61 <Code: COMPARE_IC>
0xffff58278be8    40  sub csp, jssp, #0x10 (16)
0xffff58278bec    44  str x17, [jssp, #-8]!
0xffff58278bf0    48  add fp, jssp, #0x10 (16)
0xffff58278bf4    52  sub csp, jssp, #0x18 (24)
0xffff58278bf8    56  stp lr, x0, [jssp, #-24]!
0xffff58278bfc    60  str x1, [jssp, #16]
0xffff58278c00    64  movz x10, #0x2d00000000
0xffff58278c04    68  sub csp, jssp, #0x18 (24)
0xffff58278c08    72  stp x10, x0, [jssp, #-24]!
0xffff58278c0c    76  str x1, [jssp, #16]
0xffff58278c10    80  movz x0, #0x3
0xffff58278c14    84  ldr x1, pc+52 (addr 0x0000ffff58278c48)    ;; external reference (Runtime::CompareIC_Miss)
0xffff58278c18    88  ldr x16, pc+56 (addr 0x0000ffff58278c50)    ;; code: STUB, CEntryStub, minor: 4
0xffff58278c1c    92  blr x16
0xffff58278c20    96  add x11, x0, #0x5f (95)
0xffff58278c24   100  ldr x1, [jssp, #16]
0xffff58278c28   104  ldp lr, x0, [jssp], #24
0xffff58278c2c   108  mov jssp, fp
0xffff58278c30   112  ldp fp, lr, [jssp], #16
0xffff58278c34   116  br x11
0xffff58278c38   120  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58278c3c   124  d63f03e0       constant
0xffff58278c40   128  58278b61       constant
0xffff58278c44   132  0000ffff       constant
0xffff58278c48   136  00c8a980       constant
0xffff58278c4c   140  00000000       constant
0xffff58278c50   144  58206060       constant
0xffff58278c54   148  0000ffff       constant


RelocInfo (size = 10)
0xffff58278be4  embedded object  (0xffff58278b61 <Code: COMPARE_IC>)
0xffff58278c14  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff58278c18  code target (STUB)  (0xffff58206060)
0xffff58278c38  constant pool (size 32)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 120)
0xffff58278cc0     0  sub csp, jssp, #0x8 (8)
0xffff58278cc4     4  str x3, [jssp, #-8]!
0xffff58278cc8     8  sub csp, jssp, #0x8 (8)
0xffff58278ccc    12  str x0, [jssp, #-8]!
0xffff58278cd0    16  ldr x0, pc+72 (addr 0x0000ffff58278d18)    ;; object: 0x39cad1b1 Cell for 0
0xffff58278cd4    20  ldur x0, [x0, #7]
0xffff58278cd8    24  cmp x0, #0x0 (0)
0xffff58278cdc    28  b.ne #+0x14 (addr 0xffff58278cf0)
0xffff58278ce0    32  ldr x3, pc+64 (addr 0x0000ffff58278d20)    ;; object: 0x39cad1c1 WeakCell for 0x4f97bb31 <an Object with map 0x32b13f01>
0xffff58278ce4    36  ldur x3, [x3, #7]
0xffff58278ce8    40  tbz w3, #0, #+0x8 (addr 0xffff58278cf0)
0xffff58278cec    44  b #+0x14 (addr 0xffff58278d00)
0xffff58278cf0    48  ldr x0, [jssp], #8
0xffff58278cf4    52  ldr x3, [jssp], #8
0xffff58278cf8    56  ldr x16, pc+48 (addr 0x0000ffff58278d28)    ;; code: BUILTIN
0xffff58278cfc    60  br x16
0xffff58278d00    64  add jssp, jssp, #0x10 (16)
0xffff58278d04    68  mov x1, x3
0xffff58278d08    72  ldr x16, pc+40 (addr 0x0000ffff58278d30)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff58278d0c    76  br x16
0xffff58278d10    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff58278d14    84  d63f03e0       constant
0xffff58278d18    88  39cad1b1       constant
0xffff58278d1c    92  00000000       constant
0xffff58278d20    96  39cad1c1       constant
0xffff58278d24   100  00000000       constant
0xffff58278d28   104  582222e0       constant
0xffff58278d2c   108  0000ffff       constant
0xffff58278d30   112  582431a0       constant
0xffff58278d34   116  0000ffff       constant


RelocInfo (size = 10)
0xffff58278cd0  embedded object  (0x39cad1b1 Cell for 0)
0xffff58278ce0  embedded object  (0x39cad1c1 WeakCell for 0x4f97bb31 <an Object with map 0x32b13f01>)
0xffff58278cf8  code target (BUILTIN)  (0xffff582222e0)
0xffff58278d08  code target (HANDLER)  (0xffff582431a0)
0xffff58278d10  constant pool (size 40)

kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff58278da0     0  ldur x0, [x1, #31]
0xffff58278da4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff58278e20     0  ldur x0, [x1, #39]
0xffff58278e24     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff58278ea0     0  mov x5, x0
0xffff58278ea4     4  tbnz w5, #0, #+0xc (addr 0xffff58278eb0)
0xffff58278ea8     8  stur x5, [x1, #31]
0xffff58278eac    12  ret
0xffff58278eb0    16  movz x16, #0x0
0xffff58278eb4    20  sub csp, jssp, #0x10 (16)
0xffff58278eb8    24  stp fp, lr, [jssp, #-16]!
0xffff58278ebc    28  bl #+0x4 (addr 0xffff58278ec0)
0xffff58278ec0    32  movz x17, #0xa00000000
0xffff58278ec4    36  sub csp, jssp, #0x10 (16)
0xffff58278ec8    40  stp x17, cp, [jssp, #-16]!
0xffff58278ecc    44  add fp, jssp, #0x10 (16)
0xffff58278ed0    48  ldr x17, pc+24 (addr 0x0000ffff58278ee8)    ;; lazy deoptimization bailout 0
0xffff58278ed4    52  add x17, x17, x16
0xffff58278ed8    56  br x17
0xffff58278edc    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58278ee0    64  d63f03e0       constant
0xffff58278ee4    68  d503201f       constant
0xffff58278ee8    72  58006000       constant
0xffff58278eec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff58278ed0  runtime entry
0xffff58278edc  constant pool (size 20)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58278f60     0  ldur x0, [x1, #-1]
0xffff58278f64     4  ldur x0, [x0, #47]
0xffff58278f68     8  movz x16, #0xdc7
0xffff58278f6c    12  ldr x0, [x0, x16]
0xffff58278f70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58278fe0     0  ldur x0, [x1, #-1]
0xffff58278fe4     4  ldur x0, [x0, #47]
0xffff58278fe8     8  movz x16, #0x6a7
0xffff58278fec    12  ldr x0, [x0, x16]
0xffff58278ff0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279060     0  ldur x0, [x1, #-1]
0xffff58279064     4  ldur x0, [x0, #47]
0xffff58279068     8  movz x16, #0x6bf
0xffff5827906c    12  ldr x0, [x0, x16]
0xffff58279070    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582790e0     0  ldur x0, [x1, #-1]
0xffff582790e4     4  ldur x0, [x0, #47]
0xffff582790e8     8  movz x16, #0x6ef
0xffff582790ec    12  ldr x0, [x0, x16]
0xffff582790f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279160     0  ldur x0, [x1, #-1]
0xffff58279164     4  ldur x0, [x0, #47]
0xffff58279168     8  movz x16, #0xddf
0xffff5827916c    12  ldr x0, [x0, x16]
0xffff58279170    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582791e0     0  ldur x0, [x1, #-1]
0xffff582791e4     4  ldur x0, [x0, #47]
0xffff582791e8     8  movz x16, #0xdf7
0xffff582791ec    12  ldr x0, [x0, x16]
0xffff582791f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279260     0  ldur x0, [x1, #-1]
0xffff58279264     4  ldur x0, [x0, #47]
0xffff58279268     8  movz x16, #0xe27
0xffff5827926c    12  ldr x0, [x0, x16]
0xffff58279270    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582792e0     0  ldur x0, [x1, #-1]
0xffff582792e4     4  ldur x0, [x0, #47]
0xffff582792e8     8  movz x16, #0xd1f
0xffff582792ec    12  ldr x0, [x0, x16]
0xffff582792f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279360     0  ldur x0, [x1, #-1]
0xffff58279364     4  ldur x0, [x0, #47]
0xffff58279368     8  movz x16, #0xd37
0xffff5827936c    12  ldr x0, [x0, x16]
0xffff58279370    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582793e0     0  ldur x0, [x1, #-1]
0xffff582793e4     4  ldur x0, [x0, #47]
0xffff582793e8     8  movz x16, #0x647
0xffff582793ec    12  ldr x0, [x0, x16]
0xffff582793f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279460     0  ldur x0, [x1, #-1]
0xffff58279464     4  ldur x0, [x0, #47]
0xffff58279468     8  movz x16, #0x65f
0xffff5827946c    12  ldr x0, [x0, x16]
0xffff58279470    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582794e0     0  ldur x0, [x1, #-1]
0xffff582794e4     4  ldur x0, [x0, #47]
0xffff582794e8     8  movz x16, #0x71f
0xffff582794ec    12  ldr x0, [x0, x16]
0xffff582794f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58279560     0  ldur x0, [x1, #7]
0xffff58279564     4  movz x16, #0x1ef
0xffff58279568     8  ldr x0, [x0, x16]
0xffff5827956c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582795e0     0  ldur x0, [x1, #7]
0xffff582795e4     4  movz x16, #0x1f7
0xffff582795e8     8  ldr x0, [x0, x16]
0xffff582795ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279660     0  ldur x0, [x1, #-1]
0xffff58279664     4  ldur x0, [x0, #47]
0xffff58279668     8  movz x16, #0xd7f
0xffff5827966c    12  ldr x0, [x0, x16]
0xffff58279670    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582796e0     0  ldur x0, [x1, #-1]
0xffff582796e4     4  ldur x0, [x0, #47]
0xffff582796e8     8  movz x16, #0xd97
0xffff582796ec    12  ldr x0, [x0, x16]
0xffff582796f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279760     0  ldur x0, [x1, #-1]
0xffff58279764     4  ldur x0, [x0, #47]
0xffff58279768     8  movz x16, #0xdaf
0xffff5827976c    12  ldr x0, [x0, x16]
0xffff58279770    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582797e0     0  ldur x0, [x1, #-1]
0xffff582797e4     4  ldur x0, [x0, #47]
0xffff582797e8     8  movz x16, #0xbcf
0xffff582797ec    12  ldr x0, [x0, x16]
0xffff582797f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279860     0  ldur x0, [x1, #-1]
0xffff58279864     4  ldur x0, [x0, #47]
0xffff58279868     8  movz x16, #0xbe7
0xffff5827986c    12  ldr x0, [x0, x16]
0xffff58279870    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582798e0     0  ldur x0, [x1, #-1]
0xffff582798e4     4  ldur x0, [x0, #47]
0xffff582798e8     8  movz x16, #0xbff
0xffff582798ec    12  ldr x0, [x0, x16]
0xffff582798f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279960     0  ldur x0, [x1, #-1]
0xffff58279964     4  ldur x0, [x0, #47]
0xffff58279968     8  movz x16, #0xc17
0xffff5827996c    12  ldr x0, [x0, x16]
0xffff58279970    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582799e0     0  ldur x0, [x1, #-1]
0xffff582799e4     4  ldur x0, [x0, #47]
0xffff582799e8     8  movz x16, #0xc2f
0xffff582799ec    12  ldr x0, [x0, x16]
0xffff582799f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279a60     0  ldur x0, [x1, #-1]
0xffff58279a64     4  ldur x0, [x0, #47]
0xffff58279a68     8  movz x16, #0xc47
0xffff58279a6c    12  ldr x0, [x0, x16]
0xffff58279a70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279ae0     0  ldur x0, [x1, #-1]
0xffff58279ae4     4  ldur x0, [x0, #47]
0xffff58279ae8     8  movz x16, #0xd4f
0xffff58279aec    12  ldr x0, [x0, x16]
0xffff58279af0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279b60     0  ldur x0, [x1, #-1]
0xffff58279b64     4  ldur x0, [x0, #47]
0xffff58279b68     8  movz x16, #0xd67
0xffff58279b6c    12  ldr x0, [x0, x16]
0xffff58279b70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279be0     0  ldur x0, [x1, #-1]
0xffff58279be4     4  ldur x0, [x0, #47]
0xffff58279be8     8  movz x16, #0x77f
0xffff58279bec    12  ldr x0, [x0, x16]
0xffff58279bf0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff58279c60     0  ldur x0, [x1, #-1]
0xffff58279c64     4  ldur x0, [x0, #47]
0xffff58279c68     8  movz x16, #0x677
0xffff58279c6c    12  ldr x0, [x0, x16]
0xffff58279c70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff58279ce0     0  ldur x0, [x1, #7]
0xffff58279ce4     4  movz x16, #0x19f
0xffff58279ce8     8  ldr x0, [x0, x16]
0xffff58279cec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5827b1c0     0  ldur x0, [x1, #-1]
0xffff5827b1c4     4  ldur x0, [x0, #47]
0xffff5827b1c8     8  movz x16, #0x20f
0xffff5827b1cc    12  ldr x0, [x0, x16]
0xffff5827b1d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5827b240     0  ldur x0, [x1, #-1]
0xffff5827b244     4  ldur x0, [x0, #47]
0xffff5827b248     8  movz x16, #0x227
0xffff5827b24c    12  ldr x0, [x0, x16]
0xffff5827b250    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5827b2c0     0  ldur x0, [x1, #-1]
0xffff5827b2c4     4  ldur x0, [x0, #47]
0xffff5827b2c8     8  movz x16, #0x23f
0xffff5827b2cc    12  ldr x0, [x0, x16]
0xffff5827b2d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5827b340     0  ldur x0, [x1, #-1]
0xffff5827b344     4  ldur x0, [x0, #47]
0xffff5827b348     8  movz x16, #0x257
0xffff5827b34c    12  ldr x0, [x0, x16]
0xffff5827b350    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5827b3c0     0  ldur x0, [x1, #-1]
0xffff5827b3c4     4  ldur x0, [x0, #47]
0xffff5827b3c8     8  movz x16, #0x26f
0xffff5827b3cc    12  ldr x0, [x0, x16]
0xffff5827b3d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5827b440     0  ldur x0, [x1, #-1]
0xffff5827b444     4  ldur x0, [x0, #47]
0xffff5827b448     8  movz x16, #0x287
0xffff5827b44c    12  ldr x0, [x0, x16]
0xffff5827b450    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff5827b4c0     0  ldur x0, [x1, #7]
0xffff5827b4c4     4  ldur x0, [x0, #135]
0xffff5827b4c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff5827b540     0  ldur x0, [x1, #7]
0xffff5827b544     4  ldur x0, [x0, #151]
0xffff5827b548     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 3
type = NORMAL
name = ToBooleanICStub(Undefined,Bool)
compiler = crankshaft
Instructions (size = 152)
0xffff5827b5c0     0  ldr x16, [x26, #40]
0xffff5827b5c4     4  cmp x0, x16
0xffff5827b5c8     8  b.eq #+0x20 (addr 0xffff5827b5e8)
0xffff5827b5cc    12  ldr x16, [x26, #64]
0xffff5827b5d0    16  cmp x0, x16
0xffff5827b5d4    20  b.eq #+0x1c (addr 0xffff5827b5f0)
0xffff5827b5d8    24  ldr x16, [x26, #72]
0xffff5827b5dc    28  cmp x0, x16
0xffff5827b5e0    32  b.eq #+0x8 (addr 0xffff5827b5e8)
0xffff5827b5e4    36  b #+0x2c (addr 0xffff5827b610)
0xffff5827b5e8    40  ldr x0, pc+24 (addr 0x0000ffff5827b600)    ;; object: 0x39c042b1 <false>
0xffff5827b5ec    44  ret
0xffff5827b5f0    48  ldr x0, pc+24 (addr 0x0000ffff5827b608)    ;; object: 0x39c04281 <true>
0xffff5827b5f4    52  ret
0xffff5827b5f8    56  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5827b5fc    60  d63f03e0       constant
0xffff5827b600    64  39c042b1       constant
0xffff5827b604    68  00000000       constant
0xffff5827b608    72  39c04281       constant
0xffff5827b60c    76  00000000       constant
0xffff5827b610    80  movz x16, #0x0
0xffff5827b614    84  sub csp, jssp, #0x10 (16)
0xffff5827b618    88  stp fp, lr, [jssp, #-16]!
0xffff5827b61c    92  bl #+0x4 (addr 0xffff5827b620)
0xffff5827b620    96  movz x17, #0xa00000000
0xffff5827b624   100  sub csp, jssp, #0x10 (16)
0xffff5827b628   104  stp x17, cp, [jssp, #-16]!
0xffff5827b62c   108  add fp, jssp, #0x10 (16)
0xffff5827b630   112  ldr x17, pc+24 (addr 0x0000ffff5827b648)    ;; lazy deoptimization bailout 0
0xffff5827b634   116  add x17, x17, x16
0xffff5827b638   120  br x17
0xffff5827b63c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5827b640   128  d63f03e0       constant
0xffff5827b644   132  d503201f       constant
0xffff5827b648   136  58006000       constant
0xffff5827b64c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5827b5e8  embedded object  (0x39c042b1 <false>)
0xffff5827b5f0  embedded object  (0x39c04281 <true>)
0xffff5827b5f8  constant pool (size 24)
0xffff5827b630  runtime entry
0xffff5827b63c  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff5827c000     0  ldur x0, [x1, #7]
0xffff5827c004     4  ldur x0, [x0, #119]
0xffff5827c008     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff5827c540     0  sub csp, jssp, #0x8 (8)
0xffff5827c544     4  str x3, [jssp, #-8]!
0xffff5827c548     8  sub csp, jssp, #0x8 (8)
0xffff5827c54c    12  str x4, [jssp, #-8]!
0xffff5827c550    16  ldr x3, pc+88 (addr 0x0000ffff5827c5a8)    ;; object: 0x39c5b0f1 Cell for 0
0xffff5827c554    20  ldur x3, [x3, #7]
0xffff5827c558    24  cmp x3, #0x0 (0)
0xffff5827c55c    28  b.ne #+0x30 (addr 0xffff5827c58c)
0xffff5827c560    32  tbz w0, #0, #+0x2c (addr 0xffff5827c58c)
0xffff5827c564    36  ldr x5, pc+76 (addr 0x0000ffff5827c5b0)    ;; object: 0x39cb0739 WeakCell for 0x32b16479 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5827c568    40  ldur x5, [x5, #7]
0xffff5827c56c    44  tbz w5, #0, #+0x20 (addr 0xffff5827c58c)
0xffff5827c570    48  ldursw x4, [x5, #15]
0xffff5827c574    52  tbnz w4, #23, #+0x18 (addr 0xffff5827c58c)
0xffff5827c578    56  ldr x4, [jssp], #8
0xffff5827c57c    60  ldr x3, [jssp], #8
0xffff5827c580    64  ldr x2, pc+56 (addr 0x0000ffff5827c5b8)    ;; object: 0x39c05209 <String[4]: next>
0xffff5827c584    68  ldr x16, pc+60 (addr 0x0000ffff5827c5c0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff5827c588    72  br x16
0xffff5827c58c    76  ldr x2, pc+60 (addr 0x0000ffff5827c5c8)    ;; object: 0x39c05209 <String[4]: next>
0xffff5827c590    80  ldr x4, [jssp], #8
0xffff5827c594    84  ldr x3, [jssp], #8
0xffff5827c598    88  ldr x16, pc+56 (addr 0x0000ffff5827c5d0)    ;; code: BUILTIN
0xffff5827c59c    92  br x16
0xffff5827c5a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5827c5a4   100  d63f03e0       constant
0xffff5827c5a8   104  39c5b0f1       constant
0xffff5827c5ac   108  00000000       constant
0xffff5827c5b0   112  39cb0739       constant
0xffff5827c5b4   116  00000000       constant
0xffff5827c5b8   120  39c05209       constant
0xffff5827c5bc   124  00000000       constant
0xffff5827c5c0   128  58238860       constant
0xffff5827c5c4   132  0000ffff       constant
0xffff5827c5c8   136  39c05209       constant
0xffff5827c5cc   140  00000000       constant
0xffff5827c5d0   144  58222420       constant
0xffff5827c5d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff5827c550  embedded object  (0x39c5b0f1 Cell for 0)
0xffff5827c564  embedded object  (0x39cb0739 WeakCell for 0x32b16479 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5827c580  embedded object  (0x39c05209 <String[4]: next>)
0xffff5827c584  code target (HANDLER)  (0xffff58238860)
0xffff5827c58c  embedded object  (0x39c05209 <String[4]: next>)
0xffff5827c598  code target (BUILTIN)  (0xffff58222420)
0xffff5827c5a0  constant pool (size 56)

kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5827cc40     0  ldur x0, [x1, #-1]
0xffff5827cc44     4  ldur x0, [x0, #47]
0xffff5827cc48     8  movz x16, #0x1c7
0xffff5827cc4c    12  ldr x0, [x0, x16]
0xffff5827cc50    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5827ccc0     0  ldur x0, [x1, #-1]
0xffff5827ccc4     4  ldur x0, [x0, #47]
0xffff5827ccc8     8  movz x16, #0x1df
0xffff5827cccc    12  ldr x0, [x0, x16]
0xffff5827ccd0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5827cd40     0  ldur x0, [x1, #-1]
0xffff5827cd44     4  ldur x0, [x0, #47]
0xffff5827cd48     8  movz x16, #0x1f7
0xffff5827cd4c    12  ldr x0, [x0, x16]
0xffff5827cd50    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*INTERNALIZED_STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff5827d920     0  orr x16, x1, x0
0xffff5827d924     4  tbnz w16, #0, #+0x10 (addr 0xffff5827d934)
0xffff5827d928     8  asr x1, x1, #32
0xffff5827d92c    12  sub x0, x1, x0, asr #32
0xffff5827d930    16  ret
0xffff5827d934    20  cmp x0, x1
0xffff5827d938    24  b.ne #+0x30 (addr 0xffff5827d968)
0xffff5827d93c    28  ldur x16, [x0, #-1]
0xffff5827d940    32  ldr x17, [x26, #120]
0xffff5827d944    36  cmp x16, x17
0xffff5827d948    40  b.eq #+0xc (addr 0xffff5827d954)
0xffff5827d94c    44  movz x0, #0x0
0xffff5827d950    48  ret
0xffff5827d954    52  ldur d0, [x0, #7]
0xffff5827d958    56  fcmp d0, d0
0xffff5827d95c    60  b.vc #-0x10 (addr 0xffff5827d94c)
0xffff5827d960    64  movn x0, #0x0
0xffff5827d964    68  ret
0xffff5827d968    72  and x16, x1, x0
0xffff5827d96c    76  tbnz w16, #0, #+0x64 (addr 0xffff5827d9d0)
0xffff5827d970    80  tbz w0, #0, #+0x24 (addr 0xffff5827d994)
0xffff5827d974    84  ldur x16, [x0, #-1]
0xffff5827d978    88  ldr x17, [x26, #120]
0xffff5827d97c    92  cmp x16, x17
0xffff5827d980    96  b.eq #+0x8 (addr 0xffff5827d988)
0xffff5827d984   100  ret
0xffff5827d988   104  ldur d0, [x0, #7]
0xffff5827d98c   108  scvtf d1, x1, #32
0xffff5827d990   112  b #+0x24 (addr 0xffff5827d9b4)
0xffff5827d994   116  ldur x16, [x1, #-1]
0xffff5827d998   120  ldr x17, [x26, #120]
0xffff5827d99c   124  cmp x16, x17
0xffff5827d9a0   128  b.eq #+0xc (addr 0xffff5827d9ac)
0xffff5827d9a4   132  movz x0, #0x1
0xffff5827d9a8   136  ret
0xffff5827d9ac   140  ldur d1, [x1, #7]
0xffff5827d9b0   144  scvtf d0, x0, #32
0xffff5827d9b4   148  fcmp d1, d0
0xffff5827d9b8   152  b.vs #+0x10 (addr 0xffff5827d9c8)
0xffff5827d9bc   156  cset x0, gt
0xffff5827d9c0   160  csinv x0, x0, xzr, ge
0xffff5827d9c4   164  ret
0xffff5827d9c8   168  movn x0, #0x0
0xffff5827d9cc   172  ret
0xffff5827d9d0   176  ldur x10, [x0, #-1]
0xffff5827d9d4   180  ldur x12, [x1, #-1]
0xffff5827d9d8   184  ldrb w11, [x10, #11]
0xffff5827d9dc   188  ldrb w13, [x12, #11]
0xffff5827d9e0   192  cmp x11, #0xb1 (177)
0xffff5827d9e4   196  b.lt #+0x8 (addr 0xffff5827d9ec)
0xffff5827d9e8   200  ret
0xffff5827d9ec   204  cmp x11, #0x83 (131)
0xffff5827d9f0   208  movz x16, #0x83
0xffff5827d9f4   212  ccmp x13, x16, #nZcv, ne
0xffff5827d9f8   216  movz x16, #0xb1
0xffff5827d9fc   220  ccmp x13, x16, #NzcV, ne
0xffff5827da00   224  b.ge #-0x18 (addr 0xffff5827d9e8)
0xffff5827da04   228  orr x14, x13, x11
0xffff5827da08   232  tst x14, #0xc0
0xffff5827da0c   236  b.eq #-0x24 (addr 0xffff5827d9e8)
0xffff5827da10   240  cmp x11, #0x81 (129)
0xffff5827da14   244  b.ne #+0x18 (addr 0xffff5827da2c)
0xffff5827da18   248  cmp x12, x10
0xffff5827da1c   252  b.ne #+0x10 (addr 0xffff5827da2c)
0xffff5827da20   256  ldur d1, [x1, #7]
0xffff5827da24   260  ldur d0, [x0, #7]
0xffff5827da28   264  b #-0x74 (addr 0xffff5827d9b4)
0xffff5827da2c   268  movz x16, #0x87
0xffff5827da30   272  and x14, x13, x16
0xffff5827da34   276  movz x16, #0x87
0xffff5827da38   280  and x15, x11, x16
0xffff5827da3c   284  cmp x14, #0x4 (4)
0xffff5827da40   288  ccmp x15, #4, #nzcv, eq
0xffff5827da44   292  b.ne #+0x5c (addr 0xffff5827daa0)
0xffff5827da48   296  ldur x10, [x1, #15]
0xffff5827da4c   300  ldur x11, [x0, #15]
0xffff5827da50   304  cmp x10, x11
0xffff5827da54   308  b.eq #+0xc (addr 0xffff5827da60)
0xffff5827da58   312  movz x0, #0x100000000
0xffff5827da5c   316  ret
0xffff5827da60   320  cbnz x10, #+0xc (addr 0xffff5827da6c)
0xffff5827da64   324  movz x0, #0x0
0xffff5827da68   328  ret
0xffff5827da6c   332  asr x10, x10, #32
0xffff5827da70   336  add x11, x10, #0x17 (23)
0xffff5827da74   340  add x1, x1, x11
0xffff5827da78   344  add x0, x0, x11
0xffff5827da7c   348  neg x10, x10
0xffff5827da80   352  ldrb w11, [x1, x10]
0xffff5827da84   356  ldrb w12, [x0, x10]
0xffff5827da88   360  cmp x11, x12
0xffff5827da8c   364  b.ne #-0x34 (addr 0xffff5827da58)
0xffff5827da90   368  add x10, x10, #0x1 (1)
0xffff5827da94   372  cbnz x10, #-0x14 (addr 0xffff5827da80)
0xffff5827da98   376  movz x0, #0x0
0xffff5827da9c   380  ret
0xffff5827daa0   384  movz x16, #0xc00000000
0xffff5827daa4   388  sub csp, jssp, #0x10 (16)
0xffff5827daa8   392  stp fp, lr, [jssp, #-16]!
0xffff5827daac   396  sub csp, jssp, #0x10 (16)
0xffff5827dab0   400  str x16, [jssp, #-8]!
0xffff5827dab4   404  ldr x17, pc+172 (addr 0x0000ffff5827db60)    ;; object: 0xffff5827d8c1 <Code: COMPARE_IC>
0xffff5827dab8   408  sub csp, jssp, #0x10 (16)
0xffff5827dabc   412  str x17, [jssp, #-8]!
0xffff5827dac0   416  add fp, jssp, #0x10 (16)
0xffff5827dac4   420  sub csp, jssp, #0x10 (16)
0xffff5827dac8   424  stp x0, x1, [jssp, #-16]!
0xffff5827dacc   428  movz x0, #0x2
0xffff5827dad0   432  ldr x1, pc+152 (addr 0x0000ffff5827db68)    ;; external reference (Runtime::StrictEqual)
0xffff5827dad4   436  ldr x16, pc+156 (addr 0x0000ffff5827db70)    ;; code: STUB, CEntryStub, minor: 4
0xffff5827dad8   440  blr x16
0xffff5827dadc   444  mov jssp, fp
0xffff5827dae0   448  ldp fp, lr, [jssp], #16
0xffff5827dae4   452  ldr x1, [x26, #64]
0xffff5827dae8   456  sub x0, x0, x1
0xffff5827daec   460  ret
0xffff5827daf0   464  movz x16, #0xc00000000
0xffff5827daf4   468  sub csp, jssp, #0x10 (16)
0xffff5827daf8   472  stp fp, lr, [jssp, #-16]!
0xffff5827dafc   476  sub csp, jssp, #0x10 (16)
0xffff5827db00   480  str x16, [jssp, #-8]!
0xffff5827db04   484  ldr x17, pc+116 (addr 0x0000ffff5827db78)    ;; object: 0xffff5827d8c1 <Code: COMPARE_IC>
0xffff5827db08   488  sub csp, jssp, #0x10 (16)
0xffff5827db0c   492  str x17, [jssp, #-8]!
0xffff5827db10   496  add fp, jssp, #0x10 (16)
0xffff5827db14   500  sub csp, jssp, #0x18 (24)
0xffff5827db18   504  stp lr, x0, [jssp, #-24]!
0xffff5827db1c   508  str x1, [jssp, #16]
0xffff5827db20   512  movz x10, #0x2f00000000
0xffff5827db24   516  sub csp, jssp, #0x18 (24)
0xffff5827db28   520  stp x10, x0, [jssp, #-24]!
0xffff5827db2c   524  str x1, [jssp, #16]
0xffff5827db30   528  movz x0, #0x3
0xffff5827db34   532  ldr x1, pc+76 (addr 0x0000ffff5827db80)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5827db38   536  ldr x16, pc+80 (addr 0x0000ffff5827db88)    ;; code: STUB, CEntryStub, minor: 4
0xffff5827db3c   540  blr x16
0xffff5827db40   544  add x11, x0, #0x5f (95)
0xffff5827db44   548  ldr x1, [jssp, #16]
0xffff5827db48   552  ldp lr, x0, [jssp], #24
0xffff5827db4c   556  mov jssp, fp
0xffff5827db50   560  ldp fp, lr, [jssp], #16
0xffff5827db54   564  br x11
0xffff5827db58   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5827db5c   572  d63f03e0       constant
0xffff5827db60   576  5827d8c1       constant
0xffff5827db64   580  0000ffff       constant
0xffff5827db68   584  00e50928       constant
0xffff5827db6c   588  00000000       constant
0xffff5827db70   592  58206060       constant
0xffff5827db74   596  0000ffff       constant
0xffff5827db78   600  5827d8c1       constant
0xffff5827db7c   604  0000ffff       constant
0xffff5827db80   608  00c8a980       constant
0xffff5827db84   612  00000000       constant
0xffff5827db88   616  58206060       constant
0xffff5827db8c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff5827dab4  embedded object  (0xffff5827d8c1 <Code: COMPARE_IC>)
0xffff5827dad0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff5827dad4  code target (STUB)  (0xffff58206060)
0xffff5827db04  embedded object  (0xffff5827d8c1 <Code: COMPARE_IC>)
0xffff5827db34  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5827db38  code target (STUB)  (0xffff58206060)
0xffff5827db58  constant pool (size 56)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff5827e240     0  orr x16, x0, x1
0xffff5827e244     4  tbnz w16, #0, #+0x10 (addr 0xffff5827e254)
0xffff5827e248     8  asr x1, x1, #32
0xffff5827e24c    12  sub x0, x1, x0, asr #32
0xffff5827e250    16  ret
0xffff5827e254    20  movz x16, #0xc00000000
0xffff5827e258    24  sub csp, jssp, #0x10 (16)
0xffff5827e25c    28  stp fp, lr, [jssp, #-16]!
0xffff5827e260    32  sub csp, jssp, #0x10 (16)
0xffff5827e264    36  str x16, [jssp, #-8]!
0xffff5827e268    40  ldr x17, pc+96 (addr 0x0000ffff5827e2c8)    ;; object: 0xffff5827e1e1 <Code: COMPARE_IC>
0xffff5827e26c    44  sub csp, jssp, #0x10 (16)
0xffff5827e270    48  str x17, [jssp, #-8]!
0xffff5827e274    52  add fp, jssp, #0x10 (16)
0xffff5827e278    56  sub csp, jssp, #0x18 (24)
0xffff5827e27c    60  stp lr, x0, [jssp, #-24]!
0xffff5827e280    64  str x1, [jssp, #16]
0xffff5827e284    68  movz x10, #0x3200000000
0xffff5827e288    72  sub csp, jssp, #0x18 (24)
0xffff5827e28c    76  stp x10, x0, [jssp, #-24]!
0xffff5827e290    80  str x1, [jssp, #16]
0xffff5827e294    84  movz x0, #0x3
0xffff5827e298    88  ldr x1, pc+56 (addr 0x0000ffff5827e2d0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5827e29c    92  ldr x16, pc+60 (addr 0x0000ffff5827e2d8)    ;; code: STUB, CEntryStub, minor: 4
0xffff5827e2a0    96  blr x16
0xffff5827e2a4   100  add x11, x0, #0x5f (95)
0xffff5827e2a8   104  ldr x1, [jssp, #16]
0xffff5827e2ac   108  ldp lr, x0, [jssp], #24
0xffff5827e2b0   112  mov jssp, fp
0xffff5827e2b4   116  ldp fp, lr, [jssp], #16
0xffff5827e2b8   120  br x11
0xffff5827e2bc   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5827e2c0   128  d63f03e0       constant
0xffff5827e2c4   132  d503201f       constant
0xffff5827e2c8   136  5827e1e1       constant
0xffff5827e2cc   140  0000ffff       constant
0xffff5827e2d0   144  00c8a980       constant
0xffff5827e2d4   148  00000000       constant
0xffff5827e2d8   152  58206060       constant
0xffff5827e2dc   156  0000ffff       constant


RelocInfo (size = 10)
0xffff5827e268  embedded object  (0xffff5827e1e1 <Code: COMPARE_IC>)
0xffff5827e298  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5827e29c  code target (STUB)  (0xffff58206060)
0xffff5827e2bc  constant pool (size 36)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff5827f9e0     0  ldur x4, [x1, #15]
0xffff5827f9e4     4  ldur w5, [x1, #27]
0xffff5827f9e8     8  tbnz w2, #0, #+0x44 (addr 0xffff5827fa2c)
0xffff5827f9ec    12  asr x7, x2, #32
0xffff5827f9f0    16  cmp w7, w5
0xffff5827f9f4    20  b.hs #+0x60 (addr 0xffff5827fa54)
0xffff5827f9f8    24  add x5, x4, #0xf (15)
0xffff5827f9fc    28  ldr x6, [x5, w7, sxtw #3]
0xffff5827fa00    32  ldr x16, [x26, #88]
0xffff5827fa04    36  cmp x6, x16
0xffff5827fa08    40  b.ne #+0x1c (addr 0xffff5827fa24)
0xffff5827fa0c    44  ldr x6, [x26, #1160]
0xffff5827fa10    48  ldur x6, [x6, #7]
0xffff5827fa14    52  movz x16, #0x100000000
0xffff5827fa18    56  cmp x6, x16
0xffff5827fa1c    60  b.ne #+0x48 (addr 0xffff5827fa64)
0xffff5827fa20    64  ldr x6, [x26, #40]
0xffff5827fa24    68  mov x0, x6
0xffff5827fa28    72  ret
0xffff5827fa2c    76  ldur x16, [x2, #-1]
0xffff5827fa30    80  ldr x17, [x26, #120]
0xffff5827fa34    84  cmp x16, x17
0xffff5827fa38    88  b.ne #+0x3c (addr 0xffff5827fa74)
0xffff5827fa3c    92  ldur d29, [x2, #7]
0xffff5827fa40    96  fcvtzs w7, d29
0xffff5827fa44   100  scvtf d0, w7
0xffff5827fa48   104  fcmp d29, d0
0xffff5827fa4c   108  b.ne #+0x28 (addr 0xffff5827fa74)
0xffff5827fa50   112  b #-0x60 (addr 0xffff5827f9f0)
0xffff5827fa54   116  movz x16, #0x0
0xffff5827fa58   120  sub csp, jssp, #0x10 (16)
0xffff5827fa5c   124  stp fp, lr, [jssp, #-16]!
0xffff5827fa60   128  bl #+0x24 (addr 0xffff5827fa84)
0xffff5827fa64   132  movz x16, #0x8
0xffff5827fa68   136  sub csp, jssp, #0x10 (16)
0xffff5827fa6c   140  stp fp, lr, [jssp, #-16]!
0xffff5827fa70   144  bl #+0x14 (addr 0xffff5827fa84)
0xffff5827fa74   148  movz x16, #0x10
0xffff5827fa78   152  sub csp, jssp, #0x10 (16)
0xffff5827fa7c   156  stp fp, lr, [jssp, #-16]!
0xffff5827fa80   160  bl #+0x4 (addr 0xffff5827fa84)
0xffff5827fa84   164  movz x17, #0xa00000000
0xffff5827fa88   168  sub csp, jssp, #0x10 (16)
0xffff5827fa8c   172  stp x17, cp, [jssp, #-16]!
0xffff5827fa90   176  add fp, jssp, #0x10 (16)
0xffff5827fa94   180  ldr x17, pc+20 (addr 0x0000ffff5827faa8)    ;; lazy deoptimization bailout 0
0xffff5827fa98   184  add x17, x17, x16
0xffff5827fa9c   188  br x17
0xffff5827faa0   192  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5827faa4   196  d63f03e0       constant
0xffff5827faa8   200  58006000       constant
0xffff5827faac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5827fa94  runtime entry
0xffff5827faa0  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff5827f9e0     0  ldur x4, [x1, #15]
0xffff5827f9e4     4  ldur w5, [x1, #27]
0xffff5827f9e8     8  tbnz w2, #0, #+0x44 (addr 0xffff5827fa2c)
0xffff5827f9ec    12  asr x7, x2, #32
0xffff5827f9f0    16  cmp w7, w5
0xffff5827f9f4    20  b.hs #+0x60 (addr 0xffff5827fa54)
0xffff5827f9f8    24  add x5, x4, #0xf (15)
0xffff5827f9fc    28  ldr x6, [x5, w7, sxtw #3]
0xffff5827fa00    32  ldr x16, [x26, #88]
0xffff5827fa04    36  cmp x6, x16
0xffff5827fa08    40  b.ne #+0x1c (addr 0xffff5827fa24)
0xffff5827fa0c    44  ldr x6, [x26, #1160]
0xffff5827fa10    48  ldur x6, [x6, #7]
0xffff5827fa14    52  movz x16, #0x100000000
0xffff5827fa18    56  cmp x6, x16
0xffff5827fa1c    60  b.ne #+0x48 (addr 0xffff5827fa64)
0xffff5827fa20    64  ldr x6, [x26, #40]
0xffff5827fa24    68  mov x0, x6
0xffff5827fa28    72  ret
0xffff5827fa2c    76  ldur x16, [x2, #-1]
0xffff5827fa30    80  ldr x17, [x26, #120]
0xffff5827fa34    84  cmp x16, x17
0xffff5827fa38    88  b.ne #+0x3c (addr 0xffff5827fa74)
0xffff5827fa3c    92  ldur d29, [x2, #7]
0xffff5827fa40    96  fcvtzs w7, d29
0xffff5827fa44   100  scvtf d0, w7
0xffff5827fa48   104  fcmp d29, d0
0xffff5827fa4c   108  b.ne #+0x28 (addr 0xffff5827fa74)
0xffff5827fa50   112  b #-0x60 (addr 0xffff5827f9f0)
0xffff5827fa54   116  movz x16, #0x0
0xffff5827fa58   120  sub csp, jssp, #0x10 (16)
0xffff5827fa5c   124  stp fp, lr, [jssp, #-16]!
0xffff5827fa60   128  bl #+0x24 (addr 0xffff5827fa84)
0xffff5827fa64   132  movz x16, #0x8
0xffff5827fa68   136  sub csp, jssp, #0x10 (16)
0xffff5827fa6c   140  stp fp, lr, [jssp, #-16]!
0xffff5827fa70   144  bl #+0x14 (addr 0xffff5827fa84)
0xffff5827fa74   148  movz x16, #0x10
0xffff5827fa78   152  sub csp, jssp, #0x10 (16)
0xffff5827fa7c   156  stp fp, lr, [jssp, #-16]!
0xffff5827fa80   160  bl #+0x4 (addr 0xffff5827fa84)
0xffff5827fa84   164  movz x17, #0xa00000000
0xffff5827fa88   168  sub csp, jssp, #0x10 (16)
0xffff5827fa8c   172  stp x17, cp, [jssp, #-16]!
0xffff5827fa90   176  add fp, jssp, #0x10 (16)
0xffff5827fa94   180  ldr x17, pc+20 (addr 0x0000ffff5827faa8)    ;; lazy deoptimization bailout 0
0xffff5827fa98   184  add x17, x17, x16
0xffff5827fa9c   188  br x17
0xffff5827faa0   192  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5827faa4   196  d63f03e0       constant
0xffff5827faa8   200  58006000       constant
0xffff5827faac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff5827fa94  runtime entry
0xffff5827faa0  constant pool (size 16)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneRegExpStub
compiler = crankshaft
Instructions (size = 357)
0xffff5827fb20     0  ldur x4, [x3, #47]
0xffff5827fb24     4  asr x5, x2, #32
0xffff5827fb28     8  add x6, x4, #0x17 (23)
0xffff5827fb2c    12  ldr x7, [x6, w5, sxtw #3]
0xffff5827fb30    16  ldr x4, pc+224 (addr 0x0000ffff5827fc10)    ;; object: 0x39c04241 <undefined>
0xffff5827fb34    20  cmp x7, x4
0xffff5827fb38    24  b.eq #+0x64 (addr 0xffff5827fb9c)
0xffff5827fb3c    28  movz x1, #0x92c0
0xffff5827fb40    32  movk x1, #0x16e7, lsl #16
0xffff5827fb44    36  ldp x2, x0, [x1]
0xffff5827fb48    40  adds x16, x2, #0x38 (56)
0xffff5827fb4c    44  ccmp x16, x0, #nzCv, lo
0xffff5827fb50    48  b.hi #+0x50 (addr 0xffff5827fba0)
0xffff5827fb54    52  str x16, [x1]
0xffff5827fb58    56  orr x2, x2, #0x1
0xffff5827fb5c    60  ldur x0, [x7, #-1]
0xffff5827fb60    64  stur x0, [x2, #-1]
0xffff5827fb64    68  ldur x0, [x7, #7]
0xffff5827fb68    72  stur x0, [x2, #7]
0xffff5827fb6c    76  ldur x0, [x7, #15]
0xffff5827fb70    80  stur x0, [x2, #15]
0xffff5827fb74    84  ldur x0, [x7, #23]
0xffff5827fb78    88  stur x0, [x2, #23]
0xffff5827fb7c    92  ldur x0, [x7, #31]
0xffff5827fb80    96  stur x0, [x2, #31]
0xffff5827fb84   100  ldur x0, [x7, #39]
0xffff5827fb88   104  stur x0, [x2, #39]
0xffff5827fb8c   108  ldur x0, [x7, #47]
0xffff5827fb90   112  stur x0, [x2, #47]
0xffff5827fb94   116  mov x0, x2
0xffff5827fb98   120  ret
0xffff5827fb9c   124  b #+0x94 (addr 0xffff5827fc30)
0xffff5827fba0   128  sub csp, jssp, #0x10 (16)
0xffff5827fba4   132  stp fp, lr, [jssp, #-16]!
0xffff5827fba8   136  movz fp, #0xa00000000
0xffff5827fbac   140  sub csp, jssp, #0x8 (8)
0xffff5827fbb0   144  str fp, [jssp, #-8]!
0xffff5827fbb4   148  add fp, jssp, #0x8 (8)
0xffff5827fbb8   152  movz x2, #0x0
0xffff5827fbbc   156  mov x16, lr
0xffff5827fbc0   160  ldr x17, pc+88 (addr 0x0000ffff5827fc18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5827fbc4   164  blr x17
0xffff5827fbc8   168  movz x0, #0x3800000000
0xffff5827fbcc   172  movz x10, #0x0
0xffff5827fbd0   176  sub csp, jssp, #0x10 (16)
0xffff5827fbd4   180  stp x10, x0, [jssp, #-16]!
0xffff5827fbd8   184  movz x0, #0x2
0xffff5827fbdc   188  movz x1, #0x5b88
0xffff5827fbe0   192  movk x1, #0xe2, lsl #16
0xffff5827fbe4   196  ldr x16, pc+60 (addr 0x0000ffff5827fc20)    ;; code: STUB, CEntryStub, minor: 5
0xffff5827fbe8   200  blr x16
0xffff5827fbec   204  str x0, [jssp, #16]
0xffff5827fbf0   208  ldr x16, pc+56 (addr 0x0000ffff5827fc28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5827fbf4   212  blr x16
0xffff5827fbf8   216  ldr lr, [jssp, #16]
0xffff5827fbfc   220  ldp xzr, fp, [jssp], #24
0xffff5827fc00   224  b #-0xa4 (addr 0xffff5827fb5c)
0xffff5827fc04   228  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff5827fc08   232  d63f03e0       constant
0xffff5827fc0c   236  d503201f       constant
0xffff5827fc10   240  39c04241       constant
0xffff5827fc14   244  00000000       constant
0xffff5827fc18   248  58206820       constant
0xffff5827fc1c   252  0000ffff       constant
0xffff5827fc20   256  58206260       constant
0xffff5827fc24   260  0000ffff       constant
0xffff5827fc28   264  582068e0       constant
0xffff5827fc2c   268  0000ffff       constant
0xffff5827fc30   272  movz x16, #0x0
0xffff5827fc34   276  sub csp, jssp, #0x10 (16)
0xffff5827fc38   280  stp fp, lr, [jssp, #-16]!
0xffff5827fc3c   284  bl #+0x4 (addr 0xffff5827fc40)
0xffff5827fc40   288  movz x17, #0xa00000000
0xffff5827fc44   292  sub csp, jssp, #0x10 (16)
0xffff5827fc48   296  stp x17, cp, [jssp, #-16]!
0xffff5827fc4c   300  add fp, jssp, #0x10 (16)
0xffff5827fc50   304  ldr x17, pc+24 (addr 0x0000ffff5827fc68)    ;; lazy deoptimization bailout 0
0xffff5827fc54   308  add x17, x17, x16
0xffff5827fc58   312  br x17
0xffff5827fc5c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5827fc60   320  d63f03e0       constant
0xffff5827fc64   324  d503201f       constant
0xffff5827fc68   328  58006000       constant
0xffff5827fc6c   332  0000ffff       constant


Safepoints (size = 21)
0xffff5827fbec   204  000 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff5827fb30  embedded object  (0x39c04241 <undefined>)
0xffff5827fbc0  code target (STUB)  (0xffff58206820)
0xffff5827fbe4  code target (STUB)  (0xffff58206260)
0xffff5827fbf0  code target (STUB)  (0xffff582068e0)
0xffff5827fc04  constant pool (size 44)
0xffff5827fc50  runtime entry
0xffff5827fc5c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneRegExpStub
name = FastCloneRegExpStub
compiler = crankshaft
Instructions (size = 357)
0xffff5827fb20     0  ldur x4, [x3, #47]
0xffff5827fb24     4  asr x5, x2, #32
0xffff5827fb28     8  add x6, x4, #0x17 (23)
0xffff5827fb2c    12  ldr x7, [x6, w5, sxtw #3]
0xffff5827fb30    16  ldr x4, pc+224 (addr 0x0000ffff5827fc10)    ;; object: 0x39c04241 <undefined>
0xffff5827fb34    20  cmp x7, x4
0xffff5827fb38    24  b.eq #+0x64 (addr 0xffff5827fb9c)
0xffff5827fb3c    28  movz x1, #0x92c0
0xffff5827fb40    32  movk x1, #0x16e7, lsl #16
0xffff5827fb44    36  ldp x2, x0, [x1]
0xffff5827fb48    40  adds x16, x2, #0x38 (56)
0xffff5827fb4c    44  ccmp x16, x0, #nzCv, lo
0xffff5827fb50    48  b.hi #+0x50 (addr 0xffff5827fba0)
0xffff5827fb54    52  str x16, [x1]
0xffff5827fb58    56  orr x2, x2, #0x1
0xffff5827fb5c    60  ldur x0, [x7, #-1]
0xffff5827fb60    64  stur x0, [x2, #-1]
0xffff5827fb64    68  ldur x0, [x7, #7]
0xffff5827fb68    72  stur x0, [x2, #7]
0xffff5827fb6c    76  ldur x0, [x7, #15]
0xffff5827fb70    80  stur x0, [x2, #15]
0xffff5827fb74    84  ldur x0, [x7, #23]
0xffff5827fb78    88  stur x0, [x2, #23]
0xffff5827fb7c    92  ldur x0, [x7, #31]
0xffff5827fb80    96  stur x0, [x2, #31]
0xffff5827fb84   100  ldur x0, [x7, #39]
0xffff5827fb88   104  stur x0, [x2, #39]
0xffff5827fb8c   108  ldur x0, [x7, #47]
0xffff5827fb90   112  stur x0, [x2, #47]
0xffff5827fb94   116  mov x0, x2
0xffff5827fb98   120  ret
0xffff5827fb9c   124  b #+0x94 (addr 0xffff5827fc30)
0xffff5827fba0   128  sub csp, jssp, #0x10 (16)
0xffff5827fba4   132  stp fp, lr, [jssp, #-16]!
0xffff5827fba8   136  movz fp, #0xa00000000
0xffff5827fbac   140  sub csp, jssp, #0x8 (8)
0xffff5827fbb0   144  str fp, [jssp, #-8]!
0xffff5827fbb4   148  add fp, jssp, #0x8 (8)
0xffff5827fbb8   152  movz x2, #0x0
0xffff5827fbbc   156  mov x16, lr
0xffff5827fbc0   160  ldr x17, pc+88 (addr 0x0000ffff5827fc18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5827fbc4   164  blr x17
0xffff5827fbc8   168  movz x0, #0x3800000000
0xffff5827fbcc   172  movz x10, #0x0
0xffff5827fbd0   176  sub csp, jssp, #0x10 (16)
0xffff5827fbd4   180  stp x10, x0, [jssp, #-16]!
0xffff5827fbd8   184  movz x0, #0x2
0xffff5827fbdc   188  movz x1, #0x5b88
0xffff5827fbe0   192  movk x1, #0xe2, lsl #16
0xffff5827fbe4   196  ldr x16, pc+60 (addr 0x0000ffff5827fc20)    ;; code: STUB, CEntryStub, minor: 5
0xffff5827fbe8   200  blr x16
0xffff5827fbec   204  str x0, [jssp, #16]
0xffff5827fbf0   208  ldr x16, pc+56 (addr 0x0000ffff5827fc28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5827fbf4   212  blr x16
0xffff5827fbf8   216  ldr lr, [jssp, #16]
0xffff5827fbfc   220  ldp xzr, fp, [jssp], #24
0xffff5827fc00   224  b #-0xa4 (addr 0xffff5827fb5c)
0xffff5827fc04   228  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff5827fc08   232  d63f03e0       constant
0xffff5827fc0c   236  d503201f       constant
0xffff5827fc10   240  39c04241       constant
0xffff5827fc14   244  00000000       constant
0xffff5827fc18   248  58206820       constant
0xffff5827fc1c   252  0000ffff       constant
0xffff5827fc20   256  58206260       constant
0xffff5827fc24   260  0000ffff       constant
0xffff5827fc28   264  582068e0       constant
0xffff5827fc2c   268  0000ffff       constant
0xffff5827fc30   272  movz x16, #0x0
0xffff5827fc34   276  sub csp, jssp, #0x10 (16)
0xffff5827fc38   280  stp fp, lr, [jssp, #-16]!
0xffff5827fc3c   284  bl #+0x4 (addr 0xffff5827fc40)
0xffff5827fc40   288  movz x17, #0xa00000000
0xffff5827fc44   292  sub csp, jssp, #0x10 (16)
0xffff5827fc48   296  stp x17, cp, [jssp, #-16]!
0xffff5827fc4c   300  add fp, jssp, #0x10 (16)
0xffff5827fc50   304  ldr x17, pc+24 (addr 0x0000ffff5827fc68)    ;; lazy deoptimization bailout 0
0xffff5827fc54   308  add x17, x17, x16
0xffff5827fc58   312  br x17
0xffff5827fc5c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5827fc60   320  d63f03e0       constant
0xffff5827fc64   324  d503201f       constant
0xffff5827fc68   328  58006000       constant
0xffff5827fc6c   332  0000ffff       constant


Safepoints (size = 21)
0xffff5827fbec   204  000 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff5827fb30  embedded object  (0x39c04241 <undefined>)
0xffff5827fbc0  code target (STUB)  (0xffff58206820)
0xffff5827fbe4  code target (STUB)  (0xffff58206260)
0xffff5827fbf0  code target (STUB)  (0xffff582068e0)
0xffff5827fc04  constant pool (size 44)
0xffff5827fc50  runtime entry
0xffff5827fc5c  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 8
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 128)
0xffff58280ba0     0  cbz x0, #+0xc (addr 0xffff58280bac)
0xffff58280ba4     4  tbz w0, #0, #+0x10 (addr 0xffff58280bb4)
0xffff58280ba8     8  b #+0x30 (addr 0xffff58280bd8)
0xffff58280bac    12  ldr x0, pc+28 (addr 0x0000ffff58280bc8)    ;; object: 0x39c042b1 <false>
0xffff58280bb0    16  ret
0xffff58280bb4    20  ldr x0, pc+28 (addr 0x0000ffff58280bd0)    ;; object: 0x39c04281 <true>
0xffff58280bb8    24  ret
0xffff58280bbc    28  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58280bc0    32  d63f03e0       constant
0xffff58280bc4    36  d503201f       constant
0xffff58280bc8    40  39c042b1       constant
0xffff58280bcc    44  00000000       constant
0xffff58280bd0    48  39c04281       constant
0xffff58280bd4    52  00000000       constant
0xffff58280bd8    56  movz x16, #0x0
0xffff58280bdc    60  sub csp, jssp, #0x10 (16)
0xffff58280be0    64  stp fp, lr, [jssp, #-16]!
0xffff58280be4    68  bl #+0x4 (addr 0xffff58280be8)
0xffff58280be8    72  movz x17, #0xa00000000
0xffff58280bec    76  sub csp, jssp, #0x10 (16)
0xffff58280bf0    80  stp x17, cp, [jssp, #-16]!
0xffff58280bf4    84  add fp, jssp, #0x10 (16)
0xffff58280bf8    88  ldr x17, pc+24 (addr 0x0000ffff58280c10)    ;; lazy deoptimization bailout 0
0xffff58280bfc    92  add x17, x17, x16
0xffff58280c00    96  br x17
0xffff58280c04   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58280c08   104  d63f03e0       constant
0xffff58280c0c   108  d503201f       constant
0xffff58280c10   112  58006000       constant
0xffff58280c14   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff58280bac  embedded object  (0x39c042b1 <false>)
0xffff58280bb4  embedded object  (0x39c04281 <true>)
0xffff58280bbc  constant pool (size 28)
0xffff58280bf8  runtime entry
0xffff58280c04  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 8
type = NORMAL
name = ToBooleanICStub(Smi)
compiler = crankshaft
Instructions (size = 128)
0xffff58280ba0     0  cbz x0, #+0xc (addr 0xffff58280bac)
0xffff58280ba4     4  tbz w0, #0, #+0x10 (addr 0xffff58280bb4)
0xffff58280ba8     8  b #+0x30 (addr 0xffff58280bd8)
0xffff58280bac    12  ldr x0, pc+28 (addr 0x0000ffff58280bc8)    ;; object: 0x39c042b1 <false>
0xffff58280bb0    16  ret
0xffff58280bb4    20  ldr x0, pc+28 (addr 0x0000ffff58280bd0)    ;; object: 0x39c04281 <true>
0xffff58280bb8    24  ret
0xffff58280bbc    28  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58280bc0    32  d63f03e0       constant
0xffff58280bc4    36  d503201f       constant
0xffff58280bc8    40  39c042b1       constant
0xffff58280bcc    44  00000000       constant
0xffff58280bd0    48  39c04281       constant
0xffff58280bd4    52  00000000       constant
0xffff58280bd8    56  movz x16, #0x0
0xffff58280bdc    60  sub csp, jssp, #0x10 (16)
0xffff58280be0    64  stp fp, lr, [jssp, #-16]!
0xffff58280be4    68  bl #+0x4 (addr 0xffff58280be8)
0xffff58280be8    72  movz x17, #0xa00000000
0xffff58280bec    76  sub csp, jssp, #0x10 (16)
0xffff58280bf0    80  stp x17, cp, [jssp, #-16]!
0xffff58280bf4    84  add fp, jssp, #0x10 (16)
0xffff58280bf8    88  ldr x17, pc+24 (addr 0x0000ffff58280c10)    ;; lazy deoptimization bailout 0
0xffff58280bfc    92  add x17, x17, x16
0xffff58280c00    96  br x17
0xffff58280c04   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58280c08   104  d63f03e0       constant
0xffff58280c0c   108  d503201f       constant
0xffff58280c10   112  58006000       constant
0xffff58280c14   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff58280bac  embedded object  (0x39c042b1 <false>)
0xffff58280bb4  embedded object  (0x39c04281 <true>)
0xffff58280bbc  constant pool (size 28)
0xffff58280bf8  runtime entry
0xffff58280c04  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff58280f80     0  adr xzr, #+0x40 (addr 0xffff58280fc0)
0xffff58280f84     4  adr xzr, #+0x2a8 (addr 0xffff5828122c)
0xffff58280f88     8  ldr x16, pc+1368 (addr 0x0000ffff582814e0)    ;; external reference (store_buffer_top)
0xffff58280f8c    12  ldr x10, [x16]
0xffff58280f90    16  str x11, [x10], #8
0xffff58280f94    20  str x10, [x16]
0xffff58280f98    24  tst x10, #0x1ffff
0xffff58280f9c    28  b.eq #+0x8 (addr 0xffff58280fa4)
0xffff58280fa0    32  ret
0xffff58280fa4    36  sub csp, jssp, #0x8 (8)
0xffff58280fa8    40  str lr, [jssp, #-8]!
0xffff58280fac    44  ldr x17, pc+1340 (addr 0x0000ffff582814e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58280fb0    48  blr x17
0xffff58280fb4    52  ldr lr, [jssp], #8
0xffff58280fb8    56  ret
0xffff58280fbc    60  ret
0xffff58280fc0    64  sub csp, jssp, #0x10 (16)
0xffff58280fc4    68  stp x1, x0, [jssp, #-16]!
0xffff58280fc8    72  ldr x10, [x11]
0xffff58280fcc    76  and x16, x10, #0xfffffffffff00000
0xffff58280fd0    80  ldr x16, [x16, #8]
0xffff58280fd4    84  tst x16, #0x18
0xffff58280fd8    88  b.eq #+0x17c (addr 0xffff58281154)
0xffff58280fdc    92  and x16, x21, #0xfffffffffff00000
0xffff58280fe0    96  ldr x16, [x16, #8]
0xffff58280fe4   100  tst x16, #0x18
0xffff58280fe8   104  b.ne #+0x16c (addr 0xffff58281154)
0xffff58280fec   108  and x10, x21, #0xfffffffffff00000
0xffff58280ff0   112  ldr x0, [x10, #104]
0xffff58280ff4   116  subs x0, x0, #0x1 (1)
0xffff58280ff8   120  str x0, [x10, #104]
0xffff58280ffc   124  b.mi #+0xc4 (addr 0xffff582810c0)
0xffff58281000   128  ubfx x16, x21, #8, #12
0xffff58281004   132  and x10, x21, #0xfffffffffff00000
0xffff58281008   136  add x10, x10, x16, lsl #2
0xffff5828100c   140  ubfx x0, x21, #3, #5
0xffff58281010   144  ldr x10, [x10, #360]
0xffff58281014   148  lsr x10, x10, x0
0xffff58281018   152  tbz w10, #0, #+0x8 (addr 0xffff58281020)
0xffff5828101c   156  tbnz w10, #1, #+0x3c (addr 0xffff58281058)
0xffff58281020   160  ldp x1, x0, [jssp], #16
0xffff58281024   164  ldr x16, pc+1228 (addr 0x0000ffff582814f0)    ;; external reference (store_buffer_top)
0xffff58281028   168  ldr x10, [x16]
0xffff5828102c   172  str x11, [x10], #8
0xffff58281030   176  str x10, [x16]
0xffff58281034   180  tst x10, #0x1ffff
0xffff58281038   184  b.eq #+0x8 (addr 0xffff58281040)
0xffff5828103c   188  ret
0xffff58281040   192  sub csp, jssp, #0x8 (8)
0xffff58281044   196  str lr, [jssp, #-8]!
0xffff58281048   200  ldr x17, pc+1200 (addr 0x0000ffff582814f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5828104c   204  blr x17
0xffff58281050   208  ldr lr, [jssp], #8
0xffff58281054   212  ret
0xffff58281058   216  ldr x10, [x11]
0xffff5828105c   220  sub csp, jssp, #0x10 (16)
0xffff58281060   224  stp x21, x11, [jssp, #-16]!
0xffff58281064   228  ubfx x16, x10, #8, #12
0xffff58281068   232  and x0, x10, #0xfffffffffff00000
0xffff5828106c   236  add x0, x0, x16, lsl #2
0xffff58281070   240  ubfx x21, x10, #3, #5
0xffff58281074   244  ldr x11, [x0, #360]
0xffff58281078   248  lsr x11, x11, x21
0xffff5828107c   252  tbz w11, #0, #+0x40 (addr 0xffff582810bc)
0xffff58281080   256  ldp x21, x11, [jssp], #16
0xffff58281084   260  ldp x1, x0, [jssp], #16
0xffff58281088   264  ldr x16, pc+1144 (addr 0x0000ffff58281500)    ;; external reference (store_buffer_top)
0xffff5828108c   268  ldr x10, [x16]
0xffff58281090   272  str x11, [x10], #8
0xffff58281094   276  str x10, [x16]
0xffff58281098   280  tst x10, #0x1ffff
0xffff5828109c   284  b.eq #+0x8 (addr 0xffff582810a4)
0xffff582810a0   288  ret
0xffff582810a4   292  sub csp, jssp, #0x8 (8)
0xffff582810a8   296  str lr, [jssp, #-8]!
0xffff582810ac   300  ldr x17, pc+1116 (addr 0x0000ffff58281508)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582810b0   304  blr x17
0xffff582810b4   308  ldr lr, [jssp], #8
0xffff582810b8   312  ret
0xffff582810bc   316  ldp x21, x11, [jssp], #16
0xffff582810c0   320  sub csp, jssp, #0x78 (120)
0xffff582810c4   324  stp x14, x15, [jssp, #-32]!
0xffff582810c8   328  stp x18, lr, [jssp, #16]
0xffff582810cc   332  stp x9, x11, [jssp, #-32]!
0xffff582810d0   336  stp x12, x13, [jssp, #16]
0xffff582810d4   340  stp x5, x6, [jssp, #-32]!
0xffff582810d8   344  stp x7, x8, [jssp, #16]
0xffff582810dc   348  stp x2, x3, [jssp, #-24]!
0xffff582810e0   352  str x4, [jssp, #16]
0xffff582810e4   356  mov x0, x21
0xffff582810e8   360  mov x1, x11
0xffff582810ec   364  ldr x2, pc+1060 (addr 0x0000ffff58281510)    ;; external reference (isolate)
0xffff582810f0   368  ldr x16, pc+1064 (addr 0x0000ffff58281518)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582810f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff582810f8   376  blr x16
0xffff582810fc   380  ldp x4, x5, [jssp, #16]
0xffff58281100   384  ldp x2, x3, [jssp], #32
0xffff58281104   388  ldp x8, x9, [jssp, #16]
0xffff58281108   392  ldp x6, x7, [jssp], #32
0xffff5828110c   396  ldp x13, x14, [jssp, #16]
0xffff58281110   400  ldp x11, x12, [jssp], #32
0xffff58281114   404  ldr lr, [jssp, #16]
0xffff58281118   408  ldp x15, x18, [jssp], #24
0xffff5828111c   412  ldp x1, x0, [jssp], #16
0xffff58281120   416  ldr x16, pc+1024 (addr 0x0000ffff58281520)    ;; external reference (store_buffer_top)
0xffff58281124   420  ldr x10, [x16]
0xffff58281128   424  str x11, [x10], #8
0xffff5828112c   428  str x10, [x16]
0xffff58281130   432  tst x10, #0x1ffff
0xffff58281134   436  b.eq #+0x8 (addr 0xffff5828113c)
0xffff58281138   440  ret
0xffff5828113c   444  sub csp, jssp, #0x8 (8)
0xffff58281140   448  str lr, [jssp, #-8]!
0xffff58281144   452  ldr x17, pc+996 (addr 0x0000ffff58281528)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff58281148   456  blr x17
0xffff5828114c   460  ldr lr, [jssp], #8
0xffff58281150   464  ret
0xffff58281154   468  and x10, x21, #0xfffffffffff00000
0xffff58281158   472  ldr x0, [x10, #104]
0xffff5828115c   476  subs x0, x0, #0x1 (1)
0xffff58281160   480  str x0, [x10, #104]
0xffff58281164   484  b.mi #+0x64 (addr 0xffff582811c8)
0xffff58281168   488  ubfx x16, x21, #8, #12
0xffff5828116c   492  and x10, x21, #0xfffffffffff00000
0xffff58281170   496  add x10, x10, x16, lsl #2
0xffff58281174   500  ubfx x0, x21, #3, #5
0xffff58281178   504  ldr x10, [x10, #360]
0xffff5828117c   508  lsr x10, x10, x0
0xffff58281180   512  tbz w10, #0, #+0x8 (addr 0xffff58281188)
0xffff58281184   516  tbnz w10, #1, #+0xc (addr 0xffff58281190)
0xffff58281188   520  ldp x1, x0, [jssp], #16
0xffff5828118c   524  ret
0xffff58281190   528  ldr x10, [x11]
0xffff58281194   532  sub csp, jssp, #0x10 (16)
0xffff58281198   536  stp x21, x11, [jssp, #-16]!
0xffff5828119c   540  ubfx x16, x10, #8, #12
0xffff582811a0   544  and x0, x10, #0xfffffffffff00000
0xffff582811a4   548  add x0, x0, x16, lsl #2
0xffff582811a8   552  ubfx x21, x10, #3, #5
0xffff582811ac   556  ldr x11, [x0, #360]
0xffff582811b0   560  lsr x11, x11, x21
0xffff582811b4   564  tbz w11, #0, #+0x10 (addr 0xffff582811c4)
0xffff582811b8   568  ldp x21, x11, [jssp], #16
0xffff582811bc   572  ldp x1, x0, [jssp], #16
0xffff582811c0   576  ret
0xffff582811c4   580  ldp x21, x11, [jssp], #16
0xffff582811c8   584  sub csp, jssp, #0x78 (120)
0xffff582811cc   588  stp x14, x15, [jssp, #-32]!
0xffff582811d0   592  stp x18, lr, [jssp, #16]
0xffff582811d4   596  stp x9, x11, [jssp, #-32]!
0xffff582811d8   600  stp x12, x13, [jssp, #16]
0xffff582811dc   604  stp x5, x6, [jssp, #-32]!
0xffff582811e0   608  stp x7, x8, [jssp, #16]
0xffff582811e4   612  stp x2, x3, [jssp, #-24]!
0xffff582811e8   616  str x4, [jssp, #16]
0xffff582811ec   620  mov x0, x21
0xffff582811f0   624  mov x1, x11
0xffff582811f4   628  ldr x2, pc+828 (addr 0x0000ffff58281530)    ;; external reference (isolate)
0xffff582811f8   632  ldr x16, pc+832 (addr 0x0000ffff58281538)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582811fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff58281200   640  blr x16
0xffff58281204   644  ldp x4, x5, [jssp, #16]
0xffff58281208   648  ldp x2, x3, [jssp], #32
0xffff5828120c   652  ldp x8, x9, [jssp, #16]
0xffff58281210   656  ldp x6, x7, [jssp], #32
0xffff58281214   660  ldp x13, x14, [jssp, #16]
0xffff58281218   664  ldp x11, x12, [jssp], #32
0xffff5828121c   668  ldr lr, [jssp, #16]
0xffff58281220   672  ldp x15, x18, [jssp], #24
0xffff58281224   676  ldp x1, x0, [jssp], #16
0xffff58281228   680  ret
0xffff5828122c   684  sub csp, jssp, #0x10 (16)
0xffff58281230   688  stp x1, x0, [jssp, #-16]!
0xffff58281234   692  ldr x10, [x11]
0xffff58281238   696  and x16, x10, #0xfffffffffff00000
0xffff5828123c   700  ldr x16, [x16, #8]
0xffff58281240   704  tst x16, #0x18
0xffff58281244   708  b.eq #+0x19c (addr 0xffff582813e0)
0xffff58281248   712  and x16, x21, #0xfffffffffff00000
0xffff5828124c   716  ldr x16, [x16, #8]
0xffff58281250   720  tst x16, #0x18
0xffff58281254   724  b.ne #+0x18c (addr 0xffff582813e0)
0xffff58281258   728  and x10, x21, #0xfffffffffff00000
0xffff5828125c   732  ldr x0, [x10, #104]
0xffff58281260   736  subs x0, x0, #0x1 (1)
0xffff58281264   740  str x0, [x10, #104]
0xffff58281268   744  b.mi #+0xe4 (addr 0xffff5828134c)
0xffff5828126c   748  ubfx x16, x21, #8, #12
0xffff58281270   752  and x10, x21, #0xfffffffffff00000
0xffff58281274   756  add x10, x10, x16, lsl #2
0xffff58281278   760  ubfx x0, x21, #3, #5
0xffff5828127c   764  ldr x10, [x10, #360]
0xffff58281280   768  lsr x10, x10, x0
0xffff58281284   772  tbz w10, #0, #+0x8 (addr 0xffff5828128c)
0xffff58281288   776  tbnz w10, #1, #+0x3c (addr 0xffff582812c4)
0xffff5828128c   780  ldp x1, x0, [jssp], #16
0xffff58281290   784  ldr x16, pc+688 (addr 0x0000ffff58281540)    ;; external reference (store_buffer_top)
0xffff58281294   788  ldr x10, [x16]
0xffff58281298   792  str x11, [x10], #8
0xffff5828129c   796  str x10, [x16]
0xffff582812a0   800  tst x10, #0x1ffff
0xffff582812a4   804  b.eq #+0x8 (addr 0xffff582812ac)
0xffff582812a8   808  ret
0xffff582812ac   812  sub csp, jssp, #0x8 (8)
0xffff582812b0   816  str lr, [jssp, #-8]!
0xffff582812b4   820  ldr x17, pc+660 (addr 0x0000ffff58281548)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582812b8   824  blr x17
0xffff582812bc   828  ldr lr, [jssp], #8
0xffff582812c0   832  ret
0xffff582812c4   836  ldr x10, [x11]
0xffff582812c8   840  and x0, x10, #0xfffffffffff00000
0xffff582812cc   844  ldr x0, [x0, #8]
0xffff582812d0   848  tbz w0, #6, #+0x18 (addr 0xffff582812e8)
0xffff582812d4   852  and x0, x21, #0xfffffffffff00000
0xffff582812d8   856  ldr x0, [x0, #8]
0xffff582812dc   860  movz x16, #0x58
0xffff582812e0   864  tst x0, x16
0xffff582812e4   868  b.eq #+0x68 (addr 0xffff5828134c)
0xffff582812e8   872  sub csp, jssp, #0x10 (16)
0xffff582812ec   876  stp x21, x11, [jssp, #-16]!
0xffff582812f0   880  ubfx x16, x10, #8, #12
0xffff582812f4   884  and x0, x10, #0xfffffffffff00000
0xffff582812f8   888  add x0, x0, x16, lsl #2
0xffff582812fc   892  ubfx x21, x10, #3, #5
0xffff58281300   896  ldr x11, [x0, #360]
0xffff58281304   900  lsr x11, x11, x21
0xffff58281308   904  tbz w11, #0, #+0x40 (addr 0xffff58281348)
0xffff5828130c   908  ldp x21, x11, [jssp], #16
0xffff58281310   912  ldp x1, x0, [jssp], #16
0xffff58281314   916  ldr x16, pc+572 (addr 0x0000ffff58281550)    ;; external reference (store_buffer_top)
0xffff58281318   920  ldr x10, [x16]
0xffff5828131c   924  str x11, [x10], #8
0xffff58281320   928  str x10, [x16]
0xffff58281324   932  tst x10, #0x1ffff
0xffff58281328   936  b.eq #+0x8 (addr 0xffff58281330)
0xffff5828132c   940  ret
0xffff58281330   944  sub csp, jssp, #0x8 (8)
0xffff58281334   948  str lr, [jssp, #-8]!
0xffff58281338   952  ldr x17, pc+544 (addr 0x0000ffff58281558)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff5828133c   956  blr x17
0xffff58281340   960  ldr lr, [jssp], #8
0xffff58281344   964  ret
0xffff58281348   968  ldp x21, x11, [jssp], #16
0xffff5828134c   972  sub csp, jssp, #0x78 (120)
0xffff58281350   976  stp x14, x15, [jssp, #-32]!
0xffff58281354   980  stp x18, lr, [jssp, #16]
0xffff58281358   984  stp x9, x11, [jssp, #-32]!
0xffff5828135c   988  stp x12, x13, [jssp, #16]
0xffff58281360   992  stp x5, x6, [jssp, #-32]!
0xffff58281364   996  stp x7, x8, [jssp, #16]
0xffff58281368  1000  stp x2, x3, [jssp, #-24]!
0xffff5828136c  1004  str x4, [jssp, #16]
0xffff58281370  1008  mov x0, x21
0xffff58281374  1012  mov x1, x11
0xffff58281378  1016  ldr x2, pc+488 (addr 0x0000ffff58281560)    ;; external reference (isolate)
0xffff5828137c  1020  ldr x16, pc+492 (addr 0x0000ffff58281568)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58281380  1024  and csp, jssp, #0xfffffffffffffff0
0xffff58281384  1028  blr x16
0xffff58281388  1032  ldp x4, x5, [jssp, #16]
0xffff5828138c  1036  ldp x2, x3, [jssp], #32
0xffff58281390  1040  ldp x8, x9, [jssp, #16]
0xffff58281394  1044  ldp x6, x7, [jssp], #32
0xffff58281398  1048  ldp x13, x14, [jssp, #16]
0xffff5828139c  1052  ldp x11, x12, [jssp], #32
0xffff582813a0  1056  ldr lr, [jssp, #16]
0xffff582813a4  1060  ldp x15, x18, [jssp], #24
0xffff582813a8  1064  ldp x1, x0, [jssp], #16
0xffff582813ac  1068  ldr x16, pc+452 (addr 0x0000ffff58281570)    ;; external reference (store_buffer_top)
0xffff582813b0  1072  ldr x10, [x16]
0xffff582813b4  1076  str x11, [x10], #8
0xffff582813b8  1080  str x10, [x16]
0xffff582813bc  1084  tst x10, #0x1ffff
0xffff582813c0  1088  b.eq #+0x8 (addr 0xffff582813c8)
0xffff582813c4  1092  ret
0xffff582813c8  1096  sub csp, jssp, #0x8 (8)
0xffff582813cc  1100  str lr, [jssp, #-8]!
0xffff582813d0  1104  ldr x17, pc+424 (addr 0x0000ffff58281578)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff582813d4  1108  blr x17
0xffff582813d8  1112  ldr lr, [jssp], #8
0xffff582813dc  1116  ret
0xffff582813e0  1120  and x10, x21, #0xfffffffffff00000
0xffff582813e4  1124  ldr x0, [x10, #104]
0xffff582813e8  1128  subs x0, x0, #0x1 (1)
0xffff582813ec  1132  str x0, [x10, #104]
0xffff582813f0  1136  b.mi #+0x84 (addr 0xffff58281474)
0xffff582813f4  1140  ubfx x16, x21, #8, #12
0xffff582813f8  1144  and x10, x21, #0xfffffffffff00000
0xffff582813fc  1148  add x10, x10, x16, lsl #2
0xffff58281400  1152  ubfx x0, x21, #3, #5
0xffff58281404  1156  ldr x10, [x10, #360]
0xffff58281408  1160  lsr x10, x10, x0
0xffff5828140c  1164  tbz w10, #0, #+0x8 (addr 0xffff58281414)
0xffff58281410  1168  tbnz w10, #1, #+0xc (addr 0xffff5828141c)
0xffff58281414  1172  ldp x1, x0, [jssp], #16
0xffff58281418  1176  ret
0xffff5828141c  1180  ldr x10, [x11]
0xffff58281420  1184  and x0, x10, #0xfffffffffff00000
0xffff58281424  1188  ldr x0, [x0, #8]
0xffff58281428  1192  tbz w0, #6, #+0x18 (addr 0xffff58281440)
0xffff5828142c  1196  and x0, x21, #0xfffffffffff00000
0xffff58281430  1200  ldr x0, [x0, #8]
0xffff58281434  1204  movz x16, #0x58
0xffff58281438  1208  tst x0, x16
0xffff5828143c  1212  b.eq #+0x38 (addr 0xffff58281474)
0xffff58281440  1216  sub csp, jssp, #0x10 (16)
0xffff58281444  1220  stp x21, x11, [jssp, #-16]!
0xffff58281448  1224  ubfx x16, x10, #8, #12
0xffff5828144c  1228  and x0, x10, #0xfffffffffff00000
0xffff58281450  1232  add x0, x0, x16, lsl #2
0xffff58281454  1236  ubfx x21, x10, #3, #5
0xffff58281458  1240  ldr x11, [x0, #360]
0xffff5828145c  1244  lsr x11, x11, x21
0xffff58281460  1248  tbz w11, #0, #+0x10 (addr 0xffff58281470)
0xffff58281464  1252  ldp x21, x11, [jssp], #16
0xffff58281468  1256  ldp x1, x0, [jssp], #16
0xffff5828146c  1260  ret
0xffff58281470  1264  ldp x21, x11, [jssp], #16
0xffff58281474  1268  sub csp, jssp, #0x78 (120)
0xffff58281478  1272  stp x14, x15, [jssp, #-32]!
0xffff5828147c  1276  stp x18, lr, [jssp, #16]
0xffff58281480  1280  stp x9, x11, [jssp, #-32]!
0xffff58281484  1284  stp x12, x13, [jssp, #16]
0xffff58281488  1288  stp x5, x6, [jssp, #-32]!
0xffff5828148c  1292  stp x7, x8, [jssp, #16]
0xffff58281490  1296  stp x2, x3, [jssp, #-24]!
0xffff58281494  1300  str x4, [jssp, #16]
0xffff58281498  1304  mov x0, x21
0xffff5828149c  1308  mov x1, x11
0xffff582814a0  1312  ldr x2, pc+224 (addr 0x0000ffff58281580)    ;; external reference (isolate)
0xffff582814a4  1316  ldr x16, pc+228 (addr 0x0000ffff58281588)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff582814a8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff582814ac  1324  blr x16
0xffff582814b0  1328  ldp x4, x5, [jssp, #16]
0xffff582814b4  1332  ldp x2, x3, [jssp], #32
0xffff582814b8  1336  ldp x8, x9, [jssp, #16]
0xffff582814bc  1340  ldp x6, x7, [jssp], #32
0xffff582814c0  1344  ldp x13, x14, [jssp, #16]
0xffff582814c4  1348  ldp x11, x12, [jssp], #32
0xffff582814c8  1352  ldr lr, [jssp, #16]
0xffff582814cc  1356  ldp x15, x18, [jssp], #24
0xffff582814d0  1360  ldp x1, x0, [jssp], #16
0xffff582814d4  1364  ret
0xffff582814d8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff582814dc  1372  d63f03e0       constant
0xffff582814e0  1376  16e798c0       constant
0xffff582814e4  1380  00000000       constant
0xffff582814e8  1384  582064c0       constant
0xffff582814ec  1388  0000ffff       constant
0xffff582814f0  1392  16e798c0       constant
0xffff582814f4  1396  00000000       constant
0xffff582814f8  1400  582064c0       constant
0xffff582814fc  1404  0000ffff       constant
0xffff58281500  1408  16e798c0       constant
0xffff58281504  1412  00000000       constant
0xffff58281508  1416  582064c0       constant
0xffff5828150c  1420  0000ffff       constant
0xffff58281510  1424  16e782d0       constant
0xffff58281514  1428  00000000       constant
0xffff58281518  1432  00c2d958       constant
0xffff5828151c  1436  00000000       constant
0xffff58281520  1440  16e798c0       constant
0xffff58281524  1444  00000000       constant
0xffff58281528  1448  582064c0       constant
0xffff5828152c  1452  0000ffff       constant
0xffff58281530  1456  16e782d0       constant
0xffff58281534  1460  00000000       constant
0xffff58281538  1464  00c2d958       constant
0xffff5828153c  1468  00000000       constant
0xffff58281540  1472  16e798c0       constant
0xffff58281544  1476  00000000       constant
0xffff58281548  1480  582064c0       constant
0xffff5828154c  1484  0000ffff       constant
0xffff58281550  1488  16e798c0       constant
0xffff58281554  1492  00000000       constant
0xffff58281558  1496  582064c0       constant
0xffff5828155c  1500  0000ffff       constant
0xffff58281560  1504  16e782d0       constant
0xffff58281564  1508  00000000       constant
0xffff58281568  1512  00c2d958       constant
0xffff5828156c  1516  00000000       constant
0xffff58281570  1520  16e798c0       constant
0xffff58281574  1524  00000000       constant
0xffff58281578  1528  582064c0       constant
0xffff5828157c  1532  0000ffff       constant
0xffff58281580  1536  16e782d0       constant
0xffff58281584  1540  00000000       constant
0xffff58281588  1544  00c2d958       constant
0xffff5828158c  1548  00000000       constant


RelocInfo (size = 59)
0xffff58280f88  external reference (store_buffer_top)  (0x16e798c0)
0xffff58280fac  code target (STUB)  (0xffff582064c0)
0xffff58281024  external reference (store_buffer_top)  (0x16e798c0)
0xffff58281048  code target (STUB)  (0xffff582064c0)
0xffff58281088  external reference (store_buffer_top)  (0x16e798c0)
0xffff582810ac  code target (STUB)  (0xffff582064c0)
0xffff582810ec  external reference (isolate)  (0x16e782d0)
0xffff582810f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58281120  external reference (store_buffer_top)  (0x16e798c0)
0xffff58281144  code target (STUB)  (0xffff582064c0)
0xffff582811f4  external reference (isolate)  (0x16e782d0)
0xffff582811f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58281290  external reference (store_buffer_top)  (0x16e798c0)
0xffff582812b4  code target (STUB)  (0xffff582064c0)
0xffff58281314  external reference (store_buffer_top)  (0x16e798c0)
0xffff58281338  code target (STUB)  (0xffff582064c0)
0xffff58281378  external reference (isolate)  (0x16e782d0)
0xffff5828137c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582813ac  external reference (store_buffer_top)  (0x16e798c0)
0xffff582813d0  code target (STUB)  (0xffff582064c0)
0xffff582814a0  external reference (isolate)  (0x16e782d0)
0xffff582814a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582814d8  constant pool (size 184)


kind = STUB
major_key = RegExpExecStub
name = RegExpExecStub
compiler = unknown
Instructions (size = 944)
0xffff58281600     0  ldr x10, pc+776 (addr 0x0000ffff58281908)    ;; external reference (RegExpStack::memory_size())
0xffff58281604     4  ldr x10, [x10]
0xffff58281608     8  cbz x10, #+0x2c0 (addr 0xffff582818c8)
0xffff5828160c    12  ldr x3, [jssp, #24]
0xffff58281610    16  tbz w3, #0, #+0x2b8 (addr 0xffff582818c8)
0xffff58281614    20  ldur x10, [x3, #-1]
0xffff58281618    24  ldrb w10, [x10, #11]
0xffff5828161c    28  cmp x10, #0xc7 (199)
0xffff58281620    32  b.ne #+0x2a8 (addr 0xffff582818c8)
0xffff58281624    36  ldur x20, [x3, #23]
0xffff58281628    40  ldur x10, [x20, #15]
0xffff5828162c    44  movz x16, #0x200000000
0xffff58281630    48  cmp x10, x16
0xffff58281634    52  b.ne #+0x294 (addr 0xffff582818c8)
0xffff58281638    56  ldursw x10, [x20, #83]
0xffff5828163c    60  add x10, x10, x10
0xffff58281640    64  cmp x10, #0x7e (126)
0xffff58281644    68  b.hi #+0x284 (addr 0xffff582818c8)
0xffff58281648    72  movz w5, #0x0
0xffff5828164c    76  ldr x19, [jssp, #16]
0xffff58281650    80  tbz w19, #0, #+0x278 (addr 0xffff582818c8)
0xffff58281654    84  ldur x2, [x19, #15]
0xffff58281658    88  ldur x10, [x19, #-1]
0xffff5828165c    92  ldrb w0, [x10, #11]
0xffff58281660    96  movz w16, #0x93
0xffff58281664   100  and w6, w0, w16
0xffff58281668   104  cbz w6, #+0x24 (addr 0xffff5828168c)
0xffff5828166c   108  cmp w6, #0x2 (2)
0xffff58281670   112  b.ge #+0x268 (addr 0xffff582818d8)
0xffff58281674   116  ldur x10, [x19, #31]
0xffff58281678   120  ldr x16, [x26, #80]
0xffff5828167c   124  cmp x10, x16
0xffff58281680   128  b.ne #+0x248 (addr 0xffff582818c8)
0xffff58281684   132  ldur x19, [x19, #23]
0xffff58281688   136  b #-0x30 (addr 0xffff58281658)
0xffff5828168c   140  ldr x10, [jssp, #8]
0xffff58281690   144  tbnz w10, #0, #+0x238 (addr 0xffff582818c8)
0xffff58281694   148  cmp x2, x10
0xffff58281698   152  b.ls #+0x230 (addr 0xffff582818c8)
0xffff5828169c   156  asr x1, x10, #32
0xffff582816a0   160  movz x10, #0x8
0xffff582816a4   164  ands w4, w0, #0x4
0xffff582816a8   168  csel x10, xzr, x10, ne
0xffff582816ac   172  add x10, x20, x10
0xffff582816b0   176  ldur x22, [x10, #39]
0xffff582816b4   180  tbz w22, #0, #+0x214 (addr 0xffff582818c8)
0xffff582816b8   184  sub csp, jssp, #0x10 (16)
0xffff582816bc   188  stp fp, lr, [jssp, #-16]!
0xffff582816c0   192  mov fp, jssp
0xffff582816c4   196  movz x10, #0x300000000
0xffff582816c8   200  sub csp, jssp, #0x8 (8)
0xffff582816cc   204  str x10, [jssp, #-8]!
0xffff582816d0   208  sub csp, jssp, #0x8 (8)
0xffff582816d4   212  str xzr, [jssp, #-8]!
0xffff582816d8   216  ldr x10, pc+568 (addr 0x0000ffff58281910)    ;; object: 0xffff582815a1 <Code: STUB>
0xffff582816dc   220  sub csp, jssp, #0x8 (8)
0xffff582816e0   224  str x10, [jssp, #-8]!
0xffff582816e4   228  ldr x10, pc+564 (addr 0x0000ffff58281918)    ;; external reference (Isolate::c_entry_fp_address)
0xffff582816e8   232  str fp, [x10]
0xffff582816ec   236  ldr x10, pc+564 (addr 0x0000ffff58281920)    ;; external reference (Isolate::context_address)
0xffff582816f0   240  str cp, [x10]
0xffff582816f4   244  sub csp, jssp, #0x10 (16)
0xffff582816f8   248  sub jssp, jssp, #0x10 (16)
0xffff582816fc   252  and csp, jssp, #0xfffffffffffffff0
0xffff58281700   256  add x10, csp, #0x8 (8)
0xffff58281704   260  stur x10, [fp, #-16]
0xffff58281708   264  ldr x10, pc+544 (addr 0x0000ffff58281928)    ;; external reference (isolate)
0xffff5828170c   268  str x10, [csp, #8]
0xffff58281710   272  add x13, x19, #0x17 (23)
0xffff58281714   276  ldr x19, [fp, #32]
0xffff58281718   280  ldur w11, [x19, #19]
0xffff5828171c   284  ubfx w4, w4, #2, #1
0xffff58281720   288  eor w4, w4, #0x1
0xffff58281724   292  lsl w12, w1, w4
0xffff58281728   296  lsl w11, w11, w4
0xffff5828172c   300  lsl w5, w5, w4
0xffff58281730   304  mov x0, x19
0xffff58281734   308  add w10, w12, w5
0xffff58281738   312  add x2, x13, w10, uxtw
0xffff5828173c   316  sub w10, w11, w12
0xffff58281740   320  add x3, x2, w10, uxtw
0xffff58281744   324  ldr x4, pc+492 (addr 0x0000ffff58281930)    ;; external reference (OffsetsVector::static_offsets_vector)
0xffff58281748   328  movz x5, #0x0
0xffff5828174c   332  ldr x10, pc+492 (addr 0x0000ffff58281938)    ;; external reference (RegExpStack::memory_address())
0xffff58281750   336  ldr x10, [x10]
0xffff58281754   340  ldr x11, pc+492 (addr 0x0000ffff58281940)    ;; external reference (RegExpStack::memory_size())
0xffff58281758   344  ldr x11, [x11]
0xffff5828175c   348  add x6, x10, x11
0xffff58281760   352  movz x7, #0x1
0xffff58281764   356  add x22, x22, #0x5f (95)
0xffff58281768   360  ldr lr, pc+480 (addr 0x0000ffff58281948)    ;; code: STUB, DirectCEntryStub, minor: 0
0xffff5828176c   364  mov x10, x22
0xffff58281770   368  blr lr
0xffff58281774   372  ldr x10, pc+476 (addr 0x0000ffff58281950)    ;; external reference (Isolate::context_address)
0xffff58281778   376  ldr cp, [x10]
0xffff5828177c   380  ldr x10, pc+476 (addr 0x0000ffff58281958)    ;; external reference (Isolate::c_entry_fp_address)
0xffff58281780   384  str xzr, [x10]
0xffff58281784   388  mov jssp, fp
0xffff58281788   392  ldp fp, lr, [jssp], #16
0xffff5828178c   396  cbz w0, #+0x130 (addr 0xffff582818bc)
0xffff58281790   400  cmn w0, #0x1 (1)
0xffff58281794   404  b.eq #+0x104 (addr 0xffff58281898)
0xffff58281798   408  cmn w0, #0x2 (2)
0xffff5828179c   412  b.eq #+0x12c (addr 0xffff582818c8)
0xffff582817a0   416  ldursw x10, [x20, #83]
0xffff582817a4   420  add x10, x10, x10
0xffff582817a8   424  add x12, x10, #0x2 (2)
0xffff582817ac   428  ldr x10, [jssp]
0xffff582817b0   432  tbz w10, #0, #+0x118 (addr 0xffff582818c8)
0xffff582817b4   436  ldur x11, [x10, #-1]
0xffff582817b8   440  ldrb w11, [x11, #11]
0xffff582817bc   444  cmp x11, #0xbc (188)
0xffff582817c0   448  b.ne #+0x108 (addr 0xffff582818c8)
0xffff582817c4   452  ldur x21, [x10, #15]
0xffff582817c8   456  ldur x10, [x21, #-1]
0xffff582817cc   460  ldr x16, [x26, #224]
0xffff582817d0   464  cmp x10, x16
0xffff582817d4   468  b.ne #+0xf4 (addr 0xffff582818c8)
0xffff582817d8   472  ldursw x10, [x21, #11]
0xffff582817dc   476  add x11, x12, #0x3 (3)
0xffff582817e0   480  cmp x11, x10
0xffff582817e4   484  b.gt #+0xe4 (addr 0xffff582818c8)
0xffff582817e8   488  lsl x10, x12, #32
0xffff582817ec   492  stur x10, [x21, #15]
0xffff582817f0   496  stur x19, [x21, #23]
0xffff582817f4   500  mov x10, x19
0xffff582817f8   504  tbz w10, #0, #+0x34 (addr 0xffff5828182c)
0xffff582817fc   508  add x11, x21, #0x17 (23)
0xffff58281800   512  and x10, x10, #0xfffffffffff00000
0xffff58281804   516  ldr x10, [x10, #8]
0xffff58281808   520  tbz w10, #1, #+0x24 (addr 0xffff5828182c)
0xffff5828180c   524  and x10, x21, #0xfffffffffff00000
0xffff58281810   528  ldr x10, [x10, #8]
0xffff58281814   532  tbz w10, #2, #+0x18 (addr 0xffff5828182c)
0xffff58281818   536  sub csp, jssp, #0x8 (8)
0xffff5828181c   540  str lr, [jssp, #-8]!
0xffff58281820   544  ldr x16, pc+320 (addr 0x0000ffff58281960)    ;; code: STUB, RecordWriteStub, minor: 11605
0xffff58281824   548  blr x16
0xffff58281828   552  ldr lr, [jssp], #8
0xffff5828182c   556  stur x19, [x21, #31]
0xffff58281830   560  mov x10, x19
0xffff58281834   564  tbz w10, #0, #+0x34 (addr 0xffff58281868)
0xffff58281838   568  add x11, x21, #0x1f (31)
0xffff5828183c   572  and x10, x10, #0xfffffffffff00000
0xffff58281840   576  ldr x10, [x10, #8]
0xffff58281844   580  tbz w10, #1, #+0x24 (addr 0xffff58281868)
0xffff58281848   584  and x10, x21, #0xfffffffffff00000
0xffff5828184c   588  ldr x10, [x10, #8]
0xffff58281850   592  tbz w10, #2, #+0x18 (addr 0xffff58281868)
0xffff58281854   596  sub csp, jssp, #0x8 (8)
0xffff58281858   600  str lr, [jssp, #-8]!
0xffff5828185c   604  ldr x16, pc+268 (addr 0x0000ffff58281968)    ;; code: STUB, RecordWriteStub, minor: 11605
0xffff58281860   608  blr x16
0xffff58281864   612  ldr lr, [jssp], #8
0xffff58281868   616  ldr x14, pc+264 (addr 0x0000ffff58281970)    ;; external reference (OffsetsVector::static_offsets_vector)
0xffff5828186c   620  add x13, x21, #0x27 (39)
0xffff58281870   624  subs x12, x12, #0x2 (2)
0xffff58281874   628  b.mi #+0x18 (addr 0xffff5828188c)
0xffff58281878   632  ldr x15, [x14], #8
0xffff5828187c   636  lsl x10, x15, #32
0xffff58281880   640  and x11, x15, #0xffffffff00000000
0xffff58281884   644  stp x10, x11, [x13], #16
0xffff58281888   648  b #-0x18 (addr 0xffff58281870)
0xffff5828188c   652  ldr x0, [jssp]
0xffff58281890   656  add jssp, jssp, #0x20 (32)
0xffff58281894   660  ret
0xffff58281898   664  ldr x10, pc+224 (addr 0x0000ffff58281978)    ;; object: 0x39c04519 <the hole>
0xffff5828189c   668  ldr x11, pc+228 (addr 0x0000ffff58281980)    ;; external reference (Isolate::pending_exception_address)
0xffff582818a0   672  ldr x0, [x11]
0xffff582818a4   676  cmp x10, x0
0xffff582818a8   680  b.eq #+0x20 (addr 0xffff582818c8)
0xffff582818ac   684  movz x0, #0x4
0xffff582818b0   688  ldr x1, pc+216 (addr 0x0000ffff58281988)    ;; external reference (Runtime::RegExpExecReThrow)
0xffff582818b4   692  ldr x16, pc+220 (addr 0x0000ffff58281990)    ;; code: STUB, CEntryStub, minor: 4
0xffff582818b8   696  br x16
0xffff582818bc   700  ldr x0, pc+220 (addr 0x0000ffff58281998)    ;; object: 0x39c04211 <null>
0xffff582818c0   704  add jssp, jssp, #0x20 (32)
0xffff582818c4   708  ret
0xffff582818c8   712  movz x0, #0x4
0xffff582818cc   716  ldr x1, pc+212 (addr 0x0000ffff582819a0)    ;; external reference (Runtime::RegExpExec)
0xffff582818d0   720  ldr x16, pc+216 (addr 0x0000ffff582819a8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582818d4   724  br x16
0xffff582818d8   728  b.ne #+0x10 (addr 0xffff582818e8)
0xffff582818dc   732  ldur x19, [x19, #31]
0xffff582818e0   736  sub x19, x19, #0x17 (23)
0xffff582818e4   740  b #-0x258 (addr 0xffff5828168c)
0xffff582818e8   744  movz w16, #0x90
0xffff582818ec   748  tst w6, w16
0xffff582818f0   752  b.ne #-0x28 (addr 0xffff582818c8)
0xffff582818f4   756  ldur w5, [x19, #35]
0xffff582818f8   760  ldur x19, [x19, #23]
0xffff582818fc   764  b #-0x2a4 (addr 0xffff58281658)
0xffff58281900   768  5800057f       constant pool begin (num_const = 43)    ;; constant pool
0xffff58281904   772  d63f03e0       constant
0xffff58281908   776  16ea2988       constant
0xffff5828190c   780  00000000       constant
0xffff58281910   784  582815a1       constant
0xffff58281914   788  0000ffff       constant
0xffff58281918   792  16e79df8       constant
0xffff5828191c   796  00000000       constant
0xffff58281920   800  16e79d90       constant
0xffff58281924   804  00000000       constant
0xffff58281928   808  16e782d0       constant
0xffff5828192c   812  00000000       constant
0xffff58281930   816  16e7ce28       constant
0xffff58281934   820  00000000       constant
0xffff58281938   824  16ea2980       constant
0xffff5828193c   828  00000000       constant
0xffff58281940   832  16ea2988       constant
0xffff58281944   836  00000000       constant
0xffff58281948   840  58268200       constant
0xffff5828194c   844  0000ffff       constant
0xffff58281950   848  16e79d90       constant
0xffff58281954   852  00000000       constant
0xffff58281958   856  16e79df8       constant
0xffff5828195c   860  00000000       constant
0xffff58281960   864  58280f80       constant
0xffff58281964   868  0000ffff       constant
0xffff58281968   872  58280f80       constant
0xffff5828196c   876  0000ffff       constant
0xffff58281970   880  16e7ce28       constant
0xffff58281974   884  00000000       constant
0xffff58281978   888  39c04519       constant
0xffff5828197c   892  00000000       constant
0xffff58281980   896  16e79da0       constant
0xffff58281984   900  00000000       constant
0xffff58281988   904  00e59010       constant
0xffff5828198c   908  00000000       constant
0xffff58281990   912  58206060       constant
0xffff58281994   916  0000ffff       constant
0xffff58281998   920  39c04211       constant
0xffff5828199c   924  00000000       constant
0xffff582819a0   928  00e57200       constant
0xffff582819a4   932  00000000       constant
0xffff582819a8   936  58206060       constant
0xffff582819ac   940  0000ffff       constant


RelocInfo (size = 44)
0xffff58281600  external reference (RegExpStack::memory_size())  (0x16ea2988)
0xffff582816d8  embedded object  (0xffff582815a1 <Code: STUB>)
0xffff582816e4  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff582816ec  external reference (Isolate::context_address)  (0x16e79d90)
0xffff58281708  external reference (isolate)  (0x16e782d0)
0xffff58281744  external reference (OffsetsVector::static_offsets_vector)  (0x16e7ce28)
0xffff5828174c  external reference (RegExpStack::memory_address())  (0x16ea2980)
0xffff58281754  external reference (RegExpStack::memory_size())  (0x16ea2988)
0xffff58281768  code target (STUB)  (0xffff58268200)
0xffff58281774  external reference (Isolate::context_address)  (0x16e79d90)
0xffff5828177c  external reference (Isolate::c_entry_fp_address)  (0x16e79df8)
0xffff58281820  code target (STUB)  (0xffff58280f80)
0xffff5828185c  code target (STUB)  (0xffff58280f80)
0xffff58281868  external reference (OffsetsVector::static_offsets_vector)  (0x16e7ce28)
0xffff58281898  embedded object  (0x39c04519 <the hole>)
0xffff5828189c  external reference (Isolate::pending_exception_address)  (0x16e79da0)
0xffff582818b0  external reference (Runtime::RegExpExecReThrow)  (0xe59010)
0xffff582818b4  code target (STUB)  (0xffff58206060)
0xffff582818bc  embedded object  (0x39c04211 <null>)
0xffff582818cc  external reference (Runtime::RegExpExec)  (0xe57200)
0xffff582818d0  code target (STUB)  (0xffff58206060)
0xffff58281900  constant pool (size 176)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff58281a20     0  adr xzr, #+0x40 (addr 0xffff58281a60)
0xffff58281a24     4  adr xzr, #+0x360 (addr 0xffff58281d84)
0xffff58281a28     8  ldr x16, pc+1736 (addr 0x0000ffff582820f0)    ;; external reference (store_buffer_top)
0xffff58281a2c    12  ldr x3, [x16]
0xffff58281a30    16  str x4, [x3], #8
0xffff58281a34    20  str x3, [x16]
0xffff58281a38    24  tst x3, #0x1ffff
0xffff58281a3c    28  b.eq #+0x8 (addr 0xffff58281a44)
0xffff58281a40    32  ret
0xffff58281a44    36  sub csp, jssp, #0x8 (8)
0xffff58281a48    40  str lr, [jssp, #-8]!
0xffff58281a4c    44  ldr x17, pc+1708 (addr 0x0000ffff582820f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58281a50    48  blr x17
0xffff58281a54    52  ldr lr, [jssp], #8
0xffff58281a58    56  ret
0xffff58281a5c    60  ret
0xffff58281a60    64  sub csp, jssp, #0x10 (16)
0xffff58281a64    68  stp x1, x0, [jssp, #-16]!
0xffff58281a68    72  ldr x3, [x4]
0xffff58281a6c    76  and x16, x3, #0xfffffffffff00000
0xffff58281a70    80  ldr x16, [x16, #8]
0xffff58281a74    84  tst x16, #0x18
0xffff58281a78    88  b.eq #+0x1d8 (addr 0xffff58281c50)
0xffff58281a7c    92  and x16, x6, #0xfffffffffff00000
0xffff58281a80    96  ldr x16, [x16, #8]
0xffff58281a84   100  tst x16, #0x18
0xffff58281a88   104  b.ne #+0x1c8 (addr 0xffff58281c50)
0xffff58281a8c   108  and x3, x6, #0xfffffffffff00000
0xffff58281a90   112  ldr x0, [x3, #104]
0xffff58281a94   116  subs x0, x0, #0x1 (1)
0xffff58281a98   120  str x0, [x3, #104]
0xffff58281a9c   124  b.mi #+0xc4 (addr 0xffff58281b60)
0xffff58281aa0   128  ubfx x16, x6, #8, #12
0xffff58281aa4   132  and x3, x6, #0xfffffffffff00000
0xffff58281aa8   136  add x3, x3, x16, lsl #2
0xffff58281aac   140  ubfx x0, x6, #3, #5
0xffff58281ab0   144  ldr x3, [x3, #360]
0xffff58281ab4   148  lsr x3, x3, x0
0xffff58281ab8   152  tbz w3, #0, #+0x8 (addr 0xffff58281ac0)
0xffff58281abc   156  tbnz w3, #1, #+0x3c (addr 0xffff58281af8)
0xffff58281ac0   160  ldp x1, x0, [jssp], #16
0xffff58281ac4   164  ldr x16, pc+1596 (addr 0x0000ffff58282100)    ;; external reference (store_buffer_top)
0xffff58281ac8   168  ldr x3, [x16]
0xffff58281acc   172  str x4, [x3], #8
0xffff58281ad0   176  str x3, [x16]
0xffff58281ad4   180  tst x3, #0x1ffff
0xffff58281ad8   184  b.eq #+0x8 (addr 0xffff58281ae0)
0xffff58281adc   188  ret
0xffff58281ae0   192  sub csp, jssp, #0x8 (8)
0xffff58281ae4   196  str lr, [jssp, #-8]!
0xffff58281ae8   200  ldr x17, pc+1568 (addr 0x0000ffff58282108)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58281aec   204  blr x17
0xffff58281af0   208  ldr lr, [jssp], #8
0xffff58281af4   212  ret
0xffff58281af8   216  ldr x3, [x4]
0xffff58281afc   220  sub csp, jssp, #0x10 (16)
0xffff58281b00   224  stp x6, x4, [jssp, #-16]!
0xffff58281b04   228  ubfx x16, x3, #8, #12
0xffff58281b08   232  and x0, x3, #0xfffffffffff00000
0xffff58281b0c   236  add x0, x0, x16, lsl #2
0xffff58281b10   240  ubfx x6, x3, #3, #5
0xffff58281b14   244  ldr x4, [x0, #360]
0xffff58281b18   248  lsr x4, x4, x6
0xffff58281b1c   252  tbz w4, #0, #+0x40 (addr 0xffff58281b5c)
0xffff58281b20   256  ldp x6, x4, [jssp], #16
0xffff58281b24   260  ldp x1, x0, [jssp], #16
0xffff58281b28   264  ldr x16, pc+1512 (addr 0x0000ffff58282110)    ;; external reference (store_buffer_top)
0xffff58281b2c   268  ldr x3, [x16]
0xffff58281b30   272  str x4, [x3], #8
0xffff58281b34   276  str x3, [x16]
0xffff58281b38   280  tst x3, #0x1ffff
0xffff58281b3c   284  b.eq #+0x8 (addr 0xffff58281b44)
0xffff58281b40   288  ret
0xffff58281b44   292  sub csp, jssp, #0x8 (8)
0xffff58281b48   296  str lr, [jssp, #-8]!
0xffff58281b4c   300  ldr x17, pc+1484 (addr 0x0000ffff58282118)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58281b50   304  blr x17
0xffff58281b54   308  ldr lr, [jssp], #8
0xffff58281b58   312  ret
0xffff58281b5c   316  ldp x6, x4, [jssp], #16
0xffff58281b60   320  sub csp, jssp, #0x78 (120)
0xffff58281b64   324  stp x14, x15, [jssp, #-32]!
0xffff58281b68   328  stp x18, lr, [jssp, #16]
0xffff58281b6c   332  stp x10, x11, [jssp, #-32]!
0xffff58281b70   336  stp x12, x13, [jssp, #16]
0xffff58281b74   340  stp x6, x7, [jssp, #-32]!
0xffff58281b78   344  stp x8, x9, [jssp, #16]
0xffff58281b7c   348  stp x2, x4, [jssp, #-24]!
0xffff58281b80   352  str x5, [jssp, #16]
0xffff58281b84   356  sub csp, jssp, #0xb0 (176)
0xffff58281b88   360  stp d26, d27, [jssp, #-32]!
0xffff58281b8c   364  stp d28, d29, [jssp, #16]
0xffff58281b90   368  stp d22, d23, [jssp, #-32]!
0xffff58281b94   372  stp d24, d25, [jssp, #16]
0xffff58281b98   376  stp d18, d19, [jssp, #-32]!
0xffff58281b9c   380  stp d20, d21, [jssp, #16]
0xffff58281ba0   384  stp d6, d7, [jssp, #-32]!
0xffff58281ba4   388  stp d16, d17, [jssp, #16]
0xffff58281ba8   392  stp d2, d3, [jssp, #-32]!
0xffff58281bac   396  stp d4, d5, [jssp, #16]
0xffff58281bb0   400  stp d0, d1, [jssp, #-16]!
0xffff58281bb4   404  mov x0, x6
0xffff58281bb8   408  mov x1, x4
0xffff58281bbc   412  ldr x2, pc+1380 (addr 0x0000ffff58282120)    ;; external reference (isolate)
0xffff58281bc0   416  ldr x16, pc+1384 (addr 0x0000ffff58282128)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58281bc4   420  and csp, jssp, #0xfffffffffffffff0
0xffff58281bc8   424  blr x16
0xffff58281bcc   428  ldp d2, d3, [jssp, #16]
0xffff58281bd0   432  ldp d0, d1, [jssp], #32
0xffff58281bd4   436  ldp d6, d7, [jssp, #16]
0xffff58281bd8   440  ldp d4, d5, [jssp], #32
0xffff58281bdc   444  ldp d18, d19, [jssp, #16]
0xffff58281be0   448  ldp d16, d17, [jssp], #32
0xffff58281be4   452  ldp d22, d23, [jssp, #16]
0xffff58281be8   456  ldp d20, d21, [jssp], #32
0xffff58281bec   460  ldp d26, d27, [jssp, #16]
0xffff58281bf0   464  ldp d24, d25, [jssp], #32
0xffff58281bf4   468  ldp d28, d29, [jssp], #16
0xffff58281bf8   472  ldp x5, x6, [jssp, #16]
0xffff58281bfc   476  ldp x2, x4, [jssp], #32
0xffff58281c00   480  ldp x9, x10, [jssp, #16]
0xffff58281c04   484  ldp x7, x8, [jssp], #32
0xffff58281c08   488  ldp x13, x14, [jssp, #16]
0xffff58281c0c   492  ldp x11, x12, [jssp], #32
0xffff58281c10   496  ldr lr, [jssp, #16]
0xffff58281c14   500  ldp x15, x18, [jssp], #24
0xffff58281c18   504  ldp x1, x0, [jssp], #16
0xffff58281c1c   508  ldr x16, pc+1300 (addr 0x0000ffff58282130)    ;; external reference (store_buffer_top)
0xffff58281c20   512  ldr x3, [x16]
0xffff58281c24   516  str x4, [x3], #8
0xffff58281c28   520  str x3, [x16]
0xffff58281c2c   524  tst x3, #0x1ffff
0xffff58281c30   528  b.eq #+0x8 (addr 0xffff58281c38)
0xffff58281c34   532  ret
0xffff58281c38   536  sub csp, jssp, #0x8 (8)
0xffff58281c3c   540  str lr, [jssp, #-8]!
0xffff58281c40   544  ldr x17, pc+1272 (addr 0x0000ffff58282138)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58281c44   548  blr x17
0xffff58281c48   552  ldr lr, [jssp], #8
0xffff58281c4c   556  ret
0xffff58281c50   560  and x3, x6, #0xfffffffffff00000
0xffff58281c54   564  ldr x0, [x3, #104]
0xffff58281c58   568  subs x0, x0, #0x1 (1)
0xffff58281c5c   572  str x0, [x3, #104]
0xffff58281c60   576  b.mi #+0x64 (addr 0xffff58281cc4)
0xffff58281c64   580  ubfx x16, x6, #8, #12
0xffff58281c68   584  and x3, x6, #0xfffffffffff00000
0xffff58281c6c   588  add x3, x3, x16, lsl #2
0xffff58281c70   592  ubfx x0, x6, #3, #5
0xffff58281c74   596  ldr x3, [x3, #360]
0xffff58281c78   600  lsr x3, x3, x0
0xffff58281c7c   604  tbz w3, #0, #+0x8 (addr 0xffff58281c84)
0xffff58281c80   608  tbnz w3, #1, #+0xc (addr 0xffff58281c8c)
0xffff58281c84   612  ldp x1, x0, [jssp], #16
0xffff58281c88   616  ret
0xffff58281c8c   620  ldr x3, [x4]
0xffff58281c90   624  sub csp, jssp, #0x10 (16)
0xffff58281c94   628  stp x6, x4, [jssp, #-16]!
0xffff58281c98   632  ubfx x16, x3, #8, #12
0xffff58281c9c   636  and x0, x3, #0xfffffffffff00000
0xffff58281ca0   640  add x0, x0, x16, lsl #2
0xffff58281ca4   644  ubfx x6, x3, #3, #5
0xffff58281ca8   648  ldr x4, [x0, #360]
0xffff58281cac   652  lsr x4, x4, x6
0xffff58281cb0   656  tbz w4, #0, #+0x10 (addr 0xffff58281cc0)
0xffff58281cb4   660  ldp x6, x4, [jssp], #16
0xffff58281cb8   664  ldp x1, x0, [jssp], #16
0xffff58281cbc   668  ret
0xffff58281cc0   672  ldp x6, x4, [jssp], #16
0xffff58281cc4   676  sub csp, jssp, #0x78 (120)
0xffff58281cc8   680  stp x14, x15, [jssp, #-32]!
0xffff58281ccc   684  stp x18, lr, [jssp, #16]
0xffff58281cd0   688  stp x10, x11, [jssp, #-32]!
0xffff58281cd4   692  stp x12, x13, [jssp, #16]
0xffff58281cd8   696  stp x6, x7, [jssp, #-32]!
0xffff58281cdc   700  stp x8, x9, [jssp, #16]
0xffff58281ce0   704  stp x2, x4, [jssp, #-24]!
0xffff58281ce4   708  str x5, [jssp, #16]
0xffff58281ce8   712  sub csp, jssp, #0xb0 (176)
0xffff58281cec   716  stp d26, d27, [jssp, #-32]!
0xffff58281cf0   720  stp d28, d29, [jssp, #16]
0xffff58281cf4   724  stp d22, d23, [jssp, #-32]!
0xffff58281cf8   728  stp d24, d25, [jssp, #16]
0xffff58281cfc   732  stp d18, d19, [jssp, #-32]!
0xffff58281d00   736  stp d20, d21, [jssp, #16]
0xffff58281d04   740  stp d6, d7, [jssp, #-32]!
0xffff58281d08   744  stp d16, d17, [jssp, #16]
0xffff58281d0c   748  stp d2, d3, [jssp, #-32]!
0xffff58281d10   752  stp d4, d5, [jssp, #16]
0xffff58281d14   756  stp d0, d1, [jssp, #-16]!
0xffff58281d18   760  mov x0, x6
0xffff58281d1c   764  mov x1, x4
0xffff58281d20   768  ldr x2, pc+1056 (addr 0x0000ffff58282140)    ;; external reference (isolate)
0xffff58281d24   772  ldr x16, pc+1060 (addr 0x0000ffff58282148)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58281d28   776  and csp, jssp, #0xfffffffffffffff0
0xffff58281d2c   780  blr x16
0xffff58281d30   784  ldp d2, d3, [jssp, #16]
0xffff58281d34   788  ldp d0, d1, [jssp], #32
0xffff58281d38   792  ldp d6, d7, [jssp, #16]
0xffff58281d3c   796  ldp d4, d5, [jssp], #32
0xffff58281d40   800  ldp d18, d19, [jssp, #16]
0xffff58281d44   804  ldp d16, d17, [jssp], #32
0xffff58281d48   808  ldp d22, d23, [jssp, #16]
0xffff58281d4c   812  ldp d20, d21, [jssp], #32
0xffff58281d50   816  ldp d26, d27, [jssp, #16]
0xffff58281d54   820  ldp d24, d25, [jssp], #32
0xffff58281d58   824  ldp d28, d29, [jssp], #16
0xffff58281d5c   828  ldp x5, x6, [jssp, #16]
0xffff58281d60   832  ldp x2, x4, [jssp], #32
0xffff58281d64   836  ldp x9, x10, [jssp, #16]
0xffff58281d68   840  ldp x7, x8, [jssp], #32
0xffff58281d6c   844  ldp x13, x14, [jssp, #16]
0xffff58281d70   848  ldp x11, x12, [jssp], #32
0xffff58281d74   852  ldr lr, [jssp, #16]
0xffff58281d78   856  ldp x15, x18, [jssp], #24
0xffff58281d7c   860  ldp x1, x0, [jssp], #16
0xffff58281d80   864  ret
0xffff58281d84   868  sub csp, jssp, #0x10 (16)
0xffff58281d88   872  stp x1, x0, [jssp, #-16]!
0xffff58281d8c   876  ldr x3, [x4]
0xffff58281d90   880  and x16, x3, #0xfffffffffff00000
0xffff58281d94   884  ldr x16, [x16, #8]
0xffff58281d98   888  tst x16, #0x18
0xffff58281d9c   892  b.eq #+0x1f8 (addr 0xffff58281f94)
0xffff58281da0   896  and x16, x6, #0xfffffffffff00000
0xffff58281da4   900  ldr x16, [x16, #8]
0xffff58281da8   904  tst x16, #0x18
0xffff58281dac   908  b.ne #+0x1e8 (addr 0xffff58281f94)
0xffff58281db0   912  and x3, x6, #0xfffffffffff00000
0xffff58281db4   916  ldr x0, [x3, #104]
0xffff58281db8   920  subs x0, x0, #0x1 (1)
0xffff58281dbc   924  str x0, [x3, #104]
0xffff58281dc0   928  b.mi #+0xe4 (addr 0xffff58281ea4)
0xffff58281dc4   932  ubfx x16, x6, #8, #12
0xffff58281dc8   936  and x3, x6, #0xfffffffffff00000
0xffff58281dcc   940  add x3, x3, x16, lsl #2
0xffff58281dd0   944  ubfx x0, x6, #3, #5
0xffff58281dd4   948  ldr x3, [x3, #360]
0xffff58281dd8   952  lsr x3, x3, x0
0xffff58281ddc   956  tbz w3, #0, #+0x8 (addr 0xffff58281de4)
0xffff58281de0   960  tbnz w3, #1, #+0x3c (addr 0xffff58281e1c)
0xffff58281de4   964  ldp x1, x0, [jssp], #16
0xffff58281de8   968  ldr x16, pc+872 (addr 0x0000ffff58282150)    ;; external reference (store_buffer_top)
0xffff58281dec   972  ldr x3, [x16]
0xffff58281df0   976  str x4, [x3], #8
0xffff58281df4   980  str x3, [x16]
0xffff58281df8   984  tst x3, #0x1ffff
0xffff58281dfc   988  b.eq #+0x8 (addr 0xffff58281e04)
0xffff58281e00   992  ret
0xffff58281e04   996  sub csp, jssp, #0x8 (8)
0xffff58281e08  1000  str lr, [jssp, #-8]!
0xffff58281e0c  1004  ldr x17, pc+844 (addr 0x0000ffff58282158)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58281e10  1008  blr x17
0xffff58281e14  1012  ldr lr, [jssp], #8
0xffff58281e18  1016  ret
0xffff58281e1c  1020  ldr x3, [x4]
0xffff58281e20  1024  and x0, x3, #0xfffffffffff00000
0xffff58281e24  1028  ldr x0, [x0, #8]
0xffff58281e28  1032  tbz w0, #6, #+0x18 (addr 0xffff58281e40)
0xffff58281e2c  1036  and x0, x6, #0xfffffffffff00000
0xffff58281e30  1040  ldr x0, [x0, #8]
0xffff58281e34  1044  movz x16, #0x58
0xffff58281e38  1048  tst x0, x16
0xffff58281e3c  1052  b.eq #+0x68 (addr 0xffff58281ea4)
0xffff58281e40  1056  sub csp, jssp, #0x10 (16)
0xffff58281e44  1060  stp x6, x4, [jssp, #-16]!
0xffff58281e48  1064  ubfx x16, x3, #8, #12
0xffff58281e4c  1068  and x0, x3, #0xfffffffffff00000
0xffff58281e50  1072  add x0, x0, x16, lsl #2
0xffff58281e54  1076  ubfx x6, x3, #3, #5
0xffff58281e58  1080  ldr x4, [x0, #360]
0xffff58281e5c  1084  lsr x4, x4, x6
0xffff58281e60  1088  tbz w4, #0, #+0x40 (addr 0xffff58281ea0)
0xffff58281e64  1092  ldp x6, x4, [jssp], #16
0xffff58281e68  1096  ldp x1, x0, [jssp], #16
0xffff58281e6c  1100  ldr x16, pc+756 (addr 0x0000ffff58282160)    ;; external reference (store_buffer_top)
0xffff58281e70  1104  ldr x3, [x16]
0xffff58281e74  1108  str x4, [x3], #8
0xffff58281e78  1112  str x3, [x16]
0xffff58281e7c  1116  tst x3, #0x1ffff
0xffff58281e80  1120  b.eq #+0x8 (addr 0xffff58281e88)
0xffff58281e84  1124  ret
0xffff58281e88  1128  sub csp, jssp, #0x8 (8)
0xffff58281e8c  1132  str lr, [jssp, #-8]!
0xffff58281e90  1136  ldr x17, pc+728 (addr 0x0000ffff58282168)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58281e94  1140  blr x17
0xffff58281e98  1144  ldr lr, [jssp], #8
0xffff58281e9c  1148  ret
0xffff58281ea0  1152  ldp x6, x4, [jssp], #16
0xffff58281ea4  1156  sub csp, jssp, #0x78 (120)
0xffff58281ea8  1160  stp x14, x15, [jssp, #-32]!
0xffff58281eac  1164  stp x18, lr, [jssp, #16]
0xffff58281eb0  1168  stp x10, x11, [jssp, #-32]!
0xffff58281eb4  1172  stp x12, x13, [jssp, #16]
0xffff58281eb8  1176  stp x6, x7, [jssp, #-32]!
0xffff58281ebc  1180  stp x8, x9, [jssp, #16]
0xffff58281ec0  1184  stp x2, x4, [jssp, #-24]!
0xffff58281ec4  1188  str x5, [jssp, #16]
0xffff58281ec8  1192  sub csp, jssp, #0xb0 (176)
0xffff58281ecc  1196  stp d26, d27, [jssp, #-32]!
0xffff58281ed0  1200  stp d28, d29, [jssp, #16]
0xffff58281ed4  1204  stp d22, d23, [jssp, #-32]!
0xffff58281ed8  1208  stp d24, d25, [jssp, #16]
0xffff58281edc  1212  stp d18, d19, [jssp, #-32]!
0xffff58281ee0  1216  stp d20, d21, [jssp, #16]
0xffff58281ee4  1220  stp d6, d7, [jssp, #-32]!
0xffff58281ee8  1224  stp d16, d17, [jssp, #16]
0xffff58281eec  1228  stp d2, d3, [jssp, #-32]!
0xffff58281ef0  1232  stp d4, d5, [jssp, #16]
0xffff58281ef4  1236  stp d0, d1, [jssp, #-16]!
0xffff58281ef8  1240  mov x0, x6
0xffff58281efc  1244  mov x1, x4
0xffff58281f00  1248  ldr x2, pc+624 (addr 0x0000ffff58282170)    ;; external reference (isolate)
0xffff58281f04  1252  ldr x16, pc+628 (addr 0x0000ffff58282178)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff58281f08  1256  and csp, jssp, #0xfffffffffffffff0
0xffff58281f0c  1260  blr x16
0xffff58281f10  1264  ldp d2, d3, [jssp, #16]
0xffff58281f14  1268  ldp d0, d1, [jssp], #32
0xffff58281f18  1272  ldp d6, d7, [jssp, #16]
0xffff58281f1c  1276  ldp d4, d5, [jssp], #32
0xffff58281f20  1280  ldp d18, d19, [jssp, #16]
0xffff58281f24  1284  ldp d16, d17, [jssp], #32
0xffff58281f28  1288  ldp d22, d23, [jssp, #16]
0xffff58281f2c  1292  ldp d20, d21, [jssp], #32
0xffff58281f30  1296  ldp d26, d27, [jssp, #16]
0xffff58281f34  1300  ldp d24, d25, [jssp], #32
0xffff58281f38  1304  ldp d28, d29, [jssp], #16
0xffff58281f3c  1308  ldp x5, x6, [jssp, #16]
0xffff58281f40  1312  ldp x2, x4, [jssp], #32
0xffff58281f44  1316  ldp x9, x10, [jssp, #16]
0xffff58281f48  1320  ldp x7, x8, [jssp], #32
0xffff58281f4c  1324  ldp x13, x14, [jssp, #16]
0xffff58281f50  1328  ldp x11, x12, [jssp], #32
0xffff58281f54  1332  ldr lr, [jssp, #16]
0xffff58281f58  1336  ldp x15, x18, [jssp], #24
0xffff58281f5c  1340  ldp x1, x0, [jssp], #16
0xffff58281f60  1344  ldr x16, pc+544 (addr 0x0000ffff58282180)    ;; external reference (store_buffer_top)
0xffff58281f64  1348  ldr x3, [x16]
0xffff58281f68  1352  str x4, [x3], #8
0xffff58281f6c  1356  str x3, [x16]
0xffff58281f70  1360  tst x3, #0x1ffff
0xffff58281f74  1364  b.eq #+0x8 (addr 0xffff58281f7c)
0xffff58281f78  1368  ret
0xffff58281f7c  1372  sub csp, jssp, #0x8 (8)
0xffff58281f80  1376  str lr, [jssp, #-8]!
0xffff58281f84  1380  ldr x17, pc+516 (addr 0x0000ffff58282188)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff58281f88  1384  blr x17
0xffff58281f8c  1388  ldr lr, [jssp], #8
0xffff58281f90  1392  ret
0xffff58281f94  1396  and x3, x6, #0xfffffffffff00000
0xffff58281f98  1400  ldr x0, [x3, #104]
0xffff58281f9c  1404  subs x0, x0, #0x1 (1)
0xffff58281fa0  1408  str x0, [x3, #104]
0xffff58281fa4  1412  b.mi #+0x84 (addr 0xffff58282028)
0xffff58281fa8  1416  ubfx x16, x6, #8, #12
0xffff58281fac  1420  and x3, x6, #0xfffffffffff00000
0xffff58281fb0  1424  add x3, x3, x16, lsl #2
0xffff58281fb4  1428  ubfx x0, x6, #3, #5
0xffff58281fb8  1432  ldr x3, [x3, #360]
0xffff58281fbc  1436  lsr x3, x3, x0
0xffff58281fc0  1440  tbz w3, #0, #+0x8 (addr 0xffff58281fc8)
0xffff58281fc4  1444  tbnz w3, #1, #+0xc (addr 0xffff58281fd0)
0xffff58281fc8  1448  ldp x1, x0, [jssp], #16
0xffff58281fcc  1452  ret
0xffff58281fd0  1456  ldr x3, [x4]
0xffff58281fd4  1460  and x0, x3, #0xfffffffffff00000
0xffff58281fd8  1464  ldr x0, [x0, #8]
0xffff58281fdc  1468  tbz w0, #6, #+0x18 (addr 0xffff58281ff4)
0xffff58281fe0  1472  and x0, x6, #0xfffffffffff00000
0xffff58281fe4  1476  ldr x0, [x0, #8]
0xffff58281fe8  1480  movz x16, #0x58
0xffff58281fec  1484  tst x0, x16
0xffff58281ff0  1488  b.eq #+0x38 (addr 0xffff58282028)
0xffff58281ff4  1492  sub csp, jssp, #0x10 (16)
0xffff58281ff8  1496  stp x6, x4, [jssp, #-16]!
0xffff58281ffc  1500  ubfx x16, x3, #8, #12
0xffff58282000  1504  and x0, x3, #0xfffffffffff00000
0xffff58282004  1508  add x0, x0, x16, lsl #2
0xffff58282008  1512  ubfx x6, x3, #3, #5
0xffff5828200c  1516  ldr x4, [x0, #360]
0xffff58282010  1520  lsr x4, x4, x6
0xffff58282014  1524  tbz w4, #0, #+0x10 (addr 0xffff58282024)
0xffff58282018  1528  ldp x6, x4, [jssp], #16
0xffff5828201c  1532  ldp x1, x0, [jssp], #16
0xffff58282020  1536  ret
0xffff58282024  1540  ldp x6, x4, [jssp], #16
0xffff58282028  1544  sub csp, jssp, #0x78 (120)
0xffff5828202c  1548  stp x14, x15, [jssp, #-32]!
0xffff58282030  1552  stp x18, lr, [jssp, #16]
0xffff58282034  1556  stp x10, x11, [jssp, #-32]!
0xffff58282038  1560  stp x12, x13, [jssp, #16]
0xffff5828203c  1564  stp x6, x7, [jssp, #-32]!
0xffff58282040  1568  stp x8, x9, [jssp, #16]
0xffff58282044  1572  stp x2, x4, [jssp, #-24]!
0xffff58282048  1576  str x5, [jssp, #16]
0xffff5828204c  1580  sub csp, jssp, #0xb0 (176)
0xffff58282050  1584  stp d26, d27, [jssp, #-32]!
0xffff58282054  1588  stp d28, d29, [jssp, #16]
0xffff58282058  1592  stp d22, d23, [jssp, #-32]!
0xffff5828205c  1596  stp d24, d25, [jssp, #16]
0xffff58282060  1600  stp d18, d19, [jssp, #-32]!
0xffff58282064  1604  stp d20, d21, [jssp, #16]
0xffff58282068  1608  stp d6, d7, [jssp, #-32]!
0xffff5828206c  1612  stp d16, d17, [jssp, #16]
0xffff58282070  1616  stp d2, d3, [jssp, #-32]!
0xffff58282074  1620  stp d4, d5, [jssp, #16]
0xffff58282078  1624  stp d0, d1, [jssp, #-16]!
0xffff5828207c  1628  mov x0, x6
0xffff58282080  1632  mov x1, x4
0xffff58282084  1636  ldr x2, pc+268 (addr 0x0000ffff58282190)    ;; external reference (isolate)
0xffff58282088  1640  ldr x16, pc+272 (addr 0x0000ffff58282198)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff5828208c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff58282090  1648  blr x16
0xffff58282094  1652  ldp d2, d3, [jssp, #16]
0xffff58282098  1656  ldp d0, d1, [jssp], #32
0xffff5828209c  1660  ldp d6, d7, [jssp, #16]
0xffff582820a0  1664  ldp d4, d5, [jssp], #32
0xffff582820a4  1668  ldp d18, d19, [jssp, #16]
0xffff582820a8  1672  ldp d16, d17, [jssp], #32
0xffff582820ac  1676  ldp d22, d23, [jssp, #16]
0xffff582820b0  1680  ldp d20, d21, [jssp], #32
0xffff582820b4  1684  ldp d26, d27, [jssp, #16]
0xffff582820b8  1688  ldp d24, d25, [jssp], #32
0xffff582820bc  1692  ldp d28, d29, [jssp], #16
0xffff582820c0  1696  ldp x5, x6, [jssp, #16]
0xffff582820c4  1700  ldp x2, x4, [jssp], #32
0xffff582820c8  1704  ldp x9, x10, [jssp, #16]
0xffff582820cc  1708  ldp x7, x8, [jssp], #32
0xffff582820d0  1712  ldp x13, x14, [jssp, #16]
0xffff582820d4  1716  ldp x11, x12, [jssp], #32
0xffff582820d8  1720  ldr lr, [jssp, #16]
0xffff582820dc  1724  ldp x15, x18, [jssp], #24
0xffff582820e0  1728  ldp x1, x0, [jssp], #16
0xffff582820e4  1732  ret
0xffff582820e8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff582820ec  1740  d63f03e0       constant
0xffff582820f0  1744  16e798c0       constant
0xffff582820f4  1748  00000000       constant
0xffff582820f8  1752  582065a0       constant
0xffff582820fc  1756  0000ffff       constant
0xffff58282100  1760  16e798c0       constant
0xffff58282104  1764  00000000       constant
0xffff58282108  1768  582065a0       constant
0xffff5828210c  1772  0000ffff       constant
0xffff58282110  1776  16e798c0       constant
0xffff58282114  1780  00000000       constant
0xffff58282118  1784  582065a0       constant
0xffff5828211c  1788  0000ffff       constant
0xffff58282120  1792  16e782d0       constant
0xffff58282124  1796  00000000       constant
0xffff58282128  1800  00c2d958       constant
0xffff5828212c  1804  00000000       constant
0xffff58282130  1808  16e798c0       constant
0xffff58282134  1812  00000000       constant
0xffff58282138  1816  582065a0       constant
0xffff5828213c  1820  0000ffff       constant
0xffff58282140  1824  16e782d0       constant
0xffff58282144  1828  00000000       constant
0xffff58282148  1832  00c2d958       constant
0xffff5828214c  1836  00000000       constant
0xffff58282150  1840  16e798c0       constant
0xffff58282154  1844  00000000       constant
0xffff58282158  1848  582065a0       constant
0xffff5828215c  1852  0000ffff       constant
0xffff58282160  1856  16e798c0       constant
0xffff58282164  1860  00000000       constant
0xffff58282168  1864  582065a0       constant
0xffff5828216c  1868  0000ffff       constant
0xffff58282170  1872  16e782d0       constant
0xffff58282174  1876  00000000       constant
0xffff58282178  1880  00c2d958       constant
0xffff5828217c  1884  00000000       constant
0xffff58282180  1888  16e798c0       constant
0xffff58282184  1892  00000000       constant
0xffff58282188  1896  582065a0       constant
0xffff5828218c  1900  0000ffff       constant
0xffff58282190  1904  16e782d0       constant
0xffff58282194  1908  00000000       constant
0xffff58282198  1912  00c2d958       constant
0xffff5828219c  1916  00000000       constant


RelocInfo (size = 65)
0xffff58281a28  external reference (store_buffer_top)  (0x16e798c0)
0xffff58281a4c  code target (STUB)  (0xffff582065a0)
0xffff58281ac4  external reference (store_buffer_top)  (0x16e798c0)
0xffff58281ae8  code target (STUB)  (0xffff582065a0)
0xffff58281b28  external reference (store_buffer_top)  (0x16e798c0)
0xffff58281b4c  code target (STUB)  (0xffff582065a0)
0xffff58281bbc  external reference (isolate)  (0x16e782d0)
0xffff58281bc0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58281c1c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58281c40  code target (STUB)  (0xffff582065a0)
0xffff58281d20  external reference (isolate)  (0x16e782d0)
0xffff58281d24  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58281de8  external reference (store_buffer_top)  (0x16e798c0)
0xffff58281e0c  code target (STUB)  (0xffff582065a0)
0xffff58281e6c  external reference (store_buffer_top)  (0x16e798c0)
0xffff58281e90  code target (STUB)  (0xffff582065a0)
0xffff58281f00  external reference (isolate)  (0x16e782d0)
0xffff58281f04  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff58281f60  external reference (store_buffer_top)  (0x16e798c0)
0xffff58281f84  code target (STUB)  (0xffff582065a0)
0xffff58282084  external reference (isolate)  (0x16e782d0)
0xffff58282088  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff582820e8  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = RegExpConstructResultStub
compiler = crankshaft
Instructions (size = 826)
0xffff58282200     0  tbnz w2, #0, #+0x100 (addr 0xffff58282300)
0xffff58282204     4  asr x4, x2, #32
0xffff58282208     8  movz w16, #0x257f
0xffff5828220c    12  cmp w4, w16, lsl #3
0xffff58282210    16  b.hs #+0x2a8 (addr 0xffff582824b8)
0xffff58282214    20  lsl w3, w4, #3
0xffff58282218    24  add w3, w3, #0x10 (16)
0xffff5828221c    28  movz x5, #0x92c0
0xffff58282220    32  movk x5, #0x16e7, lsl #16
0xffff58282224    36  ldp x6, x4, [x5]
0xffff58282228    40  adds x16, x6, #0x30 (48)
0xffff5828222c    44  ccmp x16, x4, #nzCv, lo
0xffff58282230    48  b.hi #+0x118 (addr 0xffff58282348)
0xffff58282234    52  str x16, [x5]
0xffff58282238    56  orr x6, x6, #0x1
0xffff5828223c    60  ldur x4, [cp, #39]
0xffff58282240    64  movz x16, #0x257
0xffff58282244    68  ldr x4, [x4, x16]
0xffff58282248    72  stur x4, [x6, #-1]
0xffff5828224c    76  ldr x4, pc+532 (addr 0x0000ffff58282460)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58282250    80  stur x4, [x6, #7]
0xffff58282254    84  ldr x4, pc+532 (addr 0x0000ffff58282468)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58282258    88  stur x4, [x6, #15]
0xffff5828225c    92  stur x2, [x6, #23]
0xffff58282260    96  stur x1, [x6, #31]
0xffff58282264   100  stur x0, [x6, #39]
0xffff58282268   104  sxtw x3, w3
0xffff5828226c   108  movz x4, #0x92c0
0xffff58282270   112  movk x4, #0x16e7, lsl #16
0xffff58282274   116  ldp x7, x16, [x4]
0xffff58282278   120  adds x5, x7, x3
0xffff5828227c   124  ccmp x5, x16, #nzCv, lo
0xffff58282280   128  b.hi #+0x12c (addr 0xffff582823ac)
0xffff58282284   132  str x5, [x4]
0xffff58282288   136  orr x7, x7, #0x1
0xffff5828228c   140  ldr x3, pc+484 (addr 0x0000ffff58282470)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58282290   144  stur x3, [x7, #-1]
0xffff58282294   148  mov x3, x2
0xffff58282298   152  tbnz w3, #0, #+0x230 (addr 0xffff582824c8)
0xffff5828229c   156  stur x3, [x7, #7]
0xffff582822a0   160  mov x3, x7
0xffff582822a4   164  stur x3, [x6, #15]
0xffff582822a8   168  add x4, x6, #0xf (15)
0xffff582822ac   172  and x3, x6, #0xfffffffffff00000
0xffff582822b0   176  ldr x3, [x3, #8]
0xffff582822b4   180  tbz w3, #2, #+0x18 (addr 0xffff582822cc)
0xffff582822b8   184  sub csp, jssp, #0x8 (8)
0xffff582822bc   188  str lr, [jssp, #-8]!
0xffff582822c0   192  ldr x16, pc+440 (addr 0x0000ffff58282478)    ;; code: STUB, RecordWriteStub, minor: 69734
0xffff582822c4   196  blr x16
0xffff582822c8   200  ldr lr, [jssp], #8
0xffff582822cc   204  mov x3, x2
0xffff582822d0   208  tbnz w3, #0, #+0x140 (addr 0xffff58282410)
0xffff582822d4   212  asr x5, x3, #32
0xffff582822d8   216  cmp w5, #0x0 (0)
0xffff582822dc   220  b.le #+0x1c (addr 0xffff582822f8)
0xffff582822e0   224  sub w3, w5, #0x1 (1)
0xffff582822e4   228  ldr x4, pc+412 (addr 0x0000ffff58282480)    ;; object: 0x39c04241 <undefined>
0xffff582822e8   232  add x5, x7, #0xf (15)
0xffff582822ec   236  str x4, [x5, w3, sxtw #3]
0xffff582822f0   240  lsl x3, x3, #32
0xffff582822f4   244  b #-0x24 (addr 0xffff582822d0)
0xffff582822f8   248  mov x0, x6
0xffff582822fc   252  ret
0xffff58282300   256  sub csp, jssp, #0x10 (16)
0xffff58282304   260  stp fp, lr, [jssp, #-16]!
0xffff58282308   264  movz fp, #0xa00000000
0xffff5828230c   268  sub csp, jssp, #0x8 (8)
0xffff58282310   272  str fp, [jssp, #-8]!
0xffff58282314   276  add fp, jssp, #0x8 (8)
0xffff58282318   280  ldur x16, [x2, #-1]
0xffff5828231c   284  ldr x17, [x26, #120]
0xffff58282320   288  cmp x16, x17
0xffff58282324   292  b.ne #+0x1b4 (addr 0xffff582824d8)
0xffff58282328   296  ldur d29, [x2, #7]
0xffff5828232c   300  fcvtzs w4, d29
0xffff58282330   304  scvtf d0, w4
0xffff58282334   308  fcmp d29, d0
0xffff58282338   312  b.ne #+0x1a0 (addr 0xffff582824d8)
0xffff5828233c   316  ldr lr, [jssp, #16]
0xffff58282340   320  ldp xzr, fp, [jssp], #24
0xffff58282344   324  b #-0x13c (addr 0xffff58282208)
0xffff58282348   328  sub csp, jssp, #0x10 (16)
0xffff5828234c   332  stp fp, lr, [jssp, #-16]!
0xffff58282350   336  movz fp, #0xa00000000
0xffff58282354   340  sub csp, jssp, #0x8 (8)
0xffff58282358   344  str fp, [jssp, #-8]!
0xffff5828235c   348  add fp, jssp, #0x8 (8)
0xffff58282360   352  movz x6, #0x0
0xffff58282364   356  mov x16, lr
0xffff58282368   360  ldr x17, pc+288 (addr 0x0000ffff58282488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5828236c   364  blr x17
0xffff58282370   368  movz x0, #0x3000000000
0xffff58282374   372  movz x10, #0x0
0xffff58282378   376  sub csp, jssp, #0x10 (16)
0xffff5828237c   380  stp x10, x0, [jssp, #-16]!
0xffff58282380   384  movz x0, #0x2
0xffff58282384   388  movz x1, #0x5b88
0xffff58282388   392  movk x1, #0xe2, lsl #16
0xffff5828238c   396  ldr x16, pc+260 (addr 0x0000ffff58282490)    ;; code: STUB, CEntryStub, minor: 5
0xffff58282390   400  blr x16
0xffff58282394   404  str x0, [jssp, #48]
0xffff58282398   408  ldr x16, pc+256 (addr 0x0000ffff58282498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5828239c   412  blr x16
0xffff582823a0   416  ldr lr, [jssp, #16]
0xffff582823a4   420  ldp xzr, fp, [jssp], #24
0xffff582823a8   424  b #-0x16c (addr 0xffff5828223c)
0xffff582823ac   428  sub csp, jssp, #0x10 (16)
0xffff582823b0   432  stp fp, lr, [jssp, #-16]!
0xffff582823b4   436  movz fp, #0xa00000000
0xffff582823b8   440  sub csp, jssp, #0x8 (8)
0xffff582823bc   444  str fp, [jssp, #-8]!
0xffff582823c0   448  add fp, jssp, #0x8 (8)
0xffff582823c4   452  movz x7, #0x0
0xffff582823c8   456  mov x16, lr
0xffff582823cc   460  ldr x17, pc+212 (addr 0x0000ffff582824a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582823d0   464  blr x17
0xffff582823d4   468  lsl x0, x3, #32
0xffff582823d8   472  movz x10, #0x0
0xffff582823dc   476  sub csp, jssp, #0x10 (16)
0xffff582823e0   480  stp x10, x0, [jssp, #-16]!
0xffff582823e4   484  movz x0, #0x2
0xffff582823e8   488  movz x1, #0x5b88
0xffff582823ec   492  movk x1, #0xe2, lsl #16
0xffff582823f0   496  ldr x16, pc+184 (addr 0x0000ffff582824a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582823f4   500  blr x16
0xffff582823f8   504  str x0, [jssp, #56]
0xffff582823fc   508  ldr x16, pc+180 (addr 0x0000ffff582824b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58282400   512  blr x16
0xffff58282404   516  ldr lr, [jssp, #16]
0xffff58282408   520  ldp xzr, fp, [jssp], #24
0xffff5828240c   524  b #-0x180 (addr 0xffff5828228c)
0xffff58282410   528  sub csp, jssp, #0x10 (16)
0xffff58282414   532  stp fp, lr, [jssp, #-16]!
0xffff58282418   536  movz fp, #0xa00000000
0xffff5828241c   540  sub csp, jssp, #0x8 (8)
0xffff58282420   544  str fp, [jssp, #-8]!
0xffff58282424   548  add fp, jssp, #0x8 (8)
0xffff58282428   552  ldur x16, [x3, #-1]
0xffff5828242c   556  ldr x17, [x26, #120]
0xffff58282430   560  cmp x16, x17
0xffff58282434   564  b.ne #+0xac (addr 0xffff582824e0)
0xffff58282438   568  ldur d29, [x3, #7]
0xffff5828243c   572  fcvtzs w5, d29
0xffff58282440   576  scvtf d0, w5
0xffff58282444   580  fcmp d29, d0
0xffff58282448   584  b.ne #+0x98 (addr 0xffff582824e0)
0xffff5828244c   588  ldr lr, [jssp, #16]
0xffff58282450   592  ldp xzr, fp, [jssp], #24
0xffff58282454   596  b #-0x17c (addr 0xffff582822d8)
0xffff58282458   600  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff5828245c   604  d63f03e0       constant
0xffff58282460   608  39c04201       constant
0xffff58282464   612  00000000       constant
0xffff58282468   616  39c04201       constant
0xffff5828246c   620  00000000       constant
0xffff58282470   624  32b04259       constant
0xffff58282474   628  00000000       constant
0xffff58282478   632  58281a20       constant
0xffff5828247c   636  0000ffff       constant
0xffff58282480   640  39c04241       constant
0xffff58282484   644  00000000       constant
0xffff58282488   648  58206820       constant
0xffff5828248c   652  0000ffff       constant
0xffff58282490   656  58206260       constant
0xffff58282494   660  0000ffff       constant
0xffff58282498   664  582068e0       constant
0xffff5828249c   668  0000ffff       constant
0xffff582824a0   672  58206820       constant
0xffff582824a4   676  0000ffff       constant
0xffff582824a8   680  58206260       constant
0xffff582824ac   684  0000ffff       constant
0xffff582824b0   688  582068e0       constant
0xffff582824b4   692  0000ffff       constant
0xffff582824b8   696  movz x16, #0x0
0xffff582824bc   700  sub csp, jssp, #0x10 (16)
0xffff582824c0   704  stp fp, lr, [jssp, #-16]!
0xffff582824c4   708  bl #+0x24 (addr 0xffff582824e8)
0xffff582824c8   712  movz x16, #0x8
0xffff582824cc   716  sub csp, jssp, #0x10 (16)
0xffff582824d0   720  stp fp, lr, [jssp, #-16]!
0xffff582824d4   724  bl #+0x14 (addr 0xffff582824e8)
0xffff582824d8   728  movz x16, #0x10
0xffff582824dc   732  bl #+0x1c (addr 0xffff582824f8)
0xffff582824e0   736  movz x16, #0x18
0xffff582824e4   740  bl #+0x14 (addr 0xffff582824f8)
0xffff582824e8   744  movz x17, #0xa00000000
0xffff582824ec   748  sub csp, jssp, #0x10 (16)
0xffff582824f0   752  stp x17, cp, [jssp, #-16]!
0xffff582824f4   756  add fp, jssp, #0x10 (16)
0xffff582824f8   760  ldr x17, pc+24 (addr 0x0000ffff58282510)    ;; lazy deoptimization bailout 0
0xffff582824fc   764  add x17, x17, x16
0xffff58282500   768  br x17
0xffff58282504   772  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58282508   776  d63f03e0       constant
0xffff5828250c   780  d503201f       constant
0xffff58282510   784  58006000       constant
0xffff58282514   788  0000ffff       constant


Safepoints (size = 34)
0xffff58282394   404  000 | x0 | x1 | x2 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff582823f8   504  000 | x0 | x1 | x2 | x6 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 33)
0xffff5828224c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58282254  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5828228c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582822c0  code target (STUB)  (0xffff58281a20)
0xffff582822e4  embedded object  (0x39c04241 <undefined>)
0xffff58282368  code target (STUB)  (0xffff58206820)
0xffff5828238c  code target (STUB)  (0xffff58206260)
0xffff58282398  code target (STUB)  (0xffff582068e0)
0xffff582823cc  code target (STUB)  (0xffff58206820)
0xffff582823f0  code target (STUB)  (0xffff58206260)
0xffff582823fc  code target (STUB)  (0xffff582068e0)
0xffff58282458  constant pool (size 96)
0xffff582824f8  runtime entry
0xffff58282504  constant pool (size 20)

--- End code ---
kind = STUB
major_key = RegExpConstructResultStub
name = RegExpConstructResultStub
compiler = crankshaft
Instructions (size = 826)
0xffff58282200     0  tbnz w2, #0, #+0x100 (addr 0xffff58282300)
0xffff58282204     4  asr x4, x2, #32
0xffff58282208     8  movz w16, #0x257f
0xffff5828220c    12  cmp w4, w16, lsl #3
0xffff58282210    16  b.hs #+0x2a8 (addr 0xffff582824b8)
0xffff58282214    20  lsl w3, w4, #3
0xffff58282218    24  add w3, w3, #0x10 (16)
0xffff5828221c    28  movz x5, #0x92c0
0xffff58282220    32  movk x5, #0x16e7, lsl #16
0xffff58282224    36  ldp x6, x4, [x5]
0xffff58282228    40  adds x16, x6, #0x30 (48)
0xffff5828222c    44  ccmp x16, x4, #nzCv, lo
0xffff58282230    48  b.hi #+0x118 (addr 0xffff58282348)
0xffff58282234    52  str x16, [x5]
0xffff58282238    56  orr x6, x6, #0x1
0xffff5828223c    60  ldur x4, [cp, #39]
0xffff58282240    64  movz x16, #0x257
0xffff58282244    68  ldr x4, [x4, x16]
0xffff58282248    72  stur x4, [x6, #-1]
0xffff5828224c    76  ldr x4, pc+532 (addr 0x0000ffff58282460)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58282250    80  stur x4, [x6, #7]
0xffff58282254    84  ldr x4, pc+532 (addr 0x0000ffff58282468)    ;; object: 0x39c04201 <FixedArray[0]>
0xffff58282258    88  stur x4, [x6, #15]
0xffff5828225c    92  stur x2, [x6, #23]
0xffff58282260    96  stur x1, [x6, #31]
0xffff58282264   100  stur x0, [x6, #39]
0xffff58282268   104  sxtw x3, w3
0xffff5828226c   108  movz x4, #0x92c0
0xffff58282270   112  movk x4, #0x16e7, lsl #16
0xffff58282274   116  ldp x7, x16, [x4]
0xffff58282278   120  adds x5, x7, x3
0xffff5828227c   124  ccmp x5, x16, #nzCv, lo
0xffff58282280   128  b.hi #+0x12c (addr 0xffff582823ac)
0xffff58282284   132  str x5, [x4]
0xffff58282288   136  orr x7, x7, #0x1
0xffff5828228c   140  ldr x3, pc+484 (addr 0x0000ffff58282470)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff58282290   144  stur x3, [x7, #-1]
0xffff58282294   148  mov x3, x2
0xffff58282298   152  tbnz w3, #0, #+0x230 (addr 0xffff582824c8)
0xffff5828229c   156  stur x3, [x7, #7]
0xffff582822a0   160  mov x3, x7
0xffff582822a4   164  stur x3, [x6, #15]
0xffff582822a8   168  add x4, x6, #0xf (15)
0xffff582822ac   172  and x3, x6, #0xfffffffffff00000
0xffff582822b0   176  ldr x3, [x3, #8]
0xffff582822b4   180  tbz w3, #2, #+0x18 (addr 0xffff582822cc)
0xffff582822b8   184  sub csp, jssp, #0x8 (8)
0xffff582822bc   188  str lr, [jssp, #-8]!
0xffff582822c0   192  ldr x16, pc+440 (addr 0x0000ffff58282478)    ;; code: STUB, RecordWriteStub, minor: 69734
0xffff582822c4   196  blr x16
0xffff582822c8   200  ldr lr, [jssp], #8
0xffff582822cc   204  mov x3, x2
0xffff582822d0   208  tbnz w3, #0, #+0x140 (addr 0xffff58282410)
0xffff582822d4   212  asr x5, x3, #32
0xffff582822d8   216  cmp w5, #0x0 (0)
0xffff582822dc   220  b.le #+0x1c (addr 0xffff582822f8)
0xffff582822e0   224  sub w3, w5, #0x1 (1)
0xffff582822e4   228  ldr x4, pc+412 (addr 0x0000ffff58282480)    ;; object: 0x39c04241 <undefined>
0xffff582822e8   232  add x5, x7, #0xf (15)
0xffff582822ec   236  str x4, [x5, w3, sxtw #3]
0xffff582822f0   240  lsl x3, x3, #32
0xffff582822f4   244  b #-0x24 (addr 0xffff582822d0)
0xffff582822f8   248  mov x0, x6
0xffff582822fc   252  ret
0xffff58282300   256  sub csp, jssp, #0x10 (16)
0xffff58282304   260  stp fp, lr, [jssp, #-16]!
0xffff58282308   264  movz fp, #0xa00000000
0xffff5828230c   268  sub csp, jssp, #0x8 (8)
0xffff58282310   272  str fp, [jssp, #-8]!
0xffff58282314   276  add fp, jssp, #0x8 (8)
0xffff58282318   280  ldur x16, [x2, #-1]
0xffff5828231c   284  ldr x17, [x26, #120]
0xffff58282320   288  cmp x16, x17
0xffff58282324   292  b.ne #+0x1b4 (addr 0xffff582824d8)
0xffff58282328   296  ldur d29, [x2, #7]
0xffff5828232c   300  fcvtzs w4, d29
0xffff58282330   304  scvtf d0, w4
0xffff58282334   308  fcmp d29, d0
0xffff58282338   312  b.ne #+0x1a0 (addr 0xffff582824d8)
0xffff5828233c   316  ldr lr, [jssp, #16]
0xffff58282340   320  ldp xzr, fp, [jssp], #24
0xffff58282344   324  b #-0x13c (addr 0xffff58282208)
0xffff58282348   328  sub csp, jssp, #0x10 (16)
0xffff5828234c   332  stp fp, lr, [jssp, #-16]!
0xffff58282350   336  movz fp, #0xa00000000
0xffff58282354   340  sub csp, jssp, #0x8 (8)
0xffff58282358   344  str fp, [jssp, #-8]!
0xffff5828235c   348  add fp, jssp, #0x8 (8)
0xffff58282360   352  movz x6, #0x0
0xffff58282364   356  mov x16, lr
0xffff58282368   360  ldr x17, pc+288 (addr 0x0000ffff58282488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5828236c   364  blr x17
0xffff58282370   368  movz x0, #0x3000000000
0xffff58282374   372  movz x10, #0x0
0xffff58282378   376  sub csp, jssp, #0x10 (16)
0xffff5828237c   380  stp x10, x0, [jssp, #-16]!
0xffff58282380   384  movz x0, #0x2
0xffff58282384   388  movz x1, #0x5b88
0xffff58282388   392  movk x1, #0xe2, lsl #16
0xffff5828238c   396  ldr x16, pc+260 (addr 0x0000ffff58282490)    ;; code: STUB, CEntryStub, minor: 5
0xffff58282390   400  blr x16
0xffff58282394   404  str x0, [jssp, #48]
0xffff58282398   408  ldr x16, pc+256 (addr 0x0000ffff58282498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5828239c   412  blr x16
0xffff582823a0   416  ldr lr, [jssp, #16]
0xffff582823a4   420  ldp xzr, fp, [jssp], #24
0xffff582823a8   424  b #-0x16c (addr 0xffff5828223c)
0xffff582823ac   428  sub csp, jssp, #0x10 (16)
0xffff582823b0   432  stp fp, lr, [jssp, #-16]!
0xffff582823b4   436  movz fp, #0xa00000000
0xffff582823b8   440  sub csp, jssp, #0x8 (8)
0xffff582823bc   444  str fp, [jssp, #-8]!
0xffff582823c0   448  add fp, jssp, #0x8 (8)
0xffff582823c4   452  movz x7, #0x0
0xffff582823c8   456  mov x16, lr
0xffff582823cc   460  ldr x17, pc+212 (addr 0x0000ffff582824a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582823d0   464  blr x17
0xffff582823d4   468  lsl x0, x3, #32
0xffff582823d8   472  movz x10, #0x0
0xffff582823dc   476  sub csp, jssp, #0x10 (16)
0xffff582823e0   480  stp x10, x0, [jssp, #-16]!
0xffff582823e4   484  movz x0, #0x2
0xffff582823e8   488  movz x1, #0x5b88
0xffff582823ec   492  movk x1, #0xe2, lsl #16
0xffff582823f0   496  ldr x16, pc+184 (addr 0x0000ffff582824a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582823f4   500  blr x16
0xffff582823f8   504  str x0, [jssp, #56]
0xffff582823fc   508  ldr x16, pc+180 (addr 0x0000ffff582824b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58282400   512  blr x16
0xffff58282404   516  ldr lr, [jssp, #16]
0xffff58282408   520  ldp xzr, fp, [jssp], #24
0xffff5828240c   524  b #-0x180 (addr 0xffff5828228c)
0xffff58282410   528  sub csp, jssp, #0x10 (16)
0xffff58282414   532  stp fp, lr, [jssp, #-16]!
0xffff58282418   536  movz fp, #0xa00000000
0xffff5828241c   540  sub csp, jssp, #0x8 (8)
0xffff58282420   544  str fp, [jssp, #-8]!
0xffff58282424   548  add fp, jssp, #0x8 (8)
0xffff58282428   552  ldur x16, [x3, #-1]
0xffff5828242c   556  ldr x17, [x26, #120]
0xffff58282430   560  cmp x16, x17
0xffff58282434   564  b.ne #+0xac (addr 0xffff582824e0)
0xffff58282438   568  ldur d29, [x3, #7]
0xffff5828243c   572  fcvtzs w5, d29
0xffff58282440   576  scvtf d0, w5
0xffff58282444   580  fcmp d29, d0
0xffff58282448   584  b.ne #+0x98 (addr 0xffff582824e0)
0xffff5828244c   588  ldr lr, [jssp, #16]
0xffff58282450   592  ldp xzr, fp, [jssp], #24
0xffff58282454   596  b #-0x17c (addr 0xffff582822d8)
0xffff58282458   600  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff5828245c   604  d63f03e0       constant
0xffff58282460   608  39c04201       constant
0xffff58282464   612  00000000       constant
0xffff58282468   616  39c04201       constant
0xffff5828246c   620  00000000       constant
0xffff58282470   624  32b04259       constant
0xffff58282474   628  00000000       constant
0xffff58282478   632  58281a20       constant
0xffff5828247c   636  0000ffff       constant
0xffff58282480   640  39c04241       constant
0xffff58282484   644  00000000       constant
0xffff58282488   648  58206820       constant
0xffff5828248c   652  0000ffff       constant
0xffff58282490   656  58206260       constant
0xffff58282494   660  0000ffff       constant
0xffff58282498   664  582068e0       constant
0xffff5828249c   668  0000ffff       constant
0xffff582824a0   672  58206820       constant
0xffff582824a4   676  0000ffff       constant
0xffff582824a8   680  58206260       constant
0xffff582824ac   684  0000ffff       constant
0xffff582824b0   688  582068e0       constant
0xffff582824b4   692  0000ffff       constant
0xffff582824b8   696  movz x16, #0x0
0xffff582824bc   700  sub csp, jssp, #0x10 (16)
0xffff582824c0   704  stp fp, lr, [jssp, #-16]!
0xffff582824c4   708  bl #+0x24 (addr 0xffff582824e8)
0xffff582824c8   712  movz x16, #0x8
0xffff582824cc   716  sub csp, jssp, #0x10 (16)
0xffff582824d0   720  stp fp, lr, [jssp, #-16]!
0xffff582824d4   724  bl #+0x14 (addr 0xffff582824e8)
0xffff582824d8   728  movz x16, #0x10
0xffff582824dc   732  bl #+0x1c (addr 0xffff582824f8)
0xffff582824e0   736  movz x16, #0x18
0xffff582824e4   740  bl #+0x14 (addr 0xffff582824f8)
0xffff582824e8   744  movz x17, #0xa00000000
0xffff582824ec   748  sub csp, jssp, #0x10 (16)
0xffff582824f0   752  stp x17, cp, [jssp, #-16]!
0xffff582824f4   756  add fp, jssp, #0x10 (16)
0xffff582824f8   760  ldr x17, pc+24 (addr 0x0000ffff58282510)    ;; lazy deoptimization bailout 0
0xffff582824fc   764  add x17, x17, x16
0xffff58282500   768  br x17
0xffff58282504   772  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58282508   776  d63f03e0       constant
0xffff5828250c   780  d503201f       constant
0xffff58282510   784  58006000       constant
0xffff58282514   788  0000ffff       constant


Safepoints (size = 34)
0xffff58282394   404  000 | x0 | x1 | x2 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff582823f8   504  000 | x0 | x1 | x2 | x6 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 33)
0xffff5828224c  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff58282254  embedded object  (0x39c04201 <FixedArray[0]>)
0xffff5828228c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582822c0  code target (STUB)  (0xffff58281a20)
0xffff582822e4  embedded object  (0x39c04241 <undefined>)
0xffff58282368  code target (STUB)  (0xffff58206820)
0xffff5828238c  code target (STUB)  (0xffff58206260)
0xffff58282398  code target (STUB)  (0xffff582068e0)
0xffff582823cc  code target (STUB)  (0xffff58206820)
0xffff582823f0  code target (STUB)  (0xffff58206260)
0xffff582823fc  code target (STUB)  (0xffff582068e0)
0xffff58282458  constant pool (size 96)
0xffff582824f8  runtime entry
0xffff58282504  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 128)
0xffff582834a0     0  ldr x16, [x26, #56]
0xffff582834a4     4  cmp x0, x16
0xffff582834a8     8  b.eq #+0x8 (addr 0xffff582834b0)
0xffff582834ac    12  b #+0x2c (addr 0xffff582834d8)
0xffff582834b0    16  ldr x0, pc+24 (addr 0x0000ffff582834c8)    ;; object: 0x39c042b1 <false>
0xffff582834b4    20  ret
0xffff582834b8    24  ldr x0, pc+24 (addr 0x0000ffff582834d0)    ;; object: 0x39c04281 <true>
0xffff582834bc    28  ret
0xffff582834c0    32  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582834c4    36  d63f03e0       constant
0xffff582834c8    40  39c042b1       constant
0xffff582834cc    44  00000000       constant
0xffff582834d0    48  39c04281       constant
0xffff582834d4    52  00000000       constant
0xffff582834d8    56  movz x16, #0x0
0xffff582834dc    60  sub csp, jssp, #0x10 (16)
0xffff582834e0    64  stp fp, lr, [jssp, #-16]!
0xffff582834e4    68  bl #+0x4 (addr 0xffff582834e8)
0xffff582834e8    72  movz x17, #0xa00000000
0xffff582834ec    76  sub csp, jssp, #0x10 (16)
0xffff582834f0    80  stp x17, cp, [jssp, #-16]!
0xffff582834f4    84  add fp, jssp, #0x10 (16)
0xffff582834f8    88  ldr x17, pc+24 (addr 0x0000ffff58283510)    ;; lazy deoptimization bailout 0
0xffff582834fc    92  add x17, x17, x16
0xffff58283500    96  br x17
0xffff58283504   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58283508   104  d63f03e0       constant
0xffff5828350c   108  d503201f       constant
0xffff58283510   112  58006000       constant
0xffff58283514   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582834b0  embedded object  (0x39c042b1 <false>)
0xffff582834b8  embedded object  (0x39c04281 <true>)
0xffff582834c0  constant pool (size 24)
0xffff582834f8  runtime entry
0xffff58283504  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 4
type = NORMAL
name = ToBooleanICStub(Null)
compiler = crankshaft
Instructions (size = 128)
0xffff582834a0     0  ldr x16, [x26, #56]
0xffff582834a4     4  cmp x0, x16
0xffff582834a8     8  b.eq #+0x8 (addr 0xffff582834b0)
0xffff582834ac    12  b #+0x2c (addr 0xffff582834d8)
0xffff582834b0    16  ldr x0, pc+24 (addr 0x0000ffff582834c8)    ;; object: 0x39c042b1 <false>
0xffff582834b4    20  ret
0xffff582834b8    24  ldr x0, pc+24 (addr 0x0000ffff582834d0)    ;; object: 0x39c04281 <true>
0xffff582834bc    28  ret
0xffff582834c0    32  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582834c4    36  d63f03e0       constant
0xffff582834c8    40  39c042b1       constant
0xffff582834cc    44  00000000       constant
0xffff582834d0    48  39c04281       constant
0xffff582834d4    52  00000000       constant
0xffff582834d8    56  movz x16, #0x0
0xffff582834dc    60  sub csp, jssp, #0x10 (16)
0xffff582834e0    64  stp fp, lr, [jssp, #-16]!
0xffff582834e4    68  bl #+0x4 (addr 0xffff582834e8)
0xffff582834e8    72  movz x17, #0xa00000000
0xffff582834ec    76  sub csp, jssp, #0x10 (16)
0xffff582834f0    80  stp x17, cp, [jssp, #-16]!
0xffff582834f4    84  add fp, jssp, #0x10 (16)
0xffff582834f8    88  ldr x17, pc+24 (addr 0x0000ffff58283510)    ;; lazy deoptimization bailout 0
0xffff582834fc    92  add x17, x17, x16
0xffff58283500    96  br x17
0xffff58283504   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58283508   104  d63f03e0       constant
0xffff5828350c   108  d503201f       constant
0xffff58283510   112  58006000       constant
0xffff58283514   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582834b0  embedded object  (0x39c042b1 <false>)
0xffff582834b8  embedded object  (0x39c04281 <true>)
0xffff582834c0  constant pool (size 24)
0xffff582834f8  runtime entry
0xffff58283504  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 509)
0xffff58287c00     0  movz x2, #0x92c0
0xffff58287c04     4  movk x2, #0x16e7, lsl #16
0xffff58287c08     8  ldp x3, x0, [x2]
0xffff58287c0c    12  adds x16, x3, #0xb0 (176)
0xffff58287c10    16  ccmp x16, x0, #nzCv, lo
0xffff58287c14    20  b.hi #+0xbc (addr 0xffff58287cd0)
0xffff58287c18    24  str x16, [x2]
0xffff58287c1c    28  orr x3, x3, #0x1
0xffff58287c20    32  ldr x0, pc+288 (addr 0x0000ffff58287d40)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58287c24    36  stur x0, [x3, #-1]
0xffff58287c28    40  movz x0, #0x1400000000
0xffff58287c2c    44  stur x0, [x3, #7]
0xffff58287c30    48  stur x1, [x3, #15]
0xffff58287c34    52  stur cp, [x3, #23]
0xffff58287c38    56  ldr x0, pc+272 (addr 0x0000ffff58287d48)    ;; object: 0x39c04519 <the hole>
0xffff58287c3c    60  stur x0, [x3, #31]
0xffff58287c40    64  ldur x0, [cp, #39]
0xffff58287c44    68  stur x0, [x3, #39]
0xffff58287c48    72  ldr x0, pc+264 (addr 0x0000ffff58287d50)    ;; object: 0x39c04241 <undefined>
0xffff58287c4c    76  stur x0, [x3, #47]
0xffff58287c50    80  ldr x0, pc+264 (addr 0x0000ffff58287d58)    ;; object: 0x39c04241 <undefined>
0xffff58287c54    84  stur x0, [x3, #55]
0xffff58287c58    88  ldr x0, pc+264 (addr 0x0000ffff58287d60)    ;; object: 0x39c04241 <undefined>
0xffff58287c5c    92  stur x0, [x3, #63]
0xffff58287c60    96  ldr x0, pc+264 (addr 0x0000ffff58287d68)    ;; object: 0x39c04241 <undefined>
0xffff58287c64   100  stur x0, [x3, #71]
0xffff58287c68   104  ldr x0, pc+264 (addr 0x0000ffff58287d70)    ;; object: 0x39c04241 <undefined>
0xffff58287c6c   108  stur x0, [x3, #79]
0xffff58287c70   112  ldr x0, pc+264 (addr 0x0000ffff58287d78)    ;; object: 0x39c04241 <undefined>
0xffff58287c74   116  stur x0, [x3, #87]
0xffff58287c78   120  ldr x0, pc+264 (addr 0x0000ffff58287d80)    ;; object: 0x39c04241 <undefined>
0xffff58287c7c   124  stur x0, [x3, #95]
0xffff58287c80   128  ldr x0, pc+264 (addr 0x0000ffff58287d88)    ;; object: 0x39c04241 <undefined>
0xffff58287c84   132  stur x0, [x3, #103]
0xffff58287c88   136  ldr x0, pc+264 (addr 0x0000ffff58287d90)    ;; object: 0x39c04241 <undefined>
0xffff58287c8c   140  stur x0, [x3, #111]
0xffff58287c90   144  ldr x0, pc+264 (addr 0x0000ffff58287d98)    ;; object: 0x39c04241 <undefined>
0xffff58287c94   148  stur x0, [x3, #119]
0xffff58287c98   152  ldr x0, pc+264 (addr 0x0000ffff58287da0)    ;; object: 0x39c04241 <undefined>
0xffff58287c9c   156  stur x0, [x3, #127]
0xffff58287ca0   160  ldr x0, pc+264 (addr 0x0000ffff58287da8)    ;; object: 0x39c04241 <undefined>
0xffff58287ca4   164  stur x0, [x3, #135]
0xffff58287ca8   168  ldr x0, pc+264 (addr 0x0000ffff58287db0)    ;; object: 0x39c04241 <undefined>
0xffff58287cac   172  stur x0, [x3, #143]
0xffff58287cb0   176  ldr x0, pc+264 (addr 0x0000ffff58287db8)    ;; object: 0x39c04241 <undefined>
0xffff58287cb4   180  stur x0, [x3, #151]
0xffff58287cb8   184  ldr x0, pc+264 (addr 0x0000ffff58287dc0)    ;; object: 0x39c04241 <undefined>
0xffff58287cbc   188  stur x0, [x3, #159]
0xffff58287cc0   192  ldr x0, pc+264 (addr 0x0000ffff58287dc8)    ;; object: 0x39c04241 <undefined>
0xffff58287cc4   196  stur x0, [x3, #167]
0xffff58287cc8   200  mov x0, x3
0xffff58287ccc   204  ret
0xffff58287cd0   208  sub csp, jssp, #0x10 (16)
0xffff58287cd4   212  stp fp, lr, [jssp, #-16]!
0xffff58287cd8   216  movz fp, #0xa00000000
0xffff58287cdc   220  sub csp, jssp, #0x8 (8)
0xffff58287ce0   224  str fp, [jssp, #-8]!
0xffff58287ce4   228  add fp, jssp, #0x8 (8)
0xffff58287ce8   232  movz x3, #0x0
0xffff58287cec   236  mov x16, lr
0xffff58287cf0   240  ldr x17, pc+224 (addr 0x0000ffff58287dd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58287cf4   244  blr x17
0xffff58287cf8   248  movz x0, #0xb000000000
0xffff58287cfc   252  movz x10, #0x0
0xffff58287d00   256  sub csp, jssp, #0x10 (16)
0xffff58287d04   260  stp x10, x0, [jssp, #-16]!
0xffff58287d08   264  movz x0, #0x2
0xffff58287d0c   268  movz x1, #0x5b88
0xffff58287d10   272  movk x1, #0xe2, lsl #16
0xffff58287d14   276  ldr x16, pc+196 (addr 0x0000ffff58287dd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58287d18   280  blr x16
0xffff58287d1c   284  str x0, [jssp, #24]
0xffff58287d20   288  ldr x16, pc+192 (addr 0x0000ffff58287de0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58287d24   292  blr x16
0xffff58287d28   296  ldr lr, [jssp, #16]
0xffff58287d2c   300  ldp xzr, fp, [jssp], #24
0xffff58287d30   304  b #-0x110 (addr 0xffff58287c20)
0xffff58287d34   308  5800059f       constant pool begin (num_const = 44)    ;; constant pool
0xffff58287d38   312  d63f03e0       constant
0xffff58287d3c   316  d503201f       constant
0xffff58287d40   320  32b06149       constant
0xffff58287d44   324  00000000       constant
0xffff58287d48   328  39c04519       constant
0xffff58287d4c   332  00000000       constant
0xffff58287d50   336  39c04241       constant
0xffff58287d54   340  00000000       constant
0xffff58287d58   344  39c04241       constant
0xffff58287d5c   348  00000000       constant
0xffff58287d60   352  39c04241       constant
0xffff58287d64   356  00000000       constant
0xffff58287d68   360  39c04241       constant
0xffff58287d6c   364  00000000       constant
0xffff58287d70   368  39c04241       constant
0xffff58287d74   372  00000000       constant
0xffff58287d78   376  39c04241       constant
0xffff58287d7c   380  00000000       constant
0xffff58287d80   384  39c04241       constant
0xffff58287d84   388  00000000       constant
0xffff58287d88   392  39c04241       constant
0xffff58287d8c   396  00000000       constant
0xffff58287d90   400  39c04241       constant
0xffff58287d94   404  00000000       constant
0xffff58287d98   408  39c04241       constant
0xffff58287d9c   412  00000000       constant
0xffff58287da0   416  39c04241       constant
0xffff58287da4   420  00000000       constant
0xffff58287da8   424  39c04241       constant
0xffff58287dac   428  00000000       constant
0xffff58287db0   432  39c04241       constant
0xffff58287db4   436  00000000       constant
0xffff58287db8   440  39c04241       constant
0xffff58287dbc   444  00000000       constant
0xffff58287dc0   448  39c04241       constant
0xffff58287dc4   452  00000000       constant
0xffff58287dc8   456  39c04241       constant
0xffff58287dcc   460  00000000       constant
0xffff58287dd0   464  58206820       constant
0xffff58287dd4   468  0000ffff       constant
0xffff58287dd8   472  58206260       constant
0xffff58287ddc   476  0000ffff       constant
0xffff58287de0   480  582068e0       constant
0xffff58287de4   484  0000ffff       constant


Safepoints (size = 21)
0xffff58287d1c   284  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff58287c20  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58287c38  embedded object  (0x39c04519 <the hole>)
0xffff58287c48  embedded object  (0x39c04241 <undefined>)
0xffff58287c50  embedded object  (0x39c04241 <undefined>)
0xffff58287c58  embedded object  (0x39c04241 <undefined>)
0xffff58287c60  embedded object  (0x39c04241 <undefined>)
0xffff58287c68  embedded object  (0x39c04241 <undefined>)
0xffff58287c70  embedded object  (0x39c04241 <undefined>)
0xffff58287c78  embedded object  (0x39c04241 <undefined>)
0xffff58287c80  embedded object  (0x39c04241 <undefined>)
0xffff58287c88  embedded object  (0x39c04241 <undefined>)
0xffff58287c90  embedded object  (0x39c04241 <undefined>)
0xffff58287c98  embedded object  (0x39c04241 <undefined>)
0xffff58287ca0  embedded object  (0x39c04241 <undefined>)
0xffff58287ca8  embedded object  (0x39c04241 <undefined>)
0xffff58287cb0  embedded object  (0x39c04241 <undefined>)
0xffff58287cb8  embedded object  (0x39c04241 <undefined>)
0xffff58287cc0  embedded object  (0x39c04241 <undefined>)
0xffff58287cf0  code target (STUB)  (0xffff58206820)
0xffff58287d14  code target (STUB)  (0xffff58206260)
0xffff58287d20  code target (STUB)  (0xffff582068e0)
0xffff58287d34  constant pool (size 180)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 509)
0xffff58287c00     0  movz x2, #0x92c0
0xffff58287c04     4  movk x2, #0x16e7, lsl #16
0xffff58287c08     8  ldp x3, x0, [x2]
0xffff58287c0c    12  adds x16, x3, #0xb0 (176)
0xffff58287c10    16  ccmp x16, x0, #nzCv, lo
0xffff58287c14    20  b.hi #+0xbc (addr 0xffff58287cd0)
0xffff58287c18    24  str x16, [x2]
0xffff58287c1c    28  orr x3, x3, #0x1
0xffff58287c20    32  ldr x0, pc+288 (addr 0x0000ffff58287d40)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58287c24    36  stur x0, [x3, #-1]
0xffff58287c28    40  movz x0, #0x1400000000
0xffff58287c2c    44  stur x0, [x3, #7]
0xffff58287c30    48  stur x1, [x3, #15]
0xffff58287c34    52  stur cp, [x3, #23]
0xffff58287c38    56  ldr x0, pc+272 (addr 0x0000ffff58287d48)    ;; object: 0x39c04519 <the hole>
0xffff58287c3c    60  stur x0, [x3, #31]
0xffff58287c40    64  ldur x0, [cp, #39]
0xffff58287c44    68  stur x0, [x3, #39]
0xffff58287c48    72  ldr x0, pc+264 (addr 0x0000ffff58287d50)    ;; object: 0x39c04241 <undefined>
0xffff58287c4c    76  stur x0, [x3, #47]
0xffff58287c50    80  ldr x0, pc+264 (addr 0x0000ffff58287d58)    ;; object: 0x39c04241 <undefined>
0xffff58287c54    84  stur x0, [x3, #55]
0xffff58287c58    88  ldr x0, pc+264 (addr 0x0000ffff58287d60)    ;; object: 0x39c04241 <undefined>
0xffff58287c5c    92  stur x0, [x3, #63]
0xffff58287c60    96  ldr x0, pc+264 (addr 0x0000ffff58287d68)    ;; object: 0x39c04241 <undefined>
0xffff58287c64   100  stur x0, [x3, #71]
0xffff58287c68   104  ldr x0, pc+264 (addr 0x0000ffff58287d70)    ;; object: 0x39c04241 <undefined>
0xffff58287c6c   108  stur x0, [x3, #79]
0xffff58287c70   112  ldr x0, pc+264 (addr 0x0000ffff58287d78)    ;; object: 0x39c04241 <undefined>
0xffff58287c74   116  stur x0, [x3, #87]
0xffff58287c78   120  ldr x0, pc+264 (addr 0x0000ffff58287d80)    ;; object: 0x39c04241 <undefined>
0xffff58287c7c   124  stur x0, [x3, #95]
0xffff58287c80   128  ldr x0, pc+264 (addr 0x0000ffff58287d88)    ;; object: 0x39c04241 <undefined>
0xffff58287c84   132  stur x0, [x3, #103]
0xffff58287c88   136  ldr x0, pc+264 (addr 0x0000ffff58287d90)    ;; object: 0x39c04241 <undefined>
0xffff58287c8c   140  stur x0, [x3, #111]
0xffff58287c90   144  ldr x0, pc+264 (addr 0x0000ffff58287d98)    ;; object: 0x39c04241 <undefined>
0xffff58287c94   148  stur x0, [x3, #119]
0xffff58287c98   152  ldr x0, pc+264 (addr 0x0000ffff58287da0)    ;; object: 0x39c04241 <undefined>
0xffff58287c9c   156  stur x0, [x3, #127]
0xffff58287ca0   160  ldr x0, pc+264 (addr 0x0000ffff58287da8)    ;; object: 0x39c04241 <undefined>
0xffff58287ca4   164  stur x0, [x3, #135]
0xffff58287ca8   168  ldr x0, pc+264 (addr 0x0000ffff58287db0)    ;; object: 0x39c04241 <undefined>
0xffff58287cac   172  stur x0, [x3, #143]
0xffff58287cb0   176  ldr x0, pc+264 (addr 0x0000ffff58287db8)    ;; object: 0x39c04241 <undefined>
0xffff58287cb4   180  stur x0, [x3, #151]
0xffff58287cb8   184  ldr x0, pc+264 (addr 0x0000ffff58287dc0)    ;; object: 0x39c04241 <undefined>
0xffff58287cbc   188  stur x0, [x3, #159]
0xffff58287cc0   192  ldr x0, pc+264 (addr 0x0000ffff58287dc8)    ;; object: 0x39c04241 <undefined>
0xffff58287cc4   196  stur x0, [x3, #167]
0xffff58287cc8   200  mov x0, x3
0xffff58287ccc   204  ret
0xffff58287cd0   208  sub csp, jssp, #0x10 (16)
0xffff58287cd4   212  stp fp, lr, [jssp, #-16]!
0xffff58287cd8   216  movz fp, #0xa00000000
0xffff58287cdc   220  sub csp, jssp, #0x8 (8)
0xffff58287ce0   224  str fp, [jssp, #-8]!
0xffff58287ce4   228  add fp, jssp, #0x8 (8)
0xffff58287ce8   232  movz x3, #0x0
0xffff58287cec   236  mov x16, lr
0xffff58287cf0   240  ldr x17, pc+224 (addr 0x0000ffff58287dd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff58287cf4   244  blr x17
0xffff58287cf8   248  movz x0, #0xb000000000
0xffff58287cfc   252  movz x10, #0x0
0xffff58287d00   256  sub csp, jssp, #0x10 (16)
0xffff58287d04   260  stp x10, x0, [jssp, #-16]!
0xffff58287d08   264  movz x0, #0x2
0xffff58287d0c   268  movz x1, #0x5b88
0xffff58287d10   272  movk x1, #0xe2, lsl #16
0xffff58287d14   276  ldr x16, pc+196 (addr 0x0000ffff58287dd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff58287d18   280  blr x16
0xffff58287d1c   284  str x0, [jssp, #24]
0xffff58287d20   288  ldr x16, pc+192 (addr 0x0000ffff58287de0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58287d24   292  blr x16
0xffff58287d28   296  ldr lr, [jssp, #16]
0xffff58287d2c   300  ldp xzr, fp, [jssp], #24
0xffff58287d30   304  b #-0x110 (addr 0xffff58287c20)
0xffff58287d34   308  5800059f       constant pool begin (num_const = 44)    ;; constant pool
0xffff58287d38   312  d63f03e0       constant
0xffff58287d3c   316  d503201f       constant
0xffff58287d40   320  32b06149       constant
0xffff58287d44   324  00000000       constant
0xffff58287d48   328  39c04519       constant
0xffff58287d4c   332  00000000       constant
0xffff58287d50   336  39c04241       constant
0xffff58287d54   340  00000000       constant
0xffff58287d58   344  39c04241       constant
0xffff58287d5c   348  00000000       constant
0xffff58287d60   352  39c04241       constant
0xffff58287d64   356  00000000       constant
0xffff58287d68   360  39c04241       constant
0xffff58287d6c   364  00000000       constant
0xffff58287d70   368  39c04241       constant
0xffff58287d74   372  00000000       constant
0xffff58287d78   376  39c04241       constant
0xffff58287d7c   380  00000000       constant
0xffff58287d80   384  39c04241       constant
0xffff58287d84   388  00000000       constant
0xffff58287d88   392  39c04241       constant
0xffff58287d8c   396  00000000       constant
0xffff58287d90   400  39c04241       constant
0xffff58287d94   404  00000000       constant
0xffff58287d98   408  39c04241       constant
0xffff58287d9c   412  00000000       constant
0xffff58287da0   416  39c04241       constant
0xffff58287da4   420  00000000       constant
0xffff58287da8   424  39c04241       constant
0xffff58287dac   428  00000000       constant
0xffff58287db0   432  39c04241       constant
0xffff58287db4   436  00000000       constant
0xffff58287db8   440  39c04241       constant
0xffff58287dbc   444  00000000       constant
0xffff58287dc0   448  39c04241       constant
0xffff58287dc4   452  00000000       constant
0xffff58287dc8   456  39c04241       constant
0xffff58287dcc   460  00000000       constant
0xffff58287dd0   464  58206820       constant
0xffff58287dd4   468  0000ffff       constant
0xffff58287dd8   472  58206260       constant
0xffff58287ddc   476  0000ffff       constant
0xffff58287de0   480  582068e0       constant
0xffff58287de4   484  0000ffff       constant


Safepoints (size = 21)
0xffff58287d1c   284  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff58287c20  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58287c38  embedded object  (0x39c04519 <the hole>)
0xffff58287c48  embedded object  (0x39c04241 <undefined>)
0xffff58287c50  embedded object  (0x39c04241 <undefined>)
0xffff58287c58  embedded object  (0x39c04241 <undefined>)
0xffff58287c60  embedded object  (0x39c04241 <undefined>)
0xffff58287c68  embedded object  (0x39c04241 <undefined>)
0xffff58287c70  embedded object  (0x39c04241 <undefined>)
0xffff58287c78  embedded object  (0x39c04241 <undefined>)
0xffff58287c80  embedded object  (0x39c04241 <undefined>)
0xffff58287c88  embedded object  (0x39c04241 <undefined>)
0xffff58287c90  embedded object  (0x39c04241 <undefined>)
0xffff58287c98  embedded object  (0x39c04241 <undefined>)
0xffff58287ca0  embedded object  (0x39c04241 <undefined>)
0xffff58287ca8  embedded object  (0x39c04241 <undefined>)
0xffff58287cb0  embedded object  (0x39c04241 <undefined>)
0xffff58287cb8  embedded object  (0x39c04241 <undefined>)
0xffff58287cc0  embedded object  (0x39c04241 <undefined>)
0xffff58287cf0  code target (STUB)  (0xffff58206820)
0xffff58287d14  code target (STUB)  (0xffff58206260)
0xffff58287d20  code target (STUB)  (0xffff582068e0)
0xffff58287d34  constant pool (size 180)


kind = HANDLER
major_key = <NoCache>Stub
name = undefined
compiler = unknown
Instructions (size = 112)
0xffff58289140     0  sub csp, jssp, #0x8 (8)
0xffff58289144     4  str x3, [jssp, #-8]!
0xffff58289148     8  sub csp, jssp, #0x8 (8)
0xffff5828914c    12  str x0, [jssp, #-8]!
0xffff58289150    16  ldr x0, pc+72 (addr 0x0000ffff58289198)    ;; object: 0x39cc5d51 Cell for 0
0xffff58289154    20  ldur x0, [x0, #7]
0xffff58289158    24  cmp x0, #0x0 (0)
0xffff5828915c    28  b.ne #+0x20 (addr 0xffff5828917c)
0xffff58289160    32  ldr x0, pc+64 (addr 0x0000ffff582891a0)    ;; object: 0x39cc5d61 WeakCell for 0x39c58101 PropertyCell for 0x39c04241 <undefined>
0xffff58289164    36  ldur x0, [x0, #7]
0xffff58289168    40  tbz w0, #0, #+0x14 (addr 0xffff5828917c)
0xffff5828916c    44  ldur x0, [x0, #15]
0xffff58289170    48  add jssp, jssp, #0x10 (16)
0xffff58289174    52  ret
0xffff58289178    56  b #+0x14 (addr 0xffff5828918c)
0xffff5828917c    60  ldr x0, [jssp], #8
0xffff58289180    64  ldr x3, [jssp], #8
0xffff58289184    68  ldr x16, pc+36 (addr 0x0000ffff582891a8)    ;; code: BUILTIN
0xffff58289188    72  br x16
0xffff5828918c    76  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58289190    80  d63f03e0       constant
0xffff58289194    84  d503201f       constant
0xffff58289198    88  39cc5d51       constant
0xffff5828919c    92  00000000       constant
0xffff582891a0    96  39cc5d61       constant
0xffff582891a4   100  00000000       constant
0xffff582891a8   104  582222e0       constant
0xffff582891ac   108  0000ffff       constant


RelocInfo (size = 9)
0xffff58289150  embedded object  (0x39cc5d51 Cell for 0)
0xffff58289160  embedded object  (0x39cc5d61 WeakCell for 0x39c58101 PropertyCell for 0x39c04241 <undefined>)
0xffff58289184  code target (BUILTIN)  (0xffff582222e0)
0xffff5828918c  constant pool (size 36)

kind = HANDLER
major_key = <NoCache>Stub
name = Object
compiler = unknown
Instructions (size = 120)
0xffff58289220     0  sub csp, jssp, #0x8 (8)
0xffff58289224     4  str x3, [jssp, #-8]!
0xffff58289228     8  sub csp, jssp, #0x8 (8)
0xffff5828922c    12  str x0, [jssp, #-8]!
0xffff58289230    16  ldr x0, pc+80 (addr 0x0000ffff58289280)    ;; object: 0x39cc5d51 Cell for 0
0xffff58289234    20  ldur x0, [x0, #7]
0xffff58289238    24  cmp x0, #0x0 (0)
0xffff5828923c    28  b.ne #+0x2c (addr 0xffff58289268)
0xffff58289240    32  ldr x0, pc+72 (addr 0x0000ffff58289288)    ;; object: 0x39cc5dc9 WeakCell for 0x39c40909 PropertyCell for 0x39c3fef1 <JS Function Object (SharedFunctionInfo 0x39c3fe49)>
0xffff58289244    36  ldur x0, [x0, #7]
0xffff58289248    40  tbz w0, #0, #+0x20 (addr 0xffff58289268)
0xffff5828924c    44  ldur x0, [x0, #15]
0xffff58289250    48  ldr x16, [x26, #88]
0xffff58289254    52  cmp x0, x16
0xffff58289258    56  b.eq #+0x10 (addr 0xffff58289268)
0xffff5828925c    60  add jssp, jssp, #0x10 (16)
0xffff58289260    64  ret
0xffff58289264    68  b #+0x14 (addr 0xffff58289278)
0xffff58289268    72  ldr x0, [jssp], #8
0xffff5828926c    76  ldr x3, [jssp], #8
0xffff58289270    80  ldr x16, pc+32 (addr 0x0000ffff58289290)    ;; code: BUILTIN
0xffff58289274    84  br x16
0xffff58289278    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5828927c    92  d63f03e0       constant
0xffff58289280    96  39cc5d51       constant
0xffff58289284   100  00000000       constant
0xffff58289288   104  39cc5dc9       constant
0xffff5828928c   108  00000000       constant
0xffff58289290   112  582222e0       constant
0xffff58289294   116  0000ffff       constant


RelocInfo (size = 9)
0xffff58289230  embedded object  (0x39cc5d51 Cell for 0)
0xffff58289240  embedded object  (0x39cc5dc9 WeakCell for 0x39c40909 PropertyCell for 0x39c3fef1 <JS Function Object (SharedFunctionInfo 0x39c3fe49)>)
0xffff58289270  code target (BUILTIN)  (0xffff582222e0)
0xffff58289278  constant pool (size 32)

kind = STUB
major_key = ToNameStub
name = ToNameStub
compiler = unknown
Instructions (size = 112)
0xffff58289300     0  tbz w0, #0, #+0x20 (addr 0xffff58289320)
0xffff58289304     4  ldur x1, [x0, #-1]
0xffff58289308     8  ldrb w1, [x1, #11]
0xffff5828930c    12  cmp x1, #0x80 (128)
0xffff58289310    16  b.hi #+0x8 (addr 0xffff58289318)
0xffff58289314    20  ret
0xffff58289318    24  cmp x1, #0x81 (129)
0xffff5828931c    28  b.ne #+0xc (addr 0xffff58289328)
0xffff58289320    32  ldr x16, pc+56 (addr 0x0000ffff58289358)    ;; code: STUB, NumberToStringStub, minor: 0
0xffff58289324    36  br x16
0xffff58289328    40  cmp x1, #0x83 (131)
0xffff5828932c    44  b.ne #+0xc (addr 0xffff58289338)
0xffff58289330    48  ldur x0, [x0, #7]
0xffff58289334    52  ret
0xffff58289338    56  sub csp, jssp, #0x8 (8)
0xffff5828933c    60  str x0, [jssp, #-8]!
0xffff58289340    64  movz x0, #0x1
0xffff58289344    68  ldr x1, pc+28 (addr 0x0000ffff58289360)    ;; external reference (Runtime::ToName)
0xffff58289348    72  ldr x16, pc+32 (addr 0x0000ffff58289368)    ;; code: STUB, CEntryStub, minor: 4
0xffff5828934c    76  br x16
0xffff58289350    80  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58289354    84  d63f03e0       constant
0xffff58289358    88  5822a480       constant
0xffff5828935c    92  0000ffff       constant
0xffff58289360    96  00e497a0       constant
0xffff58289364   100  00000000       constant
0xffff58289368   104  58206060       constant
0xffff5828936c   108  0000ffff       constant


RelocInfo (size = 10)
0xffff58289320  code target (STUB)  (0xffff5822a480)
0xffff58289344  external reference (Runtime::ToName)  (0xe497a0)
0xffff58289348  code target (STUB)  (0xffff58206060)
0xffff58289350  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = RECEIVER*GENERIC -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff5828a5a0     0  orr x16, x1, x0
0xffff5828a5a4     4  tbnz w16, #0, #+0x10 (addr 0xffff5828a5b4)
0xffff5828a5a8     8  asr x1, x1, #32
0xffff5828a5ac    12  sub x0, x1, x0, asr #32
0xffff5828a5b0    16  ret
0xffff5828a5b4    20  cmp x0, x1
0xffff5828a5b8    24  b.ne #+0x30 (addr 0xffff5828a5e8)
0xffff5828a5bc    28  ldur x16, [x0, #-1]
0xffff5828a5c0    32  ldr x17, [x26, #120]
0xffff5828a5c4    36  cmp x16, x17
0xffff5828a5c8    40  b.eq #+0xc (addr 0xffff5828a5d4)
0xffff5828a5cc    44  movz x0, #0x0
0xffff5828a5d0    48  ret
0xffff5828a5d4    52  ldur d0, [x0, #7]
0xffff5828a5d8    56  fcmp d0, d0
0xffff5828a5dc    60  b.vc #-0x10 (addr 0xffff5828a5cc)
0xffff5828a5e0    64  movn x0, #0x0
0xffff5828a5e4    68  ret
0xffff5828a5e8    72  and x16, x1, x0
0xffff5828a5ec    76  tbnz w16, #0, #+0x64 (addr 0xffff5828a650)
0xffff5828a5f0    80  tbz w0, #0, #+0x24 (addr 0xffff5828a614)
0xffff5828a5f4    84  ldur x16, [x0, #-1]
0xffff5828a5f8    88  ldr x17, [x26, #120]
0xffff5828a5fc    92  cmp x16, x17
0xffff5828a600    96  b.eq #+0x8 (addr 0xffff5828a608)
0xffff5828a604   100  ret
0xffff5828a608   104  ldur d0, [x0, #7]
0xffff5828a60c   108  scvtf d1, x1, #32
0xffff5828a610   112  b #+0x24 (addr 0xffff5828a634)
0xffff5828a614   116  ldur x16, [x1, #-1]
0xffff5828a618   120  ldr x17, [x26, #120]
0xffff5828a61c   124  cmp x16, x17
0xffff5828a620   128  b.eq #+0xc (addr 0xffff5828a62c)
0xffff5828a624   132  movz x0, #0x1
0xffff5828a628   136  ret
0xffff5828a62c   140  ldur d1, [x1, #7]
0xffff5828a630   144  scvtf d0, x0, #32
0xffff5828a634   148  fcmp d1, d0
0xffff5828a638   152  b.vs #+0x10 (addr 0xffff5828a648)
0xffff5828a63c   156  cset x0, gt
0xffff5828a640   160  csinv x0, x0, xzr, ge
0xffff5828a644   164  ret
0xffff5828a648   168  movn x0, #0x0
0xffff5828a64c   172  ret
0xffff5828a650   176  ldur x10, [x0, #-1]
0xffff5828a654   180  ldur x12, [x1, #-1]
0xffff5828a658   184  ldrb w11, [x10, #11]
0xffff5828a65c   188  ldrb w13, [x12, #11]
0xffff5828a660   192  cmp x11, #0xb1 (177)
0xffff5828a664   196  b.lt #+0x8 (addr 0xffff5828a66c)
0xffff5828a668   200  ret
0xffff5828a66c   204  cmp x11, #0x83 (131)
0xffff5828a670   208  movz x16, #0x83
0xffff5828a674   212  ccmp x13, x16, #nZcv, ne
0xffff5828a678   216  movz x16, #0xb1
0xffff5828a67c   220  ccmp x13, x16, #NzcV, ne
0xffff5828a680   224  b.ge #-0x18 (addr 0xffff5828a668)
0xffff5828a684   228  orr x14, x13, x11
0xffff5828a688   232  tst x14, #0xc0
0xffff5828a68c   236  b.eq #-0x24 (addr 0xffff5828a668)
0xffff5828a690   240  cmp x11, #0x81 (129)
0xffff5828a694   244  b.ne #+0x18 (addr 0xffff5828a6ac)
0xffff5828a698   248  cmp x12, x10
0xffff5828a69c   252  b.ne #+0x10 (addr 0xffff5828a6ac)
0xffff5828a6a0   256  ldur d1, [x1, #7]
0xffff5828a6a4   260  ldur d0, [x0, #7]
0xffff5828a6a8   264  b #-0x74 (addr 0xffff5828a634)
0xffff5828a6ac   268  movz x16, #0x87
0xffff5828a6b0   272  and x14, x13, x16
0xffff5828a6b4   276  movz x16, #0x87
0xffff5828a6b8   280  and x15, x11, x16
0xffff5828a6bc   284  cmp x14, #0x4 (4)
0xffff5828a6c0   288  ccmp x15, #4, #nzcv, eq
0xffff5828a6c4   292  b.ne #+0x5c (addr 0xffff5828a720)
0xffff5828a6c8   296  ldur x10, [x1, #15]
0xffff5828a6cc   300  ldur x11, [x0, #15]
0xffff5828a6d0   304  cmp x10, x11
0xffff5828a6d4   308  b.eq #+0xc (addr 0xffff5828a6e0)
0xffff5828a6d8   312  movz x0, #0x100000000
0xffff5828a6dc   316  ret
0xffff5828a6e0   320  cbnz x10, #+0xc (addr 0xffff5828a6ec)
0xffff5828a6e4   324  movz x0, #0x0
0xffff5828a6e8   328  ret
0xffff5828a6ec   332  asr x10, x10, #32
0xffff5828a6f0   336  add x11, x10, #0x17 (23)
0xffff5828a6f4   340  add x1, x1, x11
0xffff5828a6f8   344  add x0, x0, x11
0xffff5828a6fc   348  neg x10, x10
0xffff5828a700   352  ldrb w11, [x1, x10]
0xffff5828a704   356  ldrb w12, [x0, x10]
0xffff5828a708   360  cmp x11, x12
0xffff5828a70c   364  b.ne #-0x34 (addr 0xffff5828a6d8)
0xffff5828a710   368  add x10, x10, #0x1 (1)
0xffff5828a714   372  cbnz x10, #-0x14 (addr 0xffff5828a700)
0xffff5828a718   376  movz x0, #0x0
0xffff5828a71c   380  ret
0xffff5828a720   384  movz x16, #0xc00000000
0xffff5828a724   388  sub csp, jssp, #0x10 (16)
0xffff5828a728   392  stp fp, lr, [jssp, #-16]!
0xffff5828a72c   396  sub csp, jssp, #0x10 (16)
0xffff5828a730   400  str x16, [jssp, #-8]!
0xffff5828a734   404  ldr x17, pc+172 (addr 0x0000ffff5828a7e0)    ;; object: 0xffff5828a541 <Code: COMPARE_IC>
0xffff5828a738   408  sub csp, jssp, #0x10 (16)
0xffff5828a73c   412  str x17, [jssp, #-8]!
0xffff5828a740   416  add fp, jssp, #0x10 (16)
0xffff5828a744   420  sub csp, jssp, #0x10 (16)
0xffff5828a748   424  stp x0, x1, [jssp, #-16]!
0xffff5828a74c   428  movz x0, #0x2
0xffff5828a750   432  ldr x1, pc+152 (addr 0x0000ffff5828a7e8)    ;; external reference (Runtime::StrictEqual)
0xffff5828a754   436  ldr x16, pc+156 (addr 0x0000ffff5828a7f0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5828a758   440  blr x16
0xffff5828a75c   444  mov jssp, fp
0xffff5828a760   448  ldp fp, lr, [jssp], #16
0xffff5828a764   452  ldr x1, [x26, #64]
0xffff5828a768   456  sub x0, x0, x1
0xffff5828a76c   460  ret
0xffff5828a770   464  movz x16, #0xc00000000
0xffff5828a774   468  sub csp, jssp, #0x10 (16)
0xffff5828a778   472  stp fp, lr, [jssp, #-16]!
0xffff5828a77c   476  sub csp, jssp, #0x10 (16)
0xffff5828a780   480  str x16, [jssp, #-8]!
0xffff5828a784   484  ldr x17, pc+116 (addr 0x0000ffff5828a7f8)    ;; object: 0xffff5828a541 <Code: COMPARE_IC>
0xffff5828a788   488  sub csp, jssp, #0x10 (16)
0xffff5828a78c   492  str x17, [jssp, #-8]!
0xffff5828a790   496  add fp, jssp, #0x10 (16)
0xffff5828a794   500  sub csp, jssp, #0x18 (24)
0xffff5828a798   504  stp lr, x0, [jssp, #-24]!
0xffff5828a79c   508  str x1, [jssp, #16]
0xffff5828a7a0   512  movz x10, #0x2f00000000
0xffff5828a7a4   516  sub csp, jssp, #0x18 (24)
0xffff5828a7a8   520  stp x10, x0, [jssp, #-24]!
0xffff5828a7ac   524  str x1, [jssp, #16]
0xffff5828a7b0   528  movz x0, #0x3
0xffff5828a7b4   532  ldr x1, pc+76 (addr 0x0000ffff5828a800)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5828a7b8   536  ldr x16, pc+80 (addr 0x0000ffff5828a808)    ;; code: STUB, CEntryStub, minor: 4
0xffff5828a7bc   540  blr x16
0xffff5828a7c0   544  add x11, x0, #0x5f (95)
0xffff5828a7c4   548  ldr x1, [jssp, #16]
0xffff5828a7c8   552  ldp lr, x0, [jssp], #24
0xffff5828a7cc   556  mov jssp, fp
0xffff5828a7d0   560  ldp fp, lr, [jssp], #16
0xffff5828a7d4   564  br x11
0xffff5828a7d8   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5828a7dc   572  d63f03e0       constant
0xffff5828a7e0   576  5828a541       constant
0xffff5828a7e4   580  0000ffff       constant
0xffff5828a7e8   584  00e50928       constant
0xffff5828a7ec   588  00000000       constant
0xffff5828a7f0   592  58206060       constant
0xffff5828a7f4   596  0000ffff       constant
0xffff5828a7f8   600  5828a541       constant
0xffff5828a7fc   604  0000ffff       constant
0xffff5828a800   608  00c8a980       constant
0xffff5828a804   612  00000000       constant
0xffff5828a808   616  58206060       constant
0xffff5828a80c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff5828a734  embedded object  (0xffff5828a541 <Code: COMPARE_IC>)
0xffff5828a750  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff5828a754  code target (STUB)  (0xffff58206060)
0xffff5828a784  embedded object  (0xffff5828a541 <Code: COMPARE_IC>)
0xffff5828a7b4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5828a7b8  code target (STUB)  (0xffff58206060)
0xffff5828a7d8  constant pool (size 56)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff5828b020     0  ldur x0, [x1, #-1]
0xffff5828b024     4  ldur x0, [x0, #47]
0xffff5828b028     8  ldur x0, [x0, #191]
0xffff5828b02c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff5828b020     0  ldur x0, [x1, #-1]
0xffff5828b024     4  ldur x0, [x0, #47]
0xffff5828b028     8  ldur x0, [x0, #191]
0xffff5828b02c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff5828b0a0     0  ldur x0, [x1, #-1]
0xffff5828b0a4     4  ldur x0, [x0, #47]
0xffff5828b0a8     8  ldur x0, [x0, #215]
0xffff5828b0ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff5828b0a0     0  ldur x0, [x1, #-1]
0xffff5828b0a4     4  ldur x0, [x0, #47]
0xffff5828b0a8     8  ldur x0, [x0, #215]
0xffff5828b0ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = NameDictionaryLookupStub
name = NameDictionaryLookupStub
compiler = unknown
Instructions (size = 968)
0xffff5828b120     0  ldursw x3, [x0, #35]
0xffff5828b124     4  sub x3, x3, #0x1 (1)
0xffff5828b128     8  ldur x4, [x1, #7]
0xffff5828b12c    12  ldr x5, [x26, #40]
0xffff5828b130    16  add x2, x4, #0x28 (40)
0xffff5828b134    20  and x2, x3, x2, lsr #2
0xffff5828b138    24  add x2, x2, x2, lsl #1
0xffff5828b13c    28  add x2, x0, x2, lsl #3
0xffff5828b140    32  ldur x6, [x2, #55]
0xffff5828b144    36  cmp x6, x5
0xffff5828b148    40  b.eq #+0x398 (addr 0xffff5828b4e0)
0xffff5828b14c    44  cmp x6, x1
0xffff5828b150    48  b.eq #+0x388 (addr 0xffff5828b4d8)
0xffff5828b154    52  ldur x6, [x6, #-1]
0xffff5828b158    56  ldrb w6, [x6, #11]
0xffff5828b15c    60  tst x6, #0xc0
0xffff5828b160    64  movz x16, #0x80
0xffff5828b164    68  ccmp x6, x16, #nZcv, ne
0xffff5828b168    72  b.ne #+0x370 (addr 0xffff5828b4d8)
0xffff5828b16c    76  add x2, x4, #0x3c (60)
0xffff5828b170    80  and x2, x3, x2, lsr #2
0xffff5828b174    84  add x2, x2, x2, lsl #1
0xffff5828b178    88  add x2, x0, x2, lsl #3
0xffff5828b17c    92  ldur x6, [x2, #55]
0xffff5828b180    96  cmp x6, x5
0xffff5828b184   100  b.eq #+0x35c (addr 0xffff5828b4e0)
0xffff5828b188   104  cmp x6, x1
0xffff5828b18c   108  b.eq #+0x34c (addr 0xffff5828b4d8)
0xffff5828b190   112  ldur x6, [x6, #-1]
0xffff5828b194   116  ldrb w6, [x6, #11]
0xffff5828b198   120  tst x6, #0xc0
0xffff5828b19c   124  movz x16, #0x80
0xffff5828b1a0   128  ccmp x6, x16, #nZcv, ne
0xffff5828b1a4   132  b.ne #+0x334 (addr 0xffff5828b4d8)
0xffff5828b1a8   136  add x2, x4, #0x54 (84)
0xffff5828b1ac   140  and x2, x3, x2, lsr #2
0xffff5828b1b0   144  add x2, x2, x2, lsl #1
0xffff5828b1b4   148  add x2, x0, x2, lsl #3
0xffff5828b1b8   152  ldur x6, [x2, #55]
0xffff5828b1bc   156  cmp x6, x5
0xffff5828b1c0   160  b.eq #+0x320 (addr 0xffff5828b4e0)
0xffff5828b1c4   164  cmp x6, x1
0xffff5828b1c8   168  b.eq #+0x310 (addr 0xffff5828b4d8)
0xffff5828b1cc   172  ldur x6, [x6, #-1]
0xffff5828b1d0   176  ldrb w6, [x6, #11]
0xffff5828b1d4   180  tst x6, #0xc0
0xffff5828b1d8   184  movz x16, #0x80
0xffff5828b1dc   188  ccmp x6, x16, #nZcv, ne
0xffff5828b1e0   192  b.ne #+0x2f8 (addr 0xffff5828b4d8)
0xffff5828b1e4   196  add x2, x4, #0x70 (112)
0xffff5828b1e8   200  and x2, x3, x2, lsr #2
0xffff5828b1ec   204  add x2, x2, x2, lsl #1
0xffff5828b1f0   208  add x2, x0, x2, lsl #3
0xffff5828b1f4   212  ldur x6, [x2, #55]
0xffff5828b1f8   216  cmp x6, x5
0xffff5828b1fc   220  b.eq #+0x2e4 (addr 0xffff5828b4e0)
0xffff5828b200   224  cmp x6, x1
0xffff5828b204   228  b.eq #+0x2d4 (addr 0xffff5828b4d8)
0xffff5828b208   232  ldur x6, [x6, #-1]
0xffff5828b20c   236  ldrb w6, [x6, #11]
0xffff5828b210   240  tst x6, #0xc0
0xffff5828b214   244  movz x16, #0x80
0xffff5828b218   248  ccmp x6, x16, #nZcv, ne
0xffff5828b21c   252  b.ne #+0x2bc (addr 0xffff5828b4d8)
0xffff5828b220   256  add x2, x4, #0x90 (144)
0xffff5828b224   260  and x2, x3, x2, lsr #2
0xffff5828b228   264  add x2, x2, x2, lsl #1
0xffff5828b22c   268  add x2, x0, x2, lsl #3
0xffff5828b230   272  ldur x6, [x2, #55]
0xffff5828b234   276  cmp x6, x5
0xffff5828b238   280  b.eq #+0x2a8 (addr 0xffff5828b4e0)
0xffff5828b23c   284  cmp x6, x1
0xffff5828b240   288  b.eq #+0x298 (addr 0xffff5828b4d8)
0xffff5828b244   292  ldur x6, [x6, #-1]
0xffff5828b248   296  ldrb w6, [x6, #11]
0xffff5828b24c   300  tst x6, #0xc0
0xffff5828b250   304  movz x16, #0x80
0xffff5828b254   308  ccmp x6, x16, #nZcv, ne
0xffff5828b258   312  b.ne #+0x280 (addr 0xffff5828b4d8)
0xffff5828b25c   316  add x2, x4, #0xb4 (180)
0xffff5828b260   320  and x2, x3, x2, lsr #2
0xffff5828b264   324  add x2, x2, x2, lsl #1
0xffff5828b268   328  add x2, x0, x2, lsl #3
0xffff5828b26c   332  ldur x6, [x2, #55]
0xffff5828b270   336  cmp x6, x5
0xffff5828b274   340  b.eq #+0x26c (addr 0xffff5828b4e0)
0xffff5828b278   344  cmp x6, x1
0xffff5828b27c   348  b.eq #+0x25c (addr 0xffff5828b4d8)
0xffff5828b280   352  ldur x6, [x6, #-1]
0xffff5828b284   356  ldrb w6, [x6, #11]
0xffff5828b288   360  tst x6, #0xc0
0xffff5828b28c   364  movz x16, #0x80
0xffff5828b290   368  ccmp x6, x16, #nZcv, ne
0xffff5828b294   372  b.ne #+0x244 (addr 0xffff5828b4d8)
0xffff5828b298   376  add x2, x4, #0xdc (220)
0xffff5828b29c   380  and x2, x3, x2, lsr #2
0xffff5828b2a0   384  add x2, x2, x2, lsl #1
0xffff5828b2a4   388  add x2, x0, x2, lsl #3
0xffff5828b2a8   392  ldur x6, [x2, #55]
0xffff5828b2ac   396  cmp x6, x5
0xffff5828b2b0   400  b.eq #+0x230 (addr 0xffff5828b4e0)
0xffff5828b2b4   404  cmp x6, x1
0xffff5828b2b8   408  b.eq #+0x220 (addr 0xffff5828b4d8)
0xffff5828b2bc   412  ldur x6, [x6, #-1]
0xffff5828b2c0   416  ldrb w6, [x6, #11]
0xffff5828b2c4   420  tst x6, #0xc0
0xffff5828b2c8   424  movz x16, #0x80
0xffff5828b2cc   428  ccmp x6, x16, #nZcv, ne
0xffff5828b2d0   432  b.ne #+0x208 (addr 0xffff5828b4d8)
0xffff5828b2d4   436  add x2, x4, #0x108 (264)
0xffff5828b2d8   440  and x2, x3, x2, lsr #2
0xffff5828b2dc   444  add x2, x2, x2, lsl #1
0xffff5828b2e0   448  add x2, x0, x2, lsl #3
0xffff5828b2e4   452  ldur x6, [x2, #55]
0xffff5828b2e8   456  cmp x6, x5
0xffff5828b2ec   460  b.eq #+0x1f4 (addr 0xffff5828b4e0)
0xffff5828b2f0   464  cmp x6, x1
0xffff5828b2f4   468  b.eq #+0x1e4 (addr 0xffff5828b4d8)
0xffff5828b2f8   472  ldur x6, [x6, #-1]
0xffff5828b2fc   476  ldrb w6, [x6, #11]
0xffff5828b300   480  tst x6, #0xc0
0xffff5828b304   484  movz x16, #0x80
0xffff5828b308   488  ccmp x6, x16, #nZcv, ne
0xffff5828b30c   492  b.ne #+0x1cc (addr 0xffff5828b4d8)
0xffff5828b310   496  add x2, x4, #0x138 (312)
0xffff5828b314   500  and x2, x3, x2, lsr #2
0xffff5828b318   504  add x2, x2, x2, lsl #1
0xffff5828b31c   508  add x2, x0, x2, lsl #3
0xffff5828b320   512  ldur x6, [x2, #55]
0xffff5828b324   516  cmp x6, x5
0xffff5828b328   520  b.eq #+0x1b8 (addr 0xffff5828b4e0)
0xffff5828b32c   524  cmp x6, x1
0xffff5828b330   528  b.eq #+0x1a8 (addr 0xffff5828b4d8)
0xffff5828b334   532  ldur x6, [x6, #-1]
0xffff5828b338   536  ldrb w6, [x6, #11]
0xffff5828b33c   540  tst x6, #0xc0
0xffff5828b340   544  movz x16, #0x80
0xffff5828b344   548  ccmp x6, x16, #nZcv, ne
0xffff5828b348   552  b.ne #+0x190 (addr 0xffff5828b4d8)
0xffff5828b34c   556  add x2, x4, #0x16c (364)
0xffff5828b350   560  and x2, x3, x2, lsr #2
0xffff5828b354   564  add x2, x2, x2, lsl #1
0xffff5828b358   568  add x2, x0, x2, lsl #3
0xffff5828b35c   572  ldur x6, [x2, #55]
0xffff5828b360   576  cmp x6, x5
0xffff5828b364   580  b.eq #+0x17c (addr 0xffff5828b4e0)
0xffff5828b368   584  cmp x6, x1
0xffff5828b36c   588  b.eq #+0x16c (addr 0xffff5828b4d8)
0xffff5828b370   592  ldur x6, [x6, #-1]
0xffff5828b374   596  ldrb w6, [x6, #11]
0xffff5828b378   600  tst x6, #0xc0
0xffff5828b37c   604  movz x16, #0x80
0xffff5828b380   608  ccmp x6, x16, #nZcv, ne
0xffff5828b384   612  b.ne #+0x154 (addr 0xffff5828b4d8)
0xffff5828b388   616  add x2, x4, #0x1a4 (420)
0xffff5828b38c   620  and x2, x3, x2, lsr #2
0xffff5828b390   624  add x2, x2, x2, lsl #1
0xffff5828b394   628  add x2, x0, x2, lsl #3
0xffff5828b398   632  ldur x6, [x2, #55]
0xffff5828b39c   636  cmp x6, x5
0xffff5828b3a0   640  b.eq #+0x140 (addr 0xffff5828b4e0)
0xffff5828b3a4   644  cmp x6, x1
0xffff5828b3a8   648  b.eq #+0x130 (addr 0xffff5828b4d8)
0xffff5828b3ac   652  ldur x6, [x6, #-1]
0xffff5828b3b0   656  ldrb w6, [x6, #11]
0xffff5828b3b4   660  tst x6, #0xc0
0xffff5828b3b8   664  movz x16, #0x80
0xffff5828b3bc   668  ccmp x6, x16, #nZcv, ne
0xffff5828b3c0   672  b.ne #+0x118 (addr 0xffff5828b4d8)
0xffff5828b3c4   676  add x2, x4, #0x1e0 (480)
0xffff5828b3c8   680  and x2, x3, x2, lsr #2
0xffff5828b3cc   684  add x2, x2, x2, lsl #1
0xffff5828b3d0   688  add x2, x0, x2, lsl #3
0xffff5828b3d4   692  ldur x6, [x2, #55]
0xffff5828b3d8   696  cmp x6, x5
0xffff5828b3dc   700  b.eq #+0x104 (addr 0xffff5828b4e0)
0xffff5828b3e0   704  cmp x6, x1
0xffff5828b3e4   708  b.eq #+0xf4 (addr 0xffff5828b4d8)
0xffff5828b3e8   712  ldur x6, [x6, #-1]
0xffff5828b3ec   716  ldrb w6, [x6, #11]
0xffff5828b3f0   720  tst x6, #0xc0
0xffff5828b3f4   724  movz x16, #0x80
0xffff5828b3f8   728  ccmp x6, x16, #nZcv, ne
0xffff5828b3fc   732  b.ne #+0xdc (addr 0xffff5828b4d8)
0xffff5828b400   736  add x2, x4, #0x220 (544)
0xffff5828b404   740  and x2, x3, x2, lsr #2
0xffff5828b408   744  add x2, x2, x2, lsl #1
0xffff5828b40c   748  add x2, x0, x2, lsl #3
0xffff5828b410   752  ldur x6, [x2, #55]
0xffff5828b414   756  cmp x6, x5
0xffff5828b418   760  b.eq #+0xc8 (addr 0xffff5828b4e0)
0xffff5828b41c   764  cmp x6, x1
0xffff5828b420   768  b.eq #+0xb8 (addr 0xffff5828b4d8)
0xffff5828b424   772  ldur x6, [x6, #-1]
0xffff5828b428   776  ldrb w6, [x6, #11]
0xffff5828b42c   780  tst x6, #0xc0
0xffff5828b430   784  movz x16, #0x80
0xffff5828b434   788  ccmp x6, x16, #nZcv, ne
0xffff5828b438   792  b.ne #+0xa0 (addr 0xffff5828b4d8)
0xffff5828b43c   796  add x2, x4, #0x264 (612)
0xffff5828b440   800  and x2, x3, x2, lsr #2
0xffff5828b444   804  add x2, x2, x2, lsl #1
0xffff5828b448   808  add x2, x0, x2, lsl #3
0xffff5828b44c   812  ldur x6, [x2, #55]
0xffff5828b450   816  cmp x6, x5
0xffff5828b454   820  b.eq #+0x8c (addr 0xffff5828b4e0)
0xffff5828b458   824  cmp x6, x1
0xffff5828b45c   828  b.eq #+0x7c (addr 0xffff5828b4d8)
0xffff5828b460   832  ldur x6, [x6, #-1]
0xffff5828b464   836  ldrb w6, [x6, #11]
0xffff5828b468   840  tst x6, #0xc0
0xffff5828b46c   844  movz x16, #0x80
0xffff5828b470   848  ccmp x6, x16, #nZcv, ne
0xffff5828b474   852  b.ne #+0x64 (addr 0xffff5828b4d8)
0xffff5828b478   856  add x2, x4, #0x2ac (684)
0xffff5828b47c   860  and x2, x3, x2, lsr #2
0xffff5828b480   864  add x2, x2, x2, lsl #1
0xffff5828b484   868  add x2, x0, x2, lsl #3
0xffff5828b488   872  ldur x6, [x2, #55]
0xffff5828b48c   876  cmp x6, x5
0xffff5828b490   880  b.eq #+0x50 (addr 0xffff5828b4e0)
0xffff5828b494   884  cmp x6, x1
0xffff5828b498   888  b.eq #+0x40 (addr 0xffff5828b4d8)
0xffff5828b49c   892  ldur x6, [x6, #-1]
0xffff5828b4a0   896  ldrb w6, [x6, #11]
0xffff5828b4a4   900  tst x6, #0xc0
0xffff5828b4a8   904  movz x16, #0x80
0xffff5828b4ac   908  ccmp x6, x16, #nZcv, ne
0xffff5828b4b0   912  b.ne #+0x28 (addr 0xffff5828b4d8)
0xffff5828b4b4   916  add x2, x4, #0x2f8 (760)
0xffff5828b4b8   920  and x2, x3, x2, lsr #2
0xffff5828b4bc   924  add x2, x2, x2, lsl #1
0xffff5828b4c0   928  add x2, x0, x2, lsl #3
0xffff5828b4c4   932  ldur x6, [x2, #55]
0xffff5828b4c8   936  cmp x6, x5
0xffff5828b4cc   940  b.eq #+0x14 (addr 0xffff5828b4e0)
0xffff5828b4d0   944  cmp x6, x1
0xffff5828b4d4   948  b.eq #+0x4 (addr 0xffff5828b4d8)
0xffff5828b4d8   952  movz x0, #0x1
0xffff5828b4dc   956  ret
0xffff5828b4e0   960  movz x0, #0x0
0xffff5828b4e4   964  ret


RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = hasOwnProperty
compiler = unknown
Instructions (size = 656)
0xffff5828b560     0  sub csp, jssp, #0x8 (8)
0xffff5828b564     4  str x3, [jssp, #-8]!
0xffff5828b568     8  sub csp, jssp, #0x8 (8)
0xffff5828b56c    12  str x0, [jssp, #-8]!
0xffff5828b570    16  ldr x0, pc+560 (addr 0x0000ffff5828b7a0)    ;; object: 0x39c63e59 Cell for 0
0xffff5828b574    20  ldur x0, [x0, #7]
0xffff5828b578    24  cmp x0, #0x0 (0)
0xffff5828b57c    28  b.ne #+0x1f8 (addr 0xffff5828b774)
0xffff5828b580    32  ldur x4, [x1, #-1]
0xffff5828b584    36  ldrb w0, [x4, #12]
0xffff5828b588    40  movz x16, #0x44
0xffff5828b58c    44  tst x0, x16
0xffff5828b590    48  b.ne #+0x1e4 (addr 0xffff5828b774)
0xffff5828b594    52  ldrb w0, [x4, #11]
0xffff5828b598    56  cmp x0, #0xb1 (177)
0xffff5828b59c    60  b.lt #+0x1d8 (addr 0xffff5828b774)
0xffff5828b5a0    64  ldur x0, [x1, #7]
0xffff5828b5a4    68  ldur x4, [x0, #-1]
0xffff5828b5a8    72  ldr x16, [x26, #432]
0xffff5828b5ac    76  cmp x4, x16
0xffff5828b5b0    80  b.ne #+0x1c4 (addr 0xffff5828b774)
0xffff5828b5b4    84  ldursw x4, [x0, #35]
0xffff5828b5b8    88  sub x4, x4, #0x1 (1)
0xffff5828b5bc    92  movz x16, #0x177e
0xffff5828b5c0    96  movk x16, #0x1424, lsl #16
0xffff5828b5c4   100  and x4, x4, x16
0xffff5828b5c8   104  add x4, x4, x4, lsl #1
0xffff5828b5cc   108  add x4, x0, x4, lsl #3
0xffff5828b5d0   112  ldur x4, [x4, #55]
0xffff5828b5d4   116  ldr x16, [x26, #40]
0xffff5828b5d8   120  cmp x4, x16
0xffff5828b5dc   124  b.eq #+0x188 (addr 0xffff5828b764)
0xffff5828b5e0   128  ldr x16, pc+456 (addr 0x0000ffff5828b7a8)    ;; object: 0x39c417b1 <String[14]: hasOwnProperty>
0xffff5828b5e4   132  cmp x4, x16
0xffff5828b5e8   136  b.eq #+0x18c (addr 0xffff5828b774)
0xffff5828b5ec   140  ldr x16, [x26, #88]
0xffff5828b5f0   144  cmp x4, x16
0xffff5828b5f4   148  b.eq #+0x1c (addr 0xffff5828b610)
0xffff5828b5f8   152  ldur x4, [x4, #-1]
0xffff5828b5fc   156  ldrb w4, [x4, #11]
0xffff5828b600   160  tst x4, #0xc0
0xffff5828b604   164  movz x16, #0x80
0xffff5828b608   168  ccmp x4, x16, #nZcv, ne
0xffff5828b60c   172  b.ne #+0x168 (addr 0xffff5828b774)
0xffff5828b610   176  ldursw x4, [x0, #35]
0xffff5828b614   180  sub x4, x4, #0x1 (1)
0xffff5828b618   184  movz x16, #0x177f
0xffff5828b61c   188  movk x16, #0x1424, lsl #16
0xffff5828b620   192  and x4, x4, x16
0xffff5828b624   196  add x4, x4, x4, lsl #1
0xffff5828b628   200  add x4, x0, x4, lsl #3
0xffff5828b62c   204  ldur x4, [x4, #55]
0xffff5828b630   208  ldr x16, [x26, #40]
0xffff5828b634   212  cmp x4, x16
0xffff5828b638   216  b.eq #+0x12c (addr 0xffff5828b764)
0xffff5828b63c   220  ldr x16, pc+372 (addr 0x0000ffff5828b7b0)    ;; object: 0x39c417b1 <String[14]: hasOwnProperty>
0xffff5828b640   224  cmp x4, x16
0xffff5828b644   228  b.eq #+0x130 (addr 0xffff5828b774)
0xffff5828b648   232  ldr x16, [x26, #88]
0xffff5828b64c   236  cmp x4, x16
0xffff5828b650   240  b.eq #+0x1c (addr 0xffff5828b66c)
0xffff5828b654   244  ldur x4, [x4, #-1]
0xffff5828b658   248  ldrb w4, [x4, #11]
0xffff5828b65c   252  tst x4, #0xc0
0xffff5828b660   256  movz x16, #0x80
0xffff5828b664   260  ccmp x4, x16, #nZcv, ne
0xffff5828b668   264  b.ne #+0x10c (addr 0xffff5828b774)
0xffff5828b66c   268  ldursw x4, [x0, #35]
0xffff5828b670   272  sub x4, x4, #0x1 (1)
0xffff5828b674   276  movz x16, #0x1781
0xffff5828b678   280  movk x16, #0x1424, lsl #16
0xffff5828b67c   284  and x4, x4, x16
0xffff5828b680   288  add x4, x4, x4, lsl #1
0xffff5828b684   292  add x4, x0, x4, lsl #3
0xffff5828b688   296  ldur x4, [x4, #55]
0xffff5828b68c   300  ldr x16, [x26, #40]
0xffff5828b690   304  cmp x4, x16
0xffff5828b694   308  b.eq #+0xd0 (addr 0xffff5828b764)
0xffff5828b698   312  ldr x16, pc+288 (addr 0x0000ffff5828b7b8)    ;; object: 0x39c417b1 <String[14]: hasOwnProperty>
0xffff5828b69c   316  cmp x4, x16
0xffff5828b6a0   320  b.eq #+0xd4 (addr 0xffff5828b774)
0xffff5828b6a4   324  ldr x16, [x26, #88]
0xffff5828b6a8   328  cmp x4, x16
0xffff5828b6ac   332  b.eq #+0x1c (addr 0xffff5828b6c8)
0xffff5828b6b0   336  ldur x4, [x4, #-1]
0xffff5828b6b4   340  ldrb w4, [x4, #11]
0xffff5828b6b8   344  tst x4, #0xc0
0xffff5828b6bc   348  movz x16, #0x80
0xffff5828b6c0   352  ccmp x4, x16, #nZcv, ne
0xffff5828b6c4   356  b.ne #+0xb0 (addr 0xffff5828b774)
0xffff5828b6c8   360  ldursw x4, [x0, #35]
0xffff5828b6cc   364  sub x4, x4, #0x1 (1)
0xffff5828b6d0   368  movz x16, #0x1784
0xffff5828b6d4   372  movk x16, #0x1424, lsl #16
0xffff5828b6d8   376  and x4, x4, x16
0xffff5828b6dc   380  add x4, x4, x4, lsl #1
0xffff5828b6e0   384  add x4, x0, x4, lsl #3
0xffff5828b6e4   388  ldur x4, [x4, #55]
0xffff5828b6e8   392  ldr x16, [x26, #40]
0xffff5828b6ec   396  cmp x4, x16
0xffff5828b6f0   400  b.eq #+0x74 (addr 0xffff5828b764)
0xffff5828b6f4   404  ldr x16, pc+204 (addr 0x0000ffff5828b7c0)    ;; object: 0x39c417b1 <String[14]: hasOwnProperty>
0xffff5828b6f8   408  cmp x4, x16
0xffff5828b6fc   412  b.eq #+0x78 (addr 0xffff5828b774)
0xffff5828b700   416  ldr x16, [x26, #88]
0xffff5828b704   420  cmp x4, x16
0xffff5828b708   424  b.eq #+0x1c (addr 0xffff5828b724)
0xffff5828b70c   428  ldur x4, [x4, #-1]
0xffff5828b710   432  ldrb w4, [x4, #11]
0xffff5828b714   436  tst x4, #0xc0
0xffff5828b718   440  movz x16, #0x80
0xffff5828b71c   444  ccmp x4, x16, #nZcv, ne
0xffff5828b720   448  b.ne #+0x54 (addr 0xffff5828b774)
0xffff5828b724   452  sub csp, jssp, #0x38 (56)
0xffff5828b728   456  stp x3, x5, [jssp, #-32]!
0xffff5828b72c   460  stp x6, lr, [jssp, #16]
0xffff5828b730   464  stp x0, x1, [jssp, #-24]!
0xffff5828b734   468  str x2, [jssp, #16]
0xffff5828b738   472  ldur x0, [x1, #7]
0xffff5828b73c   476  ldr x1, pc+140 (addr 0x0000ffff5828b7c8)    ;; object: 0x39c417b1 <String[14]: hasOwnProperty>
0xffff5828b740   480  ldr x16, pc+144 (addr 0x0000ffff5828b7d0)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff5828b744   484  blr x16
0xffff5828b748   488  mov x4, x0
0xffff5828b74c   492  ldp x2, x3, [jssp, #16]
0xffff5828b750   496  ldp x0, x1, [jssp], #32
0xffff5828b754   500  ldr lr, [jssp, #16]
0xffff5828b758   504  ldp x5, x6, [jssp], #24
0xffff5828b75c   508  cbz x4, #+0x8 (addr 0xffff5828b764)
0xffff5828b760   512  b #+0x14 (addr 0xffff5828b774)
0xffff5828b764   516  ldr x3, pc+116 (addr 0x0000ffff5828b7d8)    ;; object: 0x39cc7a51 WeakCell for 0x39c3ff39 <an Object with map 0x32b0c081>
0xffff5828b768   520  ldur x3, [x3, #7]
0xffff5828b76c   524  tbz w3, #0, #+0x8 (addr 0xffff5828b774)
0xffff5828b770   528  b #+0x14 (addr 0xffff5828b784)
0xffff5828b774   532  ldr x0, [jssp], #8
0xffff5828b778   536  ldr x3, [jssp], #8
0xffff5828b77c   540  ldr x16, pc+100 (addr 0x0000ffff5828b7e0)    ;; code: BUILTIN
0xffff5828b780   544  br x16
0xffff5828b784   548  add jssp, jssp, #0x10 (16)
0xffff5828b788   552  mov x1, x3
0xffff5828b78c   556  ldr x16, pc+92 (addr 0x0000ffff5828b7e8)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff5828b790   560  br x16
0xffff5828b794   564  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff5828b798   568  d63f03e0       constant
0xffff5828b79c   572  d503201f       constant
0xffff5828b7a0   576  39c63e59       constant
0xffff5828b7a4   580  00000000       constant
0xffff5828b7a8   584  39c417b1       constant
0xffff5828b7ac   588  00000000       constant
0xffff5828b7b0   592  39c417b1       constant
0xffff5828b7b4   596  00000000       constant
0xffff5828b7b8   600  39c417b1       constant
0xffff5828b7bc   604  00000000       constant
0xffff5828b7c0   608  39c417b1       constant
0xffff5828b7c4   612  00000000       constant
0xffff5828b7c8   616  39c417b1       constant
0xffff5828b7cc   620  00000000       constant
0xffff5828b7d0   624  5828b120       constant
0xffff5828b7d4   628  0000ffff       constant
0xffff5828b7d8   632  39cc7a51       constant
0xffff5828b7dc   636  00000000       constant
0xffff5828b7e0   640  582222e0       constant
0xffff5828b7e4   644  0000ffff       constant
0xffff5828b7e8   648  582431a0       constant
0xffff5828b7ec   652  0000ffff       constant


RelocInfo (size = 26)
0xffff5828b570  embedded object  (0x39c63e59 Cell for 0)
0xffff5828b5e0  embedded object  (0x39c417b1 <String[14]: hasOwnProperty>)
0xffff5828b63c  embedded object  (0x39c417b1 <String[14]: hasOwnProperty>)
0xffff5828b698  embedded object  (0x39c417b1 <String[14]: hasOwnProperty>)
0xffff5828b6f4  embedded object  (0x39c417b1 <String[14]: hasOwnProperty>)
0xffff5828b73c  embedded object  (0x39c417b1 <String[14]: hasOwnProperty>)
0xffff5828b740  code target (STUB)  (0xffff5828b120)
0xffff5828b764  embedded object  (0x39cc7a51 WeakCell for 0x39c3ff39 <an Object with map 0x32b0c081>)
0xffff5828b77c  code target (BUILTIN)  (0xffff582222e0)
0xffff5828b78c  code target (HANDLER)  (0xffff582431a0)
0xffff5828b794  constant pool (size 92)

kind = HANDLER
major_key = <NoCache>Stub
name = push
compiler = unknown
Instructions (size = 120)
0xffff5828b860     0  sub csp, jssp, #0x8 (8)
0xffff5828b864     4  str x3, [jssp, #-8]!
0xffff5828b868     8  sub csp, jssp, #0x8 (8)
0xffff5828b86c    12  str x0, [jssp, #-8]!
0xffff5828b870    16  ldr x0, pc+72 (addr 0x0000ffff5828b8b8)    ;; object: 0x39cc7b09 Cell for 0
0xffff5828b874    20  ldur x0, [x0, #7]
0xffff5828b878    24  cmp x0, #0x0 (0)
0xffff5828b87c    28  b.ne #+0x14 (addr 0xffff5828b890)
0xffff5828b880    32  ldr x3, pc+64 (addr 0x0000ffff5828b8c0)    ;; object: 0x39cc7b19 WeakCell for 0x4f926419 <JS Array[0]>
0xffff5828b884    36  ldur x3, [x3, #7]
0xffff5828b888    40  tbz w3, #0, #+0x8 (addr 0xffff5828b890)
0xffff5828b88c    44  b #+0x14 (addr 0xffff5828b8a0)
0xffff5828b890    48  ldr x0, [jssp], #8
0xffff5828b894    52  ldr x3, [jssp], #8
0xffff5828b898    56  ldr x16, pc+48 (addr 0x0000ffff5828b8c8)    ;; code: BUILTIN
0xffff5828b89c    60  br x16
0xffff5828b8a0    64  add jssp, jssp, #0x10 (16)
0xffff5828b8a4    68  mov x1, x3
0xffff5828b8a8    72  ldr x16, pc+40 (addr 0x0000ffff5828b8d0)    ;; code: HANDLER, LoadConstantStub, minor: 7
0xffff5828b8ac    76  br x16
0xffff5828b8b0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5828b8b4    84  d63f03e0       constant
0xffff5828b8b8    88  39cc7b09       constant
0xffff5828b8bc    92  00000000       constant
0xffff5828b8c0    96  39cc7b19       constant
0xffff5828b8c4   100  00000000       constant
0xffff5828b8c8   104  582222e0       constant
0xffff5828b8cc   108  0000ffff       constant
0xffff5828b8d0   112  5828b0a0       constant
0xffff5828b8d4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff5828b870  embedded object  (0x39cc7b09 Cell for 0)
0xffff5828b880  embedded object  (0x39cc7b19 WeakCell for 0x4f926419 <JS Array[0]>)
0xffff5828b898  code target (BUILTIN)  (0xffff582222e0)
0xffff5828b8a8  code target (HANDLER)  (0xffff5828b0a0)
0xffff5828b8b0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff5828b940     0  tbz w0, #0, #+0x90 (addr 0xffff5828b9d0)
0xffff5828b944     4  mov x2, x0
0xffff5828b948     8  stur x2, [x1, #23]
0xffff5828b94c    12  add x3, x1, #0x17 (23)
0xffff5828b950    16  and x2, x2, #0xfffffffffff00000
0xffff5828b954    20  ldr x2, [x2, #8]
0xffff5828b958    24  tbz w2, #1, #+0x24 (addr 0xffff5828b97c)
0xffff5828b95c    28  and x2, x1, #0xfffffffffff00000
0xffff5828b960    32  ldr x2, [x2, #8]
0xffff5828b964    36  tbz w2, #2, #+0x18 (addr 0xffff5828b97c)
0xffff5828b968    40  sub csp, jssp, #0x8 (8)
0xffff5828b96c    44  str lr, [jssp, #-8]!
0xffff5828b970    48  ldr x16, pc+80 (addr 0x0000ffff5828b9c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828b974    52  blr x16
0xffff5828b978    56  ldr lr, [jssp], #8
0xffff5828b97c    60  stur x5, [x1, #-1]
0xffff5828b980    64  tbz w5, #0, #+0x34 (addr 0xffff5828b9b4)
0xffff5828b984    68  sub x2, x1, #0x1 (1)
0xffff5828b988    72  and x5, x5, #0xfffffffffff00000
0xffff5828b98c    76  ldr x5, [x5, #8]
0xffff5828b990    80  tbz w5, #1, #+0x24 (addr 0xffff5828b9b4)
0xffff5828b994    84  and x5, x1, #0xfffffffffff00000
0xffff5828b998    88  ldr x5, [x5, #8]
0xffff5828b99c    92  tbz w5, #2, #+0x18 (addr 0xffff5828b9b4)
0xffff5828b9a0    96  sub csp, jssp, #0x8 (8)
0xffff5828b9a4   100  str lr, [jssp, #-8]!
0xffff5828b9a8   104  ldr x16, pc+32 (addr 0x0000ffff5828b9c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5828b9ac   108  blr x16
0xffff5828b9b0   112  ldr lr, [jssp], #8
0xffff5828b9b4   116  ret
0xffff5828b9b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5828b9bc   124  d63f03e0       constant
0xffff5828b9c0   128  582170c0       constant
0xffff5828b9c4   132  0000ffff       constant
0xffff5828b9c8   136  58238080       constant
0xffff5828b9cc   140  0000ffff       constant
0xffff5828b9d0   144  movz x16, #0x0
0xffff5828b9d4   148  sub csp, jssp, #0x10 (16)
0xffff5828b9d8   152  stp fp, lr, [jssp, #-16]!
0xffff5828b9dc   156  bl #+0x4 (addr 0xffff5828b9e0)
0xffff5828b9e0   160  movz x17, #0xa00000000
0xffff5828b9e4   164  sub csp, jssp, #0x10 (16)
0xffff5828b9e8   168  stp x17, cp, [jssp, #-16]!
0xffff5828b9ec   172  add fp, jssp, #0x10 (16)
0xffff5828b9f0   176  ldr x17, pc+24 (addr 0x0000ffff5828ba08)    ;; lazy deoptimization bailout 0
0xffff5828b9f4   180  add x17, x17, x16
0xffff5828b9f8   184  br x17
0xffff5828b9fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828ba00   192  d63f03e0       constant
0xffff5828ba04   196  d503201f       constant
0xffff5828ba08   200  58006000       constant
0xffff5828ba0c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5828b970  code target (STUB)  (0xffff582170c0)
0xffff5828b9a8  code target (STUB)  (0xffff58238080)
0xffff5828b9b8  constant pool (size 24)
0xffff5828b9f0  runtime entry
0xffff5828b9fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff5828b940     0  tbz w0, #0, #+0x90 (addr 0xffff5828b9d0)
0xffff5828b944     4  mov x2, x0
0xffff5828b948     8  stur x2, [x1, #23]
0xffff5828b94c    12  add x3, x1, #0x17 (23)
0xffff5828b950    16  and x2, x2, #0xfffffffffff00000
0xffff5828b954    20  ldr x2, [x2, #8]
0xffff5828b958    24  tbz w2, #1, #+0x24 (addr 0xffff5828b97c)
0xffff5828b95c    28  and x2, x1, #0xfffffffffff00000
0xffff5828b960    32  ldr x2, [x2, #8]
0xffff5828b964    36  tbz w2, #2, #+0x18 (addr 0xffff5828b97c)
0xffff5828b968    40  sub csp, jssp, #0x8 (8)
0xffff5828b96c    44  str lr, [jssp, #-8]!
0xffff5828b970    48  ldr x16, pc+80 (addr 0x0000ffff5828b9c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828b974    52  blr x16
0xffff5828b978    56  ldr lr, [jssp], #8
0xffff5828b97c    60  stur x5, [x1, #-1]
0xffff5828b980    64  tbz w5, #0, #+0x34 (addr 0xffff5828b9b4)
0xffff5828b984    68  sub x2, x1, #0x1 (1)
0xffff5828b988    72  and x5, x5, #0xfffffffffff00000
0xffff5828b98c    76  ldr x5, [x5, #8]
0xffff5828b990    80  tbz w5, #1, #+0x24 (addr 0xffff5828b9b4)
0xffff5828b994    84  and x5, x1, #0xfffffffffff00000
0xffff5828b998    88  ldr x5, [x5, #8]
0xffff5828b99c    92  tbz w5, #2, #+0x18 (addr 0xffff5828b9b4)
0xffff5828b9a0    96  sub csp, jssp, #0x8 (8)
0xffff5828b9a4   100  str lr, [jssp, #-8]!
0xffff5828b9a8   104  ldr x16, pc+32 (addr 0x0000ffff5828b9c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5828b9ac   108  blr x16
0xffff5828b9b0   112  ldr lr, [jssp], #8
0xffff5828b9b4   116  ret
0xffff5828b9b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5828b9bc   124  d63f03e0       constant
0xffff5828b9c0   128  582170c0       constant
0xffff5828b9c4   132  0000ffff       constant
0xffff5828b9c8   136  58238080       constant
0xffff5828b9cc   140  0000ffff       constant
0xffff5828b9d0   144  movz x16, #0x0
0xffff5828b9d4   148  sub csp, jssp, #0x10 (16)
0xffff5828b9d8   152  stp fp, lr, [jssp, #-16]!
0xffff5828b9dc   156  bl #+0x4 (addr 0xffff5828b9e0)
0xffff5828b9e0   160  movz x17, #0xa00000000
0xffff5828b9e4   164  sub csp, jssp, #0x10 (16)
0xffff5828b9e8   168  stp x17, cp, [jssp, #-16]!
0xffff5828b9ec   172  add fp, jssp, #0x10 (16)
0xffff5828b9f0   176  ldr x17, pc+24 (addr 0x0000ffff5828ba08)    ;; lazy deoptimization bailout 0
0xffff5828b9f4   180  add x17, x17, x16
0xffff5828b9f8   184  br x17
0xffff5828b9fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828ba00   192  d63f03e0       constant
0xffff5828ba04   196  d503201f       constant
0xffff5828ba08   200  58006000       constant
0xffff5828ba0c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5828b970  code target (STUB)  (0xffff582170c0)
0xffff5828b9a8  code target (STUB)  (0xffff58238080)
0xffff5828b9b8  constant pool (size 24)
0xffff5828b9f0  runtime entry
0xffff5828b9fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = filename
compiler = unknown
Instructions (size = 152)
0xffff5828ba80     0  sub csp, jssp, #0x8 (8)
0xffff5828ba84     4  str x3, [jssp, #-8]!
0xffff5828ba88     8  sub csp, jssp, #0x8 (8)
0xffff5828ba8c    12  str x4, [jssp, #-8]!
0xffff5828ba90    16  ldr x3, pc+88 (addr 0x0000ffff5828bae8)    ;; object: 0x39cc7ba9 Cell for 0
0xffff5828ba94    20  ldur x3, [x3, #7]
0xffff5828ba98    24  cmp x3, #0x0 (0)
0xffff5828ba9c    28  b.ne #+0x30 (addr 0xffff5828bacc)
0xffff5828baa0    32  tbz w0, #0, #+0x2c (addr 0xffff5828bacc)
0xffff5828baa4    36  ldr x5, pc+76 (addr 0x0000ffff5828baf0)    ;; object: 0x39cc2219 WeakCell for 0x32b1b2d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828baa8    40  ldur x5, [x5, #7]
0xffff5828baac    44  tbz w5, #0, #+0x20 (addr 0xffff5828bacc)
0xffff5828bab0    48  ldursw x4, [x5, #15]
0xffff5828bab4    52  tbnz w4, #23, #+0x18 (addr 0xffff5828bacc)
0xffff5828bab8    56  ldr x4, [jssp], #8
0xffff5828babc    60  ldr x3, [jssp], #8
0xffff5828bac0    64  ldr x2, pc+56 (addr 0x0000ffff5828baf8)    ;; object: 0x39cb9cf1 <String[8]: filename>
0xffff5828bac4    68  ldr x16, pc+60 (addr 0x0000ffff5828bb00)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff5828bac8    72  br x16
0xffff5828bacc    76  ldr x2, pc+60 (addr 0x0000ffff5828bb08)    ;; object: 0x39cb9cf1 <String[8]: filename>
0xffff5828bad0    80  ldr x4, [jssp], #8
0xffff5828bad4    84  ldr x3, [jssp], #8
0xffff5828bad8    88  ldr x16, pc+56 (addr 0x0000ffff5828bb10)    ;; code: BUILTIN
0xffff5828badc    92  br x16
0xffff5828bae0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5828bae4   100  d63f03e0       constant
0xffff5828bae8   104  39cc7ba9       constant
0xffff5828baec   108  00000000       constant
0xffff5828baf0   112  39cc2219       constant
0xffff5828baf4   116  00000000       constant
0xffff5828baf8   120  39cb9cf1       constant
0xffff5828bafc   124  00000000       constant
0xffff5828bb00   128  5828b940       constant
0xffff5828bb04   132  0000ffff       constant
0xffff5828bb08   136  39cb9cf1       constant
0xffff5828bb0c   140  00000000       constant
0xffff5828bb10   144  58222420       constant
0xffff5828bb14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff5828ba90  embedded object  (0x39cc7ba9 Cell for 0)
0xffff5828baa4  embedded object  (0x39cc2219 WeakCell for 0x32b1b2d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828bac0  embedded object  (0x39cb9cf1 <String[8]: filename>)
0xffff5828bac4  code target (HANDLER)  (0xffff5828b940)
0xffff5828bacc  embedded object  (0x39cb9cf1 <String[8]: filename>)
0xffff5828bad8  code target (BUILTIN)  (0xffff58222420)
0xffff5828bae0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff5828bb80     0  tbz w0, #0, #+0x90 (addr 0xffff5828bc10)
0xffff5828bb84     4  mov x2, x0
0xffff5828bb88     8  stur x2, [x1, #31]
0xffff5828bb8c    12  add x3, x1, #0x1f (31)
0xffff5828bb90    16  and x2, x2, #0xfffffffffff00000
0xffff5828bb94    20  ldr x2, [x2, #8]
0xffff5828bb98    24  tbz w2, #1, #+0x24 (addr 0xffff5828bbbc)
0xffff5828bb9c    28  and x2, x1, #0xfffffffffff00000
0xffff5828bba0    32  ldr x2, [x2, #8]
0xffff5828bba4    36  tbz w2, #2, #+0x18 (addr 0xffff5828bbbc)
0xffff5828bba8    40  sub csp, jssp, #0x8 (8)
0xffff5828bbac    44  str lr, [jssp, #-8]!
0xffff5828bbb0    48  ldr x16, pc+80 (addr 0x0000ffff5828bc00)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828bbb4    52  blr x16
0xffff5828bbb8    56  ldr lr, [jssp], #8
0xffff5828bbbc    60  stur x5, [x1, #-1]
0xffff5828bbc0    64  tbz w5, #0, #+0x34 (addr 0xffff5828bbf4)
0xffff5828bbc4    68  sub x2, x1, #0x1 (1)
0xffff5828bbc8    72  and x5, x5, #0xfffffffffff00000
0xffff5828bbcc    76  ldr x5, [x5, #8]
0xffff5828bbd0    80  tbz w5, #1, #+0x24 (addr 0xffff5828bbf4)
0xffff5828bbd4    84  and x5, x1, #0xfffffffffff00000
0xffff5828bbd8    88  ldr x5, [x5, #8]
0xffff5828bbdc    92  tbz w5, #2, #+0x18 (addr 0xffff5828bbf4)
0xffff5828bbe0    96  sub csp, jssp, #0x8 (8)
0xffff5828bbe4   100  str lr, [jssp, #-8]!
0xffff5828bbe8   104  ldr x16, pc+32 (addr 0x0000ffff5828bc08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5828bbec   108  blr x16
0xffff5828bbf0   112  ldr lr, [jssp], #8
0xffff5828bbf4   116  ret
0xffff5828bbf8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5828bbfc   124  d63f03e0       constant
0xffff5828bc00   128  582170c0       constant
0xffff5828bc04   132  0000ffff       constant
0xffff5828bc08   136  58238080       constant
0xffff5828bc0c   140  0000ffff       constant
0xffff5828bc10   144  movz x16, #0x0
0xffff5828bc14   148  sub csp, jssp, #0x10 (16)
0xffff5828bc18   152  stp fp, lr, [jssp, #-16]!
0xffff5828bc1c   156  bl #+0x4 (addr 0xffff5828bc20)
0xffff5828bc20   160  movz x17, #0xa00000000
0xffff5828bc24   164  sub csp, jssp, #0x10 (16)
0xffff5828bc28   168  stp x17, cp, [jssp, #-16]!
0xffff5828bc2c   172  add fp, jssp, #0x10 (16)
0xffff5828bc30   176  ldr x17, pc+24 (addr 0x0000ffff5828bc48)    ;; lazy deoptimization bailout 0
0xffff5828bc34   180  add x17, x17, x16
0xffff5828bc38   184  br x17
0xffff5828bc3c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828bc40   192  d63f03e0       constant
0xffff5828bc44   196  d503201f       constant
0xffff5828bc48   200  58006000       constant
0xffff5828bc4c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5828bbb0  code target (STUB)  (0xffff582170c0)
0xffff5828bbe8  code target (STUB)  (0xffff58238080)
0xffff5828bbf8  constant pool (size 24)
0xffff5828bc30  runtime entry
0xffff5828bc3c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff5828bb80     0  tbz w0, #0, #+0x90 (addr 0xffff5828bc10)
0xffff5828bb84     4  mov x2, x0
0xffff5828bb88     8  stur x2, [x1, #31]
0xffff5828bb8c    12  add x3, x1, #0x1f (31)
0xffff5828bb90    16  and x2, x2, #0xfffffffffff00000
0xffff5828bb94    20  ldr x2, [x2, #8]
0xffff5828bb98    24  tbz w2, #1, #+0x24 (addr 0xffff5828bbbc)
0xffff5828bb9c    28  and x2, x1, #0xfffffffffff00000
0xffff5828bba0    32  ldr x2, [x2, #8]
0xffff5828bba4    36  tbz w2, #2, #+0x18 (addr 0xffff5828bbbc)
0xffff5828bba8    40  sub csp, jssp, #0x8 (8)
0xffff5828bbac    44  str lr, [jssp, #-8]!
0xffff5828bbb0    48  ldr x16, pc+80 (addr 0x0000ffff5828bc00)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828bbb4    52  blr x16
0xffff5828bbb8    56  ldr lr, [jssp], #8
0xffff5828bbbc    60  stur x5, [x1, #-1]
0xffff5828bbc0    64  tbz w5, #0, #+0x34 (addr 0xffff5828bbf4)
0xffff5828bbc4    68  sub x2, x1, #0x1 (1)
0xffff5828bbc8    72  and x5, x5, #0xfffffffffff00000
0xffff5828bbcc    76  ldr x5, [x5, #8]
0xffff5828bbd0    80  tbz w5, #1, #+0x24 (addr 0xffff5828bbf4)
0xffff5828bbd4    84  and x5, x1, #0xfffffffffff00000
0xffff5828bbd8    88  ldr x5, [x5, #8]
0xffff5828bbdc    92  tbz w5, #2, #+0x18 (addr 0xffff5828bbf4)
0xffff5828bbe0    96  sub csp, jssp, #0x8 (8)
0xffff5828bbe4   100  str lr, [jssp, #-8]!
0xffff5828bbe8   104  ldr x16, pc+32 (addr 0x0000ffff5828bc08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5828bbec   108  blr x16
0xffff5828bbf0   112  ldr lr, [jssp], #8
0xffff5828bbf4   116  ret
0xffff5828bbf8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5828bbfc   124  d63f03e0       constant
0xffff5828bc00   128  582170c0       constant
0xffff5828bc04   132  0000ffff       constant
0xffff5828bc08   136  58238080       constant
0xffff5828bc0c   140  0000ffff       constant
0xffff5828bc10   144  movz x16, #0x0
0xffff5828bc14   148  sub csp, jssp, #0x10 (16)
0xffff5828bc18   152  stp fp, lr, [jssp, #-16]!
0xffff5828bc1c   156  bl #+0x4 (addr 0xffff5828bc20)
0xffff5828bc20   160  movz x17, #0xa00000000
0xffff5828bc24   164  sub csp, jssp, #0x10 (16)
0xffff5828bc28   168  stp x17, cp, [jssp, #-16]!
0xffff5828bc2c   172  add fp, jssp, #0x10 (16)
0xffff5828bc30   176  ldr x17, pc+24 (addr 0x0000ffff5828bc48)    ;; lazy deoptimization bailout 0
0xffff5828bc34   180  add x17, x17, x16
0xffff5828bc38   184  br x17
0xffff5828bc3c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828bc40   192  d63f03e0       constant
0xffff5828bc44   196  d503201f       constant
0xffff5828bc48   200  58006000       constant
0xffff5828bc4c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5828bbb0  code target (STUB)  (0xffff582170c0)
0xffff5828bbe8  code target (STUB)  (0xffff58238080)
0xffff5828bbf8  constant pool (size 24)
0xffff5828bc30  runtime entry
0xffff5828bc3c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = id
compiler = unknown
Instructions (size = 152)
0xffff5828bcc0     0  sub csp, jssp, #0x8 (8)
0xffff5828bcc4     4  str x3, [jssp, #-8]!
0xffff5828bcc8     8  sub csp, jssp, #0x8 (8)
0xffff5828bccc    12  str x4, [jssp, #-8]!
0xffff5828bcd0    16  ldr x3, pc+88 (addr 0x0000ffff5828bd28)    ;; object: 0x39cc7ba9 Cell for 0
0xffff5828bcd4    20  ldur x3, [x3, #7]
0xffff5828bcd8    24  cmp x3, #0x0 (0)
0xffff5828bcdc    28  b.ne #+0x30 (addr 0xffff5828bd0c)
0xffff5828bce0    32  tbz w0, #0, #+0x2c (addr 0xffff5828bd0c)
0xffff5828bce4    36  ldr x5, pc+76 (addr 0x0000ffff5828bd30)    ;; object: 0x39cc2231 WeakCell for 0x32b1b331 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828bce8    40  ldur x5, [x5, #7]
0xffff5828bcec    44  tbz w5, #0, #+0x20 (addr 0xffff5828bd0c)
0xffff5828bcf0    48  ldursw x4, [x5, #15]
0xffff5828bcf4    52  tbnz w4, #23, #+0x18 (addr 0xffff5828bd0c)
0xffff5828bcf8    56  ldr x4, [jssp], #8
0xffff5828bcfc    60  ldr x3, [jssp], #8
0xffff5828bd00    64  ldr x2, pc+56 (addr 0x0000ffff5828bd38)    ;; object: 0x39c4e919 <String[2]: id>
0xffff5828bd04    68  ldr x16, pc+60 (addr 0x0000ffff5828bd40)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff5828bd08    72  br x16
0xffff5828bd0c    76  ldr x2, pc+60 (addr 0x0000ffff5828bd48)    ;; object: 0x39c4e919 <String[2]: id>
0xffff5828bd10    80  ldr x4, [jssp], #8
0xffff5828bd14    84  ldr x3, [jssp], #8
0xffff5828bd18    88  ldr x16, pc+56 (addr 0x0000ffff5828bd50)    ;; code: BUILTIN
0xffff5828bd1c    92  br x16
0xffff5828bd20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5828bd24   100  d63f03e0       constant
0xffff5828bd28   104  39cc7ba9       constant
0xffff5828bd2c   108  00000000       constant
0xffff5828bd30   112  39cc2231       constant
0xffff5828bd34   116  00000000       constant
0xffff5828bd38   120  39c4e919       constant
0xffff5828bd3c   124  00000000       constant
0xffff5828bd40   128  5828bb80       constant
0xffff5828bd44   132  0000ffff       constant
0xffff5828bd48   136  39c4e919       constant
0xffff5828bd4c   140  00000000       constant
0xffff5828bd50   144  58222420       constant
0xffff5828bd54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff5828bcd0  embedded object  (0x39cc7ba9 Cell for 0)
0xffff5828bce4  embedded object  (0x39cc2231 WeakCell for 0x32b1b331 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828bd00  embedded object  (0x39c4e919 <String[2]: id>)
0xffff5828bd04  code target (HANDLER)  (0xffff5828bb80)
0xffff5828bd0c  embedded object  (0x39c4e919 <String[2]: id>)
0xffff5828bd18  code target (BUILTIN)  (0xffff58222420)
0xffff5828bd20  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff5828bdc0     0  tbz w0, #0, #+0x90 (addr 0xffff5828be50)
0xffff5828bdc4     4  mov x2, x0
0xffff5828bdc8     8  stur x2, [x1, #39]
0xffff5828bdcc    12  add x3, x1, #0x27 (39)
0xffff5828bdd0    16  and x2, x2, #0xfffffffffff00000
0xffff5828bdd4    20  ldr x2, [x2, #8]
0xffff5828bdd8    24  tbz w2, #1, #+0x24 (addr 0xffff5828bdfc)
0xffff5828bddc    28  and x2, x1, #0xfffffffffff00000
0xffff5828bde0    32  ldr x2, [x2, #8]
0xffff5828bde4    36  tbz w2, #2, #+0x18 (addr 0xffff5828bdfc)
0xffff5828bde8    40  sub csp, jssp, #0x8 (8)
0xffff5828bdec    44  str lr, [jssp, #-8]!
0xffff5828bdf0    48  ldr x16, pc+80 (addr 0x0000ffff5828be40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828bdf4    52  blr x16
0xffff5828bdf8    56  ldr lr, [jssp], #8
0xffff5828bdfc    60  stur x5, [x1, #-1]
0xffff5828be00    64  tbz w5, #0, #+0x34 (addr 0xffff5828be34)
0xffff5828be04    68  sub x2, x1, #0x1 (1)
0xffff5828be08    72  and x5, x5, #0xfffffffffff00000
0xffff5828be0c    76  ldr x5, [x5, #8]
0xffff5828be10    80  tbz w5, #1, #+0x24 (addr 0xffff5828be34)
0xffff5828be14    84  and x5, x1, #0xfffffffffff00000
0xffff5828be18    88  ldr x5, [x5, #8]
0xffff5828be1c    92  tbz w5, #2, #+0x18 (addr 0xffff5828be34)
0xffff5828be20    96  sub csp, jssp, #0x8 (8)
0xffff5828be24   100  str lr, [jssp, #-8]!
0xffff5828be28   104  ldr x16, pc+32 (addr 0x0000ffff5828be48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5828be2c   108  blr x16
0xffff5828be30   112  ldr lr, [jssp], #8
0xffff5828be34   116  ret
0xffff5828be38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5828be3c   124  d63f03e0       constant
0xffff5828be40   128  582170c0       constant
0xffff5828be44   132  0000ffff       constant
0xffff5828be48   136  58238080       constant
0xffff5828be4c   140  0000ffff       constant
0xffff5828be50   144  movz x16, #0x0
0xffff5828be54   148  sub csp, jssp, #0x10 (16)
0xffff5828be58   152  stp fp, lr, [jssp, #-16]!
0xffff5828be5c   156  bl #+0x4 (addr 0xffff5828be60)
0xffff5828be60   160  movz x17, #0xa00000000
0xffff5828be64   164  sub csp, jssp, #0x10 (16)
0xffff5828be68   168  stp x17, cp, [jssp, #-16]!
0xffff5828be6c   172  add fp, jssp, #0x10 (16)
0xffff5828be70   176  ldr x17, pc+24 (addr 0x0000ffff5828be88)    ;; lazy deoptimization bailout 0
0xffff5828be74   180  add x17, x17, x16
0xffff5828be78   184  br x17
0xffff5828be7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828be80   192  d63f03e0       constant
0xffff5828be84   196  d503201f       constant
0xffff5828be88   200  58006000       constant
0xffff5828be8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5828bdf0  code target (STUB)  (0xffff582170c0)
0xffff5828be28  code target (STUB)  (0xffff58238080)
0xffff5828be38  constant pool (size 24)
0xffff5828be70  runtime entry
0xffff5828be7c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff5828bdc0     0  tbz w0, #0, #+0x90 (addr 0xffff5828be50)
0xffff5828bdc4     4  mov x2, x0
0xffff5828bdc8     8  stur x2, [x1, #39]
0xffff5828bdcc    12  add x3, x1, #0x27 (39)
0xffff5828bdd0    16  and x2, x2, #0xfffffffffff00000
0xffff5828bdd4    20  ldr x2, [x2, #8]
0xffff5828bdd8    24  tbz w2, #1, #+0x24 (addr 0xffff5828bdfc)
0xffff5828bddc    28  and x2, x1, #0xfffffffffff00000
0xffff5828bde0    32  ldr x2, [x2, #8]
0xffff5828bde4    36  tbz w2, #2, #+0x18 (addr 0xffff5828bdfc)
0xffff5828bde8    40  sub csp, jssp, #0x8 (8)
0xffff5828bdec    44  str lr, [jssp, #-8]!
0xffff5828bdf0    48  ldr x16, pc+80 (addr 0x0000ffff5828be40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828bdf4    52  blr x16
0xffff5828bdf8    56  ldr lr, [jssp], #8
0xffff5828bdfc    60  stur x5, [x1, #-1]
0xffff5828be00    64  tbz w5, #0, #+0x34 (addr 0xffff5828be34)
0xffff5828be04    68  sub x2, x1, #0x1 (1)
0xffff5828be08    72  and x5, x5, #0xfffffffffff00000
0xffff5828be0c    76  ldr x5, [x5, #8]
0xffff5828be10    80  tbz w5, #1, #+0x24 (addr 0xffff5828be34)
0xffff5828be14    84  and x5, x1, #0xfffffffffff00000
0xffff5828be18    88  ldr x5, [x5, #8]
0xffff5828be1c    92  tbz w5, #2, #+0x18 (addr 0xffff5828be34)
0xffff5828be20    96  sub csp, jssp, #0x8 (8)
0xffff5828be24   100  str lr, [jssp, #-8]!
0xffff5828be28   104  ldr x16, pc+32 (addr 0x0000ffff5828be48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5828be2c   108  blr x16
0xffff5828be30   112  ldr lr, [jssp], #8
0xffff5828be34   116  ret
0xffff5828be38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5828be3c   124  d63f03e0       constant
0xffff5828be40   128  582170c0       constant
0xffff5828be44   132  0000ffff       constant
0xffff5828be48   136  58238080       constant
0xffff5828be4c   140  0000ffff       constant
0xffff5828be50   144  movz x16, #0x0
0xffff5828be54   148  sub csp, jssp, #0x10 (16)
0xffff5828be58   152  stp fp, lr, [jssp, #-16]!
0xffff5828be5c   156  bl #+0x4 (addr 0xffff5828be60)
0xffff5828be60   160  movz x17, #0xa00000000
0xffff5828be64   164  sub csp, jssp, #0x10 (16)
0xffff5828be68   168  stp x17, cp, [jssp, #-16]!
0xffff5828be6c   172  add fp, jssp, #0x10 (16)
0xffff5828be70   176  ldr x17, pc+24 (addr 0x0000ffff5828be88)    ;; lazy deoptimization bailout 0
0xffff5828be74   180  add x17, x17, x16
0xffff5828be78   184  br x17
0xffff5828be7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828be80   192  d63f03e0       constant
0xffff5828be84   196  d503201f       constant
0xffff5828be88   200  58006000       constant
0xffff5828be8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5828bdf0  code target (STUB)  (0xffff582170c0)
0xffff5828be28  code target (STUB)  (0xffff58238080)
0xffff5828be38  constant pool (size 24)
0xffff5828be70  runtime entry
0xffff5828be7c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = exports
compiler = unknown
Instructions (size = 152)
0xffff5828bf00     0  sub csp, jssp, #0x8 (8)
0xffff5828bf04     4  str x3, [jssp, #-8]!
0xffff5828bf08     8  sub csp, jssp, #0x8 (8)
0xffff5828bf0c    12  str x4, [jssp, #-8]!
0xffff5828bf10    16  ldr x3, pc+88 (addr 0x0000ffff5828bf68)    ;; object: 0x39cc7ba9 Cell for 0
0xffff5828bf14    20  ldur x3, [x3, #7]
0xffff5828bf18    24  cmp x3, #0x0 (0)
0xffff5828bf1c    28  b.ne #+0x30 (addr 0xffff5828bf4c)
0xffff5828bf20    32  tbz w0, #0, #+0x2c (addr 0xffff5828bf4c)
0xffff5828bf24    36  ldr x5, pc+76 (addr 0x0000ffff5828bf70)    ;; object: 0x39cc2281 WeakCell for 0x32b1b389 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828bf28    40  ldur x5, [x5, #7]
0xffff5828bf2c    44  tbz w5, #0, #+0x20 (addr 0xffff5828bf4c)
0xffff5828bf30    48  ldursw x4, [x5, #15]
0xffff5828bf34    52  tbnz w4, #23, #+0x18 (addr 0xffff5828bf4c)
0xffff5828bf38    56  ldr x4, [jssp], #8
0xffff5828bf3c    60  ldr x3, [jssp], #8
0xffff5828bf40    64  ldr x2, pc+56 (addr 0x0000ffff5828bf78)    ;; object: 0x39cb2651 <String[7]: exports>
0xffff5828bf44    68  ldr x16, pc+60 (addr 0x0000ffff5828bf80)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff5828bf48    72  br x16
0xffff5828bf4c    76  ldr x2, pc+60 (addr 0x0000ffff5828bf88)    ;; object: 0x39cb2651 <String[7]: exports>
0xffff5828bf50    80  ldr x4, [jssp], #8
0xffff5828bf54    84  ldr x3, [jssp], #8
0xffff5828bf58    88  ldr x16, pc+56 (addr 0x0000ffff5828bf90)    ;; code: BUILTIN
0xffff5828bf5c    92  br x16
0xffff5828bf60    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5828bf64   100  d63f03e0       constant
0xffff5828bf68   104  39cc7ba9       constant
0xffff5828bf6c   108  00000000       constant
0xffff5828bf70   112  39cc2281       constant
0xffff5828bf74   116  00000000       constant
0xffff5828bf78   120  39cb2651       constant
0xffff5828bf7c   124  00000000       constant
0xffff5828bf80   128  5828bdc0       constant
0xffff5828bf84   132  0000ffff       constant
0xffff5828bf88   136  39cb2651       constant
0xffff5828bf8c   140  00000000       constant
0xffff5828bf90   144  58222420       constant
0xffff5828bf94   148  0000ffff       constant


RelocInfo (size = 12)
0xffff5828bf10  embedded object  (0x39cc7ba9 Cell for 0)
0xffff5828bf24  embedded object  (0x39cc2281 WeakCell for 0x32b1b389 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828bf40  embedded object  (0x39cb2651 <String[7]: exports>)
0xffff5828bf44  code target (HANDLER)  (0xffff5828bdc0)
0xffff5828bf4c  embedded object  (0x39cb2651 <String[7]: exports>)
0xffff5828bf58  code target (BUILTIN)  (0xffff58222420)
0xffff5828bf60  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff5828c000     0  tbz w0, #0, #+0x90 (addr 0xffff5828c090)
0xffff5828c004     4  mov x2, x0
0xffff5828c008     8  stur x2, [x1, #47]
0xffff5828c00c    12  add x3, x1, #0x2f (47)
0xffff5828c010    16  and x2, x2, #0xfffffffffff00000
0xffff5828c014    20  ldr x2, [x2, #8]
0xffff5828c018    24  tbz w2, #1, #+0x24 (addr 0xffff5828c03c)
0xffff5828c01c    28  and x2, x1, #0xfffffffffff00000
0xffff5828c020    32  ldr x2, [x2, #8]
0xffff5828c024    36  tbz w2, #2, #+0x18 (addr 0xffff5828c03c)
0xffff5828c028    40  sub csp, jssp, #0x8 (8)
0xffff5828c02c    44  str lr, [jssp, #-8]!
0xffff5828c030    48  ldr x16, pc+80 (addr 0x0000ffff5828c080)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828c034    52  blr x16
0xffff5828c038    56  ldr lr, [jssp], #8
0xffff5828c03c    60  stur x5, [x1, #-1]
0xffff5828c040    64  tbz w5, #0, #+0x34 (addr 0xffff5828c074)
0xffff5828c044    68  sub x2, x1, #0x1 (1)
0xffff5828c048    72  and x5, x5, #0xfffffffffff00000
0xffff5828c04c    76  ldr x5, [x5, #8]
0xffff5828c050    80  tbz w5, #1, #+0x24 (addr 0xffff5828c074)
0xffff5828c054    84  and x5, x1, #0xfffffffffff00000
0xffff5828c058    88  ldr x5, [x5, #8]
0xffff5828c05c    92  tbz w5, #2, #+0x18 (addr 0xffff5828c074)
0xffff5828c060    96  sub csp, jssp, #0x8 (8)
0xffff5828c064   100  str lr, [jssp, #-8]!
0xffff5828c068   104  ldr x16, pc+32 (addr 0x0000ffff5828c088)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5828c06c   108  blr x16
0xffff5828c070   112  ldr lr, [jssp], #8
0xffff5828c074   116  ret
0xffff5828c078   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5828c07c   124  d63f03e0       constant
0xffff5828c080   128  582170c0       constant
0xffff5828c084   132  0000ffff       constant
0xffff5828c088   136  58238080       constant
0xffff5828c08c   140  0000ffff       constant
0xffff5828c090   144  movz x16, #0x0
0xffff5828c094   148  sub csp, jssp, #0x10 (16)
0xffff5828c098   152  stp fp, lr, [jssp, #-16]!
0xffff5828c09c   156  bl #+0x4 (addr 0xffff5828c0a0)
0xffff5828c0a0   160  movz x17, #0xa00000000
0xffff5828c0a4   164  sub csp, jssp, #0x10 (16)
0xffff5828c0a8   168  stp x17, cp, [jssp, #-16]!
0xffff5828c0ac   172  add fp, jssp, #0x10 (16)
0xffff5828c0b0   176  ldr x17, pc+24 (addr 0x0000ffff5828c0c8)    ;; lazy deoptimization bailout 0
0xffff5828c0b4   180  add x17, x17, x16
0xffff5828c0b8   184  br x17
0xffff5828c0bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828c0c0   192  d63f03e0       constant
0xffff5828c0c4   196  d503201f       constant
0xffff5828c0c8   200  58006000       constant
0xffff5828c0cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5828c030  code target (STUB)  (0xffff582170c0)
0xffff5828c068  code target (STUB)  (0xffff58238080)
0xffff5828c078  constant pool (size 24)
0xffff5828c0b0  runtime entry
0xffff5828c0bc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff5828c000     0  tbz w0, #0, #+0x90 (addr 0xffff5828c090)
0xffff5828c004     4  mov x2, x0
0xffff5828c008     8  stur x2, [x1, #47]
0xffff5828c00c    12  add x3, x1, #0x2f (47)
0xffff5828c010    16  and x2, x2, #0xfffffffffff00000
0xffff5828c014    20  ldr x2, [x2, #8]
0xffff5828c018    24  tbz w2, #1, #+0x24 (addr 0xffff5828c03c)
0xffff5828c01c    28  and x2, x1, #0xfffffffffff00000
0xffff5828c020    32  ldr x2, [x2, #8]
0xffff5828c024    36  tbz w2, #2, #+0x18 (addr 0xffff5828c03c)
0xffff5828c028    40  sub csp, jssp, #0x8 (8)
0xffff5828c02c    44  str lr, [jssp, #-8]!
0xffff5828c030    48  ldr x16, pc+80 (addr 0x0000ffff5828c080)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828c034    52  blr x16
0xffff5828c038    56  ldr lr, [jssp], #8
0xffff5828c03c    60  stur x5, [x1, #-1]
0xffff5828c040    64  tbz w5, #0, #+0x34 (addr 0xffff5828c074)
0xffff5828c044    68  sub x2, x1, #0x1 (1)
0xffff5828c048    72  and x5, x5, #0xfffffffffff00000
0xffff5828c04c    76  ldr x5, [x5, #8]
0xffff5828c050    80  tbz w5, #1, #+0x24 (addr 0xffff5828c074)
0xffff5828c054    84  and x5, x1, #0xfffffffffff00000
0xffff5828c058    88  ldr x5, [x5, #8]
0xffff5828c05c    92  tbz w5, #2, #+0x18 (addr 0xffff5828c074)
0xffff5828c060    96  sub csp, jssp, #0x8 (8)
0xffff5828c064   100  str lr, [jssp, #-8]!
0xffff5828c068   104  ldr x16, pc+32 (addr 0x0000ffff5828c088)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5828c06c   108  blr x16
0xffff5828c070   112  ldr lr, [jssp], #8
0xffff5828c074   116  ret
0xffff5828c078   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5828c07c   124  d63f03e0       constant
0xffff5828c080   128  582170c0       constant
0xffff5828c084   132  0000ffff       constant
0xffff5828c088   136  58238080       constant
0xffff5828c08c   140  0000ffff       constant
0xffff5828c090   144  movz x16, #0x0
0xffff5828c094   148  sub csp, jssp, #0x10 (16)
0xffff5828c098   152  stp fp, lr, [jssp, #-16]!
0xffff5828c09c   156  bl #+0x4 (addr 0xffff5828c0a0)
0xffff5828c0a0   160  movz x17, #0xa00000000
0xffff5828c0a4   164  sub csp, jssp, #0x10 (16)
0xffff5828c0a8   168  stp x17, cp, [jssp, #-16]!
0xffff5828c0ac   172  add fp, jssp, #0x10 (16)
0xffff5828c0b0   176  ldr x17, pc+24 (addr 0x0000ffff5828c0c8)    ;; lazy deoptimization bailout 0
0xffff5828c0b4   180  add x17, x17, x16
0xffff5828c0b8   184  br x17
0xffff5828c0bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828c0c0   192  d63f03e0       constant
0xffff5828c0c4   196  d503201f       constant
0xffff5828c0c8   200  58006000       constant
0xffff5828c0cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5828c030  code target (STUB)  (0xffff582170c0)
0xffff5828c068  code target (STUB)  (0xffff58238080)
0xffff5828c078  constant pool (size 24)
0xffff5828c0b0  runtime entry
0xffff5828c0bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = loaded
compiler = unknown
Instructions (size = 152)
0xffff5828c140     0  sub csp, jssp, #0x8 (8)
0xffff5828c144     4  str x3, [jssp, #-8]!
0xffff5828c148     8  sub csp, jssp, #0x8 (8)
0xffff5828c14c    12  str x4, [jssp, #-8]!
0xffff5828c150    16  ldr x3, pc+88 (addr 0x0000ffff5828c1a8)    ;; object: 0x39cc7ba9 Cell for 0
0xffff5828c154    20  ldur x3, [x3, #7]
0xffff5828c158    24  cmp x3, #0x0 (0)
0xffff5828c15c    28  b.ne #+0x30 (addr 0xffff5828c18c)
0xffff5828c160    32  tbz w0, #0, #+0x2c (addr 0xffff5828c18c)
0xffff5828c164    36  ldr x5, pc+76 (addr 0x0000ffff5828c1b0)    ;; object: 0x39cc2299 WeakCell for 0x32b1b3e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828c168    40  ldur x5, [x5, #7]
0xffff5828c16c    44  tbz w5, #0, #+0x20 (addr 0xffff5828c18c)
0xffff5828c170    48  ldursw x4, [x5, #15]
0xffff5828c174    52  tbnz w4, #23, #+0x18 (addr 0xffff5828c18c)
0xffff5828c178    56  ldr x4, [jssp], #8
0xffff5828c17c    60  ldr x3, [jssp], #8
0xffff5828c180    64  ldr x2, pc+56 (addr 0x0000ffff5828c1b8)    ;; object: 0x39cba9e1 <String[6]: loaded>
0xffff5828c184    68  ldr x16, pc+60 (addr 0x0000ffff5828c1c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff5828c188    72  br x16
0xffff5828c18c    76  ldr x2, pc+60 (addr 0x0000ffff5828c1c8)    ;; object: 0x39cba9e1 <String[6]: loaded>
0xffff5828c190    80  ldr x4, [jssp], #8
0xffff5828c194    84  ldr x3, [jssp], #8
0xffff5828c198    88  ldr x16, pc+56 (addr 0x0000ffff5828c1d0)    ;; code: BUILTIN
0xffff5828c19c    92  br x16
0xffff5828c1a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5828c1a4   100  d63f03e0       constant
0xffff5828c1a8   104  39cc7ba9       constant
0xffff5828c1ac   108  00000000       constant
0xffff5828c1b0   112  39cc2299       constant
0xffff5828c1b4   116  00000000       constant
0xffff5828c1b8   120  39cba9e1       constant
0xffff5828c1bc   124  00000000       constant
0xffff5828c1c0   128  5828c000       constant
0xffff5828c1c4   132  0000ffff       constant
0xffff5828c1c8   136  39cba9e1       constant
0xffff5828c1cc   140  00000000       constant
0xffff5828c1d0   144  58222420       constant
0xffff5828c1d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff5828c150  embedded object  (0x39cc7ba9 Cell for 0)
0xffff5828c164  embedded object  (0x39cc2299 WeakCell for 0x32b1b3e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828c180  embedded object  (0x39cba9e1 <String[6]: loaded>)
0xffff5828c184  code target (HANDLER)  (0xffff5828c000)
0xffff5828c18c  embedded object  (0x39cba9e1 <String[6]: loaded>)
0xffff5828c198  code target (BUILTIN)  (0xffff58222420)
0xffff5828c1a0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff5828c240     0  tbz w0, #0, #+0x90 (addr 0xffff5828c2d0)
0xffff5828c244     4  mov x2, x0
0xffff5828c248     8  stur x2, [x1, #55]
0xffff5828c24c    12  add x3, x1, #0x37 (55)
0xffff5828c250    16  and x2, x2, #0xfffffffffff00000
0xffff5828c254    20  ldr x2, [x2, #8]
0xffff5828c258    24  tbz w2, #1, #+0x24 (addr 0xffff5828c27c)
0xffff5828c25c    28  and x2, x1, #0xfffffffffff00000
0xffff5828c260    32  ldr x2, [x2, #8]
0xffff5828c264    36  tbz w2, #2, #+0x18 (addr 0xffff5828c27c)
0xffff5828c268    40  sub csp, jssp, #0x8 (8)
0xffff5828c26c    44  str lr, [jssp, #-8]!
0xffff5828c270    48  ldr x16, pc+80 (addr 0x0000ffff5828c2c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828c274    52  blr x16
0xffff5828c278    56  ldr lr, [jssp], #8
0xffff5828c27c    60  stur x5, [x1, #-1]
0xffff5828c280    64  tbz w5, #0, #+0x34 (addr 0xffff5828c2b4)
0xffff5828c284    68  sub x2, x1, #0x1 (1)
0xffff5828c288    72  and x5, x5, #0xfffffffffff00000
0xffff5828c28c    76  ldr x5, [x5, #8]
0xffff5828c290    80  tbz w5, #1, #+0x24 (addr 0xffff5828c2b4)
0xffff5828c294    84  and x5, x1, #0xfffffffffff00000
0xffff5828c298    88  ldr x5, [x5, #8]
0xffff5828c29c    92  tbz w5, #2, #+0x18 (addr 0xffff5828c2b4)
0xffff5828c2a0    96  sub csp, jssp, #0x8 (8)
0xffff5828c2a4   100  str lr, [jssp, #-8]!
0xffff5828c2a8   104  ldr x16, pc+32 (addr 0x0000ffff5828c2c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5828c2ac   108  blr x16
0xffff5828c2b0   112  ldr lr, [jssp], #8
0xffff5828c2b4   116  ret
0xffff5828c2b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5828c2bc   124  d63f03e0       constant
0xffff5828c2c0   128  582170c0       constant
0xffff5828c2c4   132  0000ffff       constant
0xffff5828c2c8   136  58238080       constant
0xffff5828c2cc   140  0000ffff       constant
0xffff5828c2d0   144  movz x16, #0x0
0xffff5828c2d4   148  sub csp, jssp, #0x10 (16)
0xffff5828c2d8   152  stp fp, lr, [jssp, #-16]!
0xffff5828c2dc   156  bl #+0x4 (addr 0xffff5828c2e0)
0xffff5828c2e0   160  movz x17, #0xa00000000
0xffff5828c2e4   164  sub csp, jssp, #0x10 (16)
0xffff5828c2e8   168  stp x17, cp, [jssp, #-16]!
0xffff5828c2ec   172  add fp, jssp, #0x10 (16)
0xffff5828c2f0   176  ldr x17, pc+24 (addr 0x0000ffff5828c308)    ;; lazy deoptimization bailout 0
0xffff5828c2f4   180  add x17, x17, x16
0xffff5828c2f8   184  br x17
0xffff5828c2fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828c300   192  d63f03e0       constant
0xffff5828c304   196  d503201f       constant
0xffff5828c308   200  58006000       constant
0xffff5828c30c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5828c270  code target (STUB)  (0xffff582170c0)
0xffff5828c2a8  code target (STUB)  (0xffff58238080)
0xffff5828c2b8  constant pool (size 24)
0xffff5828c2f0  runtime entry
0xffff5828c2fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff5828c240     0  tbz w0, #0, #+0x90 (addr 0xffff5828c2d0)
0xffff5828c244     4  mov x2, x0
0xffff5828c248     8  stur x2, [x1, #55]
0xffff5828c24c    12  add x3, x1, #0x37 (55)
0xffff5828c250    16  and x2, x2, #0xfffffffffff00000
0xffff5828c254    20  ldr x2, [x2, #8]
0xffff5828c258    24  tbz w2, #1, #+0x24 (addr 0xffff5828c27c)
0xffff5828c25c    28  and x2, x1, #0xfffffffffff00000
0xffff5828c260    32  ldr x2, [x2, #8]
0xffff5828c264    36  tbz w2, #2, #+0x18 (addr 0xffff5828c27c)
0xffff5828c268    40  sub csp, jssp, #0x8 (8)
0xffff5828c26c    44  str lr, [jssp, #-8]!
0xffff5828c270    48  ldr x16, pc+80 (addr 0x0000ffff5828c2c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828c274    52  blr x16
0xffff5828c278    56  ldr lr, [jssp], #8
0xffff5828c27c    60  stur x5, [x1, #-1]
0xffff5828c280    64  tbz w5, #0, #+0x34 (addr 0xffff5828c2b4)
0xffff5828c284    68  sub x2, x1, #0x1 (1)
0xffff5828c288    72  and x5, x5, #0xfffffffffff00000
0xffff5828c28c    76  ldr x5, [x5, #8]
0xffff5828c290    80  tbz w5, #1, #+0x24 (addr 0xffff5828c2b4)
0xffff5828c294    84  and x5, x1, #0xfffffffffff00000
0xffff5828c298    88  ldr x5, [x5, #8]
0xffff5828c29c    92  tbz w5, #2, #+0x18 (addr 0xffff5828c2b4)
0xffff5828c2a0    96  sub csp, jssp, #0x8 (8)
0xffff5828c2a4   100  str lr, [jssp, #-8]!
0xffff5828c2a8   104  ldr x16, pc+32 (addr 0x0000ffff5828c2c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5828c2ac   108  blr x16
0xffff5828c2b0   112  ldr lr, [jssp], #8
0xffff5828c2b4   116  ret
0xffff5828c2b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff5828c2bc   124  d63f03e0       constant
0xffff5828c2c0   128  582170c0       constant
0xffff5828c2c4   132  0000ffff       constant
0xffff5828c2c8   136  58238080       constant
0xffff5828c2cc   140  0000ffff       constant
0xffff5828c2d0   144  movz x16, #0x0
0xffff5828c2d4   148  sub csp, jssp, #0x10 (16)
0xffff5828c2d8   152  stp fp, lr, [jssp, #-16]!
0xffff5828c2dc   156  bl #+0x4 (addr 0xffff5828c2e0)
0xffff5828c2e0   160  movz x17, #0xa00000000
0xffff5828c2e4   164  sub csp, jssp, #0x10 (16)
0xffff5828c2e8   168  stp x17, cp, [jssp, #-16]!
0xffff5828c2ec   172  add fp, jssp, #0x10 (16)
0xffff5828c2f0   176  ldr x17, pc+24 (addr 0x0000ffff5828c308)    ;; lazy deoptimization bailout 0
0xffff5828c2f4   180  add x17, x17, x16
0xffff5828c2f8   184  br x17
0xffff5828c2fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828c300   192  d63f03e0       constant
0xffff5828c304   196  d503201f       constant
0xffff5828c308   200  58006000       constant
0xffff5828c30c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5828c270  code target (STUB)  (0xffff582170c0)
0xffff5828c2a8  code target (STUB)  (0xffff58238080)
0xffff5828c2b8  constant pool (size 24)
0xffff5828c2f0  runtime entry
0xffff5828c2fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = loading
compiler = unknown
Instructions (size = 152)
0xffff5828c380     0  sub csp, jssp, #0x8 (8)
0xffff5828c384     4  str x3, [jssp, #-8]!
0xffff5828c388     8  sub csp, jssp, #0x8 (8)
0xffff5828c38c    12  str x4, [jssp, #-8]!
0xffff5828c390    16  ldr x3, pc+88 (addr 0x0000ffff5828c3e8)    ;; object: 0x39cc7ba9 Cell for 0
0xffff5828c394    20  ldur x3, [x3, #7]
0xffff5828c398    24  cmp x3, #0x0 (0)
0xffff5828c39c    28  b.ne #+0x30 (addr 0xffff5828c3cc)
0xffff5828c3a0    32  tbz w0, #0, #+0x2c (addr 0xffff5828c3cc)
0xffff5828c3a4    36  ldr x5, pc+76 (addr 0x0000ffff5828c3f0)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828c3a8    40  ldur x5, [x5, #7]
0xffff5828c3ac    44  tbz w5, #0, #+0x20 (addr 0xffff5828c3cc)
0xffff5828c3b0    48  ldursw x4, [x5, #15]
0xffff5828c3b4    52  tbnz w4, #23, #+0x18 (addr 0xffff5828c3cc)
0xffff5828c3b8    56  ldr x4, [jssp], #8
0xffff5828c3bc    60  ldr x3, [jssp], #8
0xffff5828c3c0    64  ldr x2, pc+56 (addr 0x0000ffff5828c3f8)    ;; object: 0x39cbaa01 <String[7]: loading>
0xffff5828c3c4    68  ldr x16, pc+60 (addr 0x0000ffff5828c400)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff5828c3c8    72  br x16
0xffff5828c3cc    76  ldr x2, pc+60 (addr 0x0000ffff5828c408)    ;; object: 0x39cbaa01 <String[7]: loading>
0xffff5828c3d0    80  ldr x4, [jssp], #8
0xffff5828c3d4    84  ldr x3, [jssp], #8
0xffff5828c3d8    88  ldr x16, pc+56 (addr 0x0000ffff5828c410)    ;; code: BUILTIN
0xffff5828c3dc    92  br x16
0xffff5828c3e0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5828c3e4   100  d63f03e0       constant
0xffff5828c3e8   104  39cc7ba9       constant
0xffff5828c3ec   108  00000000       constant
0xffff5828c3f0   112  39cc22b1       constant
0xffff5828c3f4   116  00000000       constant
0xffff5828c3f8   120  39cbaa01       constant
0xffff5828c3fc   124  00000000       constant
0xffff5828c400   128  5828c240       constant
0xffff5828c404   132  0000ffff       constant
0xffff5828c408   136  39cbaa01       constant
0xffff5828c40c   140  00000000       constant
0xffff5828c410   144  58222420       constant
0xffff5828c414   148  0000ffff       constant


RelocInfo (size = 12)
0xffff5828c390  embedded object  (0x39cc7ba9 Cell for 0)
0xffff5828c3a4  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828c3c0  embedded object  (0x39cbaa01 <String[7]: loading>)
0xffff5828c3c4  code target (HANDLER)  (0xffff5828c240)
0xffff5828c3cc  embedded object  (0x39cbaa01 <String[7]: loading>)
0xffff5828c3d8  code target (BUILTIN)  (0xffff58222420)
0xffff5828c3e0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = cache
compiler = unknown
Instructions (size = 120)
0xffff5828c480     0  sub csp, jssp, #0x8 (8)
0xffff5828c484     4  str x3, [jssp, #-8]!
0xffff5828c488     8  sub csp, jssp, #0x8 (8)
0xffff5828c48c    12  str x0, [jssp, #-8]!
0xffff5828c490    16  ldr x0, pc+72 (addr 0x0000ffff5828c4d8)    ;; object: 0x39cc7ba9 Cell for 0
0xffff5828c494    20  ldur x0, [x0, #7]
0xffff5828c498    24  cmp x0, #0x0 (0)
0xffff5828c49c    28  b.ne #+0x14 (addr 0xffff5828c4b0)
0xffff5828c4a0    32  ldr x3, pc+64 (addr 0x0000ffff5828c4e0)    ;; object: 0x39cc8009 WeakCell for 0x4f9a3531 <an Object with map 0x32b1b229>
0xffff5828c4a4    36  ldur x3, [x3, #7]
0xffff5828c4a8    40  tbz w3, #0, #+0x8 (addr 0xffff5828c4b0)
0xffff5828c4ac    44  b #+0x14 (addr 0xffff5828c4c0)
0xffff5828c4b0    48  ldr x0, [jssp], #8
0xffff5828c4b4    52  ldr x3, [jssp], #8
0xffff5828c4b8    56  ldr x16, pc+48 (addr 0x0000ffff5828c4e8)    ;; code: BUILTIN
0xffff5828c4bc    60  br x16
0xffff5828c4c0    64  add jssp, jssp, #0x10 (16)
0xffff5828c4c4    68  mov x1, x3
0xffff5828c4c8    72  ldr x16, pc+40 (addr 0x0000ffff5828c4f0)    ;; code: HANDLER, LoadConstantStub, minor: 2
0xffff5828c4cc    76  br x16
0xffff5828c4d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5828c4d4    84  d63f03e0       constant
0xffff5828c4d8    88  39cc7ba9       constant
0xffff5828c4dc    92  00000000       constant
0xffff5828c4e0    96  39cc8009       constant
0xffff5828c4e4   100  00000000       constant
0xffff5828c4e8   104  582222e0       constant
0xffff5828c4ec   108  0000ffff       constant
0xffff5828c4f0   112  58243380       constant
0xffff5828c4f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff5828c490  embedded object  (0x39cc7ba9 Cell for 0)
0xffff5828c4a0  embedded object  (0x39cc8009 WeakCell for 0x4f9a3531 <an Object with map 0x32b1b229>)
0xffff5828c4b8  code target (BUILTIN)  (0xffff582222e0)
0xffff5828c4c8  code target (HANDLER)  (0xffff58243380)
0xffff5828c4d0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = util
compiler = unknown
Instructions (size = 184)
0xffff5828c560     0  sub csp, jssp, #0x8 (8)
0xffff5828c564     4  str x3, [jssp, #-8]!
0xffff5828c568     8  sub csp, jssp, #0x8 (8)
0xffff5828c56c    12  str x4, [jssp, #-8]!
0xffff5828c570    16  ldr x3, pc+112 (addr 0x0000ffff5828c5e0)    ;; object: 0x39c63e59 Cell for 0
0xffff5828c574    20  ldur x3, [x3, #7]
0xffff5828c578    24  cmp x3, #0x0 (0)
0xffff5828c57c    28  b.ne #+0x44 (addr 0xffff5828c5c0)
0xffff5828c580    32  tbz w0, #0, #+0x40 (addr 0xffff5828c5c0)
0xffff5828c584    36  ldur x3, [x0, #-1]
0xffff5828c588    40  ldr x4, pc+96 (addr 0x0000ffff5828c5e8)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828c58c    44  ldur x4, [x4, #7]
0xffff5828c590    48  cmp x3, x4
0xffff5828c594    52  b.ne #+0x2c (addr 0xffff5828c5c0)
0xffff5828c598    56  ldr x5, pc+88 (addr 0x0000ffff5828c5f0)    ;; object: 0x39cc8071 WeakCell for 0x32b1c1f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828c59c    60  ldur x5, [x5, #7]
0xffff5828c5a0    64  tbz w5, #0, #+0x20 (addr 0xffff5828c5c0)
0xffff5828c5a4    68  ldursw x4, [x5, #15]
0xffff5828c5a8    72  tbnz w4, #23, #+0x18 (addr 0xffff5828c5c0)
0xffff5828c5ac    76  ldr x4, [jssp], #8
0xffff5828c5b0    80  ldr x3, [jssp], #8
0xffff5828c5b4    84  ldr x2, pc+68 (addr 0x0000ffff5828c5f8)    ;; object: 0x39cba081 <String[4]: util>
0xffff5828c5b8    88  ldr x16, pc+72 (addr 0x0000ffff5828c600)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff5828c5bc    92  br x16
0xffff5828c5c0    96  ldr x2, pc+72 (addr 0x0000ffff5828c608)    ;; object: 0x39cba081 <String[4]: util>
0xffff5828c5c4   100  ldr x4, [jssp], #8
0xffff5828c5c8   104  ldr x3, [jssp], #8
0xffff5828c5cc   108  ldr x16, pc+68 (addr 0x0000ffff5828c610)    ;; code: BUILTIN
0xffff5828c5d0   112  br x16
0xffff5828c5d4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff5828c5d8   120  d63f03e0       constant
0xffff5828c5dc   124  d503201f       constant
0xffff5828c5e0   128  39c63e59       constant
0xffff5828c5e4   132  00000000       constant
0xffff5828c5e8   136  39cc22b1       constant
0xffff5828c5ec   140  00000000       constant
0xffff5828c5f0   144  39cc8071       constant
0xffff5828c5f4   148  00000000       constant
0xffff5828c5f8   152  39cba081       constant
0xffff5828c5fc   156  00000000       constant
0xffff5828c600   160  5828bb80       constant
0xffff5828c604   164  0000ffff       constant
0xffff5828c608   168  39cba081       constant
0xffff5828c60c   172  00000000       constant
0xffff5828c610   176  58222420       constant
0xffff5828c614   180  0000ffff       constant


RelocInfo (size = 13)
0xffff5828c570  embedded object  (0x39c63e59 Cell for 0)
0xffff5828c588  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828c598  embedded object  (0x39cc8071 WeakCell for 0x32b1c1f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828c5b4  embedded object  (0x39cba081 <String[4]: util>)
0xffff5828c5b8  code target (HANDLER)  (0xffff5828bb80)
0xffff5828c5c0  embedded object  (0x39cba081 <String[4]: util>)
0xffff5828c5cc  code target (BUILTIN)  (0xffff58222420)
0xffff5828c5d4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = compile
compiler = unknown
Instructions (size = 120)
0xffff5828c680     0  sub csp, jssp, #0x8 (8)
0xffff5828c684     4  str x3, [jssp, #-8]!
0xffff5828c688     8  sub csp, jssp, #0x8 (8)
0xffff5828c68c    12  str x0, [jssp, #-8]!
0xffff5828c690    16  ldr x0, pc+72 (addr 0x0000ffff5828c6d8)    ;; object: 0x39cc7ba9 Cell for 0
0xffff5828c694    20  ldur x0, [x0, #7]
0xffff5828c698    24  cmp x0, #0x0 (0)
0xffff5828c69c    28  b.ne #+0x14 (addr 0xffff5828c6b0)
0xffff5828c6a0    32  ldr x3, pc+64 (addr 0x0000ffff5828c6e0)    ;; object: 0x39cc80a9 WeakCell for 0x4f9a3531 <an Object with map 0x32b1b229>
0xffff5828c6a4    36  ldur x3, [x3, #7]
0xffff5828c6a8    40  tbz w3, #0, #+0x8 (addr 0xffff5828c6b0)
0xffff5828c6ac    44  b #+0x14 (addr 0xffff5828c6c0)
0xffff5828c6b0    48  ldr x0, [jssp], #8
0xffff5828c6b4    52  ldr x3, [jssp], #8
0xffff5828c6b8    56  ldr x16, pc+48 (addr 0x0000ffff5828c6e8)    ;; code: BUILTIN
0xffff5828c6bc    60  br x16
0xffff5828c6c0    64  add jssp, jssp, #0x10 (16)
0xffff5828c6c4    68  mov x1, x3
0xffff5828c6c8    72  ldr x16, pc+40 (addr 0x0000ffff5828c6f0)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff5828c6cc    76  br x16
0xffff5828c6d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5828c6d4    84  d63f03e0       constant
0xffff5828c6d8    88  39cc7ba9       constant
0xffff5828c6dc    92  00000000       constant
0xffff5828c6e0    96  39cc80a9       constant
0xffff5828c6e4   100  00000000       constant
0xffff5828c6e8   104  582222e0       constant
0xffff5828c6ec   108  0000ffff       constant
0xffff5828c6f0   112  58243300       constant
0xffff5828c6f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff5828c690  embedded object  (0x39cc7ba9 Cell for 0)
0xffff5828c6a0  embedded object  (0x39cc80a9 WeakCell for 0x4f9a3531 <an Object with map 0x32b1b229>)
0xffff5828c6b8  code target (BUILTIN)  (0xffff582222e0)
0xffff5828c6c8  code target (HANDLER)  (0xffff58243300)
0xffff5828c6d0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5828c760     0  ldur x0, [x1, #-1]
0xffff5828c764     4  ldur x0, [x0, #47]
0xffff5828c768     8  movz x16, #0x11f
0xffff5828c76c    12  ldr x0, [x0, x16]
0xffff5828c770    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5828c760     0  ldur x0, [x1, #-1]
0xffff5828c764     4  ldur x0, [x0, #47]
0xffff5828c768     8  movz x16, #0x11f
0xffff5828c76c    12  ldr x0, [x0, x16]
0xffff5828c770    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5828c7e0     0  ldur x0, [x1, #-1]
0xffff5828c7e4     4  ldur x0, [x0, #47]
0xffff5828c7e8     8  movz x16, #0x137
0xffff5828c7ec    12  ldr x0, [x0, x16]
0xffff5828c7f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff5828c7e0     0  ldur x0, [x1, #-1]
0xffff5828c7e4     4  ldur x0, [x0, #47]
0xffff5828c7e8     8  movz x16, #0x137
0xffff5828c7ec    12  ldr x0, [x0, x16]
0xffff5828c7f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff5828c860     0  tbz w0, #0, #+0x50 (addr 0xffff5828c8b0)
0xffff5828c864     4  mov x2, x0
0xffff5828c868     8  stur x2, [x1, #55]
0xffff5828c86c    12  add x3, x1, #0x37 (55)
0xffff5828c870    16  and x2, x2, #0xfffffffffff00000
0xffff5828c874    20  ldr x2, [x2, #8]
0xffff5828c878    24  tbz w2, #1, #+0x24 (addr 0xffff5828c89c)
0xffff5828c87c    28  and x2, x1, #0xfffffffffff00000
0xffff5828c880    32  ldr x2, [x2, #8]
0xffff5828c884    36  tbz w2, #2, #+0x18 (addr 0xffff5828c89c)
0xffff5828c888    40  sub csp, jssp, #0x8 (8)
0xffff5828c88c    44  str lr, [jssp, #-8]!
0xffff5828c890    48  ldr x16, pc+24 (addr 0x0000ffff5828c8a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828c894    52  blr x16
0xffff5828c898    56  ldr lr, [jssp], #8
0xffff5828c89c    60  ret
0xffff5828c8a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5828c8a4    68  d63f03e0       constant
0xffff5828c8a8    72  582170c0       constant
0xffff5828c8ac    76  0000ffff       constant
0xffff5828c8b0    80  movz x16, #0x0
0xffff5828c8b4    84  sub csp, jssp, #0x10 (16)
0xffff5828c8b8    88  stp fp, lr, [jssp, #-16]!
0xffff5828c8bc    92  bl #+0x4 (addr 0xffff5828c8c0)
0xffff5828c8c0    96  movz x17, #0xa00000000
0xffff5828c8c4   100  sub csp, jssp, #0x10 (16)
0xffff5828c8c8   104  stp x17, cp, [jssp, #-16]!
0xffff5828c8cc   108  add fp, jssp, #0x10 (16)
0xffff5828c8d0   112  ldr x17, pc+24 (addr 0x0000ffff5828c8e8)    ;; lazy deoptimization bailout 0
0xffff5828c8d4   116  add x17, x17, x16
0xffff5828c8d8   120  br x17
0xffff5828c8dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828c8e0   128  d63f03e0       constant
0xffff5828c8e4   132  d503201f       constant
0xffff5828c8e8   136  58006000       constant
0xffff5828c8ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff5828c890  code target (STUB)  (0xffff582170c0)
0xffff5828c8a0  constant pool (size 16)
0xffff5828c8d0  runtime entry
0xffff5828c8dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff5828c860     0  tbz w0, #0, #+0x50 (addr 0xffff5828c8b0)
0xffff5828c864     4  mov x2, x0
0xffff5828c868     8  stur x2, [x1, #55]
0xffff5828c86c    12  add x3, x1, #0x37 (55)
0xffff5828c870    16  and x2, x2, #0xfffffffffff00000
0xffff5828c874    20  ldr x2, [x2, #8]
0xffff5828c878    24  tbz w2, #1, #+0x24 (addr 0xffff5828c89c)
0xffff5828c87c    28  and x2, x1, #0xfffffffffff00000
0xffff5828c880    32  ldr x2, [x2, #8]
0xffff5828c884    36  tbz w2, #2, #+0x18 (addr 0xffff5828c89c)
0xffff5828c888    40  sub csp, jssp, #0x8 (8)
0xffff5828c88c    44  str lr, [jssp, #-8]!
0xffff5828c890    48  ldr x16, pc+24 (addr 0x0000ffff5828c8a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828c894    52  blr x16
0xffff5828c898    56  ldr lr, [jssp], #8
0xffff5828c89c    60  ret
0xffff5828c8a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5828c8a4    68  d63f03e0       constant
0xffff5828c8a8    72  582170c0       constant
0xffff5828c8ac    76  0000ffff       constant
0xffff5828c8b0    80  movz x16, #0x0
0xffff5828c8b4    84  sub csp, jssp, #0x10 (16)
0xffff5828c8b8    88  stp fp, lr, [jssp, #-16]!
0xffff5828c8bc    92  bl #+0x4 (addr 0xffff5828c8c0)
0xffff5828c8c0    96  movz x17, #0xa00000000
0xffff5828c8c4   100  sub csp, jssp, #0x10 (16)
0xffff5828c8c8   104  stp x17, cp, [jssp, #-16]!
0xffff5828c8cc   108  add fp, jssp, #0x10 (16)
0xffff5828c8d0   112  ldr x17, pc+24 (addr 0x0000ffff5828c8e8)    ;; lazy deoptimization bailout 0
0xffff5828c8d4   116  add x17, x17, x16
0xffff5828c8d8   120  br x17
0xffff5828c8dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828c8e0   128  d63f03e0       constant
0xffff5828c8e4   132  d503201f       constant
0xffff5828c8e8   136  58006000       constant
0xffff5828c8ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff5828c890  code target (STUB)  (0xffff582170c0)
0xffff5828c8a0  constant pool (size 16)
0xffff5828c8d0  runtime entry
0xffff5828c8dc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff5828c960     0  tbz w0, #0, #+0x50 (addr 0xffff5828c9b0)
0xffff5828c964     4  mov x2, x0
0xffff5828c968     8  stur x2, [x1, #23]
0xffff5828c96c    12  add x3, x1, #0x17 (23)
0xffff5828c970    16  and x2, x2, #0xfffffffffff00000
0xffff5828c974    20  ldr x2, [x2, #8]
0xffff5828c978    24  tbz w2, #1, #+0x24 (addr 0xffff5828c99c)
0xffff5828c97c    28  and x2, x1, #0xfffffffffff00000
0xffff5828c980    32  ldr x2, [x2, #8]
0xffff5828c984    36  tbz w2, #2, #+0x18 (addr 0xffff5828c99c)
0xffff5828c988    40  sub csp, jssp, #0x8 (8)
0xffff5828c98c    44  str lr, [jssp, #-8]!
0xffff5828c990    48  ldr x16, pc+24 (addr 0x0000ffff5828c9a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828c994    52  blr x16
0xffff5828c998    56  ldr lr, [jssp], #8
0xffff5828c99c    60  ret
0xffff5828c9a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5828c9a4    68  d63f03e0       constant
0xffff5828c9a8    72  582170c0       constant
0xffff5828c9ac    76  0000ffff       constant
0xffff5828c9b0    80  movz x16, #0x0
0xffff5828c9b4    84  sub csp, jssp, #0x10 (16)
0xffff5828c9b8    88  stp fp, lr, [jssp, #-16]!
0xffff5828c9bc    92  bl #+0x4 (addr 0xffff5828c9c0)
0xffff5828c9c0    96  movz x17, #0xa00000000
0xffff5828c9c4   100  sub csp, jssp, #0x10 (16)
0xffff5828c9c8   104  stp x17, cp, [jssp, #-16]!
0xffff5828c9cc   108  add fp, jssp, #0x10 (16)
0xffff5828c9d0   112  ldr x17, pc+24 (addr 0x0000ffff5828c9e8)    ;; lazy deoptimization bailout 0
0xffff5828c9d4   116  add x17, x17, x16
0xffff5828c9d8   120  br x17
0xffff5828c9dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828c9e0   128  d63f03e0       constant
0xffff5828c9e4   132  d503201f       constant
0xffff5828c9e8   136  58006000       constant
0xffff5828c9ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff5828c990  code target (STUB)  (0xffff582170c0)
0xffff5828c9a0  constant pool (size 16)
0xffff5828c9d0  runtime entry
0xffff5828c9dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff5828c960     0  tbz w0, #0, #+0x50 (addr 0xffff5828c9b0)
0xffff5828c964     4  mov x2, x0
0xffff5828c968     8  stur x2, [x1, #23]
0xffff5828c96c    12  add x3, x1, #0x17 (23)
0xffff5828c970    16  and x2, x2, #0xfffffffffff00000
0xffff5828c974    20  ldr x2, [x2, #8]
0xffff5828c978    24  tbz w2, #1, #+0x24 (addr 0xffff5828c99c)
0xffff5828c97c    28  and x2, x1, #0xfffffffffff00000
0xffff5828c980    32  ldr x2, [x2, #8]
0xffff5828c984    36  tbz w2, #2, #+0x18 (addr 0xffff5828c99c)
0xffff5828c988    40  sub csp, jssp, #0x8 (8)
0xffff5828c98c    44  str lr, [jssp, #-8]!
0xffff5828c990    48  ldr x16, pc+24 (addr 0x0000ffff5828c9a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5828c994    52  blr x16
0xffff5828c998    56  ldr lr, [jssp], #8
0xffff5828c99c    60  ret
0xffff5828c9a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5828c9a4    68  d63f03e0       constant
0xffff5828c9a8    72  582170c0       constant
0xffff5828c9ac    76  0000ffff       constant
0xffff5828c9b0    80  movz x16, #0x0
0xffff5828c9b4    84  sub csp, jssp, #0x10 (16)
0xffff5828c9b8    88  stp fp, lr, [jssp, #-16]!
0xffff5828c9bc    92  bl #+0x4 (addr 0xffff5828c9c0)
0xffff5828c9c0    96  movz x17, #0xa00000000
0xffff5828c9c4   100  sub csp, jssp, #0x10 (16)
0xffff5828c9c8   104  stp x17, cp, [jssp, #-16]!
0xffff5828c9cc   108  add fp, jssp, #0x10 (16)
0xffff5828c9d0   112  ldr x17, pc+24 (addr 0x0000ffff5828c9e8)    ;; lazy deoptimization bailout 0
0xffff5828c9d4   116  add x17, x17, x16
0xffff5828c9d8   120  br x17
0xffff5828c9dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5828c9e0   128  d63f03e0       constant
0xffff5828c9e4   132  d503201f       constant
0xffff5828c9e8   136  58006000       constant
0xffff5828c9ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff5828c990  code target (STUB)  (0xffff582170c0)
0xffff5828c9a0  constant pool (size 16)
0xffff5828c9d0  runtime entry
0xffff5828c9dc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 941)
0xffff5828ca60     0  movz x2, #0x92c0
0xffff5828ca64     4  movk x2, #0x16e7, lsl #16
0xffff5828ca68     8  ldp x3, x0, [x2]
0xffff5828ca6c    12  adds x16, x3, #0x170 (368)
0xffff5828ca70    16  ccmp x16, x0, #nzCv, lo
0xffff5828ca74    20  b.hi #+0x1b0 (addr 0xffff5828cc24)
0xffff5828ca78    24  str x16, [x2]
0xffff5828ca7c    28  orr x3, x3, #0x1
0xffff5828ca80    32  ldr x0, pc+528 (addr 0x0000ffff5828cc90)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828ca84    36  stur x0, [x3, #-1]
0xffff5828ca88    40  movz x0, #0x2c00000000
0xffff5828ca8c    44  stur x0, [x3, #7]
0xffff5828ca90    48  stur x1, [x3, #15]
0xffff5828ca94    52  stur cp, [x3, #23]
0xffff5828ca98    56  ldr x0, pc+512 (addr 0x0000ffff5828cc98)    ;; object: 0x39c04519 <the hole>
0xffff5828ca9c    60  stur x0, [x3, #31]
0xffff5828caa0    64  ldur x0, [cp, #39]
0xffff5828caa4    68  stur x0, [x3, #39]
0xffff5828caa8    72  ldr x0, pc+504 (addr 0x0000ffff5828cca0)    ;; object: 0x39c04241 <undefined>
0xffff5828caac    76  stur x0, [x3, #47]
0xffff5828cab0    80  ldr x0, pc+504 (addr 0x0000ffff5828cca8)    ;; object: 0x39c04241 <undefined>
0xffff5828cab4    84  stur x0, [x3, #55]
0xffff5828cab8    88  ldr x0, pc+504 (addr 0x0000ffff5828ccb0)    ;; object: 0x39c04241 <undefined>
0xffff5828cabc    92  stur x0, [x3, #63]
0xffff5828cac0    96  ldr x0, pc+504 (addr 0x0000ffff5828ccb8)    ;; object: 0x39c04241 <undefined>
0xffff5828cac4   100  stur x0, [x3, #71]
0xffff5828cac8   104  ldr x0, pc+504 (addr 0x0000ffff5828ccc0)    ;; object: 0x39c04241 <undefined>
0xffff5828cacc   108  stur x0, [x3, #79]
0xffff5828cad0   112  ldr x0, pc+504 (addr 0x0000ffff5828ccc8)    ;; object: 0x39c04241 <undefined>
0xffff5828cad4   116  stur x0, [x3, #87]
0xffff5828cad8   120  ldr x0, pc+504 (addr 0x0000ffff5828ccd0)    ;; object: 0x39c04241 <undefined>
0xffff5828cadc   124  stur x0, [x3, #95]
0xffff5828cae0   128  ldr x0, pc+504 (addr 0x0000ffff5828ccd8)    ;; object: 0x39c04241 <undefined>
0xffff5828cae4   132  stur x0, [x3, #103]
0xffff5828cae8   136  ldr x0, pc+504 (addr 0x0000ffff5828cce0)    ;; object: 0x39c04241 <undefined>
0xffff5828caec   140  stur x0, [x3, #111]
0xffff5828caf0   144  ldr x0, pc+504 (addr 0x0000ffff5828cce8)    ;; object: 0x39c04241 <undefined>
0xffff5828caf4   148  stur x0, [x3, #119]
0xffff5828caf8   152  ldr x0, pc+504 (addr 0x0000ffff5828ccf0)    ;; object: 0x39c04241 <undefined>
0xffff5828cafc   156  stur x0, [x3, #127]
0xffff5828cb00   160  ldr x0, pc+504 (addr 0x0000ffff5828ccf8)    ;; object: 0x39c04241 <undefined>
0xffff5828cb04   164  stur x0, [x3, #135]
0xffff5828cb08   168  ldr x0, pc+504 (addr 0x0000ffff5828cd00)    ;; object: 0x39c04241 <undefined>
0xffff5828cb0c   172  stur x0, [x3, #143]
0xffff5828cb10   176  ldr x0, pc+504 (addr 0x0000ffff5828cd08)    ;; object: 0x39c04241 <undefined>
0xffff5828cb14   180  stur x0, [x3, #151]
0xffff5828cb18   184  ldr x0, pc+504 (addr 0x0000ffff5828cd10)    ;; object: 0x39c04241 <undefined>
0xffff5828cb1c   188  stur x0, [x3, #159]
0xffff5828cb20   192  ldr x0, pc+504 (addr 0x0000ffff5828cd18)    ;; object: 0x39c04241 <undefined>
0xffff5828cb24   196  stur x0, [x3, #167]
0xffff5828cb28   200  ldr x0, pc+504 (addr 0x0000ffff5828cd20)    ;; object: 0x39c04241 <undefined>
0xffff5828cb2c   204  stur x0, [x3, #175]
0xffff5828cb30   208  ldr x0, pc+504 (addr 0x0000ffff5828cd28)    ;; object: 0x39c04241 <undefined>
0xffff5828cb34   212  stur x0, [x3, #183]
0xffff5828cb38   216  ldr x0, pc+504 (addr 0x0000ffff5828cd30)    ;; object: 0x39c04241 <undefined>
0xffff5828cb3c   220  stur x0, [x3, #191]
0xffff5828cb40   224  ldr x0, pc+504 (addr 0x0000ffff5828cd38)    ;; object: 0x39c04241 <undefined>
0xffff5828cb44   228  stur x0, [x3, #199]
0xffff5828cb48   232  ldr x0, pc+504 (addr 0x0000ffff5828cd40)    ;; object: 0x39c04241 <undefined>
0xffff5828cb4c   236  stur x0, [x3, #207]
0xffff5828cb50   240  ldr x0, pc+504 (addr 0x0000ffff5828cd48)    ;; object: 0x39c04241 <undefined>
0xffff5828cb54   244  stur x0, [x3, #215]
0xffff5828cb58   248  ldr x0, pc+504 (addr 0x0000ffff5828cd50)    ;; object: 0x39c04241 <undefined>
0xffff5828cb5c   252  stur x0, [x3, #223]
0xffff5828cb60   256  ldr x0, pc+504 (addr 0x0000ffff5828cd58)    ;; object: 0x39c04241 <undefined>
0xffff5828cb64   260  stur x0, [x3, #231]
0xffff5828cb68   264  ldr x0, pc+504 (addr 0x0000ffff5828cd60)    ;; object: 0x39c04241 <undefined>
0xffff5828cb6c   268  stur x0, [x3, #239]
0xffff5828cb70   272  ldr x0, pc+504 (addr 0x0000ffff5828cd68)    ;; object: 0x39c04241 <undefined>
0xffff5828cb74   276  stur x0, [x3, #247]
0xffff5828cb78   280  ldr x0, pc+504 (addr 0x0000ffff5828cd70)    ;; object: 0x39c04241 <undefined>
0xffff5828cb7c   284  stur x0, [x3, #255]
0xffff5828cb80   288  ldr x0, pc+504 (addr 0x0000ffff5828cd78)    ;; object: 0x39c04241 <undefined>
0xffff5828cb84   292  movz x16, #0x107
0xffff5828cb88   296  str x0, [x3, x16]
0xffff5828cb8c   300  ldr x0, pc+500 (addr 0x0000ffff5828cd80)    ;; object: 0x39c04241 <undefined>
0xffff5828cb90   304  movz x16, #0x10f
0xffff5828cb94   308  str x0, [x3, x16]
0xffff5828cb98   312  ldr x0, pc+496 (addr 0x0000ffff5828cd88)    ;; object: 0x39c04241 <undefined>
0xffff5828cb9c   316  movz x16, #0x117
0xffff5828cba0   320  str x0, [x3, x16]
0xffff5828cba4   324  ldr x0, pc+492 (addr 0x0000ffff5828cd90)    ;; object: 0x39c04241 <undefined>
0xffff5828cba8   328  movz x16, #0x11f
0xffff5828cbac   332  str x0, [x3, x16]
0xffff5828cbb0   336  ldr x0, pc+488 (addr 0x0000ffff5828cd98)    ;; object: 0x39c04241 <undefined>
0xffff5828cbb4   340  movz x16, #0x127
0xffff5828cbb8   344  str x0, [x3, x16]
0xffff5828cbbc   348  ldr x0, pc+484 (addr 0x0000ffff5828cda0)    ;; object: 0x39c04241 <undefined>
0xffff5828cbc0   352  movz x16, #0x12f
0xffff5828cbc4   356  str x0, [x3, x16]
0xffff5828cbc8   360  ldr x0, pc+480 (addr 0x0000ffff5828cda8)    ;; object: 0x39c04241 <undefined>
0xffff5828cbcc   364  movz x16, #0x137
0xffff5828cbd0   368  str x0, [x3, x16]
0xffff5828cbd4   372  ldr x0, pc+476 (addr 0x0000ffff5828cdb0)    ;; object: 0x39c04241 <undefined>
0xffff5828cbd8   376  movz x16, #0x13f
0xffff5828cbdc   380  str x0, [x3, x16]
0xffff5828cbe0   384  ldr x0, pc+472 (addr 0x0000ffff5828cdb8)    ;; object: 0x39c04241 <undefined>
0xffff5828cbe4   388  movz x16, #0x147
0xffff5828cbe8   392  str x0, [x3, x16]
0xffff5828cbec   396  ldr x0, pc+468 (addr 0x0000ffff5828cdc0)    ;; object: 0x39c04241 <undefined>
0xffff5828cbf0   400  movz x16, #0x14f
0xffff5828cbf4   404  str x0, [x3, x16]
0xffff5828cbf8   408  ldr x0, pc+464 (addr 0x0000ffff5828cdc8)    ;; object: 0x39c04241 <undefined>
0xffff5828cbfc   412  movz x16, #0x157
0xffff5828cc00   416  str x0, [x3, x16]
0xffff5828cc04   420  ldr x0, pc+460 (addr 0x0000ffff5828cdd0)    ;; object: 0x39c04241 <undefined>
0xffff5828cc08   424  movz x16, #0x15f
0xffff5828cc0c   428  str x0, [x3, x16]
0xffff5828cc10   432  ldr x0, pc+456 (addr 0x0000ffff5828cdd8)    ;; object: 0x39c04241 <undefined>
0xffff5828cc14   436  movz x16, #0x167
0xffff5828cc18   440  str x0, [x3, x16]
0xffff5828cc1c   444  mov x0, x3
0xffff5828cc20   448  ret
0xffff5828cc24   452  sub csp, jssp, #0x10 (16)
0xffff5828cc28   456  stp fp, lr, [jssp, #-16]!
0xffff5828cc2c   460  movz fp, #0xa00000000
0xffff5828cc30   464  sub csp, jssp, #0x8 (8)
0xffff5828cc34   468  str fp, [jssp, #-8]!
0xffff5828cc38   472  add fp, jssp, #0x8 (8)
0xffff5828cc3c   476  movz x3, #0x0
0xffff5828cc40   480  mov x16, lr
0xffff5828cc44   484  ldr x17, pc+412 (addr 0x0000ffff5828cde0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5828cc48   488  blr x17
0xffff5828cc4c   492  movz x0, #0x17000000000
0xffff5828cc50   496  movz x10, #0x0
0xffff5828cc54   500  sub csp, jssp, #0x10 (16)
0xffff5828cc58   504  stp x10, x0, [jssp, #-16]!
0xffff5828cc5c   508  movz x0, #0x2
0xffff5828cc60   512  movz x1, #0x5b88
0xffff5828cc64   516  movk x1, #0xe2, lsl #16
0xffff5828cc68   520  ldr x16, pc+384 (addr 0x0000ffff5828cde8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5828cc6c   524  blr x16
0xffff5828cc70   528  str x0, [jssp, #24]
0xffff5828cc74   532  ldr x16, pc+380 (addr 0x0000ffff5828cdf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5828cc78   536  blr x16
0xffff5828cc7c   540  ldr lr, [jssp, #16]
0xffff5828cc80   544  ldp xzr, fp, [jssp], #24
0xffff5828cc84   548  b #-0x204 (addr 0xffff5828ca80)
0xffff5828cc88   552  58000b7f       constant pool begin (num_const = 91)    ;; constant pool
0xffff5828cc8c   556  d63f03e0       constant
0xffff5828cc90   560  32b06149       constant
0xffff5828cc94   564  00000000       constant
0xffff5828cc98   568  39c04519       constant
0xffff5828cc9c   572  00000000       constant
0xffff5828cca0   576  39c04241       constant
0xffff5828cca4   580  00000000       constant
0xffff5828cca8   584  39c04241       constant
0xffff5828ccac   588  00000000       constant
0xffff5828ccb0   592  39c04241       constant
0xffff5828ccb4   596  00000000       constant
0xffff5828ccb8   600  39c04241       constant
0xffff5828ccbc   604  00000000       constant
0xffff5828ccc0   608  39c04241       constant
0xffff5828ccc4   612  00000000       constant
0xffff5828ccc8   616  39c04241       constant
0xffff5828cccc   620  00000000       constant
0xffff5828ccd0   624  39c04241       constant
0xffff5828ccd4   628  00000000       constant
0xffff5828ccd8   632  39c04241       constant
0xffff5828ccdc   636  00000000       constant
0xffff5828cce0   640  39c04241       constant
0xffff5828cce4   644  00000000       constant
0xffff5828cce8   648  39c04241       constant
0xffff5828ccec   652  00000000       constant
0xffff5828ccf0   656  39c04241       constant
0xffff5828ccf4   660  00000000       constant
0xffff5828ccf8   664  39c04241       constant
0xffff5828ccfc   668  00000000       constant
0xffff5828cd00   672  39c04241       constant
0xffff5828cd04   676  00000000       constant
0xffff5828cd08   680  39c04241       constant
0xffff5828cd0c   684  00000000       constant
0xffff5828cd10   688  39c04241       constant
0xffff5828cd14   692  00000000       constant
0xffff5828cd18   696  39c04241       constant
0xffff5828cd1c   700  00000000       constant
0xffff5828cd20   704  39c04241       constant
0xffff5828cd24   708  00000000       constant
0xffff5828cd28   712  39c04241       constant
0xffff5828cd2c   716  00000000       constant
0xffff5828cd30   720  39c04241       constant
0xffff5828cd34   724  00000000       constant
0xffff5828cd38   728  39c04241       constant
0xffff5828cd3c   732  00000000       constant
0xffff5828cd40   736  39c04241       constant
0xffff5828cd44   740  00000000       constant
0xffff5828cd48   744  39c04241       constant
0xffff5828cd4c   748  00000000       constant
0xffff5828cd50   752  39c04241       constant
0xffff5828cd54   756  00000000       constant
0xffff5828cd58   760  39c04241       constant
0xffff5828cd5c   764  00000000       constant
0xffff5828cd60   768  39c04241       constant
0xffff5828cd64   772  00000000       constant
0xffff5828cd68   776  39c04241       constant
0xffff5828cd6c   780  00000000       constant
0xffff5828cd70   784  39c04241       constant
0xffff5828cd74   788  00000000       constant
0xffff5828cd78   792  39c04241       constant
0xffff5828cd7c   796  00000000       constant
0xffff5828cd80   800  39c04241       constant
0xffff5828cd84   804  00000000       constant
0xffff5828cd88   808  39c04241       constant
0xffff5828cd8c   812  00000000       constant
0xffff5828cd90   816  39c04241       constant
0xffff5828cd94   820  00000000       constant
0xffff5828cd98   824  39c04241       constant
0xffff5828cd9c   828  00000000       constant
0xffff5828cda0   832  39c04241       constant
0xffff5828cda4   836  00000000       constant
0xffff5828cda8   840  39c04241       constant
0xffff5828cdac   844  00000000       constant
0xffff5828cdb0   848  39c04241       constant
0xffff5828cdb4   852  00000000       constant
0xffff5828cdb8   856  39c04241       constant
0xffff5828cdbc   860  00000000       constant
0xffff5828cdc0   864  39c04241       constant
0xffff5828cdc4   868  00000000       constant
0xffff5828cdc8   872  39c04241       constant
0xffff5828cdcc   876  00000000       constant
0xffff5828cdd0   880  39c04241       constant
0xffff5828cdd4   884  00000000       constant
0xffff5828cdd8   888  39c04241       constant
0xffff5828cddc   892  00000000       constant
0xffff5828cde0   896  58206820       constant
0xffff5828cde4   900  0000ffff       constant
0xffff5828cde8   904  58206260       constant
0xffff5828cdec   908  0000ffff       constant
0xffff5828cdf0   912  582068e0       constant
0xffff5828cdf4   916  0000ffff       constant


Safepoints (size = 21)
0xffff5828cc70   528  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 51)
0xffff5828ca80  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828ca98  embedded object  (0x39c04519 <the hole>)
0xffff5828caa8  embedded object  (0x39c04241 <undefined>)
0xffff5828cab0  embedded object  (0x39c04241 <undefined>)
0xffff5828cab8  embedded object  (0x39c04241 <undefined>)
0xffff5828cac0  embedded object  (0x39c04241 <undefined>)
0xffff5828cac8  embedded object  (0x39c04241 <undefined>)
0xffff5828cad0  embedded object  (0x39c04241 <undefined>)
0xffff5828cad8  embedded object  (0x39c04241 <undefined>)
0xffff5828cae0  embedded object  (0x39c04241 <undefined>)
0xffff5828cae8  embedded object  (0x39c04241 <undefined>)
0xffff5828caf0  embedded object  (0x39c04241 <undefined>)
0xffff5828caf8  embedded object  (0x39c04241 <undefined>)
0xffff5828cb00  embedded object  (0x39c04241 <undefined>)
0xffff5828cb08  embedded object  (0x39c04241 <undefined>)
0xffff5828cb10  embedded object  (0x39c04241 <undefined>)
0xffff5828cb18  embedded object  (0x39c04241 <undefined>)
0xffff5828cb20  embedded object  (0x39c04241 <undefined>)
0xffff5828cb28  embedded object  (0x39c04241 <undefined>)
0xffff5828cb30  embedded object  (0x39c04241 <undefined>)
0xffff5828cb38  embedded object  (0x39c04241 <undefined>)
0xffff5828cb40  embedded object  (0x39c04241 <undefined>)
0xffff5828cb48  embedded object  (0x39c04241 <undefined>)
0xffff5828cb50  embedded object  (0x39c04241 <undefined>)
0xffff5828cb58  embedded object  (0x39c04241 <undefined>)
0xffff5828cb60  embedded object  (0x39c04241 <undefined>)
0xffff5828cb68  embedded object  (0x39c04241 <undefined>)
0xffff5828cb70  embedded object  (0x39c04241 <undefined>)
0xffff5828cb78  embedded object  (0x39c04241 <undefined>)
0xffff5828cb80  embedded object  (0x39c04241 <undefined>)
0xffff5828cb8c  embedded object  (0x39c04241 <undefined>)
0xffff5828cb98  embedded object  (0x39c04241 <undefined>)
0xffff5828cba4  embedded object  (0x39c04241 <undefined>)
0xffff5828cbb0  embedded object  (0x39c04241 <undefined>)
0xffff5828cbbc  embedded object  (0x39c04241 <undefined>)
0xffff5828cbc8  embedded object  (0x39c04241 <undefined>)
0xffff5828cbd4  embedded object  (0x39c04241 <undefined>)
0xffff5828cbe0  embedded object  (0x39c04241 <undefined>)
0xffff5828cbec  embedded object  (0x39c04241 <undefined>)
0xffff5828cbf8  embedded object  (0x39c04241 <undefined>)
0xffff5828cc04  embedded object  (0x39c04241 <undefined>)
0xffff5828cc10  embedded object  (0x39c04241 <undefined>)
0xffff5828cc44  code target (STUB)  (0xffff58206820)
0xffff5828cc68  code target (STUB)  (0xffff58206260)
0xffff5828cc74  code target (STUB)  (0xffff582068e0)
0xffff5828cc88  constant pool (size 368)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 941)
0xffff5828ca60     0  movz x2, #0x92c0
0xffff5828ca64     4  movk x2, #0x16e7, lsl #16
0xffff5828ca68     8  ldp x3, x0, [x2]
0xffff5828ca6c    12  adds x16, x3, #0x170 (368)
0xffff5828ca70    16  ccmp x16, x0, #nzCv, lo
0xffff5828ca74    20  b.hi #+0x1b0 (addr 0xffff5828cc24)
0xffff5828ca78    24  str x16, [x2]
0xffff5828ca7c    28  orr x3, x3, #0x1
0xffff5828ca80    32  ldr x0, pc+528 (addr 0x0000ffff5828cc90)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828ca84    36  stur x0, [x3, #-1]
0xffff5828ca88    40  movz x0, #0x2c00000000
0xffff5828ca8c    44  stur x0, [x3, #7]
0xffff5828ca90    48  stur x1, [x3, #15]
0xffff5828ca94    52  stur cp, [x3, #23]
0xffff5828ca98    56  ldr x0, pc+512 (addr 0x0000ffff5828cc98)    ;; object: 0x39c04519 <the hole>
0xffff5828ca9c    60  stur x0, [x3, #31]
0xffff5828caa0    64  ldur x0, [cp, #39]
0xffff5828caa4    68  stur x0, [x3, #39]
0xffff5828caa8    72  ldr x0, pc+504 (addr 0x0000ffff5828cca0)    ;; object: 0x39c04241 <undefined>
0xffff5828caac    76  stur x0, [x3, #47]
0xffff5828cab0    80  ldr x0, pc+504 (addr 0x0000ffff5828cca8)    ;; object: 0x39c04241 <undefined>
0xffff5828cab4    84  stur x0, [x3, #55]
0xffff5828cab8    88  ldr x0, pc+504 (addr 0x0000ffff5828ccb0)    ;; object: 0x39c04241 <undefined>
0xffff5828cabc    92  stur x0, [x3, #63]
0xffff5828cac0    96  ldr x0, pc+504 (addr 0x0000ffff5828ccb8)    ;; object: 0x39c04241 <undefined>
0xffff5828cac4   100  stur x0, [x3, #71]
0xffff5828cac8   104  ldr x0, pc+504 (addr 0x0000ffff5828ccc0)    ;; object: 0x39c04241 <undefined>
0xffff5828cacc   108  stur x0, [x3, #79]
0xffff5828cad0   112  ldr x0, pc+504 (addr 0x0000ffff5828ccc8)    ;; object: 0x39c04241 <undefined>
0xffff5828cad4   116  stur x0, [x3, #87]
0xffff5828cad8   120  ldr x0, pc+504 (addr 0x0000ffff5828ccd0)    ;; object: 0x39c04241 <undefined>
0xffff5828cadc   124  stur x0, [x3, #95]
0xffff5828cae0   128  ldr x0, pc+504 (addr 0x0000ffff5828ccd8)    ;; object: 0x39c04241 <undefined>
0xffff5828cae4   132  stur x0, [x3, #103]
0xffff5828cae8   136  ldr x0, pc+504 (addr 0x0000ffff5828cce0)    ;; object: 0x39c04241 <undefined>
0xffff5828caec   140  stur x0, [x3, #111]
0xffff5828caf0   144  ldr x0, pc+504 (addr 0x0000ffff5828cce8)    ;; object: 0x39c04241 <undefined>
0xffff5828caf4   148  stur x0, [x3, #119]
0xffff5828caf8   152  ldr x0, pc+504 (addr 0x0000ffff5828ccf0)    ;; object: 0x39c04241 <undefined>
0xffff5828cafc   156  stur x0, [x3, #127]
0xffff5828cb00   160  ldr x0, pc+504 (addr 0x0000ffff5828ccf8)    ;; object: 0x39c04241 <undefined>
0xffff5828cb04   164  stur x0, [x3, #135]
0xffff5828cb08   168  ldr x0, pc+504 (addr 0x0000ffff5828cd00)    ;; object: 0x39c04241 <undefined>
0xffff5828cb0c   172  stur x0, [x3, #143]
0xffff5828cb10   176  ldr x0, pc+504 (addr 0x0000ffff5828cd08)    ;; object: 0x39c04241 <undefined>
0xffff5828cb14   180  stur x0, [x3, #151]
0xffff5828cb18   184  ldr x0, pc+504 (addr 0x0000ffff5828cd10)    ;; object: 0x39c04241 <undefined>
0xffff5828cb1c   188  stur x0, [x3, #159]
0xffff5828cb20   192  ldr x0, pc+504 (addr 0x0000ffff5828cd18)    ;; object: 0x39c04241 <undefined>
0xffff5828cb24   196  stur x0, [x3, #167]
0xffff5828cb28   200  ldr x0, pc+504 (addr 0x0000ffff5828cd20)    ;; object: 0x39c04241 <undefined>
0xffff5828cb2c   204  stur x0, [x3, #175]
0xffff5828cb30   208  ldr x0, pc+504 (addr 0x0000ffff5828cd28)    ;; object: 0x39c04241 <undefined>
0xffff5828cb34   212  stur x0, [x3, #183]
0xffff5828cb38   216  ldr x0, pc+504 (addr 0x0000ffff5828cd30)    ;; object: 0x39c04241 <undefined>
0xffff5828cb3c   220  stur x0, [x3, #191]
0xffff5828cb40   224  ldr x0, pc+504 (addr 0x0000ffff5828cd38)    ;; object: 0x39c04241 <undefined>
0xffff5828cb44   228  stur x0, [x3, #199]
0xffff5828cb48   232  ldr x0, pc+504 (addr 0x0000ffff5828cd40)    ;; object: 0x39c04241 <undefined>
0xffff5828cb4c   236  stur x0, [x3, #207]
0xffff5828cb50   240  ldr x0, pc+504 (addr 0x0000ffff5828cd48)    ;; object: 0x39c04241 <undefined>
0xffff5828cb54   244  stur x0, [x3, #215]
0xffff5828cb58   248  ldr x0, pc+504 (addr 0x0000ffff5828cd50)    ;; object: 0x39c04241 <undefined>
0xffff5828cb5c   252  stur x0, [x3, #223]
0xffff5828cb60   256  ldr x0, pc+504 (addr 0x0000ffff5828cd58)    ;; object: 0x39c04241 <undefined>
0xffff5828cb64   260  stur x0, [x3, #231]
0xffff5828cb68   264  ldr x0, pc+504 (addr 0x0000ffff5828cd60)    ;; object: 0x39c04241 <undefined>
0xffff5828cb6c   268  stur x0, [x3, #239]
0xffff5828cb70   272  ldr x0, pc+504 (addr 0x0000ffff5828cd68)    ;; object: 0x39c04241 <undefined>
0xffff5828cb74   276  stur x0, [x3, #247]
0xffff5828cb78   280  ldr x0, pc+504 (addr 0x0000ffff5828cd70)    ;; object: 0x39c04241 <undefined>
0xffff5828cb7c   284  stur x0, [x3, #255]
0xffff5828cb80   288  ldr x0, pc+504 (addr 0x0000ffff5828cd78)    ;; object: 0x39c04241 <undefined>
0xffff5828cb84   292  movz x16, #0x107
0xffff5828cb88   296  str x0, [x3, x16]
0xffff5828cb8c   300  ldr x0, pc+500 (addr 0x0000ffff5828cd80)    ;; object: 0x39c04241 <undefined>
0xffff5828cb90   304  movz x16, #0x10f
0xffff5828cb94   308  str x0, [x3, x16]
0xffff5828cb98   312  ldr x0, pc+496 (addr 0x0000ffff5828cd88)    ;; object: 0x39c04241 <undefined>
0xffff5828cb9c   316  movz x16, #0x117
0xffff5828cba0   320  str x0, [x3, x16]
0xffff5828cba4   324  ldr x0, pc+492 (addr 0x0000ffff5828cd90)    ;; object: 0x39c04241 <undefined>
0xffff5828cba8   328  movz x16, #0x11f
0xffff5828cbac   332  str x0, [x3, x16]
0xffff5828cbb0   336  ldr x0, pc+488 (addr 0x0000ffff5828cd98)    ;; object: 0x39c04241 <undefined>
0xffff5828cbb4   340  movz x16, #0x127
0xffff5828cbb8   344  str x0, [x3, x16]
0xffff5828cbbc   348  ldr x0, pc+484 (addr 0x0000ffff5828cda0)    ;; object: 0x39c04241 <undefined>
0xffff5828cbc0   352  movz x16, #0x12f
0xffff5828cbc4   356  str x0, [x3, x16]
0xffff5828cbc8   360  ldr x0, pc+480 (addr 0x0000ffff5828cda8)    ;; object: 0x39c04241 <undefined>
0xffff5828cbcc   364  movz x16, #0x137
0xffff5828cbd0   368  str x0, [x3, x16]
0xffff5828cbd4   372  ldr x0, pc+476 (addr 0x0000ffff5828cdb0)    ;; object: 0x39c04241 <undefined>
0xffff5828cbd8   376  movz x16, #0x13f
0xffff5828cbdc   380  str x0, [x3, x16]
0xffff5828cbe0   384  ldr x0, pc+472 (addr 0x0000ffff5828cdb8)    ;; object: 0x39c04241 <undefined>
0xffff5828cbe4   388  movz x16, #0x147
0xffff5828cbe8   392  str x0, [x3, x16]
0xffff5828cbec   396  ldr x0, pc+468 (addr 0x0000ffff5828cdc0)    ;; object: 0x39c04241 <undefined>
0xffff5828cbf0   400  movz x16, #0x14f
0xffff5828cbf4   404  str x0, [x3, x16]
0xffff5828cbf8   408  ldr x0, pc+464 (addr 0x0000ffff5828cdc8)    ;; object: 0x39c04241 <undefined>
0xffff5828cbfc   412  movz x16, #0x157
0xffff5828cc00   416  str x0, [x3, x16]
0xffff5828cc04   420  ldr x0, pc+460 (addr 0x0000ffff5828cdd0)    ;; object: 0x39c04241 <undefined>
0xffff5828cc08   424  movz x16, #0x15f
0xffff5828cc0c   428  str x0, [x3, x16]
0xffff5828cc10   432  ldr x0, pc+456 (addr 0x0000ffff5828cdd8)    ;; object: 0x39c04241 <undefined>
0xffff5828cc14   436  movz x16, #0x167
0xffff5828cc18   440  str x0, [x3, x16]
0xffff5828cc1c   444  mov x0, x3
0xffff5828cc20   448  ret
0xffff5828cc24   452  sub csp, jssp, #0x10 (16)
0xffff5828cc28   456  stp fp, lr, [jssp, #-16]!
0xffff5828cc2c   460  movz fp, #0xa00000000
0xffff5828cc30   464  sub csp, jssp, #0x8 (8)
0xffff5828cc34   468  str fp, [jssp, #-8]!
0xffff5828cc38   472  add fp, jssp, #0x8 (8)
0xffff5828cc3c   476  movz x3, #0x0
0xffff5828cc40   480  mov x16, lr
0xffff5828cc44   484  ldr x17, pc+412 (addr 0x0000ffff5828cde0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5828cc48   488  blr x17
0xffff5828cc4c   492  movz x0, #0x17000000000
0xffff5828cc50   496  movz x10, #0x0
0xffff5828cc54   500  sub csp, jssp, #0x10 (16)
0xffff5828cc58   504  stp x10, x0, [jssp, #-16]!
0xffff5828cc5c   508  movz x0, #0x2
0xffff5828cc60   512  movz x1, #0x5b88
0xffff5828cc64   516  movk x1, #0xe2, lsl #16
0xffff5828cc68   520  ldr x16, pc+384 (addr 0x0000ffff5828cde8)    ;; code: STUB, CEntryStub, minor: 5
0xffff5828cc6c   524  blr x16
0xffff5828cc70   528  str x0, [jssp, #24]
0xffff5828cc74   532  ldr x16, pc+380 (addr 0x0000ffff5828cdf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5828cc78   536  blr x16
0xffff5828cc7c   540  ldr lr, [jssp, #16]
0xffff5828cc80   544  ldp xzr, fp, [jssp], #24
0xffff5828cc84   548  b #-0x204 (addr 0xffff5828ca80)
0xffff5828cc88   552  58000b7f       constant pool begin (num_const = 91)    ;; constant pool
0xffff5828cc8c   556  d63f03e0       constant
0xffff5828cc90   560  32b06149       constant
0xffff5828cc94   564  00000000       constant
0xffff5828cc98   568  39c04519       constant
0xffff5828cc9c   572  00000000       constant
0xffff5828cca0   576  39c04241       constant
0xffff5828cca4   580  00000000       constant
0xffff5828cca8   584  39c04241       constant
0xffff5828ccac   588  00000000       constant
0xffff5828ccb0   592  39c04241       constant
0xffff5828ccb4   596  00000000       constant
0xffff5828ccb8   600  39c04241       constant
0xffff5828ccbc   604  00000000       constant
0xffff5828ccc0   608  39c04241       constant
0xffff5828ccc4   612  00000000       constant
0xffff5828ccc8   616  39c04241       constant
0xffff5828cccc   620  00000000       constant
0xffff5828ccd0   624  39c04241       constant
0xffff5828ccd4   628  00000000       constant
0xffff5828ccd8   632  39c04241       constant
0xffff5828ccdc   636  00000000       constant
0xffff5828cce0   640  39c04241       constant
0xffff5828cce4   644  00000000       constant
0xffff5828cce8   648  39c04241       constant
0xffff5828ccec   652  00000000       constant
0xffff5828ccf0   656  39c04241       constant
0xffff5828ccf4   660  00000000       constant
0xffff5828ccf8   664  39c04241       constant
0xffff5828ccfc   668  00000000       constant
0xffff5828cd00   672  39c04241       constant
0xffff5828cd04   676  00000000       constant
0xffff5828cd08   680  39c04241       constant
0xffff5828cd0c   684  00000000       constant
0xffff5828cd10   688  39c04241       constant
0xffff5828cd14   692  00000000       constant
0xffff5828cd18   696  39c04241       constant
0xffff5828cd1c   700  00000000       constant
0xffff5828cd20   704  39c04241       constant
0xffff5828cd24   708  00000000       constant
0xffff5828cd28   712  39c04241       constant
0xffff5828cd2c   716  00000000       constant
0xffff5828cd30   720  39c04241       constant
0xffff5828cd34   724  00000000       constant
0xffff5828cd38   728  39c04241       constant
0xffff5828cd3c   732  00000000       constant
0xffff5828cd40   736  39c04241       constant
0xffff5828cd44   740  00000000       constant
0xffff5828cd48   744  39c04241       constant
0xffff5828cd4c   748  00000000       constant
0xffff5828cd50   752  39c04241       constant
0xffff5828cd54   756  00000000       constant
0xffff5828cd58   760  39c04241       constant
0xffff5828cd5c   764  00000000       constant
0xffff5828cd60   768  39c04241       constant
0xffff5828cd64   772  00000000       constant
0xffff5828cd68   776  39c04241       constant
0xffff5828cd6c   780  00000000       constant
0xffff5828cd70   784  39c04241       constant
0xffff5828cd74   788  00000000       constant
0xffff5828cd78   792  39c04241       constant
0xffff5828cd7c   796  00000000       constant
0xffff5828cd80   800  39c04241       constant
0xffff5828cd84   804  00000000       constant
0xffff5828cd88   808  39c04241       constant
0xffff5828cd8c   812  00000000       constant
0xffff5828cd90   816  39c04241       constant
0xffff5828cd94   820  00000000       constant
0xffff5828cd98   824  39c04241       constant
0xffff5828cd9c   828  00000000       constant
0xffff5828cda0   832  39c04241       constant
0xffff5828cda4   836  00000000       constant
0xffff5828cda8   840  39c04241       constant
0xffff5828cdac   844  00000000       constant
0xffff5828cdb0   848  39c04241       constant
0xffff5828cdb4   852  00000000       constant
0xffff5828cdb8   856  39c04241       constant
0xffff5828cdbc   860  00000000       constant
0xffff5828cdc0   864  39c04241       constant
0xffff5828cdc4   868  00000000       constant
0xffff5828cdc8   872  39c04241       constant
0xffff5828cdcc   876  00000000       constant
0xffff5828cdd0   880  39c04241       constant
0xffff5828cdd4   884  00000000       constant
0xffff5828cdd8   888  39c04241       constant
0xffff5828cddc   892  00000000       constant
0xffff5828cde0   896  58206820       constant
0xffff5828cde4   900  0000ffff       constant
0xffff5828cde8   904  58206260       constant
0xffff5828cdec   908  0000ffff       constant
0xffff5828cdf0   912  582068e0       constant
0xffff5828cdf4   916  0000ffff       constant


Safepoints (size = 21)
0xffff5828cc70   528  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 51)
0xffff5828ca80  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828ca98  embedded object  (0x39c04519 <the hole>)
0xffff5828caa8  embedded object  (0x39c04241 <undefined>)
0xffff5828cab0  embedded object  (0x39c04241 <undefined>)
0xffff5828cab8  embedded object  (0x39c04241 <undefined>)
0xffff5828cac0  embedded object  (0x39c04241 <undefined>)
0xffff5828cac8  embedded object  (0x39c04241 <undefined>)
0xffff5828cad0  embedded object  (0x39c04241 <undefined>)
0xffff5828cad8  embedded object  (0x39c04241 <undefined>)
0xffff5828cae0  embedded object  (0x39c04241 <undefined>)
0xffff5828cae8  embedded object  (0x39c04241 <undefined>)
0xffff5828caf0  embedded object  (0x39c04241 <undefined>)
0xffff5828caf8  embedded object  (0x39c04241 <undefined>)
0xffff5828cb00  embedded object  (0x39c04241 <undefined>)
0xffff5828cb08  embedded object  (0x39c04241 <undefined>)
0xffff5828cb10  embedded object  (0x39c04241 <undefined>)
0xffff5828cb18  embedded object  (0x39c04241 <undefined>)
0xffff5828cb20  embedded object  (0x39c04241 <undefined>)
0xffff5828cb28  embedded object  (0x39c04241 <undefined>)
0xffff5828cb30  embedded object  (0x39c04241 <undefined>)
0xffff5828cb38  embedded object  (0x39c04241 <undefined>)
0xffff5828cb40  embedded object  (0x39c04241 <undefined>)
0xffff5828cb48  embedded object  (0x39c04241 <undefined>)
0xffff5828cb50  embedded object  (0x39c04241 <undefined>)
0xffff5828cb58  embedded object  (0x39c04241 <undefined>)
0xffff5828cb60  embedded object  (0x39c04241 <undefined>)
0xffff5828cb68  embedded object  (0x39c04241 <undefined>)
0xffff5828cb70  embedded object  (0x39c04241 <undefined>)
0xffff5828cb78  embedded object  (0x39c04241 <undefined>)
0xffff5828cb80  embedded object  (0x39c04241 <undefined>)
0xffff5828cb8c  embedded object  (0x39c04241 <undefined>)
0xffff5828cb98  embedded object  (0x39c04241 <undefined>)
0xffff5828cba4  embedded object  (0x39c04241 <undefined>)
0xffff5828cbb0  embedded object  (0x39c04241 <undefined>)
0xffff5828cbbc  embedded object  (0x39c04241 <undefined>)
0xffff5828cbc8  embedded object  (0x39c04241 <undefined>)
0xffff5828cbd4  embedded object  (0x39c04241 <undefined>)
0xffff5828cbe0  embedded object  (0x39c04241 <undefined>)
0xffff5828cbec  embedded object  (0x39c04241 <undefined>)
0xffff5828cbf8  embedded object  (0x39c04241 <undefined>)
0xffff5828cc04  embedded object  (0x39c04241 <undefined>)
0xffff5828cc10  embedded object  (0x39c04241 <undefined>)
0xffff5828cc44  code target (STUB)  (0xffff58206820)
0xffff5828cc68  code target (STUB)  (0xffff58206260)
0xffff5828cc74  code target (STUB)  (0xffff582068e0)
0xffff5828cc88  constant pool (size 368)


kind = HANDLER
major_key = <NoCache>Stub
name = runInThisContext
compiler = unknown
Instructions (size = 120)
0xffff5828f420     0  sub csp, jssp, #0x8 (8)
0xffff5828f424     4  str x3, [jssp, #-8]!
0xffff5828f428     8  sub csp, jssp, #0x8 (8)
0xffff5828f42c    12  str x0, [jssp, #-8]!
0xffff5828f430    16  ldr x0, pc+72 (addr 0x0000ffff5828f478)    ;; object: 0x39ccde09 Cell for 0
0xffff5828f434    20  ldur x0, [x0, #7]
0xffff5828f438    24  cmp x0, #0x0 (0)
0xffff5828f43c    28  b.ne #+0x14 (addr 0xffff5828f450)
0xffff5828f440    32  ldr x3, pc+64 (addr 0x0000ffff5828f480)    ;; object: 0x39ccde19 WeakCell for 0x4f99cef9 <an Object with map 0x32b1a571>
0xffff5828f444    36  ldur x3, [x3, #7]
0xffff5828f448    40  tbz w3, #0, #+0x8 (addr 0xffff5828f450)
0xffff5828f44c    44  b #+0x14 (addr 0xffff5828f460)
0xffff5828f450    48  ldr x0, [jssp], #8
0xffff5828f454    52  ldr x3, [jssp], #8
0xffff5828f458    56  ldr x16, pc+48 (addr 0x0000ffff5828f488)    ;; code: BUILTIN
0xffff5828f45c    60  br x16
0xffff5828f460    64  add jssp, jssp, #0x10 (16)
0xffff5828f464    68  mov x1, x3
0xffff5828f468    72  ldr x16, pc+40 (addr 0x0000ffff5828f490)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff5828f46c    76  br x16
0xffff5828f470    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5828f474    84  d63f03e0       constant
0xffff5828f478    88  39ccde09       constant
0xffff5828f47c    92  00000000       constant
0xffff5828f480    96  39ccde19       constant
0xffff5828f484   100  00000000       constant
0xffff5828f488   104  582222e0       constant
0xffff5828f48c   108  0000ffff       constant
0xffff5828f490   112  58243300       constant
0xffff5828f494   116  0000ffff       constant


RelocInfo (size = 10)
0xffff5828f430  embedded object  (0x39ccde09 Cell for 0)
0xffff5828f440  embedded object  (0x39ccde19 WeakCell for 0x4f99cef9 <an Object with map 0x32b1a571>)
0xffff5828f458  code target (BUILTIN)  (0xffff582222e0)
0xffff5828f468  code target (HANDLER)  (0xffff58243300)
0xffff5828f470  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = buffer
compiler = unknown
Instructions (size = 184)
0xffff5828f500     0  sub csp, jssp, #0x8 (8)
0xffff5828f504     4  str x3, [jssp, #-8]!
0xffff5828f508     8  sub csp, jssp, #0x8 (8)
0xffff5828f50c    12  str x4, [jssp, #-8]!
0xffff5828f510    16  ldr x3, pc+112 (addr 0x0000ffff5828f580)    ;; object: 0x39c63e59 Cell for 0
0xffff5828f514    20  ldur x3, [x3, #7]
0xffff5828f518    24  cmp x3, #0x0 (0)
0xffff5828f51c    28  b.ne #+0x44 (addr 0xffff5828f560)
0xffff5828f520    32  tbz w0, #0, #+0x40 (addr 0xffff5828f560)
0xffff5828f524    36  ldur x3, [x0, #-1]
0xffff5828f528    40  ldr x4, pc+96 (addr 0x0000ffff5828f588)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828f52c    44  ldur x4, [x4, #7]
0xffff5828f530    48  cmp x3, x4
0xffff5828f534    52  b.ne #+0x2c (addr 0xffff5828f560)
0xffff5828f538    56  ldr x5, pc+88 (addr 0x0000ffff5828f590)    ;; object: 0x39ccf261 WeakCell for 0x32b1ca91 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828f53c    60  ldur x5, [x5, #7]
0xffff5828f540    64  tbz w5, #0, #+0x20 (addr 0xffff5828f560)
0xffff5828f544    68  ldursw x4, [x5, #15]
0xffff5828f548    72  tbnz w4, #23, #+0x18 (addr 0xffff5828f560)
0xffff5828f54c    76  ldr x4, [jssp], #8
0xffff5828f550    80  ldr x3, [jssp], #8
0xffff5828f554    84  ldr x2, pc+68 (addr 0x0000ffff5828f598)    ;; object: 0x39c780a9 <String[6]: buffer>
0xffff5828f558    88  ldr x16, pc+72 (addr 0x0000ffff5828f5a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff5828f55c    92  br x16
0xffff5828f560    96  ldr x2, pc+72 (addr 0x0000ffff5828f5a8)    ;; object: 0x39c780a9 <String[6]: buffer>
0xffff5828f564   100  ldr x4, [jssp], #8
0xffff5828f568   104  ldr x3, [jssp], #8
0xffff5828f56c   108  ldr x16, pc+68 (addr 0x0000ffff5828f5b0)    ;; code: BUILTIN
0xffff5828f570   112  br x16
0xffff5828f574   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff5828f578   120  d63f03e0       constant
0xffff5828f57c   124  d503201f       constant
0xffff5828f580   128  39c63e59       constant
0xffff5828f584   132  00000000       constant
0xffff5828f588   136  39cc22b1       constant
0xffff5828f58c   140  00000000       constant
0xffff5828f590   144  39ccf261       constant
0xffff5828f594   148  00000000       constant
0xffff5828f598   152  39c780a9       constant
0xffff5828f59c   156  00000000       constant
0xffff5828f5a0   160  5828bdc0       constant
0xffff5828f5a4   164  0000ffff       constant
0xffff5828f5a8   168  39c780a9       constant
0xffff5828f5ac   172  00000000       constant
0xffff5828f5b0   176  58222420       constant
0xffff5828f5b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff5828f510  embedded object  (0x39c63e59 Cell for 0)
0xffff5828f528  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828f538  embedded object  (0x39ccf261 WeakCell for 0x32b1ca91 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828f554  embedded object  (0x39c780a9 <String[6]: buffer>)
0xffff5828f558  code target (HANDLER)  (0xffff5828bdc0)
0xffff5828f560  embedded object  (0x39c780a9 <String[6]: buffer>)
0xffff5828f56c  code target (BUILTIN)  (0xffff58222420)
0xffff5828f574  constant pool (size 68)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 861)
0xffff5828f620     0  movz x2, #0x92c0
0xffff5828f624     4  movk x2, #0x16e7, lsl #16
0xffff5828f628     8  ldp x3, x0, [x2]
0xffff5828f62c    12  adds x16, x3, #0x150 (336)
0xffff5828f630    16  ccmp x16, x0, #nzCv, lo
0xffff5828f634    20  b.hi #+0x180 (addr 0xffff5828f7b4)
0xffff5828f638    24  str x16, [x2]
0xffff5828f63c    28  orr x3, x3, #0x1
0xffff5828f640    32  ldr x0, pc+480 (addr 0x0000ffff5828f820)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828f644    36  stur x0, [x3, #-1]
0xffff5828f648    40  movz x0, #0x2800000000
0xffff5828f64c    44  stur x0, [x3, #7]
0xffff5828f650    48  stur x1, [x3, #15]
0xffff5828f654    52  stur cp, [x3, #23]
0xffff5828f658    56  ldr x0, pc+464 (addr 0x0000ffff5828f828)    ;; object: 0x39c04519 <the hole>
0xffff5828f65c    60  stur x0, [x3, #31]
0xffff5828f660    64  ldur x0, [cp, #39]
0xffff5828f664    68  stur x0, [x3, #39]
0xffff5828f668    72  ldr x0, pc+456 (addr 0x0000ffff5828f830)    ;; object: 0x39c04241 <undefined>
0xffff5828f66c    76  stur x0, [x3, #47]
0xffff5828f670    80  ldr x0, pc+456 (addr 0x0000ffff5828f838)    ;; object: 0x39c04241 <undefined>
0xffff5828f674    84  stur x0, [x3, #55]
0xffff5828f678    88  ldr x0, pc+456 (addr 0x0000ffff5828f840)    ;; object: 0x39c04241 <undefined>
0xffff5828f67c    92  stur x0, [x3, #63]
0xffff5828f680    96  ldr x0, pc+456 (addr 0x0000ffff5828f848)    ;; object: 0x39c04241 <undefined>
0xffff5828f684   100  stur x0, [x3, #71]
0xffff5828f688   104  ldr x0, pc+456 (addr 0x0000ffff5828f850)    ;; object: 0x39c04241 <undefined>
0xffff5828f68c   108  stur x0, [x3, #79]
0xffff5828f690   112  ldr x0, pc+456 (addr 0x0000ffff5828f858)    ;; object: 0x39c04241 <undefined>
0xffff5828f694   116  stur x0, [x3, #87]
0xffff5828f698   120  ldr x0, pc+456 (addr 0x0000ffff5828f860)    ;; object: 0x39c04241 <undefined>
0xffff5828f69c   124  stur x0, [x3, #95]
0xffff5828f6a0   128  ldr x0, pc+456 (addr 0x0000ffff5828f868)    ;; object: 0x39c04241 <undefined>
0xffff5828f6a4   132  stur x0, [x3, #103]
0xffff5828f6a8   136  ldr x0, pc+456 (addr 0x0000ffff5828f870)    ;; object: 0x39c04241 <undefined>
0xffff5828f6ac   140  stur x0, [x3, #111]
0xffff5828f6b0   144  ldr x0, pc+456 (addr 0x0000ffff5828f878)    ;; object: 0x39c04241 <undefined>
0xffff5828f6b4   148  stur x0, [x3, #119]
0xffff5828f6b8   152  ldr x0, pc+456 (addr 0x0000ffff5828f880)    ;; object: 0x39c04241 <undefined>
0xffff5828f6bc   156  stur x0, [x3, #127]
0xffff5828f6c0   160  ldr x0, pc+456 (addr 0x0000ffff5828f888)    ;; object: 0x39c04241 <undefined>
0xffff5828f6c4   164  stur x0, [x3, #135]
0xffff5828f6c8   168  ldr x0, pc+456 (addr 0x0000ffff5828f890)    ;; object: 0x39c04241 <undefined>
0xffff5828f6cc   172  stur x0, [x3, #143]
0xffff5828f6d0   176  ldr x0, pc+456 (addr 0x0000ffff5828f898)    ;; object: 0x39c04241 <undefined>
0xffff5828f6d4   180  stur x0, [x3, #151]
0xffff5828f6d8   184  ldr x0, pc+456 (addr 0x0000ffff5828f8a0)    ;; object: 0x39c04241 <undefined>
0xffff5828f6dc   188  stur x0, [x3, #159]
0xffff5828f6e0   192  ldr x0, pc+456 (addr 0x0000ffff5828f8a8)    ;; object: 0x39c04241 <undefined>
0xffff5828f6e4   196  stur x0, [x3, #167]
0xffff5828f6e8   200  ldr x0, pc+456 (addr 0x0000ffff5828f8b0)    ;; object: 0x39c04241 <undefined>
0xffff5828f6ec   204  stur x0, [x3, #175]
0xffff5828f6f0   208  ldr x0, pc+456 (addr 0x0000ffff5828f8b8)    ;; object: 0x39c04241 <undefined>
0xffff5828f6f4   212  stur x0, [x3, #183]
0xffff5828f6f8   216  ldr x0, pc+456 (addr 0x0000ffff5828f8c0)    ;; object: 0x39c04241 <undefined>
0xffff5828f6fc   220  stur x0, [x3, #191]
0xffff5828f700   224  ldr x0, pc+456 (addr 0x0000ffff5828f8c8)    ;; object: 0x39c04241 <undefined>
0xffff5828f704   228  stur x0, [x3, #199]
0xffff5828f708   232  ldr x0, pc+456 (addr 0x0000ffff5828f8d0)    ;; object: 0x39c04241 <undefined>
0xffff5828f70c   236  stur x0, [x3, #207]
0xffff5828f710   240  ldr x0, pc+456 (addr 0x0000ffff5828f8d8)    ;; object: 0x39c04241 <undefined>
0xffff5828f714   244  stur x0, [x3, #215]
0xffff5828f718   248  ldr x0, pc+456 (addr 0x0000ffff5828f8e0)    ;; object: 0x39c04241 <undefined>
0xffff5828f71c   252  stur x0, [x3, #223]
0xffff5828f720   256  ldr x0, pc+456 (addr 0x0000ffff5828f8e8)    ;; object: 0x39c04241 <undefined>
0xffff5828f724   260  stur x0, [x3, #231]
0xffff5828f728   264  ldr x0, pc+456 (addr 0x0000ffff5828f8f0)    ;; object: 0x39c04241 <undefined>
0xffff5828f72c   268  stur x0, [x3, #239]
0xffff5828f730   272  ldr x0, pc+456 (addr 0x0000ffff5828f8f8)    ;; object: 0x39c04241 <undefined>
0xffff5828f734   276  stur x0, [x3, #247]
0xffff5828f738   280  ldr x0, pc+456 (addr 0x0000ffff5828f900)    ;; object: 0x39c04241 <undefined>
0xffff5828f73c   284  stur x0, [x3, #255]
0xffff5828f740   288  ldr x0, pc+456 (addr 0x0000ffff5828f908)    ;; object: 0x39c04241 <undefined>
0xffff5828f744   292  movz x16, #0x107
0xffff5828f748   296  str x0, [x3, x16]
0xffff5828f74c   300  ldr x0, pc+452 (addr 0x0000ffff5828f910)    ;; object: 0x39c04241 <undefined>
0xffff5828f750   304  movz x16, #0x10f
0xffff5828f754   308  str x0, [x3, x16]
0xffff5828f758   312  ldr x0, pc+448 (addr 0x0000ffff5828f918)    ;; object: 0x39c04241 <undefined>
0xffff5828f75c   316  movz x16, #0x117
0xffff5828f760   320  str x0, [x3, x16]
0xffff5828f764   324  ldr x0, pc+444 (addr 0x0000ffff5828f920)    ;; object: 0x39c04241 <undefined>
0xffff5828f768   328  movz x16, #0x11f
0xffff5828f76c   332  str x0, [x3, x16]
0xffff5828f770   336  ldr x0, pc+440 (addr 0x0000ffff5828f928)    ;; object: 0x39c04241 <undefined>
0xffff5828f774   340  movz x16, #0x127
0xffff5828f778   344  str x0, [x3, x16]
0xffff5828f77c   348  ldr x0, pc+436 (addr 0x0000ffff5828f930)    ;; object: 0x39c04241 <undefined>
0xffff5828f780   352  movz x16, #0x12f
0xffff5828f784   356  str x0, [x3, x16]
0xffff5828f788   360  ldr x0, pc+432 (addr 0x0000ffff5828f938)    ;; object: 0x39c04241 <undefined>
0xffff5828f78c   364  movz x16, #0x137
0xffff5828f790   368  str x0, [x3, x16]
0xffff5828f794   372  ldr x0, pc+428 (addr 0x0000ffff5828f940)    ;; object: 0x39c04241 <undefined>
0xffff5828f798   376  movz x16, #0x13f
0xffff5828f79c   380  str x0, [x3, x16]
0xffff5828f7a0   384  ldr x0, pc+424 (addr 0x0000ffff5828f948)    ;; object: 0x39c04241 <undefined>
0xffff5828f7a4   388  movz x16, #0x147
0xffff5828f7a8   392  str x0, [x3, x16]
0xffff5828f7ac   396  mov x0, x3
0xffff5828f7b0   400  ret
0xffff5828f7b4   404  sub csp, jssp, #0x10 (16)
0xffff5828f7b8   408  stp fp, lr, [jssp, #-16]!
0xffff5828f7bc   412  movz fp, #0xa00000000
0xffff5828f7c0   416  sub csp, jssp, #0x8 (8)
0xffff5828f7c4   420  str fp, [jssp, #-8]!
0xffff5828f7c8   424  add fp, jssp, #0x8 (8)
0xffff5828f7cc   428  movz x3, #0x0
0xffff5828f7d0   432  mov x16, lr
0xffff5828f7d4   436  ldr x17, pc+380 (addr 0x0000ffff5828f950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5828f7d8   440  blr x17
0xffff5828f7dc   444  movz x0, #0x15000000000
0xffff5828f7e0   448  movz x10, #0x0
0xffff5828f7e4   452  sub csp, jssp, #0x10 (16)
0xffff5828f7e8   456  stp x10, x0, [jssp, #-16]!
0xffff5828f7ec   460  movz x0, #0x2
0xffff5828f7f0   464  movz x1, #0x5b88
0xffff5828f7f4   468  movk x1, #0xe2, lsl #16
0xffff5828f7f8   472  ldr x16, pc+352 (addr 0x0000ffff5828f958)    ;; code: STUB, CEntryStub, minor: 5
0xffff5828f7fc   476  blr x16
0xffff5828f800   480  str x0, [jssp, #24]
0xffff5828f804   484  ldr x16, pc+348 (addr 0x0000ffff5828f960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5828f808   488  blr x16
0xffff5828f80c   492  ldr lr, [jssp, #16]
0xffff5828f810   496  ldp xzr, fp, [jssp], #24
0xffff5828f814   500  b #-0x1d4 (addr 0xffff5828f640)
0xffff5828f818   504  58000a7f       constant pool begin (num_const = 83)    ;; constant pool
0xffff5828f81c   508  d63f03e0       constant
0xffff5828f820   512  32b06149       constant
0xffff5828f824   516  00000000       constant
0xffff5828f828   520  39c04519       constant
0xffff5828f82c   524  00000000       constant
0xffff5828f830   528  39c04241       constant
0xffff5828f834   532  00000000       constant
0xffff5828f838   536  39c04241       constant
0xffff5828f83c   540  00000000       constant
0xffff5828f840   544  39c04241       constant
0xffff5828f844   548  00000000       constant
0xffff5828f848   552  39c04241       constant
0xffff5828f84c   556  00000000       constant
0xffff5828f850   560  39c04241       constant
0xffff5828f854   564  00000000       constant
0xffff5828f858   568  39c04241       constant
0xffff5828f85c   572  00000000       constant
0xffff5828f860   576  39c04241       constant
0xffff5828f864   580  00000000       constant
0xffff5828f868   584  39c04241       constant
0xffff5828f86c   588  00000000       constant
0xffff5828f870   592  39c04241       constant
0xffff5828f874   596  00000000       constant
0xffff5828f878   600  39c04241       constant
0xffff5828f87c   604  00000000       constant
0xffff5828f880   608  39c04241       constant
0xffff5828f884   612  00000000       constant
0xffff5828f888   616  39c04241       constant
0xffff5828f88c   620  00000000       constant
0xffff5828f890   624  39c04241       constant
0xffff5828f894   628  00000000       constant
0xffff5828f898   632  39c04241       constant
0xffff5828f89c   636  00000000       constant
0xffff5828f8a0   640  39c04241       constant
0xffff5828f8a4   644  00000000       constant
0xffff5828f8a8   648  39c04241       constant
0xffff5828f8ac   652  00000000       constant
0xffff5828f8b0   656  39c04241       constant
0xffff5828f8b4   660  00000000       constant
0xffff5828f8b8   664  39c04241       constant
0xffff5828f8bc   668  00000000       constant
0xffff5828f8c0   672  39c04241       constant
0xffff5828f8c4   676  00000000       constant
0xffff5828f8c8   680  39c04241       constant
0xffff5828f8cc   684  00000000       constant
0xffff5828f8d0   688  39c04241       constant
0xffff5828f8d4   692  00000000       constant
0xffff5828f8d8   696  39c04241       constant
0xffff5828f8dc   700  00000000       constant
0xffff5828f8e0   704  39c04241       constant
0xffff5828f8e4   708  00000000       constant
0xffff5828f8e8   712  39c04241       constant
0xffff5828f8ec   716  00000000       constant
0xffff5828f8f0   720  39c04241       constant
0xffff5828f8f4   724  00000000       constant
0xffff5828f8f8   728  39c04241       constant
0xffff5828f8fc   732  00000000       constant
0xffff5828f900   736  39c04241       constant
0xffff5828f904   740  00000000       constant
0xffff5828f908   744  39c04241       constant
0xffff5828f90c   748  00000000       constant
0xffff5828f910   752  39c04241       constant
0xffff5828f914   756  00000000       constant
0xffff5828f918   760  39c04241       constant
0xffff5828f91c   764  00000000       constant
0xffff5828f920   768  39c04241       constant
0xffff5828f924   772  00000000       constant
0xffff5828f928   776  39c04241       constant
0xffff5828f92c   780  00000000       constant
0xffff5828f930   784  39c04241       constant
0xffff5828f934   788  00000000       constant
0xffff5828f938   792  39c04241       constant
0xffff5828f93c   796  00000000       constant
0xffff5828f940   800  39c04241       constant
0xffff5828f944   804  00000000       constant
0xffff5828f948   808  39c04241       constant
0xffff5828f94c   812  00000000       constant
0xffff5828f950   816  58206820       constant
0xffff5828f954   820  0000ffff       constant
0xffff5828f958   824  58206260       constant
0xffff5828f95c   828  0000ffff       constant
0xffff5828f960   832  582068e0       constant
0xffff5828f964   836  0000ffff       constant


Safepoints (size = 21)
0xffff5828f800   480  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 47)
0xffff5828f640  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828f658  embedded object  (0x39c04519 <the hole>)
0xffff5828f668  embedded object  (0x39c04241 <undefined>)
0xffff5828f670  embedded object  (0x39c04241 <undefined>)
0xffff5828f678  embedded object  (0x39c04241 <undefined>)
0xffff5828f680  embedded object  (0x39c04241 <undefined>)
0xffff5828f688  embedded object  (0x39c04241 <undefined>)
0xffff5828f690  embedded object  (0x39c04241 <undefined>)
0xffff5828f698  embedded object  (0x39c04241 <undefined>)
0xffff5828f6a0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6a8  embedded object  (0x39c04241 <undefined>)
0xffff5828f6b0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6b8  embedded object  (0x39c04241 <undefined>)
0xffff5828f6c0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6c8  embedded object  (0x39c04241 <undefined>)
0xffff5828f6d0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6d8  embedded object  (0x39c04241 <undefined>)
0xffff5828f6e0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6e8  embedded object  (0x39c04241 <undefined>)
0xffff5828f6f0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6f8  embedded object  (0x39c04241 <undefined>)
0xffff5828f700  embedded object  (0x39c04241 <undefined>)
0xffff5828f708  embedded object  (0x39c04241 <undefined>)
0xffff5828f710  embedded object  (0x39c04241 <undefined>)
0xffff5828f718  embedded object  (0x39c04241 <undefined>)
0xffff5828f720  embedded object  (0x39c04241 <undefined>)
0xffff5828f728  embedded object  (0x39c04241 <undefined>)
0xffff5828f730  embedded object  (0x39c04241 <undefined>)
0xffff5828f738  embedded object  (0x39c04241 <undefined>)
0xffff5828f740  embedded object  (0x39c04241 <undefined>)
0xffff5828f74c  embedded object  (0x39c04241 <undefined>)
0xffff5828f758  embedded object  (0x39c04241 <undefined>)
0xffff5828f764  embedded object  (0x39c04241 <undefined>)
0xffff5828f770  embedded object  (0x39c04241 <undefined>)
0xffff5828f77c  embedded object  (0x39c04241 <undefined>)
0xffff5828f788  embedded object  (0x39c04241 <undefined>)
0xffff5828f794  embedded object  (0x39c04241 <undefined>)
0xffff5828f7a0  embedded object  (0x39c04241 <undefined>)
0xffff5828f7d4  code target (STUB)  (0xffff58206820)
0xffff5828f7f8  code target (STUB)  (0xffff58206260)
0xffff5828f804  code target (STUB)  (0xffff582068e0)
0xffff5828f818  constant pool (size 336)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 861)
0xffff5828f620     0  movz x2, #0x92c0
0xffff5828f624     4  movk x2, #0x16e7, lsl #16
0xffff5828f628     8  ldp x3, x0, [x2]
0xffff5828f62c    12  adds x16, x3, #0x150 (336)
0xffff5828f630    16  ccmp x16, x0, #nzCv, lo
0xffff5828f634    20  b.hi #+0x180 (addr 0xffff5828f7b4)
0xffff5828f638    24  str x16, [x2]
0xffff5828f63c    28  orr x3, x3, #0x1
0xffff5828f640    32  ldr x0, pc+480 (addr 0x0000ffff5828f820)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5828f644    36  stur x0, [x3, #-1]
0xffff5828f648    40  movz x0, #0x2800000000
0xffff5828f64c    44  stur x0, [x3, #7]
0xffff5828f650    48  stur x1, [x3, #15]
0xffff5828f654    52  stur cp, [x3, #23]
0xffff5828f658    56  ldr x0, pc+464 (addr 0x0000ffff5828f828)    ;; object: 0x39c04519 <the hole>
0xffff5828f65c    60  stur x0, [x3, #31]
0xffff5828f660    64  ldur x0, [cp, #39]
0xffff5828f664    68  stur x0, [x3, #39]
0xffff5828f668    72  ldr x0, pc+456 (addr 0x0000ffff5828f830)    ;; object: 0x39c04241 <undefined>
0xffff5828f66c    76  stur x0, [x3, #47]
0xffff5828f670    80  ldr x0, pc+456 (addr 0x0000ffff5828f838)    ;; object: 0x39c04241 <undefined>
0xffff5828f674    84  stur x0, [x3, #55]
0xffff5828f678    88  ldr x0, pc+456 (addr 0x0000ffff5828f840)    ;; object: 0x39c04241 <undefined>
0xffff5828f67c    92  stur x0, [x3, #63]
0xffff5828f680    96  ldr x0, pc+456 (addr 0x0000ffff5828f848)    ;; object: 0x39c04241 <undefined>
0xffff5828f684   100  stur x0, [x3, #71]
0xffff5828f688   104  ldr x0, pc+456 (addr 0x0000ffff5828f850)    ;; object: 0x39c04241 <undefined>
0xffff5828f68c   108  stur x0, [x3, #79]
0xffff5828f690   112  ldr x0, pc+456 (addr 0x0000ffff5828f858)    ;; object: 0x39c04241 <undefined>
0xffff5828f694   116  stur x0, [x3, #87]
0xffff5828f698   120  ldr x0, pc+456 (addr 0x0000ffff5828f860)    ;; object: 0x39c04241 <undefined>
0xffff5828f69c   124  stur x0, [x3, #95]
0xffff5828f6a0   128  ldr x0, pc+456 (addr 0x0000ffff5828f868)    ;; object: 0x39c04241 <undefined>
0xffff5828f6a4   132  stur x0, [x3, #103]
0xffff5828f6a8   136  ldr x0, pc+456 (addr 0x0000ffff5828f870)    ;; object: 0x39c04241 <undefined>
0xffff5828f6ac   140  stur x0, [x3, #111]
0xffff5828f6b0   144  ldr x0, pc+456 (addr 0x0000ffff5828f878)    ;; object: 0x39c04241 <undefined>
0xffff5828f6b4   148  stur x0, [x3, #119]
0xffff5828f6b8   152  ldr x0, pc+456 (addr 0x0000ffff5828f880)    ;; object: 0x39c04241 <undefined>
0xffff5828f6bc   156  stur x0, [x3, #127]
0xffff5828f6c0   160  ldr x0, pc+456 (addr 0x0000ffff5828f888)    ;; object: 0x39c04241 <undefined>
0xffff5828f6c4   164  stur x0, [x3, #135]
0xffff5828f6c8   168  ldr x0, pc+456 (addr 0x0000ffff5828f890)    ;; object: 0x39c04241 <undefined>
0xffff5828f6cc   172  stur x0, [x3, #143]
0xffff5828f6d0   176  ldr x0, pc+456 (addr 0x0000ffff5828f898)    ;; object: 0x39c04241 <undefined>
0xffff5828f6d4   180  stur x0, [x3, #151]
0xffff5828f6d8   184  ldr x0, pc+456 (addr 0x0000ffff5828f8a0)    ;; object: 0x39c04241 <undefined>
0xffff5828f6dc   188  stur x0, [x3, #159]
0xffff5828f6e0   192  ldr x0, pc+456 (addr 0x0000ffff5828f8a8)    ;; object: 0x39c04241 <undefined>
0xffff5828f6e4   196  stur x0, [x3, #167]
0xffff5828f6e8   200  ldr x0, pc+456 (addr 0x0000ffff5828f8b0)    ;; object: 0x39c04241 <undefined>
0xffff5828f6ec   204  stur x0, [x3, #175]
0xffff5828f6f0   208  ldr x0, pc+456 (addr 0x0000ffff5828f8b8)    ;; object: 0x39c04241 <undefined>
0xffff5828f6f4   212  stur x0, [x3, #183]
0xffff5828f6f8   216  ldr x0, pc+456 (addr 0x0000ffff5828f8c0)    ;; object: 0x39c04241 <undefined>
0xffff5828f6fc   220  stur x0, [x3, #191]
0xffff5828f700   224  ldr x0, pc+456 (addr 0x0000ffff5828f8c8)    ;; object: 0x39c04241 <undefined>
0xffff5828f704   228  stur x0, [x3, #199]
0xffff5828f708   232  ldr x0, pc+456 (addr 0x0000ffff5828f8d0)    ;; object: 0x39c04241 <undefined>
0xffff5828f70c   236  stur x0, [x3, #207]
0xffff5828f710   240  ldr x0, pc+456 (addr 0x0000ffff5828f8d8)    ;; object: 0x39c04241 <undefined>
0xffff5828f714   244  stur x0, [x3, #215]
0xffff5828f718   248  ldr x0, pc+456 (addr 0x0000ffff5828f8e0)    ;; object: 0x39c04241 <undefined>
0xffff5828f71c   252  stur x0, [x3, #223]
0xffff5828f720   256  ldr x0, pc+456 (addr 0x0000ffff5828f8e8)    ;; object: 0x39c04241 <undefined>
0xffff5828f724   260  stur x0, [x3, #231]
0xffff5828f728   264  ldr x0, pc+456 (addr 0x0000ffff5828f8f0)    ;; object: 0x39c04241 <undefined>
0xffff5828f72c   268  stur x0, [x3, #239]
0xffff5828f730   272  ldr x0, pc+456 (addr 0x0000ffff5828f8f8)    ;; object: 0x39c04241 <undefined>
0xffff5828f734   276  stur x0, [x3, #247]
0xffff5828f738   280  ldr x0, pc+456 (addr 0x0000ffff5828f900)    ;; object: 0x39c04241 <undefined>
0xffff5828f73c   284  stur x0, [x3, #255]
0xffff5828f740   288  ldr x0, pc+456 (addr 0x0000ffff5828f908)    ;; object: 0x39c04241 <undefined>
0xffff5828f744   292  movz x16, #0x107
0xffff5828f748   296  str x0, [x3, x16]
0xffff5828f74c   300  ldr x0, pc+452 (addr 0x0000ffff5828f910)    ;; object: 0x39c04241 <undefined>
0xffff5828f750   304  movz x16, #0x10f
0xffff5828f754   308  str x0, [x3, x16]
0xffff5828f758   312  ldr x0, pc+448 (addr 0x0000ffff5828f918)    ;; object: 0x39c04241 <undefined>
0xffff5828f75c   316  movz x16, #0x117
0xffff5828f760   320  str x0, [x3, x16]
0xffff5828f764   324  ldr x0, pc+444 (addr 0x0000ffff5828f920)    ;; object: 0x39c04241 <undefined>
0xffff5828f768   328  movz x16, #0x11f
0xffff5828f76c   332  str x0, [x3, x16]
0xffff5828f770   336  ldr x0, pc+440 (addr 0x0000ffff5828f928)    ;; object: 0x39c04241 <undefined>
0xffff5828f774   340  movz x16, #0x127
0xffff5828f778   344  str x0, [x3, x16]
0xffff5828f77c   348  ldr x0, pc+436 (addr 0x0000ffff5828f930)    ;; object: 0x39c04241 <undefined>
0xffff5828f780   352  movz x16, #0x12f
0xffff5828f784   356  str x0, [x3, x16]
0xffff5828f788   360  ldr x0, pc+432 (addr 0x0000ffff5828f938)    ;; object: 0x39c04241 <undefined>
0xffff5828f78c   364  movz x16, #0x137
0xffff5828f790   368  str x0, [x3, x16]
0xffff5828f794   372  ldr x0, pc+428 (addr 0x0000ffff5828f940)    ;; object: 0x39c04241 <undefined>
0xffff5828f798   376  movz x16, #0x13f
0xffff5828f79c   380  str x0, [x3, x16]
0xffff5828f7a0   384  ldr x0, pc+424 (addr 0x0000ffff5828f948)    ;; object: 0x39c04241 <undefined>
0xffff5828f7a4   388  movz x16, #0x147
0xffff5828f7a8   392  str x0, [x3, x16]
0xffff5828f7ac   396  mov x0, x3
0xffff5828f7b0   400  ret
0xffff5828f7b4   404  sub csp, jssp, #0x10 (16)
0xffff5828f7b8   408  stp fp, lr, [jssp, #-16]!
0xffff5828f7bc   412  movz fp, #0xa00000000
0xffff5828f7c0   416  sub csp, jssp, #0x8 (8)
0xffff5828f7c4   420  str fp, [jssp, #-8]!
0xffff5828f7c8   424  add fp, jssp, #0x8 (8)
0xffff5828f7cc   428  movz x3, #0x0
0xffff5828f7d0   432  mov x16, lr
0xffff5828f7d4   436  ldr x17, pc+380 (addr 0x0000ffff5828f950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5828f7d8   440  blr x17
0xffff5828f7dc   444  movz x0, #0x15000000000
0xffff5828f7e0   448  movz x10, #0x0
0xffff5828f7e4   452  sub csp, jssp, #0x10 (16)
0xffff5828f7e8   456  stp x10, x0, [jssp, #-16]!
0xffff5828f7ec   460  movz x0, #0x2
0xffff5828f7f0   464  movz x1, #0x5b88
0xffff5828f7f4   468  movk x1, #0xe2, lsl #16
0xffff5828f7f8   472  ldr x16, pc+352 (addr 0x0000ffff5828f958)    ;; code: STUB, CEntryStub, minor: 5
0xffff5828f7fc   476  blr x16
0xffff5828f800   480  str x0, [jssp, #24]
0xffff5828f804   484  ldr x16, pc+348 (addr 0x0000ffff5828f960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5828f808   488  blr x16
0xffff5828f80c   492  ldr lr, [jssp, #16]
0xffff5828f810   496  ldp xzr, fp, [jssp], #24
0xffff5828f814   500  b #-0x1d4 (addr 0xffff5828f640)
0xffff5828f818   504  58000a7f       constant pool begin (num_const = 83)    ;; constant pool
0xffff5828f81c   508  d63f03e0       constant
0xffff5828f820   512  32b06149       constant
0xffff5828f824   516  00000000       constant
0xffff5828f828   520  39c04519       constant
0xffff5828f82c   524  00000000       constant
0xffff5828f830   528  39c04241       constant
0xffff5828f834   532  00000000       constant
0xffff5828f838   536  39c04241       constant
0xffff5828f83c   540  00000000       constant
0xffff5828f840   544  39c04241       constant
0xffff5828f844   548  00000000       constant
0xffff5828f848   552  39c04241       constant
0xffff5828f84c   556  00000000       constant
0xffff5828f850   560  39c04241       constant
0xffff5828f854   564  00000000       constant
0xffff5828f858   568  39c04241       constant
0xffff5828f85c   572  00000000       constant
0xffff5828f860   576  39c04241       constant
0xffff5828f864   580  00000000       constant
0xffff5828f868   584  39c04241       constant
0xffff5828f86c   588  00000000       constant
0xffff5828f870   592  39c04241       constant
0xffff5828f874   596  00000000       constant
0xffff5828f878   600  39c04241       constant
0xffff5828f87c   604  00000000       constant
0xffff5828f880   608  39c04241       constant
0xffff5828f884   612  00000000       constant
0xffff5828f888   616  39c04241       constant
0xffff5828f88c   620  00000000       constant
0xffff5828f890   624  39c04241       constant
0xffff5828f894   628  00000000       constant
0xffff5828f898   632  39c04241       constant
0xffff5828f89c   636  00000000       constant
0xffff5828f8a0   640  39c04241       constant
0xffff5828f8a4   644  00000000       constant
0xffff5828f8a8   648  39c04241       constant
0xffff5828f8ac   652  00000000       constant
0xffff5828f8b0   656  39c04241       constant
0xffff5828f8b4   660  00000000       constant
0xffff5828f8b8   664  39c04241       constant
0xffff5828f8bc   668  00000000       constant
0xffff5828f8c0   672  39c04241       constant
0xffff5828f8c4   676  00000000       constant
0xffff5828f8c8   680  39c04241       constant
0xffff5828f8cc   684  00000000       constant
0xffff5828f8d0   688  39c04241       constant
0xffff5828f8d4   692  00000000       constant
0xffff5828f8d8   696  39c04241       constant
0xffff5828f8dc   700  00000000       constant
0xffff5828f8e0   704  39c04241       constant
0xffff5828f8e4   708  00000000       constant
0xffff5828f8e8   712  39c04241       constant
0xffff5828f8ec   716  00000000       constant
0xffff5828f8f0   720  39c04241       constant
0xffff5828f8f4   724  00000000       constant
0xffff5828f8f8   728  39c04241       constant
0xffff5828f8fc   732  00000000       constant
0xffff5828f900   736  39c04241       constant
0xffff5828f904   740  00000000       constant
0xffff5828f908   744  39c04241       constant
0xffff5828f90c   748  00000000       constant
0xffff5828f910   752  39c04241       constant
0xffff5828f914   756  00000000       constant
0xffff5828f918   760  39c04241       constant
0xffff5828f91c   764  00000000       constant
0xffff5828f920   768  39c04241       constant
0xffff5828f924   772  00000000       constant
0xffff5828f928   776  39c04241       constant
0xffff5828f92c   780  00000000       constant
0xffff5828f930   784  39c04241       constant
0xffff5828f934   788  00000000       constant
0xffff5828f938   792  39c04241       constant
0xffff5828f93c   796  00000000       constant
0xffff5828f940   800  39c04241       constant
0xffff5828f944   804  00000000       constant
0xffff5828f948   808  39c04241       constant
0xffff5828f94c   812  00000000       constant
0xffff5828f950   816  58206820       constant
0xffff5828f954   820  0000ffff       constant
0xffff5828f958   824  58206260       constant
0xffff5828f95c   828  0000ffff       constant
0xffff5828f960   832  582068e0       constant
0xffff5828f964   836  0000ffff       constant


Safepoints (size = 21)
0xffff5828f800   480  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 47)
0xffff5828f640  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5828f658  embedded object  (0x39c04519 <the hole>)
0xffff5828f668  embedded object  (0x39c04241 <undefined>)
0xffff5828f670  embedded object  (0x39c04241 <undefined>)
0xffff5828f678  embedded object  (0x39c04241 <undefined>)
0xffff5828f680  embedded object  (0x39c04241 <undefined>)
0xffff5828f688  embedded object  (0x39c04241 <undefined>)
0xffff5828f690  embedded object  (0x39c04241 <undefined>)
0xffff5828f698  embedded object  (0x39c04241 <undefined>)
0xffff5828f6a0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6a8  embedded object  (0x39c04241 <undefined>)
0xffff5828f6b0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6b8  embedded object  (0x39c04241 <undefined>)
0xffff5828f6c0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6c8  embedded object  (0x39c04241 <undefined>)
0xffff5828f6d0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6d8  embedded object  (0x39c04241 <undefined>)
0xffff5828f6e0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6e8  embedded object  (0x39c04241 <undefined>)
0xffff5828f6f0  embedded object  (0x39c04241 <undefined>)
0xffff5828f6f8  embedded object  (0x39c04241 <undefined>)
0xffff5828f700  embedded object  (0x39c04241 <undefined>)
0xffff5828f708  embedded object  (0x39c04241 <undefined>)
0xffff5828f710  embedded object  (0x39c04241 <undefined>)
0xffff5828f718  embedded object  (0x39c04241 <undefined>)
0xffff5828f720  embedded object  (0x39c04241 <undefined>)
0xffff5828f728  embedded object  (0x39c04241 <undefined>)
0xffff5828f730  embedded object  (0x39c04241 <undefined>)
0xffff5828f738  embedded object  (0x39c04241 <undefined>)
0xffff5828f740  embedded object  (0x39c04241 <undefined>)
0xffff5828f74c  embedded object  (0x39c04241 <undefined>)
0xffff5828f758  embedded object  (0x39c04241 <undefined>)
0xffff5828f764  embedded object  (0x39c04241 <undefined>)
0xffff5828f770  embedded object  (0x39c04241 <undefined>)
0xffff5828f77c  embedded object  (0x39c04241 <undefined>)
0xffff5828f788  embedded object  (0x39c04241 <undefined>)
0xffff5828f794  embedded object  (0x39c04241 <undefined>)
0xffff5828f7a0  embedded object  (0x39c04241 <undefined>)
0xffff5828f7d4  code target (STUB)  (0xffff58206820)
0xffff5828f7f8  code target (STUB)  (0xffff58206260)
0xffff5828f804  code target (STUB)  (0xffff582068e0)
0xffff5828f818  constant pool (size 336)


kind = HANDLER
major_key = <NoCache>Stub
name = process
compiler = unknown
Instructions (size = 120)
0xffff58293300     0  sub csp, jssp, #0x8 (8)
0xffff58293304     4  str x3, [jssp, #-8]!
0xffff58293308     8  sub csp, jssp, #0x8 (8)
0xffff5829330c    12  str x0, [jssp, #-8]!
0xffff58293310    16  ldr x0, pc+80 (addr 0x0000ffff58293360)    ;; object: 0x39cc5d51 Cell for 0
0xffff58293314    20  ldur x0, [x0, #7]
0xffff58293318    24  cmp x0, #0x0 (0)
0xffff5829331c    28  b.ne #+0x2c (addr 0xffff58293348)
0xffff58293320    32  ldr x0, pc+72 (addr 0x0000ffff58293368)    ;; object: 0x39cd89f9 WeakCell for 0x39cc79b9 PropertyCell for 0x4f992ce9 <a process with map 0x32b1c0f1>
0xffff58293324    36  ldur x0, [x0, #7]
0xffff58293328    40  tbz w0, #0, #+0x20 (addr 0xffff58293348)
0xffff5829332c    44  ldur x0, [x0, #15]
0xffff58293330    48  ldr x16, [x26, #88]
0xffff58293334    52  cmp x0, x16
0xffff58293338    56  b.eq #+0x10 (addr 0xffff58293348)
0xffff5829333c    60  add jssp, jssp, #0x10 (16)
0xffff58293340    64  ret
0xffff58293344    68  b #+0x14 (addr 0xffff58293358)
0xffff58293348    72  ldr x0, [jssp], #8
0xffff5829334c    76  ldr x3, [jssp], #8
0xffff58293350    80  ldr x16, pc+32 (addr 0x0000ffff58293370)    ;; code: BUILTIN
0xffff58293354    84  br x16
0xffff58293358    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5829335c    92  d63f03e0       constant
0xffff58293360    96  39cc5d51       constant
0xffff58293364   100  00000000       constant
0xffff58293368   104  39cd89f9       constant
0xffff5829336c   108  00000000       constant
0xffff58293370   112  582222e0       constant
0xffff58293374   116  0000ffff       constant


RelocInfo (size = 9)
0xffff58293310  embedded object  (0x39cc5d51 Cell for 0)
0xffff58293320  embedded object  (0x39cd89f9 WeakCell for 0x39cc79b9 PropertyCell for 0x4f992ce9 <a process with map 0x32b1c0f1>)
0xffff58293350  code target (BUILTIN)  (0xffff582222e0)
0xffff58293358  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = internal/util
compiler = unknown
Instructions (size = 184)
0xffff582933e0     0  sub csp, jssp, #0x8 (8)
0xffff582933e4     4  str x3, [jssp, #-8]!
0xffff582933e8     8  sub csp, jssp, #0x8 (8)
0xffff582933ec    12  str x4, [jssp, #-8]!
0xffff582933f0    16  ldr x3, pc+112 (addr 0x0000ffff58293460)    ;; object: 0x39c63e59 Cell for 0
0xffff582933f4    20  ldur x3, [x3, #7]
0xffff582933f8    24  cmp x3, #0x0 (0)
0xffff582933fc    28  b.ne #+0x44 (addr 0xffff58293440)
0xffff58293400    32  tbz w0, #0, #+0x40 (addr 0xffff58293440)
0xffff58293404    36  ldur x3, [x0, #-1]
0xffff58293408    40  ldr x4, pc+96 (addr 0x0000ffff58293468)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5829340c    44  ldur x4, [x4, #7]
0xffff58293410    48  cmp x3, x4
0xffff58293414    52  b.ne #+0x2c (addr 0xffff58293440)
0xffff58293418    56  ldr x5, pc+88 (addr 0x0000ffff58293470)    ;; object: 0x39cdacf1 WeakCell for 0x32b1f2c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5829341c    60  ldur x5, [x5, #7]
0xffff58293420    64  tbz w5, #0, #+0x20 (addr 0xffff58293440)
0xffff58293424    68  ldursw x4, [x5, #15]
0xffff58293428    72  tbnz w4, #23, #+0x18 (addr 0xffff58293440)
0xffff5829342c    76  ldr x4, [jssp], #8
0xffff58293430    80  ldr x3, [jssp], #8
0xffff58293434    84  ldr x2, pc+68 (addr 0x0000ffff58293478)    ;; object: 0x39cb9451 <String[13]: internal/util>
0xffff58293438    88  ldr x16, pc+72 (addr 0x0000ffff58293480)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff5829343c    92  br x16
0xffff58293440    96  ldr x2, pc+72 (addr 0x0000ffff58293488)    ;; object: 0x39cb9451 <String[13]: internal/util>
0xffff58293444   100  ldr x4, [jssp], #8
0xffff58293448   104  ldr x3, [jssp], #8
0xffff5829344c   108  ldr x16, pc+68 (addr 0x0000ffff58293490)    ;; code: BUILTIN
0xffff58293450   112  br x16
0xffff58293454   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58293458   120  d63f03e0       constant
0xffff5829345c   124  d503201f       constant
0xffff58293460   128  39c63e59       constant
0xffff58293464   132  00000000       constant
0xffff58293468   136  39cc22b1       constant
0xffff5829346c   140  00000000       constant
0xffff58293470   144  39cdacf1       constant
0xffff58293474   148  00000000       constant
0xffff58293478   152  39cb9451       constant
0xffff5829347c   156  00000000       constant
0xffff58293480   160  5828c000       constant
0xffff58293484   164  0000ffff       constant
0xffff58293488   168  39cb9451       constant
0xffff5829348c   172  00000000       constant
0xffff58293490   176  58222420       constant
0xffff58293494   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582933f0  embedded object  (0x39c63e59 Cell for 0)
0xffff58293408  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58293418  embedded object  (0x39cdacf1 WeakCell for 0x32b1f2c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58293434  embedded object  (0x39cb9451 <String[13]: internal/util>)
0xffff58293438  code target (HANDLER)  (0xffff5828c000)
0xffff58293440  embedded object  (0x39cb9451 <String[13]: internal/util>)
0xffff5829344c  code target (BUILTIN)  (0xffff58222420)
0xffff58293454  constant pool (size 68)

kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 262145
name = CallICStub(args(1), NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff58293500     0  add x4, x2, x3, asr #29
0xffff58293504     4  ldur x4, [x4, #15]
0xffff58293508     8  ldur x5, [x4, #7]
0xffff5829350c    12  cmp x5, x1
0xffff58293510    16  b.ne #+0x2c (addr 0xffff5829353c)
0xffff58293514    20  tbz w1, #0, #+0x28 (addr 0xffff5829353c)
0xffff58293518    24  add x2, x2, x3, asr #29
0xffff5829351c    28  add x2, x2, #0x18 (24)
0xffff58293520    32  ldur x3, [x2, #-1]
0xffff58293524    36  movz x16, #0x200000000
0xffff58293528    40  add x3, x3, x16
0xffff5829352c    44  stur x3, [x2, #-1]
0xffff58293530    48  movz x0, #0x1
0xffff58293534    52  ldr x16, pc+372 (addr 0x0000ffff582936a8)    ;; code: BUILTIN
0xffff58293538    56  br x16
0xffff5829353c    60  ldr x16, [x26, #2400]
0xffff58293540    64  cmp x4, x16
0xffff58293544    68  b.eq #+0x78 (addr 0xffff582935bc)
0xffff58293548    72  ldur x5, [x4, #-1]
0xffff5829354c    76  ldr x16, [x26, #2736]
0xffff58293550    80  cmp x5, x16
0xffff58293554    84  b.ne #+0x40 (addr 0xffff58293594)
0xffff58293558    88  ldur x5, [cp, #39]
0xffff5829355c    92  ldur x5, [x5, #95]
0xffff58293560    96  cmp x1, x5
0xffff58293564   100  b.ne #+0xec (addr 0xffff58293650)
0xffff58293568   104  movz x0, #0x1
0xffff5829356c   108  add x2, x2, x3, asr #29
0xffff58293570   112  add x2, x2, #0x18 (24)
0xffff58293574   116  ldur x3, [x2, #-1]
0xffff58293578   120  movz x16, #0x200000000
0xffff5829357c   124  add x3, x3, x16
0xffff58293580   128  stur x3, [x2, #-1]
0xffff58293584   132  mov x2, x4
0xffff58293588   136  mov x3, x1
0xffff5829358c   140  ldr x16, pc+292 (addr 0x0000ffff582936b0)    ;; code: STUB, ArrayConstructorStub, minor: 2
0xffff58293590   144  br x16
0xffff58293594   148  ldr x16, [x26, #2568]
0xffff58293598   152  cmp x4, x16
0xffff5829359c   156  b.eq #+0xb4 (addr 0xffff58293650)
0xffff582935a0   160  ldur x5, [x4, #-1]
0xffff582935a4   164  ldrb w5, [x5, #11]
0xffff582935a8   168  cmp x5, #0xc9 (201)
0xffff582935ac   172  b.ne #+0xa4 (addr 0xffff58293650)
0xffff582935b0   176  add x4, x2, x3, asr #29
0xffff582935b4   180  ldr x5, [x26, #2400]
0xffff582935b8   184  stur x5, [x4, #15]
0xffff582935bc   188  movz x0, #0x1
0xffff582935c0   192  ldr x16, pc+248 (addr 0x0000ffff582936b8)    ;; code: BUILTIN
0xffff582935c4   196  br x16
0xffff582935c8   200  tbz w1, #0, #+0x88 (addr 0xffff58293650)
0xffff582935cc   204  ldur x5, [x1, #-1]
0xffff582935d0   208  ldrb w5, [x5, #11]
0xffff582935d4   212  cmp x5, #0xc9 (201)
0xffff582935d8   216  b.ne #+0x78 (addr 0xffff58293650)
0xffff582935dc   220  ldur x5, [cp, #39]
0xffff582935e0   224  ldur x5, [x5, #95]
0xffff582935e4   228  cmp x1, x5
0xffff582935e8   232  b.eq #+0x68 (addr 0xffff58293650)
0xffff582935ec   236  ldur x4, [x1, #39]
0xffff582935f0   240  ldur x4, [x4, #39]
0xffff582935f4   244  ldur x5, [cp, #39]
0xffff582935f8   248  cmp x4, x5
0xffff582935fc   252  b.ne #+0x54 (addr 0xffff58293650)
0xffff58293600   256  movz x5, #0x200000000
0xffff58293604   260  adds x4, x2, x3, asr #29
0xffff58293608   264  stur x5, [x4, #23]
0xffff5829360c   268  movz x16, #0xc00000000
0xffff58293610   272  sub csp, jssp, #0x10 (16)
0xffff58293614   276  stp fp, lr, [jssp, #-16]!
0xffff58293618   280  sub csp, jssp, #0x10 (16)
0xffff5829361c   284  str x16, [jssp, #-8]!
0xffff58293620   288  ldr x17, pc+160 (addr 0x0000ffff582936c0)    ;; object: 0xffff582934a1 <Code: CALL_IC>
0xffff58293624   292  sub csp, jssp, #0x10 (16)
0xffff58293628   296  str x17, [jssp, #-8]!
0xffff5829362c   300  add fp, jssp, #0x10 (16)
0xffff58293630   304  sub csp, jssp, #0x8 (8)
0xffff58293634   308  str x1, [jssp, #-8]!
0xffff58293638   312  ldr x16, pc+144 (addr 0x0000ffff582936c8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff5829363c   316  blr x16
0xffff58293640   320  ldr x1, [jssp], #8
0xffff58293644   324  mov jssp, fp
0xffff58293648   328  ldp fp, lr, [jssp], #16
0xffff5829364c   332  b #-0x11c (addr 0xffff58293530)
0xffff58293650   336  movz x16, #0xc00000000
0xffff58293654   340  sub csp, jssp, #0x10 (16)
0xffff58293658   344  stp fp, lr, [jssp, #-16]!
0xffff5829365c   348  sub csp, jssp, #0x10 (16)
0xffff58293660   352  str x16, [jssp, #-8]!
0xffff58293664   356  ldr x17, pc+108 (addr 0x0000ffff582936d0)    ;; object: 0xffff582934a1 <Code: CALL_IC>
0xffff58293668   360  sub csp, jssp, #0x10 (16)
0xffff5829366c   364  str x17, [jssp, #-8]!
0xffff58293670   368  add fp, jssp, #0x10 (16)
0xffff58293674   372  sub csp, jssp, #0x18 (24)
0xffff58293678   376  stp x3, x2, [jssp, #-24]!
0xffff5829367c   380  str x1, [jssp, #16]
0xffff58293680   384  movz x0, #0x3
0xffff58293684   388  ldr x1, pc+84 (addr 0x0000ffff582936d8)    ;; external reference (Runtime::CallIC_Miss)
0xffff58293688   392  ldr x16, pc+88 (addr 0x0000ffff582936e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5829368c   396  blr x16
0xffff58293690   400  mov x1, x0
0xffff58293694   404  mov jssp, fp
0xffff58293698   408  ldp fp, lr, [jssp], #16
0xffff5829369c   412  b #-0xe0 (addr 0xffff582935bc)
0xffff582936a0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff582936a4   420  d63f03e0       constant
0xffff582936a8   424  5821e280       constant
0xffff582936ac   428  0000ffff       constant
0xffff582936b0   432  58230b00       constant
0xffff582936b4   436  0000ffff       constant
0xffff582936b8   440  5821f560       constant
0xffff582936bc   444  0000ffff       constant
0xffff582936c0   448  582934a1       constant
0xffff582936c4   452  0000ffff       constant
0xffff582936c8   456  5820ddc0       constant
0xffff582936cc   460  0000ffff       constant
0xffff582936d0   464  582934a1       constant
0xffff582936d4   468  0000ffff       constant
0xffff582936d8   472  00c86928       constant
0xffff582936dc   476  00000000       constant
0xffff582936e0   480  58206060       constant
0xffff582936e4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff58293534  code target (BUILTIN)  (0xffff5821e280)
0xffff5829358c  code target (STUB)  (0xffff58230b00)
0xffff582935c0  code target (BUILTIN)  (0xffff5821f560)
0xffff58293620  embedded object  (0xffff582934a1 <Code: CALL_IC>)
0xffff58293638  code target (STUB)  (0xffff5820ddc0)
0xffff58293664  embedded object  (0xffff582934a1 <Code: CALL_IC>)
0xffff58293684  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58293688  code target (STUB)  (0xffff58206060)
0xffff582936a0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 262145
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff58293760     0  ldur x2, [fp, #-16]
0xffff58293764     4  ldur x2, [x2, #31]
0xffff58293768     8  ldur x2, [x2, #87]
0xffff5829376c    12  ldr x16, pc+20 (addr 0x0000ffff58293780)    ;; code: CALL_IC, GENERIC
0xffff58293770    16  br x16
0xffff58293774    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58293778    24  d63f03e0       constant
0xffff5829377c    28  d503201f       constant
0xffff58293780    32  58293500       constant
0xffff58293784    36  0000ffff       constant


RelocInfo (size = 7)
0xffff5829376c  code target (CALL_IC)  (0xffff58293500)
0xffff58293774  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 32
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 152)
0xffff58294840     0  tbz w0, #0, #+0x50 (addr 0xffff58294890)
0xffff58294844     4  ldur x2, [x0, #-1]
0xffff58294848     8  ldrb w1, [x2, #11]
0xffff5829484c    12  cmp x1, #0x80 (128)
0xffff58294850    16  b.ge #+0x10 (addr 0xffff58294860)
0xffff58294854    20  ldur x1, [x0, #15]
0xffff58294858    24  cbz x1, #+0xc (addr 0xffff58294864)
0xffff5829485c    28  b #+0x10 (addr 0xffff5829486c)
0xffff58294860    32  b #+0x30 (addr 0xffff58294890)
0xffff58294864    36  ldr x0, pc+28 (addr 0x0000ffff58294880)    ;; object: 0x39c042b1 <false>
0xffff58294868    40  ret
0xffff5829486c    44  ldr x0, pc+28 (addr 0x0000ffff58294888)    ;; object: 0x39c04281 <true>
0xffff58294870    48  ret
0xffff58294874    52  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58294878    56  d63f03e0       constant
0xffff5829487c    60  d503201f       constant
0xffff58294880    64  39c042b1       constant
0xffff58294884    68  00000000       constant
0xffff58294888    72  39c04281       constant
0xffff5829488c    76  00000000       constant
0xffff58294890    80  movz x16, #0x0
0xffff58294894    84  sub csp, jssp, #0x10 (16)
0xffff58294898    88  stp fp, lr, [jssp, #-16]!
0xffff5829489c    92  bl #+0x4 (addr 0xffff582948a0)
0xffff582948a0    96  movz x17, #0xa00000000
0xffff582948a4   100  sub csp, jssp, #0x10 (16)
0xffff582948a8   104  stp x17, cp, [jssp, #-16]!
0xffff582948ac   108  add fp, jssp, #0x10 (16)
0xffff582948b0   112  ldr x17, pc+24 (addr 0x0000ffff582948c8)    ;; lazy deoptimization bailout 0
0xffff582948b4   116  add x17, x17, x16
0xffff582948b8   120  br x17
0xffff582948bc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582948c0   128  d63f03e0       constant
0xffff582948c4   132  d503201f       constant
0xffff582948c8   136  58006000       constant
0xffff582948cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff58294864  embedded object  (0x39c042b1 <false>)
0xffff5829486c  embedded object  (0x39c04281 <true>)
0xffff58294874  constant pool (size 28)
0xffff582948b0  runtime entry
0xffff582948bc  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 32
type = NORMAL
name = ToBooleanICStub(String)
compiler = crankshaft
Instructions (size = 152)
0xffff58294840     0  tbz w0, #0, #+0x50 (addr 0xffff58294890)
0xffff58294844     4  ldur x2, [x0, #-1]
0xffff58294848     8  ldrb w1, [x2, #11]
0xffff5829484c    12  cmp x1, #0x80 (128)
0xffff58294850    16  b.ge #+0x10 (addr 0xffff58294860)
0xffff58294854    20  ldur x1, [x0, #15]
0xffff58294858    24  cbz x1, #+0xc (addr 0xffff58294864)
0xffff5829485c    28  b #+0x10 (addr 0xffff5829486c)
0xffff58294860    32  b #+0x30 (addr 0xffff58294890)
0xffff58294864    36  ldr x0, pc+28 (addr 0x0000ffff58294880)    ;; object: 0x39c042b1 <false>
0xffff58294868    40  ret
0xffff5829486c    44  ldr x0, pc+28 (addr 0x0000ffff58294888)    ;; object: 0x39c04281 <true>
0xffff58294870    48  ret
0xffff58294874    52  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58294878    56  d63f03e0       constant
0xffff5829487c    60  d503201f       constant
0xffff58294880    64  39c042b1       constant
0xffff58294884    68  00000000       constant
0xffff58294888    72  39c04281       constant
0xffff5829488c    76  00000000       constant
0xffff58294890    80  movz x16, #0x0
0xffff58294894    84  sub csp, jssp, #0x10 (16)
0xffff58294898    88  stp fp, lr, [jssp, #-16]!
0xffff5829489c    92  bl #+0x4 (addr 0xffff582948a0)
0xffff582948a0    96  movz x17, #0xa00000000
0xffff582948a4   100  sub csp, jssp, #0x10 (16)
0xffff582948a8   104  stp x17, cp, [jssp, #-16]!
0xffff582948ac   108  add fp, jssp, #0x10 (16)
0xffff582948b0   112  ldr x17, pc+24 (addr 0x0000ffff582948c8)    ;; lazy deoptimization bailout 0
0xffff582948b4   116  add x17, x17, x16
0xffff582948b8   120  br x17
0xffff582948bc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582948c0   128  d63f03e0       constant
0xffff582948c4   132  d503201f       constant
0xffff582948c8   136  58006000       constant
0xffff582948cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff58294864  embedded object  (0x39c042b1 <false>)
0xffff5829486c  embedded object  (0x39c04281 <true>)
0xffff58294874  constant pool (size 28)
0xffff582948b0  runtime entry
0xffff582948bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = Symbol
compiler = unknown
Instructions (size = 120)
0xffff58294940     0  sub csp, jssp, #0x8 (8)
0xffff58294944     4  str x3, [jssp, #-8]!
0xffff58294948     8  sub csp, jssp, #0x8 (8)
0xffff5829494c    12  str x0, [jssp, #-8]!
0xffff58294950    16  ldr x0, pc+80 (addr 0x0000ffff582949a0)    ;; object: 0x39cc5d51 Cell for 0
0xffff58294954    20  ldur x0, [x0, #7]
0xffff58294958    24  cmp x0, #0x0 (0)
0xffff5829495c    28  b.ne #+0x2c (addr 0xffff58294988)
0xffff58294960    32  ldr x0, pc+72 (addr 0x0000ffff582949a8)    ;; object: 0x39cdd079 WeakCell for 0x39c42b39 PropertyCell for 0x39c42ad1 <JS Function Symbol (SharedFunctionInfo 0x39c42a29)>
0xffff58294964    36  ldur x0, [x0, #7]
0xffff58294968    40  tbz w0, #0, #+0x20 (addr 0xffff58294988)
0xffff5829496c    44  ldur x0, [x0, #15]
0xffff58294970    48  ldr x16, [x26, #88]
0xffff58294974    52  cmp x0, x16
0xffff58294978    56  b.eq #+0x10 (addr 0xffff58294988)
0xffff5829497c    60  add jssp, jssp, #0x10 (16)
0xffff58294980    64  ret
0xffff58294984    68  b #+0x14 (addr 0xffff58294998)
0xffff58294988    72  ldr x0, [jssp], #8
0xffff5829498c    76  ldr x3, [jssp], #8
0xffff58294990    80  ldr x16, pc+32 (addr 0x0000ffff582949b0)    ;; code: BUILTIN
0xffff58294994    84  br x16
0xffff58294998    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5829499c    92  d63f03e0       constant
0xffff582949a0    96  39cc5d51       constant
0xffff582949a4   100  00000000       constant
0xffff582949a8   104  39cdd079       constant
0xffff582949ac   108  00000000       constant
0xffff582949b0   112  582222e0       constant
0xffff582949b4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff58294950  embedded object  (0x39cc5d51 Cell for 0)
0xffff58294960  embedded object  (0x39cdd079 WeakCell for 0x39c42b39 PropertyCell for 0x39c42ad1 <JS Function Symbol (SharedFunctionInfo 0x39c42a29)>)
0xffff58294990  code target (BUILTIN)  (0xffff582222e0)
0xffff58294998  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff58294a20     0  tbz w0, #0, #+0x50 (addr 0xffff58294a70)
0xffff58294a24     4  mov x2, x0
0xffff58294a28     8  stur x2, [x1, #47]
0xffff58294a2c    12  add x3, x1, #0x2f (47)
0xffff58294a30    16  and x2, x2, #0xfffffffffff00000
0xffff58294a34    20  ldr x2, [x2, #8]
0xffff58294a38    24  tbz w2, #1, #+0x24 (addr 0xffff58294a5c)
0xffff58294a3c    28  and x2, x1, #0xfffffffffff00000
0xffff58294a40    32  ldr x2, [x2, #8]
0xffff58294a44    36  tbz w2, #2, #+0x18 (addr 0xffff58294a5c)
0xffff58294a48    40  sub csp, jssp, #0x8 (8)
0xffff58294a4c    44  str lr, [jssp, #-8]!
0xffff58294a50    48  ldr x16, pc+24 (addr 0x0000ffff58294a68)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58294a54    52  blr x16
0xffff58294a58    56  ldr lr, [jssp], #8
0xffff58294a5c    60  ret
0xffff58294a60    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58294a64    68  d63f03e0       constant
0xffff58294a68    72  582170c0       constant
0xffff58294a6c    76  0000ffff       constant
0xffff58294a70    80  movz x16, #0x0
0xffff58294a74    84  sub csp, jssp, #0x10 (16)
0xffff58294a78    88  stp fp, lr, [jssp, #-16]!
0xffff58294a7c    92  bl #+0x4 (addr 0xffff58294a80)
0xffff58294a80    96  movz x17, #0xa00000000
0xffff58294a84   100  sub csp, jssp, #0x10 (16)
0xffff58294a88   104  stp x17, cp, [jssp, #-16]!
0xffff58294a8c   108  add fp, jssp, #0x10 (16)
0xffff58294a90   112  ldr x17, pc+24 (addr 0x0000ffff58294aa8)    ;; lazy deoptimization bailout 0
0xffff58294a94   116  add x17, x17, x16
0xffff58294a98   120  br x17
0xffff58294a9c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58294aa0   128  d63f03e0       constant
0xffff58294aa4   132  d503201f       constant
0xffff58294aa8   136  58006000       constant
0xffff58294aac   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff58294a50  code target (STUB)  (0xffff582170c0)
0xffff58294a60  constant pool (size 16)
0xffff58294a90  runtime entry
0xffff58294a9c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff58294a20     0  tbz w0, #0, #+0x50 (addr 0xffff58294a70)
0xffff58294a24     4  mov x2, x0
0xffff58294a28     8  stur x2, [x1, #47]
0xffff58294a2c    12  add x3, x1, #0x2f (47)
0xffff58294a30    16  and x2, x2, #0xfffffffffff00000
0xffff58294a34    20  ldr x2, [x2, #8]
0xffff58294a38    24  tbz w2, #1, #+0x24 (addr 0xffff58294a5c)
0xffff58294a3c    28  and x2, x1, #0xfffffffffff00000
0xffff58294a40    32  ldr x2, [x2, #8]
0xffff58294a44    36  tbz w2, #2, #+0x18 (addr 0xffff58294a5c)
0xffff58294a48    40  sub csp, jssp, #0x8 (8)
0xffff58294a4c    44  str lr, [jssp, #-8]!
0xffff58294a50    48  ldr x16, pc+24 (addr 0x0000ffff58294a68)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff58294a54    52  blr x16
0xffff58294a58    56  ldr lr, [jssp], #8
0xffff58294a5c    60  ret
0xffff58294a60    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff58294a64    68  d63f03e0       constant
0xffff58294a68    72  582170c0       constant
0xffff58294a6c    76  0000ffff       constant
0xffff58294a70    80  movz x16, #0x0
0xffff58294a74    84  sub csp, jssp, #0x10 (16)
0xffff58294a78    88  stp fp, lr, [jssp, #-16]!
0xffff58294a7c    92  bl #+0x4 (addr 0xffff58294a80)
0xffff58294a80    96  movz x17, #0xa00000000
0xffff58294a84   100  sub csp, jssp, #0x10 (16)
0xffff58294a88   104  stp x17, cp, [jssp, #-16]!
0xffff58294a8c   108  add fp, jssp, #0x10 (16)
0xffff58294a90   112  ldr x17, pc+24 (addr 0x0000ffff58294aa8)    ;; lazy deoptimization bailout 0
0xffff58294a94   116  add x17, x17, x16
0xffff58294a98   120  br x17
0xffff58294a9c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58294aa0   128  d63f03e0       constant
0xffff58294aa4   132  d503201f       constant
0xffff58294aa8   136  58006000       constant
0xffff58294aac   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff58294a50  code target (STUB)  (0xffff582170c0)
0xffff58294a60  constant pool (size 16)
0xffff58294a90  runtime entry
0xffff58294a9c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 344)
0xffff582951e0     0  ldur x5, [x1, #15]
0xffff582951e4     4  ldur w6, [x5, #11]
0xffff582951e8     8  ldur x16, [x1, #23]
0xffff582951ec    12  ldur x16, [x16, #39]
0xffff582951f0    16  tst x16, #0x8
0xffff582951f4    20  b.ne #+0xcc (addr 0xffff582952c0)
0xffff582951f8    24  ldur x7, [x5, #23]
0xffff582951fc    28  ldur x5, [x5, #15]
0xffff58295200    32  add x5, x7, x5
0xffff58295204    36  tbnz w2, #0, #+0x20 (addr 0xffff58295224)
0xffff58295208    40  asr x8, x2, #32
0xffff5829520c    44  cmp w8, w6
0xffff58295210    48  b.hs #+0xc0 (addr 0xffff582952d0)
0xffff58295214    52  tbnz w0, #0, #+0x38 (addr 0xffff5829524c)
0xffff58295218    56  asr x7, x0, #32
0xffff5829521c    60  str w7, [x5, w8, sxtw #2]
0xffff58295220    64  ret
0xffff58295224    68  ldur x16, [x2, #-1]
0xffff58295228    72  ldr x17, [x26, #120]
0xffff5829522c    76  cmp x16, x17
0xffff58295230    80  b.ne #+0xb0 (addr 0xffff582952e0)
0xffff58295234    84  ldur d29, [x2, #7]
0xffff58295238    88  fcvtzs w8, d29
0xffff5829523c    92  scvtf d0, w8
0xffff58295240    96  fcmp d29, d0
0xffff58295244   100  b.ne #+0x9c (addr 0xffff582952e0)
0xffff58295248   104  b #-0x3c (addr 0xffff5829520c)
0xffff5829524c   108  ldur x16, [x0, #-1]
0xffff58295250   112  ldr x17, [x26, #120]
0xffff58295254   116  cmp x16, x17
0xffff58295258   120  b.ne #+0x30 (addr 0xffff58295288)
0xffff5829525c   124  ldur d30, [x0, #7]
0xffff58295260   128  fcvtzs x7, d30
0xffff58295264   132  cmp x7, #0x1 (1)
0xffff58295268   136  ccmn x7, #1, #nzcV, vc
0xffff5829526c   140  b.vc #+0x18 (addr 0xffff58295284)
0xffff58295270   144  sub csp, jssp, #0x8 (8)
0xffff58295274   148  str lr, [jssp, #-8]!
0xffff58295278   152  ldr x16, pc+64 (addr 0x0000ffff582952b8)    ;; code: STUB, DoubleToIStub, minor: 127424
0xffff5829527c   156  blr x16
0xffff58295280   160  ldr lr, [jssp], #8
0xffff58295284   164  b #+0x24 (addr 0xffff582952a8)
0xffff58295288   168  ldp x7, x6, [x26, #64]
0xffff5829528c   172  cmp x0, x7
0xffff58295290   176  cset x7, eq
0xffff58295294   180  ccmp x0, x6, #nZcv, ne
0xffff58295298   184  b.eq #+0x10 (addr 0xffff582952a8)
0xffff5829529c   188  ldr x16, [x26, #40]
0xffff582952a0   192  cmp x0, x16
0xffff582952a4   196  b.ne #+0x4c (addr 0xffff582952f0)
0xffff582952a8   200  b #-0x8c (addr 0xffff5829521c)
0xffff582952ac   204  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582952b0   208  d63f03e0       constant
0xffff582952b4   212  d503201f       constant
0xffff582952b8   216  5824b6c0       constant
0xffff582952bc   220  0000ffff       constant
0xffff582952c0   224  movz x16, #0x0
0xffff582952c4   228  sub csp, jssp, #0x10 (16)
0xffff582952c8   232  stp fp, lr, [jssp, #-16]!
0xffff582952cc   236  bl #+0x34 (addr 0xffff58295300)
0xffff582952d0   240  movz x16, #0x8
0xffff582952d4   244  sub csp, jssp, #0x10 (16)
0xffff582952d8   248  stp fp, lr, [jssp, #-16]!
0xffff582952dc   252  bl #+0x24 (addr 0xffff58295300)
0xffff582952e0   256  movz x16, #0x10
0xffff582952e4   260  sub csp, jssp, #0x10 (16)
0xffff582952e8   264  stp fp, lr, [jssp, #-16]!
0xffff582952ec   268  bl #+0x14 (addr 0xffff58295300)
0xffff582952f0   272  movz x16, #0x18
0xffff582952f4   276  sub csp, jssp, #0x10 (16)
0xffff582952f8   280  stp fp, lr, [jssp, #-16]!
0xffff582952fc   284  bl #+0x4 (addr 0xffff58295300)
0xffff58295300   288  movz x17, #0xa00000000
0xffff58295304   292  sub csp, jssp, #0x10 (16)
0xffff58295308   296  stp x17, cp, [jssp, #-16]!
0xffff5829530c   300  add fp, jssp, #0x10 (16)
0xffff58295310   304  ldr x17, pc+24 (addr 0x0000ffff58295328)    ;; lazy deoptimization bailout 0
0xffff58295314   308  add x17, x17, x16
0xffff58295318   312  br x17
0xffff5829531c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58295320   320  d63f03e0       constant
0xffff58295324   324  d503201f       constant
0xffff58295328   328  58006000       constant
0xffff5829532c   332  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff58295278  code target (STUB)  (0xffff5824b6c0)
0xffff582952ac  constant pool (size 20)
0xffff58295310  runtime entry
0xffff5829531c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 344)
0xffff582951e0     0  ldur x5, [x1, #15]
0xffff582951e4     4  ldur w6, [x5, #11]
0xffff582951e8     8  ldur x16, [x1, #23]
0xffff582951ec    12  ldur x16, [x16, #39]
0xffff582951f0    16  tst x16, #0x8
0xffff582951f4    20  b.ne #+0xcc (addr 0xffff582952c0)
0xffff582951f8    24  ldur x7, [x5, #23]
0xffff582951fc    28  ldur x5, [x5, #15]
0xffff58295200    32  add x5, x7, x5
0xffff58295204    36  tbnz w2, #0, #+0x20 (addr 0xffff58295224)
0xffff58295208    40  asr x8, x2, #32
0xffff5829520c    44  cmp w8, w6
0xffff58295210    48  b.hs #+0xc0 (addr 0xffff582952d0)
0xffff58295214    52  tbnz w0, #0, #+0x38 (addr 0xffff5829524c)
0xffff58295218    56  asr x7, x0, #32
0xffff5829521c    60  str w7, [x5, w8, sxtw #2]
0xffff58295220    64  ret
0xffff58295224    68  ldur x16, [x2, #-1]
0xffff58295228    72  ldr x17, [x26, #120]
0xffff5829522c    76  cmp x16, x17
0xffff58295230    80  b.ne #+0xb0 (addr 0xffff582952e0)
0xffff58295234    84  ldur d29, [x2, #7]
0xffff58295238    88  fcvtzs w8, d29
0xffff5829523c    92  scvtf d0, w8
0xffff58295240    96  fcmp d29, d0
0xffff58295244   100  b.ne #+0x9c (addr 0xffff582952e0)
0xffff58295248   104  b #-0x3c (addr 0xffff5829520c)
0xffff5829524c   108  ldur x16, [x0, #-1]
0xffff58295250   112  ldr x17, [x26, #120]
0xffff58295254   116  cmp x16, x17
0xffff58295258   120  b.ne #+0x30 (addr 0xffff58295288)
0xffff5829525c   124  ldur d30, [x0, #7]
0xffff58295260   128  fcvtzs x7, d30
0xffff58295264   132  cmp x7, #0x1 (1)
0xffff58295268   136  ccmn x7, #1, #nzcV, vc
0xffff5829526c   140  b.vc #+0x18 (addr 0xffff58295284)
0xffff58295270   144  sub csp, jssp, #0x8 (8)
0xffff58295274   148  str lr, [jssp, #-8]!
0xffff58295278   152  ldr x16, pc+64 (addr 0x0000ffff582952b8)    ;; code: STUB, DoubleToIStub, minor: 127424
0xffff5829527c   156  blr x16
0xffff58295280   160  ldr lr, [jssp], #8
0xffff58295284   164  b #+0x24 (addr 0xffff582952a8)
0xffff58295288   168  ldp x7, x6, [x26, #64]
0xffff5829528c   172  cmp x0, x7
0xffff58295290   176  cset x7, eq
0xffff58295294   180  ccmp x0, x6, #nZcv, ne
0xffff58295298   184  b.eq #+0x10 (addr 0xffff582952a8)
0xffff5829529c   188  ldr x16, [x26, #40]
0xffff582952a0   192  cmp x0, x16
0xffff582952a4   196  b.ne #+0x4c (addr 0xffff582952f0)
0xffff582952a8   200  b #-0x8c (addr 0xffff5829521c)
0xffff582952ac   204  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582952b0   208  d63f03e0       constant
0xffff582952b4   212  d503201f       constant
0xffff582952b8   216  5824b6c0       constant
0xffff582952bc   220  0000ffff       constant
0xffff582952c0   224  movz x16, #0x0
0xffff582952c4   228  sub csp, jssp, #0x10 (16)
0xffff582952c8   232  stp fp, lr, [jssp, #-16]!
0xffff582952cc   236  bl #+0x34 (addr 0xffff58295300)
0xffff582952d0   240  movz x16, #0x8
0xffff582952d4   244  sub csp, jssp, #0x10 (16)
0xffff582952d8   248  stp fp, lr, [jssp, #-16]!
0xffff582952dc   252  bl #+0x24 (addr 0xffff58295300)
0xffff582952e0   256  movz x16, #0x10
0xffff582952e4   260  sub csp, jssp, #0x10 (16)
0xffff582952e8   264  stp fp, lr, [jssp, #-16]!
0xffff582952ec   268  bl #+0x14 (addr 0xffff58295300)
0xffff582952f0   272  movz x16, #0x18
0xffff582952f4   276  sub csp, jssp, #0x10 (16)
0xffff582952f8   280  stp fp, lr, [jssp, #-16]!
0xffff582952fc   284  bl #+0x4 (addr 0xffff58295300)
0xffff58295300   288  movz x17, #0xa00000000
0xffff58295304   292  sub csp, jssp, #0x10 (16)
0xffff58295308   296  stp x17, cp, [jssp, #-16]!
0xffff5829530c   300  add fp, jssp, #0x10 (16)
0xffff58295310   304  ldr x17, pc+24 (addr 0x0000ffff58295328)    ;; lazy deoptimization bailout 0
0xffff58295314   308  add x17, x17, x16
0xffff58295318   312  br x17
0xffff5829531c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58295320   320  d63f03e0       constant
0xffff58295324   324  d503201f       constant
0xffff58295328   328  58006000       constant
0xffff5829532c   332  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff58295278  code target (STUB)  (0xffff5824b6c0)
0xffff582952ac  constant pool (size 20)
0xffff58295310  runtime entry
0xffff5829531c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = Uint8Array
compiler = unknown
Instructions (size = 120)
0xffff582959e0     0  sub csp, jssp, #0x8 (8)
0xffff582959e4     4  str x3, [jssp, #-8]!
0xffff582959e8     8  sub csp, jssp, #0x8 (8)
0xffff582959ec    12  str x0, [jssp, #-8]!
0xffff582959f0    16  ldr x0, pc+80 (addr 0x0000ffff58295a40)    ;; object: 0x39cc5d51 Cell for 0
0xffff582959f4    20  ldur x0, [x0, #7]
0xffff582959f8    24  cmp x0, #0x0 (0)
0xffff582959fc    28  b.ne #+0x2c (addr 0xffff58295a28)
0xffff58295a00    32  ldr x0, pc+72 (addr 0x0000ffff58295a48)    ;; object: 0x39cdf5c9 WeakCell for 0x39c48251 PropertyCell for 0x39c481e9 <JS Function Uint8Array (SharedFunctionInfo 0x39c48141)>
0xffff58295a04    36  ldur x0, [x0, #7]
0xffff58295a08    40  tbz w0, #0, #+0x20 (addr 0xffff58295a28)
0xffff58295a0c    44  ldur x0, [x0, #15]
0xffff58295a10    48  ldr x16, [x26, #88]
0xffff58295a14    52  cmp x0, x16
0xffff58295a18    56  b.eq #+0x10 (addr 0xffff58295a28)
0xffff58295a1c    60  add jssp, jssp, #0x10 (16)
0xffff58295a20    64  ret
0xffff58295a24    68  b #+0x14 (addr 0xffff58295a38)
0xffff58295a28    72  ldr x0, [jssp], #8
0xffff58295a2c    76  ldr x3, [jssp], #8
0xffff58295a30    80  ldr x16, pc+32 (addr 0x0000ffff58295a50)    ;; code: BUILTIN
0xffff58295a34    84  br x16
0xffff58295a38    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff58295a3c    92  d63f03e0       constant
0xffff58295a40    96  39cc5d51       constant
0xffff58295a44   100  00000000       constant
0xffff58295a48   104  39cdf5c9       constant
0xffff58295a4c   108  00000000       constant
0xffff58295a50   112  582222e0       constant
0xffff58295a54   116  0000ffff       constant


RelocInfo (size = 9)
0xffff582959f0  embedded object  (0x39cc5d51 Cell for 0)
0xffff58295a00  embedded object  (0x39cdf5c9 WeakCell for 0x39c48251 PropertyCell for 0x39c481e9 <JS Function Uint8Array (SharedFunctionInfo 0x39c48141)>)
0xffff58295a30  code target (BUILTIN)  (0xffff582222e0)
0xffff58295a38  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff58295ac0     0  ldur x0, [x1, #47]
0xffff58295ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff58295ac0     0  ldur x0, [x1, #47]
0xffff58295ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 17
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 160)
0xffff58295b40     0  ldr x16, [x26, #40]
0xffff58295b44     4  cmp x0, x16
0xffff58295b48     8  b.eq #+0x24 (addr 0xffff58295b6c)
0xffff58295b4c    12  tbz w0, #0, #+0x4c (addr 0xffff58295b98)
0xffff58295b50    16  ldur x2, [x0, #-1]
0xffff58295b54    20  ldrb w1, [x2, #12]
0xffff58295b58    24  tbnz w1, #4, #+0x14 (addr 0xffff58295b6c)
0xffff58295b5c    28  ldrb w1, [x2, #11]
0xffff58295b60    32  cmp x1, #0xb1 (177)
0xffff58295b64    36  b.ge #+0x10 (addr 0xffff58295b74)
0xffff58295b68    40  b #+0x30 (addr 0xffff58295b98)
0xffff58295b6c    44  ldr x0, pc+28 (addr 0x0000ffff58295b88)    ;; object: 0x39c042b1 <false>
0xffff58295b70    48  ret
0xffff58295b74    52  ldr x0, pc+28 (addr 0x0000ffff58295b90)    ;; object: 0x39c04281 <true>
0xffff58295b78    56  ret
0xffff58295b7c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58295b80    64  d63f03e0       constant
0xffff58295b84    68  d503201f       constant
0xffff58295b88    72  39c042b1       constant
0xffff58295b8c    76  00000000       constant
0xffff58295b90    80  39c04281       constant
0xffff58295b94    84  00000000       constant
0xffff58295b98    88  movz x16, #0x0
0xffff58295b9c    92  sub csp, jssp, #0x10 (16)
0xffff58295ba0    96  stp fp, lr, [jssp, #-16]!
0xffff58295ba4   100  bl #+0x4 (addr 0xffff58295ba8)
0xffff58295ba8   104  movz x17, #0xa00000000
0xffff58295bac   108  sub csp, jssp, #0x10 (16)
0xffff58295bb0   112  stp x17, cp, [jssp, #-16]!
0xffff58295bb4   116  add fp, jssp, #0x10 (16)
0xffff58295bb8   120  ldr x17, pc+24 (addr 0x0000ffff58295bd0)    ;; lazy deoptimization bailout 0
0xffff58295bbc   124  add x17, x17, x16
0xffff58295bc0   128  br x17
0xffff58295bc4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58295bc8   136  d63f03e0       constant
0xffff58295bcc   140  d503201f       constant
0xffff58295bd0   144  58006000       constant
0xffff58295bd4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff58295b6c  embedded object  (0x39c042b1 <false>)
0xffff58295b74  embedded object  (0x39c04281 <true>)
0xffff58295b7c  constant pool (size 28)
0xffff58295bb8  runtime entry
0xffff58295bc4  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 17
type = NORMAL
name = ToBooleanICStub(Undefined,SpecObject)
compiler = crankshaft
Instructions (size = 160)
0xffff58295b40     0  ldr x16, [x26, #40]
0xffff58295b44     4  cmp x0, x16
0xffff58295b48     8  b.eq #+0x24 (addr 0xffff58295b6c)
0xffff58295b4c    12  tbz w0, #0, #+0x4c (addr 0xffff58295b98)
0xffff58295b50    16  ldur x2, [x0, #-1]
0xffff58295b54    20  ldrb w1, [x2, #12]
0xffff58295b58    24  tbnz w1, #4, #+0x14 (addr 0xffff58295b6c)
0xffff58295b5c    28  ldrb w1, [x2, #11]
0xffff58295b60    32  cmp x1, #0xb1 (177)
0xffff58295b64    36  b.ge #+0x10 (addr 0xffff58295b74)
0xffff58295b68    40  b #+0x30 (addr 0xffff58295b98)
0xffff58295b6c    44  ldr x0, pc+28 (addr 0x0000ffff58295b88)    ;; object: 0x39c042b1 <false>
0xffff58295b70    48  ret
0xffff58295b74    52  ldr x0, pc+28 (addr 0x0000ffff58295b90)    ;; object: 0x39c04281 <true>
0xffff58295b78    56  ret
0xffff58295b7c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff58295b80    64  d63f03e0       constant
0xffff58295b84    68  d503201f       constant
0xffff58295b88    72  39c042b1       constant
0xffff58295b8c    76  00000000       constant
0xffff58295b90    80  39c04281       constant
0xffff58295b94    84  00000000       constant
0xffff58295b98    88  movz x16, #0x0
0xffff58295b9c    92  sub csp, jssp, #0x10 (16)
0xffff58295ba0    96  stp fp, lr, [jssp, #-16]!
0xffff58295ba4   100  bl #+0x4 (addr 0xffff58295ba8)
0xffff58295ba8   104  movz x17, #0xa00000000
0xffff58295bac   108  sub csp, jssp, #0x10 (16)
0xffff58295bb0   112  stp x17, cp, [jssp, #-16]!
0xffff58295bb4   116  add fp, jssp, #0x10 (16)
0xffff58295bb8   120  ldr x17, pc+24 (addr 0x0000ffff58295bd0)    ;; lazy deoptimization bailout 0
0xffff58295bbc   124  add x17, x17, x16
0xffff58295bc0   128  br x17
0xffff58295bc4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58295bc8   136  d63f03e0       constant
0xffff58295bcc   140  d503201f       constant
0xffff58295bd0   144  58006000       constant
0xffff58295bd4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff58295b6c  embedded object  (0x39c042b1 <false>)
0xffff58295b74  embedded object  (0x39c04281 <true>)
0xffff58295b7c  constant pool (size 28)
0xffff58295bb8  runtime entry
0xffff58295bc4  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*BOOLEAN -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff58296240     0  orr x16, x1, x0
0xffff58296244     4  tbnz w16, #0, #+0x10 (addr 0xffff58296254)
0xffff58296248     8  asr x1, x1, #32
0xffff5829624c    12  sub x0, x1, x0, asr #32
0xffff58296250    16  ret
0xffff58296254    20  cmp x0, x1
0xffff58296258    24  b.ne #+0x30 (addr 0xffff58296288)
0xffff5829625c    28  ldur x16, [x0, #-1]
0xffff58296260    32  ldr x17, [x26, #120]
0xffff58296264    36  cmp x16, x17
0xffff58296268    40  b.eq #+0xc (addr 0xffff58296274)
0xffff5829626c    44  movz x0, #0x0
0xffff58296270    48  ret
0xffff58296274    52  ldur d0, [x0, #7]
0xffff58296278    56  fcmp d0, d0
0xffff5829627c    60  b.vc #-0x10 (addr 0xffff5829626c)
0xffff58296280    64  movn x0, #0x0
0xffff58296284    68  ret
0xffff58296288    72  and x16, x1, x0
0xffff5829628c    76  tbnz w16, #0, #+0x64 (addr 0xffff582962f0)
0xffff58296290    80  tbz w0, #0, #+0x24 (addr 0xffff582962b4)
0xffff58296294    84  ldur x16, [x0, #-1]
0xffff58296298    88  ldr x17, [x26, #120]
0xffff5829629c    92  cmp x16, x17
0xffff582962a0    96  b.eq #+0x8 (addr 0xffff582962a8)
0xffff582962a4   100  ret
0xffff582962a8   104  ldur d0, [x0, #7]
0xffff582962ac   108  scvtf d1, x1, #32
0xffff582962b0   112  b #+0x24 (addr 0xffff582962d4)
0xffff582962b4   116  ldur x16, [x1, #-1]
0xffff582962b8   120  ldr x17, [x26, #120]
0xffff582962bc   124  cmp x16, x17
0xffff582962c0   128  b.eq #+0xc (addr 0xffff582962cc)
0xffff582962c4   132  movz x0, #0x1
0xffff582962c8   136  ret
0xffff582962cc   140  ldur d1, [x1, #7]
0xffff582962d0   144  scvtf d0, x0, #32
0xffff582962d4   148  fcmp d1, d0
0xffff582962d8   152  b.vs #+0x10 (addr 0xffff582962e8)
0xffff582962dc   156  cset x0, gt
0xffff582962e0   160  csinv x0, x0, xzr, ge
0xffff582962e4   164  ret
0xffff582962e8   168  movn x0, #0x0
0xffff582962ec   172  ret
0xffff582962f0   176  ldur x10, [x0, #-1]
0xffff582962f4   180  ldur x12, [x1, #-1]
0xffff582962f8   184  ldrb w11, [x10, #11]
0xffff582962fc   188  ldrb w13, [x12, #11]
0xffff58296300   192  cmp x11, #0xb1 (177)
0xffff58296304   196  b.lt #+0x8 (addr 0xffff5829630c)
0xffff58296308   200  ret
0xffff5829630c   204  cmp x11, #0x83 (131)
0xffff58296310   208  movz x16, #0x83
0xffff58296314   212  ccmp x13, x16, #nZcv, ne
0xffff58296318   216  movz x16, #0xb1
0xffff5829631c   220  ccmp x13, x16, #NzcV, ne
0xffff58296320   224  b.ge #-0x18 (addr 0xffff58296308)
0xffff58296324   228  orr x14, x13, x11
0xffff58296328   232  tst x14, #0xc0
0xffff5829632c   236  b.eq #-0x24 (addr 0xffff58296308)
0xffff58296330   240  cmp x11, #0x81 (129)
0xffff58296334   244  b.ne #+0x18 (addr 0xffff5829634c)
0xffff58296338   248  cmp x12, x10
0xffff5829633c   252  b.ne #+0x10 (addr 0xffff5829634c)
0xffff58296340   256  ldur d1, [x1, #7]
0xffff58296344   260  ldur d0, [x0, #7]
0xffff58296348   264  b #-0x74 (addr 0xffff582962d4)
0xffff5829634c   268  movz x16, #0x87
0xffff58296350   272  and x14, x13, x16
0xffff58296354   276  movz x16, #0x87
0xffff58296358   280  and x15, x11, x16
0xffff5829635c   284  cmp x14, #0x4 (4)
0xffff58296360   288  ccmp x15, #4, #nzcv, eq
0xffff58296364   292  b.ne #+0x5c (addr 0xffff582963c0)
0xffff58296368   296  ldur x10, [x1, #15]
0xffff5829636c   300  ldur x11, [x0, #15]
0xffff58296370   304  cmp x10, x11
0xffff58296374   308  b.eq #+0xc (addr 0xffff58296380)
0xffff58296378   312  movz x0, #0x100000000
0xffff5829637c   316  ret
0xffff58296380   320  cbnz x10, #+0xc (addr 0xffff5829638c)
0xffff58296384   324  movz x0, #0x0
0xffff58296388   328  ret
0xffff5829638c   332  asr x10, x10, #32
0xffff58296390   336  add x11, x10, #0x17 (23)
0xffff58296394   340  add x1, x1, x11
0xffff58296398   344  add x0, x0, x11
0xffff5829639c   348  neg x10, x10
0xffff582963a0   352  ldrb w11, [x1, x10]
0xffff582963a4   356  ldrb w12, [x0, x10]
0xffff582963a8   360  cmp x11, x12
0xffff582963ac   364  b.ne #-0x34 (addr 0xffff58296378)
0xffff582963b0   368  add x10, x10, #0x1 (1)
0xffff582963b4   372  cbnz x10, #-0x14 (addr 0xffff582963a0)
0xffff582963b8   376  movz x0, #0x0
0xffff582963bc   380  ret
0xffff582963c0   384  movz x16, #0xc00000000
0xffff582963c4   388  sub csp, jssp, #0x10 (16)
0xffff582963c8   392  stp fp, lr, [jssp, #-16]!
0xffff582963cc   396  sub csp, jssp, #0x10 (16)
0xffff582963d0   400  str x16, [jssp, #-8]!
0xffff582963d4   404  ldr x17, pc+172 (addr 0x0000ffff58296480)    ;; object: 0xffff582961e1 <Code: COMPARE_IC>
0xffff582963d8   408  sub csp, jssp, #0x10 (16)
0xffff582963dc   412  str x17, [jssp, #-8]!
0xffff582963e0   416  add fp, jssp, #0x10 (16)
0xffff582963e4   420  sub csp, jssp, #0x10 (16)
0xffff582963e8   424  stp x0, x1, [jssp, #-16]!
0xffff582963ec   428  movz x0, #0x2
0xffff582963f0   432  ldr x1, pc+152 (addr 0x0000ffff58296488)    ;; external reference (Runtime::StrictEqual)
0xffff582963f4   436  ldr x16, pc+156 (addr 0x0000ffff58296490)    ;; code: STUB, CEntryStub, minor: 4
0xffff582963f8   440  blr x16
0xffff582963fc   444  mov jssp, fp
0xffff58296400   448  ldp fp, lr, [jssp], #16
0xffff58296404   452  ldr x1, [x26, #64]
0xffff58296408   456  sub x0, x0, x1
0xffff5829640c   460  ret
0xffff58296410   464  movz x16, #0xc00000000
0xffff58296414   468  sub csp, jssp, #0x10 (16)
0xffff58296418   472  stp fp, lr, [jssp, #-16]!
0xffff5829641c   476  sub csp, jssp, #0x10 (16)
0xffff58296420   480  str x16, [jssp, #-8]!
0xffff58296424   484  ldr x17, pc+116 (addr 0x0000ffff58296498)    ;; object: 0xffff582961e1 <Code: COMPARE_IC>
0xffff58296428   488  sub csp, jssp, #0x10 (16)
0xffff5829642c   492  str x17, [jssp, #-8]!
0xffff58296430   496  add fp, jssp, #0x10 (16)
0xffff58296434   500  sub csp, jssp, #0x18 (24)
0xffff58296438   504  stp lr, x0, [jssp, #-24]!
0xffff5829643c   508  str x1, [jssp, #16]
0xffff58296440   512  movz x10, #0x2f00000000
0xffff58296444   516  sub csp, jssp, #0x18 (24)
0xffff58296448   520  stp x10, x0, [jssp, #-24]!
0xffff5829644c   524  str x1, [jssp, #16]
0xffff58296450   528  movz x0, #0x3
0xffff58296454   532  ldr x1, pc+76 (addr 0x0000ffff582964a0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff58296458   536  ldr x16, pc+80 (addr 0x0000ffff582964a8)    ;; code: STUB, CEntryStub, minor: 4
0xffff5829645c   540  blr x16
0xffff58296460   544  add x11, x0, #0x5f (95)
0xffff58296464   548  ldr x1, [jssp, #16]
0xffff58296468   552  ldp lr, x0, [jssp], #24
0xffff5829646c   556  mov jssp, fp
0xffff58296470   560  ldp fp, lr, [jssp], #16
0xffff58296474   564  br x11
0xffff58296478   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5829647c   572  d63f03e0       constant
0xffff58296480   576  582961e1       constant
0xffff58296484   580  0000ffff       constant
0xffff58296488   584  00e50928       constant
0xffff5829648c   588  00000000       constant
0xffff58296490   592  58206060       constant
0xffff58296494   596  0000ffff       constant
0xffff58296498   600  582961e1       constant
0xffff5829649c   604  0000ffff       constant
0xffff582964a0   608  00c8a980       constant
0xffff582964a4   612  00000000       constant
0xffff582964a8   616  58206060       constant
0xffff582964ac   620  0000ffff       constant


RelocInfo (size = 16)
0xffff582963d4  embedded object  (0xffff582961e1 <Code: COMPARE_IC>)
0xffff582963f0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff582963f4  code target (STUB)  (0xffff58206060)
0xffff58296424  embedded object  (0xffff582961e1 <Code: COMPARE_IC>)
0xffff58296454  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff58296458  code target (STUB)  (0xffff58206060)
0xffff58296478  constant pool (size 56)


kind = HANDLER
major_key = <NoCache>Stub
name = global
compiler = unknown
Instructions (size = 120)
0xffff58296520     0  sub csp, jssp, #0x8 (8)
0xffff58296524     4  str x3, [jssp, #-8]!
0xffff58296528     8  sub csp, jssp, #0x8 (8)
0xffff5829652c    12  str x0, [jssp, #-8]!
0xffff58296530    16  ldr x0, pc+80 (addr 0x0000ffff58296580)    ;; object: 0x39cc5d51 Cell for 0
0xffff58296534    20  ldur x0, [x0, #7]
0xffff58296538    24  cmp x0, #0x0 (0)
0xffff5829653c    28  b.ne #+0x2c (addr 0xffff58296568)
0xffff58296540    32  ldr x0, pc+72 (addr 0x0000ffff58296588)    ;; object: 0x39ce35c9 WeakCell for 0x39cbca39 PropertyCell for 0x4f9153b9 <JS Global Object>
0xffff58296544    36  ldur x0, [x0, #7]
0xffff58296548    40  tbz w0, #0, #+0x20 (addr 0xffff58296568)
0xffff5829654c    44  ldur x0, [x0, #15]
0xffff58296550    48  ldr x16, [x26, #88]
0xffff58296554    52  cmp x0, x16
0xffff58296558    56  b.eq #+0x10 (addr 0xffff58296568)
0xffff5829655c    60  add jssp, jssp, #0x10 (16)
0xffff58296560    64  ret
0xffff58296564    68  b #+0x14 (addr 0xffff58296578)
0xffff58296568    72  ldr x0, [jssp], #8
0xffff5829656c    76  ldr x3, [jssp], #8
0xffff58296570    80  ldr x16, pc+32 (addr 0x0000ffff58296590)    ;; code: BUILTIN
0xffff58296574    84  br x16
0xffff58296578    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5829657c    92  d63f03e0       constant
0xffff58296580    96  39cc5d51       constant
0xffff58296584   100  00000000       constant
0xffff58296588   104  39ce35c9       constant
0xffff5829658c   108  00000000       constant
0xffff58296590   112  582222e0       constant
0xffff58296594   116  0000ffff       constant


RelocInfo (size = 9)
0xffff58296530  embedded object  (0x39cc5d51 Cell for 0)
0xffff58296540  embedded object  (0x39ce35c9 WeakCell for 0x39cbca39 PropertyCell for 0x4f9153b9 <JS Global Object>)
0xffff58296570  code target (BUILTIN)  (0xffff582222e0)
0xffff58296578  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = process
compiler = unknown
Instructions (size = 184)
0xffff58296600     0  sub csp, jssp, #0x8 (8)
0xffff58296604     4  str x3, [jssp, #-8]!
0xffff58296608     8  sub csp, jssp, #0x8 (8)
0xffff5829660c    12  str x0, [jssp, #-8]!
0xffff58296610    16  ldr x0, pc+144 (addr 0x0000ffff582966a0)    ;; object: 0x39ce3629 Cell for 0
0xffff58296614    20  ldur x0, [x0, #7]
0xffff58296618    24  cmp x0, #0x0 (0)
0xffff5829661c    28  b.ne #+0x68 (addr 0xffff58296684)
0xffff58296620    32  mov x16, fp
0xffff58296624    36  ldur x4, [x16, #-8]
0xffff58296628    40  tbnz w4, #0, #+0xc (addr 0xffff58296634)
0xffff5829662c    44  ldr x16, [x16]
0xffff58296630    48  b #-0xc (addr 0xffff58296624)
0xffff58296634    52  ldur x4, [x4, #39]
0xffff58296638    56  ldur x16, [x1, #23]
0xffff5829663c    60  cmp x4, x16
0xffff58296640    64  b.eq #+0x1c (addr 0xffff5829665c)
0xffff58296644    68  movz x17, #0x26f
0xffff58296648    72  ldr x4, [x4, x17]
0xffff5829664c    76  movz x17, #0x26f
0xffff58296650    80  ldr x16, [x16, x17]
0xffff58296654    84  cmp x4, x16
0xffff58296658    88  b.ne #+0x2c (addr 0xffff58296684)
0xffff5829665c    92  ldr x0, pc+76 (addr 0x0000ffff582966a8)    ;; object: 0x39ce3639 WeakCell for 0x39cc79b9 PropertyCell for 0x4f992ce9 <a process with map 0x32b1c0f1>
0xffff58296660    96  ldur x0, [x0, #7]
0xffff58296664   100  tbz w0, #0, #+0x20 (addr 0xffff58296684)
0xffff58296668   104  ldur x0, [x0, #15]
0xffff5829666c   108  ldr x16, [x26, #88]
0xffff58296670   112  cmp x0, x16
0xffff58296674   116  b.eq #+0x10 (addr 0xffff58296684)
0xffff58296678   120  add jssp, jssp, #0x10 (16)
0xffff5829667c   124  ret
0xffff58296680   128  b #+0x14 (addr 0xffff58296694)
0xffff58296684   132  ldr x0, [jssp], #8
0xffff58296688   136  ldr x3, [jssp], #8
0xffff5829668c   140  ldr x16, pc+36 (addr 0x0000ffff582966b0)    ;; code: BUILTIN
0xffff58296690   144  br x16
0xffff58296694   148  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff58296698   152  d63f03e0       constant
0xffff5829669c   156  d503201f       constant
0xffff582966a0   160  39ce3629       constant
0xffff582966a4   164  00000000       constant
0xffff582966a8   168  39ce3639       constant
0xffff582966ac   172  00000000       constant
0xffff582966b0   176  582222e0       constant
0xffff582966b4   180  0000ffff       constant


RelocInfo (size = 11)
0xffff58296610  embedded object  (0x39ce3629 Cell for 0)
0xffff5829665c  embedded object  (0x39ce3639 WeakCell for 0x39cc79b9 PropertyCell for 0x4f992ce9 <a process with map 0x32b1c0f1>)
0xffff5829668c  code target (BUILTIN)  (0xffff582222e0)
0xffff58296694  constant pool (size 36)

kind = HANDLER
major_key = <NoCache>Stub
name = noDeprecation
compiler = unknown
Instructions (size = 632)
0xffff58296720     0  sub csp, jssp, #0x8 (8)
0xffff58296724     4  str x3, [jssp, #-8]!
0xffff58296728     8  sub csp, jssp, #0x8 (8)
0xffff5829672c    12  str x0, [jssp, #-8]!
0xffff58296730    16  ldr x0, pc+544 (addr 0x0000ffff58296950)    ;; object: 0x39ce3709 Cell for 0
0xffff58296734    20  ldur x0, [x0, #7]
0xffff58296738    24  cmp x0, #0x0 (0)
0xffff5829673c    28  b.ne #+0x1f8 (addr 0xffff58296934)
0xffff58296740    32  ldur x4, [x1, #-1]
0xffff58296744    36  ldrb w0, [x4, #12]
0xffff58296748    40  movz x16, #0x44
0xffff5829674c    44  tst x0, x16
0xffff58296750    48  b.ne #+0x1e4 (addr 0xffff58296934)
0xffff58296754    52  ldrb w0, [x4, #11]
0xffff58296758    56  cmp x0, #0xb1 (177)
0xffff5829675c    60  b.lt #+0x1d8 (addr 0xffff58296934)
0xffff58296760    64  ldur x0, [x1, #7]
0xffff58296764    68  ldur x4, [x0, #-1]
0xffff58296768    72  ldr x16, [x26, #432]
0xffff5829676c    76  cmp x4, x16
0xffff58296770    80  b.ne #+0x1c4 (addr 0xffff58296934)
0xffff58296774    84  ldursw x4, [x0, #35]
0xffff58296778    88  sub x4, x4, #0x1 (1)
0xffff5829677c    92  movz x16, #0xbd45
0xffff58296780    96  movk x16, #0x2476, lsl #16
0xffff58296784   100  and x4, x4, x16
0xffff58296788   104  add x4, x4, x4, lsl #1
0xffff5829678c   108  add x4, x0, x4, lsl #3
0xffff58296790   112  ldur x4, [x4, #55]
0xffff58296794   116  ldr x16, [x26, #40]
0xffff58296798   120  cmp x4, x16
0xffff5829679c   124  b.eq #+0x188 (addr 0xffff58296924)
0xffff582967a0   128  ldr x16, pc+440 (addr 0x0000ffff58296958)    ;; object: 0x39cdae31 <String[13]: noDeprecation>
0xffff582967a4   132  cmp x4, x16
0xffff582967a8   136  b.eq #+0x18c (addr 0xffff58296934)
0xffff582967ac   140  ldr x16, [x26, #88]
0xffff582967b0   144  cmp x4, x16
0xffff582967b4   148  b.eq #+0x1c (addr 0xffff582967d0)
0xffff582967b8   152  ldur x4, [x4, #-1]
0xffff582967bc   156  ldrb w4, [x4, #11]
0xffff582967c0   160  tst x4, #0xc0
0xffff582967c4   164  movz x16, #0x80
0xffff582967c8   168  ccmp x4, x16, #nZcv, ne
0xffff582967cc   172  b.ne #+0x168 (addr 0xffff58296934)
0xffff582967d0   176  ldursw x4, [x0, #35]
0xffff582967d4   180  sub x4, x4, #0x1 (1)
0xffff582967d8   184  movz x16, #0xbd46
0xffff582967dc   188  movk x16, #0x2476, lsl #16
0xffff582967e0   192  and x4, x4, x16
0xffff582967e4   196  add x4, x4, x4, lsl #1
0xffff582967e8   200  add x4, x0, x4, lsl #3
0xffff582967ec   204  ldur x4, [x4, #55]
0xffff582967f0   208  ldr x16, [x26, #40]
0xffff582967f4   212  cmp x4, x16
0xffff582967f8   216  b.eq #+0x12c (addr 0xffff58296924)
0xffff582967fc   220  ldr x16, pc+356 (addr 0x0000ffff58296960)    ;; object: 0x39cdae31 <String[13]: noDeprecation>
0xffff58296800   224  cmp x4, x16
0xffff58296804   228  b.eq #+0x130 (addr 0xffff58296934)
0xffff58296808   232  ldr x16, [x26, #88]
0xffff5829680c   236  cmp x4, x16
0xffff58296810   240  b.eq #+0x1c (addr 0xffff5829682c)
0xffff58296814   244  ldur x4, [x4, #-1]
0xffff58296818   248  ldrb w4, [x4, #11]
0xffff5829681c   252  tst x4, #0xc0
0xffff58296820   256  movz x16, #0x80
0xffff58296824   260  ccmp x4, x16, #nZcv, ne
0xffff58296828   264  b.ne #+0x10c (addr 0xffff58296934)
0xffff5829682c   268  ldursw x4, [x0, #35]
0xffff58296830   272  sub x4, x4, #0x1 (1)
0xffff58296834   276  movz x16, #0xbd48
0xffff58296838   280  movk x16, #0x2476, lsl #16
0xffff5829683c   284  and x4, x4, x16
0xffff58296840   288  add x4, x4, x4, lsl #1
0xffff58296844   292  add x4, x0, x4, lsl #3
0xffff58296848   296  ldur x4, [x4, #55]
0xffff5829684c   300  ldr x16, [x26, #40]
0xffff58296850   304  cmp x4, x16
0xffff58296854   308  b.eq #+0xd0 (addr 0xffff58296924)
0xffff58296858   312  ldr x16, pc+272 (addr 0x0000ffff58296968)    ;; object: 0x39cdae31 <String[13]: noDeprecation>
0xffff5829685c   316  cmp x4, x16
0xffff58296860   320  b.eq #+0xd4 (addr 0xffff58296934)
0xffff58296864   324  ldr x16, [x26, #88]
0xffff58296868   328  cmp x4, x16
0xffff5829686c   332  b.eq #+0x1c (addr 0xffff58296888)
0xffff58296870   336  ldur x4, [x4, #-1]
0xffff58296874   340  ldrb w4, [x4, #11]
0xffff58296878   344  tst x4, #0xc0
0xffff5829687c   348  movz x16, #0x80
0xffff58296880   352  ccmp x4, x16, #nZcv, ne
0xffff58296884   356  b.ne #+0xb0 (addr 0xffff58296934)
0xffff58296888   360  ldursw x4, [x0, #35]
0xffff5829688c   364  sub x4, x4, #0x1 (1)
0xffff58296890   368  movz x16, #0xbd4b
0xffff58296894   372  movk x16, #0x2476, lsl #16
0xffff58296898   376  and x4, x4, x16
0xffff5829689c   380  add x4, x4, x4, lsl #1
0xffff582968a0   384  add x4, x0, x4, lsl #3
0xffff582968a4   388  ldur x4, [x4, #55]
0xffff582968a8   392  ldr x16, [x26, #40]
0xffff582968ac   396  cmp x4, x16
0xffff582968b0   400  b.eq #+0x74 (addr 0xffff58296924)
0xffff582968b4   404  ldr x16, pc+188 (addr 0x0000ffff58296970)    ;; object: 0x39cdae31 <String[13]: noDeprecation>
0xffff582968b8   408  cmp x4, x16
0xffff582968bc   412  b.eq #+0x78 (addr 0xffff58296934)
0xffff582968c0   416  ldr x16, [x26, #88]
0xffff582968c4   420  cmp x4, x16
0xffff582968c8   424  b.eq #+0x1c (addr 0xffff582968e4)
0xffff582968cc   428  ldur x4, [x4, #-1]
0xffff582968d0   432  ldrb w4, [x4, #11]
0xffff582968d4   436  tst x4, #0xc0
0xffff582968d8   440  movz x16, #0x80
0xffff582968dc   444  ccmp x4, x16, #nZcv, ne
0xffff582968e0   448  b.ne #+0x54 (addr 0xffff58296934)
0xffff582968e4   452  sub csp, jssp, #0x38 (56)
0xffff582968e8   456  stp x3, x5, [jssp, #-32]!
0xffff582968ec   460  stp x6, lr, [jssp, #16]
0xffff582968f0   464  stp x0, x1, [jssp, #-24]!
0xffff582968f4   468  str x2, [jssp, #16]
0xffff582968f8   472  ldur x0, [x1, #7]
0xffff582968fc   476  ldr x1, pc+124 (addr 0x0000ffff58296978)    ;; object: 0x39cdae31 <String[13]: noDeprecation>
0xffff58296900   480  ldr x16, pc+128 (addr 0x0000ffff58296980)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff58296904   484  blr x16
0xffff58296908   488  mov x4, x0
0xffff5829690c   492  ldp x2, x3, [jssp, #16]
0xffff58296910   496  ldp x0, x1, [jssp], #32
0xffff58296914   500  ldr lr, [jssp, #16]
0xffff58296918   504  ldp x5, x6, [jssp], #24
0xffff5829691c   508  cbz x4, #+0x8 (addr 0xffff58296924)
0xffff58296920   512  b #+0x14 (addr 0xffff58296934)
0xffff58296924   516  add jssp, jssp, #0x10 (16)
0xffff58296928   520  ldr x0, pc+96 (addr 0x0000ffff58296988)    ;; object: 0x39c04241 <undefined>
0xffff5829692c   524  ret
0xffff58296930   528  b #+0x14 (addr 0xffff58296944)
0xffff58296934   532  ldr x0, [jssp], #8
0xffff58296938   536  ldr x3, [jssp], #8
0xffff5829693c   540  ldr x16, pc+84 (addr 0x0000ffff58296990)    ;; code: BUILTIN
0xffff58296940   544  br x16
0xffff58296944   548  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff58296948   552  d63f03e0       constant
0xffff5829694c   556  d503201f       constant
0xffff58296950   560  39ce3709       constant
0xffff58296954   564  00000000       constant
0xffff58296958   568  39cdae31       constant
0xffff5829695c   572  00000000       constant
0xffff58296960   576  39cdae31       constant
0xffff58296964   580  00000000       constant
0xffff58296968   584  39cdae31       constant
0xffff5829696c   588  00000000       constant
0xffff58296970   592  39cdae31       constant
0xffff58296974   596  00000000       constant
0xffff58296978   600  39cdae31       constant
0xffff5829697c   604  00000000       constant
0xffff58296980   608  5828b120       constant
0xffff58296984   612  0000ffff       constant
0xffff58296988   616  39c04241       constant
0xffff5829698c   620  00000000       constant
0xffff58296990   624  582222e0       constant
0xffff58296994   628  0000ffff       constant


RelocInfo (size = 25)
0xffff58296730  embedded object  (0x39ce3709 Cell for 0)
0xffff582967a0  embedded object  (0x39cdae31 <String[13]: noDeprecation>)
0xffff582967fc  embedded object  (0x39cdae31 <String[13]: noDeprecation>)
0xffff58296858  embedded object  (0x39cdae31 <String[13]: noDeprecation>)
0xffff582968b4  embedded object  (0x39cdae31 <String[13]: noDeprecation>)
0xffff582968fc  embedded object  (0x39cdae31 <String[13]: noDeprecation>)
0xffff58296900  code target (STUB)  (0xffff5828b120)
0xffff58296928  embedded object  (0x39c04241 <undefined>)
0xffff5829693c  code target (BUILTIN)  (0xffff582222e0)
0xffff58296944  constant pool (size 84)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff58296a00     0  sub csp, jssp, #0x8 (8)
0xffff58296a04     4  str x3, [jssp, #-8]!
0xffff58296a08     8  sub csp, jssp, #0x8 (8)
0xffff58296a0c    12  str x4, [jssp, #-8]!
0xffff58296a10    16  ldr x3, pc+104 (addr 0x0000ffff58296a78)    ;; object: 0x39ce3839 Cell for 0
0xffff58296a14    20  ldur x3, [x3, #7]
0xffff58296a18    24  cmp x3, #0x0 (0)
0xffff58296a1c    28  b.ne #+0x8 (addr 0xffff58296a24)
0xffff58296a20    32  b #+0x18 (addr 0xffff58296a38)
0xffff58296a24    36  ldr x2, pc+92 (addr 0x0000ffff58296a80)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58296a28    40  ldr x4, [jssp], #8
0xffff58296a2c    44  ldr x3, [jssp], #8
0xffff58296a30    48  ldr x16, pc+88 (addr 0x0000ffff58296a88)    ;; code: BUILTIN
0xffff58296a34    52  br x16
0xffff58296a38    56  add jssp, jssp, #0x10 (16)
0xffff58296a3c    60  ldr x3, pc+84 (addr 0x0000ffff58296a90)    ;; object: 0x39c404a9 <AccessorInfo>
0xffff58296a40    64  ldr x4, pc+88 (addr 0x0000ffff58296a98)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58296a44    68  sub csp, jssp, #0x28 (40)
0xffff58296a48    72  stp x4, x3, [jssp, #-32]!
0xffff58296a4c    76  stp x1, x1, [jssp, #16]
0xffff58296a50    80  str x0, [jssp, #-8]!
0xffff58296a54    84  movz x16, #0x100000000
0xffff58296a58    88  sub csp, jssp, #0x8 (8)
0xffff58296a5c    92  str x16, [jssp, #-8]!
0xffff58296a60    96  movz x0, #0x6
0xffff58296a64   100  ldr x1, pc+60 (addr 0x0000ffff58296aa0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff58296a68   104  ldr x16, pc+64 (addr 0x0000ffff58296aa8)    ;; code: STUB, CEntryStub, minor: 4
0xffff58296a6c   108  br x16
0xffff58296a70   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58296a74   116  d63f03e0       constant
0xffff58296a78   120  39ce3839       constant
0xffff58296a7c   124  00000000       constant
0xffff58296a80   128  39c05371       constant
0xffff58296a84   132  00000000       constant
0xffff58296a88   136  58222420       constant
0xffff58296a8c   140  0000ffff       constant
0xffff58296a90   144  39c404a9       constant
0xffff58296a94   148  00000000       constant
0xffff58296a98   152  39c05371       constant
0xffff58296a9c   156  00000000       constant
0xffff58296aa0   160  00c8b560       constant
0xffff58296aa4   164  00000000       constant
0xffff58296aa8   168  58206060       constant
0xffff58296aac   172  0000ffff       constant


RelocInfo (size = 14)
0xffff58296a10  embedded object  (0x39ce3839 Cell for 0)
0xffff58296a24  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff58296a30  code target (BUILTIN)  (0xffff58222420)
0xffff58296a3c  embedded object  (0x39c404a9 <AccessorInfo>)
0xffff58296a40  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff58296a64  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff58296a68  code target (STUB)  (0xffff58206060)
0xffff58296a70  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff58296b20     0  sub csp, jssp, #0x8 (8)
0xffff58296b24     4  str x3, [jssp, #-8]!
0xffff58296b28     8  sub csp, jssp, #0x8 (8)
0xffff58296b2c    12  str x4, [jssp, #-8]!
0xffff58296b30    16  ldr x3, pc+104 (addr 0x0000ffff58296b98)    ;; object: 0x39ce3941 Cell for 0
0xffff58296b34    20  ldur x3, [x3, #7]
0xffff58296b38    24  cmp x3, #0x0 (0)
0xffff58296b3c    28  b.ne #+0x8 (addr 0xffff58296b44)
0xffff58296b40    32  b #+0x18 (addr 0xffff58296b58)
0xffff58296b44    36  ldr x2, pc+92 (addr 0x0000ffff58296ba0)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58296b48    40  ldr x4, [jssp], #8
0xffff58296b4c    44  ldr x3, [jssp], #8
0xffff58296b50    48  ldr x16, pc+88 (addr 0x0000ffff58296ba8)    ;; code: BUILTIN
0xffff58296b54    52  br x16
0xffff58296b58    56  add jssp, jssp, #0x10 (16)
0xffff58296b5c    60  ldr x3, pc+84 (addr 0x0000ffff58296bb0)    ;; object: 0x39c404a9 <AccessorInfo>
0xffff58296b60    64  ldr x4, pc+88 (addr 0x0000ffff58296bb8)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58296b64    68  sub csp, jssp, #0x28 (40)
0xffff58296b68    72  stp x4, x3, [jssp, #-32]!
0xffff58296b6c    76  stp x1, x1, [jssp, #16]
0xffff58296b70    80  str x0, [jssp, #-8]!
0xffff58296b74    84  movz x16, #0x100000000
0xffff58296b78    88  sub csp, jssp, #0x8 (8)
0xffff58296b7c    92  str x16, [jssp, #-8]!
0xffff58296b80    96  movz x0, #0x6
0xffff58296b84   100  ldr x1, pc+60 (addr 0x0000ffff58296bc0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff58296b88   104  ldr x16, pc+64 (addr 0x0000ffff58296bc8)    ;; code: STUB, CEntryStub, minor: 4
0xffff58296b8c   108  br x16
0xffff58296b90   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58296b94   116  d63f03e0       constant
0xffff58296b98   120  39ce3941       constant
0xffff58296b9c   124  00000000       constant
0xffff58296ba0   128  39c05371       constant
0xffff58296ba4   132  00000000       constant
0xffff58296ba8   136  58222420       constant
0xffff58296bac   140  0000ffff       constant
0xffff58296bb0   144  39c404a9       constant
0xffff58296bb4   148  00000000       constant
0xffff58296bb8   152  39c05371       constant
0xffff58296bbc   156  00000000       constant
0xffff58296bc0   160  00c8b560       constant
0xffff58296bc4   164  00000000       constant
0xffff58296bc8   168  58206060       constant
0xffff58296bcc   172  0000ffff       constant


RelocInfo (size = 14)
0xffff58296b30  embedded object  (0x39ce3941 Cell for 0)
0xffff58296b44  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff58296b50  code target (BUILTIN)  (0xffff58222420)
0xffff58296b5c  embedded object  (0x39c404a9 <AccessorInfo>)
0xffff58296b60  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff58296b84  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff58296b88  code target (STUB)  (0xffff58206060)
0xffff58296b90  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff58296c40     0  sub csp, jssp, #0x8 (8)
0xffff58296c44     4  str x3, [jssp, #-8]!
0xffff58296c48     8  sub csp, jssp, #0x8 (8)
0xffff58296c4c    12  str x4, [jssp, #-8]!
0xffff58296c50    16  ldr x3, pc+104 (addr 0x0000ffff58296cb8)    ;; object: 0x39ce3a49 Cell for 0
0xffff58296c54    20  ldur x3, [x3, #7]
0xffff58296c58    24  cmp x3, #0x0 (0)
0xffff58296c5c    28  b.ne #+0x8 (addr 0xffff58296c64)
0xffff58296c60    32  b #+0x18 (addr 0xffff58296c78)
0xffff58296c64    36  ldr x2, pc+92 (addr 0x0000ffff58296cc0)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58296c68    40  ldr x4, [jssp], #8
0xffff58296c6c    44  ldr x3, [jssp], #8
0xffff58296c70    48  ldr x16, pc+88 (addr 0x0000ffff58296cc8)    ;; code: BUILTIN
0xffff58296c74    52  br x16
0xffff58296c78    56  add jssp, jssp, #0x10 (16)
0xffff58296c7c    60  ldr x3, pc+84 (addr 0x0000ffff58296cd0)    ;; object: 0x39c404a9 <AccessorInfo>
0xffff58296c80    64  ldr x4, pc+88 (addr 0x0000ffff58296cd8)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58296c84    68  sub csp, jssp, #0x28 (40)
0xffff58296c88    72  stp x4, x3, [jssp, #-32]!
0xffff58296c8c    76  stp x1, x1, [jssp, #16]
0xffff58296c90    80  str x0, [jssp, #-8]!
0xffff58296c94    84  movz x16, #0x100000000
0xffff58296c98    88  sub csp, jssp, #0x8 (8)
0xffff58296c9c    92  str x16, [jssp, #-8]!
0xffff58296ca0    96  movz x0, #0x6
0xffff58296ca4   100  ldr x1, pc+60 (addr 0x0000ffff58296ce0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff58296ca8   104  ldr x16, pc+64 (addr 0x0000ffff58296ce8)    ;; code: STUB, CEntryStub, minor: 4
0xffff58296cac   108  br x16
0xffff58296cb0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58296cb4   116  d63f03e0       constant
0xffff58296cb8   120  39ce3a49       constant
0xffff58296cbc   124  00000000       constant
0xffff58296cc0   128  39c05371       constant
0xffff58296cc4   132  00000000       constant
0xffff58296cc8   136  58222420       constant
0xffff58296ccc   140  0000ffff       constant
0xffff58296cd0   144  39c404a9       constant
0xffff58296cd4   148  00000000       constant
0xffff58296cd8   152  39c05371       constant
0xffff58296cdc   156  00000000       constant
0xffff58296ce0   160  00c8b560       constant
0xffff58296ce4   164  00000000       constant
0xffff58296ce8   168  58206060       constant
0xffff58296cec   172  0000ffff       constant


RelocInfo (size = 14)
0xffff58296c50  embedded object  (0x39ce3a49 Cell for 0)
0xffff58296c64  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff58296c70  code target (BUILTIN)  (0xffff58222420)
0xffff58296c7c  embedded object  (0x39c404a9 <AccessorInfo>)
0xffff58296c80  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff58296ca4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff58296ca8  code target (STUB)  (0xffff58206060)
0xffff58296cb0  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff582973e0     0  sub csp, jssp, #0x8 (8)
0xffff582973e4     4  str x3, [jssp, #-8]!
0xffff582973e8     8  sub csp, jssp, #0x8 (8)
0xffff582973ec    12  str x4, [jssp, #-8]!
0xffff582973f0    16  ldr x3, pc+104 (addr 0x0000ffff58297458)    ;; object: 0x39ce41d1 Cell for 0
0xffff582973f4    20  ldur x3, [x3, #7]
0xffff582973f8    24  cmp x3, #0x0 (0)
0xffff582973fc    28  b.ne #+0x8 (addr 0xffff58297404)
0xffff58297400    32  b #+0x18 (addr 0xffff58297418)
0xffff58297404    36  ldr x2, pc+92 (addr 0x0000ffff58297460)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58297408    40  ldr x4, [jssp], #8
0xffff5829740c    44  ldr x3, [jssp], #8
0xffff58297410    48  ldr x16, pc+88 (addr 0x0000ffff58297468)    ;; code: BUILTIN
0xffff58297414    52  br x16
0xffff58297418    56  add jssp, jssp, #0x10 (16)
0xffff5829741c    60  ldr x3, pc+84 (addr 0x0000ffff58297470)    ;; object: 0x39c404a9 <AccessorInfo>
0xffff58297420    64  ldr x4, pc+88 (addr 0x0000ffff58297478)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58297424    68  sub csp, jssp, #0x28 (40)
0xffff58297428    72  stp x4, x3, [jssp, #-32]!
0xffff5829742c    76  stp x1, x1, [jssp, #16]
0xffff58297430    80  str x0, [jssp, #-8]!
0xffff58297434    84  movz x16, #0x100000000
0xffff58297438    88  sub csp, jssp, #0x8 (8)
0xffff5829743c    92  str x16, [jssp, #-8]!
0xffff58297440    96  movz x0, #0x6
0xffff58297444   100  ldr x1, pc+60 (addr 0x0000ffff58297480)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff58297448   104  ldr x16, pc+64 (addr 0x0000ffff58297488)    ;; code: STUB, CEntryStub, minor: 4
0xffff5829744c   108  br x16
0xffff58297450   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff58297454   116  d63f03e0       constant
0xffff58297458   120  39ce41d1       constant
0xffff5829745c   124  00000000       constant
0xffff58297460   128  39c05371       constant
0xffff58297464   132  00000000       constant
0xffff58297468   136  58222420       constant
0xffff5829746c   140  0000ffff       constant
0xffff58297470   144  39c404a9       constant
0xffff58297474   148  00000000       constant
0xffff58297478   152  39c05371       constant
0xffff5829747c   156  00000000       constant
0xffff58297480   160  00c8b560       constant
0xffff58297484   164  00000000       constant
0xffff58297488   168  58206060       constant
0xffff5829748c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff582973f0  embedded object  (0x39ce41d1 Cell for 0)
0xffff58297404  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff58297410  code target (BUILTIN)  (0xffff58222420)
0xffff5829741c  embedded object  (0x39c404a9 <AccessorInfo>)
0xffff58297420  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff58297444  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff58297448  code target (STUB)  (0xffff58206060)
0xffff58297450  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff58297640     0  sub csp, jssp, #0x8 (8)
0xffff58297644     4  str x3, [jssp, #-8]!
0xffff58297648     8  sub csp, jssp, #0x8 (8)
0xffff5829764c    12  str x4, [jssp, #-8]!
0xffff58297650    16  ldr x3, pc+104 (addr 0x0000ffff582976b8)    ;; object: 0x39ce4409 Cell for 0
0xffff58297654    20  ldur x3, [x3, #7]
0xffff58297658    24  cmp x3, #0x0 (0)
0xffff5829765c    28  b.ne #+0x8 (addr 0xffff58297664)
0xffff58297660    32  b #+0x18 (addr 0xffff58297678)
0xffff58297664    36  ldr x2, pc+92 (addr 0x0000ffff582976c0)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58297668    40  ldr x4, [jssp], #8
0xffff5829766c    44  ldr x3, [jssp], #8
0xffff58297670    48  ldr x16, pc+88 (addr 0x0000ffff582976c8)    ;; code: BUILTIN
0xffff58297674    52  br x16
0xffff58297678    56  add jssp, jssp, #0x10 (16)
0xffff5829767c    60  ldr x3, pc+84 (addr 0x0000ffff582976d0)    ;; object: 0x39c404a9 <AccessorInfo>
0xffff58297680    64  ldr x4, pc+88 (addr 0x0000ffff582976d8)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58297684    68  sub csp, jssp, #0x28 (40)
0xffff58297688    72  stp x4, x3, [jssp, #-32]!
0xffff5829768c    76  stp x1, x1, [jssp, #16]
0xffff58297690    80  str x0, [jssp, #-8]!
0xffff58297694    84  movz x16, #0x100000000
0xffff58297698    88  sub csp, jssp, #0x8 (8)
0xffff5829769c    92  str x16, [jssp, #-8]!
0xffff582976a0    96  movz x0, #0x6
0xffff582976a4   100  ldr x1, pc+60 (addr 0x0000ffff582976e0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff582976a8   104  ldr x16, pc+64 (addr 0x0000ffff582976e8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582976ac   108  br x16
0xffff582976b0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff582976b4   116  d63f03e0       constant
0xffff582976b8   120  39ce4409       constant
0xffff582976bc   124  00000000       constant
0xffff582976c0   128  39c05371       constant
0xffff582976c4   132  00000000       constant
0xffff582976c8   136  58222420       constant
0xffff582976cc   140  0000ffff       constant
0xffff582976d0   144  39c404a9       constant
0xffff582976d4   148  00000000       constant
0xffff582976d8   152  39c05371       constant
0xffff582976dc   156  00000000       constant
0xffff582976e0   160  00c8b560       constant
0xffff582976e4   164  00000000       constant
0xffff582976e8   168  58206060       constant
0xffff582976ec   172  0000ffff       constant


RelocInfo (size = 14)
0xffff58297650  embedded object  (0x39ce4409 Cell for 0)
0xffff58297664  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff58297670  code target (BUILTIN)  (0xffff58222420)
0xffff5829767c  embedded object  (0x39c404a9 <AccessorInfo>)
0xffff58297680  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff582976a4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff582976a8  code target (STUB)  (0xffff58206060)
0xffff582976b0  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff58297760     0  sub csp, jssp, #0x8 (8)
0xffff58297764     4  str x3, [jssp, #-8]!
0xffff58297768     8  sub csp, jssp, #0x8 (8)
0xffff5829776c    12  str x4, [jssp, #-8]!
0xffff58297770    16  ldr x3, pc+104 (addr 0x0000ffff582977d8)    ;; object: 0x39ce4631 Cell for 0
0xffff58297774    20  ldur x3, [x3, #7]
0xffff58297778    24  cmp x3, #0x0 (0)
0xffff5829777c    28  b.ne #+0x8 (addr 0xffff58297784)
0xffff58297780    32  b #+0x18 (addr 0xffff58297798)
0xffff58297784    36  ldr x2, pc+92 (addr 0x0000ffff582977e0)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff58297788    40  ldr x4, [jssp], #8
0xffff5829778c    44  ldr x3, [jssp], #8
0xffff58297790    48  ldr x16, pc+88 (addr 0x0000ffff582977e8)    ;; code: BUILTIN
0xffff58297794    52  br x16
0xffff58297798    56  add jssp, jssp, #0x10 (16)
0xffff5829779c    60  ldr x3, pc+84 (addr 0x0000ffff582977f0)    ;; object: 0x39c404a9 <AccessorInfo>
0xffff582977a0    64  ldr x4, pc+88 (addr 0x0000ffff582977f8)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff582977a4    68  sub csp, jssp, #0x28 (40)
0xffff582977a8    72  stp x4, x3, [jssp, #-32]!
0xffff582977ac    76  stp x1, x1, [jssp, #16]
0xffff582977b0    80  str x0, [jssp, #-8]!
0xffff582977b4    84  movz x16, #0x100000000
0xffff582977b8    88  sub csp, jssp, #0x8 (8)
0xffff582977bc    92  str x16, [jssp, #-8]!
0xffff582977c0    96  movz x0, #0x6
0xffff582977c4   100  ldr x1, pc+60 (addr 0x0000ffff58297800)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff582977c8   104  ldr x16, pc+64 (addr 0x0000ffff58297808)    ;; code: STUB, CEntryStub, minor: 4
0xffff582977cc   108  br x16
0xffff582977d0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff582977d4   116  d63f03e0       constant
0xffff582977d8   120  39ce4631       constant
0xffff582977dc   124  00000000       constant
0xffff582977e0   128  39c05371       constant
0xffff582977e4   132  00000000       constant
0xffff582977e8   136  58222420       constant
0xffff582977ec   140  0000ffff       constant
0xffff582977f0   144  39c404a9       constant
0xffff582977f4   148  00000000       constant
0xffff582977f8   152  39c05371       constant
0xffff582977fc   156  00000000       constant
0xffff58297800   160  00c8b560       constant
0xffff58297804   164  00000000       constant
0xffff58297808   168  58206060       constant
0xffff5829780c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff58297770  embedded object  (0x39ce4631 Cell for 0)
0xffff58297784  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff58297790  code target (BUILTIN)  (0xffff58222420)
0xffff5829779c  embedded object  (0x39c404a9 <AccessorInfo>)
0xffff582977a0  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff582977c4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff582977c8  code target (STUB)  (0xffff58206060)
0xffff582977d0  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff58297880     0  sub csp, jssp, #0x8 (8)
0xffff58297884     4  str x3, [jssp, #-8]!
0xffff58297888     8  sub csp, jssp, #0x8 (8)
0xffff5829788c    12  str x4, [jssp, #-8]!
0xffff58297890    16  ldr x3, pc+104 (addr 0x0000ffff582978f8)    ;; object: 0x39ce4709 Cell for 0
0xffff58297894    20  ldur x3, [x3, #7]
0xffff58297898    24  cmp x3, #0x0 (0)
0xffff5829789c    28  b.ne #+0x8 (addr 0xffff582978a4)
0xffff582978a0    32  b #+0x18 (addr 0xffff582978b8)
0xffff582978a4    36  ldr x2, pc+92 (addr 0x0000ffff58297900)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff582978a8    40  ldr x4, [jssp], #8
0xffff582978ac    44  ldr x3, [jssp], #8
0xffff582978b0    48  ldr x16, pc+88 (addr 0x0000ffff58297908)    ;; code: BUILTIN
0xffff582978b4    52  br x16
0xffff582978b8    56  add jssp, jssp, #0x10 (16)
0xffff582978bc    60  ldr x3, pc+84 (addr 0x0000ffff58297910)    ;; object: 0x39c404a9 <AccessorInfo>
0xffff582978c0    64  ldr x4, pc+88 (addr 0x0000ffff58297918)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff582978c4    68  sub csp, jssp, #0x28 (40)
0xffff582978c8    72  stp x4, x3, [jssp, #-32]!
0xffff582978cc    76  stp x1, x1, [jssp, #16]
0xffff582978d0    80  str x0, [jssp, #-8]!
0xffff582978d4    84  movz x16, #0x100000000
0xffff582978d8    88  sub csp, jssp, #0x8 (8)
0xffff582978dc    92  str x16, [jssp, #-8]!
0xffff582978e0    96  movz x0, #0x6
0xffff582978e4   100  ldr x1, pc+60 (addr 0x0000ffff58297920)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff582978e8   104  ldr x16, pc+64 (addr 0x0000ffff58297928)    ;; code: STUB, CEntryStub, minor: 4
0xffff582978ec   108  br x16
0xffff582978f0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff582978f4   116  d63f03e0       constant
0xffff582978f8   120  39ce4709       constant
0xffff582978fc   124  00000000       constant
0xffff58297900   128  39c05371       constant
0xffff58297904   132  00000000       constant
0xffff58297908   136  58222420       constant
0xffff5829790c   140  0000ffff       constant
0xffff58297910   144  39c404a9       constant
0xffff58297914   148  00000000       constant
0xffff58297918   152  39c05371       constant
0xffff5829791c   156  00000000       constant
0xffff58297920   160  00c8b560       constant
0xffff58297924   164  00000000       constant
0xffff58297928   168  58206060       constant
0xffff5829792c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff58297890  embedded object  (0x39ce4709 Cell for 0)
0xffff582978a4  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff582978b0  code target (BUILTIN)  (0xffff58222420)
0xffff582978bc  embedded object  (0x39c404a9 <AccessorInfo>)
0xffff582978c0  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff582978e4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff582978e8  code target (STUB)  (0xffff58206060)
0xffff582978f0  constant pool (size 64)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff582979a0     0  tbz w0, #0, #+0x50 (addr 0xffff582979f0)
0xffff582979a4     4  mov x2, x0
0xffff582979a8     8  stur x2, [x1, #31]
0xffff582979ac    12  add x3, x1, #0x1f (31)
0xffff582979b0    16  and x2, x2, #0xfffffffffff00000
0xffff582979b4    20  ldr x2, [x2, #8]
0xffff582979b8    24  tbz w2, #1, #+0x24 (addr 0xffff582979dc)
0xffff582979bc    28  and x2, x1, #0xfffffffffff00000
0xffff582979c0    32  ldr x2, [x2, #8]
0xffff582979c4    36  tbz w2, #2, #+0x18 (addr 0xffff582979dc)
0xffff582979c8    40  sub csp, jssp, #0x8 (8)
0xffff582979cc    44  str lr, [jssp, #-8]!
0xffff582979d0    48  ldr x16, pc+24 (addr 0x0000ffff582979e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582979d4    52  blr x16
0xffff582979d8    56  ldr lr, [jssp], #8
0xffff582979dc    60  ret
0xffff582979e0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582979e4    68  d63f03e0       constant
0xffff582979e8    72  582170c0       constant
0xffff582979ec    76  0000ffff       constant
0xffff582979f0    80  movz x16, #0x0
0xffff582979f4    84  sub csp, jssp, #0x10 (16)
0xffff582979f8    88  stp fp, lr, [jssp, #-16]!
0xffff582979fc    92  bl #+0x4 (addr 0xffff58297a00)
0xffff58297a00    96  movz x17, #0xa00000000
0xffff58297a04   100  sub csp, jssp, #0x10 (16)
0xffff58297a08   104  stp x17, cp, [jssp, #-16]!
0xffff58297a0c   108  add fp, jssp, #0x10 (16)
0xffff58297a10   112  ldr x17, pc+24 (addr 0x0000ffff58297a28)    ;; lazy deoptimization bailout 0
0xffff58297a14   116  add x17, x17, x16
0xffff58297a18   120  br x17
0xffff58297a1c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58297a20   128  d63f03e0       constant
0xffff58297a24   132  d503201f       constant
0xffff58297a28   136  58006000       constant
0xffff58297a2c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582979d0  code target (STUB)  (0xffff582170c0)
0xffff582979e0  constant pool (size 16)
0xffff58297a10  runtime entry
0xffff58297a1c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff582979a0     0  tbz w0, #0, #+0x50 (addr 0xffff582979f0)
0xffff582979a4     4  mov x2, x0
0xffff582979a8     8  stur x2, [x1, #31]
0xffff582979ac    12  add x3, x1, #0x1f (31)
0xffff582979b0    16  and x2, x2, #0xfffffffffff00000
0xffff582979b4    20  ldr x2, [x2, #8]
0xffff582979b8    24  tbz w2, #1, #+0x24 (addr 0xffff582979dc)
0xffff582979bc    28  and x2, x1, #0xfffffffffff00000
0xffff582979c0    32  ldr x2, [x2, #8]
0xffff582979c4    36  tbz w2, #2, #+0x18 (addr 0xffff582979dc)
0xffff582979c8    40  sub csp, jssp, #0x8 (8)
0xffff582979cc    44  str lr, [jssp, #-8]!
0xffff582979d0    48  ldr x16, pc+24 (addr 0x0000ffff582979e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582979d4    52  blr x16
0xffff582979d8    56  ldr lr, [jssp], #8
0xffff582979dc    60  ret
0xffff582979e0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582979e4    68  d63f03e0       constant
0xffff582979e8    72  582170c0       constant
0xffff582979ec    76  0000ffff       constant
0xffff582979f0    80  movz x16, #0x0
0xffff582979f4    84  sub csp, jssp, #0x10 (16)
0xffff582979f8    88  stp fp, lr, [jssp, #-16]!
0xffff582979fc    92  bl #+0x4 (addr 0xffff58297a00)
0xffff58297a00    96  movz x17, #0xa00000000
0xffff58297a04   100  sub csp, jssp, #0x10 (16)
0xffff58297a08   104  stp x17, cp, [jssp, #-16]!
0xffff58297a0c   108  add fp, jssp, #0x10 (16)
0xffff58297a10   112  ldr x17, pc+24 (addr 0x0000ffff58297a28)    ;; lazy deoptimization bailout 0
0xffff58297a14   116  add x17, x17, x16
0xffff58297a18   120  br x17
0xffff58297a1c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58297a20   128  d63f03e0       constant
0xffff58297a24   132  d503201f       constant
0xffff58297a28   136  58006000       constant
0xffff58297a2c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582979d0  code target (STUB)  (0xffff582170c0)
0xffff582979e0  constant pool (size 16)
0xffff58297a10  runtime entry
0xffff58297a1c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = timers
compiler = unknown
Instructions (size = 184)
0xffff58297f40     0  sub csp, jssp, #0x8 (8)
0xffff58297f44     4  str x3, [jssp, #-8]!
0xffff58297f48     8  sub csp, jssp, #0x8 (8)
0xffff58297f4c    12  str x4, [jssp, #-8]!
0xffff58297f50    16  ldr x3, pc+112 (addr 0x0000ffff58297fc0)    ;; object: 0x39c63e59 Cell for 0
0xffff58297f54    20  ldur x3, [x3, #7]
0xffff58297f58    24  cmp x3, #0x0 (0)
0xffff58297f5c    28  b.ne #+0x44 (addr 0xffff58297fa0)
0xffff58297f60    32  tbz w0, #0, #+0x40 (addr 0xffff58297fa0)
0xffff58297f64    36  ldur x3, [x0, #-1]
0xffff58297f68    40  ldr x4, pc+96 (addr 0x0000ffff58297fc8)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58297f6c    44  ldur x4, [x4, #7]
0xffff58297f70    48  cmp x3, x4
0xffff58297f74    52  b.ne #+0x2c (addr 0xffff58297fa0)
0xffff58297f78    56  ldr x5, pc+88 (addr 0x0000ffff58297fd0)    ;; object: 0x39ce4b41 WeakCell for 0x32b24441 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58297f7c    60  ldur x5, [x5, #7]
0xffff58297f80    64  tbz w5, #0, #+0x20 (addr 0xffff58297fa0)
0xffff58297f84    68  ldursw x4, [x5, #15]
0xffff58297f88    72  tbnz w4, #23, #+0x18 (addr 0xffff58297fa0)
0xffff58297f8c    76  ldr x4, [jssp], #8
0xffff58297f90    80  ldr x3, [jssp], #8
0xffff58297f94    84  ldr x2, pc+68 (addr 0x0000ffff58297fd8)    ;; object: 0x39cba181 <String[6]: timers>
0xffff58297f98    88  ldr x16, pc+72 (addr 0x0000ffff58297fe0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff58297f9c    92  br x16
0xffff58297fa0    96  ldr x2, pc+72 (addr 0x0000ffff58297fe8)    ;; object: 0x39cba181 <String[6]: timers>
0xffff58297fa4   100  ldr x4, [jssp], #8
0xffff58297fa8   104  ldr x3, [jssp], #8
0xffff58297fac   108  ldr x16, pc+68 (addr 0x0000ffff58297ff0)    ;; code: BUILTIN
0xffff58297fb0   112  br x16
0xffff58297fb4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58297fb8   120  d63f03e0       constant
0xffff58297fbc   124  d503201f       constant
0xffff58297fc0   128  39c63e59       constant
0xffff58297fc4   132  00000000       constant
0xffff58297fc8   136  39cc22b1       constant
0xffff58297fcc   140  00000000       constant
0xffff58297fd0   144  39ce4b41       constant
0xffff58297fd4   148  00000000       constant
0xffff58297fd8   152  39cba181       constant
0xffff58297fdc   156  00000000       constant
0xffff58297fe0   160  58238860       constant
0xffff58297fe4   164  0000ffff       constant
0xffff58297fe8   168  39cba181       constant
0xffff58297fec   172  00000000       constant
0xffff58297ff0   176  58222420       constant
0xffff58297ff4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff58297f50  embedded object  (0x39c63e59 Cell for 0)
0xffff58297f68  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58297f78  embedded object  (0x39ce4b41 WeakCell for 0x32b24441 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58297f94  embedded object  (0x39cba181 <String[6]: timers>)
0xffff58297f98  code target (HANDLER)  (0xffff58238860)
0xffff58297fa0  embedded object  (0x39cba181 <String[6]: timers>)
0xffff58297fac  code target (BUILTIN)  (0xffff58222420)
0xffff58297fb4  constant pool (size 68)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 741)
0xffff58298060     0  movz x2, #0x92c0
0xffff58298064     4  movk x2, #0x16e7, lsl #16
0xffff58298068     8  ldp x3, x0, [x2]
0xffff5829806c    12  adds x16, x3, #0x120 (288)
0xffff58298070    16  ccmp x16, x0, #nzCv, lo
0xffff58298074    20  b.hi #+0x138 (addr 0xffff582981ac)
0xffff58298078    24  str x16, [x2]
0xffff5829807c    28  orr x3, x3, #0x1
0xffff58298080    32  ldr x0, pc+408 (addr 0x0000ffff58298218)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58298084    36  stur x0, [x3, #-1]
0xffff58298088    40  movz x0, #0x2200000000
0xffff5829808c    44  stur x0, [x3, #7]
0xffff58298090    48  stur x1, [x3, #15]
0xffff58298094    52  stur cp, [x3, #23]
0xffff58298098    56  ldr x0, pc+392 (addr 0x0000ffff58298220)    ;; object: 0x39c04519 <the hole>
0xffff5829809c    60  stur x0, [x3, #31]
0xffff582980a0    64  ldur x0, [cp, #39]
0xffff582980a4    68  stur x0, [x3, #39]
0xffff582980a8    72  ldr x0, pc+384 (addr 0x0000ffff58298228)    ;; object: 0x39c04241 <undefined>
0xffff582980ac    76  stur x0, [x3, #47]
0xffff582980b0    80  ldr x0, pc+384 (addr 0x0000ffff58298230)    ;; object: 0x39c04241 <undefined>
0xffff582980b4    84  stur x0, [x3, #55]
0xffff582980b8    88  ldr x0, pc+384 (addr 0x0000ffff58298238)    ;; object: 0x39c04241 <undefined>
0xffff582980bc    92  stur x0, [x3, #63]
0xffff582980c0    96  ldr x0, pc+384 (addr 0x0000ffff58298240)    ;; object: 0x39c04241 <undefined>
0xffff582980c4   100  stur x0, [x3, #71]
0xffff582980c8   104  ldr x0, pc+384 (addr 0x0000ffff58298248)    ;; object: 0x39c04241 <undefined>
0xffff582980cc   108  stur x0, [x3, #79]
0xffff582980d0   112  ldr x0, pc+384 (addr 0x0000ffff58298250)    ;; object: 0x39c04241 <undefined>
0xffff582980d4   116  stur x0, [x3, #87]
0xffff582980d8   120  ldr x0, pc+384 (addr 0x0000ffff58298258)    ;; object: 0x39c04241 <undefined>
0xffff582980dc   124  stur x0, [x3, #95]
0xffff582980e0   128  ldr x0, pc+384 (addr 0x0000ffff58298260)    ;; object: 0x39c04241 <undefined>
0xffff582980e4   132  stur x0, [x3, #103]
0xffff582980e8   136  ldr x0, pc+384 (addr 0x0000ffff58298268)    ;; object: 0x39c04241 <undefined>
0xffff582980ec   140  stur x0, [x3, #111]
0xffff582980f0   144  ldr x0, pc+384 (addr 0x0000ffff58298270)    ;; object: 0x39c04241 <undefined>
0xffff582980f4   148  stur x0, [x3, #119]
0xffff582980f8   152  ldr x0, pc+384 (addr 0x0000ffff58298278)    ;; object: 0x39c04241 <undefined>
0xffff582980fc   156  stur x0, [x3, #127]
0xffff58298100   160  ldr x0, pc+384 (addr 0x0000ffff58298280)    ;; object: 0x39c04241 <undefined>
0xffff58298104   164  stur x0, [x3, #135]
0xffff58298108   168  ldr x0, pc+384 (addr 0x0000ffff58298288)    ;; object: 0x39c04241 <undefined>
0xffff5829810c   172  stur x0, [x3, #143]
0xffff58298110   176  ldr x0, pc+384 (addr 0x0000ffff58298290)    ;; object: 0x39c04241 <undefined>
0xffff58298114   180  stur x0, [x3, #151]
0xffff58298118   184  ldr x0, pc+384 (addr 0x0000ffff58298298)    ;; object: 0x39c04241 <undefined>
0xffff5829811c   188  stur x0, [x3, #159]
0xffff58298120   192  ldr x0, pc+384 (addr 0x0000ffff582982a0)    ;; object: 0x39c04241 <undefined>
0xffff58298124   196  stur x0, [x3, #167]
0xffff58298128   200  ldr x0, pc+384 (addr 0x0000ffff582982a8)    ;; object: 0x39c04241 <undefined>
0xffff5829812c   204  stur x0, [x3, #175]
0xffff58298130   208  ldr x0, pc+384 (addr 0x0000ffff582982b0)    ;; object: 0x39c04241 <undefined>
0xffff58298134   212  stur x0, [x3, #183]
0xffff58298138   216  ldr x0, pc+384 (addr 0x0000ffff582982b8)    ;; object: 0x39c04241 <undefined>
0xffff5829813c   220  stur x0, [x3, #191]
0xffff58298140   224  ldr x0, pc+384 (addr 0x0000ffff582982c0)    ;; object: 0x39c04241 <undefined>
0xffff58298144   228  stur x0, [x3, #199]
0xffff58298148   232  ldr x0, pc+384 (addr 0x0000ffff582982c8)    ;; object: 0x39c04241 <undefined>
0xffff5829814c   236  stur x0, [x3, #207]
0xffff58298150   240  ldr x0, pc+384 (addr 0x0000ffff582982d0)    ;; object: 0x39c04241 <undefined>
0xffff58298154   244  stur x0, [x3, #215]
0xffff58298158   248  ldr x0, pc+384 (addr 0x0000ffff582982d8)    ;; object: 0x39c04241 <undefined>
0xffff5829815c   252  stur x0, [x3, #223]
0xffff58298160   256  ldr x0, pc+384 (addr 0x0000ffff582982e0)    ;; object: 0x39c04241 <undefined>
0xffff58298164   260  stur x0, [x3, #231]
0xffff58298168   264  ldr x0, pc+384 (addr 0x0000ffff582982e8)    ;; object: 0x39c04241 <undefined>
0xffff5829816c   268  stur x0, [x3, #239]
0xffff58298170   272  ldr x0, pc+384 (addr 0x0000ffff582982f0)    ;; object: 0x39c04241 <undefined>
0xffff58298174   276  stur x0, [x3, #247]
0xffff58298178   280  ldr x0, pc+384 (addr 0x0000ffff582982f8)    ;; object: 0x39c04241 <undefined>
0xffff5829817c   284  stur x0, [x3, #255]
0xffff58298180   288  ldr x0, pc+384 (addr 0x0000ffff58298300)    ;; object: 0x39c04241 <undefined>
0xffff58298184   292  movz x16, #0x107
0xffff58298188   296  str x0, [x3, x16]
0xffff5829818c   300  ldr x0, pc+380 (addr 0x0000ffff58298308)    ;; object: 0x39c04241 <undefined>
0xffff58298190   304  movz x16, #0x10f
0xffff58298194   308  str x0, [x3, x16]
0xffff58298198   312  ldr x0, pc+376 (addr 0x0000ffff58298310)    ;; object: 0x39c04241 <undefined>
0xffff5829819c   316  movz x16, #0x117
0xffff582981a0   320  str x0, [x3, x16]
0xffff582981a4   324  mov x0, x3
0xffff582981a8   328  ret
0xffff582981ac   332  sub csp, jssp, #0x10 (16)
0xffff582981b0   336  stp fp, lr, [jssp, #-16]!
0xffff582981b4   340  movz fp, #0xa00000000
0xffff582981b8   344  sub csp, jssp, #0x8 (8)
0xffff582981bc   348  str fp, [jssp, #-8]!
0xffff582981c0   352  add fp, jssp, #0x8 (8)
0xffff582981c4   356  movz x3, #0x0
0xffff582981c8   360  mov x16, lr
0xffff582981cc   364  ldr x17, pc+332 (addr 0x0000ffff58298318)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582981d0   368  blr x17
0xffff582981d4   372  movz x0, #0x12000000000
0xffff582981d8   376  movz x10, #0x0
0xffff582981dc   380  sub csp, jssp, #0x10 (16)
0xffff582981e0   384  stp x10, x0, [jssp, #-16]!
0xffff582981e4   388  movz x0, #0x2
0xffff582981e8   392  movz x1, #0x5b88
0xffff582981ec   396  movk x1, #0xe2, lsl #16
0xffff582981f0   400  ldr x16, pc+304 (addr 0x0000ffff58298320)    ;; code: STUB, CEntryStub, minor: 5
0xffff582981f4   404  blr x16
0xffff582981f8   408  str x0, [jssp, #24]
0xffff582981fc   412  ldr x16, pc+300 (addr 0x0000ffff58298328)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58298200   416  blr x16
0xffff58298204   420  ldr lr, [jssp, #16]
0xffff58298208   424  ldp xzr, fp, [jssp], #24
0xffff5829820c   428  b #-0x18c (addr 0xffff58298080)
0xffff58298210   432  580008ff       constant pool begin (num_const = 71)    ;; constant pool
0xffff58298214   436  d63f03e0       constant
0xffff58298218   440  32b06149       constant
0xffff5829821c   444  00000000       constant
0xffff58298220   448  39c04519       constant
0xffff58298224   452  00000000       constant
0xffff58298228   456  39c04241       constant
0xffff5829822c   460  00000000       constant
0xffff58298230   464  39c04241       constant
0xffff58298234   468  00000000       constant
0xffff58298238   472  39c04241       constant
0xffff5829823c   476  00000000       constant
0xffff58298240   480  39c04241       constant
0xffff58298244   484  00000000       constant
0xffff58298248   488  39c04241       constant
0xffff5829824c   492  00000000       constant
0xffff58298250   496  39c04241       constant
0xffff58298254   500  00000000       constant
0xffff58298258   504  39c04241       constant
0xffff5829825c   508  00000000       constant
0xffff58298260   512  39c04241       constant
0xffff58298264   516  00000000       constant
0xffff58298268   520  39c04241       constant
0xffff5829826c   524  00000000       constant
0xffff58298270   528  39c04241       constant
0xffff58298274   532  00000000       constant
0xffff58298278   536  39c04241       constant
0xffff5829827c   540  00000000       constant
0xffff58298280   544  39c04241       constant
0xffff58298284   548  00000000       constant
0xffff58298288   552  39c04241       constant
0xffff5829828c   556  00000000       constant
0xffff58298290   560  39c04241       constant
0xffff58298294   564  00000000       constant
0xffff58298298   568  39c04241       constant
0xffff5829829c   572  00000000       constant
0xffff582982a0   576  39c04241       constant
0xffff582982a4   580  00000000       constant
0xffff582982a8   584  39c04241       constant
0xffff582982ac   588  00000000       constant
0xffff582982b0   592  39c04241       constant
0xffff582982b4   596  00000000       constant
0xffff582982b8   600  39c04241       constant
0xffff582982bc   604  00000000       constant
0xffff582982c0   608  39c04241       constant
0xffff582982c4   612  00000000       constant
0xffff582982c8   616  39c04241       constant
0xffff582982cc   620  00000000       constant
0xffff582982d0   624  39c04241       constant
0xffff582982d4   628  00000000       constant
0xffff582982d8   632  39c04241       constant
0xffff582982dc   636  00000000       constant
0xffff582982e0   640  39c04241       constant
0xffff582982e4   644  00000000       constant
0xffff582982e8   648  39c04241       constant
0xffff582982ec   652  00000000       constant
0xffff582982f0   656  39c04241       constant
0xffff582982f4   660  00000000       constant
0xffff582982f8   664  39c04241       constant
0xffff582982fc   668  00000000       constant
0xffff58298300   672  39c04241       constant
0xffff58298304   676  00000000       constant
0xffff58298308   680  39c04241       constant
0xffff5829830c   684  00000000       constant
0xffff58298310   688  39c04241       constant
0xffff58298314   692  00000000       constant
0xffff58298318   696  58206820       constant
0xffff5829831c   700  0000ffff       constant
0xffff58298320   704  58206260       constant
0xffff58298324   708  0000ffff       constant
0xffff58298328   712  582068e0       constant
0xffff5829832c   716  0000ffff       constant


Safepoints (size = 21)
0xffff582981f8   408  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 41)
0xffff58298080  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58298098  embedded object  (0x39c04519 <the hole>)
0xffff582980a8  embedded object  (0x39c04241 <undefined>)
0xffff582980b0  embedded object  (0x39c04241 <undefined>)
0xffff582980b8  embedded object  (0x39c04241 <undefined>)
0xffff582980c0  embedded object  (0x39c04241 <undefined>)
0xffff582980c8  embedded object  (0x39c04241 <undefined>)
0xffff582980d0  embedded object  (0x39c04241 <undefined>)
0xffff582980d8  embedded object  (0x39c04241 <undefined>)
0xffff582980e0  embedded object  (0x39c04241 <undefined>)
0xffff582980e8  embedded object  (0x39c04241 <undefined>)
0xffff582980f0  embedded object  (0x39c04241 <undefined>)
0xffff582980f8  embedded object  (0x39c04241 <undefined>)
0xffff58298100  embedded object  (0x39c04241 <undefined>)
0xffff58298108  embedded object  (0x39c04241 <undefined>)
0xffff58298110  embedded object  (0x39c04241 <undefined>)
0xffff58298118  embedded object  (0x39c04241 <undefined>)
0xffff58298120  embedded object  (0x39c04241 <undefined>)
0xffff58298128  embedded object  (0x39c04241 <undefined>)
0xffff58298130  embedded object  (0x39c04241 <undefined>)
0xffff58298138  embedded object  (0x39c04241 <undefined>)
0xffff58298140  embedded object  (0x39c04241 <undefined>)
0xffff58298148  embedded object  (0x39c04241 <undefined>)
0xffff58298150  embedded object  (0x39c04241 <undefined>)
0xffff58298158  embedded object  (0x39c04241 <undefined>)
0xffff58298160  embedded object  (0x39c04241 <undefined>)
0xffff58298168  embedded object  (0x39c04241 <undefined>)
0xffff58298170  embedded object  (0x39c04241 <undefined>)
0xffff58298178  embedded object  (0x39c04241 <undefined>)
0xffff58298180  embedded object  (0x39c04241 <undefined>)
0xffff5829818c  embedded object  (0x39c04241 <undefined>)
0xffff58298198  embedded object  (0x39c04241 <undefined>)
0xffff582981cc  code target (STUB)  (0xffff58206820)
0xffff582981f0  code target (STUB)  (0xffff58206260)
0xffff582981fc  code target (STUB)  (0xffff582068e0)
0xffff58298210  constant pool (size 288)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 741)
0xffff58298060     0  movz x2, #0x92c0
0xffff58298064     4  movk x2, #0x16e7, lsl #16
0xffff58298068     8  ldp x3, x0, [x2]
0xffff5829806c    12  adds x16, x3, #0x120 (288)
0xffff58298070    16  ccmp x16, x0, #nzCv, lo
0xffff58298074    20  b.hi #+0x138 (addr 0xffff582981ac)
0xffff58298078    24  str x16, [x2]
0xffff5829807c    28  orr x3, x3, #0x1
0xffff58298080    32  ldr x0, pc+408 (addr 0x0000ffff58298218)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58298084    36  stur x0, [x3, #-1]
0xffff58298088    40  movz x0, #0x2200000000
0xffff5829808c    44  stur x0, [x3, #7]
0xffff58298090    48  stur x1, [x3, #15]
0xffff58298094    52  stur cp, [x3, #23]
0xffff58298098    56  ldr x0, pc+392 (addr 0x0000ffff58298220)    ;; object: 0x39c04519 <the hole>
0xffff5829809c    60  stur x0, [x3, #31]
0xffff582980a0    64  ldur x0, [cp, #39]
0xffff582980a4    68  stur x0, [x3, #39]
0xffff582980a8    72  ldr x0, pc+384 (addr 0x0000ffff58298228)    ;; object: 0x39c04241 <undefined>
0xffff582980ac    76  stur x0, [x3, #47]
0xffff582980b0    80  ldr x0, pc+384 (addr 0x0000ffff58298230)    ;; object: 0x39c04241 <undefined>
0xffff582980b4    84  stur x0, [x3, #55]
0xffff582980b8    88  ldr x0, pc+384 (addr 0x0000ffff58298238)    ;; object: 0x39c04241 <undefined>
0xffff582980bc    92  stur x0, [x3, #63]
0xffff582980c0    96  ldr x0, pc+384 (addr 0x0000ffff58298240)    ;; object: 0x39c04241 <undefined>
0xffff582980c4   100  stur x0, [x3, #71]
0xffff582980c8   104  ldr x0, pc+384 (addr 0x0000ffff58298248)    ;; object: 0x39c04241 <undefined>
0xffff582980cc   108  stur x0, [x3, #79]
0xffff582980d0   112  ldr x0, pc+384 (addr 0x0000ffff58298250)    ;; object: 0x39c04241 <undefined>
0xffff582980d4   116  stur x0, [x3, #87]
0xffff582980d8   120  ldr x0, pc+384 (addr 0x0000ffff58298258)    ;; object: 0x39c04241 <undefined>
0xffff582980dc   124  stur x0, [x3, #95]
0xffff582980e0   128  ldr x0, pc+384 (addr 0x0000ffff58298260)    ;; object: 0x39c04241 <undefined>
0xffff582980e4   132  stur x0, [x3, #103]
0xffff582980e8   136  ldr x0, pc+384 (addr 0x0000ffff58298268)    ;; object: 0x39c04241 <undefined>
0xffff582980ec   140  stur x0, [x3, #111]
0xffff582980f0   144  ldr x0, pc+384 (addr 0x0000ffff58298270)    ;; object: 0x39c04241 <undefined>
0xffff582980f4   148  stur x0, [x3, #119]
0xffff582980f8   152  ldr x0, pc+384 (addr 0x0000ffff58298278)    ;; object: 0x39c04241 <undefined>
0xffff582980fc   156  stur x0, [x3, #127]
0xffff58298100   160  ldr x0, pc+384 (addr 0x0000ffff58298280)    ;; object: 0x39c04241 <undefined>
0xffff58298104   164  stur x0, [x3, #135]
0xffff58298108   168  ldr x0, pc+384 (addr 0x0000ffff58298288)    ;; object: 0x39c04241 <undefined>
0xffff5829810c   172  stur x0, [x3, #143]
0xffff58298110   176  ldr x0, pc+384 (addr 0x0000ffff58298290)    ;; object: 0x39c04241 <undefined>
0xffff58298114   180  stur x0, [x3, #151]
0xffff58298118   184  ldr x0, pc+384 (addr 0x0000ffff58298298)    ;; object: 0x39c04241 <undefined>
0xffff5829811c   188  stur x0, [x3, #159]
0xffff58298120   192  ldr x0, pc+384 (addr 0x0000ffff582982a0)    ;; object: 0x39c04241 <undefined>
0xffff58298124   196  stur x0, [x3, #167]
0xffff58298128   200  ldr x0, pc+384 (addr 0x0000ffff582982a8)    ;; object: 0x39c04241 <undefined>
0xffff5829812c   204  stur x0, [x3, #175]
0xffff58298130   208  ldr x0, pc+384 (addr 0x0000ffff582982b0)    ;; object: 0x39c04241 <undefined>
0xffff58298134   212  stur x0, [x3, #183]
0xffff58298138   216  ldr x0, pc+384 (addr 0x0000ffff582982b8)    ;; object: 0x39c04241 <undefined>
0xffff5829813c   220  stur x0, [x3, #191]
0xffff58298140   224  ldr x0, pc+384 (addr 0x0000ffff582982c0)    ;; object: 0x39c04241 <undefined>
0xffff58298144   228  stur x0, [x3, #199]
0xffff58298148   232  ldr x0, pc+384 (addr 0x0000ffff582982c8)    ;; object: 0x39c04241 <undefined>
0xffff5829814c   236  stur x0, [x3, #207]
0xffff58298150   240  ldr x0, pc+384 (addr 0x0000ffff582982d0)    ;; object: 0x39c04241 <undefined>
0xffff58298154   244  stur x0, [x3, #215]
0xffff58298158   248  ldr x0, pc+384 (addr 0x0000ffff582982d8)    ;; object: 0x39c04241 <undefined>
0xffff5829815c   252  stur x0, [x3, #223]
0xffff58298160   256  ldr x0, pc+384 (addr 0x0000ffff582982e0)    ;; object: 0x39c04241 <undefined>
0xffff58298164   260  stur x0, [x3, #231]
0xffff58298168   264  ldr x0, pc+384 (addr 0x0000ffff582982e8)    ;; object: 0x39c04241 <undefined>
0xffff5829816c   268  stur x0, [x3, #239]
0xffff58298170   272  ldr x0, pc+384 (addr 0x0000ffff582982f0)    ;; object: 0x39c04241 <undefined>
0xffff58298174   276  stur x0, [x3, #247]
0xffff58298178   280  ldr x0, pc+384 (addr 0x0000ffff582982f8)    ;; object: 0x39c04241 <undefined>
0xffff5829817c   284  stur x0, [x3, #255]
0xffff58298180   288  ldr x0, pc+384 (addr 0x0000ffff58298300)    ;; object: 0x39c04241 <undefined>
0xffff58298184   292  movz x16, #0x107
0xffff58298188   296  str x0, [x3, x16]
0xffff5829818c   300  ldr x0, pc+380 (addr 0x0000ffff58298308)    ;; object: 0x39c04241 <undefined>
0xffff58298190   304  movz x16, #0x10f
0xffff58298194   308  str x0, [x3, x16]
0xffff58298198   312  ldr x0, pc+376 (addr 0x0000ffff58298310)    ;; object: 0x39c04241 <undefined>
0xffff5829819c   316  movz x16, #0x117
0xffff582981a0   320  str x0, [x3, x16]
0xffff582981a4   324  mov x0, x3
0xffff582981a8   328  ret
0xffff582981ac   332  sub csp, jssp, #0x10 (16)
0xffff582981b0   336  stp fp, lr, [jssp, #-16]!
0xffff582981b4   340  movz fp, #0xa00000000
0xffff582981b8   344  sub csp, jssp, #0x8 (8)
0xffff582981bc   348  str fp, [jssp, #-8]!
0xffff582981c0   352  add fp, jssp, #0x8 (8)
0xffff582981c4   356  movz x3, #0x0
0xffff582981c8   360  mov x16, lr
0xffff582981cc   364  ldr x17, pc+332 (addr 0x0000ffff58298318)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582981d0   368  blr x17
0xffff582981d4   372  movz x0, #0x12000000000
0xffff582981d8   376  movz x10, #0x0
0xffff582981dc   380  sub csp, jssp, #0x10 (16)
0xffff582981e0   384  stp x10, x0, [jssp, #-16]!
0xffff582981e4   388  movz x0, #0x2
0xffff582981e8   392  movz x1, #0x5b88
0xffff582981ec   396  movk x1, #0xe2, lsl #16
0xffff582981f0   400  ldr x16, pc+304 (addr 0x0000ffff58298320)    ;; code: STUB, CEntryStub, minor: 5
0xffff582981f4   404  blr x16
0xffff582981f8   408  str x0, [jssp, #24]
0xffff582981fc   412  ldr x16, pc+300 (addr 0x0000ffff58298328)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff58298200   416  blr x16
0xffff58298204   420  ldr lr, [jssp, #16]
0xffff58298208   424  ldp xzr, fp, [jssp], #24
0xffff5829820c   428  b #-0x18c (addr 0xffff58298080)
0xffff58298210   432  580008ff       constant pool begin (num_const = 71)    ;; constant pool
0xffff58298214   436  d63f03e0       constant
0xffff58298218   440  32b06149       constant
0xffff5829821c   444  00000000       constant
0xffff58298220   448  39c04519       constant
0xffff58298224   452  00000000       constant
0xffff58298228   456  39c04241       constant
0xffff5829822c   460  00000000       constant
0xffff58298230   464  39c04241       constant
0xffff58298234   468  00000000       constant
0xffff58298238   472  39c04241       constant
0xffff5829823c   476  00000000       constant
0xffff58298240   480  39c04241       constant
0xffff58298244   484  00000000       constant
0xffff58298248   488  39c04241       constant
0xffff5829824c   492  00000000       constant
0xffff58298250   496  39c04241       constant
0xffff58298254   500  00000000       constant
0xffff58298258   504  39c04241       constant
0xffff5829825c   508  00000000       constant
0xffff58298260   512  39c04241       constant
0xffff58298264   516  00000000       constant
0xffff58298268   520  39c04241       constant
0xffff5829826c   524  00000000       constant
0xffff58298270   528  39c04241       constant
0xffff58298274   532  00000000       constant
0xffff58298278   536  39c04241       constant
0xffff5829827c   540  00000000       constant
0xffff58298280   544  39c04241       constant
0xffff58298284   548  00000000       constant
0xffff58298288   552  39c04241       constant
0xffff5829828c   556  00000000       constant
0xffff58298290   560  39c04241       constant
0xffff58298294   564  00000000       constant
0xffff58298298   568  39c04241       constant
0xffff5829829c   572  00000000       constant
0xffff582982a0   576  39c04241       constant
0xffff582982a4   580  00000000       constant
0xffff582982a8   584  39c04241       constant
0xffff582982ac   588  00000000       constant
0xffff582982b0   592  39c04241       constant
0xffff582982b4   596  00000000       constant
0xffff582982b8   600  39c04241       constant
0xffff582982bc   604  00000000       constant
0xffff582982c0   608  39c04241       constant
0xffff582982c4   612  00000000       constant
0xffff582982c8   616  39c04241       constant
0xffff582982cc   620  00000000       constant
0xffff582982d0   624  39c04241       constant
0xffff582982d4   628  00000000       constant
0xffff582982d8   632  39c04241       constant
0xffff582982dc   636  00000000       constant
0xffff582982e0   640  39c04241       constant
0xffff582982e4   644  00000000       constant
0xffff582982e8   648  39c04241       constant
0xffff582982ec   652  00000000       constant
0xffff582982f0   656  39c04241       constant
0xffff582982f4   660  00000000       constant
0xffff582982f8   664  39c04241       constant
0xffff582982fc   668  00000000       constant
0xffff58298300   672  39c04241       constant
0xffff58298304   676  00000000       constant
0xffff58298308   680  39c04241       constant
0xffff5829830c   684  00000000       constant
0xffff58298310   688  39c04241       constant
0xffff58298314   692  00000000       constant
0xffff58298318   696  58206820       constant
0xffff5829831c   700  0000ffff       constant
0xffff58298320   704  58206260       constant
0xffff58298324   708  0000ffff       constant
0xffff58298328   712  582068e0       constant
0xffff5829832c   716  0000ffff       constant


Safepoints (size = 21)
0xffff582981f8   408  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 41)
0xffff58298080  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58298098  embedded object  (0x39c04519 <the hole>)
0xffff582980a8  embedded object  (0x39c04241 <undefined>)
0xffff582980b0  embedded object  (0x39c04241 <undefined>)
0xffff582980b8  embedded object  (0x39c04241 <undefined>)
0xffff582980c0  embedded object  (0x39c04241 <undefined>)
0xffff582980c8  embedded object  (0x39c04241 <undefined>)
0xffff582980d0  embedded object  (0x39c04241 <undefined>)
0xffff582980d8  embedded object  (0x39c04241 <undefined>)
0xffff582980e0  embedded object  (0x39c04241 <undefined>)
0xffff582980e8  embedded object  (0x39c04241 <undefined>)
0xffff582980f0  embedded object  (0x39c04241 <undefined>)
0xffff582980f8  embedded object  (0x39c04241 <undefined>)
0xffff58298100  embedded object  (0x39c04241 <undefined>)
0xffff58298108  embedded object  (0x39c04241 <undefined>)
0xffff58298110  embedded object  (0x39c04241 <undefined>)
0xffff58298118  embedded object  (0x39c04241 <undefined>)
0xffff58298120  embedded object  (0x39c04241 <undefined>)
0xffff58298128  embedded object  (0x39c04241 <undefined>)
0xffff58298130  embedded object  (0x39c04241 <undefined>)
0xffff58298138  embedded object  (0x39c04241 <undefined>)
0xffff58298140  embedded object  (0x39c04241 <undefined>)
0xffff58298148  embedded object  (0x39c04241 <undefined>)
0xffff58298150  embedded object  (0x39c04241 <undefined>)
0xffff58298158  embedded object  (0x39c04241 <undefined>)
0xffff58298160  embedded object  (0x39c04241 <undefined>)
0xffff58298168  embedded object  (0x39c04241 <undefined>)
0xffff58298170  embedded object  (0x39c04241 <undefined>)
0xffff58298178  embedded object  (0x39c04241 <undefined>)
0xffff58298180  embedded object  (0x39c04241 <undefined>)
0xffff5829818c  embedded object  (0x39c04241 <undefined>)
0xffff58298198  embedded object  (0x39c04241 <undefined>)
0xffff582981cc  code target (STUB)  (0xffff58206820)
0xffff582981f0  code target (STUB)  (0xffff58206260)
0xffff582981fc  code target (STUB)  (0xffff582068e0)
0xffff58298210  constant pool (size 288)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff58299940     0  tbz w0, #0, #+0x98 (addr 0xffff582999d8)
0xffff58299944     4  mov x2, x0
0xffff58299948     8  ldur x4, [x1, #7]
0xffff5829994c    12  stur x2, [x4, #23]
0xffff58299950    16  add x3, x4, #0x17 (23)
0xffff58299954    20  and x2, x2, #0xfffffffffff00000
0xffff58299958    24  ldr x2, [x2, #8]
0xffff5829995c    28  tbz w2, #1, #+0x24 (addr 0xffff58299980)
0xffff58299960    32  and x2, x4, #0xfffffffffff00000
0xffff58299964    36  ldr x2, [x2, #8]
0xffff58299968    40  tbz w2, #2, #+0x18 (addr 0xffff58299980)
0xffff5829996c    44  sub csp, jssp, #0x8 (8)
0xffff58299970    48  str lr, [jssp, #-8]!
0xffff58299974    52  ldr x16, pc+84 (addr 0x0000ffff582999c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff58299978    56  blr x16
0xffff5829997c    60  ldr lr, [jssp], #8
0xffff58299980    64  stur x5, [x1, #-1]
0xffff58299984    68  tbz w5, #0, #+0x34 (addr 0xffff582999b8)
0xffff58299988    72  sub x2, x1, #0x1 (1)
0xffff5829998c    76  and x5, x5, #0xfffffffffff00000
0xffff58299990    80  ldr x5, [x5, #8]
0xffff58299994    84  tbz w5, #1, #+0x24 (addr 0xffff582999b8)
0xffff58299998    88  and x5, x1, #0xfffffffffff00000
0xffff5829999c    92  ldr x5, [x5, #8]
0xffff582999a0    96  tbz w5, #2, #+0x18 (addr 0xffff582999b8)
0xffff582999a4   100  sub csp, jssp, #0x8 (8)
0xffff582999a8   104  str lr, [jssp, #-8]!
0xffff582999ac   108  ldr x16, pc+36 (addr 0x0000ffff582999d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582999b0   112  blr x16
0xffff582999b4   116  ldr lr, [jssp], #8
0xffff582999b8   120  ret
0xffff582999bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582999c0   128  d63f03e0       constant
0xffff582999c4   132  d503201f       constant
0xffff582999c8   136  582378a0       constant
0xffff582999cc   140  0000ffff       constant
0xffff582999d0   144  58238080       constant
0xffff582999d4   148  0000ffff       constant
0xffff582999d8   152  movz x16, #0x0
0xffff582999dc   156  sub csp, jssp, #0x10 (16)
0xffff582999e0   160  stp fp, lr, [jssp, #-16]!
0xffff582999e4   164  bl #+0x4 (addr 0xffff582999e8)
0xffff582999e8   168  movz x17, #0xa00000000
0xffff582999ec   172  sub csp, jssp, #0x10 (16)
0xffff582999f0   176  stp x17, cp, [jssp, #-16]!
0xffff582999f4   180  add fp, jssp, #0x10 (16)
0xffff582999f8   184  ldr x17, pc+24 (addr 0x0000ffff58299a10)    ;; lazy deoptimization bailout 0
0xffff582999fc   188  add x17, x17, x16
0xffff58299a00   192  br x17
0xffff58299a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58299a08   200  d63f03e0       constant
0xffff58299a0c   204  d503201f       constant
0xffff58299a10   208  58006000       constant
0xffff58299a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff58299974  code target (STUB)  (0xffff582378a0)
0xffff582999ac  code target (STUB)  (0xffff58238080)
0xffff582999bc  constant pool (size 28)
0xffff582999f8  runtime entry
0xffff58299a04  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff58299940     0  tbz w0, #0, #+0x98 (addr 0xffff582999d8)
0xffff58299944     4  mov x2, x0
0xffff58299948     8  ldur x4, [x1, #7]
0xffff5829994c    12  stur x2, [x4, #23]
0xffff58299950    16  add x3, x4, #0x17 (23)
0xffff58299954    20  and x2, x2, #0xfffffffffff00000
0xffff58299958    24  ldr x2, [x2, #8]
0xffff5829995c    28  tbz w2, #1, #+0x24 (addr 0xffff58299980)
0xffff58299960    32  and x2, x4, #0xfffffffffff00000
0xffff58299964    36  ldr x2, [x2, #8]
0xffff58299968    40  tbz w2, #2, #+0x18 (addr 0xffff58299980)
0xffff5829996c    44  sub csp, jssp, #0x8 (8)
0xffff58299970    48  str lr, [jssp, #-8]!
0xffff58299974    52  ldr x16, pc+84 (addr 0x0000ffff582999c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff58299978    56  blr x16
0xffff5829997c    60  ldr lr, [jssp], #8
0xffff58299980    64  stur x5, [x1, #-1]
0xffff58299984    68  tbz w5, #0, #+0x34 (addr 0xffff582999b8)
0xffff58299988    72  sub x2, x1, #0x1 (1)
0xffff5829998c    76  and x5, x5, #0xfffffffffff00000
0xffff58299990    80  ldr x5, [x5, #8]
0xffff58299994    84  tbz w5, #1, #+0x24 (addr 0xffff582999b8)
0xffff58299998    88  and x5, x1, #0xfffffffffff00000
0xffff5829999c    92  ldr x5, [x5, #8]
0xffff582999a0    96  tbz w5, #2, #+0x18 (addr 0xffff582999b8)
0xffff582999a4   100  sub csp, jssp, #0x8 (8)
0xffff582999a8   104  str lr, [jssp, #-8]!
0xffff582999ac   108  ldr x16, pc+36 (addr 0x0000ffff582999d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582999b0   112  blr x16
0xffff582999b4   116  ldr lr, [jssp], #8
0xffff582999b8   120  ret
0xffff582999bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582999c0   128  d63f03e0       constant
0xffff582999c4   132  d503201f       constant
0xffff582999c8   136  582378a0       constant
0xffff582999cc   140  0000ffff       constant
0xffff582999d0   144  58238080       constant
0xffff582999d4   148  0000ffff       constant
0xffff582999d8   152  movz x16, #0x0
0xffff582999dc   156  sub csp, jssp, #0x10 (16)
0xffff582999e0   160  stp fp, lr, [jssp, #-16]!
0xffff582999e4   164  bl #+0x4 (addr 0xffff582999e8)
0xffff582999e8   168  movz x17, #0xa00000000
0xffff582999ec   172  sub csp, jssp, #0x10 (16)
0xffff582999f0   176  stp x17, cp, [jssp, #-16]!
0xffff582999f4   180  add fp, jssp, #0x10 (16)
0xffff582999f8   184  ldr x17, pc+24 (addr 0x0000ffff58299a10)    ;; lazy deoptimization bailout 0
0xffff582999fc   188  add x17, x17, x16
0xffff58299a00   192  br x17
0xffff58299a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58299a08   200  d63f03e0       constant
0xffff58299a0c   204  d503201f       constant
0xffff58299a10   208  58006000       constant
0xffff58299a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff58299974  code target (STUB)  (0xffff582378a0)
0xffff582999ac  code target (STUB)  (0xffff58238080)
0xffff582999bc  constant pool (size 28)
0xffff582999f8  runtime entry
0xffff58299a04  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/linkedlist
compiler = unknown
Instructions (size = 184)
0xffff58299a80     0  sub csp, jssp, #0x8 (8)
0xffff58299a84     4  str x3, [jssp, #-8]!
0xffff58299a88     8  sub csp, jssp, #0x8 (8)
0xffff58299a8c    12  str x4, [jssp, #-8]!
0xffff58299a90    16  ldr x3, pc+112 (addr 0x0000ffff58299b00)    ;; object: 0x39c63e59 Cell for 0
0xffff58299a94    20  ldur x3, [x3, #7]
0xffff58299a98    24  cmp x3, #0x0 (0)
0xffff58299a9c    28  b.ne #+0x44 (addr 0xffff58299ae0)
0xffff58299aa0    32  tbz w0, #0, #+0x40 (addr 0xffff58299ae0)
0xffff58299aa4    36  ldur x3, [x0, #-1]
0xffff58299aa8    40  ldr x4, pc+96 (addr 0x0000ffff58299b08)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58299aac    44  ldur x4, [x4, #7]
0xffff58299ab0    48  cmp x3, x4
0xffff58299ab4    52  b.ne #+0x2c (addr 0xffff58299ae0)
0xffff58299ab8    56  ldr x5, pc+88 (addr 0x0000ffff58299b10)    ;; object: 0x39ce8e49 WeakCell for 0x32b24de1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff58299abc    60  ldur x5, [x5, #7]
0xffff58299ac0    64  tbz w5, #0, #+0x20 (addr 0xffff58299ae0)
0xffff58299ac4    68  ldursw x4, [x5, #15]
0xffff58299ac8    72  tbnz w4, #23, #+0x18 (addr 0xffff58299ae0)
0xffff58299acc    76  ldr x4, [jssp], #8
0xffff58299ad0    80  ldr x3, [jssp], #8
0xffff58299ad4    84  ldr x2, pc+68 (addr 0x0000ffff58299b18)    ;; object: 0x39cbe2f9 <String[19]: internal/linkedlist>
0xffff58299ad8    88  ldr x16, pc+72 (addr 0x0000ffff58299b20)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff58299adc    92  br x16
0xffff58299ae0    96  ldr x2, pc+72 (addr 0x0000ffff58299b28)    ;; object: 0x39cbe2f9 <String[19]: internal/linkedlist>
0xffff58299ae4   100  ldr x4, [jssp], #8
0xffff58299ae8   104  ldr x3, [jssp], #8
0xffff58299aec   108  ldr x16, pc+68 (addr 0x0000ffff58299b30)    ;; code: BUILTIN
0xffff58299af0   112  br x16
0xffff58299af4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff58299af8   120  d63f03e0       constant
0xffff58299afc   124  d503201f       constant
0xffff58299b00   128  39c63e59       constant
0xffff58299b04   132  00000000       constant
0xffff58299b08   136  39cc22b1       constant
0xffff58299b0c   140  00000000       constant
0xffff58299b10   144  39ce8e49       constant
0xffff58299b14   148  00000000       constant
0xffff58299b18   152  39cbe2f9       constant
0xffff58299b1c   156  00000000       constant
0xffff58299b20   160  58299940       constant
0xffff58299b24   164  0000ffff       constant
0xffff58299b28   168  39cbe2f9       constant
0xffff58299b2c   172  00000000       constant
0xffff58299b30   176  58222420       constant
0xffff58299b34   180  0000ffff       constant


RelocInfo (size = 13)
0xffff58299a90  embedded object  (0x39c63e59 Cell for 0)
0xffff58299aa8  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58299ab8  embedded object  (0x39ce8e49 WeakCell for 0x32b24de1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff58299ad4  embedded object  (0x39cbe2f9 <String[19]: internal/linkedlist>)
0xffff58299ad8  code target (HANDLER)  (0xffff58299940)
0xffff58299ae0  embedded object  (0x39cbe2f9 <String[19]: internal/linkedlist>)
0xffff58299aec  code target (BUILTIN)  (0xffff58222420)
0xffff58299af4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff5829a100     0  tbz w0, #0, #+0x98 (addr 0xffff5829a198)
0xffff5829a104     4  mov x2, x0
0xffff5829a108     8  ldur x4, [x1, #7]
0xffff5829a10c    12  stur x2, [x4, #31]
0xffff5829a110    16  add x3, x4, #0x1f (31)
0xffff5829a114    20  and x2, x2, #0xfffffffffff00000
0xffff5829a118    24  ldr x2, [x2, #8]
0xffff5829a11c    28  tbz w2, #1, #+0x24 (addr 0xffff5829a140)
0xffff5829a120    32  and x2, x4, #0xfffffffffff00000
0xffff5829a124    36  ldr x2, [x2, #8]
0xffff5829a128    40  tbz w2, #2, #+0x18 (addr 0xffff5829a140)
0xffff5829a12c    44  sub csp, jssp, #0x8 (8)
0xffff5829a130    48  str lr, [jssp, #-8]!
0xffff5829a134    52  ldr x16, pc+84 (addr 0x0000ffff5829a188)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff5829a138    56  blr x16
0xffff5829a13c    60  ldr lr, [jssp], #8
0xffff5829a140    64  stur x5, [x1, #-1]
0xffff5829a144    68  tbz w5, #0, #+0x34 (addr 0xffff5829a178)
0xffff5829a148    72  sub x2, x1, #0x1 (1)
0xffff5829a14c    76  and x5, x5, #0xfffffffffff00000
0xffff5829a150    80  ldr x5, [x5, #8]
0xffff5829a154    84  tbz w5, #1, #+0x24 (addr 0xffff5829a178)
0xffff5829a158    88  and x5, x1, #0xfffffffffff00000
0xffff5829a15c    92  ldr x5, [x5, #8]
0xffff5829a160    96  tbz w5, #2, #+0x18 (addr 0xffff5829a178)
0xffff5829a164   100  sub csp, jssp, #0x8 (8)
0xffff5829a168   104  str lr, [jssp, #-8]!
0xffff5829a16c   108  ldr x16, pc+36 (addr 0x0000ffff5829a190)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5829a170   112  blr x16
0xffff5829a174   116  ldr lr, [jssp], #8
0xffff5829a178   120  ret
0xffff5829a17c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff5829a180   128  d63f03e0       constant
0xffff5829a184   132  d503201f       constant
0xffff5829a188   136  582378a0       constant
0xffff5829a18c   140  0000ffff       constant
0xffff5829a190   144  58238080       constant
0xffff5829a194   148  0000ffff       constant
0xffff5829a198   152  movz x16, #0x0
0xffff5829a19c   156  sub csp, jssp, #0x10 (16)
0xffff5829a1a0   160  stp fp, lr, [jssp, #-16]!
0xffff5829a1a4   164  bl #+0x4 (addr 0xffff5829a1a8)
0xffff5829a1a8   168  movz x17, #0xa00000000
0xffff5829a1ac   172  sub csp, jssp, #0x10 (16)
0xffff5829a1b0   176  stp x17, cp, [jssp, #-16]!
0xffff5829a1b4   180  add fp, jssp, #0x10 (16)
0xffff5829a1b8   184  ldr x17, pc+24 (addr 0x0000ffff5829a1d0)    ;; lazy deoptimization bailout 0
0xffff5829a1bc   188  add x17, x17, x16
0xffff5829a1c0   192  br x17
0xffff5829a1c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5829a1c8   200  d63f03e0       constant
0xffff5829a1cc   204  d503201f       constant
0xffff5829a1d0   208  58006000       constant
0xffff5829a1d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5829a134  code target (STUB)  (0xffff582378a0)
0xffff5829a16c  code target (STUB)  (0xffff58238080)
0xffff5829a17c  constant pool (size 28)
0xffff5829a1b8  runtime entry
0xffff5829a1c4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff5829a100     0  tbz w0, #0, #+0x98 (addr 0xffff5829a198)
0xffff5829a104     4  mov x2, x0
0xffff5829a108     8  ldur x4, [x1, #7]
0xffff5829a10c    12  stur x2, [x4, #31]
0xffff5829a110    16  add x3, x4, #0x1f (31)
0xffff5829a114    20  and x2, x2, #0xfffffffffff00000
0xffff5829a118    24  ldr x2, [x2, #8]
0xffff5829a11c    28  tbz w2, #1, #+0x24 (addr 0xffff5829a140)
0xffff5829a120    32  and x2, x4, #0xfffffffffff00000
0xffff5829a124    36  ldr x2, [x2, #8]
0xffff5829a128    40  tbz w2, #2, #+0x18 (addr 0xffff5829a140)
0xffff5829a12c    44  sub csp, jssp, #0x8 (8)
0xffff5829a130    48  str lr, [jssp, #-8]!
0xffff5829a134    52  ldr x16, pc+84 (addr 0x0000ffff5829a188)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff5829a138    56  blr x16
0xffff5829a13c    60  ldr lr, [jssp], #8
0xffff5829a140    64  stur x5, [x1, #-1]
0xffff5829a144    68  tbz w5, #0, #+0x34 (addr 0xffff5829a178)
0xffff5829a148    72  sub x2, x1, #0x1 (1)
0xffff5829a14c    76  and x5, x5, #0xfffffffffff00000
0xffff5829a150    80  ldr x5, [x5, #8]
0xffff5829a154    84  tbz w5, #1, #+0x24 (addr 0xffff5829a178)
0xffff5829a158    88  and x5, x1, #0xfffffffffff00000
0xffff5829a15c    92  ldr x5, [x5, #8]
0xffff5829a160    96  tbz w5, #2, #+0x18 (addr 0xffff5829a178)
0xffff5829a164   100  sub csp, jssp, #0x8 (8)
0xffff5829a168   104  str lr, [jssp, #-8]!
0xffff5829a16c   108  ldr x16, pc+36 (addr 0x0000ffff5829a190)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5829a170   112  blr x16
0xffff5829a174   116  ldr lr, [jssp], #8
0xffff5829a178   120  ret
0xffff5829a17c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff5829a180   128  d63f03e0       constant
0xffff5829a184   132  d503201f       constant
0xffff5829a188   136  582378a0       constant
0xffff5829a18c   140  0000ffff       constant
0xffff5829a190   144  58238080       constant
0xffff5829a194   148  0000ffff       constant
0xffff5829a198   152  movz x16, #0x0
0xffff5829a19c   156  sub csp, jssp, #0x10 (16)
0xffff5829a1a0   160  stp fp, lr, [jssp, #-16]!
0xffff5829a1a4   164  bl #+0x4 (addr 0xffff5829a1a8)
0xffff5829a1a8   168  movz x17, #0xa00000000
0xffff5829a1ac   172  sub csp, jssp, #0x10 (16)
0xffff5829a1b0   176  stp x17, cp, [jssp, #-16]!
0xffff5829a1b4   180  add fp, jssp, #0x10 (16)
0xffff5829a1b8   184  ldr x17, pc+24 (addr 0x0000ffff5829a1d0)    ;; lazy deoptimization bailout 0
0xffff5829a1bc   188  add x17, x17, x16
0xffff5829a1c0   192  br x17
0xffff5829a1c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5829a1c8   200  d63f03e0       constant
0xffff5829a1cc   204  d503201f       constant
0xffff5829a1d0   208  58006000       constant
0xffff5829a1d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff5829a134  code target (STUB)  (0xffff582378a0)
0xffff5829a16c  code target (STUB)  (0xffff58238080)
0xffff5829a17c  constant pool (size 28)
0xffff5829a1b8  runtime entry
0xffff5829a1c4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = assert
compiler = unknown
Instructions (size = 184)
0xffff5829a240     0  sub csp, jssp, #0x8 (8)
0xffff5829a244     4  str x3, [jssp, #-8]!
0xffff5829a248     8  sub csp, jssp, #0x8 (8)
0xffff5829a24c    12  str x4, [jssp, #-8]!
0xffff5829a250    16  ldr x3, pc+112 (addr 0x0000ffff5829a2c0)    ;; object: 0x39c63e59 Cell for 0
0xffff5829a254    20  ldur x3, [x3, #7]
0xffff5829a258    24  cmp x3, #0x0 (0)
0xffff5829a25c    28  b.ne #+0x44 (addr 0xffff5829a2a0)
0xffff5829a260    32  tbz w0, #0, #+0x40 (addr 0xffff5829a2a0)
0xffff5829a264    36  ldur x3, [x0, #-1]
0xffff5829a268    40  ldr x4, pc+96 (addr 0x0000ffff5829a2c8)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5829a26c    44  ldur x4, [x4, #7]
0xffff5829a270    48  cmp x3, x4
0xffff5829a274    52  b.ne #+0x2c (addr 0xffff5829a2a0)
0xffff5829a278    56  ldr x5, pc+88 (addr 0x0000ffff5829a2d0)    ;; object: 0x39ce9b51 WeakCell for 0x32b250a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5829a27c    60  ldur x5, [x5, #7]
0xffff5829a280    64  tbz w5, #0, #+0x20 (addr 0xffff5829a2a0)
0xffff5829a284    68  ldursw x4, [x5, #15]
0xffff5829a288    72  tbnz w4, #23, #+0x18 (addr 0xffff5829a2a0)
0xffff5829a28c    76  ldr x4, [jssp], #8
0xffff5829a290    80  ldr x3, [jssp], #8
0xffff5829a294    84  ldr x2, pc+68 (addr 0x0000ffff5829a2d8)    ;; object: 0x39cbdc41 <String[6]: assert>
0xffff5829a298    88  ldr x16, pc+72 (addr 0x0000ffff5829a2e0)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff5829a29c    92  br x16
0xffff5829a2a0    96  ldr x2, pc+72 (addr 0x0000ffff5829a2e8)    ;; object: 0x39cbdc41 <String[6]: assert>
0xffff5829a2a4   100  ldr x4, [jssp], #8
0xffff5829a2a8   104  ldr x3, [jssp], #8
0xffff5829a2ac   108  ldr x16, pc+68 (addr 0x0000ffff5829a2f0)    ;; code: BUILTIN
0xffff5829a2b0   112  br x16
0xffff5829a2b4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff5829a2b8   120  d63f03e0       constant
0xffff5829a2bc   124  d503201f       constant
0xffff5829a2c0   128  39c63e59       constant
0xffff5829a2c4   132  00000000       constant
0xffff5829a2c8   136  39cc22b1       constant
0xffff5829a2cc   140  00000000       constant
0xffff5829a2d0   144  39ce9b51       constant
0xffff5829a2d4   148  00000000       constant
0xffff5829a2d8   152  39cbdc41       constant
0xffff5829a2dc   156  00000000       constant
0xffff5829a2e0   160  5829a100       constant
0xffff5829a2e4   164  0000ffff       constant
0xffff5829a2e8   168  39cbdc41       constant
0xffff5829a2ec   172  00000000       constant
0xffff5829a2f0   176  58222420       constant
0xffff5829a2f4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff5829a250  embedded object  (0x39c63e59 Cell for 0)
0xffff5829a268  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5829a278  embedded object  (0x39ce9b51 WeakCell for 0x32b250a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5829a294  embedded object  (0x39cbdc41 <String[6]: assert>)
0xffff5829a298  code target (HANDLER)  (0xffff5829a100)
0xffff5829a2a0  embedded object  (0x39cbdc41 <String[6]: assert>)
0xffff5829a2ac  code target (BUILTIN)  (0xffff58222420)
0xffff5829a2b4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = exec
compiler = unknown
Instructions (size = 120)
0xffff5829c7a0     0  sub csp, jssp, #0x8 (8)
0xffff5829c7a4     4  str x3, [jssp, #-8]!
0xffff5829c7a8     8  sub csp, jssp, #0x8 (8)
0xffff5829c7ac    12  str x0, [jssp, #-8]!
0xffff5829c7b0    16  ldr x0, pc+72 (addr 0x0000ffff5829c7f8)    ;; object: 0x39ced491 Cell for 0
0xffff5829c7b4    20  ldur x0, [x0, #7]
0xffff5829c7b8    24  cmp x0, #0x0 (0)
0xffff5829c7bc    28  b.ne #+0x14 (addr 0xffff5829c7d0)
0xffff5829c7c0    32  ldr x3, pc+64 (addr 0x0000ffff5829c800)    ;; object: 0x39ced4a1 WeakCell for 0x4f95ea99 <an Object with map 0x32b164d1>
0xffff5829c7c4    36  ldur x3, [x3, #7]
0xffff5829c7c8    40  tbz w3, #0, #+0x8 (addr 0xffff5829c7d0)
0xffff5829c7cc    44  b #+0x14 (addr 0xffff5829c7e0)
0xffff5829c7d0    48  ldr x0, [jssp], #8
0xffff5829c7d4    52  ldr x3, [jssp], #8
0xffff5829c7d8    56  ldr x16, pc+48 (addr 0x0000ffff5829c808)    ;; code: BUILTIN
0xffff5829c7dc    60  br x16
0xffff5829c7e0    64  add jssp, jssp, #0x10 (16)
0xffff5829c7e4    68  mov x1, x3
0xffff5829c7e8    72  ldr x16, pc+40 (addr 0x0000ffff5829c810)    ;; code: HANDLER, LoadFieldStub, minor: 2
0xffff5829c7ec    76  br x16
0xffff5829c7f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5829c7f4    84  d63f03e0       constant
0xffff5829c7f8    88  39ced491       constant
0xffff5829c7fc    92  00000000       constant
0xffff5829c800    96  39ced4a1       constant
0xffff5829c804   100  00000000       constant
0xffff5829c808   104  582222e0       constant
0xffff5829c80c   108  0000ffff       constant
0xffff5829c810   112  5826c260       constant
0xffff5829c814   116  0000ffff       constant


RelocInfo (size = 10)
0xffff5829c7b0  embedded object  (0x39ced491 Cell for 0)
0xffff5829c7c0  embedded object  (0x39ced4a1 WeakCell for 0x4f95ea99 <an Object with map 0x32b164d1>)
0xffff5829c7d8  code target (BUILTIN)  (0xffff582222e0)
0xffff5829c7e8  code target (HANDLER)  (0xffff5826c260)
0xffff5829c7f0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff5829cd40     0  mov x2, x0
0xffff5829cd44     4  stur x2, [x1, #47]
0xffff5829cd48     8  tbz w2, #0, #+0x34 (addr 0xffff5829cd7c)
0xffff5829cd4c    12  add x3, x1, #0x2f (47)
0xffff5829cd50    16  and x2, x2, #0xfffffffffff00000
0xffff5829cd54    20  ldr x2, [x2, #8]
0xffff5829cd58    24  tbz w2, #1, #+0x24 (addr 0xffff5829cd7c)
0xffff5829cd5c    28  and x2, x1, #0xfffffffffff00000
0xffff5829cd60    32  ldr x2, [x2, #8]
0xffff5829cd64    36  tbz w2, #2, #+0x18 (addr 0xffff5829cd7c)
0xffff5829cd68    40  sub csp, jssp, #0x8 (8)
0xffff5829cd6c    44  str lr, [jssp, #-8]!
0xffff5829cd70    48  ldr x16, pc+24 (addr 0x0000ffff5829cd88)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5829cd74    52  blr x16
0xffff5829cd78    56  ldr lr, [jssp], #8
0xffff5829cd7c    60  ret
0xffff5829cd80    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5829cd84    68  d63f03e0       constant
0xffff5829cd88    72  582170c0       constant
0xffff5829cd8c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff5829cd70  code target (STUB)  (0xffff582170c0)
0xffff5829cd80  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff5829cd40     0  mov x2, x0
0xffff5829cd44     4  stur x2, [x1, #47]
0xffff5829cd48     8  tbz w2, #0, #+0x34 (addr 0xffff5829cd7c)
0xffff5829cd4c    12  add x3, x1, #0x2f (47)
0xffff5829cd50    16  and x2, x2, #0xfffffffffff00000
0xffff5829cd54    20  ldr x2, [x2, #8]
0xffff5829cd58    24  tbz w2, #1, #+0x24 (addr 0xffff5829cd7c)
0xffff5829cd5c    28  and x2, x1, #0xfffffffffff00000
0xffff5829cd60    32  ldr x2, [x2, #8]
0xffff5829cd64    36  tbz w2, #2, #+0x18 (addr 0xffff5829cd7c)
0xffff5829cd68    40  sub csp, jssp, #0x8 (8)
0xffff5829cd6c    44  str lr, [jssp, #-8]!
0xffff5829cd70    48  ldr x16, pc+24 (addr 0x0000ffff5829cd88)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff5829cd74    52  blr x16
0xffff5829cd78    56  ldr lr, [jssp], #8
0xffff5829cd7c    60  ret
0xffff5829cd80    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff5829cd84    68  d63f03e0       constant
0xffff5829cd88    72  582170c0       constant
0xffff5829cd8c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff5829cd70  code target (STUB)  (0xffff582170c0)
0xffff5829cd80  constant pool (size 16)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff5829d3c0     0  ldur x6, [x1, #7]
0xffff5829d3c4     4  ldur w7, [x6, #11]
0xffff5829d3c8     8  adds w8, w7, #0x3 (3)
0xffff5829d3cc    12  b.vs #+0x1dc (addr 0xffff5829d5a8)
0xffff5829d3d0    16  movz w16, #0x95ff
0xffff5829d3d4    20  cmp w8, w16, lsl #1
0xffff5829d3d8    24  b.hs #+0x1e0 (addr 0xffff5829d5b8)
0xffff5829d3dc    28  lsl x9, x8, #32
0xffff5829d3e0    32  lsl w10, w8, #3
0xffff5829d3e4    36  add w10, w10, #0x10 (16)
0xffff5829d3e8    40  sxtw x10, w10
0xffff5829d3ec    44  movz x11, #0x92c0
0xffff5829d3f0    48  movk x11, #0x16e7, lsl #16
0xffff5829d3f4    52  ldp x13, x16, [x11]
0xffff5829d3f8    56  adds x12, x13, x10
0xffff5829d3fc    60  ccmp x12, x16, #nzCv, lo
0xffff5829d400    64  b.hi #+0xf8 (addr 0xffff5829d4f8)
0xffff5829d404    68  str x12, [x11]
0xffff5829d408    72  orr x13, x13, #0x1
0xffff5829d40c    76  ldr x10, pc+348 (addr 0x0000ffff5829d568)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5829d410    80  stur x10, [x13, #-1]
0xffff5829d414    84  stur x9, [x13, #7]
0xffff5829d418    88  cmp w7, w8
0xffff5829d41c    92  b.ge #+0x18 (addr 0xffff5829d434)
0xffff5829d420    96  sub w8, w8, #0x1 (1)
0xffff5829d424   100  ldr x9, pc+332 (addr 0x0000ffff5829d570)    ;; object: 0x39c04241 <undefined>
0xffff5829d428   104  add x10, x13, #0xf (15)
0xffff5829d42c   108  str x9, [x10, w8, sxtw #3]
0xffff5829d430   112  b #-0x18 (addr 0xffff5829d418)
0xffff5829d434   116  cmp w7, #0x0 (0)
0xffff5829d438   120  b.le #+0x1c (addr 0xffff5829d454)
0xffff5829d43c   124  sub w7, w7, #0x1 (1)
0xffff5829d440   128  add x8, x6, #0xf (15)
0xffff5829d444   132  ldr x9, [x8, w7, sxtw #3]
0xffff5829d448   136  add x8, x13, #0xf (15)
0xffff5829d44c   140  str x9, [x8, w7, sxtw #3]
0xffff5829d450   144  b #-0x1c (addr 0xffff5829d434)
0xffff5829d454   148  stur x13, [x1, #7]
0xffff5829d458   152  add x6, x1, #0x7 (7)
0xffff5829d45c   156  and x13, x1, #0xfffffffffff00000
0xffff5829d460   160  ldr x13, [x13, #8]
0xffff5829d464   164  tbz w13, #2, #+0x18 (addr 0xffff5829d47c)
0xffff5829d468   168  sub csp, jssp, #0x8 (8)
0xffff5829d46c   172  str lr, [jssp, #-8]!
0xffff5829d470   176  ldr x16, pc+264 (addr 0x0000ffff5829d578)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff5829d474   180  blr x16
0xffff5829d478   184  ldr lr, [jssp], #8
0xffff5829d47c   188  tbz w0, #0, #+0x14c (addr 0xffff5829d5c8)
0xffff5829d480   192  mov x2, x0
0xffff5829d484   196  ldur x4, [x1, #7]
0xffff5829d488   200  stur x2, [x4, #39]
0xffff5829d48c   204  add x3, x4, #0x27 (39)
0xffff5829d490   208  and x2, x2, #0xfffffffffff00000
0xffff5829d494   212  ldr x2, [x2, #8]
0xffff5829d498   216  tbz w2, #1, #+0x24 (addr 0xffff5829d4bc)
0xffff5829d49c   220  and x2, x4, #0xfffffffffff00000
0xffff5829d4a0   224  ldr x2, [x2, #8]
0xffff5829d4a4   228  tbz w2, #2, #+0x18 (addr 0xffff5829d4bc)
0xffff5829d4a8   232  sub csp, jssp, #0x8 (8)
0xffff5829d4ac   236  str lr, [jssp, #-8]!
0xffff5829d4b0   240  ldr x16, pc+208 (addr 0x0000ffff5829d580)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff5829d4b4   244  blr x16
0xffff5829d4b8   248  ldr lr, [jssp], #8
0xffff5829d4bc   252  stur x5, [x1, #-1]
0xffff5829d4c0   256  tbz w5, #0, #+0x34 (addr 0xffff5829d4f4)
0xffff5829d4c4   260  sub x2, x1, #0x1 (1)
0xffff5829d4c8   264  and x5, x5, #0xfffffffffff00000
0xffff5829d4cc   268  ldr x5, [x5, #8]
0xffff5829d4d0   272  tbz w5, #1, #+0x24 (addr 0xffff5829d4f4)
0xffff5829d4d4   276  and x5, x1, #0xfffffffffff00000
0xffff5829d4d8   280  ldr x5, [x5, #8]
0xffff5829d4dc   284  tbz w5, #2, #+0x18 (addr 0xffff5829d4f4)
0xffff5829d4e0   288  sub csp, jssp, #0x8 (8)
0xffff5829d4e4   292  str lr, [jssp, #-8]!
0xffff5829d4e8   296  ldr x16, pc+160 (addr 0x0000ffff5829d588)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5829d4ec   300  blr x16
0xffff5829d4f0   304  ldr lr, [jssp], #8
0xffff5829d4f4   308  ret
0xffff5829d4f8   312  sub csp, jssp, #0x10 (16)
0xffff5829d4fc   316  stp fp, lr, [jssp, #-16]!
0xffff5829d500   320  movz fp, #0xa00000000
0xffff5829d504   324  sub csp, jssp, #0x8 (8)
0xffff5829d508   328  str fp, [jssp, #-8]!
0xffff5829d50c   332  add fp, jssp, #0x8 (8)
0xffff5829d510   336  movz x13, #0x0
0xffff5829d514   340  mov x16, lr
0xffff5829d518   344  ldr x17, pc+120 (addr 0x0000ffff5829d590)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5829d51c   348  blr x17
0xffff5829d520   352  lsl x0, x10, #32
0xffff5829d524   356  movz x10, #0x0
0xffff5829d528   360  sub csp, jssp, #0x10 (16)
0xffff5829d52c   364  stp x10, x0, [jssp, #-16]!
0xffff5829d530   368  movz x0, #0x2
0xffff5829d534   372  movz x1, #0x5b88
0xffff5829d538   376  movk x1, #0xe2, lsl #16
0xffff5829d53c   380  ldr x16, pc+92 (addr 0x0000ffff5829d598)    ;; code: STUB, CEntryStub, minor: 5
0xffff5829d540   384  blr x16
0xffff5829d544   388  str x0, [jssp, #104]
0xffff5829d548   392  ldr x16, pc+88 (addr 0x0000ffff5829d5a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5829d54c   396  blr x16
0xffff5829d550   400  ldr lr, [jssp, #16]
0xffff5829d554   404  ldp xzr, fp, [jssp], #24
0xffff5829d558   408  b #-0x14c (addr 0xffff5829d40c)
0xffff5829d55c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff5829d560   416  d63f03e0       constant
0xffff5829d564   420  d503201f       constant
0xffff5829d568   424  32b04259       constant
0xffff5829d56c   428  00000000       constant
0xffff5829d570   432  39c04241       constant
0xffff5829d574   436  00000000       constant
0xffff5829d578   440  582370c0       constant
0xffff5829d57c   444  0000ffff       constant
0xffff5829d580   448  582378a0       constant
0xffff5829d584   452  0000ffff       constant
0xffff5829d588   456  58238080       constant
0xffff5829d58c   460  0000ffff       constant
0xffff5829d590   464  58206820       constant
0xffff5829d594   468  0000ffff       constant
0xffff5829d598   472  58206260       constant
0xffff5829d59c   476  0000ffff       constant
0xffff5829d5a0   480  582068e0       constant
0xffff5829d5a4   484  0000ffff       constant
0xffff5829d5a8   488  movz x16, #0x0
0xffff5829d5ac   492  sub csp, jssp, #0x10 (16)
0xffff5829d5b0   496  stp fp, lr, [jssp, #-16]!
0xffff5829d5b4   500  bl #+0x24 (addr 0xffff5829d5d8)
0xffff5829d5b8   504  movz x16, #0x8
0xffff5829d5bc   508  sub csp, jssp, #0x10 (16)
0xffff5829d5c0   512  stp fp, lr, [jssp, #-16]!
0xffff5829d5c4   516  bl #+0x14 (addr 0xffff5829d5d8)
0xffff5829d5c8   520  movz x16, #0x10
0xffff5829d5cc   524  sub csp, jssp, #0x10 (16)
0xffff5829d5d0   528  stp fp, lr, [jssp, #-16]!
0xffff5829d5d4   532  bl #+0x4 (addr 0xffff5829d5d8)
0xffff5829d5d8   536  movz x17, #0xa00000000
0xffff5829d5dc   540  sub csp, jssp, #0x10 (16)
0xffff5829d5e0   544  stp x17, cp, [jssp, #-16]!
0xffff5829d5e4   548  add fp, jssp, #0x10 (16)
0xffff5829d5e8   552  ldr x17, pc+24 (addr 0x0000ffff5829d600)    ;; lazy deoptimization bailout 0
0xffff5829d5ec   556  add x17, x17, x16
0xffff5829d5f0   560  br x17
0xffff5829d5f4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5829d5f8   568  d63f03e0       constant
0xffff5829d5fc   572  d503201f       constant
0xffff5829d600   576  58006000       constant
0xffff5829d604   580  0000ffff       constant


Safepoints (size = 21)
0xffff5829d544   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff5829d40c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5829d424  embedded object  (0x39c04241 <undefined>)
0xffff5829d470  code target (STUB)  (0xffff582370c0)
0xffff5829d4b0  code target (STUB)  (0xffff582378a0)
0xffff5829d4e8  code target (STUB)  (0xffff58238080)
0xffff5829d518  code target (STUB)  (0xffff58206820)
0xffff5829d53c  code target (STUB)  (0xffff58206260)
0xffff5829d548  code target (STUB)  (0xffff582068e0)
0xffff5829d55c  constant pool (size 76)
0xffff5829d5e8  runtime entry
0xffff5829d5f4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff5829d3c0     0  ldur x6, [x1, #7]
0xffff5829d3c4     4  ldur w7, [x6, #11]
0xffff5829d3c8     8  adds w8, w7, #0x3 (3)
0xffff5829d3cc    12  b.vs #+0x1dc (addr 0xffff5829d5a8)
0xffff5829d3d0    16  movz w16, #0x95ff
0xffff5829d3d4    20  cmp w8, w16, lsl #1
0xffff5829d3d8    24  b.hs #+0x1e0 (addr 0xffff5829d5b8)
0xffff5829d3dc    28  lsl x9, x8, #32
0xffff5829d3e0    32  lsl w10, w8, #3
0xffff5829d3e4    36  add w10, w10, #0x10 (16)
0xffff5829d3e8    40  sxtw x10, w10
0xffff5829d3ec    44  movz x11, #0x92c0
0xffff5829d3f0    48  movk x11, #0x16e7, lsl #16
0xffff5829d3f4    52  ldp x13, x16, [x11]
0xffff5829d3f8    56  adds x12, x13, x10
0xffff5829d3fc    60  ccmp x12, x16, #nzCv, lo
0xffff5829d400    64  b.hi #+0xf8 (addr 0xffff5829d4f8)
0xffff5829d404    68  str x12, [x11]
0xffff5829d408    72  orr x13, x13, #0x1
0xffff5829d40c    76  ldr x10, pc+348 (addr 0x0000ffff5829d568)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff5829d410    80  stur x10, [x13, #-1]
0xffff5829d414    84  stur x9, [x13, #7]
0xffff5829d418    88  cmp w7, w8
0xffff5829d41c    92  b.ge #+0x18 (addr 0xffff5829d434)
0xffff5829d420    96  sub w8, w8, #0x1 (1)
0xffff5829d424   100  ldr x9, pc+332 (addr 0x0000ffff5829d570)    ;; object: 0x39c04241 <undefined>
0xffff5829d428   104  add x10, x13, #0xf (15)
0xffff5829d42c   108  str x9, [x10, w8, sxtw #3]
0xffff5829d430   112  b #-0x18 (addr 0xffff5829d418)
0xffff5829d434   116  cmp w7, #0x0 (0)
0xffff5829d438   120  b.le #+0x1c (addr 0xffff5829d454)
0xffff5829d43c   124  sub w7, w7, #0x1 (1)
0xffff5829d440   128  add x8, x6, #0xf (15)
0xffff5829d444   132  ldr x9, [x8, w7, sxtw #3]
0xffff5829d448   136  add x8, x13, #0xf (15)
0xffff5829d44c   140  str x9, [x8, w7, sxtw #3]
0xffff5829d450   144  b #-0x1c (addr 0xffff5829d434)
0xffff5829d454   148  stur x13, [x1, #7]
0xffff5829d458   152  add x6, x1, #0x7 (7)
0xffff5829d45c   156  and x13, x1, #0xfffffffffff00000
0xffff5829d460   160  ldr x13, [x13, #8]
0xffff5829d464   164  tbz w13, #2, #+0x18 (addr 0xffff5829d47c)
0xffff5829d468   168  sub csp, jssp, #0x8 (8)
0xffff5829d46c   172  str lr, [jssp, #-8]!
0xffff5829d470   176  ldr x16, pc+264 (addr 0x0000ffff5829d578)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff5829d474   180  blr x16
0xffff5829d478   184  ldr lr, [jssp], #8
0xffff5829d47c   188  tbz w0, #0, #+0x14c (addr 0xffff5829d5c8)
0xffff5829d480   192  mov x2, x0
0xffff5829d484   196  ldur x4, [x1, #7]
0xffff5829d488   200  stur x2, [x4, #39]
0xffff5829d48c   204  add x3, x4, #0x27 (39)
0xffff5829d490   208  and x2, x2, #0xfffffffffff00000
0xffff5829d494   212  ldr x2, [x2, #8]
0xffff5829d498   216  tbz w2, #1, #+0x24 (addr 0xffff5829d4bc)
0xffff5829d49c   220  and x2, x4, #0xfffffffffff00000
0xffff5829d4a0   224  ldr x2, [x2, #8]
0xffff5829d4a4   228  tbz w2, #2, #+0x18 (addr 0xffff5829d4bc)
0xffff5829d4a8   232  sub csp, jssp, #0x8 (8)
0xffff5829d4ac   236  str lr, [jssp, #-8]!
0xffff5829d4b0   240  ldr x16, pc+208 (addr 0x0000ffff5829d580)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff5829d4b4   244  blr x16
0xffff5829d4b8   248  ldr lr, [jssp], #8
0xffff5829d4bc   252  stur x5, [x1, #-1]
0xffff5829d4c0   256  tbz w5, #0, #+0x34 (addr 0xffff5829d4f4)
0xffff5829d4c4   260  sub x2, x1, #0x1 (1)
0xffff5829d4c8   264  and x5, x5, #0xfffffffffff00000
0xffff5829d4cc   268  ldr x5, [x5, #8]
0xffff5829d4d0   272  tbz w5, #1, #+0x24 (addr 0xffff5829d4f4)
0xffff5829d4d4   276  and x5, x1, #0xfffffffffff00000
0xffff5829d4d8   280  ldr x5, [x5, #8]
0xffff5829d4dc   284  tbz w5, #2, #+0x18 (addr 0xffff5829d4f4)
0xffff5829d4e0   288  sub csp, jssp, #0x8 (8)
0xffff5829d4e4   292  str lr, [jssp, #-8]!
0xffff5829d4e8   296  ldr x16, pc+160 (addr 0x0000ffff5829d588)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff5829d4ec   300  blr x16
0xffff5829d4f0   304  ldr lr, [jssp], #8
0xffff5829d4f4   308  ret
0xffff5829d4f8   312  sub csp, jssp, #0x10 (16)
0xffff5829d4fc   316  stp fp, lr, [jssp, #-16]!
0xffff5829d500   320  movz fp, #0xa00000000
0xffff5829d504   324  sub csp, jssp, #0x8 (8)
0xffff5829d508   328  str fp, [jssp, #-8]!
0xffff5829d50c   332  add fp, jssp, #0x8 (8)
0xffff5829d510   336  movz x13, #0x0
0xffff5829d514   340  mov x16, lr
0xffff5829d518   344  ldr x17, pc+120 (addr 0x0000ffff5829d590)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5829d51c   348  blr x17
0xffff5829d520   352  lsl x0, x10, #32
0xffff5829d524   356  movz x10, #0x0
0xffff5829d528   360  sub csp, jssp, #0x10 (16)
0xffff5829d52c   364  stp x10, x0, [jssp, #-16]!
0xffff5829d530   368  movz x0, #0x2
0xffff5829d534   372  movz x1, #0x5b88
0xffff5829d538   376  movk x1, #0xe2, lsl #16
0xffff5829d53c   380  ldr x16, pc+92 (addr 0x0000ffff5829d598)    ;; code: STUB, CEntryStub, minor: 5
0xffff5829d540   384  blr x16
0xffff5829d544   388  str x0, [jssp, #104]
0xffff5829d548   392  ldr x16, pc+88 (addr 0x0000ffff5829d5a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5829d54c   396  blr x16
0xffff5829d550   400  ldr lr, [jssp, #16]
0xffff5829d554   404  ldp xzr, fp, [jssp], #24
0xffff5829d558   408  b #-0x14c (addr 0xffff5829d40c)
0xffff5829d55c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff5829d560   416  d63f03e0       constant
0xffff5829d564   420  d503201f       constant
0xffff5829d568   424  32b04259       constant
0xffff5829d56c   428  00000000       constant
0xffff5829d570   432  39c04241       constant
0xffff5829d574   436  00000000       constant
0xffff5829d578   440  582370c0       constant
0xffff5829d57c   444  0000ffff       constant
0xffff5829d580   448  582378a0       constant
0xffff5829d584   452  0000ffff       constant
0xffff5829d588   456  58238080       constant
0xffff5829d58c   460  0000ffff       constant
0xffff5829d590   464  58206820       constant
0xffff5829d594   468  0000ffff       constant
0xffff5829d598   472  58206260       constant
0xffff5829d59c   476  0000ffff       constant
0xffff5829d5a0   480  582068e0       constant
0xffff5829d5a4   484  0000ffff       constant
0xffff5829d5a8   488  movz x16, #0x0
0xffff5829d5ac   492  sub csp, jssp, #0x10 (16)
0xffff5829d5b0   496  stp fp, lr, [jssp, #-16]!
0xffff5829d5b4   500  bl #+0x24 (addr 0xffff5829d5d8)
0xffff5829d5b8   504  movz x16, #0x8
0xffff5829d5bc   508  sub csp, jssp, #0x10 (16)
0xffff5829d5c0   512  stp fp, lr, [jssp, #-16]!
0xffff5829d5c4   516  bl #+0x14 (addr 0xffff5829d5d8)
0xffff5829d5c8   520  movz x16, #0x10
0xffff5829d5cc   524  sub csp, jssp, #0x10 (16)
0xffff5829d5d0   528  stp fp, lr, [jssp, #-16]!
0xffff5829d5d4   532  bl #+0x4 (addr 0xffff5829d5d8)
0xffff5829d5d8   536  movz x17, #0xa00000000
0xffff5829d5dc   540  sub csp, jssp, #0x10 (16)
0xffff5829d5e0   544  stp x17, cp, [jssp, #-16]!
0xffff5829d5e4   548  add fp, jssp, #0x10 (16)
0xffff5829d5e8   552  ldr x17, pc+24 (addr 0x0000ffff5829d600)    ;; lazy deoptimization bailout 0
0xffff5829d5ec   556  add x17, x17, x16
0xffff5829d5f0   560  br x17
0xffff5829d5f4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5829d5f8   568  d63f03e0       constant
0xffff5829d5fc   572  d503201f       constant
0xffff5829d600   576  58006000       constant
0xffff5829d604   580  0000ffff       constant


Safepoints (size = 21)
0xffff5829d544   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff5829d40c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff5829d424  embedded object  (0x39c04241 <undefined>)
0xffff5829d470  code target (STUB)  (0xffff582370c0)
0xffff5829d4b0  code target (STUB)  (0xffff582378a0)
0xffff5829d4e8  code target (STUB)  (0xffff58238080)
0xffff5829d518  code target (STUB)  (0xffff58206820)
0xffff5829d53c  code target (STUB)  (0xffff58206260)
0xffff5829d548  code target (STUB)  (0xffff582068e0)
0xffff5829d55c  constant pool (size 76)
0xffff5829d5e8  runtime entry
0xffff5829d5f4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process
compiler = unknown
Instructions (size = 184)
0xffff5829d680     0  sub csp, jssp, #0x8 (8)
0xffff5829d684     4  str x3, [jssp, #-8]!
0xffff5829d688     8  sub csp, jssp, #0x8 (8)
0xffff5829d68c    12  str x4, [jssp, #-8]!
0xffff5829d690    16  ldr x3, pc+112 (addr 0x0000ffff5829d700)    ;; object: 0x39c63e59 Cell for 0
0xffff5829d694    20  ldur x3, [x3, #7]
0xffff5829d698    24  cmp x3, #0x0 (0)
0xffff5829d69c    28  b.ne #+0x44 (addr 0xffff5829d6e0)
0xffff5829d6a0    32  tbz w0, #0, #+0x40 (addr 0xffff5829d6e0)
0xffff5829d6a4    36  ldur x3, [x0, #-1]
0xffff5829d6a8    40  ldr x4, pc+96 (addr 0x0000ffff5829d708)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5829d6ac    44  ldur x4, [x4, #7]
0xffff5829d6b0    48  cmp x3, x4
0xffff5829d6b4    52  b.ne #+0x2c (addr 0xffff5829d6e0)
0xffff5829d6b8    56  ldr x5, pc+88 (addr 0x0000ffff5829d710)    ;; object: 0x39cee969 WeakCell for 0x32b25f11 <Map(FAST_HOLEY_ELEMENTS)>
0xffff5829d6bc    60  ldur x5, [x5, #7]
0xffff5829d6c0    64  tbz w5, #0, #+0x20 (addr 0xffff5829d6e0)
0xffff5829d6c4    68  ldursw x4, [x5, #15]
0xffff5829d6c8    72  tbnz w4, #23, #+0x18 (addr 0xffff5829d6e0)
0xffff5829d6cc    76  ldr x4, [jssp], #8
0xffff5829d6d0    80  ldr x3, [jssp], #8
0xffff5829d6d4    84  ldr x2, pc+68 (addr 0x0000ffff5829d718)    ;; object: 0x39cb9649 <String[16]: internal/process>
0xffff5829d6d8    88  ldr x16, pc+72 (addr 0x0000ffff5829d720)    ;; code: HANDLER, StoreTransitionStub, minor: 327685
0xffff5829d6dc    92  br x16
0xffff5829d6e0    96  ldr x2, pc+72 (addr 0x0000ffff5829d728)    ;; object: 0x39cb9649 <String[16]: internal/process>
0xffff5829d6e4   100  ldr x4, [jssp], #8
0xffff5829d6e8   104  ldr x3, [jssp], #8
0xffff5829d6ec   108  ldr x16, pc+68 (addr 0x0000ffff5829d730)    ;; code: BUILTIN
0xffff5829d6f0   112  br x16
0xffff5829d6f4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff5829d6f8   120  d63f03e0       constant
0xffff5829d6fc   124  d503201f       constant
0xffff5829d700   128  39c63e59       constant
0xffff5829d704   132  00000000       constant
0xffff5829d708   136  39cc22b1       constant
0xffff5829d70c   140  00000000       constant
0xffff5829d710   144  39cee969       constant
0xffff5829d714   148  00000000       constant
0xffff5829d718   152  39cb9649       constant
0xffff5829d71c   156  00000000       constant
0xffff5829d720   160  5829d3c0       constant
0xffff5829d724   164  0000ffff       constant
0xffff5829d728   168  39cb9649       constant
0xffff5829d72c   172  00000000       constant
0xffff5829d730   176  58222420       constant
0xffff5829d734   180  0000ffff       constant


RelocInfo (size = 13)
0xffff5829d690  embedded object  (0x39c63e59 Cell for 0)
0xffff5829d6a8  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5829d6b8  embedded object  (0x39cee969 WeakCell for 0x32b25f11 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff5829d6d4  embedded object  (0x39cb9649 <String[16]: internal/process>)
0xffff5829d6d8  code target (HANDLER)  (0xffff5829d3c0)
0xffff5829d6e0  embedded object  (0x39cb9649 <String[16]: internal/process>)
0xffff5829d6ec  code target (BUILTIN)  (0xffff58222420)
0xffff5829d6f4  constant pool (size 68)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff5829faa0     0  orr x16, x1, x0
0xffff5829faa4     4  tbnz w16, #0, #+0x10 (addr 0xffff5829fab4)
0xffff5829faa8     8  asr x1, x1, #32
0xffff5829faac    12  sub x0, x1, x0, asr #32
0xffff5829fab0    16  ret
0xffff5829fab4    20  cmp x0, x1
0xffff5829fab8    24  b.ne #+0x30 (addr 0xffff5829fae8)
0xffff5829fabc    28  ldur x16, [x0, #-1]
0xffff5829fac0    32  ldr x17, [x26, #120]
0xffff5829fac4    36  cmp x16, x17
0xffff5829fac8    40  b.eq #+0xc (addr 0xffff5829fad4)
0xffff5829facc    44  movz x0, #0x0
0xffff5829fad0    48  ret
0xffff5829fad4    52  ldur d0, [x0, #7]
0xffff5829fad8    56  fcmp d0, d0
0xffff5829fadc    60  b.vc #-0x10 (addr 0xffff5829facc)
0xffff5829fae0    64  movn x0, #0x0
0xffff5829fae4    68  ret
0xffff5829fae8    72  and x16, x1, x0
0xffff5829faec    76  tbnz w16, #0, #+0x64 (addr 0xffff5829fb50)
0xffff5829faf0    80  tbz w0, #0, #+0x24 (addr 0xffff5829fb14)
0xffff5829faf4    84  ldur x16, [x0, #-1]
0xffff5829faf8    88  ldr x17, [x26, #120]
0xffff5829fafc    92  cmp x16, x17
0xffff5829fb00    96  b.eq #+0x8 (addr 0xffff5829fb08)
0xffff5829fb04   100  ret
0xffff5829fb08   104  ldur d0, [x0, #7]
0xffff5829fb0c   108  scvtf d1, x1, #32
0xffff5829fb10   112  b #+0x24 (addr 0xffff5829fb34)
0xffff5829fb14   116  ldur x16, [x1, #-1]
0xffff5829fb18   120  ldr x17, [x26, #120]
0xffff5829fb1c   124  cmp x16, x17
0xffff5829fb20   128  b.eq #+0xc (addr 0xffff5829fb2c)
0xffff5829fb24   132  movz x0, #0x1
0xffff5829fb28   136  ret
0xffff5829fb2c   140  ldur d1, [x1, #7]
0xffff5829fb30   144  scvtf d0, x0, #32
0xffff5829fb34   148  fcmp d1, d0
0xffff5829fb38   152  b.vs #+0x10 (addr 0xffff5829fb48)
0xffff5829fb3c   156  cset x0, gt
0xffff5829fb40   160  csinv x0, x0, xzr, ge
0xffff5829fb44   164  ret
0xffff5829fb48   168  movn x0, #0x0
0xffff5829fb4c   172  ret
0xffff5829fb50   176  ldur x10, [x0, #-1]
0xffff5829fb54   180  ldur x12, [x1, #-1]
0xffff5829fb58   184  ldrb w11, [x10, #11]
0xffff5829fb5c   188  ldrb w13, [x12, #11]
0xffff5829fb60   192  cmp x11, #0xb1 (177)
0xffff5829fb64   196  b.lt #+0x8 (addr 0xffff5829fb6c)
0xffff5829fb68   200  ret
0xffff5829fb6c   204  cmp x11, #0x83 (131)
0xffff5829fb70   208  movz x16, #0x83
0xffff5829fb74   212  ccmp x13, x16, #nZcv, ne
0xffff5829fb78   216  movz x16, #0xb1
0xffff5829fb7c   220  ccmp x13, x16, #NzcV, ne
0xffff5829fb80   224  b.ge #-0x18 (addr 0xffff5829fb68)
0xffff5829fb84   228  orr x14, x13, x11
0xffff5829fb88   232  tst x14, #0xc0
0xffff5829fb8c   236  b.eq #-0x24 (addr 0xffff5829fb68)
0xffff5829fb90   240  cmp x11, #0x81 (129)
0xffff5829fb94   244  b.ne #+0x18 (addr 0xffff5829fbac)
0xffff5829fb98   248  cmp x12, x10
0xffff5829fb9c   252  b.ne #+0x10 (addr 0xffff5829fbac)
0xffff5829fba0   256  ldur d1, [x1, #7]
0xffff5829fba4   260  ldur d0, [x0, #7]
0xffff5829fba8   264  b #-0x74 (addr 0xffff5829fb34)
0xffff5829fbac   268  movz x16, #0x87
0xffff5829fbb0   272  and x14, x13, x16
0xffff5829fbb4   276  movz x16, #0x87
0xffff5829fbb8   280  and x15, x11, x16
0xffff5829fbbc   284  cmp x14, #0x4 (4)
0xffff5829fbc0   288  ccmp x15, #4, #nzcv, eq
0xffff5829fbc4   292  b.ne #+0x5c (addr 0xffff5829fc20)
0xffff5829fbc8   296  ldur x10, [x1, #15]
0xffff5829fbcc   300  ldur x11, [x0, #15]
0xffff5829fbd0   304  cmp x10, x11
0xffff5829fbd4   308  b.eq #+0xc (addr 0xffff5829fbe0)
0xffff5829fbd8   312  movz x0, #0x100000000
0xffff5829fbdc   316  ret
0xffff5829fbe0   320  cbnz x10, #+0xc (addr 0xffff5829fbec)
0xffff5829fbe4   324  movz x0, #0x0
0xffff5829fbe8   328  ret
0xffff5829fbec   332  asr x10, x10, #32
0xffff5829fbf0   336  add x11, x10, #0x17 (23)
0xffff5829fbf4   340  add x1, x1, x11
0xffff5829fbf8   344  add x0, x0, x11
0xffff5829fbfc   348  neg x10, x10
0xffff5829fc00   352  ldrb w11, [x1, x10]
0xffff5829fc04   356  ldrb w12, [x0, x10]
0xffff5829fc08   360  cmp x11, x12
0xffff5829fc0c   364  b.ne #-0x34 (addr 0xffff5829fbd8)
0xffff5829fc10   368  add x10, x10, #0x1 (1)
0xffff5829fc14   372  cbnz x10, #-0x14 (addr 0xffff5829fc00)
0xffff5829fc18   376  movz x0, #0x0
0xffff5829fc1c   380  ret
0xffff5829fc20   384  movz x16, #0xc00000000
0xffff5829fc24   388  sub csp, jssp, #0x10 (16)
0xffff5829fc28   392  stp fp, lr, [jssp, #-16]!
0xffff5829fc2c   396  sub csp, jssp, #0x10 (16)
0xffff5829fc30   400  str x16, [jssp, #-8]!
0xffff5829fc34   404  ldr x17, pc+172 (addr 0x0000ffff5829fce0)    ;; object: 0xffff5829fa41 <Code: COMPARE_IC>
0xffff5829fc38   408  sub csp, jssp, #0x10 (16)
0xffff5829fc3c   412  str x17, [jssp, #-8]!
0xffff5829fc40   416  add fp, jssp, #0x10 (16)
0xffff5829fc44   420  sub csp, jssp, #0x10 (16)
0xffff5829fc48   424  stp x0, x1, [jssp, #-16]!
0xffff5829fc4c   428  movz x0, #0x2
0xffff5829fc50   432  ldr x1, pc+152 (addr 0x0000ffff5829fce8)    ;; external reference (Runtime::StrictEqual)
0xffff5829fc54   436  ldr x16, pc+156 (addr 0x0000ffff5829fcf0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5829fc58   440  blr x16
0xffff5829fc5c   444  mov jssp, fp
0xffff5829fc60   448  ldp fp, lr, [jssp], #16
0xffff5829fc64   452  ldr x1, [x26, #64]
0xffff5829fc68   456  sub x0, x0, x1
0xffff5829fc6c   460  ret
0xffff5829fc70   464  movz x16, #0xc00000000
0xffff5829fc74   468  sub csp, jssp, #0x10 (16)
0xffff5829fc78   472  stp fp, lr, [jssp, #-16]!
0xffff5829fc7c   476  sub csp, jssp, #0x10 (16)
0xffff5829fc80   480  str x16, [jssp, #-8]!
0xffff5829fc84   484  ldr x17, pc+116 (addr 0x0000ffff5829fcf8)    ;; object: 0xffff5829fa41 <Code: COMPARE_IC>
0xffff5829fc88   488  sub csp, jssp, #0x10 (16)
0xffff5829fc8c   492  str x17, [jssp, #-8]!
0xffff5829fc90   496  add fp, jssp, #0x10 (16)
0xffff5829fc94   500  sub csp, jssp, #0x18 (24)
0xffff5829fc98   504  stp lr, x0, [jssp, #-24]!
0xffff5829fc9c   508  str x1, [jssp, #16]
0xffff5829fca0   512  movz x10, #0x2f00000000
0xffff5829fca4   516  sub csp, jssp, #0x18 (24)
0xffff5829fca8   520  stp x10, x0, [jssp, #-24]!
0xffff5829fcac   524  str x1, [jssp, #16]
0xffff5829fcb0   528  movz x0, #0x3
0xffff5829fcb4   532  ldr x1, pc+76 (addr 0x0000ffff5829fd00)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5829fcb8   536  ldr x16, pc+80 (addr 0x0000ffff5829fd08)    ;; code: STUB, CEntryStub, minor: 4
0xffff5829fcbc   540  blr x16
0xffff5829fcc0   544  add x11, x0, #0x5f (95)
0xffff5829fcc4   548  ldr x1, [jssp, #16]
0xffff5829fcc8   552  ldp lr, x0, [jssp], #24
0xffff5829fccc   556  mov jssp, fp
0xffff5829fcd0   560  ldp fp, lr, [jssp], #16
0xffff5829fcd4   564  br x11
0xffff5829fcd8   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5829fcdc   572  d63f03e0       constant
0xffff5829fce0   576  5829fa41       constant
0xffff5829fce4   580  0000ffff       constant
0xffff5829fce8   584  00e50928       constant
0xffff5829fcec   588  00000000       constant
0xffff5829fcf0   592  58206060       constant
0xffff5829fcf4   596  0000ffff       constant
0xffff5829fcf8   600  5829fa41       constant
0xffff5829fcfc   604  0000ffff       constant
0xffff5829fd00   608  00c8a980       constant
0xffff5829fd04   612  00000000       constant
0xffff5829fd08   616  58206060       constant
0xffff5829fd0c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff5829fc34  embedded object  (0xffff5829fa41 <Code: COMPARE_IC>)
0xffff5829fc50  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff5829fc54  code target (STUB)  (0xffff58206060)
0xffff5829fc84  embedded object  (0xffff5829fa41 <Code: COMPARE_IC>)
0xffff5829fcb4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5829fcb8  code target (STUB)  (0xffff58206060)
0xffff5829fcd8  constant pool (size 56)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 232)
0xffff5829fd80     0  tbnz w0, #0, #+0x58 (addr 0xffff5829fdd8)
0xffff5829fd84     4  scvtf d0, x0, #32
0xffff5829fd88     8  scvtf d1, x1, #32
0xffff5829fd8c    12  tbz w0, #0, #+0x18 (addr 0xffff5829fda4)
0xffff5829fd90    16  ldur x16, [x0, #-1]
0xffff5829fd94    20  ldr x17, [x26, #120]
0xffff5829fd98    24  cmp x16, x17
0xffff5829fd9c    28  b.ne #+0x3c (addr 0xffff5829fdd8)
0xffff5829fda0    32  ldur d0, [x0, #7]
0xffff5829fda4    36  tbz w1, #0, #+0x18 (addr 0xffff5829fdbc)
0xffff5829fda8    40  ldur x16, [x1, #-1]
0xffff5829fdac    44  ldr x17, [x26, #120]
0xffff5829fdb0    48  cmp x16, x17
0xffff5829fdb4    52  b.ne #+0x24 (addr 0xffff5829fdd8)
0xffff5829fdb8    56  ldur d1, [x1, #7]
0xffff5829fdbc    60  fcmp d1, d0
0xffff5829fdc0    64  b.vs #+0x10 (addr 0xffff5829fdd0)
0xffff5829fdc4    68  cset x0, gt
0xffff5829fdc8    72  csinv x0, x0, xzr, ge
0xffff5829fdcc    76  ret
0xffff5829fdd0    80  ldr x16, pc+120 (addr 0x0000ffff5829fe48)    ;; code: COMPARE_IC, GENERIC
0xffff5829fdd4    84  br x16
0xffff5829fdd8    88  movz x16, #0xc00000000
0xffff5829fddc    92  sub csp, jssp, #0x10 (16)
0xffff5829fde0    96  stp fp, lr, [jssp, #-16]!
0xffff5829fde4   100  sub csp, jssp, #0x10 (16)
0xffff5829fde8   104  str x16, [jssp, #-8]!
0xffff5829fdec   108  ldr x17, pc+100 (addr 0x0000ffff5829fe50)    ;; object: 0xffff5829fd21 <Code: COMPARE_IC>
0xffff5829fdf0   112  sub csp, jssp, #0x10 (16)
0xffff5829fdf4   116  str x17, [jssp, #-8]!
0xffff5829fdf8   120  add fp, jssp, #0x10 (16)
0xffff5829fdfc   124  sub csp, jssp, #0x18 (24)
0xffff5829fe00   128  stp lr, x0, [jssp, #-24]!
0xffff5829fe04   132  str x1, [jssp, #16]
0xffff5829fe08   136  movz x10, #0x2f00000000
0xffff5829fe0c   140  sub csp, jssp, #0x18 (24)
0xffff5829fe10   144  stp x10, x0, [jssp, #-24]!
0xffff5829fe14   148  str x1, [jssp, #16]
0xffff5829fe18   152  movz x0, #0x3
0xffff5829fe1c   156  ldr x1, pc+60 (addr 0x0000ffff5829fe58)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5829fe20   160  ldr x16, pc+64 (addr 0x0000ffff5829fe60)    ;; code: STUB, CEntryStub, minor: 4
0xffff5829fe24   164  blr x16
0xffff5829fe28   168  add x11, x0, #0x5f (95)
0xffff5829fe2c   172  ldr x1, [jssp, #16]
0xffff5829fe30   176  ldp lr, x0, [jssp], #24
0xffff5829fe34   180  mov jssp, fp
0xffff5829fe38   184  ldp fp, lr, [jssp], #16
0xffff5829fe3c   188  br x11
0xffff5829fe40   192  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff5829fe44   196  d63f03e0       constant
0xffff5829fe48   200  5829faa0       constant
0xffff5829fe4c   204  0000ffff       constant
0xffff5829fe50   208  5829fd21       constant
0xffff5829fe54   212  0000ffff       constant
0xffff5829fe58   216  00c8a980       constant
0xffff5829fe5c   220  00000000       constant
0xffff5829fe60   224  58206060       constant
0xffff5829fe64   228  0000ffff       constant


RelocInfo (size = 13)
0xffff5829fdd0  code target (COMPARE_IC)  (0xffff5829faa0)
0xffff5829fdec  embedded object  (0xffff5829fd21 <Code: COMPARE_IC>)
0xffff5829fe1c  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5829fe20  code target (STUB)  (0xffff58206060)
0xffff5829fe40  constant pool (size 40)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ToIntegerStub
compiler = turbofan
Instructions (size = 386)
0xffff582a28a0     0  and x1, x0, #0x1
0xffff582a28a4     4  cmp x1, #0x0 (0)
0xffff582a28a8     8  b.eq #+0x90 (addr 0xffff582a2938)
0xffff582a28ac    12  ldur x1, [x0, #-1]
0xffff582a28b0    16  ldr x2, [x26, #120]
0xffff582a28b4    20  cmp x1, x2
0xffff582a28b8    24  b.ne #+0x84 (addr 0xffff582a293c)
0xffff582a28bc    28  ldur d0, [x0, #7]
0xffff582a28c0    32  fcmp d0, d0
0xffff582a28c4    36  b.ne #+0xb4 (addr 0xffff582a2978)
0xffff582a28c8    40  frintz d0, d0
0xffff582a28cc    44  fcvtzs w0, d0
0xffff582a28d0    48  scvtf d1, w0
0xffff582a28d4    52  fcmp d0, d1
0xffff582a28d8    56  b.ne #+0x24 (addr 0xffff582a28fc)
0xffff582a28dc    60  fcmp d0, #0.0
0xffff582a28e0    64  b.ne #+0x14 (addr 0xffff582a28f4)
0xffff582a28e4    68  fmov x1, d0
0xffff582a28e8    72  lsr x1, x1, #32
0xffff582a28ec    76  cmp w1, #0x0 (0)
0xffff582a28f0    80  b.lt #+0xc (addr 0xffff582a28fc)
0xffff582a28f4    84  lsl x0, x0, #32
0xffff582a28f8    88  b #+0x40 (addr 0xffff582a2938)
0xffff582a28fc    92  movz x0, #0x92c0
0xffff582a2900    96  movk x0, #0x16e7, lsl #16
0xffff582a2904   100  ldr x1, [x0]
0xffff582a2908   104  movz x2, #0x92c8
0xffff582a290c   108  movk x2, #0x16e7, lsl #16
0xffff582a2910   112  ldr x2, [x2]
0xffff582a2914   116  sub x2, x2, x1
0xffff582a2918   120  cmp x2, #0x10 (16)
0xffff582a291c   124  b.lt #+0x64 (addr 0xffff582a2980)
0xffff582a2920   128  add x2, x1, #0x10 (16)
0xffff582a2924   132  str x2, [x0]
0xffff582a2928   136  add x0, x1, #0x1 (1)
0xffff582a292c   140  ldr x1, [x26, #120]
0xffff582a2930   144  stur x1, [x0, #-1]
0xffff582a2934   148  stur d0, [x0, #7]
0xffff582a2938   152  ret
0xffff582a293c   156  movz x16, #0xa00000000
0xffff582a2940   160  sub csp, jssp, #0x10 (16)
0xffff582a2944   164  stp fp, lr, [jssp, #-16]!
0xffff582a2948   168  mov fp, jssp
0xffff582a294c   172  sub csp, jssp, #0x20 (32)
0xffff582a2950   176  sub jssp, jssp, #0x20 (32)
0xffff582a2954   180  stur x16, [fp, #-8]
0xffff582a2958   184  mov x1, cp
0xffff582a295c   188  str cp, [jssp, #8]
0xffff582a2960   192  ldr x16, pc+144 (addr 0x0000ffff582a29f0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff582a2964   196  blr x16
0xffff582a2968   200  ldr cp, [jssp, #8]
0xffff582a296c   204  mov jssp, fp
0xffff582a2970   208  ldp fp, lr, [jssp], #16
0xffff582a2974   212  b #-0xd4 (addr 0xffff582a28a0)
0xffff582a2978   216  movz x0, #0x0
0xffff582a297c   220  ret
0xffff582a2980   224  movz x16, #0xa00000000
0xffff582a2984   228  sub csp, jssp, #0x10 (16)
0xffff582a2988   232  stp fp, lr, [jssp, #-16]!
0xffff582a298c   236  mov fp, jssp
0xffff582a2990   240  sub csp, jssp, #0x20 (32)
0xffff582a2994   244  sub jssp, jssp, #0x20 (32)
0xffff582a2998   248  stur x16, [fp, #-8]
0xffff582a299c   252  movz x0, #0x0
0xffff582a29a0   256  lsl x0, x0, #32
0xffff582a29a4   260  movz x1, #0x10
0xffff582a29a8   264  lsl x1, x1, #32
0xffff582a29ac   268  sub csp, jssp, #0x10 (16)
0xffff582a29b0   272  sub jssp, jssp, #0x10 (16)
0xffff582a29b4   276  str x1, [jssp, #8]
0xffff582a29b8   280  str x0, [jssp]
0xffff582a29bc   284  str d0, [jssp, #32]
0xffff582a29c0   288  movz x1, #0x5b88
0xffff582a29c4   292  movk x1, #0xe2, lsl #16
0xffff582a29c8   296  movz x0, #0x2
0xffff582a29cc   300  movz cp, #0x0
0xffff582a29d0   304  ldr x16, pc+40 (addr 0x0000ffff582a29f8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582a29d4   308  blr x16
0xffff582a29d8   312  ldr d0, [jssp, #16]
0xffff582a29dc   316  mov jssp, fp
0xffff582a29e0   320  ldp fp, lr, [jssp], #16
0xffff582a29e4   324  b #-0xb8 (addr 0xffff582a292c)
0xffff582a29e8   328  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582a29ec   332  d63f03e0       constant
0xffff582a29f0   336  58229d80       constant
0xffff582a29f4   340  0000ffff       constant
0xffff582a29f8   344  58206060       constant
0xffff582a29fc   348  0000ffff       constant


Safepoints (size = 34)
0xffff582a2968   200  010000 (sp -> fp)  <none>
0xffff582a29d8   312  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff582a2960  code target (STUB)  (0xffff58229d80)
0xffff582a29d0  code target (STUB)  (0xffff58206060)
0xffff582a29e8  constant pool (size 24)

--- End code ---
kind = STUB
major_key = ToIntegerStub
name = ToIntegerStub
compiler = turbofan
Instructions (size = 386)
0xffff582a28a0     0  and x1, x0, #0x1
0xffff582a28a4     4  cmp x1, #0x0 (0)
0xffff582a28a8     8  b.eq #+0x90 (addr 0xffff582a2938)
0xffff582a28ac    12  ldur x1, [x0, #-1]
0xffff582a28b0    16  ldr x2, [x26, #120]
0xffff582a28b4    20  cmp x1, x2
0xffff582a28b8    24  b.ne #+0x84 (addr 0xffff582a293c)
0xffff582a28bc    28  ldur d0, [x0, #7]
0xffff582a28c0    32  fcmp d0, d0
0xffff582a28c4    36  b.ne #+0xb4 (addr 0xffff582a2978)
0xffff582a28c8    40  frintz d0, d0
0xffff582a28cc    44  fcvtzs w0, d0
0xffff582a28d0    48  scvtf d1, w0
0xffff582a28d4    52  fcmp d0, d1
0xffff582a28d8    56  b.ne #+0x24 (addr 0xffff582a28fc)
0xffff582a28dc    60  fcmp d0, #0.0
0xffff582a28e0    64  b.ne #+0x14 (addr 0xffff582a28f4)
0xffff582a28e4    68  fmov x1, d0
0xffff582a28e8    72  lsr x1, x1, #32
0xffff582a28ec    76  cmp w1, #0x0 (0)
0xffff582a28f0    80  b.lt #+0xc (addr 0xffff582a28fc)
0xffff582a28f4    84  lsl x0, x0, #32
0xffff582a28f8    88  b #+0x40 (addr 0xffff582a2938)
0xffff582a28fc    92  movz x0, #0x92c0
0xffff582a2900    96  movk x0, #0x16e7, lsl #16
0xffff582a2904   100  ldr x1, [x0]
0xffff582a2908   104  movz x2, #0x92c8
0xffff582a290c   108  movk x2, #0x16e7, lsl #16
0xffff582a2910   112  ldr x2, [x2]
0xffff582a2914   116  sub x2, x2, x1
0xffff582a2918   120  cmp x2, #0x10 (16)
0xffff582a291c   124  b.lt #+0x64 (addr 0xffff582a2980)
0xffff582a2920   128  add x2, x1, #0x10 (16)
0xffff582a2924   132  str x2, [x0]
0xffff582a2928   136  add x0, x1, #0x1 (1)
0xffff582a292c   140  ldr x1, [x26, #120]
0xffff582a2930   144  stur x1, [x0, #-1]
0xffff582a2934   148  stur d0, [x0, #7]
0xffff582a2938   152  ret
0xffff582a293c   156  movz x16, #0xa00000000
0xffff582a2940   160  sub csp, jssp, #0x10 (16)
0xffff582a2944   164  stp fp, lr, [jssp, #-16]!
0xffff582a2948   168  mov fp, jssp
0xffff582a294c   172  sub csp, jssp, #0x20 (32)
0xffff582a2950   176  sub jssp, jssp, #0x20 (32)
0xffff582a2954   180  stur x16, [fp, #-8]
0xffff582a2958   184  mov x1, cp
0xffff582a295c   188  str cp, [jssp, #8]
0xffff582a2960   192  ldr x16, pc+144 (addr 0x0000ffff582a29f0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff582a2964   196  blr x16
0xffff582a2968   200  ldr cp, [jssp, #8]
0xffff582a296c   204  mov jssp, fp
0xffff582a2970   208  ldp fp, lr, [jssp], #16
0xffff582a2974   212  b #-0xd4 (addr 0xffff582a28a0)
0xffff582a2978   216  movz x0, #0x0
0xffff582a297c   220  ret
0xffff582a2980   224  movz x16, #0xa00000000
0xffff582a2984   228  sub csp, jssp, #0x10 (16)
0xffff582a2988   232  stp fp, lr, [jssp, #-16]!
0xffff582a298c   236  mov fp, jssp
0xffff582a2990   240  sub csp, jssp, #0x20 (32)
0xffff582a2994   244  sub jssp, jssp, #0x20 (32)
0xffff582a2998   248  stur x16, [fp, #-8]
0xffff582a299c   252  movz x0, #0x0
0xffff582a29a0   256  lsl x0, x0, #32
0xffff582a29a4   260  movz x1, #0x10
0xffff582a29a8   264  lsl x1, x1, #32
0xffff582a29ac   268  sub csp, jssp, #0x10 (16)
0xffff582a29b0   272  sub jssp, jssp, #0x10 (16)
0xffff582a29b4   276  str x1, [jssp, #8]
0xffff582a29b8   280  str x0, [jssp]
0xffff582a29bc   284  str d0, [jssp, #32]
0xffff582a29c0   288  movz x1, #0x5b88
0xffff582a29c4   292  movk x1, #0xe2, lsl #16
0xffff582a29c8   296  movz x0, #0x2
0xffff582a29cc   300  movz cp, #0x0
0xffff582a29d0   304  ldr x16, pc+40 (addr 0x0000ffff582a29f8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582a29d4   308  blr x16
0xffff582a29d8   312  ldr d0, [jssp, #16]
0xffff582a29dc   316  mov jssp, fp
0xffff582a29e0   320  ldp fp, lr, [jssp], #16
0xffff582a29e4   324  b #-0xb8 (addr 0xffff582a292c)
0xffff582a29e8   328  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582a29ec   332  d63f03e0       constant
0xffff582a29f0   336  58229d80       constant
0xffff582a29f4   340  0000ffff       constant
0xffff582a29f8   344  58206060       constant
0xffff582a29fc   348  0000ffff       constant


Safepoints (size = 34)
0xffff582a2968   200  010000 (sp -> fp)  <none>
0xffff582a29d8   312  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff582a2960  code target (STUB)  (0xffff58229d80)
0xffff582a29d0  code target (STUB)  (0xffff58206060)
0xffff582a29e8  constant pool (size 24)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = RECEIVER*RECEIVER -> KNOWN_RECEIVER
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 192)
0xffff582a3fe0     0  and x16, x0, x1
0xffff582a3fe4     4  tbz w16, #0, #+0x2c (addr 0xffff582a4010)
0xffff582a3fe8     8  ldr x12, pc+152 (addr 0x0000ffff582a4080)    ;; object: 0x39cf2f21 WeakCell for 0x32b06671 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582a3fec    12  ldur x12, [x12, #7]
0xffff582a3ff0    16  ldur x10, [x0, #-1]
0xffff582a3ff4    20  ldur x11, [x1, #-1]
0xffff582a3ff8    24  cmp x10, x12
0xffff582a3ffc    28  b.ne #+0x14 (addr 0xffff582a4010)
0xffff582a4000    32  cmp x11, x12
0xffff582a4004    36  b.ne #+0xc (addr 0xffff582a4010)
0xffff582a4008    40  sub x0, x0, x1
0xffff582a400c    44  ret
0xffff582a4010    48  movz x16, #0xc00000000
0xffff582a4014    52  sub csp, jssp, #0x10 (16)
0xffff582a4018    56  stp fp, lr, [jssp, #-16]!
0xffff582a401c    60  sub csp, jssp, #0x10 (16)
0xffff582a4020    64  str x16, [jssp, #-8]!
0xffff582a4024    68  ldr x17, pc+100 (addr 0x0000ffff582a4088)    ;; object: 0xffff582a3f81 <Code: COMPARE_IC>
0xffff582a4028    72  sub csp, jssp, #0x10 (16)
0xffff582a402c    76  str x17, [jssp, #-8]!
0xffff582a4030    80  add fp, jssp, #0x10 (16)
0xffff582a4034    84  sub csp, jssp, #0x18 (24)
0xffff582a4038    88  stp lr, x0, [jssp, #-24]!
0xffff582a403c    92  str x1, [jssp, #16]
0xffff582a4040    96  movz x10, #0x2f00000000
0xffff582a4044   100  sub csp, jssp, #0x18 (24)
0xffff582a4048   104  stp x10, x0, [jssp, #-24]!
0xffff582a404c   108  str x1, [jssp, #16]
0xffff582a4050   112  movz x0, #0x3
0xffff582a4054   116  ldr x1, pc+60 (addr 0x0000ffff582a4090)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582a4058   120  ldr x16, pc+64 (addr 0x0000ffff582a4098)    ;; code: STUB, CEntryStub, minor: 4
0xffff582a405c   124  blr x16
0xffff582a4060   128  add x11, x0, #0x5f (95)
0xffff582a4064   132  ldr x1, [jssp, #16]
0xffff582a4068   136  ldp lr, x0, [jssp], #24
0xffff582a406c   140  mov jssp, fp
0xffff582a4070   144  ldp fp, lr, [jssp], #16
0xffff582a4074   148  br x11
0xffff582a4078   152  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582a407c   156  d63f03e0       constant
0xffff582a4080   160  39cf2f21       constant
0xffff582a4084   164  00000000       constant
0xffff582a4088   168  582a3f81       constant
0xffff582a408c   172  0000ffff       constant
0xffff582a4090   176  00c8a980       constant
0xffff582a4094   180  00000000       constant
0xffff582a4098   184  58206060       constant
0xffff582a409c   188  0000ffff       constant


RelocInfo (size = 11)
0xffff582a3fe8  embedded object  (0x39cf2f21 WeakCell for 0x32b06671 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582a4024  embedded object  (0xffff582a3f81 <Code: COMPARE_IC>)
0xffff582a4054  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582a4058  code target (STUB)  (0xffff58206060)
0xffff582a4078  constant pool (size 40)


kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 120)
0xffff582a4900     0  sub csp, jssp, #0x8 (8)
0xffff582a4904     4  str x3, [jssp, #-8]!
0xffff582a4908     8  sub csp, jssp, #0x8 (8)
0xffff582a490c    12  str x0, [jssp, #-8]!
0xffff582a4910    16  ldr x0, pc+72 (addr 0x0000ffff582a4958)    ;; object: 0x39ced491 Cell for 0
0xffff582a4914    20  ldur x0, [x0, #7]
0xffff582a4918    24  cmp x0, #0x0 (0)
0xffff582a491c    28  b.ne #+0x14 (addr 0xffff582a4930)
0xffff582a4920    32  ldr x3, pc+64 (addr 0x0000ffff582a4960)    ;; object: 0x39cf3289 WeakCell for 0x4f95ea99 <an Object with map 0x32b164d1>
0xffff582a4924    36  ldur x3, [x3, #7]
0xffff582a4928    40  tbz w3, #0, #+0x8 (addr 0xffff582a4930)
0xffff582a492c    44  b #+0x14 (addr 0xffff582a4940)
0xffff582a4930    48  ldr x0, [jssp], #8
0xffff582a4934    52  ldr x3, [jssp], #8
0xffff582a4938    56  ldr x16, pc+48 (addr 0x0000ffff582a4968)    ;; code: BUILTIN
0xffff582a493c    60  br x16
0xffff582a4940    64  add jssp, jssp, #0x10 (16)
0xffff582a4944    68  mov x1, x3
0xffff582a4948    72  ldr x16, pc+40 (addr 0x0000ffff582a4970)    ;; code: HANDLER, LoadFieldStub, minor: 4
0xffff582a494c    76  br x16
0xffff582a4950    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582a4954    84  d63f03e0       constant
0xffff582a4958    88  39ced491       constant
0xffff582a495c    92  00000000       constant
0xffff582a4960    96  39cf3289       constant
0xffff582a4964   100  00000000       constant
0xffff582a4968   104  582222e0       constant
0xffff582a496c   108  0000ffff       constant
0xffff582a4970   112  5826c360       constant
0xffff582a4974   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582a4910  embedded object  (0x39ced491 Cell for 0)
0xffff582a4920  embedded object  (0x39cf3289 WeakCell for 0x4f95ea99 <an Object with map 0x32b164d1>)
0xffff582a4938  code target (BUILTIN)  (0xffff582222e0)
0xffff582a4948  code target (HANDLER)  (0xffff5826c360)
0xffff582a4950  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582a49e0     0  ldur x0, [x1, #15]
0xffff582a49e4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582a49e0     0  ldur x0, [x1, #15]
0xffff582a49e4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = global
compiler = unknown
Instructions (size = 216)
0xffff582a4a60     0  sub csp, jssp, #0x8 (8)
0xffff582a4a64     4  str x3, [jssp, #-8]!
0xffff582a4a68     8  sub csp, jssp, #0x8 (8)
0xffff582a4a6c    12  str x0, [jssp, #-8]!
0xffff582a4a70    16  ldr x0, pc+160 (addr 0x0000ffff582a4b10)    ;; object: 0x39ced491 Cell for 0
0xffff582a4a74    20  ldur x0, [x0, #7]
0xffff582a4a78    24  cmp x0, #0x0 (0)
0xffff582a4a7c    28  b.ne #+0x14 (addr 0xffff582a4a90)
0xffff582a4a80    32  ldr x3, pc+152 (addr 0x0000ffff582a4b18)    ;; object: 0x39cf32e9 WeakCell for 0x4f95ea99 <an Object with map 0x32b164d1>
0xffff582a4a84    36  ldur x3, [x3, #7]
0xffff582a4a88    40  tbz w3, #0, #+0x8 (addr 0xffff582a4a90)
0xffff582a4a8c    44  b #+0x14 (addr 0xffff582a4aa0)
0xffff582a4a90    48  ldr x0, [jssp], #8
0xffff582a4a94    52  ldr x3, [jssp], #8
0xffff582a4a98    56  ldr x16, pc+136 (addr 0x0000ffff582a4b20)    ;; code: BUILTIN
0xffff582a4a9c    60  br x16
0xffff582a4aa0    64  add jssp, jssp, #0x10 (16)
0xffff582a4aa4    68  movz x16, #0xc00000000
0xffff582a4aa8    72  sub csp, jssp, #0x10 (16)
0xffff582a4aac    76  stp fp, lr, [jssp, #-16]!
0xffff582a4ab0    80  sub csp, jssp, #0x10 (16)
0xffff582a4ab4    84  str x16, [jssp, #-8]!
0xffff582a4ab8    88  ldr x17, pc+112 (addr 0x0000ffff582a4b28)    ;; object: 0xffff582a4a01 <Code: HANDLER>
0xffff582a4abc    92  sub csp, jssp, #0x10 (16)
0xffff582a4ac0    96  str x17, [jssp, #-8]!
0xffff582a4ac4   100  add fp, jssp, #0x10 (16)
0xffff582a4ac8   104  sub csp, jssp, #0x8 (8)
0xffff582a4acc   108  str cp, [jssp, #-8]!
0xffff582a4ad0   112  sub csp, jssp, #0x8 (8)
0xffff582a4ad4   116  str x1, [jssp, #-8]!
0xffff582a4ad8   120  ldur x1, [x3, #-1]
0xffff582a4adc   124  ldur x1, [x1, #47]
0xffff582a4ae0   128  movz x16, #0x11f
0xffff582a4ae4   132  ldr x1, [x1, x16]
0xffff582a4ae8   136  ldur x1, [x1, #7]
0xffff582a4aec   140  movz x0, #0x0
0xffff582a4af0   144  ldr x16, pc+64 (addr 0x0000ffff582a4b30)    ;; code: BUILTIN
0xffff582a4af4   148  blr x16
0xffff582a4af8   152  ldr cp, [jssp], #8
0xffff582a4afc   156  mov jssp, fp
0xffff582a4b00   160  ldp fp, lr, [jssp], #16
0xffff582a4b04   164  ret
0xffff582a4b08   168  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff582a4b0c   172  d63f03e0       constant
0xffff582a4b10   176  39ced491       constant
0xffff582a4b14   180  00000000       constant
0xffff582a4b18   184  39cf32e9       constant
0xffff582a4b1c   188  00000000       constant
0xffff582a4b20   192  582222e0       constant
0xffff582a4b24   196  0000ffff       constant
0xffff582a4b28   200  582a4a01       constant
0xffff582a4b2c   204  0000ffff       constant
0xffff582a4b30   208  5821e600       constant
0xffff582a4b34   212  0000ffff       constant


RelocInfo (size = 11)
0xffff582a4a70  embedded object  (0x39ced491 Cell for 0)
0xffff582a4a80  embedded object  (0x39cf32e9 WeakCell for 0x4f95ea99 <an Object with map 0x32b164d1>)
0xffff582a4a98  code target (BUILTIN)  (0xffff582222e0)
0xffff582a4ab8  embedded object  (0xffff582a4a01 <Code: HANDLER>)
0xffff582a4af0  code target (BUILTIN)  (0xffff5821e600)
0xffff582a4b08  constant pool (size 48)

kind = HANDLER
major_key = <NoCache>Stub
name = unicode
compiler = unknown
Instructions (size = 216)
0xffff582a4ba0     0  sub csp, jssp, #0x8 (8)
0xffff582a4ba4     4  str x3, [jssp, #-8]!
0xffff582a4ba8     8  sub csp, jssp, #0x8 (8)
0xffff582a4bac    12  str x0, [jssp, #-8]!
0xffff582a4bb0    16  ldr x0, pc+160 (addr 0x0000ffff582a4c50)    ;; object: 0x39ced491 Cell for 0
0xffff582a4bb4    20  ldur x0, [x0, #7]
0xffff582a4bb8    24  cmp x0, #0x0 (0)
0xffff582a4bbc    28  b.ne #+0x14 (addr 0xffff582a4bd0)
0xffff582a4bc0    32  ldr x3, pc+152 (addr 0x0000ffff582a4c58)    ;; object: 0x39cf3321 WeakCell for 0x4f95ea99 <an Object with map 0x32b164d1>
0xffff582a4bc4    36  ldur x3, [x3, #7]
0xffff582a4bc8    40  tbz w3, #0, #+0x8 (addr 0xffff582a4bd0)
0xffff582a4bcc    44  b #+0x14 (addr 0xffff582a4be0)
0xffff582a4bd0    48  ldr x0, [jssp], #8
0xffff582a4bd4    52  ldr x3, [jssp], #8
0xffff582a4bd8    56  ldr x16, pc+136 (addr 0x0000ffff582a4c60)    ;; code: BUILTIN
0xffff582a4bdc    60  br x16
0xffff582a4be0    64  add jssp, jssp, #0x10 (16)
0xffff582a4be4    68  movz x16, #0xc00000000
0xffff582a4be8    72  sub csp, jssp, #0x10 (16)
0xffff582a4bec    76  stp fp, lr, [jssp, #-16]!
0xffff582a4bf0    80  sub csp, jssp, #0x10 (16)
0xffff582a4bf4    84  str x16, [jssp, #-8]!
0xffff582a4bf8    88  ldr x17, pc+112 (addr 0x0000ffff582a4c68)    ;; object: 0xffff582a4b41 <Code: HANDLER>
0xffff582a4bfc    92  sub csp, jssp, #0x10 (16)
0xffff582a4c00    96  str x17, [jssp, #-8]!
0xffff582a4c04   100  add fp, jssp, #0x10 (16)
0xffff582a4c08   104  sub csp, jssp, #0x8 (8)
0xffff582a4c0c   108  str cp, [jssp, #-8]!
0xffff582a4c10   112  sub csp, jssp, #0x8 (8)
0xffff582a4c14   116  str x1, [jssp, #-8]!
0xffff582a4c18   120  ldur x1, [x3, #-1]
0xffff582a4c1c   124  ldur x1, [x1, #47]
0xffff582a4c20   128  movz x16, #0x197
0xffff582a4c24   132  ldr x1, [x1, x16]
0xffff582a4c28   136  ldur x1, [x1, #7]
0xffff582a4c2c   140  movz x0, #0x0
0xffff582a4c30   144  ldr x16, pc+64 (addr 0x0000ffff582a4c70)    ;; code: BUILTIN
0xffff582a4c34   148  blr x16
0xffff582a4c38   152  ldr cp, [jssp], #8
0xffff582a4c3c   156  mov jssp, fp
0xffff582a4c40   160  ldp fp, lr, [jssp], #16
0xffff582a4c44   164  ret
0xffff582a4c48   168  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff582a4c4c   172  d63f03e0       constant
0xffff582a4c50   176  39ced491       constant
0xffff582a4c54   180  00000000       constant
0xffff582a4c58   184  39cf3321       constant
0xffff582a4c5c   188  00000000       constant
0xffff582a4c60   192  582222e0       constant
0xffff582a4c64   196  0000ffff       constant
0xffff582a4c68   200  582a4b41       constant
0xffff582a4c6c   204  0000ffff       constant
0xffff582a4c70   208  5821e600       constant
0xffff582a4c74   212  0000ffff       constant


RelocInfo (size = 11)
0xffff582a4bb0  embedded object  (0x39ced491 Cell for 0)
0xffff582a4bc0  embedded object  (0x39cf3321 WeakCell for 0x4f95ea99 <an Object with map 0x32b164d1>)
0xffff582a4bd8  code target (BUILTIN)  (0xffff582222e0)
0xffff582a4bf8  embedded object  (0xffff582a4b41 <Code: HANDLER>)
0xffff582a4c30  code target (BUILTIN)  (0xffff5821e600)
0xffff582a4c48  constant pool (size 48)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = RECEIVER*INTERNALIZED_STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff582a5900     0  orr x16, x1, x0
0xffff582a5904     4  tbnz w16, #0, #+0x10 (addr 0xffff582a5914)
0xffff582a5908     8  asr x1, x1, #32
0xffff582a590c    12  sub x0, x1, x0, asr #32
0xffff582a5910    16  ret
0xffff582a5914    20  cmp x0, x1
0xffff582a5918    24  b.ne #+0x30 (addr 0xffff582a5948)
0xffff582a591c    28  ldur x16, [x0, #-1]
0xffff582a5920    32  ldr x17, [x26, #120]
0xffff582a5924    36  cmp x16, x17
0xffff582a5928    40  b.eq #+0xc (addr 0xffff582a5934)
0xffff582a592c    44  movz x0, #0x0
0xffff582a5930    48  ret
0xffff582a5934    52  ldur d0, [x0, #7]
0xffff582a5938    56  fcmp d0, d0
0xffff582a593c    60  b.vc #-0x10 (addr 0xffff582a592c)
0xffff582a5940    64  movn x0, #0x0
0xffff582a5944    68  ret
0xffff582a5948    72  and x16, x1, x0
0xffff582a594c    76  tbnz w16, #0, #+0x64 (addr 0xffff582a59b0)
0xffff582a5950    80  tbz w0, #0, #+0x24 (addr 0xffff582a5974)
0xffff582a5954    84  ldur x16, [x0, #-1]
0xffff582a5958    88  ldr x17, [x26, #120]
0xffff582a595c    92  cmp x16, x17
0xffff582a5960    96  b.eq #+0x8 (addr 0xffff582a5968)
0xffff582a5964   100  ret
0xffff582a5968   104  ldur d0, [x0, #7]
0xffff582a596c   108  scvtf d1, x1, #32
0xffff582a5970   112  b #+0x24 (addr 0xffff582a5994)
0xffff582a5974   116  ldur x16, [x1, #-1]
0xffff582a5978   120  ldr x17, [x26, #120]
0xffff582a597c   124  cmp x16, x17
0xffff582a5980   128  b.eq #+0xc (addr 0xffff582a598c)
0xffff582a5984   132  movz x0, #0x1
0xffff582a5988   136  ret
0xffff582a598c   140  ldur d1, [x1, #7]
0xffff582a5990   144  scvtf d0, x0, #32
0xffff582a5994   148  fcmp d1, d0
0xffff582a5998   152  b.vs #+0x10 (addr 0xffff582a59a8)
0xffff582a599c   156  cset x0, gt
0xffff582a59a0   160  csinv x0, x0, xzr, ge
0xffff582a59a4   164  ret
0xffff582a59a8   168  movn x0, #0x0
0xffff582a59ac   172  ret
0xffff582a59b0   176  ldur x10, [x0, #-1]
0xffff582a59b4   180  ldur x12, [x1, #-1]
0xffff582a59b8   184  ldrb w11, [x10, #11]
0xffff582a59bc   188  ldrb w13, [x12, #11]
0xffff582a59c0   192  cmp x11, #0xb1 (177)
0xffff582a59c4   196  b.lt #+0x8 (addr 0xffff582a59cc)
0xffff582a59c8   200  ret
0xffff582a59cc   204  cmp x11, #0x83 (131)
0xffff582a59d0   208  movz x16, #0x83
0xffff582a59d4   212  ccmp x13, x16, #nZcv, ne
0xffff582a59d8   216  movz x16, #0xb1
0xffff582a59dc   220  ccmp x13, x16, #NzcV, ne
0xffff582a59e0   224  b.ge #-0x18 (addr 0xffff582a59c8)
0xffff582a59e4   228  orr x14, x13, x11
0xffff582a59e8   232  tst x14, #0xc0
0xffff582a59ec   236  b.eq #-0x24 (addr 0xffff582a59c8)
0xffff582a59f0   240  cmp x11, #0x81 (129)
0xffff582a59f4   244  b.ne #+0x18 (addr 0xffff582a5a0c)
0xffff582a59f8   248  cmp x12, x10
0xffff582a59fc   252  b.ne #+0x10 (addr 0xffff582a5a0c)
0xffff582a5a00   256  ldur d1, [x1, #7]
0xffff582a5a04   260  ldur d0, [x0, #7]
0xffff582a5a08   264  b #-0x74 (addr 0xffff582a5994)
0xffff582a5a0c   268  movz x16, #0x87
0xffff582a5a10   272  and x14, x13, x16
0xffff582a5a14   276  movz x16, #0x87
0xffff582a5a18   280  and x15, x11, x16
0xffff582a5a1c   284  cmp x14, #0x4 (4)
0xffff582a5a20   288  ccmp x15, #4, #nzcv, eq
0xffff582a5a24   292  b.ne #+0x5c (addr 0xffff582a5a80)
0xffff582a5a28   296  ldur x10, [x1, #15]
0xffff582a5a2c   300  ldur x11, [x0, #15]
0xffff582a5a30   304  cmp x10, x11
0xffff582a5a34   308  b.eq #+0xc (addr 0xffff582a5a40)
0xffff582a5a38   312  movz x0, #0x100000000
0xffff582a5a3c   316  ret
0xffff582a5a40   320  cbnz x10, #+0xc (addr 0xffff582a5a4c)
0xffff582a5a44   324  movz x0, #0x0
0xffff582a5a48   328  ret
0xffff582a5a4c   332  asr x10, x10, #32
0xffff582a5a50   336  add x11, x10, #0x17 (23)
0xffff582a5a54   340  add x1, x1, x11
0xffff582a5a58   344  add x0, x0, x11
0xffff582a5a5c   348  neg x10, x10
0xffff582a5a60   352  ldrb w11, [x1, x10]
0xffff582a5a64   356  ldrb w12, [x0, x10]
0xffff582a5a68   360  cmp x11, x12
0xffff582a5a6c   364  b.ne #-0x34 (addr 0xffff582a5a38)
0xffff582a5a70   368  add x10, x10, #0x1 (1)
0xffff582a5a74   372  cbnz x10, #-0x14 (addr 0xffff582a5a60)
0xffff582a5a78   376  movz x0, #0x0
0xffff582a5a7c   380  ret
0xffff582a5a80   384  movz x16, #0xc00000000
0xffff582a5a84   388  sub csp, jssp, #0x10 (16)
0xffff582a5a88   392  stp fp, lr, [jssp, #-16]!
0xffff582a5a8c   396  sub csp, jssp, #0x10 (16)
0xffff582a5a90   400  str x16, [jssp, #-8]!
0xffff582a5a94   404  ldr x17, pc+172 (addr 0x0000ffff582a5b40)    ;; object: 0xffff582a58a1 <Code: COMPARE_IC>
0xffff582a5a98   408  sub csp, jssp, #0x10 (16)
0xffff582a5a9c   412  str x17, [jssp, #-8]!
0xffff582a5aa0   416  add fp, jssp, #0x10 (16)
0xffff582a5aa4   420  sub csp, jssp, #0x10 (16)
0xffff582a5aa8   424  stp x0, x1, [jssp, #-16]!
0xffff582a5aac   428  movz x0, #0x2
0xffff582a5ab0   432  ldr x1, pc+152 (addr 0x0000ffff582a5b48)    ;; external reference (Runtime::StrictEqual)
0xffff582a5ab4   436  ldr x16, pc+156 (addr 0x0000ffff582a5b50)    ;; code: STUB, CEntryStub, minor: 4
0xffff582a5ab8   440  blr x16
0xffff582a5abc   444  mov jssp, fp
0xffff582a5ac0   448  ldp fp, lr, [jssp], #16
0xffff582a5ac4   452  ldr x1, [x26, #64]
0xffff582a5ac8   456  sub x0, x0, x1
0xffff582a5acc   460  ret
0xffff582a5ad0   464  movz x16, #0xc00000000
0xffff582a5ad4   468  sub csp, jssp, #0x10 (16)
0xffff582a5ad8   472  stp fp, lr, [jssp, #-16]!
0xffff582a5adc   476  sub csp, jssp, #0x10 (16)
0xffff582a5ae0   480  str x16, [jssp, #-8]!
0xffff582a5ae4   484  ldr x17, pc+116 (addr 0x0000ffff582a5b58)    ;; object: 0xffff582a58a1 <Code: COMPARE_IC>
0xffff582a5ae8   488  sub csp, jssp, #0x10 (16)
0xffff582a5aec   492  str x17, [jssp, #-8]!
0xffff582a5af0   496  add fp, jssp, #0x10 (16)
0xffff582a5af4   500  sub csp, jssp, #0x18 (24)
0xffff582a5af8   504  stp lr, x0, [jssp, #-24]!
0xffff582a5afc   508  str x1, [jssp, #16]
0xffff582a5b00   512  movz x10, #0x2f00000000
0xffff582a5b04   516  sub csp, jssp, #0x18 (24)
0xffff582a5b08   520  stp x10, x0, [jssp, #-24]!
0xffff582a5b0c   524  str x1, [jssp, #16]
0xffff582a5b10   528  movz x0, #0x3
0xffff582a5b14   532  ldr x1, pc+76 (addr 0x0000ffff582a5b60)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582a5b18   536  ldr x16, pc+80 (addr 0x0000ffff582a5b68)    ;; code: STUB, CEntryStub, minor: 4
0xffff582a5b1c   540  blr x16
0xffff582a5b20   544  add x11, x0, #0x5f (95)
0xffff582a5b24   548  ldr x1, [jssp, #16]
0xffff582a5b28   552  ldp lr, x0, [jssp], #24
0xffff582a5b2c   556  mov jssp, fp
0xffff582a5b30   560  ldp fp, lr, [jssp], #16
0xffff582a5b34   564  br x11
0xffff582a5b38   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582a5b3c   572  d63f03e0       constant
0xffff582a5b40   576  582a58a1       constant
0xffff582a5b44   580  0000ffff       constant
0xffff582a5b48   584  00e50928       constant
0xffff582a5b4c   588  00000000       constant
0xffff582a5b50   592  58206060       constant
0xffff582a5b54   596  0000ffff       constant
0xffff582a5b58   600  582a58a1       constant
0xffff582a5b5c   604  0000ffff       constant
0xffff582a5b60   608  00c8a980       constant
0xffff582a5b64   612  00000000       constant
0xffff582a5b68   616  58206060       constant
0xffff582a5b6c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff582a5a94  embedded object  (0xffff582a58a1 <Code: COMPARE_IC>)
0xffff582a5ab0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff582a5ab4  code target (STUB)  (0xffff58206060)
0xffff582a5ae4  embedded object  (0xffff582a58a1 <Code: COMPARE_IC>)
0xffff582a5b14  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582a5b18  code target (STUB)  (0xffff58206060)
0xffff582a5b38  constant pool (size 56)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a5de0     0  ldur x0, [x1, #7]
0xffff582a5de4     4  ldur x0, [x0, #71]
0xffff582a5de8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a5de0     0  ldur x0, [x1, #7]
0xffff582a5de4     4  ldur x0, [x0, #71]
0xffff582a5de8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a5e60     0  ldur x0, [x1, #7]
0xffff582a5e64     4  ldur x0, [x0, #79]
0xffff582a5e68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a5e60     0  ldur x0, [x1, #7]
0xffff582a5e64     4  ldur x0, [x0, #79]
0xffff582a5e68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a5ee0     0  ldur x0, [x1, #7]
0xffff582a5ee4     4  ldur x0, [x0, #87]
0xffff582a5ee8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a5ee0     0  ldur x0, [x1, #7]
0xffff582a5ee4     4  ldur x0, [x0, #87]
0xffff582a5ee8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a5f60     0  ldur x0, [x1, #7]
0xffff582a5f64     4  ldur x0, [x0, #95]
0xffff582a5f68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a5f60     0  ldur x0, [x1, #7]
0xffff582a5f64     4  ldur x0, [x0, #95]
0xffff582a5f68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a5fe0     0  ldur x0, [x1, #7]
0xffff582a5fe4     4  ldur x0, [x0, #103]
0xffff582a5fe8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a5fe0     0  ldur x0, [x1, #7]
0xffff582a5fe4     4  ldur x0, [x0, #103]
0xffff582a5fe8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6060     0  ldur x0, [x1, #7]
0xffff582a6064     4  ldur x0, [x0, #111]
0xffff582a6068     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6060     0  ldur x0, [x1, #7]
0xffff582a6064     4  ldur x0, [x0, #111]
0xffff582a6068     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a60e0     0  ldur x0, [x1, #7]
0xffff582a60e4     4  ldur x0, [x0, #159]
0xffff582a60e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a60e0     0  ldur x0, [x1, #7]
0xffff582a60e4     4  ldur x0, [x0, #159]
0xffff582a60e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6160     0  ldur x0, [x1, #7]
0xffff582a6164     4  ldur x0, [x0, #175]
0xffff582a6168     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6160     0  ldur x0, [x1, #7]
0xffff582a6164     4  ldur x0, [x0, #175]
0xffff582a6168     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a61e0     0  ldur x0, [x1, #7]
0xffff582a61e4     4  ldur x0, [x0, #183]
0xffff582a61e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a61e0     0  ldur x0, [x1, #7]
0xffff582a61e4     4  ldur x0, [x0, #183]
0xffff582a61e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6260     0  ldur x0, [x1, #7]
0xffff582a6264     4  ldur x0, [x0, #207]
0xffff582a6268     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6260     0  ldur x0, [x1, #7]
0xffff582a6264     4  ldur x0, [x0, #207]
0xffff582a6268     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a62e0     0  ldur x0, [x1, #7]
0xffff582a62e4     4  ldur x0, [x0, #215]
0xffff582a62e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a62e0     0  ldur x0, [x1, #7]
0xffff582a62e4     4  ldur x0, [x0, #215]
0xffff582a62e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6360     0  ldur x0, [x1, #7]
0xffff582a6364     4  ldur x0, [x0, #223]
0xffff582a6368     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6360     0  ldur x0, [x1, #7]
0xffff582a6364     4  ldur x0, [x0, #223]
0xffff582a6368     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a63e0     0  ldur x0, [x1, #7]
0xffff582a63e4     4  ldur x0, [x0, #231]
0xffff582a63e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a63e0     0  ldur x0, [x1, #7]
0xffff582a63e4     4  ldur x0, [x0, #231]
0xffff582a63e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6460     0  ldur x0, [x1, #7]
0xffff582a6464     4  ldur x0, [x0, #239]
0xffff582a6468     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6460     0  ldur x0, [x1, #7]
0xffff582a6464     4  ldur x0, [x0, #239]
0xffff582a6468     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a64e0     0  ldur x0, [x1, #7]
0xffff582a64e4     4  ldur x0, [x0, #247]
0xffff582a64e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a64e0     0  ldur x0, [x1, #7]
0xffff582a64e4     4  ldur x0, [x0, #247]
0xffff582a64e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6560     0  ldur x0, [x1, #7]
0xffff582a6564     4  ldur x0, [x0, #255]
0xffff582a6568     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff582a6560     0  ldur x0, [x1, #7]
0xffff582a6564     4  ldur x0, [x0, #255]
0xffff582a6568     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582a65e0     0  ldur x0, [x1, #7]
0xffff582a65e4     4  movz x16, #0x107
0xffff582a65e8     8  ldr x0, [x0, x16]
0xffff582a65ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582a65e0     0  ldur x0, [x1, #7]
0xffff582a65e4     4  movz x16, #0x107
0xffff582a65e8     8  ldr x0, [x0, x16]
0xffff582a65ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582a6660     0  ldur x0, [x1, #7]
0xffff582a6664     4  movz x16, #0x117
0xffff582a6668     8  ldr x0, [x0, x16]
0xffff582a666c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582a6660     0  ldur x0, [x1, #7]
0xffff582a6664     4  movz x16, #0x117
0xffff582a6668     8  ldr x0, [x0, x16]
0xffff582a666c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582a66e0     0  ldur x0, [x1, #7]
0xffff582a66e4     4  movz x16, #0x14f
0xffff582a66e8     8  ldr x0, [x0, x16]
0xffff582a66ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582a66e0     0  ldur x0, [x1, #7]
0xffff582a66e4     4  movz x16, #0x14f
0xffff582a66e8     8  ldr x0, [x0, x16]
0xffff582a66ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582a6760     0  ldur x0, [x1, #7]
0xffff582a6764     4  movz x16, #0x15f
0xffff582a6768     8  ldr x0, [x0, x16]
0xffff582a676c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582a6760     0  ldur x0, [x1, #7]
0xffff582a6764     4  movz x16, #0x15f
0xffff582a6768     8  ldr x0, [x0, x16]
0xffff582a676c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582a67e0     0  ldur x0, [x1, #7]
0xffff582a67e4     4  movz x16, #0x177
0xffff582a67e8     8  ldr x0, [x0, x16]
0xffff582a67ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff582a67e0     0  ldur x0, [x1, #7]
0xffff582a67e4     4  movz x16, #0x177
0xffff582a67e8     8  ldr x0, [x0, x16]
0xffff582a67ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = Intl
compiler = unknown
Instructions (size = 120)
0xffff582a6860     0  sub csp, jssp, #0x8 (8)
0xffff582a6864     4  str x3, [jssp, #-8]!
0xffff582a6868     8  sub csp, jssp, #0x8 (8)
0xffff582a686c    12  str x0, [jssp, #-8]!
0xffff582a6870    16  ldr x0, pc+80 (addr 0x0000ffff582a68c0)    ;; object: 0x39cc5d51 Cell for 0
0xffff582a6874    20  ldur x0, [x0, #7]
0xffff582a6878    24  cmp x0, #0x0 (0)
0xffff582a687c    28  b.ne #+0x2c (addr 0xffff582a68a8)
0xffff582a6880    32  ldr x0, pc+72 (addr 0x0000ffff582a68c8)    ;; object: 0x39cf4e89 WeakCell for 0x39ca8f41 PropertyCell for 0x25f43859 <an Object with map 0x32b15031>
0xffff582a6884    36  ldur x0, [x0, #7]
0xffff582a6888    40  tbz w0, #0, #+0x20 (addr 0xffff582a68a8)
0xffff582a688c    44  ldur x0, [x0, #15]
0xffff582a6890    48  ldr x16, [x26, #88]
0xffff582a6894    52  cmp x0, x16
0xffff582a6898    56  b.eq #+0x10 (addr 0xffff582a68a8)
0xffff582a689c    60  add jssp, jssp, #0x10 (16)
0xffff582a68a0    64  ret
0xffff582a68a4    68  b #+0x14 (addr 0xffff582a68b8)
0xffff582a68a8    72  ldr x0, [jssp], #8
0xffff582a68ac    76  ldr x3, [jssp], #8
0xffff582a68b0    80  ldr x16, pc+32 (addr 0x0000ffff582a68d0)    ;; code: BUILTIN
0xffff582a68b4    84  br x16
0xffff582a68b8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582a68bc    92  d63f03e0       constant
0xffff582a68c0    96  39cc5d51       constant
0xffff582a68c4   100  00000000       constant
0xffff582a68c8   104  39cf4e89       constant
0xffff582a68cc   108  00000000       constant
0xffff582a68d0   112  582222e0       constant
0xffff582a68d4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff582a6870  embedded object  (0x39cc5d51 Cell for 0)
0xffff582a6880  embedded object  (0x39cf4e89 WeakCell for 0x39ca8f41 PropertyCell for 0x25f43859 <an Object with map 0x32b15031>)
0xffff582a68b0  code target (BUILTIN)  (0xffff582222e0)
0xffff582a68b8  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582a6940     0  tbz w0, #0, #+0x98 (addr 0xffff582a69d8)
0xffff582a6944     4  mov x2, x0
0xffff582a6948     8  ldur x4, [x1, #7]
0xffff582a694c    12  stur x2, [x4, #47]
0xffff582a6950    16  add x3, x4, #0x2f (47)
0xffff582a6954    20  and x2, x2, #0xfffffffffff00000
0xffff582a6958    24  ldr x2, [x2, #8]
0xffff582a695c    28  tbz w2, #1, #+0x24 (addr 0xffff582a6980)
0xffff582a6960    32  and x2, x4, #0xfffffffffff00000
0xffff582a6964    36  ldr x2, [x2, #8]
0xffff582a6968    40  tbz w2, #2, #+0x18 (addr 0xffff582a6980)
0xffff582a696c    44  sub csp, jssp, #0x8 (8)
0xffff582a6970    48  str lr, [jssp, #-8]!
0xffff582a6974    52  ldr x16, pc+84 (addr 0x0000ffff582a69c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582a6978    56  blr x16
0xffff582a697c    60  ldr lr, [jssp], #8
0xffff582a6980    64  stur x5, [x1, #-1]
0xffff582a6984    68  tbz w5, #0, #+0x34 (addr 0xffff582a69b8)
0xffff582a6988    72  sub x2, x1, #0x1 (1)
0xffff582a698c    76  and x5, x5, #0xfffffffffff00000
0xffff582a6990    80  ldr x5, [x5, #8]
0xffff582a6994    84  tbz w5, #1, #+0x24 (addr 0xffff582a69b8)
0xffff582a6998    88  and x5, x1, #0xfffffffffff00000
0xffff582a699c    92  ldr x5, [x5, #8]
0xffff582a69a0    96  tbz w5, #2, #+0x18 (addr 0xffff582a69b8)
0xffff582a69a4   100  sub csp, jssp, #0x8 (8)
0xffff582a69a8   104  str lr, [jssp, #-8]!
0xffff582a69ac   108  ldr x16, pc+36 (addr 0x0000ffff582a69d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582a69b0   112  blr x16
0xffff582a69b4   116  ldr lr, [jssp], #8
0xffff582a69b8   120  ret
0xffff582a69bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582a69c0   128  d63f03e0       constant
0xffff582a69c4   132  d503201f       constant
0xffff582a69c8   136  582378a0       constant
0xffff582a69cc   140  0000ffff       constant
0xffff582a69d0   144  58238080       constant
0xffff582a69d4   148  0000ffff       constant
0xffff582a69d8   152  movz x16, #0x0
0xffff582a69dc   156  sub csp, jssp, #0x10 (16)
0xffff582a69e0   160  stp fp, lr, [jssp, #-16]!
0xffff582a69e4   164  bl #+0x4 (addr 0xffff582a69e8)
0xffff582a69e8   168  movz x17, #0xa00000000
0xffff582a69ec   172  sub csp, jssp, #0x10 (16)
0xffff582a69f0   176  stp x17, cp, [jssp, #-16]!
0xffff582a69f4   180  add fp, jssp, #0x10 (16)
0xffff582a69f8   184  ldr x17, pc+24 (addr 0x0000ffff582a6a10)    ;; lazy deoptimization bailout 0
0xffff582a69fc   188  add x17, x17, x16
0xffff582a6a00   192  br x17
0xffff582a6a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582a6a08   200  d63f03e0       constant
0xffff582a6a0c   204  d503201f       constant
0xffff582a6a10   208  58006000       constant
0xffff582a6a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582a6974  code target (STUB)  (0xffff582378a0)
0xffff582a69ac  code target (STUB)  (0xffff58238080)
0xffff582a69bc  constant pool (size 28)
0xffff582a69f8  runtime entry
0xffff582a6a04  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582a6940     0  tbz w0, #0, #+0x98 (addr 0xffff582a69d8)
0xffff582a6944     4  mov x2, x0
0xffff582a6948     8  ldur x4, [x1, #7]
0xffff582a694c    12  stur x2, [x4, #47]
0xffff582a6950    16  add x3, x4, #0x2f (47)
0xffff582a6954    20  and x2, x2, #0xfffffffffff00000
0xffff582a6958    24  ldr x2, [x2, #8]
0xffff582a695c    28  tbz w2, #1, #+0x24 (addr 0xffff582a6980)
0xffff582a6960    32  and x2, x4, #0xfffffffffff00000
0xffff582a6964    36  ldr x2, [x2, #8]
0xffff582a6968    40  tbz w2, #2, #+0x18 (addr 0xffff582a6980)
0xffff582a696c    44  sub csp, jssp, #0x8 (8)
0xffff582a6970    48  str lr, [jssp, #-8]!
0xffff582a6974    52  ldr x16, pc+84 (addr 0x0000ffff582a69c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582a6978    56  blr x16
0xffff582a697c    60  ldr lr, [jssp], #8
0xffff582a6980    64  stur x5, [x1, #-1]
0xffff582a6984    68  tbz w5, #0, #+0x34 (addr 0xffff582a69b8)
0xffff582a6988    72  sub x2, x1, #0x1 (1)
0xffff582a698c    76  and x5, x5, #0xfffffffffff00000
0xffff582a6990    80  ldr x5, [x5, #8]
0xffff582a6994    84  tbz w5, #1, #+0x24 (addr 0xffff582a69b8)
0xffff582a6998    88  and x5, x1, #0xfffffffffff00000
0xffff582a699c    92  ldr x5, [x5, #8]
0xffff582a69a0    96  tbz w5, #2, #+0x18 (addr 0xffff582a69b8)
0xffff582a69a4   100  sub csp, jssp, #0x8 (8)
0xffff582a69a8   104  str lr, [jssp, #-8]!
0xffff582a69ac   108  ldr x16, pc+36 (addr 0x0000ffff582a69d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582a69b0   112  blr x16
0xffff582a69b4   116  ldr lr, [jssp], #8
0xffff582a69b8   120  ret
0xffff582a69bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582a69c0   128  d63f03e0       constant
0xffff582a69c4   132  d503201f       constant
0xffff582a69c8   136  582378a0       constant
0xffff582a69cc   140  0000ffff       constant
0xffff582a69d0   144  58238080       constant
0xffff582a69d4   148  0000ffff       constant
0xffff582a69d8   152  movz x16, #0x0
0xffff582a69dc   156  sub csp, jssp, #0x10 (16)
0xffff582a69e0   160  stp fp, lr, [jssp, #-16]!
0xffff582a69e4   164  bl #+0x4 (addr 0xffff582a69e8)
0xffff582a69e8   168  movz x17, #0xa00000000
0xffff582a69ec   172  sub csp, jssp, #0x10 (16)
0xffff582a69f0   176  stp x17, cp, [jssp, #-16]!
0xffff582a69f4   180  add fp, jssp, #0x10 (16)
0xffff582a69f8   184  ldr x17, pc+24 (addr 0x0000ffff582a6a10)    ;; lazy deoptimization bailout 0
0xffff582a69fc   188  add x17, x17, x16
0xffff582a6a00   192  br x17
0xffff582a6a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582a6a08   200  d63f03e0       constant
0xffff582a6a0c   204  d503201f       constant
0xffff582a6a10   208  58006000       constant
0xffff582a6a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582a6974  code target (STUB)  (0xffff582378a0)
0xffff582a69ac  code target (STUB)  (0xffff58238080)
0xffff582a69bc  constant pool (size 28)
0xffff582a69f8  runtime entry
0xffff582a6a04  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/warning
compiler = unknown
Instructions (size = 184)
0xffff582a6a80     0  sub csp, jssp, #0x8 (8)
0xffff582a6a84     4  str x3, [jssp, #-8]!
0xffff582a6a88     8  sub csp, jssp, #0x8 (8)
0xffff582a6a8c    12  str x4, [jssp, #-8]!
0xffff582a6a90    16  ldr x3, pc+112 (addr 0x0000ffff582a6b00)    ;; object: 0x39c63e59 Cell for 0
0xffff582a6a94    20  ldur x3, [x3, #7]
0xffff582a6a98    24  cmp x3, #0x0 (0)
0xffff582a6a9c    28  b.ne #+0x44 (addr 0xffff582a6ae0)
0xffff582a6aa0    32  tbz w0, #0, #+0x40 (addr 0xffff582a6ae0)
0xffff582a6aa4    36  ldur x3, [x0, #-1]
0xffff582a6aa8    40  ldr x4, pc+96 (addr 0x0000ffff582a6b08)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582a6aac    44  ldur x4, [x4, #7]
0xffff582a6ab0    48  cmp x3, x4
0xffff582a6ab4    52  b.ne #+0x2c (addr 0xffff582a6ae0)
0xffff582a6ab8    56  ldr x5, pc+88 (addr 0x0000ffff582a6b10)    ;; object: 0x39cf4fd1 WeakCell for 0x32b27a91 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582a6abc    60  ldur x5, [x5, #7]
0xffff582a6ac0    64  tbz w5, #0, #+0x20 (addr 0xffff582a6ae0)
0xffff582a6ac4    68  ldursw x4, [x5, #15]
0xffff582a6ac8    72  tbnz w4, #23, #+0x18 (addr 0xffff582a6ae0)
0xffff582a6acc    76  ldr x4, [jssp], #8
0xffff582a6ad0    80  ldr x3, [jssp], #8
0xffff582a6ad4    84  ldr x2, pc+68 (addr 0x0000ffff582a6b18)    ;; object: 0x39cb9731 <String[24]: internal/process/warning>
0xffff582a6ad8    88  ldr x16, pc+72 (addr 0x0000ffff582a6b20)    ;; code: HANDLER, StoreTransitionStub, minor: 196614
0xffff582a6adc    92  br x16
0xffff582a6ae0    96  ldr x2, pc+72 (addr 0x0000ffff582a6b28)    ;; object: 0x39cb9731 <String[24]: internal/process/warning>
0xffff582a6ae4   100  ldr x4, [jssp], #8
0xffff582a6ae8   104  ldr x3, [jssp], #8
0xffff582a6aec   108  ldr x16, pc+68 (addr 0x0000ffff582a6b30)    ;; code: BUILTIN
0xffff582a6af0   112  br x16
0xffff582a6af4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582a6af8   120  d63f03e0       constant
0xffff582a6afc   124  d503201f       constant
0xffff582a6b00   128  39c63e59       constant
0xffff582a6b04   132  00000000       constant
0xffff582a6b08   136  39cc22b1       constant
0xffff582a6b0c   140  00000000       constant
0xffff582a6b10   144  39cf4fd1       constant
0xffff582a6b14   148  00000000       constant
0xffff582a6b18   152  39cb9731       constant
0xffff582a6b1c   156  00000000       constant
0xffff582a6b20   160  582a6940       constant
0xffff582a6b24   164  0000ffff       constant
0xffff582a6b28   168  39cb9731       constant
0xffff582a6b2c   172  00000000       constant
0xffff582a6b30   176  58222420       constant
0xffff582a6b34   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582a6a90  embedded object  (0x39c63e59 Cell for 0)
0xffff582a6aa8  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582a6ab8  embedded object  (0x39cf4fd1 WeakCell for 0x32b27a91 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582a6ad4  embedded object  (0x39cb9731 <String[24]: internal/process/warning>)
0xffff582a6ad8  code target (HANDLER)  (0xffff582a6940)
0xffff582a6ae0  embedded object  (0x39cb9731 <String[24]: internal/process/warning>)
0xffff582a6aec  code target (BUILTIN)  (0xffff58222420)
0xffff582a6af4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582a87a0     0  tbz w0, #0, #+0x98 (addr 0xffff582a8838)
0xffff582a87a4     4  mov x2, x0
0xffff582a87a8     8  ldur x4, [x1, #7]
0xffff582a87ac    12  stur x2, [x4, #55]
0xffff582a87b0    16  add x3, x4, #0x37 (55)
0xffff582a87b4    20  and x2, x2, #0xfffffffffff00000
0xffff582a87b8    24  ldr x2, [x2, #8]
0xffff582a87bc    28  tbz w2, #1, #+0x24 (addr 0xffff582a87e0)
0xffff582a87c0    32  and x2, x4, #0xfffffffffff00000
0xffff582a87c4    36  ldr x2, [x2, #8]
0xffff582a87c8    40  tbz w2, #2, #+0x18 (addr 0xffff582a87e0)
0xffff582a87cc    44  sub csp, jssp, #0x8 (8)
0xffff582a87d0    48  str lr, [jssp, #-8]!
0xffff582a87d4    52  ldr x16, pc+84 (addr 0x0000ffff582a8828)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582a87d8    56  blr x16
0xffff582a87dc    60  ldr lr, [jssp], #8
0xffff582a87e0    64  stur x5, [x1, #-1]
0xffff582a87e4    68  tbz w5, #0, #+0x34 (addr 0xffff582a8818)
0xffff582a87e8    72  sub x2, x1, #0x1 (1)
0xffff582a87ec    76  and x5, x5, #0xfffffffffff00000
0xffff582a87f0    80  ldr x5, [x5, #8]
0xffff582a87f4    84  tbz w5, #1, #+0x24 (addr 0xffff582a8818)
0xffff582a87f8    88  and x5, x1, #0xfffffffffff00000
0xffff582a87fc    92  ldr x5, [x5, #8]
0xffff582a8800    96  tbz w5, #2, #+0x18 (addr 0xffff582a8818)
0xffff582a8804   100  sub csp, jssp, #0x8 (8)
0xffff582a8808   104  str lr, [jssp, #-8]!
0xffff582a880c   108  ldr x16, pc+36 (addr 0x0000ffff582a8830)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582a8810   112  blr x16
0xffff582a8814   116  ldr lr, [jssp], #8
0xffff582a8818   120  ret
0xffff582a881c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582a8820   128  d63f03e0       constant
0xffff582a8824   132  d503201f       constant
0xffff582a8828   136  582378a0       constant
0xffff582a882c   140  0000ffff       constant
0xffff582a8830   144  58238080       constant
0xffff582a8834   148  0000ffff       constant
0xffff582a8838   152  movz x16, #0x0
0xffff582a883c   156  sub csp, jssp, #0x10 (16)
0xffff582a8840   160  stp fp, lr, [jssp, #-16]!
0xffff582a8844   164  bl #+0x4 (addr 0xffff582a8848)
0xffff582a8848   168  movz x17, #0xa00000000
0xffff582a884c   172  sub csp, jssp, #0x10 (16)
0xffff582a8850   176  stp x17, cp, [jssp, #-16]!
0xffff582a8854   180  add fp, jssp, #0x10 (16)
0xffff582a8858   184  ldr x17, pc+24 (addr 0x0000ffff582a8870)    ;; lazy deoptimization bailout 0
0xffff582a885c   188  add x17, x17, x16
0xffff582a8860   192  br x17
0xffff582a8864   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582a8868   200  d63f03e0       constant
0xffff582a886c   204  d503201f       constant
0xffff582a8870   208  58006000       constant
0xffff582a8874   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582a87d4  code target (STUB)  (0xffff582378a0)
0xffff582a880c  code target (STUB)  (0xffff58238080)
0xffff582a881c  constant pool (size 28)
0xffff582a8858  runtime entry
0xffff582a8864  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582a87a0     0  tbz w0, #0, #+0x98 (addr 0xffff582a8838)
0xffff582a87a4     4  mov x2, x0
0xffff582a87a8     8  ldur x4, [x1, #7]
0xffff582a87ac    12  stur x2, [x4, #55]
0xffff582a87b0    16  add x3, x4, #0x37 (55)
0xffff582a87b4    20  and x2, x2, #0xfffffffffff00000
0xffff582a87b8    24  ldr x2, [x2, #8]
0xffff582a87bc    28  tbz w2, #1, #+0x24 (addr 0xffff582a87e0)
0xffff582a87c0    32  and x2, x4, #0xfffffffffff00000
0xffff582a87c4    36  ldr x2, [x2, #8]
0xffff582a87c8    40  tbz w2, #2, #+0x18 (addr 0xffff582a87e0)
0xffff582a87cc    44  sub csp, jssp, #0x8 (8)
0xffff582a87d0    48  str lr, [jssp, #-8]!
0xffff582a87d4    52  ldr x16, pc+84 (addr 0x0000ffff582a8828)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582a87d8    56  blr x16
0xffff582a87dc    60  ldr lr, [jssp], #8
0xffff582a87e0    64  stur x5, [x1, #-1]
0xffff582a87e4    68  tbz w5, #0, #+0x34 (addr 0xffff582a8818)
0xffff582a87e8    72  sub x2, x1, #0x1 (1)
0xffff582a87ec    76  and x5, x5, #0xfffffffffff00000
0xffff582a87f0    80  ldr x5, [x5, #8]
0xffff582a87f4    84  tbz w5, #1, #+0x24 (addr 0xffff582a8818)
0xffff582a87f8    88  and x5, x1, #0xfffffffffff00000
0xffff582a87fc    92  ldr x5, [x5, #8]
0xffff582a8800    96  tbz w5, #2, #+0x18 (addr 0xffff582a8818)
0xffff582a8804   100  sub csp, jssp, #0x8 (8)
0xffff582a8808   104  str lr, [jssp, #-8]!
0xffff582a880c   108  ldr x16, pc+36 (addr 0x0000ffff582a8830)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582a8810   112  blr x16
0xffff582a8814   116  ldr lr, [jssp], #8
0xffff582a8818   120  ret
0xffff582a881c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582a8820   128  d63f03e0       constant
0xffff582a8824   132  d503201f       constant
0xffff582a8828   136  582378a0       constant
0xffff582a882c   140  0000ffff       constant
0xffff582a8830   144  58238080       constant
0xffff582a8834   148  0000ffff       constant
0xffff582a8838   152  movz x16, #0x0
0xffff582a883c   156  sub csp, jssp, #0x10 (16)
0xffff582a8840   160  stp fp, lr, [jssp, #-16]!
0xffff582a8844   164  bl #+0x4 (addr 0xffff582a8848)
0xffff582a8848   168  movz x17, #0xa00000000
0xffff582a884c   172  sub csp, jssp, #0x10 (16)
0xffff582a8850   176  stp x17, cp, [jssp, #-16]!
0xffff582a8854   180  add fp, jssp, #0x10 (16)
0xffff582a8858   184  ldr x17, pc+24 (addr 0x0000ffff582a8870)    ;; lazy deoptimization bailout 0
0xffff582a885c   188  add x17, x17, x16
0xffff582a8860   192  br x17
0xffff582a8864   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582a8868   200  d63f03e0       constant
0xffff582a886c   204  d503201f       constant
0xffff582a8870   208  58006000       constant
0xffff582a8874   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582a87d4  code target (STUB)  (0xffff582378a0)
0xffff582a880c  code target (STUB)  (0xffff58238080)
0xffff582a881c  constant pool (size 28)
0xffff582a8858  runtime entry
0xffff582a8864  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/next_tick
compiler = unknown
Instructions (size = 184)
0xffff582a88e0     0  sub csp, jssp, #0x8 (8)
0xffff582a88e4     4  str x3, [jssp, #-8]!
0xffff582a88e8     8  sub csp, jssp, #0x8 (8)
0xffff582a88ec    12  str x4, [jssp, #-8]!
0xffff582a88f0    16  ldr x3, pc+112 (addr 0x0000ffff582a8960)    ;; object: 0x39c63e59 Cell for 0
0xffff582a88f4    20  ldur x3, [x3, #7]
0xffff582a88f8    24  cmp x3, #0x0 (0)
0xffff582a88fc    28  b.ne #+0x44 (addr 0xffff582a8940)
0xffff582a8900    32  tbz w0, #0, #+0x40 (addr 0xffff582a8940)
0xffff582a8904    36  ldur x3, [x0, #-1]
0xffff582a8908    40  ldr x4, pc+96 (addr 0x0000ffff582a8968)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582a890c    44  ldur x4, [x4, #7]
0xffff582a8910    48  cmp x3, x4
0xffff582a8914    52  b.ne #+0x2c (addr 0xffff582a8940)
0xffff582a8918    56  ldr x5, pc+88 (addr 0x0000ffff582a8970)    ;; object: 0x39cf6569 WeakCell for 0x32b27b99 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582a891c    60  ldur x5, [x5, #7]
0xffff582a8920    64  tbz w5, #0, #+0x20 (addr 0xffff582a8940)
0xffff582a8924    68  ldursw x4, [x5, #15]
0xffff582a8928    72  tbnz w4, #23, #+0x18 (addr 0xffff582a8940)
0xffff582a892c    76  ldr x4, [jssp], #8
0xffff582a8930    80  ldr x3, [jssp], #8
0xffff582a8934    84  ldr x2, pc+68 (addr 0x0000ffff582a8978)    ;; object: 0x39cb9781 <String[26]: internal/process/next_tick>
0xffff582a8938    88  ldr x16, pc+72 (addr 0x0000ffff582a8980)    ;; code: HANDLER, StoreTransitionStub, minor: 196615
0xffff582a893c    92  br x16
0xffff582a8940    96  ldr x2, pc+72 (addr 0x0000ffff582a8988)    ;; object: 0x39cb9781 <String[26]: internal/process/next_tick>
0xffff582a8944   100  ldr x4, [jssp], #8
0xffff582a8948   104  ldr x3, [jssp], #8
0xffff582a894c   108  ldr x16, pc+68 (addr 0x0000ffff582a8990)    ;; code: BUILTIN
0xffff582a8950   112  br x16
0xffff582a8954   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582a8958   120  d63f03e0       constant
0xffff582a895c   124  d503201f       constant
0xffff582a8960   128  39c63e59       constant
0xffff582a8964   132  00000000       constant
0xffff582a8968   136  39cc22b1       constant
0xffff582a896c   140  00000000       constant
0xffff582a8970   144  39cf6569       constant
0xffff582a8974   148  00000000       constant
0xffff582a8978   152  39cb9781       constant
0xffff582a897c   156  00000000       constant
0xffff582a8980   160  582a87a0       constant
0xffff582a8984   164  0000ffff       constant
0xffff582a8988   168  39cb9781       constant
0xffff582a898c   172  00000000       constant
0xffff582a8990   176  58222420       constant
0xffff582a8994   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582a88f0  embedded object  (0x39c63e59 Cell for 0)
0xffff582a8908  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582a8918  embedded object  (0x39cf6569 WeakCell for 0x32b27b99 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582a8934  embedded object  (0x39cb9781 <String[26]: internal/process/next_tick>)
0xffff582a8938  code target (HANDLER)  (0xffff582a87a0)
0xffff582a8940  embedded object  (0x39cb9781 <String[26]: internal/process/next_tick>)
0xffff582a894c  code target (BUILTIN)  (0xffff58222420)
0xffff582a8954  constant pool (size 68)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 429)
0xffff582a8d60     0  movz x2, #0x92c0
0xffff582a8d64     4  movk x2, #0x16e7, lsl #16
0xffff582a8d68     8  ldp x3, x0, [x2]
0xffff582a8d6c    12  adds x16, x3, #0x88 (136)
0xffff582a8d70    16  ccmp x16, x0, #nzCv, lo
0xffff582a8d74    20  b.hi #+0x94 (addr 0xffff582a8e08)
0xffff582a8d78    24  str x16, [x2]
0xffff582a8d7c    28  orr x3, x3, #0x1
0xffff582a8d80    32  ldr x0, pc+248 (addr 0x0000ffff582a8e78)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582a8d84    36  stur x0, [x3, #-1]
0xffff582a8d88    40  movz x0, #0xf00000000
0xffff582a8d8c    44  stur x0, [x3, #7]
0xffff582a8d90    48  stur x1, [x3, #15]
0xffff582a8d94    52  stur cp, [x3, #23]
0xffff582a8d98    56  ldr x0, pc+232 (addr 0x0000ffff582a8e80)    ;; object: 0x39c04519 <the hole>
0xffff582a8d9c    60  stur x0, [x3, #31]
0xffff582a8da0    64  ldur x0, [cp, #39]
0xffff582a8da4    68  stur x0, [x3, #39]
0xffff582a8da8    72  ldr x0, pc+224 (addr 0x0000ffff582a8e88)    ;; object: 0x39c04241 <undefined>
0xffff582a8dac    76  stur x0, [x3, #47]
0xffff582a8db0    80  ldr x0, pc+224 (addr 0x0000ffff582a8e90)    ;; object: 0x39c04241 <undefined>
0xffff582a8db4    84  stur x0, [x3, #55]
0xffff582a8db8    88  ldr x0, pc+224 (addr 0x0000ffff582a8e98)    ;; object: 0x39c04241 <undefined>
0xffff582a8dbc    92  stur x0, [x3, #63]
0xffff582a8dc0    96  ldr x0, pc+224 (addr 0x0000ffff582a8ea0)    ;; object: 0x39c04241 <undefined>
0xffff582a8dc4   100  stur x0, [x3, #71]
0xffff582a8dc8   104  ldr x0, pc+224 (addr 0x0000ffff582a8ea8)    ;; object: 0x39c04241 <undefined>
0xffff582a8dcc   108  stur x0, [x3, #79]
0xffff582a8dd0   112  ldr x0, pc+224 (addr 0x0000ffff582a8eb0)    ;; object: 0x39c04241 <undefined>
0xffff582a8dd4   116  stur x0, [x3, #87]
0xffff582a8dd8   120  ldr x0, pc+224 (addr 0x0000ffff582a8eb8)    ;; object: 0x39c04241 <undefined>
0xffff582a8ddc   124  stur x0, [x3, #95]
0xffff582a8de0   128  ldr x0, pc+224 (addr 0x0000ffff582a8ec0)    ;; object: 0x39c04241 <undefined>
0xffff582a8de4   132  stur x0, [x3, #103]
0xffff582a8de8   136  ldr x0, pc+224 (addr 0x0000ffff582a8ec8)    ;; object: 0x39c04241 <undefined>
0xffff582a8dec   140  stur x0, [x3, #111]
0xffff582a8df0   144  ldr x0, pc+224 (addr 0x0000ffff582a8ed0)    ;; object: 0x39c04241 <undefined>
0xffff582a8df4   148  stur x0, [x3, #119]
0xffff582a8df8   152  ldr x0, pc+224 (addr 0x0000ffff582a8ed8)    ;; object: 0x39c04241 <undefined>
0xffff582a8dfc   156  stur x0, [x3, #127]
0xffff582a8e00   160  mov x0, x3
0xffff582a8e04   164  ret
0xffff582a8e08   168  sub csp, jssp, #0x10 (16)
0xffff582a8e0c   172  stp fp, lr, [jssp, #-16]!
0xffff582a8e10   176  movz fp, #0xa00000000
0xffff582a8e14   180  sub csp, jssp, #0x8 (8)
0xffff582a8e18   184  str fp, [jssp, #-8]!
0xffff582a8e1c   188  add fp, jssp, #0x8 (8)
0xffff582a8e20   192  movz x3, #0x0
0xffff582a8e24   196  mov x16, lr
0xffff582a8e28   200  ldr x17, pc+184 (addr 0x0000ffff582a8ee0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582a8e2c   204  blr x17
0xffff582a8e30   208  movz x0, #0x8800000000
0xffff582a8e34   212  movz x10, #0x0
0xffff582a8e38   216  sub csp, jssp, #0x10 (16)
0xffff582a8e3c   220  stp x10, x0, [jssp, #-16]!
0xffff582a8e40   224  movz x0, #0x2
0xffff582a8e44   228  movz x1, #0x5b88
0xffff582a8e48   232  movk x1, #0xe2, lsl #16
0xffff582a8e4c   236  ldr x16, pc+156 (addr 0x0000ffff582a8ee8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582a8e50   240  blr x16
0xffff582a8e54   244  str x0, [jssp, #24]
0xffff582a8e58   248  ldr x16, pc+152 (addr 0x0000ffff582a8ef0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582a8e5c   252  blr x16
0xffff582a8e60   256  ldr lr, [jssp, #16]
0xffff582a8e64   260  ldp xzr, fp, [jssp], #24
0xffff582a8e68   264  b #-0xe8 (addr 0xffff582a8d80)
0xffff582a8e6c   268  5800045f       constant pool begin (num_const = 34)    ;; constant pool
0xffff582a8e70   272  d63f03e0       constant
0xffff582a8e74   276  d503201f       constant
0xffff582a8e78   280  32b06149       constant
0xffff582a8e7c   284  00000000       constant
0xffff582a8e80   288  39c04519       constant
0xffff582a8e84   292  00000000       constant
0xffff582a8e88   296  39c04241       constant
0xffff582a8e8c   300  00000000       constant
0xffff582a8e90   304  39c04241       constant
0xffff582a8e94   308  00000000       constant
0xffff582a8e98   312  39c04241       constant
0xffff582a8e9c   316  00000000       constant
0xffff582a8ea0   320  39c04241       constant
0xffff582a8ea4   324  00000000       constant
0xffff582a8ea8   328  39c04241       constant
0xffff582a8eac   332  00000000       constant
0xffff582a8eb0   336  39c04241       constant
0xffff582a8eb4   340  00000000       constant
0xffff582a8eb8   344  39c04241       constant
0xffff582a8ebc   348  00000000       constant
0xffff582a8ec0   352  39c04241       constant
0xffff582a8ec4   356  00000000       constant
0xffff582a8ec8   360  39c04241       constant
0xffff582a8ecc   364  00000000       constant
0xffff582a8ed0   368  39c04241       constant
0xffff582a8ed4   372  00000000       constant
0xffff582a8ed8   376  39c04241       constant
0xffff582a8edc   380  00000000       constant
0xffff582a8ee0   384  58206820       constant
0xffff582a8ee4   388  0000ffff       constant
0xffff582a8ee8   392  58206260       constant
0xffff582a8eec   396  0000ffff       constant
0xffff582a8ef0   400  582068e0       constant
0xffff582a8ef4   404  0000ffff       constant


Safepoints (size = 21)
0xffff582a8e54   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff582a8d80  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582a8d98  embedded object  (0x39c04519 <the hole>)
0xffff582a8da8  embedded object  (0x39c04241 <undefined>)
0xffff582a8db0  embedded object  (0x39c04241 <undefined>)
0xffff582a8db8  embedded object  (0x39c04241 <undefined>)
0xffff582a8dc0  embedded object  (0x39c04241 <undefined>)
0xffff582a8dc8  embedded object  (0x39c04241 <undefined>)
0xffff582a8dd0  embedded object  (0x39c04241 <undefined>)
0xffff582a8dd8  embedded object  (0x39c04241 <undefined>)
0xffff582a8de0  embedded object  (0x39c04241 <undefined>)
0xffff582a8de8  embedded object  (0x39c04241 <undefined>)
0xffff582a8df0  embedded object  (0x39c04241 <undefined>)
0xffff582a8df8  embedded object  (0x39c04241 <undefined>)
0xffff582a8e28  code target (STUB)  (0xffff58206820)
0xffff582a8e4c  code target (STUB)  (0xffff58206260)
0xffff582a8e58  code target (STUB)  (0xffff582068e0)
0xffff582a8e6c  constant pool (size 140)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 429)
0xffff582a8d60     0  movz x2, #0x92c0
0xffff582a8d64     4  movk x2, #0x16e7, lsl #16
0xffff582a8d68     8  ldp x3, x0, [x2]
0xffff582a8d6c    12  adds x16, x3, #0x88 (136)
0xffff582a8d70    16  ccmp x16, x0, #nzCv, lo
0xffff582a8d74    20  b.hi #+0x94 (addr 0xffff582a8e08)
0xffff582a8d78    24  str x16, [x2]
0xffff582a8d7c    28  orr x3, x3, #0x1
0xffff582a8d80    32  ldr x0, pc+248 (addr 0x0000ffff582a8e78)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582a8d84    36  stur x0, [x3, #-1]
0xffff582a8d88    40  movz x0, #0xf00000000
0xffff582a8d8c    44  stur x0, [x3, #7]
0xffff582a8d90    48  stur x1, [x3, #15]
0xffff582a8d94    52  stur cp, [x3, #23]
0xffff582a8d98    56  ldr x0, pc+232 (addr 0x0000ffff582a8e80)    ;; object: 0x39c04519 <the hole>
0xffff582a8d9c    60  stur x0, [x3, #31]
0xffff582a8da0    64  ldur x0, [cp, #39]
0xffff582a8da4    68  stur x0, [x3, #39]
0xffff582a8da8    72  ldr x0, pc+224 (addr 0x0000ffff582a8e88)    ;; object: 0x39c04241 <undefined>
0xffff582a8dac    76  stur x0, [x3, #47]
0xffff582a8db0    80  ldr x0, pc+224 (addr 0x0000ffff582a8e90)    ;; object: 0x39c04241 <undefined>
0xffff582a8db4    84  stur x0, [x3, #55]
0xffff582a8db8    88  ldr x0, pc+224 (addr 0x0000ffff582a8e98)    ;; object: 0x39c04241 <undefined>
0xffff582a8dbc    92  stur x0, [x3, #63]
0xffff582a8dc0    96  ldr x0, pc+224 (addr 0x0000ffff582a8ea0)    ;; object: 0x39c04241 <undefined>
0xffff582a8dc4   100  stur x0, [x3, #71]
0xffff582a8dc8   104  ldr x0, pc+224 (addr 0x0000ffff582a8ea8)    ;; object: 0x39c04241 <undefined>
0xffff582a8dcc   108  stur x0, [x3, #79]
0xffff582a8dd0   112  ldr x0, pc+224 (addr 0x0000ffff582a8eb0)    ;; object: 0x39c04241 <undefined>
0xffff582a8dd4   116  stur x0, [x3, #87]
0xffff582a8dd8   120  ldr x0, pc+224 (addr 0x0000ffff582a8eb8)    ;; object: 0x39c04241 <undefined>
0xffff582a8ddc   124  stur x0, [x3, #95]
0xffff582a8de0   128  ldr x0, pc+224 (addr 0x0000ffff582a8ec0)    ;; object: 0x39c04241 <undefined>
0xffff582a8de4   132  stur x0, [x3, #103]
0xffff582a8de8   136  ldr x0, pc+224 (addr 0x0000ffff582a8ec8)    ;; object: 0x39c04241 <undefined>
0xffff582a8dec   140  stur x0, [x3, #111]
0xffff582a8df0   144  ldr x0, pc+224 (addr 0x0000ffff582a8ed0)    ;; object: 0x39c04241 <undefined>
0xffff582a8df4   148  stur x0, [x3, #119]
0xffff582a8df8   152  ldr x0, pc+224 (addr 0x0000ffff582a8ed8)    ;; object: 0x39c04241 <undefined>
0xffff582a8dfc   156  stur x0, [x3, #127]
0xffff582a8e00   160  mov x0, x3
0xffff582a8e04   164  ret
0xffff582a8e08   168  sub csp, jssp, #0x10 (16)
0xffff582a8e0c   172  stp fp, lr, [jssp, #-16]!
0xffff582a8e10   176  movz fp, #0xa00000000
0xffff582a8e14   180  sub csp, jssp, #0x8 (8)
0xffff582a8e18   184  str fp, [jssp, #-8]!
0xffff582a8e1c   188  add fp, jssp, #0x8 (8)
0xffff582a8e20   192  movz x3, #0x0
0xffff582a8e24   196  mov x16, lr
0xffff582a8e28   200  ldr x17, pc+184 (addr 0x0000ffff582a8ee0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582a8e2c   204  blr x17
0xffff582a8e30   208  movz x0, #0x8800000000
0xffff582a8e34   212  movz x10, #0x0
0xffff582a8e38   216  sub csp, jssp, #0x10 (16)
0xffff582a8e3c   220  stp x10, x0, [jssp, #-16]!
0xffff582a8e40   224  movz x0, #0x2
0xffff582a8e44   228  movz x1, #0x5b88
0xffff582a8e48   232  movk x1, #0xe2, lsl #16
0xffff582a8e4c   236  ldr x16, pc+156 (addr 0x0000ffff582a8ee8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582a8e50   240  blr x16
0xffff582a8e54   244  str x0, [jssp, #24]
0xffff582a8e58   248  ldr x16, pc+152 (addr 0x0000ffff582a8ef0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582a8e5c   252  blr x16
0xffff582a8e60   256  ldr lr, [jssp, #16]
0xffff582a8e64   260  ldp xzr, fp, [jssp], #24
0xffff582a8e68   264  b #-0xe8 (addr 0xffff582a8d80)
0xffff582a8e6c   268  5800045f       constant pool begin (num_const = 34)    ;; constant pool
0xffff582a8e70   272  d63f03e0       constant
0xffff582a8e74   276  d503201f       constant
0xffff582a8e78   280  32b06149       constant
0xffff582a8e7c   284  00000000       constant
0xffff582a8e80   288  39c04519       constant
0xffff582a8e84   292  00000000       constant
0xffff582a8e88   296  39c04241       constant
0xffff582a8e8c   300  00000000       constant
0xffff582a8e90   304  39c04241       constant
0xffff582a8e94   308  00000000       constant
0xffff582a8e98   312  39c04241       constant
0xffff582a8e9c   316  00000000       constant
0xffff582a8ea0   320  39c04241       constant
0xffff582a8ea4   324  00000000       constant
0xffff582a8ea8   328  39c04241       constant
0xffff582a8eac   332  00000000       constant
0xffff582a8eb0   336  39c04241       constant
0xffff582a8eb4   340  00000000       constant
0xffff582a8eb8   344  39c04241       constant
0xffff582a8ebc   348  00000000       constant
0xffff582a8ec0   352  39c04241       constant
0xffff582a8ec4   356  00000000       constant
0xffff582a8ec8   360  39c04241       constant
0xffff582a8ecc   364  00000000       constant
0xffff582a8ed0   368  39c04241       constant
0xffff582a8ed4   372  00000000       constant
0xffff582a8ed8   376  39c04241       constant
0xffff582a8edc   380  00000000       constant
0xffff582a8ee0   384  58206820       constant
0xffff582a8ee4   388  0000ffff       constant
0xffff582a8ee8   392  58206260       constant
0xffff582a8eec   396  0000ffff       constant
0xffff582a8ef0   400  582068e0       constant
0xffff582a8ef4   404  0000ffff       constant


Safepoints (size = 21)
0xffff582a8e54   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff582a8d80  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582a8d98  embedded object  (0x39c04519 <the hole>)
0xffff582a8da8  embedded object  (0x39c04241 <undefined>)
0xffff582a8db0  embedded object  (0x39c04241 <undefined>)
0xffff582a8db8  embedded object  (0x39c04241 <undefined>)
0xffff582a8dc0  embedded object  (0x39c04241 <undefined>)
0xffff582a8dc8  embedded object  (0x39c04241 <undefined>)
0xffff582a8dd0  embedded object  (0x39c04241 <undefined>)
0xffff582a8dd8  embedded object  (0x39c04241 <undefined>)
0xffff582a8de0  embedded object  (0x39c04241 <undefined>)
0xffff582a8de8  embedded object  (0x39c04241 <undefined>)
0xffff582a8df0  embedded object  (0x39c04241 <undefined>)
0xffff582a8df8  embedded object  (0x39c04241 <undefined>)
0xffff582a8e28  code target (STUB)  (0xffff58206820)
0xffff582a8e4c  code target (STUB)  (0xffff58206260)
0xffff582a8e58  code target (STUB)  (0xffff582068e0)
0xffff582a8e6c  constant pool (size 140)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff582a9780     0  ldur x6, [x1, #7]
0xffff582a9784     4  ldur w7, [x6, #11]
0xffff582a9788     8  adds w8, w7, #0x3 (3)
0xffff582a978c    12  b.vs #+0x1dc (addr 0xffff582a9968)
0xffff582a9790    16  movz w16, #0x95ff
0xffff582a9794    20  cmp w8, w16, lsl #1
0xffff582a9798    24  b.hs #+0x1e0 (addr 0xffff582a9978)
0xffff582a979c    28  lsl x9, x8, #32
0xffff582a97a0    32  lsl w10, w8, #3
0xffff582a97a4    36  add w10, w10, #0x10 (16)
0xffff582a97a8    40  sxtw x10, w10
0xffff582a97ac    44  movz x11, #0x92c0
0xffff582a97b0    48  movk x11, #0x16e7, lsl #16
0xffff582a97b4    52  ldp x13, x16, [x11]
0xffff582a97b8    56  adds x12, x13, x10
0xffff582a97bc    60  ccmp x12, x16, #nzCv, lo
0xffff582a97c0    64  b.hi #+0xf8 (addr 0xffff582a98b8)
0xffff582a97c4    68  str x12, [x11]
0xffff582a97c8    72  orr x13, x13, #0x1
0xffff582a97cc    76  ldr x10, pc+348 (addr 0x0000ffff582a9928)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582a97d0    80  stur x10, [x13, #-1]
0xffff582a97d4    84  stur x9, [x13, #7]
0xffff582a97d8    88  cmp w7, w8
0xffff582a97dc    92  b.ge #+0x18 (addr 0xffff582a97f4)
0xffff582a97e0    96  sub w8, w8, #0x1 (1)
0xffff582a97e4   100  ldr x9, pc+332 (addr 0x0000ffff582a9930)    ;; object: 0x39c04241 <undefined>
0xffff582a97e8   104  add x10, x13, #0xf (15)
0xffff582a97ec   108  str x9, [x10, w8, sxtw #3]
0xffff582a97f0   112  b #-0x18 (addr 0xffff582a97d8)
0xffff582a97f4   116  cmp w7, #0x0 (0)
0xffff582a97f8   120  b.le #+0x1c (addr 0xffff582a9814)
0xffff582a97fc   124  sub w7, w7, #0x1 (1)
0xffff582a9800   128  add x8, x6, #0xf (15)
0xffff582a9804   132  ldr x9, [x8, w7, sxtw #3]
0xffff582a9808   136  add x8, x13, #0xf (15)
0xffff582a980c   140  str x9, [x8, w7, sxtw #3]
0xffff582a9810   144  b #-0x1c (addr 0xffff582a97f4)
0xffff582a9814   148  stur x13, [x1, #7]
0xffff582a9818   152  add x6, x1, #0x7 (7)
0xffff582a981c   156  and x13, x1, #0xfffffffffff00000
0xffff582a9820   160  ldr x13, [x13, #8]
0xffff582a9824   164  tbz w13, #2, #+0x18 (addr 0xffff582a983c)
0xffff582a9828   168  sub csp, jssp, #0x8 (8)
0xffff582a982c   172  str lr, [jssp, #-8]!
0xffff582a9830   176  ldr x16, pc+264 (addr 0x0000ffff582a9938)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff582a9834   180  blr x16
0xffff582a9838   184  ldr lr, [jssp], #8
0xffff582a983c   188  tbz w0, #0, #+0x14c (addr 0xffff582a9988)
0xffff582a9840   192  mov x2, x0
0xffff582a9844   196  ldur x4, [x1, #7]
0xffff582a9848   200  stur x2, [x4, #63]
0xffff582a984c   204  add x3, x4, #0x3f (63)
0xffff582a9850   208  and x2, x2, #0xfffffffffff00000
0xffff582a9854   212  ldr x2, [x2, #8]
0xffff582a9858   216  tbz w2, #1, #+0x24 (addr 0xffff582a987c)
0xffff582a985c   220  and x2, x4, #0xfffffffffff00000
0xffff582a9860   224  ldr x2, [x2, #8]
0xffff582a9864   228  tbz w2, #2, #+0x18 (addr 0xffff582a987c)
0xffff582a9868   232  sub csp, jssp, #0x8 (8)
0xffff582a986c   236  str lr, [jssp, #-8]!
0xffff582a9870   240  ldr x16, pc+208 (addr 0x0000ffff582a9940)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582a9874   244  blr x16
0xffff582a9878   248  ldr lr, [jssp], #8
0xffff582a987c   252  stur x5, [x1, #-1]
0xffff582a9880   256  tbz w5, #0, #+0x34 (addr 0xffff582a98b4)
0xffff582a9884   260  sub x2, x1, #0x1 (1)
0xffff582a9888   264  and x5, x5, #0xfffffffffff00000
0xffff582a988c   268  ldr x5, [x5, #8]
0xffff582a9890   272  tbz w5, #1, #+0x24 (addr 0xffff582a98b4)
0xffff582a9894   276  and x5, x1, #0xfffffffffff00000
0xffff582a9898   280  ldr x5, [x5, #8]
0xffff582a989c   284  tbz w5, #2, #+0x18 (addr 0xffff582a98b4)
0xffff582a98a0   288  sub csp, jssp, #0x8 (8)
0xffff582a98a4   292  str lr, [jssp, #-8]!
0xffff582a98a8   296  ldr x16, pc+160 (addr 0x0000ffff582a9948)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582a98ac   300  blr x16
0xffff582a98b0   304  ldr lr, [jssp], #8
0xffff582a98b4   308  ret
0xffff582a98b8   312  sub csp, jssp, #0x10 (16)
0xffff582a98bc   316  stp fp, lr, [jssp, #-16]!
0xffff582a98c0   320  movz fp, #0xa00000000
0xffff582a98c4   324  sub csp, jssp, #0x8 (8)
0xffff582a98c8   328  str fp, [jssp, #-8]!
0xffff582a98cc   332  add fp, jssp, #0x8 (8)
0xffff582a98d0   336  movz x13, #0x0
0xffff582a98d4   340  mov x16, lr
0xffff582a98d8   344  ldr x17, pc+120 (addr 0x0000ffff582a9950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582a98dc   348  blr x17
0xffff582a98e0   352  lsl x0, x10, #32
0xffff582a98e4   356  movz x10, #0x0
0xffff582a98e8   360  sub csp, jssp, #0x10 (16)
0xffff582a98ec   364  stp x10, x0, [jssp, #-16]!
0xffff582a98f0   368  movz x0, #0x2
0xffff582a98f4   372  movz x1, #0x5b88
0xffff582a98f8   376  movk x1, #0xe2, lsl #16
0xffff582a98fc   380  ldr x16, pc+92 (addr 0x0000ffff582a9958)    ;; code: STUB, CEntryStub, minor: 5
0xffff582a9900   384  blr x16
0xffff582a9904   388  str x0, [jssp, #104]
0xffff582a9908   392  ldr x16, pc+88 (addr 0x0000ffff582a9960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582a990c   396  blr x16
0xffff582a9910   400  ldr lr, [jssp, #16]
0xffff582a9914   404  ldp xzr, fp, [jssp], #24
0xffff582a9918   408  b #-0x14c (addr 0xffff582a97cc)
0xffff582a991c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff582a9920   416  d63f03e0       constant
0xffff582a9924   420  d503201f       constant
0xffff582a9928   424  32b04259       constant
0xffff582a992c   428  00000000       constant
0xffff582a9930   432  39c04241       constant
0xffff582a9934   436  00000000       constant
0xffff582a9938   440  582370c0       constant
0xffff582a993c   444  0000ffff       constant
0xffff582a9940   448  582378a0       constant
0xffff582a9944   452  0000ffff       constant
0xffff582a9948   456  58238080       constant
0xffff582a994c   460  0000ffff       constant
0xffff582a9950   464  58206820       constant
0xffff582a9954   468  0000ffff       constant
0xffff582a9958   472  58206260       constant
0xffff582a995c   476  0000ffff       constant
0xffff582a9960   480  582068e0       constant
0xffff582a9964   484  0000ffff       constant
0xffff582a9968   488  movz x16, #0x0
0xffff582a996c   492  sub csp, jssp, #0x10 (16)
0xffff582a9970   496  stp fp, lr, [jssp, #-16]!
0xffff582a9974   500  bl #+0x24 (addr 0xffff582a9998)
0xffff582a9978   504  movz x16, #0x8
0xffff582a997c   508  sub csp, jssp, #0x10 (16)
0xffff582a9980   512  stp fp, lr, [jssp, #-16]!
0xffff582a9984   516  bl #+0x14 (addr 0xffff582a9998)
0xffff582a9988   520  movz x16, #0x10
0xffff582a998c   524  sub csp, jssp, #0x10 (16)
0xffff582a9990   528  stp fp, lr, [jssp, #-16]!
0xffff582a9994   532  bl #+0x4 (addr 0xffff582a9998)
0xffff582a9998   536  movz x17, #0xa00000000
0xffff582a999c   540  sub csp, jssp, #0x10 (16)
0xffff582a99a0   544  stp x17, cp, [jssp, #-16]!
0xffff582a99a4   548  add fp, jssp, #0x10 (16)
0xffff582a99a8   552  ldr x17, pc+24 (addr 0x0000ffff582a99c0)    ;; lazy deoptimization bailout 0
0xffff582a99ac   556  add x17, x17, x16
0xffff582a99b0   560  br x17
0xffff582a99b4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582a99b8   568  d63f03e0       constant
0xffff582a99bc   572  d503201f       constant
0xffff582a99c0   576  58006000       constant
0xffff582a99c4   580  0000ffff       constant


Safepoints (size = 21)
0xffff582a9904   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff582a97cc  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582a97e4  embedded object  (0x39c04241 <undefined>)
0xffff582a9830  code target (STUB)  (0xffff582370c0)
0xffff582a9870  code target (STUB)  (0xffff582378a0)
0xffff582a98a8  code target (STUB)  (0xffff58238080)
0xffff582a98d8  code target (STUB)  (0xffff58206820)
0xffff582a98fc  code target (STUB)  (0xffff58206260)
0xffff582a9908  code target (STUB)  (0xffff582068e0)
0xffff582a991c  constant pool (size 76)
0xffff582a99a8  runtime entry
0xffff582a99b4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff582a9780     0  ldur x6, [x1, #7]
0xffff582a9784     4  ldur w7, [x6, #11]
0xffff582a9788     8  adds w8, w7, #0x3 (3)
0xffff582a978c    12  b.vs #+0x1dc (addr 0xffff582a9968)
0xffff582a9790    16  movz w16, #0x95ff
0xffff582a9794    20  cmp w8, w16, lsl #1
0xffff582a9798    24  b.hs #+0x1e0 (addr 0xffff582a9978)
0xffff582a979c    28  lsl x9, x8, #32
0xffff582a97a0    32  lsl w10, w8, #3
0xffff582a97a4    36  add w10, w10, #0x10 (16)
0xffff582a97a8    40  sxtw x10, w10
0xffff582a97ac    44  movz x11, #0x92c0
0xffff582a97b0    48  movk x11, #0x16e7, lsl #16
0xffff582a97b4    52  ldp x13, x16, [x11]
0xffff582a97b8    56  adds x12, x13, x10
0xffff582a97bc    60  ccmp x12, x16, #nzCv, lo
0xffff582a97c0    64  b.hi #+0xf8 (addr 0xffff582a98b8)
0xffff582a97c4    68  str x12, [x11]
0xffff582a97c8    72  orr x13, x13, #0x1
0xffff582a97cc    76  ldr x10, pc+348 (addr 0x0000ffff582a9928)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582a97d0    80  stur x10, [x13, #-1]
0xffff582a97d4    84  stur x9, [x13, #7]
0xffff582a97d8    88  cmp w7, w8
0xffff582a97dc    92  b.ge #+0x18 (addr 0xffff582a97f4)
0xffff582a97e0    96  sub w8, w8, #0x1 (1)
0xffff582a97e4   100  ldr x9, pc+332 (addr 0x0000ffff582a9930)    ;; object: 0x39c04241 <undefined>
0xffff582a97e8   104  add x10, x13, #0xf (15)
0xffff582a97ec   108  str x9, [x10, w8, sxtw #3]
0xffff582a97f0   112  b #-0x18 (addr 0xffff582a97d8)
0xffff582a97f4   116  cmp w7, #0x0 (0)
0xffff582a97f8   120  b.le #+0x1c (addr 0xffff582a9814)
0xffff582a97fc   124  sub w7, w7, #0x1 (1)
0xffff582a9800   128  add x8, x6, #0xf (15)
0xffff582a9804   132  ldr x9, [x8, w7, sxtw #3]
0xffff582a9808   136  add x8, x13, #0xf (15)
0xffff582a980c   140  str x9, [x8, w7, sxtw #3]
0xffff582a9810   144  b #-0x1c (addr 0xffff582a97f4)
0xffff582a9814   148  stur x13, [x1, #7]
0xffff582a9818   152  add x6, x1, #0x7 (7)
0xffff582a981c   156  and x13, x1, #0xfffffffffff00000
0xffff582a9820   160  ldr x13, [x13, #8]
0xffff582a9824   164  tbz w13, #2, #+0x18 (addr 0xffff582a983c)
0xffff582a9828   168  sub csp, jssp, #0x8 (8)
0xffff582a982c   172  str lr, [jssp, #-8]!
0xffff582a9830   176  ldr x16, pc+264 (addr 0x0000ffff582a9938)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff582a9834   180  blr x16
0xffff582a9838   184  ldr lr, [jssp], #8
0xffff582a983c   188  tbz w0, #0, #+0x14c (addr 0xffff582a9988)
0xffff582a9840   192  mov x2, x0
0xffff582a9844   196  ldur x4, [x1, #7]
0xffff582a9848   200  stur x2, [x4, #63]
0xffff582a984c   204  add x3, x4, #0x3f (63)
0xffff582a9850   208  and x2, x2, #0xfffffffffff00000
0xffff582a9854   212  ldr x2, [x2, #8]
0xffff582a9858   216  tbz w2, #1, #+0x24 (addr 0xffff582a987c)
0xffff582a985c   220  and x2, x4, #0xfffffffffff00000
0xffff582a9860   224  ldr x2, [x2, #8]
0xffff582a9864   228  tbz w2, #2, #+0x18 (addr 0xffff582a987c)
0xffff582a9868   232  sub csp, jssp, #0x8 (8)
0xffff582a986c   236  str lr, [jssp, #-8]!
0xffff582a9870   240  ldr x16, pc+208 (addr 0x0000ffff582a9940)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582a9874   244  blr x16
0xffff582a9878   248  ldr lr, [jssp], #8
0xffff582a987c   252  stur x5, [x1, #-1]
0xffff582a9880   256  tbz w5, #0, #+0x34 (addr 0xffff582a98b4)
0xffff582a9884   260  sub x2, x1, #0x1 (1)
0xffff582a9888   264  and x5, x5, #0xfffffffffff00000
0xffff582a988c   268  ldr x5, [x5, #8]
0xffff582a9890   272  tbz w5, #1, #+0x24 (addr 0xffff582a98b4)
0xffff582a9894   276  and x5, x1, #0xfffffffffff00000
0xffff582a9898   280  ldr x5, [x5, #8]
0xffff582a989c   284  tbz w5, #2, #+0x18 (addr 0xffff582a98b4)
0xffff582a98a0   288  sub csp, jssp, #0x8 (8)
0xffff582a98a4   292  str lr, [jssp, #-8]!
0xffff582a98a8   296  ldr x16, pc+160 (addr 0x0000ffff582a9948)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582a98ac   300  blr x16
0xffff582a98b0   304  ldr lr, [jssp], #8
0xffff582a98b4   308  ret
0xffff582a98b8   312  sub csp, jssp, #0x10 (16)
0xffff582a98bc   316  stp fp, lr, [jssp, #-16]!
0xffff582a98c0   320  movz fp, #0xa00000000
0xffff582a98c4   324  sub csp, jssp, #0x8 (8)
0xffff582a98c8   328  str fp, [jssp, #-8]!
0xffff582a98cc   332  add fp, jssp, #0x8 (8)
0xffff582a98d0   336  movz x13, #0x0
0xffff582a98d4   340  mov x16, lr
0xffff582a98d8   344  ldr x17, pc+120 (addr 0x0000ffff582a9950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582a98dc   348  blr x17
0xffff582a98e0   352  lsl x0, x10, #32
0xffff582a98e4   356  movz x10, #0x0
0xffff582a98e8   360  sub csp, jssp, #0x10 (16)
0xffff582a98ec   364  stp x10, x0, [jssp, #-16]!
0xffff582a98f0   368  movz x0, #0x2
0xffff582a98f4   372  movz x1, #0x5b88
0xffff582a98f8   376  movk x1, #0xe2, lsl #16
0xffff582a98fc   380  ldr x16, pc+92 (addr 0x0000ffff582a9958)    ;; code: STUB, CEntryStub, minor: 5
0xffff582a9900   384  blr x16
0xffff582a9904   388  str x0, [jssp, #104]
0xffff582a9908   392  ldr x16, pc+88 (addr 0x0000ffff582a9960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582a990c   396  blr x16
0xffff582a9910   400  ldr lr, [jssp, #16]
0xffff582a9914   404  ldp xzr, fp, [jssp], #24
0xffff582a9918   408  b #-0x14c (addr 0xffff582a97cc)
0xffff582a991c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff582a9920   416  d63f03e0       constant
0xffff582a9924   420  d503201f       constant
0xffff582a9928   424  32b04259       constant
0xffff582a992c   428  00000000       constant
0xffff582a9930   432  39c04241       constant
0xffff582a9934   436  00000000       constant
0xffff582a9938   440  582370c0       constant
0xffff582a993c   444  0000ffff       constant
0xffff582a9940   448  582378a0       constant
0xffff582a9944   452  0000ffff       constant
0xffff582a9948   456  58238080       constant
0xffff582a994c   460  0000ffff       constant
0xffff582a9950   464  58206820       constant
0xffff582a9954   468  0000ffff       constant
0xffff582a9958   472  58206260       constant
0xffff582a995c   476  0000ffff       constant
0xffff582a9960   480  582068e0       constant
0xffff582a9964   484  0000ffff       constant
0xffff582a9968   488  movz x16, #0x0
0xffff582a996c   492  sub csp, jssp, #0x10 (16)
0xffff582a9970   496  stp fp, lr, [jssp, #-16]!
0xffff582a9974   500  bl #+0x24 (addr 0xffff582a9998)
0xffff582a9978   504  movz x16, #0x8
0xffff582a997c   508  sub csp, jssp, #0x10 (16)
0xffff582a9980   512  stp fp, lr, [jssp, #-16]!
0xffff582a9984   516  bl #+0x14 (addr 0xffff582a9998)
0xffff582a9988   520  movz x16, #0x10
0xffff582a998c   524  sub csp, jssp, #0x10 (16)
0xffff582a9990   528  stp fp, lr, [jssp, #-16]!
0xffff582a9994   532  bl #+0x4 (addr 0xffff582a9998)
0xffff582a9998   536  movz x17, #0xa00000000
0xffff582a999c   540  sub csp, jssp, #0x10 (16)
0xffff582a99a0   544  stp x17, cp, [jssp, #-16]!
0xffff582a99a4   548  add fp, jssp, #0x10 (16)
0xffff582a99a8   552  ldr x17, pc+24 (addr 0x0000ffff582a99c0)    ;; lazy deoptimization bailout 0
0xffff582a99ac   556  add x17, x17, x16
0xffff582a99b0   560  br x17
0xffff582a99b4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582a99b8   568  d63f03e0       constant
0xffff582a99bc   572  d503201f       constant
0xffff582a99c0   576  58006000       constant
0xffff582a99c4   580  0000ffff       constant


Safepoints (size = 21)
0xffff582a9904   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff582a97cc  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582a97e4  embedded object  (0x39c04241 <undefined>)
0xffff582a9830  code target (STUB)  (0xffff582370c0)
0xffff582a9870  code target (STUB)  (0xffff582378a0)
0xffff582a98a8  code target (STUB)  (0xffff58238080)
0xffff582a98d8  code target (STUB)  (0xffff58206820)
0xffff582a98fc  code target (STUB)  (0xffff58206260)
0xffff582a9908  code target (STUB)  (0xffff582068e0)
0xffff582a991c  constant pool (size 76)
0xffff582a99a8  runtime entry
0xffff582a99b4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/promises
compiler = unknown
Instructions (size = 184)
0xffff582a9a40     0  sub csp, jssp, #0x8 (8)
0xffff582a9a44     4  str x3, [jssp, #-8]!
0xffff582a9a48     8  sub csp, jssp, #0x8 (8)
0xffff582a9a4c    12  str x4, [jssp, #-8]!
0xffff582a9a50    16  ldr x3, pc+112 (addr 0x0000ffff582a9ac0)    ;; object: 0x39c63e59 Cell for 0
0xffff582a9a54    20  ldur x3, [x3, #7]
0xffff582a9a58    24  cmp x3, #0x0 (0)
0xffff582a9a5c    28  b.ne #+0x44 (addr 0xffff582a9aa0)
0xffff582a9a60    32  tbz w0, #0, #+0x40 (addr 0xffff582a9aa0)
0xffff582a9a64    36  ldur x3, [x0, #-1]
0xffff582a9a68    40  ldr x4, pc+96 (addr 0x0000ffff582a9ac8)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582a9a6c    44  ldur x4, [x4, #7]
0xffff582a9a70    48  cmp x3, x4
0xffff582a9a74    52  b.ne #+0x2c (addr 0xffff582a9aa0)
0xffff582a9a78    56  ldr x5, pc+88 (addr 0x0000ffff582a9ad0)    ;; object: 0x39cf78b1 WeakCell for 0x32b27c49 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582a9a7c    60  ldur x5, [x5, #7]
0xffff582a9a80    64  tbz w5, #0, #+0x20 (addr 0xffff582a9aa0)
0xffff582a9a84    68  ldursw x4, [x5, #15]
0xffff582a9a88    72  tbnz w4, #23, #+0x18 (addr 0xffff582a9aa0)
0xffff582a9a8c    76  ldr x4, [jssp], #8
0xffff582a9a90    80  ldr x3, [jssp], #8
0xffff582a9a94    84  ldr x2, pc+68 (addr 0x0000ffff582a9ad8)    ;; object: 0x39cbe351 <String[25]: internal/process/promises>
0xffff582a9a98    88  ldr x16, pc+72 (addr 0x0000ffff582a9ae0)    ;; code: HANDLER, StoreTransitionStub, minor: 327688
0xffff582a9a9c    92  br x16
0xffff582a9aa0    96  ldr x2, pc+72 (addr 0x0000ffff582a9ae8)    ;; object: 0x39cbe351 <String[25]: internal/process/promises>
0xffff582a9aa4   100  ldr x4, [jssp], #8
0xffff582a9aa8   104  ldr x3, [jssp], #8
0xffff582a9aac   108  ldr x16, pc+68 (addr 0x0000ffff582a9af0)    ;; code: BUILTIN
0xffff582a9ab0   112  br x16
0xffff582a9ab4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582a9ab8   120  d63f03e0       constant
0xffff582a9abc   124  d503201f       constant
0xffff582a9ac0   128  39c63e59       constant
0xffff582a9ac4   132  00000000       constant
0xffff582a9ac8   136  39cc22b1       constant
0xffff582a9acc   140  00000000       constant
0xffff582a9ad0   144  39cf78b1       constant
0xffff582a9ad4   148  00000000       constant
0xffff582a9ad8   152  39cbe351       constant
0xffff582a9adc   156  00000000       constant
0xffff582a9ae0   160  582a9780       constant
0xffff582a9ae4   164  0000ffff       constant
0xffff582a9ae8   168  39cbe351       constant
0xffff582a9aec   172  00000000       constant
0xffff582a9af0   176  58222420       constant
0xffff582a9af4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582a9a50  embedded object  (0x39c63e59 Cell for 0)
0xffff582a9a68  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582a9a78  embedded object  (0x39cf78b1 WeakCell for 0x32b27c49 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582a9a94  embedded object  (0x39cbe351 <String[25]: internal/process/promises>)
0xffff582a9a98  code target (HANDLER)  (0xffff582a9780)
0xffff582a9aa0  embedded object  (0x39cbe351 <String[25]: internal/process/promises>)
0xffff582a9aac  code target (BUILTIN)  (0xffff58222420)
0xffff582a9ab4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = WeakMap
compiler = unknown
Instructions (size = 120)
0xffff582aa120     0  sub csp, jssp, #0x8 (8)
0xffff582aa124     4  str x3, [jssp, #-8]!
0xffff582aa128     8  sub csp, jssp, #0x8 (8)
0xffff582aa12c    12  str x0, [jssp, #-8]!
0xffff582aa130    16  ldr x0, pc+80 (addr 0x0000ffff582aa180)    ;; object: 0x39cc5d51 Cell for 0
0xffff582aa134    20  ldur x0, [x0, #7]
0xffff582aa138    24  cmp x0, #0x0 (0)
0xffff582aa13c    28  b.ne #+0x2c (addr 0xffff582aa168)
0xffff582aa140    32  ldr x0, pc+72 (addr 0x0000ffff582aa188)    ;; object: 0x39cf8569 WeakCell for 0x39c491f9 PropertyCell for 0x39c49191 <JS Function WeakMap (SharedFunctionInfo 0x39c490e9)>
0xffff582aa144    36  ldur x0, [x0, #7]
0xffff582aa148    40  tbz w0, #0, #+0x20 (addr 0xffff582aa168)
0xffff582aa14c    44  ldur x0, [x0, #15]
0xffff582aa150    48  ldr x16, [x26, #88]
0xffff582aa154    52  cmp x0, x16
0xffff582aa158    56  b.eq #+0x10 (addr 0xffff582aa168)
0xffff582aa15c    60  add jssp, jssp, #0x10 (16)
0xffff582aa160    64  ret
0xffff582aa164    68  b #+0x14 (addr 0xffff582aa178)
0xffff582aa168    72  ldr x0, [jssp], #8
0xffff582aa16c    76  ldr x3, [jssp], #8
0xffff582aa170    80  ldr x16, pc+32 (addr 0x0000ffff582aa190)    ;; code: BUILTIN
0xffff582aa174    84  br x16
0xffff582aa178    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582aa17c    92  d63f03e0       constant
0xffff582aa180    96  39cc5d51       constant
0xffff582aa184   100  00000000       constant
0xffff582aa188   104  39cf8569       constant
0xffff582aa18c   108  00000000       constant
0xffff582aa190   112  582222e0       constant
0xffff582aa194   116  0000ffff       constant


RelocInfo (size = 9)
0xffff582aa130  embedded object  (0x39cc5d51 Cell for 0)
0xffff582aa140  embedded object  (0x39cf8569 WeakCell for 0x39c491f9 PropertyCell for 0x39c49191 <JS Function WeakMap (SharedFunctionInfo 0x39c490e9)>)
0xffff582aa170  code target (BUILTIN)  (0xffff582222e0)
0xffff582aa178  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582aa500     0  tbz w0, #0, #+0x98 (addr 0xffff582aa598)
0xffff582aa504     4  mov x2, x0
0xffff582aa508     8  ldur x4, [x1, #7]
0xffff582aa50c    12  stur x2, [x4, #71]
0xffff582aa510    16  add x3, x4, #0x47 (71)
0xffff582aa514    20  and x2, x2, #0xfffffffffff00000
0xffff582aa518    24  ldr x2, [x2, #8]
0xffff582aa51c    28  tbz w2, #1, #+0x24 (addr 0xffff582aa540)
0xffff582aa520    32  and x2, x4, #0xfffffffffff00000
0xffff582aa524    36  ldr x2, [x2, #8]
0xffff582aa528    40  tbz w2, #2, #+0x18 (addr 0xffff582aa540)
0xffff582aa52c    44  sub csp, jssp, #0x8 (8)
0xffff582aa530    48  str lr, [jssp, #-8]!
0xffff582aa534    52  ldr x16, pc+84 (addr 0x0000ffff582aa588)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582aa538    56  blr x16
0xffff582aa53c    60  ldr lr, [jssp], #8
0xffff582aa540    64  stur x5, [x1, #-1]
0xffff582aa544    68  tbz w5, #0, #+0x34 (addr 0xffff582aa578)
0xffff582aa548    72  sub x2, x1, #0x1 (1)
0xffff582aa54c    76  and x5, x5, #0xfffffffffff00000
0xffff582aa550    80  ldr x5, [x5, #8]
0xffff582aa554    84  tbz w5, #1, #+0x24 (addr 0xffff582aa578)
0xffff582aa558    88  and x5, x1, #0xfffffffffff00000
0xffff582aa55c    92  ldr x5, [x5, #8]
0xffff582aa560    96  tbz w5, #2, #+0x18 (addr 0xffff582aa578)
0xffff582aa564   100  sub csp, jssp, #0x8 (8)
0xffff582aa568   104  str lr, [jssp, #-8]!
0xffff582aa56c   108  ldr x16, pc+36 (addr 0x0000ffff582aa590)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582aa570   112  blr x16
0xffff582aa574   116  ldr lr, [jssp], #8
0xffff582aa578   120  ret
0xffff582aa57c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582aa580   128  d63f03e0       constant
0xffff582aa584   132  d503201f       constant
0xffff582aa588   136  582378a0       constant
0xffff582aa58c   140  0000ffff       constant
0xffff582aa590   144  58238080       constant
0xffff582aa594   148  0000ffff       constant
0xffff582aa598   152  movz x16, #0x0
0xffff582aa59c   156  sub csp, jssp, #0x10 (16)
0xffff582aa5a0   160  stp fp, lr, [jssp, #-16]!
0xffff582aa5a4   164  bl #+0x4 (addr 0xffff582aa5a8)
0xffff582aa5a8   168  movz x17, #0xa00000000
0xffff582aa5ac   172  sub csp, jssp, #0x10 (16)
0xffff582aa5b0   176  stp x17, cp, [jssp, #-16]!
0xffff582aa5b4   180  add fp, jssp, #0x10 (16)
0xffff582aa5b8   184  ldr x17, pc+24 (addr 0x0000ffff582aa5d0)    ;; lazy deoptimization bailout 0
0xffff582aa5bc   188  add x17, x17, x16
0xffff582aa5c0   192  br x17
0xffff582aa5c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582aa5c8   200  d63f03e0       constant
0xffff582aa5cc   204  d503201f       constant
0xffff582aa5d0   208  58006000       constant
0xffff582aa5d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582aa534  code target (STUB)  (0xffff582378a0)
0xffff582aa56c  code target (STUB)  (0xffff58238080)
0xffff582aa57c  constant pool (size 28)
0xffff582aa5b8  runtime entry
0xffff582aa5c4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582aa500     0  tbz w0, #0, #+0x98 (addr 0xffff582aa598)
0xffff582aa504     4  mov x2, x0
0xffff582aa508     8  ldur x4, [x1, #7]
0xffff582aa50c    12  stur x2, [x4, #71]
0xffff582aa510    16  add x3, x4, #0x47 (71)
0xffff582aa514    20  and x2, x2, #0xfffffffffff00000
0xffff582aa518    24  ldr x2, [x2, #8]
0xffff582aa51c    28  tbz w2, #1, #+0x24 (addr 0xffff582aa540)
0xffff582aa520    32  and x2, x4, #0xfffffffffff00000
0xffff582aa524    36  ldr x2, [x2, #8]
0xffff582aa528    40  tbz w2, #2, #+0x18 (addr 0xffff582aa540)
0xffff582aa52c    44  sub csp, jssp, #0x8 (8)
0xffff582aa530    48  str lr, [jssp, #-8]!
0xffff582aa534    52  ldr x16, pc+84 (addr 0x0000ffff582aa588)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582aa538    56  blr x16
0xffff582aa53c    60  ldr lr, [jssp], #8
0xffff582aa540    64  stur x5, [x1, #-1]
0xffff582aa544    68  tbz w5, #0, #+0x34 (addr 0xffff582aa578)
0xffff582aa548    72  sub x2, x1, #0x1 (1)
0xffff582aa54c    76  and x5, x5, #0xfffffffffff00000
0xffff582aa550    80  ldr x5, [x5, #8]
0xffff582aa554    84  tbz w5, #1, #+0x24 (addr 0xffff582aa578)
0xffff582aa558    88  and x5, x1, #0xfffffffffff00000
0xffff582aa55c    92  ldr x5, [x5, #8]
0xffff582aa560    96  tbz w5, #2, #+0x18 (addr 0xffff582aa578)
0xffff582aa564   100  sub csp, jssp, #0x8 (8)
0xffff582aa568   104  str lr, [jssp, #-8]!
0xffff582aa56c   108  ldr x16, pc+36 (addr 0x0000ffff582aa590)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582aa570   112  blr x16
0xffff582aa574   116  ldr lr, [jssp], #8
0xffff582aa578   120  ret
0xffff582aa57c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582aa580   128  d63f03e0       constant
0xffff582aa584   132  d503201f       constant
0xffff582aa588   136  582378a0       constant
0xffff582aa58c   140  0000ffff       constant
0xffff582aa590   144  58238080       constant
0xffff582aa594   148  0000ffff       constant
0xffff582aa598   152  movz x16, #0x0
0xffff582aa59c   156  sub csp, jssp, #0x10 (16)
0xffff582aa5a0   160  stp fp, lr, [jssp, #-16]!
0xffff582aa5a4   164  bl #+0x4 (addr 0xffff582aa5a8)
0xffff582aa5a8   168  movz x17, #0xa00000000
0xffff582aa5ac   172  sub csp, jssp, #0x10 (16)
0xffff582aa5b0   176  stp x17, cp, [jssp, #-16]!
0xffff582aa5b4   180  add fp, jssp, #0x10 (16)
0xffff582aa5b8   184  ldr x17, pc+24 (addr 0x0000ffff582aa5d0)    ;; lazy deoptimization bailout 0
0xffff582aa5bc   188  add x17, x17, x16
0xffff582aa5c0   192  br x17
0xffff582aa5c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582aa5c8   200  d63f03e0       constant
0xffff582aa5cc   204  d503201f       constant
0xffff582aa5d0   208  58006000       constant
0xffff582aa5d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582aa534  code target (STUB)  (0xffff582378a0)
0xffff582aa56c  code target (STUB)  (0xffff58238080)
0xffff582aa57c  constant pool (size 28)
0xffff582aa5b8  runtime entry
0xffff582aa5c4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/stdio
compiler = unknown
Instructions (size = 184)
0xffff582aa640     0  sub csp, jssp, #0x8 (8)
0xffff582aa644     4  str x3, [jssp, #-8]!
0xffff582aa648     8  sub csp, jssp, #0x8 (8)
0xffff582aa64c    12  str x4, [jssp, #-8]!
0xffff582aa650    16  ldr x3, pc+112 (addr 0x0000ffff582aa6c0)    ;; object: 0x39c63e59 Cell for 0
0xffff582aa654    20  ldur x3, [x3, #7]
0xffff582aa658    24  cmp x3, #0x0 (0)
0xffff582aa65c    28  b.ne #+0x44 (addr 0xffff582aa6a0)
0xffff582aa660    32  tbz w0, #0, #+0x40 (addr 0xffff582aa6a0)
0xffff582aa664    36  ldur x3, [x0, #-1]
0xffff582aa668    40  ldr x4, pc+96 (addr 0x0000ffff582aa6c8)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582aa66c    44  ldur x4, [x4, #7]
0xffff582aa670    48  cmp x3, x4
0xffff582aa674    52  b.ne #+0x2c (addr 0xffff582aa6a0)
0xffff582aa678    56  ldr x5, pc+88 (addr 0x0000ffff582aa6d0)    ;; object: 0x39cf8dd1 WeakCell for 0x32b27da9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582aa67c    60  ldur x5, [x5, #7]
0xffff582aa680    64  tbz w5, #0, #+0x20 (addr 0xffff582aa6a0)
0xffff582aa684    68  ldursw x4, [x5, #15]
0xffff582aa688    72  tbnz w4, #23, #+0x18 (addr 0xffff582aa6a0)
0xffff582aa68c    76  ldr x4, [jssp], #8
0xffff582aa690    80  ldr x3, [jssp], #8
0xffff582aa694    84  ldr x2, pc+68 (addr 0x0000ffff582aa6d8)    ;; object: 0x39cb97b9 <String[22]: internal/process/stdio>
0xffff582aa698    88  ldr x16, pc+72 (addr 0x0000ffff582aa6e0)    ;; code: HANDLER, StoreTransitionStub, minor: 196617
0xffff582aa69c    92  br x16
0xffff582aa6a0    96  ldr x2, pc+72 (addr 0x0000ffff582aa6e8)    ;; object: 0x39cb97b9 <String[22]: internal/process/stdio>
0xffff582aa6a4   100  ldr x4, [jssp], #8
0xffff582aa6a8   104  ldr x3, [jssp], #8
0xffff582aa6ac   108  ldr x16, pc+68 (addr 0x0000ffff582aa6f0)    ;; code: BUILTIN
0xffff582aa6b0   112  br x16
0xffff582aa6b4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582aa6b8   120  d63f03e0       constant
0xffff582aa6bc   124  d503201f       constant
0xffff582aa6c0   128  39c63e59       constant
0xffff582aa6c4   132  00000000       constant
0xffff582aa6c8   136  39cc22b1       constant
0xffff582aa6cc   140  00000000       constant
0xffff582aa6d0   144  39cf8dd1       constant
0xffff582aa6d4   148  00000000       constant
0xffff582aa6d8   152  39cb97b9       constant
0xffff582aa6dc   156  00000000       constant
0xffff582aa6e0   160  582aa500       constant
0xffff582aa6e4   164  0000ffff       constant
0xffff582aa6e8   168  39cb97b9       constant
0xffff582aa6ec   172  00000000       constant
0xffff582aa6f0   176  58222420       constant
0xffff582aa6f4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582aa650  embedded object  (0x39c63e59 Cell for 0)
0xffff582aa668  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582aa678  embedded object  (0x39cf8dd1 WeakCell for 0x32b27da9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582aa694  embedded object  (0x39cb97b9 <String[22]: internal/process/stdio>)
0xffff582aa698  code target (HANDLER)  (0xffff582aa500)
0xffff582aa6a0  embedded object  (0x39cb97b9 <String[22]: internal/process/stdio>)
0xffff582aa6ac  code target (BUILTIN)  (0xffff58222420)
0xffff582aa6b4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = newListener
compiler = unknown
Instructions (size = 144)
0xffff582ab640     0  sub csp, jssp, #0x8 (8)
0xffff582ab644     4  str x3, [jssp, #-8]!
0xffff582ab648     8  sub csp, jssp, #0x8 (8)
0xffff582ab64c    12  str x4, [jssp, #-8]!
0xffff582ab650    16  ldr x5, pc+88 (addr 0x0000ffff582ab6a8)    ;; object: 0x39cfabf9 WeakCell for 0x32b27e01 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582ab654    20  ldur x5, [x5, #7]
0xffff582ab658    24  tbz w5, #0, #+0x30 (addr 0xffff582ab688)
0xffff582ab65c    28  ldursw x4, [x5, #15]
0xffff582ab660    32  tbnz w4, #23, #+0x28 (addr 0xffff582ab688)
0xffff582ab664    36  ldur x4, [x5, #47]
0xffff582ab668    40  ldur x4, [x4, #71]
0xffff582ab66c    44  cmp x0, x4
0xffff582ab670    48  b.ne #+0x18 (addr 0xffff582ab688)
0xffff582ab674    52  ldr x4, [jssp], #8
0xffff582ab678    56  ldr x3, [jssp], #8
0xffff582ab67c    60  ldr x2, pc+52 (addr 0x0000ffff582ab6b0)    ;; object: 0x39cc3819 <String[11]: newListener>
0xffff582ab680    64  ldr x16, pc+56 (addr 0x0000ffff582ab6b8)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff582ab684    68  br x16
0xffff582ab688    72  ldr x2, pc+56 (addr 0x0000ffff582ab6c0)    ;; object: 0x39cc3819 <String[11]: newListener>
0xffff582ab68c    76  ldr x4, [jssp], #8
0xffff582ab690    80  ldr x3, [jssp], #8
0xffff582ab694    84  ldr x16, pc+52 (addr 0x0000ffff582ab6c8)    ;; code: BUILTIN
0xffff582ab698    88  br x16
0xffff582ab69c    92  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff582ab6a0    96  d63f03e0       constant
0xffff582ab6a4   100  d503201f       constant
0xffff582ab6a8   104  39cfabf9       constant
0xffff582ab6ac   108  00000000       constant
0xffff582ab6b0   112  39cc3819       constant
0xffff582ab6b4   116  00000000       constant
0xffff582ab6b8   120  5823cea0       constant
0xffff582ab6bc   124  0000ffff       constant
0xffff582ab6c0   128  39cc3819       constant
0xffff582ab6c4   132  00000000       constant
0xffff582ab6c8   136  58222420       constant
0xffff582ab6cc   140  0000ffff       constant


RelocInfo (size = 11)
0xffff582ab650  embedded object  (0x39cfabf9 WeakCell for 0x32b27e01 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582ab67c  embedded object  (0x39cc3819 <String[11]: newListener>)
0xffff582ab680  code target (HANDLER)  (0xffff5823cea0)
0xffff582ab688  embedded object  (0x39cc3819 <String[11]: newListener>)
0xffff582ab694  code target (BUILTIN)  (0xffff58222420)
0xffff582ab69c  constant pool (size 52)

kind = STUB
major_key = FastNewStrictArgumentsStub
name = FastNewStrictArgumentsStub
compiler = unknown
Instructions (size = 336)
0xffff582ab740     0  mov x2, fp
0xffff582ab744     4  b #+0x8 (addr 0xffff582ab74c)
0xffff582ab748     8  ldr x2, [x2]
0xffff582ab74c    12  ldur x3, [x2, #-16]
0xffff582ab750    16  cmp x3, x1
0xffff582ab754    20  b.ne #-0xc (addr 0xffff582ab748)
0xffff582ab758    24  ldr x3, [x2]
0xffff582ab75c    28  ldur x4, [x3, #-8]
0xffff582ab760    32  movz x16, #0xe00000000
0xffff582ab764    36  cmp x4, x16
0xffff582ab768    40  b.eq #+0x18 (addr 0xffff582ab780)
0xffff582ab76c    44  ldur x1, [x1, #31]
0xffff582ab770    48  ldursw x0, [x1, #99]
0xffff582ab774    52  add x2, x2, x0, lsl #3
0xffff582ab778    56  add x2, x2, #0x8 (8)
0xffff582ab77c    60  b #+0x10 (addr 0xffff582ab78c)
0xffff582ab780    64  ldursw x0, [x3, #-20]
0xffff582ab784    68  add x2, x3, x0, lsl #3
0xffff582ab788    72  add x2, x2, #0x8 (8)
0xffff582ab78c    76  movz x1, #0x30
0xffff582ab790    80  add x1, x1, x0, lsl #3
0xffff582ab794    84  ldr x5, pc+220 (addr 0x0000ffff582ab870)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff582ab798    88  ldp x3, x16, [x5]
0xffff582ab79c    92  adds x4, x3, x1
0xffff582ab7a0    96  ccmp x4, x16, #nzCv, lo
0xffff582ab7a4   100  b.hi #+0x64 (addr 0xffff582ab808)
0xffff582ab7a8   104  str x4, [x5]
0xffff582ab7ac   108  orr x3, x3, #0x1
0xffff582ab7b0   112  lsl x6, x0, #32
0xffff582ab7b4   116  ldr x1, [x26, #224]
0xffff582ab7b8   120  stur x1, [x3, #-1]
0xffff582ab7bc   124  stur x6, [x3, #7]
0xffff582ab7c0   128  add x4, x3, #0x10 (16)
0xffff582ab7c4   132  add x0, x4, x0, lsl #3
0xffff582ab7c8   136  cmp x4, x0
0xffff582ab7cc   140  b.eq #+0x18 (addr 0xffff582ab7e4)
0xffff582ab7d0   144  ldr x5, [x2]
0xffff582ab7d4   148  stur x5, [x4, #-1]
0xffff582ab7d8   152  sub x2, x2, #0x8 (8)
0xffff582ab7dc   156  add x4, x4, #0x8 (8)
0xffff582ab7e0   160  b #-0x18 (addr 0xffff582ab7c8)
0xffff582ab7e4   164  ldur x1, [cp, #39]
0xffff582ab7e8   168  movz x16, #0x2c7
0xffff582ab7ec   172  ldr x1, [x1, x16]
0xffff582ab7f0   176  stur x1, [x0, #-1]
0xffff582ab7f4   180  ldr x1, [x26, #304]
0xffff582ab7f8   184  stur x1, [x0, #7]
0xffff582ab7fc   188  stur x3, [x0, #15]
0xffff582ab800   192  stur x6, [x0, #23]
0xffff582ab804   196  ret
0xffff582ab808   200  movz x16, #0xc00000000
0xffff582ab80c   204  sub csp, jssp, #0x10 (16)
0xffff582ab810   208  stp fp, lr, [jssp, #-16]!
0xffff582ab814   212  sub csp, jssp, #0x10 (16)
0xffff582ab818   216  str x16, [jssp, #-8]!
0xffff582ab81c   220  ldr x17, pc+92 (addr 0x0000ffff582ab878)    ;; object: 0xffff582ab6e1 <Code: STUB>
0xffff582ab820   224  sub csp, jssp, #0x10 (16)
0xffff582ab824   228  str x17, [jssp, #-8]!
0xffff582ab828   232  add fp, jssp, #0x10 (16)
0xffff582ab82c   236  lsl x0, x0, #32
0xffff582ab830   240  lsl x1, x1, #32
0xffff582ab834   244  sub csp, jssp, #0x18 (24)
0xffff582ab838   248  stp x1, x2, [jssp, #-24]!
0xffff582ab83c   252  str x0, [jssp, #16]
0xffff582ab840   256  movz x0, #0x1
0xffff582ab844   260  ldr x1, pc+60 (addr 0x0000ffff582ab880)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff582ab848   264  ldr x16, pc+64 (addr 0x0000ffff582ab888)    ;; code: STUB, CEntryStub, minor: 4
0xffff582ab84c   268  blr x16
0xffff582ab850   272  mov x3, x0
0xffff582ab854   276  ldp x2, x0, [jssp], #16
0xffff582ab858   280  asr x0, x0, #32
0xffff582ab85c   284  mov jssp, fp
0xffff582ab860   288  ldp fp, lr, [jssp], #16
0xffff582ab864   292  b #-0xb4 (addr 0xffff582ab7b0)
0xffff582ab868   296  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582ab86c   300  d63f03e0       constant
0xffff582ab870   304  16e792c0       constant
0xffff582ab874   308  00000000       constant
0xffff582ab878   312  582ab6e1       constant
0xffff582ab87c   316  0000ffff       constant
0xffff582ab880   320  00e25898       constant
0xffff582ab884   324  00000000       constant
0xffff582ab888   328  58206060       constant
0xffff582ab88c   332  0000ffff       constant


RelocInfo (size = 16)
0xffff582ab794  external reference (Heap::NewSpaceAllocationTopAddress())  (0x16e792c0)
0xffff582ab81c  embedded object  (0xffff582ab6e1 <Code: STUB>)
0xffff582ab844  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff582ab848  code target (STUB)  (0xffff58206060)
0xffff582ab868  constant pool (size 40)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393222
name = CallICStub(args(6), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff582ab900     0  add x4, x2, x3, asr #29
0xffff582ab904     4  ldur x4, [x4, #15]
0xffff582ab908     8  ldur x5, [x4, #7]
0xffff582ab90c    12  cmp x5, x1
0xffff582ab910    16  b.ne #+0x2c (addr 0xffff582ab93c)
0xffff582ab914    20  tbz w1, #0, #+0x28 (addr 0xffff582ab93c)
0xffff582ab918    24  add x2, x2, x3, asr #29
0xffff582ab91c    28  add x2, x2, #0x18 (24)
0xffff582ab920    32  ldur x3, [x2, #-1]
0xffff582ab924    36  movz x16, #0x200000000
0xffff582ab928    40  add x3, x3, x16
0xffff582ab92c    44  stur x3, [x2, #-1]
0xffff582ab930    48  movz x0, #0x6
0xffff582ab934    52  ldr x16, pc+372 (addr 0x0000ffff582abaa8)    ;; code: BUILTIN
0xffff582ab938    56  br x16
0xffff582ab93c    60  ldr x16, [x26, #2400]
0xffff582ab940    64  cmp x4, x16
0xffff582ab944    68  b.eq #+0x78 (addr 0xffff582ab9bc)
0xffff582ab948    72  ldur x5, [x4, #-1]
0xffff582ab94c    76  ldr x16, [x26, #2736]
0xffff582ab950    80  cmp x5, x16
0xffff582ab954    84  b.ne #+0x40 (addr 0xffff582ab994)
0xffff582ab958    88  ldur x5, [cp, #39]
0xffff582ab95c    92  ldur x5, [x5, #95]
0xffff582ab960    96  cmp x1, x5
0xffff582ab964   100  b.ne #+0xec (addr 0xffff582aba50)
0xffff582ab968   104  movz x0, #0x6
0xffff582ab96c   108  add x2, x2, x3, asr #29
0xffff582ab970   112  add x2, x2, #0x18 (24)
0xffff582ab974   116  ldur x3, [x2, #-1]
0xffff582ab978   120  movz x16, #0x200000000
0xffff582ab97c   124  add x3, x3, x16
0xffff582ab980   128  stur x3, [x2, #-1]
0xffff582ab984   132  mov x2, x4
0xffff582ab988   136  mov x3, x1
0xffff582ab98c   140  ldr x16, pc+292 (addr 0x0000ffff582abab0)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff582ab990   144  br x16
0xffff582ab994   148  ldr x16, [x26, #2568]
0xffff582ab998   152  cmp x4, x16
0xffff582ab99c   156  b.eq #+0xb4 (addr 0xffff582aba50)
0xffff582ab9a0   160  ldur x5, [x4, #-1]
0xffff582ab9a4   164  ldrb w5, [x5, #11]
0xffff582ab9a8   168  cmp x5, #0xc9 (201)
0xffff582ab9ac   172  b.ne #+0xa4 (addr 0xffff582aba50)
0xffff582ab9b0   176  add x4, x2, x3, asr #29
0xffff582ab9b4   180  ldr x5, [x26, #2400]
0xffff582ab9b8   184  stur x5, [x4, #15]
0xffff582ab9bc   188  movz x0, #0x6
0xffff582ab9c0   192  ldr x16, pc+248 (addr 0x0000ffff582abab8)    ;; code: BUILTIN
0xffff582ab9c4   196  br x16
0xffff582ab9c8   200  tbz w1, #0, #+0x88 (addr 0xffff582aba50)
0xffff582ab9cc   204  ldur x5, [x1, #-1]
0xffff582ab9d0   208  ldrb w5, [x5, #11]
0xffff582ab9d4   212  cmp x5, #0xc9 (201)
0xffff582ab9d8   216  b.ne #+0x78 (addr 0xffff582aba50)
0xffff582ab9dc   220  ldur x5, [cp, #39]
0xffff582ab9e0   224  ldur x5, [x5, #95]
0xffff582ab9e4   228  cmp x1, x5
0xffff582ab9e8   232  b.eq #+0x68 (addr 0xffff582aba50)
0xffff582ab9ec   236  ldur x4, [x1, #39]
0xffff582ab9f0   240  ldur x4, [x4, #39]
0xffff582ab9f4   244  ldur x5, [cp, #39]
0xffff582ab9f8   248  cmp x4, x5
0xffff582ab9fc   252  b.ne #+0x54 (addr 0xffff582aba50)
0xffff582aba00   256  movz x5, #0x200000000
0xffff582aba04   260  adds x4, x2, x3, asr #29
0xffff582aba08   264  stur x5, [x4, #23]
0xffff582aba0c   268  movz x16, #0xc00000000
0xffff582aba10   272  sub csp, jssp, #0x10 (16)
0xffff582aba14   276  stp fp, lr, [jssp, #-16]!
0xffff582aba18   280  sub csp, jssp, #0x10 (16)
0xffff582aba1c   284  str x16, [jssp, #-8]!
0xffff582aba20   288  ldr x17, pc+160 (addr 0x0000ffff582abac0)    ;; object: 0xffff582ab8a1 <Code: CALL_IC>
0xffff582aba24   292  sub csp, jssp, #0x10 (16)
0xffff582aba28   296  str x17, [jssp, #-8]!
0xffff582aba2c   300  add fp, jssp, #0x10 (16)
0xffff582aba30   304  sub csp, jssp, #0x8 (8)
0xffff582aba34   308  str x1, [jssp, #-8]!
0xffff582aba38   312  ldr x16, pc+144 (addr 0x0000ffff582abac8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff582aba3c   316  blr x16
0xffff582aba40   320  ldr x1, [jssp], #8
0xffff582aba44   324  mov jssp, fp
0xffff582aba48   328  ldp fp, lr, [jssp], #16
0xffff582aba4c   332  b #-0x11c (addr 0xffff582ab930)
0xffff582aba50   336  movz x16, #0xc00000000
0xffff582aba54   340  sub csp, jssp, #0x10 (16)
0xffff582aba58   344  stp fp, lr, [jssp, #-16]!
0xffff582aba5c   348  sub csp, jssp, #0x10 (16)
0xffff582aba60   352  str x16, [jssp, #-8]!
0xffff582aba64   356  ldr x17, pc+108 (addr 0x0000ffff582abad0)    ;; object: 0xffff582ab8a1 <Code: CALL_IC>
0xffff582aba68   360  sub csp, jssp, #0x10 (16)
0xffff582aba6c   364  str x17, [jssp, #-8]!
0xffff582aba70   368  add fp, jssp, #0x10 (16)
0xffff582aba74   372  sub csp, jssp, #0x18 (24)
0xffff582aba78   376  stp x3, x2, [jssp, #-24]!
0xffff582aba7c   380  str x1, [jssp, #16]
0xffff582aba80   384  movz x0, #0x3
0xffff582aba84   388  ldr x1, pc+84 (addr 0x0000ffff582abad8)    ;; external reference (Runtime::CallIC_Miss)
0xffff582aba88   392  ldr x16, pc+88 (addr 0x0000ffff582abae0)    ;; code: STUB, CEntryStub, minor: 4
0xffff582aba8c   396  blr x16
0xffff582aba90   400  mov x1, x0
0xffff582aba94   404  mov jssp, fp
0xffff582aba98   408  ldp fp, lr, [jssp], #16
0xffff582aba9c   412  b #-0xe0 (addr 0xffff582ab9bc)
0xffff582abaa0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff582abaa4   420  d63f03e0       constant
0xffff582abaa8   424  5821e820       constant
0xffff582abaac   428  0000ffff       constant
0xffff582abab0   432  58233b00       constant
0xffff582abab4   436  0000ffff       constant
0xffff582abab8   440  5821f820       constant
0xffff582ababc   444  0000ffff       constant
0xffff582abac0   448  582ab8a1       constant
0xffff582abac4   452  0000ffff       constant
0xffff582abac8   456  5820ddc0       constant
0xffff582abacc   460  0000ffff       constant
0xffff582abad0   464  582ab8a1       constant
0xffff582abad4   468  0000ffff       constant
0xffff582abad8   472  00c86928       constant
0xffff582abadc   476  00000000       constant
0xffff582abae0   480  58206060       constant
0xffff582abae4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff582ab934  code target (BUILTIN)  (0xffff5821e820)
0xffff582ab98c  code target (STUB)  (0xffff58233b00)
0xffff582ab9c0  code target (BUILTIN)  (0xffff5821f820)
0xffff582aba20  embedded object  (0xffff582ab8a1 <Code: CALL_IC>)
0xffff582aba38  code target (STUB)  (0xffff5820ddc0)
0xffff582aba64  embedded object  (0xffff582ab8a1 <Code: CALL_IC>)
0xffff582aba84  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff582aba88  code target (STUB)  (0xffff58206060)
0xffff582abaa0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393222
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff582abb60     0  ldur x2, [fp, #-16]
0xffff582abb64     4  ldur x2, [x2, #31]
0xffff582abb68     8  ldur x2, [x2, #87]
0xffff582abb6c    12  ldr x16, pc+20 (addr 0x0000ffff582abb80)    ;; code: CALL_IC, GENERIC
0xffff582abb70    16  br x16
0xffff582abb74    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582abb78    24  d63f03e0       constant
0xffff582abb7c    28  d503201f       constant
0xffff582abb80    32  582ab900       constant
0xffff582abb84    36  0000ffff       constant


RelocInfo (size = 7)
0xffff582abb6c  code target (CALL_IC)  (0xffff582ab900)
0xffff582abb74  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 168)
0xffff582acde0     0  ldur x4, [x1, #15]
0xffff582acde4     4  ldur w5, [x4, #11]
0xffff582acde8     8  tbnz w2, #0, #+0x20 (addr 0xffff582ace08)
0xffff582acdec    12  asr x7, x2, #32
0xffff582acdf0    16  cmp w7, w5
0xffff582acdf4    20  b.hs #+0x3c (addr 0xffff582ace30)
0xffff582acdf8    24  add x0, x4, #0xf (15)
0xffff582acdfc    28  ldr x1, [x0, w7, sxtw #3]
0xffff582ace00    32  mov x0, x1
0xffff582ace04    36  ret
0xffff582ace08    40  ldur x16, [x2, #-1]
0xffff582ace0c    44  ldr x17, [x26, #120]
0xffff582ace10    48  cmp x16, x17
0xffff582ace14    52  b.ne #+0x2c (addr 0xffff582ace40)
0xffff582ace18    56  ldur d29, [x2, #7]
0xffff582ace1c    60  fcvtzs w7, d29
0xffff582ace20    64  scvtf d0, w7
0xffff582ace24    68  fcmp d29, d0
0xffff582ace28    72  b.ne #+0x18 (addr 0xffff582ace40)
0xffff582ace2c    76  b #-0x3c (addr 0xffff582acdf0)
0xffff582ace30    80  movz x16, #0x0
0xffff582ace34    84  sub csp, jssp, #0x10 (16)
0xffff582ace38    88  stp fp, lr, [jssp, #-16]!
0xffff582ace3c    92  bl #+0x14 (addr 0xffff582ace50)
0xffff582ace40    96  movz x16, #0x8
0xffff582ace44   100  sub csp, jssp, #0x10 (16)
0xffff582ace48   104  stp fp, lr, [jssp, #-16]!
0xffff582ace4c   108  bl #+0x4 (addr 0xffff582ace50)
0xffff582ace50   112  movz x17, #0xa00000000
0xffff582ace54   116  sub csp, jssp, #0x10 (16)
0xffff582ace58   120  stp x17, cp, [jssp, #-16]!
0xffff582ace5c   124  add fp, jssp, #0x10 (16)
0xffff582ace60   128  ldr x17, pc+24 (addr 0x0000ffff582ace78)    ;; lazy deoptimization bailout 0
0xffff582ace64   132  add x17, x17, x16
0xffff582ace68   136  br x17
0xffff582ace6c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582ace70   144  d63f03e0       constant
0xffff582ace74   148  d503201f       constant
0xffff582ace78   152  58006000       constant
0xffff582ace7c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582ace60  runtime entry
0xffff582ace6c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 168)
0xffff582acde0     0  ldur x4, [x1, #15]
0xffff582acde4     4  ldur w5, [x4, #11]
0xffff582acde8     8  tbnz w2, #0, #+0x20 (addr 0xffff582ace08)
0xffff582acdec    12  asr x7, x2, #32
0xffff582acdf0    16  cmp w7, w5
0xffff582acdf4    20  b.hs #+0x3c (addr 0xffff582ace30)
0xffff582acdf8    24  add x0, x4, #0xf (15)
0xffff582acdfc    28  ldr x1, [x0, w7, sxtw #3]
0xffff582ace00    32  mov x0, x1
0xffff582ace04    36  ret
0xffff582ace08    40  ldur x16, [x2, #-1]
0xffff582ace0c    44  ldr x17, [x26, #120]
0xffff582ace10    48  cmp x16, x17
0xffff582ace14    52  b.ne #+0x2c (addr 0xffff582ace40)
0xffff582ace18    56  ldur d29, [x2, #7]
0xffff582ace1c    60  fcvtzs w7, d29
0xffff582ace20    64  scvtf d0, w7
0xffff582ace24    68  fcmp d29, d0
0xffff582ace28    72  b.ne #+0x18 (addr 0xffff582ace40)
0xffff582ace2c    76  b #-0x3c (addr 0xffff582acdf0)
0xffff582ace30    80  movz x16, #0x0
0xffff582ace34    84  sub csp, jssp, #0x10 (16)
0xffff582ace38    88  stp fp, lr, [jssp, #-16]!
0xffff582ace3c    92  bl #+0x14 (addr 0xffff582ace50)
0xffff582ace40    96  movz x16, #0x8
0xffff582ace44   100  sub csp, jssp, #0x10 (16)
0xffff582ace48   104  stp fp, lr, [jssp, #-16]!
0xffff582ace4c   108  bl #+0x4 (addr 0xffff582ace50)
0xffff582ace50   112  movz x17, #0xa00000000
0xffff582ace54   116  sub csp, jssp, #0x10 (16)
0xffff582ace58   120  stp x17, cp, [jssp, #-16]!
0xffff582ace5c   124  add fp, jssp, #0x10 (16)
0xffff582ace60   128  ldr x17, pc+24 (addr 0x0000ffff582ace78)    ;; lazy deoptimization bailout 0
0xffff582ace64   132  add x17, x17, x16
0xffff582ace68   136  br x17
0xffff582ace6c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582ace70   144  d63f03e0       constant
0xffff582ace74   148  d503201f       constant
0xffff582ace78   152  58006000       constant
0xffff582ace7c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582ace60  runtime entry
0xffff582ace6c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = removeListener
compiler = unknown
Instructions (size = 144)
0xffff582ade80     0  sub csp, jssp, #0x8 (8)
0xffff582ade84     4  str x3, [jssp, #-8]!
0xffff582ade88     8  sub csp, jssp, #0x8 (8)
0xffff582ade8c    12  str x4, [jssp, #-8]!
0xffff582ade90    16  ldr x5, pc+88 (addr 0x0000ffff582adee8)    ;; object: 0x39cff459 WeakCell for 0x32b2caa9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582ade94    20  ldur x5, [x5, #7]
0xffff582ade98    24  tbz w5, #0, #+0x30 (addr 0xffff582adec8)
0xffff582ade9c    28  ldursw x4, [x5, #15]
0xffff582adea0    32  tbnz w4, #23, #+0x28 (addr 0xffff582adec8)
0xffff582adea4    36  ldur x4, [x5, #47]
0xffff582adea8    40  ldur x4, [x4, #95]
0xffff582adeac    44  cmp x0, x4
0xffff582adeb0    48  b.ne #+0x18 (addr 0xffff582adec8)
0xffff582adeb4    52  ldr x4, [jssp], #8
0xffff582adeb8    56  ldr x3, [jssp], #8
0xffff582adebc    60  ldr x2, pc+52 (addr 0x0000ffff582adef0)    ;; object: 0x39cc3a59 <String[14]: removeListener>
0xffff582adec0    64  ldr x16, pc+56 (addr 0x0000ffff582adef8)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff582adec4    68  br x16
0xffff582adec8    72  ldr x2, pc+56 (addr 0x0000ffff582adf00)    ;; object: 0x39cc3a59 <String[14]: removeListener>
0xffff582adecc    76  ldr x4, [jssp], #8
0xffff582aded0    80  ldr x3, [jssp], #8
0xffff582aded4    84  ldr x16, pc+52 (addr 0x0000ffff582adf08)    ;; code: BUILTIN
0xffff582aded8    88  br x16
0xffff582adedc    92  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff582adee0    96  d63f03e0       constant
0xffff582adee4   100  d503201f       constant
0xffff582adee8   104  39cff459       constant
0xffff582adeec   108  00000000       constant
0xffff582adef0   112  39cc3a59       constant
0xffff582adef4   116  00000000       constant
0xffff582adef8   120  5823cea0       constant
0xffff582adefc   124  0000ffff       constant
0xffff582adf00   128  39cc3a59       constant
0xffff582adf04   132  00000000       constant
0xffff582adf08   136  58222420       constant
0xffff582adf0c   140  0000ffff       constant


RelocInfo (size = 11)
0xffff582ade90  embedded object  (0x39cff459 WeakCell for 0x32b2caa9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582adebc  embedded object  (0x39cc3a59 <String[14]: removeListener>)
0xffff582adec0  code target (HANDLER)  (0xffff5823cea0)
0xffff582adec8  embedded object  (0x39cc3a59 <String[14]: removeListener>)
0xffff582aded4  code target (BUILTIN)  (0xffff58222420)
0xffff582adedc  constant pool (size 52)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = STRING*INTERNALIZED_STRING -> STRING
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 416)
0xffff582adf80     0  and x16, x0, x1
0xffff582adf84     4  tbz w16, #0, #+0xfc (addr 0xffff582ae080)
0xffff582adf88     8  ldur x11, [x1, #-1]
0xffff582adf8c    12  ldur x10, [x0, #-1]
0xffff582adf90    16  ldrb w11, [x11, #11]
0xffff582adf94    20  ldrb w10, [x10, #11]
0xffff582adf98    24  orr x12, x11, x10
0xffff582adf9c    28  tbnz w12, #7, #+0xe4 (addr 0xffff582ae080)
0xffff582adfa0    32  cmp x1, x0
0xffff582adfa4    36  b.ne #+0xc (addr 0xffff582adfb0)
0xffff582adfa8    40  movz x0, #0x0
0xffff582adfac    44  ret
0xffff582adfb0    48  orr x12, x11, x10
0xffff582adfb4    52  tbnz w12, #6, #+0x8 (addr 0xffff582adfbc)
0xffff582adfb8    56  ret
0xffff582adfbc    60  movz x16, #0x87
0xffff582adfc0    64  and x12, x11, x16
0xffff582adfc4    68  movz x16, #0x87
0xffff582adfc8    72  and x13, x10, x16
0xffff582adfcc    76  cmp x12, #0x4 (4)
0xffff582adfd0    80  ccmp x13, #4, #nzcv, eq
0xffff582adfd4    84  b.ne #+0x5c (addr 0xffff582ae030)
0xffff582adfd8    88  ldur x10, [x1, #15]
0xffff582adfdc    92  ldur x11, [x0, #15]
0xffff582adfe0    96  cmp x10, x11
0xffff582adfe4   100  b.eq #+0xc (addr 0xffff582adff0)
0xffff582adfe8   104  movz x0, #0x100000000
0xffff582adfec   108  ret
0xffff582adff0   112  cbnz x10, #+0xc (addr 0xffff582adffc)
0xffff582adff4   116  movz x0, #0x0
0xffff582adff8   120  ret
0xffff582adffc   124  asr x10, x10, #32
0xffff582ae000   128  add x11, x10, #0x17 (23)
0xffff582ae004   132  add x1, x1, x11
0xffff582ae008   136  add x0, x0, x11
0xffff582ae00c   140  neg x10, x10
0xffff582ae010   144  ldrb w11, [x1, x10]
0xffff582ae014   148  ldrb w12, [x0, x10]
0xffff582ae018   152  cmp x11, x12
0xffff582ae01c   156  b.ne #-0x34 (addr 0xffff582adfe8)
0xffff582ae020   160  add x10, x10, #0x1 (1)
0xffff582ae024   164  cbnz x10, #-0x14 (addr 0xffff582ae010)
0xffff582ae028   168  movz x0, #0x0
0xffff582ae02c   172  ret
0xffff582ae030   176  movz x16, #0xc00000000
0xffff582ae034   180  sub csp, jssp, #0x10 (16)
0xffff582ae038   184  stp fp, lr, [jssp, #-16]!
0xffff582ae03c   188  sub csp, jssp, #0x10 (16)
0xffff582ae040   192  str x16, [jssp, #-8]!
0xffff582ae044   196  ldr x17, pc+172 (addr 0x0000ffff582ae0f0)    ;; object: 0xffff582adf21 <Code: COMPARE_IC>
0xffff582ae048   200  sub csp, jssp, #0x10 (16)
0xffff582ae04c   204  str x17, [jssp, #-8]!
0xffff582ae050   208  add fp, jssp, #0x10 (16)
0xffff582ae054   212  sub csp, jssp, #0x10 (16)
0xffff582ae058   216  stp x0, x1, [jssp, #-16]!
0xffff582ae05c   220  movz x0, #0x2
0xffff582ae060   224  ldr x1, pc+152 (addr 0x0000ffff582ae0f8)    ;; external reference (Runtime::StringEqual)
0xffff582ae064   228  ldr x16, pc+156 (addr 0x0000ffff582ae100)    ;; code: STUB, CEntryStub, minor: 4
0xffff582ae068   232  blr x16
0xffff582ae06c   236  mov jssp, fp
0xffff582ae070   240  ldp fp, lr, [jssp], #16
0xffff582ae074   244  ldr x1, [x26, #64]
0xffff582ae078   248  sub x0, x0, x1
0xffff582ae07c   252  ret
0xffff582ae080   256  movz x16, #0xc00000000
0xffff582ae084   260  sub csp, jssp, #0x10 (16)
0xffff582ae088   264  stp fp, lr, [jssp, #-16]!
0xffff582ae08c   268  sub csp, jssp, #0x10 (16)
0xffff582ae090   272  str x16, [jssp, #-8]!
0xffff582ae094   276  ldr x17, pc+116 (addr 0x0000ffff582ae108)    ;; object: 0xffff582adf21 <Code: COMPARE_IC>
0xffff582ae098   280  sub csp, jssp, #0x10 (16)
0xffff582ae09c   284  str x17, [jssp, #-8]!
0xffff582ae0a0   288  add fp, jssp, #0x10 (16)
0xffff582ae0a4   292  sub csp, jssp, #0x18 (24)
0xffff582ae0a8   296  stp lr, x0, [jssp, #-24]!
0xffff582ae0ac   300  str x1, [jssp, #16]
0xffff582ae0b0   304  movz x10, #0x2f00000000
0xffff582ae0b4   308  sub csp, jssp, #0x18 (24)
0xffff582ae0b8   312  stp x10, x0, [jssp, #-24]!
0xffff582ae0bc   316  str x1, [jssp, #16]
0xffff582ae0c0   320  movz x0, #0x3
0xffff582ae0c4   324  ldr x1, pc+76 (addr 0x0000ffff582ae110)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582ae0c8   328  ldr x16, pc+80 (addr 0x0000ffff582ae118)    ;; code: STUB, CEntryStub, minor: 4
0xffff582ae0cc   332  blr x16
0xffff582ae0d0   336  add x11, x0, #0x5f (95)
0xffff582ae0d4   340  ldr x1, [jssp, #16]
0xffff582ae0d8   344  ldp lr, x0, [jssp], #24
0xffff582ae0dc   348  mov jssp, fp
0xffff582ae0e0   352  ldp fp, lr, [jssp], #16
0xffff582ae0e4   356  br x11
0xffff582ae0e8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582ae0ec   364  d63f03e0       constant
0xffff582ae0f0   368  582adf21       constant
0xffff582ae0f4   372  0000ffff       constant
0xffff582ae0f8   376  00ed0748       constant
0xffff582ae0fc   380  00000000       constant
0xffff582ae100   384  58206060       constant
0xffff582ae104   388  0000ffff       constant
0xffff582ae108   392  582adf21       constant
0xffff582ae10c   396  0000ffff       constant
0xffff582ae110   400  00c8a980       constant
0xffff582ae114   404  00000000       constant
0xffff582ae118   408  58206060       constant
0xffff582ae11c   412  0000ffff       constant


RelocInfo (size = 16)
0xffff582ae044  embedded object  (0xffff582adf21 <Code: COMPARE_IC>)
0xffff582ae060  external reference (Runtime::StringEqual)  (0xed0748)
0xffff582ae064  code target (STUB)  (0xffff58206060)
0xffff582ae094  embedded object  (0xffff582adf21 <Code: COMPARE_IC>)
0xffff582ae0c4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582ae0c8  code target (STUB)  (0xffff58206060)
0xffff582ae0e8  constant pool (size 56)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 262146
name = CallICStub(args(2), NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff582ae180     0  add x4, x2, x3, asr #29
0xffff582ae184     4  ldur x4, [x4, #15]
0xffff582ae188     8  ldur x5, [x4, #7]
0xffff582ae18c    12  cmp x5, x1
0xffff582ae190    16  b.ne #+0x2c (addr 0xffff582ae1bc)
0xffff582ae194    20  tbz w1, #0, #+0x28 (addr 0xffff582ae1bc)
0xffff582ae198    24  add x2, x2, x3, asr #29
0xffff582ae19c    28  add x2, x2, #0x18 (24)
0xffff582ae1a0    32  ldur x3, [x2, #-1]
0xffff582ae1a4    36  movz x16, #0x200000000
0xffff582ae1a8    40  add x3, x3, x16
0xffff582ae1ac    44  stur x3, [x2, #-1]
0xffff582ae1b0    48  movz x0, #0x2
0xffff582ae1b4    52  ldr x16, pc+372 (addr 0x0000ffff582ae328)    ;; code: BUILTIN
0xffff582ae1b8    56  br x16
0xffff582ae1bc    60  ldr x16, [x26, #2400]
0xffff582ae1c0    64  cmp x4, x16
0xffff582ae1c4    68  b.eq #+0x78 (addr 0xffff582ae23c)
0xffff582ae1c8    72  ldur x5, [x4, #-1]
0xffff582ae1cc    76  ldr x16, [x26, #2736]
0xffff582ae1d0    80  cmp x5, x16
0xffff582ae1d4    84  b.ne #+0x40 (addr 0xffff582ae214)
0xffff582ae1d8    88  ldur x5, [cp, #39]
0xffff582ae1dc    92  ldur x5, [x5, #95]
0xffff582ae1e0    96  cmp x1, x5
0xffff582ae1e4   100  b.ne #+0xec (addr 0xffff582ae2d0)
0xffff582ae1e8   104  movz x0, #0x2
0xffff582ae1ec   108  add x2, x2, x3, asr #29
0xffff582ae1f0   112  add x2, x2, #0x18 (24)
0xffff582ae1f4   116  ldur x3, [x2, #-1]
0xffff582ae1f8   120  movz x16, #0x200000000
0xffff582ae1fc   124  add x3, x3, x16
0xffff582ae200   128  stur x3, [x2, #-1]
0xffff582ae204   132  mov x2, x4
0xffff582ae208   136  mov x3, x1
0xffff582ae20c   140  ldr x16, pc+292 (addr 0x0000ffff582ae330)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff582ae210   144  br x16
0xffff582ae214   148  ldr x16, [x26, #2568]
0xffff582ae218   152  cmp x4, x16
0xffff582ae21c   156  b.eq #+0xb4 (addr 0xffff582ae2d0)
0xffff582ae220   160  ldur x5, [x4, #-1]
0xffff582ae224   164  ldrb w5, [x5, #11]
0xffff582ae228   168  cmp x5, #0xc9 (201)
0xffff582ae22c   172  b.ne #+0xa4 (addr 0xffff582ae2d0)
0xffff582ae230   176  add x4, x2, x3, asr #29
0xffff582ae234   180  ldr x5, [x26, #2400]
0xffff582ae238   184  stur x5, [x4, #15]
0xffff582ae23c   188  movz x0, #0x2
0xffff582ae240   192  ldr x16, pc+248 (addr 0x0000ffff582ae338)    ;; code: BUILTIN
0xffff582ae244   196  br x16
0xffff582ae248   200  tbz w1, #0, #+0x88 (addr 0xffff582ae2d0)
0xffff582ae24c   204  ldur x5, [x1, #-1]
0xffff582ae250   208  ldrb w5, [x5, #11]
0xffff582ae254   212  cmp x5, #0xc9 (201)
0xffff582ae258   216  b.ne #+0x78 (addr 0xffff582ae2d0)
0xffff582ae25c   220  ldur x5, [cp, #39]
0xffff582ae260   224  ldur x5, [x5, #95]
0xffff582ae264   228  cmp x1, x5
0xffff582ae268   232  b.eq #+0x68 (addr 0xffff582ae2d0)
0xffff582ae26c   236  ldur x4, [x1, #39]
0xffff582ae270   240  ldur x4, [x4, #39]
0xffff582ae274   244  ldur x5, [cp, #39]
0xffff582ae278   248  cmp x4, x5
0xffff582ae27c   252  b.ne #+0x54 (addr 0xffff582ae2d0)
0xffff582ae280   256  movz x5, #0x200000000
0xffff582ae284   260  adds x4, x2, x3, asr #29
0xffff582ae288   264  stur x5, [x4, #23]
0xffff582ae28c   268  movz x16, #0xc00000000
0xffff582ae290   272  sub csp, jssp, #0x10 (16)
0xffff582ae294   276  stp fp, lr, [jssp, #-16]!
0xffff582ae298   280  sub csp, jssp, #0x10 (16)
0xffff582ae29c   284  str x16, [jssp, #-8]!
0xffff582ae2a0   288  ldr x17, pc+160 (addr 0x0000ffff582ae340)    ;; object: 0xffff582ae121 <Code: CALL_IC>
0xffff582ae2a4   292  sub csp, jssp, #0x10 (16)
0xffff582ae2a8   296  str x17, [jssp, #-8]!
0xffff582ae2ac   300  add fp, jssp, #0x10 (16)
0xffff582ae2b0   304  sub csp, jssp, #0x8 (8)
0xffff582ae2b4   308  str x1, [jssp, #-8]!
0xffff582ae2b8   312  ldr x16, pc+144 (addr 0x0000ffff582ae348)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff582ae2bc   316  blr x16
0xffff582ae2c0   320  ldr x1, [jssp], #8
0xffff582ae2c4   324  mov jssp, fp
0xffff582ae2c8   328  ldp fp, lr, [jssp], #16
0xffff582ae2cc   332  b #-0x11c (addr 0xffff582ae1b0)
0xffff582ae2d0   336  movz x16, #0xc00000000
0xffff582ae2d4   340  sub csp, jssp, #0x10 (16)
0xffff582ae2d8   344  stp fp, lr, [jssp, #-16]!
0xffff582ae2dc   348  sub csp, jssp, #0x10 (16)
0xffff582ae2e0   352  str x16, [jssp, #-8]!
0xffff582ae2e4   356  ldr x17, pc+108 (addr 0x0000ffff582ae350)    ;; object: 0xffff582ae121 <Code: CALL_IC>
0xffff582ae2e8   360  sub csp, jssp, #0x10 (16)
0xffff582ae2ec   364  str x17, [jssp, #-8]!
0xffff582ae2f0   368  add fp, jssp, #0x10 (16)
0xffff582ae2f4   372  sub csp, jssp, #0x18 (24)
0xffff582ae2f8   376  stp x3, x2, [jssp, #-24]!
0xffff582ae2fc   380  str x1, [jssp, #16]
0xffff582ae300   384  movz x0, #0x3
0xffff582ae304   388  ldr x1, pc+84 (addr 0x0000ffff582ae358)    ;; external reference (Runtime::CallIC_Miss)
0xffff582ae308   392  ldr x16, pc+88 (addr 0x0000ffff582ae360)    ;; code: STUB, CEntryStub, minor: 4
0xffff582ae30c   396  blr x16
0xffff582ae310   400  mov x1, x0
0xffff582ae314   404  mov jssp, fp
0xffff582ae318   408  ldp fp, lr, [jssp], #16
0xffff582ae31c   412  b #-0xe0 (addr 0xffff582ae23c)
0xffff582ae320   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff582ae324   420  d63f03e0       constant
0xffff582ae328   424  5821e280       constant
0xffff582ae32c   428  0000ffff       constant
0xffff582ae330   432  58233b00       constant
0xffff582ae334   436  0000ffff       constant
0xffff582ae338   440  5821f560       constant
0xffff582ae33c   444  0000ffff       constant
0xffff582ae340   448  582ae121       constant
0xffff582ae344   452  0000ffff       constant
0xffff582ae348   456  5820ddc0       constant
0xffff582ae34c   460  0000ffff       constant
0xffff582ae350   464  582ae121       constant
0xffff582ae354   468  0000ffff       constant
0xffff582ae358   472  00c86928       constant
0xffff582ae35c   476  00000000       constant
0xffff582ae360   480  58206060       constant
0xffff582ae364   484  0000ffff       constant


RelocInfo (size = 19)
0xffff582ae1b4  code target (BUILTIN)  (0xffff5821e280)
0xffff582ae20c  code target (STUB)  (0xffff58233b00)
0xffff582ae240  code target (BUILTIN)  (0xffff5821f560)
0xffff582ae2a0  embedded object  (0xffff582ae121 <Code: CALL_IC>)
0xffff582ae2b8  code target (STUB)  (0xffff5820ddc0)
0xffff582ae2e4  embedded object  (0xffff582ae121 <Code: CALL_IC>)
0xffff582ae304  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff582ae308  code target (STUB)  (0xffff58206060)
0xffff582ae320  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 262146
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff582ae3e0     0  ldur x2, [fp, #-16]
0xffff582ae3e4     4  ldur x2, [x2, #31]
0xffff582ae3e8     8  ldur x2, [x2, #87]
0xffff582ae3ec    12  ldr x16, pc+20 (addr 0x0000ffff582ae400)    ;; code: CALL_IC, GENERIC
0xffff582ae3f0    16  br x16
0xffff582ae3f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582ae3f8    24  d63f03e0       constant
0xffff582ae3fc    28  d503201f       constant
0xffff582ae400    32  582ae180       constant
0xffff582ae404    36  0000ffff       constant


RelocInfo (size = 7)
0xffff582ae3ec  code target (CALL_IC)  (0xffff582ae180)
0xffff582ae3f4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582aed80     0  tbz w0, #0, #+0x98 (addr 0xffff582aee18)
0xffff582aed84     4  mov x2, x0
0xffff582aed88     8  ldur x4, [x1, #7]
0xffff582aed8c    12  stur x2, [x4, #79]
0xffff582aed90    16  add x3, x4, #0x4f (79)
0xffff582aed94    20  and x2, x2, #0xfffffffffff00000
0xffff582aed98    24  ldr x2, [x2, #8]
0xffff582aed9c    28  tbz w2, #1, #+0x24 (addr 0xffff582aedc0)
0xffff582aeda0    32  and x2, x4, #0xfffffffffff00000
0xffff582aeda4    36  ldr x2, [x2, #8]
0xffff582aeda8    40  tbz w2, #2, #+0x18 (addr 0xffff582aedc0)
0xffff582aedac    44  sub csp, jssp, #0x8 (8)
0xffff582aedb0    48  str lr, [jssp, #-8]!
0xffff582aedb4    52  ldr x16, pc+84 (addr 0x0000ffff582aee08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582aedb8    56  blr x16
0xffff582aedbc    60  ldr lr, [jssp], #8
0xffff582aedc0    64  stur x5, [x1, #-1]
0xffff582aedc4    68  tbz w5, #0, #+0x34 (addr 0xffff582aedf8)
0xffff582aedc8    72  sub x2, x1, #0x1 (1)
0xffff582aedcc    76  and x5, x5, #0xfffffffffff00000
0xffff582aedd0    80  ldr x5, [x5, #8]
0xffff582aedd4    84  tbz w5, #1, #+0x24 (addr 0xffff582aedf8)
0xffff582aedd8    88  and x5, x1, #0xfffffffffff00000
0xffff582aeddc    92  ldr x5, [x5, #8]
0xffff582aede0    96  tbz w5, #2, #+0x18 (addr 0xffff582aedf8)
0xffff582aede4   100  sub csp, jssp, #0x8 (8)
0xffff582aede8   104  str lr, [jssp, #-8]!
0xffff582aedec   108  ldr x16, pc+36 (addr 0x0000ffff582aee10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582aedf0   112  blr x16
0xffff582aedf4   116  ldr lr, [jssp], #8
0xffff582aedf8   120  ret
0xffff582aedfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582aee00   128  d63f03e0       constant
0xffff582aee04   132  d503201f       constant
0xffff582aee08   136  582378a0       constant
0xffff582aee0c   140  0000ffff       constant
0xffff582aee10   144  58238080       constant
0xffff582aee14   148  0000ffff       constant
0xffff582aee18   152  movz x16, #0x0
0xffff582aee1c   156  sub csp, jssp, #0x10 (16)
0xffff582aee20   160  stp fp, lr, [jssp, #-16]!
0xffff582aee24   164  bl #+0x4 (addr 0xffff582aee28)
0xffff582aee28   168  movz x17, #0xa00000000
0xffff582aee2c   172  sub csp, jssp, #0x10 (16)
0xffff582aee30   176  stp x17, cp, [jssp, #-16]!
0xffff582aee34   180  add fp, jssp, #0x10 (16)
0xffff582aee38   184  ldr x17, pc+24 (addr 0x0000ffff582aee50)    ;; lazy deoptimization bailout 0
0xffff582aee3c   188  add x17, x17, x16
0xffff582aee40   192  br x17
0xffff582aee44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582aee48   200  d63f03e0       constant
0xffff582aee4c   204  d503201f       constant
0xffff582aee50   208  58006000       constant
0xffff582aee54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582aedb4  code target (STUB)  (0xffff582378a0)
0xffff582aedec  code target (STUB)  (0xffff58238080)
0xffff582aedfc  constant pool (size 28)
0xffff582aee38  runtime entry
0xffff582aee44  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582aed80     0  tbz w0, #0, #+0x98 (addr 0xffff582aee18)
0xffff582aed84     4  mov x2, x0
0xffff582aed88     8  ldur x4, [x1, #7]
0xffff582aed8c    12  stur x2, [x4, #79]
0xffff582aed90    16  add x3, x4, #0x4f (79)
0xffff582aed94    20  and x2, x2, #0xfffffffffff00000
0xffff582aed98    24  ldr x2, [x2, #8]
0xffff582aed9c    28  tbz w2, #1, #+0x24 (addr 0xffff582aedc0)
0xffff582aeda0    32  and x2, x4, #0xfffffffffff00000
0xffff582aeda4    36  ldr x2, [x2, #8]
0xffff582aeda8    40  tbz w2, #2, #+0x18 (addr 0xffff582aedc0)
0xffff582aedac    44  sub csp, jssp, #0x8 (8)
0xffff582aedb0    48  str lr, [jssp, #-8]!
0xffff582aedb4    52  ldr x16, pc+84 (addr 0x0000ffff582aee08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582aedb8    56  blr x16
0xffff582aedbc    60  ldr lr, [jssp], #8
0xffff582aedc0    64  stur x5, [x1, #-1]
0xffff582aedc4    68  tbz w5, #0, #+0x34 (addr 0xffff582aedf8)
0xffff582aedc8    72  sub x2, x1, #0x1 (1)
0xffff582aedcc    76  and x5, x5, #0xfffffffffff00000
0xffff582aedd0    80  ldr x5, [x5, #8]
0xffff582aedd4    84  tbz w5, #1, #+0x24 (addr 0xffff582aedf8)
0xffff582aedd8    88  and x5, x1, #0xfffffffffff00000
0xffff582aeddc    92  ldr x5, [x5, #8]
0xffff582aede0    96  tbz w5, #2, #+0x18 (addr 0xffff582aedf8)
0xffff582aede4   100  sub csp, jssp, #0x8 (8)
0xffff582aede8   104  str lr, [jssp, #-8]!
0xffff582aedec   108  ldr x16, pc+36 (addr 0x0000ffff582aee10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582aedf0   112  blr x16
0xffff582aedf4   116  ldr lr, [jssp], #8
0xffff582aedf8   120  ret
0xffff582aedfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582aee00   128  d63f03e0       constant
0xffff582aee04   132  d503201f       constant
0xffff582aee08   136  582378a0       constant
0xffff582aee0c   140  0000ffff       constant
0xffff582aee10   144  58238080       constant
0xffff582aee14   148  0000ffff       constant
0xffff582aee18   152  movz x16, #0x0
0xffff582aee1c   156  sub csp, jssp, #0x10 (16)
0xffff582aee20   160  stp fp, lr, [jssp, #-16]!
0xffff582aee24   164  bl #+0x4 (addr 0xffff582aee28)
0xffff582aee28   168  movz x17, #0xa00000000
0xffff582aee2c   172  sub csp, jssp, #0x10 (16)
0xffff582aee30   176  stp x17, cp, [jssp, #-16]!
0xffff582aee34   180  add fp, jssp, #0x10 (16)
0xffff582aee38   184  ldr x17, pc+24 (addr 0x0000ffff582aee50)    ;; lazy deoptimization bailout 0
0xffff582aee3c   188  add x17, x17, x16
0xffff582aee40   192  br x17
0xffff582aee44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582aee48   200  d63f03e0       constant
0xffff582aee4c   204  d503201f       constant
0xffff582aee50   208  58006000       constant
0xffff582aee54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582aedb4  code target (STUB)  (0xffff582378a0)
0xffff582aedec  code target (STUB)  (0xffff58238080)
0xffff582aedfc  constant pool (size 28)
0xffff582aee38  runtime entry
0xffff582aee44  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = path
compiler = unknown
Instructions (size = 184)
0xffff582aeec0     0  sub csp, jssp, #0x8 (8)
0xffff582aeec4     4  str x3, [jssp, #-8]!
0xffff582aeec8     8  sub csp, jssp, #0x8 (8)
0xffff582aeecc    12  str x4, [jssp, #-8]!
0xffff582aeed0    16  ldr x3, pc+112 (addr 0x0000ffff582aef40)    ;; object: 0x39c63e59 Cell for 0
0xffff582aeed4    20  ldur x3, [x3, #7]
0xffff582aeed8    24  cmp x3, #0x0 (0)
0xffff582aeedc    28  b.ne #+0x44 (addr 0xffff582aef20)
0xffff582aeee0    32  tbz w0, #0, #+0x40 (addr 0xffff582aef20)
0xffff582aeee4    36  ldur x3, [x0, #-1]
0xffff582aeee8    40  ldr x4, pc+96 (addr 0x0000ffff582aef48)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582aeeec    44  ldur x4, [x4, #7]
0xffff582aeef0    48  cmp x3, x4
0xffff582aeef4    52  b.ne #+0x2c (addr 0xffff582aef20)
0xffff582aeef8    56  ldr x5, pc+88 (addr 0x0000ffff582aef50)    ;; object: 0x39cffb89 WeakCell for 0x32b2cbb1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582aeefc    60  ldur x5, [x5, #7]
0xffff582aef00    64  tbz w5, #0, #+0x20 (addr 0xffff582aef20)
0xffff582aef04    68  ldursw x4, [x5, #15]
0xffff582aef08    72  tbnz w4, #23, #+0x18 (addr 0xffff582aef20)
0xffff582aef0c    76  ldr x4, [jssp], #8
0xffff582aef10    80  ldr x3, [jssp], #8
0xffff582aef14    84  ldr x2, pc+68 (addr 0x0000ffff582aef58)    ;; object: 0x39cb2e69 <String[4]: path>
0xffff582aef18    88  ldr x16, pc+72 (addr 0x0000ffff582aef60)    ;; code: HANDLER, StoreTransitionStub, minor: 196618
0xffff582aef1c    92  br x16
0xffff582aef20    96  ldr x2, pc+72 (addr 0x0000ffff582aef68)    ;; object: 0x39cb2e69 <String[4]: path>
0xffff582aef24   100  ldr x4, [jssp], #8
0xffff582aef28   104  ldr x3, [jssp], #8
0xffff582aef2c   108  ldr x16, pc+68 (addr 0x0000ffff582aef70)    ;; code: BUILTIN
0xffff582aef30   112  br x16
0xffff582aef34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582aef38   120  d63f03e0       constant
0xffff582aef3c   124  d503201f       constant
0xffff582aef40   128  39c63e59       constant
0xffff582aef44   132  00000000       constant
0xffff582aef48   136  39cc22b1       constant
0xffff582aef4c   140  00000000       constant
0xffff582aef50   144  39cffb89       constant
0xffff582aef54   148  00000000       constant
0xffff582aef58   152  39cb2e69       constant
0xffff582aef5c   156  00000000       constant
0xffff582aef60   160  582aed80       constant
0xffff582aef64   164  0000ffff       constant
0xffff582aef68   168  39cb2e69       constant
0xffff582aef6c   172  00000000       constant
0xffff582aef70   176  58222420       constant
0xffff582aef74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582aeed0  embedded object  (0x39c63e59 Cell for 0)
0xffff582aeee8  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582aeef8  embedded object  (0x39cffb89 WeakCell for 0x32b2cbb1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582aef14  embedded object  (0x39cb2e69 <String[4]: path>)
0xffff582aef18  code target (HANDLER)  (0xffff582aed80)
0xffff582aef20  embedded object  (0x39cb2e69 <String[4]: path>)
0xffff582aef2c  code target (BUILTIN)  (0xffff58222420)
0xffff582aef34  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = charCodeAt
compiler = unknown
Instructions (size = 152)
0xffff582b0e00     0  sub csp, jssp, #0x8 (8)
0xffff582b0e04     4  str x3, [jssp, #-8]!
0xffff582b0e08     8  sub csp, jssp, #0x8 (8)
0xffff582b0e0c    12  str x0, [jssp, #-8]!
0xffff582b0e10    16  ldur x3, [cp, #39]
0xffff582b0e14    20  movz x16, #0x2e7
0xffff582b0e18    24  ldr x3, [x3, x16]
0xffff582b0e1c    28  ldur x3, [x3, #23]
0xffff582b0e20    32  ldur x3, [x3, #23]
0xffff582b0e24    36  ldr x0, pc+84 (addr 0x0000ffff582b0e78)    ;; object: 0x39c63e59 Cell for 0
0xffff582b0e28    40  ldur x0, [x0, #7]
0xffff582b0e2c    44  cmp x0, #0x0 (0)
0xffff582b0e30    48  b.ne #+0x1c (addr 0xffff582b0e4c)
0xffff582b0e34    52  ldur x0, [x3, #-1]
0xffff582b0e38    56  ldr x4, pc+72 (addr 0x0000ffff582b0e80)    ;; object: 0x22506e39 WeakCell for 0x32b156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff582b0e3c    60  ldur x4, [x4, #7]
0xffff582b0e40    64  cmp x0, x4
0xffff582b0e44    68  b.ne #+0x8 (addr 0xffff582b0e4c)
0xffff582b0e48    72  b #+0x14 (addr 0xffff582b0e5c)
0xffff582b0e4c    76  ldr x0, [jssp], #8
0xffff582b0e50    80  ldr x3, [jssp], #8
0xffff582b0e54    84  ldr x16, pc+52 (addr 0x0000ffff582b0e88)    ;; code: BUILTIN
0xffff582b0e58    88  br x16
0xffff582b0e5c    92  add jssp, jssp, #0x10 (16)
0xffff582b0e60    96  mov x1, x3
0xffff582b0e64   100  ldr x16, pc+44 (addr 0x0000ffff582b0e90)    ;; code: HANDLER, LoadConstantStub, minor: 5
0xffff582b0e68   104  br x16
0xffff582b0e6c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff582b0e70   112  d63f03e0       constant
0xffff582b0e74   116  d503201f       constant
0xffff582b0e78   120  39c63e59       constant
0xffff582b0e7c   124  00000000       constant
0xffff582b0e80   128  22506e39       constant
0xffff582b0e84   132  00000000       constant
0xffff582b0e88   136  582222e0       constant
0xffff582b0e8c   140  0000ffff       constant
0xffff582b0e90   144  58243500       constant
0xffff582b0e94   148  0000ffff       constant


RelocInfo (size = 10)
0xffff582b0e24  embedded object  (0x39c63e59 Cell for 0)
0xffff582b0e38  embedded object  (0x22506e39 WeakCell for 0x32b156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff582b0e54  code target (BUILTIN)  (0xffff582222e0)
0xffff582b0e64  code target (HANDLER)  (0xffff58243500)
0xffff582b0e6c  constant pool (size 44)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff582b0f00     0  movz x16, #0xc00000000
0xffff582b0f04     4  sub csp, jssp, #0x10 (16)
0xffff582b0f08     8  stp fp, lr, [jssp, #-16]!
0xffff582b0f0c    12  sub csp, jssp, #0x10 (16)
0xffff582b0f10    16  str x16, [jssp, #-8]!
0xffff582b0f14    20  ldr x17, pc+92 (addr 0x0000ffff582b0f70)    ;; object: 0xffff582b0ea1 <Code: COMPARE_IC>
0xffff582b0f18    24  sub csp, jssp, #0x10 (16)
0xffff582b0f1c    28  str x17, [jssp, #-8]!
0xffff582b0f20    32  add fp, jssp, #0x10 (16)
0xffff582b0f24    36  sub csp, jssp, #0x18 (24)
0xffff582b0f28    40  stp lr, x0, [jssp, #-24]!
0xffff582b0f2c    44  str x1, [jssp, #16]
0xffff582b0f30    48  movz x10, #0x3300000000
0xffff582b0f34    52  sub csp, jssp, #0x18 (24)
0xffff582b0f38    56  stp x10, x0, [jssp, #-24]!
0xffff582b0f3c    60  str x1, [jssp, #16]
0xffff582b0f40    64  movz x0, #0x3
0xffff582b0f44    68  ldr x1, pc+52 (addr 0x0000ffff582b0f78)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582b0f48    72  ldr x16, pc+56 (addr 0x0000ffff582b0f80)    ;; code: STUB, CEntryStub, minor: 4
0xffff582b0f4c    76  blr x16
0xffff582b0f50    80  add x11, x0, #0x5f (95)
0xffff582b0f54    84  ldr x1, [jssp, #16]
0xffff582b0f58    88  ldp lr, x0, [jssp], #24
0xffff582b0f5c    92  mov jssp, fp
0xffff582b0f60    96  ldp fp, lr, [jssp], #16
0xffff582b0f64   100  br x11
0xffff582b0f68   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582b0f6c   108  d63f03e0       constant
0xffff582b0f70   112  582b0ea1       constant
0xffff582b0f74   116  0000ffff       constant
0xffff582b0f78   120  00c8a980       constant
0xffff582b0f7c   124  00000000       constant
0xffff582b0f80   128  58206060       constant
0xffff582b0f84   132  0000ffff       constant


RelocInfo (size = 10)
0xffff582b0f14  embedded object  (0xffff582b0ea1 <Code: COMPARE_IC>)
0xffff582b0f44  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582b0f48  code target (STUB)  (0xffff58206060)
0xffff582b0f68  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff582b2220     0  orr x16, x0, x1
0xffff582b2224     4  tbnz w16, #0, #+0x10 (addr 0xffff582b2234)
0xffff582b2228     8  asr x1, x1, #32
0xffff582b222c    12  sub x0, x1, x0, asr #32
0xffff582b2230    16  ret
0xffff582b2234    20  movz x16, #0xc00000000
0xffff582b2238    24  sub csp, jssp, #0x10 (16)
0xffff582b223c    28  stp fp, lr, [jssp, #-16]!
0xffff582b2240    32  sub csp, jssp, #0x10 (16)
0xffff582b2244    36  str x16, [jssp, #-8]!
0xffff582b2248    40  ldr x17, pc+96 (addr 0x0000ffff582b22a8)    ;; object: 0xffff582b21c1 <Code: COMPARE_IC>
0xffff582b224c    44  sub csp, jssp, #0x10 (16)
0xffff582b2250    48  str x17, [jssp, #-8]!
0xffff582b2254    52  add fp, jssp, #0x10 (16)
0xffff582b2258    56  sub csp, jssp, #0x18 (24)
0xffff582b225c    60  stp lr, x0, [jssp, #-24]!
0xffff582b2260    64  str x1, [jssp, #16]
0xffff582b2264    68  movz x10, #0x3300000000
0xffff582b2268    72  sub csp, jssp, #0x18 (24)
0xffff582b226c    76  stp x10, x0, [jssp, #-24]!
0xffff582b2270    80  str x1, [jssp, #16]
0xffff582b2274    84  movz x0, #0x3
0xffff582b2278    88  ldr x1, pc+56 (addr 0x0000ffff582b22b0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582b227c    92  ldr x16, pc+60 (addr 0x0000ffff582b22b8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582b2280    96  blr x16
0xffff582b2284   100  add x11, x0, #0x5f (95)
0xffff582b2288   104  ldr x1, [jssp, #16]
0xffff582b228c   108  ldp lr, x0, [jssp], #24
0xffff582b2290   112  mov jssp, fp
0xffff582b2294   116  ldp fp, lr, [jssp], #16
0xffff582b2298   120  br x11
0xffff582b229c   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff582b22a0   128  d63f03e0       constant
0xffff582b22a4   132  d503201f       constant
0xffff582b22a8   136  582b21c1       constant
0xffff582b22ac   140  0000ffff       constant
0xffff582b22b0   144  00c8a980       constant
0xffff582b22b4   148  00000000       constant
0xffff582b22b8   152  58206060       constant
0xffff582b22bc   156  0000ffff       constant


RelocInfo (size = 10)
0xffff582b2248  embedded object  (0xffff582b21c1 <Code: COMPARE_IC>)
0xffff582b2278  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582b227c  code target (STUB)  (0xffff58206060)
0xffff582b229c  constant pool (size 36)


kind = HANDLER
major_key = <NoCache>Stub
name = slice
compiler = unknown
Instructions (size = 152)
0xffff582b29a0     0  sub csp, jssp, #0x8 (8)
0xffff582b29a4     4  str x3, [jssp, #-8]!
0xffff582b29a8     8  sub csp, jssp, #0x8 (8)
0xffff582b29ac    12  str x0, [jssp, #-8]!
0xffff582b29b0    16  ldur x3, [cp, #39]
0xffff582b29b4    20  movz x16, #0x2e7
0xffff582b29b8    24  ldr x3, [x3, x16]
0xffff582b29bc    28  ldur x3, [x3, #23]
0xffff582b29c0    32  ldur x3, [x3, #23]
0xffff582b29c4    36  ldr x0, pc+84 (addr 0x0000ffff582b2a18)    ;; object: 0x39c63e59 Cell for 0
0xffff582b29c8    40  ldur x0, [x0, #7]
0xffff582b29cc    44  cmp x0, #0x0 (0)
0xffff582b29d0    48  b.ne #+0x1c (addr 0xffff582b29ec)
0xffff582b29d4    52  ldur x0, [x3, #-1]
0xffff582b29d8    56  ldr x4, pc+72 (addr 0x0000ffff582b2a20)    ;; object: 0x22506e39 WeakCell for 0x32b156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff582b29dc    60  ldur x4, [x4, #7]
0xffff582b29e0    64  cmp x0, x4
0xffff582b29e4    68  b.ne #+0x8 (addr 0xffff582b29ec)
0xffff582b29e8    72  b #+0x14 (addr 0xffff582b29fc)
0xffff582b29ec    76  ldr x0, [jssp], #8
0xffff582b29f0    80  ldr x3, [jssp], #8
0xffff582b29f4    84  ldr x16, pc+52 (addr 0x0000ffff582b2a28)    ;; code: BUILTIN
0xffff582b29f8    88  br x16
0xffff582b29fc    92  add jssp, jssp, #0x10 (16)
0xffff582b2a00    96  mov x1, x3
0xffff582b2a04   100  ldr x16, pc+44 (addr 0x0000ffff582b2a30)    ;; code: HANDLER, LoadConstantStub, minor: 18
0xffff582b2a08   104  br x16
0xffff582b2a0c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff582b2a10   112  d63f03e0       constant
0xffff582b2a14   116  d503201f       constant
0xffff582b2a18   120  39c63e59       constant
0xffff582b2a1c   124  00000000       constant
0xffff582b2a20   128  22506e39       constant
0xffff582b2a24   132  00000000       constant
0xffff582b2a28   136  582222e0       constant
0xffff582b2a2c   140  0000ffff       constant
0xffff582b2a30   144  5827ccc0       constant
0xffff582b2a34   148  0000ffff       constant


RelocInfo (size = 10)
0xffff582b29c4  embedded object  (0x39c63e59 Cell for 0)
0xffff582b29d8  embedded object  (0x22506e39 WeakCell for 0x32b156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff582b29f4  code target (BUILTIN)  (0xffff582222e0)
0xffff582b2a04  code target (HANDLER)  (0xffff5827ccc0)
0xffff582b2a0c  constant pool (size 44)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff582b2b40     0  ldur x6, [x1, #7]
0xffff582b2b44     4  ldur w7, [x6, #11]
0xffff582b2b48     8  adds w8, w7, #0x3 (3)
0xffff582b2b4c    12  b.vs #+0x1dc (addr 0xffff582b2d28)
0xffff582b2b50    16  movz w16, #0x95ff
0xffff582b2b54    20  cmp w8, w16, lsl #1
0xffff582b2b58    24  b.hs #+0x1e0 (addr 0xffff582b2d38)
0xffff582b2b5c    28  lsl x9, x8, #32
0xffff582b2b60    32  lsl w10, w8, #3
0xffff582b2b64    36  add w10, w10, #0x10 (16)
0xffff582b2b68    40  sxtw x10, w10
0xffff582b2b6c    44  movz x11, #0x92c0
0xffff582b2b70    48  movk x11, #0x16e7, lsl #16
0xffff582b2b74    52  ldp x13, x16, [x11]
0xffff582b2b78    56  adds x12, x13, x10
0xffff582b2b7c    60  ccmp x12, x16, #nzCv, lo
0xffff582b2b80    64  b.hi #+0xf8 (addr 0xffff582b2c78)
0xffff582b2b84    68  str x12, [x11]
0xffff582b2b88    72  orr x13, x13, #0x1
0xffff582b2b8c    76  ldr x10, pc+348 (addr 0x0000ffff582b2ce8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582b2b90    80  stur x10, [x13, #-1]
0xffff582b2b94    84  stur x9, [x13, #7]
0xffff582b2b98    88  cmp w7, w8
0xffff582b2b9c    92  b.ge #+0x18 (addr 0xffff582b2bb4)
0xffff582b2ba0    96  sub w8, w8, #0x1 (1)
0xffff582b2ba4   100  ldr x9, pc+332 (addr 0x0000ffff582b2cf0)    ;; object: 0x39c04241 <undefined>
0xffff582b2ba8   104  add x10, x13, #0xf (15)
0xffff582b2bac   108  str x9, [x10, w8, sxtw #3]
0xffff582b2bb0   112  b #-0x18 (addr 0xffff582b2b98)
0xffff582b2bb4   116  cmp w7, #0x0 (0)
0xffff582b2bb8   120  b.le #+0x1c (addr 0xffff582b2bd4)
0xffff582b2bbc   124  sub w7, w7, #0x1 (1)
0xffff582b2bc0   128  add x8, x6, #0xf (15)
0xffff582b2bc4   132  ldr x9, [x8, w7, sxtw #3]
0xffff582b2bc8   136  add x8, x13, #0xf (15)
0xffff582b2bcc   140  str x9, [x8, w7, sxtw #3]
0xffff582b2bd0   144  b #-0x1c (addr 0xffff582b2bb4)
0xffff582b2bd4   148  stur x13, [x1, #7]
0xffff582b2bd8   152  add x6, x1, #0x7 (7)
0xffff582b2bdc   156  and x13, x1, #0xfffffffffff00000
0xffff582b2be0   160  ldr x13, [x13, #8]
0xffff582b2be4   164  tbz w13, #2, #+0x18 (addr 0xffff582b2bfc)
0xffff582b2be8   168  sub csp, jssp, #0x8 (8)
0xffff582b2bec   172  str lr, [jssp, #-8]!
0xffff582b2bf0   176  ldr x16, pc+264 (addr 0x0000ffff582b2cf8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff582b2bf4   180  blr x16
0xffff582b2bf8   184  ldr lr, [jssp], #8
0xffff582b2bfc   188  tbz w0, #0, #+0x14c (addr 0xffff582b2d48)
0xffff582b2c00   192  mov x2, x0
0xffff582b2c04   196  ldur x4, [x1, #7]
0xffff582b2c08   200  stur x2, [x4, #87]
0xffff582b2c0c   204  add x3, x4, #0x57 (87)
0xffff582b2c10   208  and x2, x2, #0xfffffffffff00000
0xffff582b2c14   212  ldr x2, [x2, #8]
0xffff582b2c18   216  tbz w2, #1, #+0x24 (addr 0xffff582b2c3c)
0xffff582b2c1c   220  and x2, x4, #0xfffffffffff00000
0xffff582b2c20   224  ldr x2, [x2, #8]
0xffff582b2c24   228  tbz w2, #2, #+0x18 (addr 0xffff582b2c3c)
0xffff582b2c28   232  sub csp, jssp, #0x8 (8)
0xffff582b2c2c   236  str lr, [jssp, #-8]!
0xffff582b2c30   240  ldr x16, pc+208 (addr 0x0000ffff582b2d00)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582b2c34   244  blr x16
0xffff582b2c38   248  ldr lr, [jssp], #8
0xffff582b2c3c   252  stur x5, [x1, #-1]
0xffff582b2c40   256  tbz w5, #0, #+0x34 (addr 0xffff582b2c74)
0xffff582b2c44   260  sub x2, x1, #0x1 (1)
0xffff582b2c48   264  and x5, x5, #0xfffffffffff00000
0xffff582b2c4c   268  ldr x5, [x5, #8]
0xffff582b2c50   272  tbz w5, #1, #+0x24 (addr 0xffff582b2c74)
0xffff582b2c54   276  and x5, x1, #0xfffffffffff00000
0xffff582b2c58   280  ldr x5, [x5, #8]
0xffff582b2c5c   284  tbz w5, #2, #+0x18 (addr 0xffff582b2c74)
0xffff582b2c60   288  sub csp, jssp, #0x8 (8)
0xffff582b2c64   292  str lr, [jssp, #-8]!
0xffff582b2c68   296  ldr x16, pc+160 (addr 0x0000ffff582b2d08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582b2c6c   300  blr x16
0xffff582b2c70   304  ldr lr, [jssp], #8
0xffff582b2c74   308  ret
0xffff582b2c78   312  sub csp, jssp, #0x10 (16)
0xffff582b2c7c   316  stp fp, lr, [jssp, #-16]!
0xffff582b2c80   320  movz fp, #0xa00000000
0xffff582b2c84   324  sub csp, jssp, #0x8 (8)
0xffff582b2c88   328  str fp, [jssp, #-8]!
0xffff582b2c8c   332  add fp, jssp, #0x8 (8)
0xffff582b2c90   336  movz x13, #0x0
0xffff582b2c94   340  mov x16, lr
0xffff582b2c98   344  ldr x17, pc+120 (addr 0x0000ffff582b2d10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582b2c9c   348  blr x17
0xffff582b2ca0   352  lsl x0, x10, #32
0xffff582b2ca4   356  movz x10, #0x0
0xffff582b2ca8   360  sub csp, jssp, #0x10 (16)
0xffff582b2cac   364  stp x10, x0, [jssp, #-16]!
0xffff582b2cb0   368  movz x0, #0x2
0xffff582b2cb4   372  movz x1, #0x5b88
0xffff582b2cb8   376  movk x1, #0xe2, lsl #16
0xffff582b2cbc   380  ldr x16, pc+92 (addr 0x0000ffff582b2d18)    ;; code: STUB, CEntryStub, minor: 5
0xffff582b2cc0   384  blr x16
0xffff582b2cc4   388  str x0, [jssp, #104]
0xffff582b2cc8   392  ldr x16, pc+88 (addr 0x0000ffff582b2d20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582b2ccc   396  blr x16
0xffff582b2cd0   400  ldr lr, [jssp, #16]
0xffff582b2cd4   404  ldp xzr, fp, [jssp], #24
0xffff582b2cd8   408  b #-0x14c (addr 0xffff582b2b8c)
0xffff582b2cdc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff582b2ce0   416  d63f03e0       constant
0xffff582b2ce4   420  d503201f       constant
0xffff582b2ce8   424  32b04259       constant
0xffff582b2cec   428  00000000       constant
0xffff582b2cf0   432  39c04241       constant
0xffff582b2cf4   436  00000000       constant
0xffff582b2cf8   440  582370c0       constant
0xffff582b2cfc   444  0000ffff       constant
0xffff582b2d00   448  582378a0       constant
0xffff582b2d04   452  0000ffff       constant
0xffff582b2d08   456  58238080       constant
0xffff582b2d0c   460  0000ffff       constant
0xffff582b2d10   464  58206820       constant
0xffff582b2d14   468  0000ffff       constant
0xffff582b2d18   472  58206260       constant
0xffff582b2d1c   476  0000ffff       constant
0xffff582b2d20   480  582068e0       constant
0xffff582b2d24   484  0000ffff       constant
0xffff582b2d28   488  movz x16, #0x0
0xffff582b2d2c   492  sub csp, jssp, #0x10 (16)
0xffff582b2d30   496  stp fp, lr, [jssp, #-16]!
0xffff582b2d34   500  bl #+0x24 (addr 0xffff582b2d58)
0xffff582b2d38   504  movz x16, #0x8
0xffff582b2d3c   508  sub csp, jssp, #0x10 (16)
0xffff582b2d40   512  stp fp, lr, [jssp, #-16]!
0xffff582b2d44   516  bl #+0x14 (addr 0xffff582b2d58)
0xffff582b2d48   520  movz x16, #0x10
0xffff582b2d4c   524  sub csp, jssp, #0x10 (16)
0xffff582b2d50   528  stp fp, lr, [jssp, #-16]!
0xffff582b2d54   532  bl #+0x4 (addr 0xffff582b2d58)
0xffff582b2d58   536  movz x17, #0xa00000000
0xffff582b2d5c   540  sub csp, jssp, #0x10 (16)
0xffff582b2d60   544  stp x17, cp, [jssp, #-16]!
0xffff582b2d64   548  add fp, jssp, #0x10 (16)
0xffff582b2d68   552  ldr x17, pc+24 (addr 0x0000ffff582b2d80)    ;; lazy deoptimization bailout 0
0xffff582b2d6c   556  add x17, x17, x16
0xffff582b2d70   560  br x17
0xffff582b2d74   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582b2d78   568  d63f03e0       constant
0xffff582b2d7c   572  d503201f       constant
0xffff582b2d80   576  58006000       constant
0xffff582b2d84   580  0000ffff       constant


Safepoints (size = 21)
0xffff582b2cc4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff582b2b8c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582b2ba4  embedded object  (0x39c04241 <undefined>)
0xffff582b2bf0  code target (STUB)  (0xffff582370c0)
0xffff582b2c30  code target (STUB)  (0xffff582378a0)
0xffff582b2c68  code target (STUB)  (0xffff58238080)
0xffff582b2c98  code target (STUB)  (0xffff58206820)
0xffff582b2cbc  code target (STUB)  (0xffff58206260)
0xffff582b2cc8  code target (STUB)  (0xffff582068e0)
0xffff582b2cdc  constant pool (size 76)
0xffff582b2d68  runtime entry
0xffff582b2d74  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff582b2b40     0  ldur x6, [x1, #7]
0xffff582b2b44     4  ldur w7, [x6, #11]
0xffff582b2b48     8  adds w8, w7, #0x3 (3)
0xffff582b2b4c    12  b.vs #+0x1dc (addr 0xffff582b2d28)
0xffff582b2b50    16  movz w16, #0x95ff
0xffff582b2b54    20  cmp w8, w16, lsl #1
0xffff582b2b58    24  b.hs #+0x1e0 (addr 0xffff582b2d38)
0xffff582b2b5c    28  lsl x9, x8, #32
0xffff582b2b60    32  lsl w10, w8, #3
0xffff582b2b64    36  add w10, w10, #0x10 (16)
0xffff582b2b68    40  sxtw x10, w10
0xffff582b2b6c    44  movz x11, #0x92c0
0xffff582b2b70    48  movk x11, #0x16e7, lsl #16
0xffff582b2b74    52  ldp x13, x16, [x11]
0xffff582b2b78    56  adds x12, x13, x10
0xffff582b2b7c    60  ccmp x12, x16, #nzCv, lo
0xffff582b2b80    64  b.hi #+0xf8 (addr 0xffff582b2c78)
0xffff582b2b84    68  str x12, [x11]
0xffff582b2b88    72  orr x13, x13, #0x1
0xffff582b2b8c    76  ldr x10, pc+348 (addr 0x0000ffff582b2ce8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582b2b90    80  stur x10, [x13, #-1]
0xffff582b2b94    84  stur x9, [x13, #7]
0xffff582b2b98    88  cmp w7, w8
0xffff582b2b9c    92  b.ge #+0x18 (addr 0xffff582b2bb4)
0xffff582b2ba0    96  sub w8, w8, #0x1 (1)
0xffff582b2ba4   100  ldr x9, pc+332 (addr 0x0000ffff582b2cf0)    ;; object: 0x39c04241 <undefined>
0xffff582b2ba8   104  add x10, x13, #0xf (15)
0xffff582b2bac   108  str x9, [x10, w8, sxtw #3]
0xffff582b2bb0   112  b #-0x18 (addr 0xffff582b2b98)
0xffff582b2bb4   116  cmp w7, #0x0 (0)
0xffff582b2bb8   120  b.le #+0x1c (addr 0xffff582b2bd4)
0xffff582b2bbc   124  sub w7, w7, #0x1 (1)
0xffff582b2bc0   128  add x8, x6, #0xf (15)
0xffff582b2bc4   132  ldr x9, [x8, w7, sxtw #3]
0xffff582b2bc8   136  add x8, x13, #0xf (15)
0xffff582b2bcc   140  str x9, [x8, w7, sxtw #3]
0xffff582b2bd0   144  b #-0x1c (addr 0xffff582b2bb4)
0xffff582b2bd4   148  stur x13, [x1, #7]
0xffff582b2bd8   152  add x6, x1, #0x7 (7)
0xffff582b2bdc   156  and x13, x1, #0xfffffffffff00000
0xffff582b2be0   160  ldr x13, [x13, #8]
0xffff582b2be4   164  tbz w13, #2, #+0x18 (addr 0xffff582b2bfc)
0xffff582b2be8   168  sub csp, jssp, #0x8 (8)
0xffff582b2bec   172  str lr, [jssp, #-8]!
0xffff582b2bf0   176  ldr x16, pc+264 (addr 0x0000ffff582b2cf8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff582b2bf4   180  blr x16
0xffff582b2bf8   184  ldr lr, [jssp], #8
0xffff582b2bfc   188  tbz w0, #0, #+0x14c (addr 0xffff582b2d48)
0xffff582b2c00   192  mov x2, x0
0xffff582b2c04   196  ldur x4, [x1, #7]
0xffff582b2c08   200  stur x2, [x4, #87]
0xffff582b2c0c   204  add x3, x4, #0x57 (87)
0xffff582b2c10   208  and x2, x2, #0xfffffffffff00000
0xffff582b2c14   212  ldr x2, [x2, #8]
0xffff582b2c18   216  tbz w2, #1, #+0x24 (addr 0xffff582b2c3c)
0xffff582b2c1c   220  and x2, x4, #0xfffffffffff00000
0xffff582b2c20   224  ldr x2, [x2, #8]
0xffff582b2c24   228  tbz w2, #2, #+0x18 (addr 0xffff582b2c3c)
0xffff582b2c28   232  sub csp, jssp, #0x8 (8)
0xffff582b2c2c   236  str lr, [jssp, #-8]!
0xffff582b2c30   240  ldr x16, pc+208 (addr 0x0000ffff582b2d00)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582b2c34   244  blr x16
0xffff582b2c38   248  ldr lr, [jssp], #8
0xffff582b2c3c   252  stur x5, [x1, #-1]
0xffff582b2c40   256  tbz w5, #0, #+0x34 (addr 0xffff582b2c74)
0xffff582b2c44   260  sub x2, x1, #0x1 (1)
0xffff582b2c48   264  and x5, x5, #0xfffffffffff00000
0xffff582b2c4c   268  ldr x5, [x5, #8]
0xffff582b2c50   272  tbz w5, #1, #+0x24 (addr 0xffff582b2c74)
0xffff582b2c54   276  and x5, x1, #0xfffffffffff00000
0xffff582b2c58   280  ldr x5, [x5, #8]
0xffff582b2c5c   284  tbz w5, #2, #+0x18 (addr 0xffff582b2c74)
0xffff582b2c60   288  sub csp, jssp, #0x8 (8)
0xffff582b2c64   292  str lr, [jssp, #-8]!
0xffff582b2c68   296  ldr x16, pc+160 (addr 0x0000ffff582b2d08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582b2c6c   300  blr x16
0xffff582b2c70   304  ldr lr, [jssp], #8
0xffff582b2c74   308  ret
0xffff582b2c78   312  sub csp, jssp, #0x10 (16)
0xffff582b2c7c   316  stp fp, lr, [jssp, #-16]!
0xffff582b2c80   320  movz fp, #0xa00000000
0xffff582b2c84   324  sub csp, jssp, #0x8 (8)
0xffff582b2c88   328  str fp, [jssp, #-8]!
0xffff582b2c8c   332  add fp, jssp, #0x8 (8)
0xffff582b2c90   336  movz x13, #0x0
0xffff582b2c94   340  mov x16, lr
0xffff582b2c98   344  ldr x17, pc+120 (addr 0x0000ffff582b2d10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582b2c9c   348  blr x17
0xffff582b2ca0   352  lsl x0, x10, #32
0xffff582b2ca4   356  movz x10, #0x0
0xffff582b2ca8   360  sub csp, jssp, #0x10 (16)
0xffff582b2cac   364  stp x10, x0, [jssp, #-16]!
0xffff582b2cb0   368  movz x0, #0x2
0xffff582b2cb4   372  movz x1, #0x5b88
0xffff582b2cb8   376  movk x1, #0xe2, lsl #16
0xffff582b2cbc   380  ldr x16, pc+92 (addr 0x0000ffff582b2d18)    ;; code: STUB, CEntryStub, minor: 5
0xffff582b2cc0   384  blr x16
0xffff582b2cc4   388  str x0, [jssp, #104]
0xffff582b2cc8   392  ldr x16, pc+88 (addr 0x0000ffff582b2d20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582b2ccc   396  blr x16
0xffff582b2cd0   400  ldr lr, [jssp, #16]
0xffff582b2cd4   404  ldp xzr, fp, [jssp], #24
0xffff582b2cd8   408  b #-0x14c (addr 0xffff582b2b8c)
0xffff582b2cdc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff582b2ce0   416  d63f03e0       constant
0xffff582b2ce4   420  d503201f       constant
0xffff582b2ce8   424  32b04259       constant
0xffff582b2cec   428  00000000       constant
0xffff582b2cf0   432  39c04241       constant
0xffff582b2cf4   436  00000000       constant
0xffff582b2cf8   440  582370c0       constant
0xffff582b2cfc   444  0000ffff       constant
0xffff582b2d00   448  582378a0       constant
0xffff582b2d04   452  0000ffff       constant
0xffff582b2d08   456  58238080       constant
0xffff582b2d0c   460  0000ffff       constant
0xffff582b2d10   464  58206820       constant
0xffff582b2d14   468  0000ffff       constant
0xffff582b2d18   472  58206260       constant
0xffff582b2d1c   476  0000ffff       constant
0xffff582b2d20   480  582068e0       constant
0xffff582b2d24   484  0000ffff       constant
0xffff582b2d28   488  movz x16, #0x0
0xffff582b2d2c   492  sub csp, jssp, #0x10 (16)
0xffff582b2d30   496  stp fp, lr, [jssp, #-16]!
0xffff582b2d34   500  bl #+0x24 (addr 0xffff582b2d58)
0xffff582b2d38   504  movz x16, #0x8
0xffff582b2d3c   508  sub csp, jssp, #0x10 (16)
0xffff582b2d40   512  stp fp, lr, [jssp, #-16]!
0xffff582b2d44   516  bl #+0x14 (addr 0xffff582b2d58)
0xffff582b2d48   520  movz x16, #0x10
0xffff582b2d4c   524  sub csp, jssp, #0x10 (16)
0xffff582b2d50   528  stp fp, lr, [jssp, #-16]!
0xffff582b2d54   532  bl #+0x4 (addr 0xffff582b2d58)
0xffff582b2d58   536  movz x17, #0xa00000000
0xffff582b2d5c   540  sub csp, jssp, #0x10 (16)
0xffff582b2d60   544  stp x17, cp, [jssp, #-16]!
0xffff582b2d64   548  add fp, jssp, #0x10 (16)
0xffff582b2d68   552  ldr x17, pc+24 (addr 0x0000ffff582b2d80)    ;; lazy deoptimization bailout 0
0xffff582b2d6c   556  add x17, x17, x16
0xffff582b2d70   560  br x17
0xffff582b2d74   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582b2d78   568  d63f03e0       constant
0xffff582b2d7c   572  d503201f       constant
0xffff582b2d80   576  58006000       constant
0xffff582b2d84   580  0000ffff       constant


Safepoints (size = 21)
0xffff582b2cc4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff582b2b8c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582b2ba4  embedded object  (0x39c04241 <undefined>)
0xffff582b2bf0  code target (STUB)  (0xffff582370c0)
0xffff582b2c30  code target (STUB)  (0xffff582378a0)
0xffff582b2c68  code target (STUB)  (0xffff58238080)
0xffff582b2c98  code target (STUB)  (0xffff58206820)
0xffff582b2cbc  code target (STUB)  (0xffff58206260)
0xffff582b2cc8  code target (STUB)  (0xffff582068e0)
0xffff582b2cdc  constant pool (size 76)
0xffff582b2d68  runtime entry
0xffff582b2d74  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = module
compiler = unknown
Instructions (size = 184)
0xffff582b2e00     0  sub csp, jssp, #0x8 (8)
0xffff582b2e04     4  str x3, [jssp, #-8]!
0xffff582b2e08     8  sub csp, jssp, #0x8 (8)
0xffff582b2e0c    12  str x4, [jssp, #-8]!
0xffff582b2e10    16  ldr x3, pc+112 (addr 0x0000ffff582b2e80)    ;; object: 0x39c63e59 Cell for 0
0xffff582b2e14    20  ldur x3, [x3, #7]
0xffff582b2e18    24  cmp x3, #0x0 (0)
0xffff582b2e1c    28  b.ne #+0x44 (addr 0xffff582b2e60)
0xffff582b2e20    32  tbz w0, #0, #+0x40 (addr 0xffff582b2e60)
0xffff582b2e24    36  ldur x3, [x0, #-1]
0xffff582b2e28    40  ldr x4, pc+96 (addr 0x0000ffff582b2e88)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582b2e2c    44  ldur x4, [x4, #7]
0xffff582b2e30    48  cmp x3, x4
0xffff582b2e34    52  b.ne #+0x2c (addr 0xffff582b2e60)
0xffff582b2e38    56  ldr x5, pc+88 (addr 0x0000ffff582b2e90)    ;; object: 0x22507701 WeakCell for 0x32b2d189 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582b2e3c    60  ldur x5, [x5, #7]
0xffff582b2e40    64  tbz w5, #0, #+0x20 (addr 0xffff582b2e60)
0xffff582b2e44    68  ldursw x4, [x5, #15]
0xffff582b2e48    72  tbnz w4, #23, #+0x18 (addr 0xffff582b2e60)
0xffff582b2e4c    76  ldr x4, [jssp], #8
0xffff582b2e50    80  ldr x3, [jssp], #8
0xffff582b2e54    84  ldr x2, pc+68 (addr 0x0000ffff582b2e98)    ;; object: 0x39cb9c61 <String[6]: module>
0xffff582b2e58    88  ldr x16, pc+72 (addr 0x0000ffff582b2ea0)    ;; code: HANDLER, StoreTransitionStub, minor: 327691
0xffff582b2e5c    92  br x16
0xffff582b2e60    96  ldr x2, pc+72 (addr 0x0000ffff582b2ea8)    ;; object: 0x39cb9c61 <String[6]: module>
0xffff582b2e64   100  ldr x4, [jssp], #8
0xffff582b2e68   104  ldr x3, [jssp], #8
0xffff582b2e6c   108  ldr x16, pc+68 (addr 0x0000ffff582b2eb0)    ;; code: BUILTIN
0xffff582b2e70   112  br x16
0xffff582b2e74   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582b2e78   120  d63f03e0       constant
0xffff582b2e7c   124  d503201f       constant
0xffff582b2e80   128  39c63e59       constant
0xffff582b2e84   132  00000000       constant
0xffff582b2e88   136  39cc22b1       constant
0xffff582b2e8c   140  00000000       constant
0xffff582b2e90   144  22507701       constant
0xffff582b2e94   148  00000000       constant
0xffff582b2e98   152  39cb9c61       constant
0xffff582b2e9c   156  00000000       constant
0xffff582b2ea0   160  582b2b40       constant
0xffff582b2ea4   164  0000ffff       constant
0xffff582b2ea8   168  39cb9c61       constant
0xffff582b2eac   172  00000000       constant
0xffff582b2eb0   176  58222420       constant
0xffff582b2eb4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582b2e10  embedded object  (0x39c63e59 Cell for 0)
0xffff582b2e28  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582b2e38  embedded object  (0x22507701 WeakCell for 0x32b2d189 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582b2e54  embedded object  (0x39cb9c61 <String[6]: module>)
0xffff582b2e58  code target (HANDLER)  (0xffff582b2b40)
0xffff582b2e60  embedded object  (0x39cb9c61 <String[6]: module>)
0xffff582b2e6c  code target (BUILTIN)  (0xffff58222420)
0xffff582b2e74  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582b4c80     0  tbz w0, #0, #+0x98 (addr 0xffff582b4d18)
0xffff582b4c84     4  mov x2, x0
0xffff582b4c88     8  ldur x4, [x1, #7]
0xffff582b4c8c    12  stur x2, [x4, #95]
0xffff582b4c90    16  add x3, x4, #0x5f (95)
0xffff582b4c94    20  and x2, x2, #0xfffffffffff00000
0xffff582b4c98    24  ldr x2, [x2, #8]
0xffff582b4c9c    28  tbz w2, #1, #+0x24 (addr 0xffff582b4cc0)
0xffff582b4ca0    32  and x2, x4, #0xfffffffffff00000
0xffff582b4ca4    36  ldr x2, [x2, #8]
0xffff582b4ca8    40  tbz w2, #2, #+0x18 (addr 0xffff582b4cc0)
0xffff582b4cac    44  sub csp, jssp, #0x8 (8)
0xffff582b4cb0    48  str lr, [jssp, #-8]!
0xffff582b4cb4    52  ldr x16, pc+84 (addr 0x0000ffff582b4d08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582b4cb8    56  blr x16
0xffff582b4cbc    60  ldr lr, [jssp], #8
0xffff582b4cc0    64  stur x5, [x1, #-1]
0xffff582b4cc4    68  tbz w5, #0, #+0x34 (addr 0xffff582b4cf8)
0xffff582b4cc8    72  sub x2, x1, #0x1 (1)
0xffff582b4ccc    76  and x5, x5, #0xfffffffffff00000
0xffff582b4cd0    80  ldr x5, [x5, #8]
0xffff582b4cd4    84  tbz w5, #1, #+0x24 (addr 0xffff582b4cf8)
0xffff582b4cd8    88  and x5, x1, #0xfffffffffff00000
0xffff582b4cdc    92  ldr x5, [x5, #8]
0xffff582b4ce0    96  tbz w5, #2, #+0x18 (addr 0xffff582b4cf8)
0xffff582b4ce4   100  sub csp, jssp, #0x8 (8)
0xffff582b4ce8   104  str lr, [jssp, #-8]!
0xffff582b4cec   108  ldr x16, pc+36 (addr 0x0000ffff582b4d10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582b4cf0   112  blr x16
0xffff582b4cf4   116  ldr lr, [jssp], #8
0xffff582b4cf8   120  ret
0xffff582b4cfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582b4d00   128  d63f03e0       constant
0xffff582b4d04   132  d503201f       constant
0xffff582b4d08   136  582378a0       constant
0xffff582b4d0c   140  0000ffff       constant
0xffff582b4d10   144  58238080       constant
0xffff582b4d14   148  0000ffff       constant
0xffff582b4d18   152  movz x16, #0x0
0xffff582b4d1c   156  sub csp, jssp, #0x10 (16)
0xffff582b4d20   160  stp fp, lr, [jssp, #-16]!
0xffff582b4d24   164  bl #+0x4 (addr 0xffff582b4d28)
0xffff582b4d28   168  movz x17, #0xa00000000
0xffff582b4d2c   172  sub csp, jssp, #0x10 (16)
0xffff582b4d30   176  stp x17, cp, [jssp, #-16]!
0xffff582b4d34   180  add fp, jssp, #0x10 (16)
0xffff582b4d38   184  ldr x17, pc+24 (addr 0x0000ffff582b4d50)    ;; lazy deoptimization bailout 0
0xffff582b4d3c   188  add x17, x17, x16
0xffff582b4d40   192  br x17
0xffff582b4d44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582b4d48   200  d63f03e0       constant
0xffff582b4d4c   204  d503201f       constant
0xffff582b4d50   208  58006000       constant
0xffff582b4d54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582b4cb4  code target (STUB)  (0xffff582378a0)
0xffff582b4cec  code target (STUB)  (0xffff58238080)
0xffff582b4cfc  constant pool (size 28)
0xffff582b4d38  runtime entry
0xffff582b4d44  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582b4c80     0  tbz w0, #0, #+0x98 (addr 0xffff582b4d18)
0xffff582b4c84     4  mov x2, x0
0xffff582b4c88     8  ldur x4, [x1, #7]
0xffff582b4c8c    12  stur x2, [x4, #95]
0xffff582b4c90    16  add x3, x4, #0x5f (95)
0xffff582b4c94    20  and x2, x2, #0xfffffffffff00000
0xffff582b4c98    24  ldr x2, [x2, #8]
0xffff582b4c9c    28  tbz w2, #1, #+0x24 (addr 0xffff582b4cc0)
0xffff582b4ca0    32  and x2, x4, #0xfffffffffff00000
0xffff582b4ca4    36  ldr x2, [x2, #8]
0xffff582b4ca8    40  tbz w2, #2, #+0x18 (addr 0xffff582b4cc0)
0xffff582b4cac    44  sub csp, jssp, #0x8 (8)
0xffff582b4cb0    48  str lr, [jssp, #-8]!
0xffff582b4cb4    52  ldr x16, pc+84 (addr 0x0000ffff582b4d08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582b4cb8    56  blr x16
0xffff582b4cbc    60  ldr lr, [jssp], #8
0xffff582b4cc0    64  stur x5, [x1, #-1]
0xffff582b4cc4    68  tbz w5, #0, #+0x34 (addr 0xffff582b4cf8)
0xffff582b4cc8    72  sub x2, x1, #0x1 (1)
0xffff582b4ccc    76  and x5, x5, #0xfffffffffff00000
0xffff582b4cd0    80  ldr x5, [x5, #8]
0xffff582b4cd4    84  tbz w5, #1, #+0x24 (addr 0xffff582b4cf8)
0xffff582b4cd8    88  and x5, x1, #0xfffffffffff00000
0xffff582b4cdc    92  ldr x5, [x5, #8]
0xffff582b4ce0    96  tbz w5, #2, #+0x18 (addr 0xffff582b4cf8)
0xffff582b4ce4   100  sub csp, jssp, #0x8 (8)
0xffff582b4ce8   104  str lr, [jssp, #-8]!
0xffff582b4cec   108  ldr x16, pc+36 (addr 0x0000ffff582b4d10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582b4cf0   112  blr x16
0xffff582b4cf4   116  ldr lr, [jssp], #8
0xffff582b4cf8   120  ret
0xffff582b4cfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582b4d00   128  d63f03e0       constant
0xffff582b4d04   132  d503201f       constant
0xffff582b4d08   136  582378a0       constant
0xffff582b4d0c   140  0000ffff       constant
0xffff582b4d10   144  58238080       constant
0xffff582b4d14   148  0000ffff       constant
0xffff582b4d18   152  movz x16, #0x0
0xffff582b4d1c   156  sub csp, jssp, #0x10 (16)
0xffff582b4d20   160  stp fp, lr, [jssp, #-16]!
0xffff582b4d24   164  bl #+0x4 (addr 0xffff582b4d28)
0xffff582b4d28   168  movz x17, #0xa00000000
0xffff582b4d2c   172  sub csp, jssp, #0x10 (16)
0xffff582b4d30   176  stp x17, cp, [jssp, #-16]!
0xffff582b4d34   180  add fp, jssp, #0x10 (16)
0xffff582b4d38   184  ldr x17, pc+24 (addr 0x0000ffff582b4d50)    ;; lazy deoptimization bailout 0
0xffff582b4d3c   188  add x17, x17, x16
0xffff582b4d40   192  br x17
0xffff582b4d44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582b4d48   200  d63f03e0       constant
0xffff582b4d4c   204  d503201f       constant
0xffff582b4d50   208  58006000       constant
0xffff582b4d54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582b4cb4  code target (STUB)  (0xffff582378a0)
0xffff582b4cec  code target (STUB)  (0xffff58238080)
0xffff582b4cfc  constant pool (size 28)
0xffff582b4d38  runtime entry
0xffff582b4d44  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/module
compiler = unknown
Instructions (size = 184)
0xffff582b4dc0     0  sub csp, jssp, #0x8 (8)
0xffff582b4dc4     4  str x3, [jssp, #-8]!
0xffff582b4dc8     8  sub csp, jssp, #0x8 (8)
0xffff582b4dcc    12  str x4, [jssp, #-8]!
0xffff582b4dd0    16  ldr x3, pc+112 (addr 0x0000ffff582b4e40)    ;; object: 0x39c63e59 Cell for 0
0xffff582b4dd4    20  ldur x3, [x3, #7]
0xffff582b4dd8    24  cmp x3, #0x0 (0)
0xffff582b4ddc    28  b.ne #+0x44 (addr 0xffff582b4e20)
0xffff582b4de0    32  tbz w0, #0, #+0x40 (addr 0xffff582b4e20)
0xffff582b4de4    36  ldur x3, [x0, #-1]
0xffff582b4de8    40  ldr x4, pc+96 (addr 0x0000ffff582b4e48)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582b4dec    44  ldur x4, [x4, #7]
0xffff582b4df0    48  cmp x3, x4
0xffff582b4df4    52  b.ne #+0x2c (addr 0xffff582b4e20)
0xffff582b4df8    56  ldr x5, pc+88 (addr 0x0000ffff582b4e50)    ;; object: 0x2250a861 WeakCell for 0x32b2d1e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582b4dfc    60  ldur x5, [x5, #7]
0xffff582b4e00    64  tbz w5, #0, #+0x20 (addr 0xffff582b4e20)
0xffff582b4e04    68  ldursw x4, [x5, #15]
0xffff582b4e08    72  tbnz w4, #23, #+0x18 (addr 0xffff582b4e20)
0xffff582b4e0c    76  ldr x4, [jssp], #8
0xffff582b4e10    80  ldr x3, [jssp], #8
0xffff582b4e14    84  ldr x2, pc+68 (addr 0x0000ffff582b4e58)    ;; object: 0x39cb9b81 <String[15]: internal/module>
0xffff582b4e18    88  ldr x16, pc+72 (addr 0x0000ffff582b4e60)    ;; code: HANDLER, StoreTransitionStub, minor: 196620
0xffff582b4e1c    92  br x16
0xffff582b4e20    96  ldr x2, pc+72 (addr 0x0000ffff582b4e68)    ;; object: 0x39cb9b81 <String[15]: internal/module>
0xffff582b4e24   100  ldr x4, [jssp], #8
0xffff582b4e28   104  ldr x3, [jssp], #8
0xffff582b4e2c   108  ldr x16, pc+68 (addr 0x0000ffff582b4e70)    ;; code: BUILTIN
0xffff582b4e30   112  br x16
0xffff582b4e34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582b4e38   120  d63f03e0       constant
0xffff582b4e3c   124  d503201f       constant
0xffff582b4e40   128  39c63e59       constant
0xffff582b4e44   132  00000000       constant
0xffff582b4e48   136  39cc22b1       constant
0xffff582b4e4c   140  00000000       constant
0xffff582b4e50   144  2250a861       constant
0xffff582b4e54   148  00000000       constant
0xffff582b4e58   152  39cb9b81       constant
0xffff582b4e5c   156  00000000       constant
0xffff582b4e60   160  582b4c80       constant
0xffff582b4e64   164  0000ffff       constant
0xffff582b4e68   168  39cb9b81       constant
0xffff582b4e6c   172  00000000       constant
0xffff582b4e70   176  58222420       constant
0xffff582b4e74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582b4dd0  embedded object  (0x39c63e59 Cell for 0)
0xffff582b4de8  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582b4df8  embedded object  (0x2250a861 WeakCell for 0x32b2d1e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582b4e14  embedded object  (0x39cb9b81 <String[15]: internal/module>)
0xffff582b4e18  code target (HANDLER)  (0xffff582b4c80)
0xffff582b4e20  embedded object  (0x39cb9b81 <String[15]: internal/module>)
0xffff582b4e2c  code target (BUILTIN)  (0xffff58222420)
0xffff582b4e34  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582b53c0     0  tbz w0, #0, #+0x98 (addr 0xffff582b5458)
0xffff582b53c4     4  mov x2, x0
0xffff582b53c8     8  ldur x4, [x1, #7]
0xffff582b53cc    12  stur x2, [x4, #103]
0xffff582b53d0    16  add x3, x4, #0x67 (103)
0xffff582b53d4    20  and x2, x2, #0xfffffffffff00000
0xffff582b53d8    24  ldr x2, [x2, #8]
0xffff582b53dc    28  tbz w2, #1, #+0x24 (addr 0xffff582b5400)
0xffff582b53e0    32  and x2, x4, #0xfffffffffff00000
0xffff582b53e4    36  ldr x2, [x2, #8]
0xffff582b53e8    40  tbz w2, #2, #+0x18 (addr 0xffff582b5400)
0xffff582b53ec    44  sub csp, jssp, #0x8 (8)
0xffff582b53f0    48  str lr, [jssp, #-8]!
0xffff582b53f4    52  ldr x16, pc+84 (addr 0x0000ffff582b5448)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582b53f8    56  blr x16
0xffff582b53fc    60  ldr lr, [jssp], #8
0xffff582b5400    64  stur x5, [x1, #-1]
0xffff582b5404    68  tbz w5, #0, #+0x34 (addr 0xffff582b5438)
0xffff582b5408    72  sub x2, x1, #0x1 (1)
0xffff582b540c    76  and x5, x5, #0xfffffffffff00000
0xffff582b5410    80  ldr x5, [x5, #8]
0xffff582b5414    84  tbz w5, #1, #+0x24 (addr 0xffff582b5438)
0xffff582b5418    88  and x5, x1, #0xfffffffffff00000
0xffff582b541c    92  ldr x5, [x5, #8]
0xffff582b5420    96  tbz w5, #2, #+0x18 (addr 0xffff582b5438)
0xffff582b5424   100  sub csp, jssp, #0x8 (8)
0xffff582b5428   104  str lr, [jssp, #-8]!
0xffff582b542c   108  ldr x16, pc+36 (addr 0x0000ffff582b5450)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582b5430   112  blr x16
0xffff582b5434   116  ldr lr, [jssp], #8
0xffff582b5438   120  ret
0xffff582b543c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582b5440   128  d63f03e0       constant
0xffff582b5444   132  d503201f       constant
0xffff582b5448   136  582378a0       constant
0xffff582b544c   140  0000ffff       constant
0xffff582b5450   144  58238080       constant
0xffff582b5454   148  0000ffff       constant
0xffff582b5458   152  movz x16, #0x0
0xffff582b545c   156  sub csp, jssp, #0x10 (16)
0xffff582b5460   160  stp fp, lr, [jssp, #-16]!
0xffff582b5464   164  bl #+0x4 (addr 0xffff582b5468)
0xffff582b5468   168  movz x17, #0xa00000000
0xffff582b546c   172  sub csp, jssp, #0x10 (16)
0xffff582b5470   176  stp x17, cp, [jssp, #-16]!
0xffff582b5474   180  add fp, jssp, #0x10 (16)
0xffff582b5478   184  ldr x17, pc+24 (addr 0x0000ffff582b5490)    ;; lazy deoptimization bailout 0
0xffff582b547c   188  add x17, x17, x16
0xffff582b5480   192  br x17
0xffff582b5484   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582b5488   200  d63f03e0       constant
0xffff582b548c   204  d503201f       constant
0xffff582b5490   208  58006000       constant
0xffff582b5494   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582b53f4  code target (STUB)  (0xffff582378a0)
0xffff582b542c  code target (STUB)  (0xffff58238080)
0xffff582b543c  constant pool (size 28)
0xffff582b5478  runtime entry
0xffff582b5484  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582b53c0     0  tbz w0, #0, #+0x98 (addr 0xffff582b5458)
0xffff582b53c4     4  mov x2, x0
0xffff582b53c8     8  ldur x4, [x1, #7]
0xffff582b53cc    12  stur x2, [x4, #103]
0xffff582b53d0    16  add x3, x4, #0x67 (103)
0xffff582b53d4    20  and x2, x2, #0xfffffffffff00000
0xffff582b53d8    24  ldr x2, [x2, #8]
0xffff582b53dc    28  tbz w2, #1, #+0x24 (addr 0xffff582b5400)
0xffff582b53e0    32  and x2, x4, #0xfffffffffff00000
0xffff582b53e4    36  ldr x2, [x2, #8]
0xffff582b53e8    40  tbz w2, #2, #+0x18 (addr 0xffff582b5400)
0xffff582b53ec    44  sub csp, jssp, #0x8 (8)
0xffff582b53f0    48  str lr, [jssp, #-8]!
0xffff582b53f4    52  ldr x16, pc+84 (addr 0x0000ffff582b5448)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582b53f8    56  blr x16
0xffff582b53fc    60  ldr lr, [jssp], #8
0xffff582b5400    64  stur x5, [x1, #-1]
0xffff582b5404    68  tbz w5, #0, #+0x34 (addr 0xffff582b5438)
0xffff582b5408    72  sub x2, x1, #0x1 (1)
0xffff582b540c    76  and x5, x5, #0xfffffffffff00000
0xffff582b5410    80  ldr x5, [x5, #8]
0xffff582b5414    84  tbz w5, #1, #+0x24 (addr 0xffff582b5438)
0xffff582b5418    88  and x5, x1, #0xfffffffffff00000
0xffff582b541c    92  ldr x5, [x5, #8]
0xffff582b5420    96  tbz w5, #2, #+0x18 (addr 0xffff582b5438)
0xffff582b5424   100  sub csp, jssp, #0x8 (8)
0xffff582b5428   104  str lr, [jssp, #-8]!
0xffff582b542c   108  ldr x16, pc+36 (addr 0x0000ffff582b5450)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582b5430   112  blr x16
0xffff582b5434   116  ldr lr, [jssp], #8
0xffff582b5438   120  ret
0xffff582b543c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582b5440   128  d63f03e0       constant
0xffff582b5444   132  d503201f       constant
0xffff582b5448   136  582378a0       constant
0xffff582b544c   140  0000ffff       constant
0xffff582b5450   144  58238080       constant
0xffff582b5454   148  0000ffff       constant
0xffff582b5458   152  movz x16, #0x0
0xffff582b545c   156  sub csp, jssp, #0x10 (16)
0xffff582b5460   160  stp fp, lr, [jssp, #-16]!
0xffff582b5464   164  bl #+0x4 (addr 0xffff582b5468)
0xffff582b5468   168  movz x17, #0xa00000000
0xffff582b546c   172  sub csp, jssp, #0x10 (16)
0xffff582b5470   176  stp x17, cp, [jssp, #-16]!
0xffff582b5474   180  add fp, jssp, #0x10 (16)
0xffff582b5478   184  ldr x17, pc+24 (addr 0x0000ffff582b5490)    ;; lazy deoptimization bailout 0
0xffff582b547c   188  add x17, x17, x16
0xffff582b5480   192  br x17
0xffff582b5484   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582b5488   200  d63f03e0       constant
0xffff582b548c   204  d503201f       constant
0xffff582b5490   208  58006000       constant
0xffff582b5494   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582b53f4  code target (STUB)  (0xffff582378a0)
0xffff582b542c  code target (STUB)  (0xffff58238080)
0xffff582b543c  constant pool (size 28)
0xffff582b5478  runtime entry
0xffff582b5484  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = vm
compiler = unknown
Instructions (size = 184)
0xffff582b5500     0  sub csp, jssp, #0x8 (8)
0xffff582b5504     4  str x3, [jssp, #-8]!
0xffff582b5508     8  sub csp, jssp, #0x8 (8)
0xffff582b550c    12  str x4, [jssp, #-8]!
0xffff582b5510    16  ldr x3, pc+112 (addr 0x0000ffff582b5580)    ;; object: 0x39c63e59 Cell for 0
0xffff582b5514    20  ldur x3, [x3, #7]
0xffff582b5518    24  cmp x3, #0x0 (0)
0xffff582b551c    28  b.ne #+0x44 (addr 0xffff582b5560)
0xffff582b5520    32  tbz w0, #0, #+0x40 (addr 0xffff582b5560)
0xffff582b5524    36  ldur x3, [x0, #-1]
0xffff582b5528    40  ldr x4, pc+96 (addr 0x0000ffff582b5588)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582b552c    44  ldur x4, [x4, #7]
0xffff582b5530    48  cmp x3, x4
0xffff582b5534    52  b.ne #+0x2c (addr 0xffff582b5560)
0xffff582b5538    56  ldr x5, pc+88 (addr 0x0000ffff582b5590)    ;; object: 0x2250b391 WeakCell for 0x32b2d3f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582b553c    60  ldur x5, [x5, #7]
0xffff582b5540    64  tbz w5, #0, #+0x20 (addr 0xffff582b5560)
0xffff582b5544    68  ldursw x4, [x5, #15]
0xffff582b5548    72  tbnz w4, #23, #+0x18 (addr 0xffff582b5560)
0xffff582b554c    76  ldr x4, [jssp], #8
0xffff582b5550    80  ldr x3, [jssp], #8
0xffff582b5554    84  ldr x2, pc+68 (addr 0x0000ffff582b5598)    ;; object: 0x39cb9cb1 <String[2]: vm>
0xffff582b5558    88  ldr x16, pc+72 (addr 0x0000ffff582b55a0)    ;; code: HANDLER, StoreTransitionStub, minor: 196621
0xffff582b555c    92  br x16
0xffff582b5560    96  ldr x2, pc+72 (addr 0x0000ffff582b55a8)    ;; object: 0x39cb9cb1 <String[2]: vm>
0xffff582b5564   100  ldr x4, [jssp], #8
0xffff582b5568   104  ldr x3, [jssp], #8
0xffff582b556c   108  ldr x16, pc+68 (addr 0x0000ffff582b55b0)    ;; code: BUILTIN
0xffff582b5570   112  br x16
0xffff582b5574   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582b5578   120  d63f03e0       constant
0xffff582b557c   124  d503201f       constant
0xffff582b5580   128  39c63e59       constant
0xffff582b5584   132  00000000       constant
0xffff582b5588   136  39cc22b1       constant
0xffff582b558c   140  00000000       constant
0xffff582b5590   144  2250b391       constant
0xffff582b5594   148  00000000       constant
0xffff582b5598   152  39cb9cb1       constant
0xffff582b559c   156  00000000       constant
0xffff582b55a0   160  582b53c0       constant
0xffff582b55a4   164  0000ffff       constant
0xffff582b55a8   168  39cb9cb1       constant
0xffff582b55ac   172  00000000       constant
0xffff582b55b0   176  58222420       constant
0xffff582b55b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582b5510  embedded object  (0x39c63e59 Cell for 0)
0xffff582b5528  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582b5538  embedded object  (0x2250b391 WeakCell for 0x32b2d3f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582b5554  embedded object  (0x39cb9cb1 <String[2]: vm>)
0xffff582b5558  code target (HANDLER)  (0xffff582b53c0)
0xffff582b5560  embedded object  (0x39cb9cb1 <String[2]: vm>)
0xffff582b556c  code target (BUILTIN)  (0xffff58222420)
0xffff582b5574  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff582b6040     0  ldur x6, [x1, #7]
0xffff582b6044     4  ldur w7, [x6, #11]
0xffff582b6048     8  adds w8, w7, #0x3 (3)
0xffff582b604c    12  b.vs #+0x1dc (addr 0xffff582b6228)
0xffff582b6050    16  movz w16, #0x95ff
0xffff582b6054    20  cmp w8, w16, lsl #1
0xffff582b6058    24  b.hs #+0x1e0 (addr 0xffff582b6238)
0xffff582b605c    28  lsl x9, x8, #32
0xffff582b6060    32  lsl w10, w8, #3
0xffff582b6064    36  add w10, w10, #0x10 (16)
0xffff582b6068    40  sxtw x10, w10
0xffff582b606c    44  movz x11, #0x92c0
0xffff582b6070    48  movk x11, #0x16e7, lsl #16
0xffff582b6074    52  ldp x13, x16, [x11]
0xffff582b6078    56  adds x12, x13, x10
0xffff582b607c    60  ccmp x12, x16, #nzCv, lo
0xffff582b6080    64  b.hi #+0xf8 (addr 0xffff582b6178)
0xffff582b6084    68  str x12, [x11]
0xffff582b6088    72  orr x13, x13, #0x1
0xffff582b608c    76  ldr x10, pc+348 (addr 0x0000ffff582b61e8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582b6090    80  stur x10, [x13, #-1]
0xffff582b6094    84  stur x9, [x13, #7]
0xffff582b6098    88  cmp w7, w8
0xffff582b609c    92  b.ge #+0x18 (addr 0xffff582b60b4)
0xffff582b60a0    96  sub w8, w8, #0x1 (1)
0xffff582b60a4   100  ldr x9, pc+332 (addr 0x0000ffff582b61f0)    ;; object: 0x39c04241 <undefined>
0xffff582b60a8   104  add x10, x13, #0xf (15)
0xffff582b60ac   108  str x9, [x10, w8, sxtw #3]
0xffff582b60b0   112  b #-0x18 (addr 0xffff582b6098)
0xffff582b60b4   116  cmp w7, #0x0 (0)
0xffff582b60b8   120  b.le #+0x1c (addr 0xffff582b60d4)
0xffff582b60bc   124  sub w7, w7, #0x1 (1)
0xffff582b60c0   128  add x8, x6, #0xf (15)
0xffff582b60c4   132  ldr x9, [x8, w7, sxtw #3]
0xffff582b60c8   136  add x8, x13, #0xf (15)
0xffff582b60cc   140  str x9, [x8, w7, sxtw #3]
0xffff582b60d0   144  b #-0x1c (addr 0xffff582b60b4)
0xffff582b60d4   148  stur x13, [x1, #7]
0xffff582b60d8   152  add x6, x1, #0x7 (7)
0xffff582b60dc   156  and x13, x1, #0xfffffffffff00000
0xffff582b60e0   160  ldr x13, [x13, #8]
0xffff582b60e4   164  tbz w13, #2, #+0x18 (addr 0xffff582b60fc)
0xffff582b60e8   168  sub csp, jssp, #0x8 (8)
0xffff582b60ec   172  str lr, [jssp, #-8]!
0xffff582b60f0   176  ldr x16, pc+264 (addr 0x0000ffff582b61f8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff582b60f4   180  blr x16
0xffff582b60f8   184  ldr lr, [jssp], #8
0xffff582b60fc   188  tbz w0, #0, #+0x14c (addr 0xffff582b6248)
0xffff582b6100   192  mov x2, x0
0xffff582b6104   196  ldur x4, [x1, #7]
0xffff582b6108   200  stur x2, [x4, #111]
0xffff582b610c   204  add x3, x4, #0x6f (111)
0xffff582b6110   208  and x2, x2, #0xfffffffffff00000
0xffff582b6114   212  ldr x2, [x2, #8]
0xffff582b6118   216  tbz w2, #1, #+0x24 (addr 0xffff582b613c)
0xffff582b611c   220  and x2, x4, #0xfffffffffff00000
0xffff582b6120   224  ldr x2, [x2, #8]
0xffff582b6124   228  tbz w2, #2, #+0x18 (addr 0xffff582b613c)
0xffff582b6128   232  sub csp, jssp, #0x8 (8)
0xffff582b612c   236  str lr, [jssp, #-8]!
0xffff582b6130   240  ldr x16, pc+208 (addr 0x0000ffff582b6200)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582b6134   244  blr x16
0xffff582b6138   248  ldr lr, [jssp], #8
0xffff582b613c   252  stur x5, [x1, #-1]
0xffff582b6140   256  tbz w5, #0, #+0x34 (addr 0xffff582b6174)
0xffff582b6144   260  sub x2, x1, #0x1 (1)
0xffff582b6148   264  and x5, x5, #0xfffffffffff00000
0xffff582b614c   268  ldr x5, [x5, #8]
0xffff582b6150   272  tbz w5, #1, #+0x24 (addr 0xffff582b6174)
0xffff582b6154   276  and x5, x1, #0xfffffffffff00000
0xffff582b6158   280  ldr x5, [x5, #8]
0xffff582b615c   284  tbz w5, #2, #+0x18 (addr 0xffff582b6174)
0xffff582b6160   288  sub csp, jssp, #0x8 (8)
0xffff582b6164   292  str lr, [jssp, #-8]!
0xffff582b6168   296  ldr x16, pc+160 (addr 0x0000ffff582b6208)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582b616c   300  blr x16
0xffff582b6170   304  ldr lr, [jssp], #8
0xffff582b6174   308  ret
0xffff582b6178   312  sub csp, jssp, #0x10 (16)
0xffff582b617c   316  stp fp, lr, [jssp, #-16]!
0xffff582b6180   320  movz fp, #0xa00000000
0xffff582b6184   324  sub csp, jssp, #0x8 (8)
0xffff582b6188   328  str fp, [jssp, #-8]!
0xffff582b618c   332  add fp, jssp, #0x8 (8)
0xffff582b6190   336  movz x13, #0x0
0xffff582b6194   340  mov x16, lr
0xffff582b6198   344  ldr x17, pc+120 (addr 0x0000ffff582b6210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582b619c   348  blr x17
0xffff582b61a0   352  lsl x0, x10, #32
0xffff582b61a4   356  movz x10, #0x0
0xffff582b61a8   360  sub csp, jssp, #0x10 (16)
0xffff582b61ac   364  stp x10, x0, [jssp, #-16]!
0xffff582b61b0   368  movz x0, #0x2
0xffff582b61b4   372  movz x1, #0x5b88
0xffff582b61b8   376  movk x1, #0xe2, lsl #16
0xffff582b61bc   380  ldr x16, pc+92 (addr 0x0000ffff582b6218)    ;; code: STUB, CEntryStub, minor: 5
0xffff582b61c0   384  blr x16
0xffff582b61c4   388  str x0, [jssp, #104]
0xffff582b61c8   392  ldr x16, pc+88 (addr 0x0000ffff582b6220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582b61cc   396  blr x16
0xffff582b61d0   400  ldr lr, [jssp, #16]
0xffff582b61d4   404  ldp xzr, fp, [jssp], #24
0xffff582b61d8   408  b #-0x14c (addr 0xffff582b608c)
0xffff582b61dc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff582b61e0   416  d63f03e0       constant
0xffff582b61e4   420  d503201f       constant
0xffff582b61e8   424  32b04259       constant
0xffff582b61ec   428  00000000       constant
0xffff582b61f0   432  39c04241       constant
0xffff582b61f4   436  00000000       constant
0xffff582b61f8   440  582370c0       constant
0xffff582b61fc   444  0000ffff       constant
0xffff582b6200   448  582378a0       constant
0xffff582b6204   452  0000ffff       constant
0xffff582b6208   456  58238080       constant
0xffff582b620c   460  0000ffff       constant
0xffff582b6210   464  58206820       constant
0xffff582b6214   468  0000ffff       constant
0xffff582b6218   472  58206260       constant
0xffff582b621c   476  0000ffff       constant
0xffff582b6220   480  582068e0       constant
0xffff582b6224   484  0000ffff       constant
0xffff582b6228   488  movz x16, #0x0
0xffff582b622c   492  sub csp, jssp, #0x10 (16)
0xffff582b6230   496  stp fp, lr, [jssp, #-16]!
0xffff582b6234   500  bl #+0x24 (addr 0xffff582b6258)
0xffff582b6238   504  movz x16, #0x8
0xffff582b623c   508  sub csp, jssp, #0x10 (16)
0xffff582b6240   512  stp fp, lr, [jssp, #-16]!
0xffff582b6244   516  bl #+0x14 (addr 0xffff582b6258)
0xffff582b6248   520  movz x16, #0x10
0xffff582b624c   524  sub csp, jssp, #0x10 (16)
0xffff582b6250   528  stp fp, lr, [jssp, #-16]!
0xffff582b6254   532  bl #+0x4 (addr 0xffff582b6258)
0xffff582b6258   536  movz x17, #0xa00000000
0xffff582b625c   540  sub csp, jssp, #0x10 (16)
0xffff582b6260   544  stp x17, cp, [jssp, #-16]!
0xffff582b6264   548  add fp, jssp, #0x10 (16)
0xffff582b6268   552  ldr x17, pc+24 (addr 0x0000ffff582b6280)    ;; lazy deoptimization bailout 0
0xffff582b626c   556  add x17, x17, x16
0xffff582b6270   560  br x17
0xffff582b6274   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582b6278   568  d63f03e0       constant
0xffff582b627c   572  d503201f       constant
0xffff582b6280   576  58006000       constant
0xffff582b6284   580  0000ffff       constant


Safepoints (size = 21)
0xffff582b61c4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff582b608c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582b60a4  embedded object  (0x39c04241 <undefined>)
0xffff582b60f0  code target (STUB)  (0xffff582370c0)
0xffff582b6130  code target (STUB)  (0xffff582378a0)
0xffff582b6168  code target (STUB)  (0xffff58238080)
0xffff582b6198  code target (STUB)  (0xffff58206820)
0xffff582b61bc  code target (STUB)  (0xffff58206260)
0xffff582b61c8  code target (STUB)  (0xffff582068e0)
0xffff582b61dc  constant pool (size 76)
0xffff582b6268  runtime entry
0xffff582b6274  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff582b6040     0  ldur x6, [x1, #7]
0xffff582b6044     4  ldur w7, [x6, #11]
0xffff582b6048     8  adds w8, w7, #0x3 (3)
0xffff582b604c    12  b.vs #+0x1dc (addr 0xffff582b6228)
0xffff582b6050    16  movz w16, #0x95ff
0xffff582b6054    20  cmp w8, w16, lsl #1
0xffff582b6058    24  b.hs #+0x1e0 (addr 0xffff582b6238)
0xffff582b605c    28  lsl x9, x8, #32
0xffff582b6060    32  lsl w10, w8, #3
0xffff582b6064    36  add w10, w10, #0x10 (16)
0xffff582b6068    40  sxtw x10, w10
0xffff582b606c    44  movz x11, #0x92c0
0xffff582b6070    48  movk x11, #0x16e7, lsl #16
0xffff582b6074    52  ldp x13, x16, [x11]
0xffff582b6078    56  adds x12, x13, x10
0xffff582b607c    60  ccmp x12, x16, #nzCv, lo
0xffff582b6080    64  b.hi #+0xf8 (addr 0xffff582b6178)
0xffff582b6084    68  str x12, [x11]
0xffff582b6088    72  orr x13, x13, #0x1
0xffff582b608c    76  ldr x10, pc+348 (addr 0x0000ffff582b61e8)    ;; object: 0x32b04259 <Map(FAST_SMI_ELEMENTS)>
0xffff582b6090    80  stur x10, [x13, #-1]
0xffff582b6094    84  stur x9, [x13, #7]
0xffff582b6098    88  cmp w7, w8
0xffff582b609c    92  b.ge #+0x18 (addr 0xffff582b60b4)
0xffff582b60a0    96  sub w8, w8, #0x1 (1)
0xffff582b60a4   100  ldr x9, pc+332 (addr 0x0000ffff582b61f0)    ;; object: 0x39c04241 <undefined>
0xffff582b60a8   104  add x10, x13, #0xf (15)
0xffff582b60ac   108  str x9, [x10, w8, sxtw #3]
0xffff582b60b0   112  b #-0x18 (addr 0xffff582b6098)
0xffff582b60b4   116  cmp w7, #0x0 (0)
0xffff582b60b8   120  b.le #+0x1c (addr 0xffff582b60d4)
0xffff582b60bc   124  sub w7, w7, #0x1 (1)
0xffff582b60c0   128  add x8, x6, #0xf (15)
0xffff582b60c4   132  ldr x9, [x8, w7, sxtw #3]
0xffff582b60c8   136  add x8, x13, #0xf (15)
0xffff582b60cc   140  str x9, [x8, w7, sxtw #3]
0xffff582b60d0   144  b #-0x1c (addr 0xffff582b60b4)
0xffff582b60d4   148  stur x13, [x1, #7]
0xffff582b60d8   152  add x6, x1, #0x7 (7)
0xffff582b60dc   156  and x13, x1, #0xfffffffffff00000
0xffff582b60e0   160  ldr x13, [x13, #8]
0xffff582b60e4   164  tbz w13, #2, #+0x18 (addr 0xffff582b60fc)
0xffff582b60e8   168  sub csp, jssp, #0x8 (8)
0xffff582b60ec   172  str lr, [jssp, #-8]!
0xffff582b60f0   176  ldr x16, pc+264 (addr 0x0000ffff582b61f8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff582b60f4   180  blr x16
0xffff582b60f8   184  ldr lr, [jssp], #8
0xffff582b60fc   188  tbz w0, #0, #+0x14c (addr 0xffff582b6248)
0xffff582b6100   192  mov x2, x0
0xffff582b6104   196  ldur x4, [x1, #7]
0xffff582b6108   200  stur x2, [x4, #111]
0xffff582b610c   204  add x3, x4, #0x6f (111)
0xffff582b6110   208  and x2, x2, #0xfffffffffff00000
0xffff582b6114   212  ldr x2, [x2, #8]
0xffff582b6118   216  tbz w2, #1, #+0x24 (addr 0xffff582b613c)
0xffff582b611c   220  and x2, x4, #0xfffffffffff00000
0xffff582b6120   224  ldr x2, [x2, #8]
0xffff582b6124   228  tbz w2, #2, #+0x18 (addr 0xffff582b613c)
0xffff582b6128   232  sub csp, jssp, #0x8 (8)
0xffff582b612c   236  str lr, [jssp, #-8]!
0xffff582b6130   240  ldr x16, pc+208 (addr 0x0000ffff582b6200)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582b6134   244  blr x16
0xffff582b6138   248  ldr lr, [jssp], #8
0xffff582b613c   252  stur x5, [x1, #-1]
0xffff582b6140   256  tbz w5, #0, #+0x34 (addr 0xffff582b6174)
0xffff582b6144   260  sub x2, x1, #0x1 (1)
0xffff582b6148   264  and x5, x5, #0xfffffffffff00000
0xffff582b614c   268  ldr x5, [x5, #8]
0xffff582b6150   272  tbz w5, #1, #+0x24 (addr 0xffff582b6174)
0xffff582b6154   276  and x5, x1, #0xfffffffffff00000
0xffff582b6158   280  ldr x5, [x5, #8]
0xffff582b615c   284  tbz w5, #2, #+0x18 (addr 0xffff582b6174)
0xffff582b6160   288  sub csp, jssp, #0x8 (8)
0xffff582b6164   292  str lr, [jssp, #-8]!
0xffff582b6168   296  ldr x16, pc+160 (addr 0x0000ffff582b6208)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582b616c   300  blr x16
0xffff582b6170   304  ldr lr, [jssp], #8
0xffff582b6174   308  ret
0xffff582b6178   312  sub csp, jssp, #0x10 (16)
0xffff582b617c   316  stp fp, lr, [jssp, #-16]!
0xffff582b6180   320  movz fp, #0xa00000000
0xffff582b6184   324  sub csp, jssp, #0x8 (8)
0xffff582b6188   328  str fp, [jssp, #-8]!
0xffff582b618c   332  add fp, jssp, #0x8 (8)
0xffff582b6190   336  movz x13, #0x0
0xffff582b6194   340  mov x16, lr
0xffff582b6198   344  ldr x17, pc+120 (addr 0x0000ffff582b6210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582b619c   348  blr x17
0xffff582b61a0   352  lsl x0, x10, #32
0xffff582b61a4   356  movz x10, #0x0
0xffff582b61a8   360  sub csp, jssp, #0x10 (16)
0xffff582b61ac   364  stp x10, x0, [jssp, #-16]!
0xffff582b61b0   368  movz x0, #0x2
0xffff582b61b4   372  movz x1, #0x5b88
0xffff582b61b8   376  movk x1, #0xe2, lsl #16
0xffff582b61bc   380  ldr x16, pc+92 (addr 0x0000ffff582b6218)    ;; code: STUB, CEntryStub, minor: 5
0xffff582b61c0   384  blr x16
0xffff582b61c4   388  str x0, [jssp, #104]
0xffff582b61c8   392  ldr x16, pc+88 (addr 0x0000ffff582b6220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582b61cc   396  blr x16
0xffff582b61d0   400  ldr lr, [jssp, #16]
0xffff582b61d4   404  ldp xzr, fp, [jssp], #24
0xffff582b61d8   408  b #-0x14c (addr 0xffff582b608c)
0xffff582b61dc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff582b61e0   416  d63f03e0       constant
0xffff582b61e4   420  d503201f       constant
0xffff582b61e8   424  32b04259       constant
0xffff582b61ec   428  00000000       constant
0xffff582b61f0   432  39c04241       constant
0xffff582b61f4   436  00000000       constant
0xffff582b61f8   440  582370c0       constant
0xffff582b61fc   444  0000ffff       constant
0xffff582b6200   448  582378a0       constant
0xffff582b6204   452  0000ffff       constant
0xffff582b6208   456  58238080       constant
0xffff582b620c   460  0000ffff       constant
0xffff582b6210   464  58206820       constant
0xffff582b6214   468  0000ffff       constant
0xffff582b6218   472  58206260       constant
0xffff582b621c   476  0000ffff       constant
0xffff582b6220   480  582068e0       constant
0xffff582b6224   484  0000ffff       constant
0xffff582b6228   488  movz x16, #0x0
0xffff582b622c   492  sub csp, jssp, #0x10 (16)
0xffff582b6230   496  stp fp, lr, [jssp, #-16]!
0xffff582b6234   500  bl #+0x24 (addr 0xffff582b6258)
0xffff582b6238   504  movz x16, #0x8
0xffff582b623c   508  sub csp, jssp, #0x10 (16)
0xffff582b6240   512  stp fp, lr, [jssp, #-16]!
0xffff582b6244   516  bl #+0x14 (addr 0xffff582b6258)
0xffff582b6248   520  movz x16, #0x10
0xffff582b624c   524  sub csp, jssp, #0x10 (16)
0xffff582b6250   528  stp fp, lr, [jssp, #-16]!
0xffff582b6254   532  bl #+0x4 (addr 0xffff582b6258)
0xffff582b6258   536  movz x17, #0xa00000000
0xffff582b625c   540  sub csp, jssp, #0x10 (16)
0xffff582b6260   544  stp x17, cp, [jssp, #-16]!
0xffff582b6264   548  add fp, jssp, #0x10 (16)
0xffff582b6268   552  ldr x17, pc+24 (addr 0x0000ffff582b6280)    ;; lazy deoptimization bailout 0
0xffff582b626c   556  add x17, x17, x16
0xffff582b6270   560  br x17
0xffff582b6274   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582b6278   568  d63f03e0       constant
0xffff582b627c   572  d503201f       constant
0xffff582b6280   576  58006000       constant
0xffff582b6284   580  0000ffff       constant


Safepoints (size = 21)
0xffff582b61c4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff582b608c  embedded object  (0x32b04259 <Map(FAST_SMI_ELEMENTS)>)
0xffff582b60a4  embedded object  (0x39c04241 <undefined>)
0xffff582b60f0  code target (STUB)  (0xffff582370c0)
0xffff582b6130  code target (STUB)  (0xffff582378a0)
0xffff582b6168  code target (STUB)  (0xffff58238080)
0xffff582b6198  code target (STUB)  (0xffff58206820)
0xffff582b61bc  code target (STUB)  (0xffff58206260)
0xffff582b61c8  code target (STUB)  (0xffff582068e0)
0xffff582b61dc  constant pool (size 76)
0xffff582b6268  runtime entry
0xffff582b6274  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = fs
compiler = unknown
Instructions (size = 184)
0xffff582b6300     0  sub csp, jssp, #0x8 (8)
0xffff582b6304     4  str x3, [jssp, #-8]!
0xffff582b6308     8  sub csp, jssp, #0x8 (8)
0xffff582b630c    12  str x4, [jssp, #-8]!
0xffff582b6310    16  ldr x3, pc+112 (addr 0x0000ffff582b6380)    ;; object: 0x39c63e59 Cell for 0
0xffff582b6314    20  ldur x3, [x3, #7]
0xffff582b6318    24  cmp x3, #0x0 (0)
0xffff582b631c    28  b.ne #+0x44 (addr 0xffff582b6360)
0xffff582b6320    32  tbz w0, #0, #+0x40 (addr 0xffff582b6360)
0xffff582b6324    36  ldur x3, [x0, #-1]
0xffff582b6328    40  ldr x4, pc+96 (addr 0x0000ffff582b6388)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582b632c    44  ldur x4, [x4, #7]
0xffff582b6330    48  cmp x3, x4
0xffff582b6334    52  b.ne #+0x2c (addr 0xffff582b6360)
0xffff582b6338    56  ldr x5, pc+88 (addr 0x0000ffff582b6390)    ;; object: 0x2250ca39 WeakCell for 0x32b2d869 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582b633c    60  ldur x5, [x5, #7]
0xffff582b6340    64  tbz w5, #0, #+0x20 (addr 0xffff582b6360)
0xffff582b6344    68  ldursw x4, [x5, #15]
0xffff582b6348    72  tbnz w4, #23, #+0x18 (addr 0xffff582b6360)
0xffff582b634c    76  ldr x4, [jssp], #8
0xffff582b6350    80  ldr x3, [jssp], #8
0xffff582b6354    84  ldr x2, pc+68 (addr 0x0000ffff582b6398)    ;; object: 0x39cb9cd1 <String[2]: fs>
0xffff582b6358    88  ldr x16, pc+72 (addr 0x0000ffff582b63a0)    ;; code: HANDLER, StoreTransitionStub, minor: 327694
0xffff582b635c    92  br x16
0xffff582b6360    96  ldr x2, pc+72 (addr 0x0000ffff582b63a8)    ;; object: 0x39cb9cd1 <String[2]: fs>
0xffff582b6364   100  ldr x4, [jssp], #8
0xffff582b6368   104  ldr x3, [jssp], #8
0xffff582b636c   108  ldr x16, pc+68 (addr 0x0000ffff582b63b0)    ;; code: BUILTIN
0xffff582b6370   112  br x16
0xffff582b6374   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582b6378   120  d63f03e0       constant
0xffff582b637c   124  d503201f       constant
0xffff582b6380   128  39c63e59       constant
0xffff582b6384   132  00000000       constant
0xffff582b6388   136  39cc22b1       constant
0xffff582b638c   140  00000000       constant
0xffff582b6390   144  2250ca39       constant
0xffff582b6394   148  00000000       constant
0xffff582b6398   152  39cb9cd1       constant
0xffff582b639c   156  00000000       constant
0xffff582b63a0   160  582b6040       constant
0xffff582b63a4   164  0000ffff       constant
0xffff582b63a8   168  39cb9cd1       constant
0xffff582b63ac   172  00000000       constant
0xffff582b63b0   176  58222420       constant
0xffff582b63b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582b6310  embedded object  (0x39c63e59 Cell for 0)
0xffff582b6328  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582b6338  embedded object  (0x2250ca39 WeakCell for 0x32b2d869 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582b6354  embedded object  (0x39cb9cd1 <String[2]: fs>)
0xffff582b6358  code target (HANDLER)  (0xffff582b6040)
0xffff582b6360  embedded object  (0x39cb9cd1 <String[2]: fs>)
0xffff582b636c  code target (BUILTIN)  (0xffff58222420)
0xffff582b6374  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = runInThisContext
compiler = unknown
Instructions (size = 120)
0xffff582bc220     0  sub csp, jssp, #0x8 (8)
0xffff582bc224     4  str x3, [jssp, #-8]!
0xffff582bc228     8  sub csp, jssp, #0x8 (8)
0xffff582bc22c    12  str x0, [jssp, #-8]!
0xffff582bc230    16  ldr x0, pc+72 (addr 0x0000ffff582bc278)    ;; object: 0x22517749 Cell for 0
0xffff582bc234    20  ldur x0, [x0, #7]
0xffff582bc238    24  cmp x0, #0x0 (0)
0xffff582bc23c    28  b.ne #+0x14 (addr 0xffff582bc250)
0xffff582bc240    32  ldr x3, pc+64 (addr 0x0000ffff582bc280)    ;; object: 0x22517759 WeakCell for 0x25f51f71 <an Object with map 0x32b2d4f9>
0xffff582bc244    36  ldur x3, [x3, #7]
0xffff582bc248    40  tbz w3, #0, #+0x8 (addr 0xffff582bc250)
0xffff582bc24c    44  b #+0x14 (addr 0xffff582bc260)
0xffff582bc250    48  ldr x0, [jssp], #8
0xffff582bc254    52  ldr x3, [jssp], #8
0xffff582bc258    56  ldr x16, pc+48 (addr 0x0000ffff582bc288)    ;; code: BUILTIN
0xffff582bc25c    60  br x16
0xffff582bc260    64  add jssp, jssp, #0x10 (16)
0xffff582bc264    68  mov x1, x3
0xffff582bc268    72  ldr x16, pc+40 (addr 0x0000ffff582bc290)    ;; code: HANDLER, LoadFieldStub, minor: 2051
0xffff582bc26c    76  br x16
0xffff582bc270    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582bc274    84  d63f03e0       constant
0xffff582bc278    88  22517749       constant
0xffff582bc27c    92  00000000       constant
0xffff582bc280    96  22517759       constant
0xffff582bc284   100  00000000       constant
0xffff582bc288   104  582222e0       constant
0xffff582bc28c   108  0000ffff       constant
0xffff582bc290   112  58239340       constant
0xffff582bc294   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582bc230  embedded object  (0x22517749 Cell for 0)
0xffff582bc240  embedded object  (0x22517759 WeakCell for 0x25f51f71 <an Object with map 0x32b2d4f9>)
0xffff582bc258  code target (BUILTIN)  (0xffff582222e0)
0xffff582bc268  code target (HANDLER)  (0xffff58239340)
0xffff582bc270  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582bc5e0     0  tbz w0, #0, #+0x98 (addr 0xffff582bc678)
0xffff582bc5e4     4  mov x2, x0
0xffff582bc5e8     8  ldur x4, [x1, #7]
0xffff582bc5ec    12  stur x2, [x4, #119]
0xffff582bc5f0    16  add x3, x4, #0x77 (119)
0xffff582bc5f4    20  and x2, x2, #0xfffffffffff00000
0xffff582bc5f8    24  ldr x2, [x2, #8]
0xffff582bc5fc    28  tbz w2, #1, #+0x24 (addr 0xffff582bc620)
0xffff582bc600    32  and x2, x4, #0xfffffffffff00000
0xffff582bc604    36  ldr x2, [x2, #8]
0xffff582bc608    40  tbz w2, #2, #+0x18 (addr 0xffff582bc620)
0xffff582bc60c    44  sub csp, jssp, #0x8 (8)
0xffff582bc610    48  str lr, [jssp, #-8]!
0xffff582bc614    52  ldr x16, pc+84 (addr 0x0000ffff582bc668)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582bc618    56  blr x16
0xffff582bc61c    60  ldr lr, [jssp], #8
0xffff582bc620    64  stur x5, [x1, #-1]
0xffff582bc624    68  tbz w5, #0, #+0x34 (addr 0xffff582bc658)
0xffff582bc628    72  sub x2, x1, #0x1 (1)
0xffff582bc62c    76  and x5, x5, #0xfffffffffff00000
0xffff582bc630    80  ldr x5, [x5, #8]
0xffff582bc634    84  tbz w5, #1, #+0x24 (addr 0xffff582bc658)
0xffff582bc638    88  and x5, x1, #0xfffffffffff00000
0xffff582bc63c    92  ldr x5, [x5, #8]
0xffff582bc640    96  tbz w5, #2, #+0x18 (addr 0xffff582bc658)
0xffff582bc644   100  sub csp, jssp, #0x8 (8)
0xffff582bc648   104  str lr, [jssp, #-8]!
0xffff582bc64c   108  ldr x16, pc+36 (addr 0x0000ffff582bc670)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582bc650   112  blr x16
0xffff582bc654   116  ldr lr, [jssp], #8
0xffff582bc658   120  ret
0xffff582bc65c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582bc660   128  d63f03e0       constant
0xffff582bc664   132  d503201f       constant
0xffff582bc668   136  582378a0       constant
0xffff582bc66c   140  0000ffff       constant
0xffff582bc670   144  58238080       constant
0xffff582bc674   148  0000ffff       constant
0xffff582bc678   152  movz x16, #0x0
0xffff582bc67c   156  sub csp, jssp, #0x10 (16)
0xffff582bc680   160  stp fp, lr, [jssp, #-16]!
0xffff582bc684   164  bl #+0x4 (addr 0xffff582bc688)
0xffff582bc688   168  movz x17, #0xa00000000
0xffff582bc68c   172  sub csp, jssp, #0x10 (16)
0xffff582bc690   176  stp x17, cp, [jssp, #-16]!
0xffff582bc694   180  add fp, jssp, #0x10 (16)
0xffff582bc698   184  ldr x17, pc+24 (addr 0x0000ffff582bc6b0)    ;; lazy deoptimization bailout 0
0xffff582bc69c   188  add x17, x17, x16
0xffff582bc6a0   192  br x17
0xffff582bc6a4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582bc6a8   200  d63f03e0       constant
0xffff582bc6ac   204  d503201f       constant
0xffff582bc6b0   208  58006000       constant
0xffff582bc6b4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582bc614  code target (STUB)  (0xffff582378a0)
0xffff582bc64c  code target (STUB)  (0xffff58238080)
0xffff582bc65c  constant pool (size 28)
0xffff582bc698  runtime entry
0xffff582bc6a4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582bc5e0     0  tbz w0, #0, #+0x98 (addr 0xffff582bc678)
0xffff582bc5e4     4  mov x2, x0
0xffff582bc5e8     8  ldur x4, [x1, #7]
0xffff582bc5ec    12  stur x2, [x4, #119]
0xffff582bc5f0    16  add x3, x4, #0x77 (119)
0xffff582bc5f4    20  and x2, x2, #0xfffffffffff00000
0xffff582bc5f8    24  ldr x2, [x2, #8]
0xffff582bc5fc    28  tbz w2, #1, #+0x24 (addr 0xffff582bc620)
0xffff582bc600    32  and x2, x4, #0xfffffffffff00000
0xffff582bc604    36  ldr x2, [x2, #8]
0xffff582bc608    40  tbz w2, #2, #+0x18 (addr 0xffff582bc620)
0xffff582bc60c    44  sub csp, jssp, #0x8 (8)
0xffff582bc610    48  str lr, [jssp, #-8]!
0xffff582bc614    52  ldr x16, pc+84 (addr 0x0000ffff582bc668)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582bc618    56  blr x16
0xffff582bc61c    60  ldr lr, [jssp], #8
0xffff582bc620    64  stur x5, [x1, #-1]
0xffff582bc624    68  tbz w5, #0, #+0x34 (addr 0xffff582bc658)
0xffff582bc628    72  sub x2, x1, #0x1 (1)
0xffff582bc62c    76  and x5, x5, #0xfffffffffff00000
0xffff582bc630    80  ldr x5, [x5, #8]
0xffff582bc634    84  tbz w5, #1, #+0x24 (addr 0xffff582bc658)
0xffff582bc638    88  and x5, x1, #0xfffffffffff00000
0xffff582bc63c    92  ldr x5, [x5, #8]
0xffff582bc640    96  tbz w5, #2, #+0x18 (addr 0xffff582bc658)
0xffff582bc644   100  sub csp, jssp, #0x8 (8)
0xffff582bc648   104  str lr, [jssp, #-8]!
0xffff582bc64c   108  ldr x16, pc+36 (addr 0x0000ffff582bc670)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582bc650   112  blr x16
0xffff582bc654   116  ldr lr, [jssp], #8
0xffff582bc658   120  ret
0xffff582bc65c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582bc660   128  d63f03e0       constant
0xffff582bc664   132  d503201f       constant
0xffff582bc668   136  582378a0       constant
0xffff582bc66c   140  0000ffff       constant
0xffff582bc670   144  58238080       constant
0xffff582bc674   148  0000ffff       constant
0xffff582bc678   152  movz x16, #0x0
0xffff582bc67c   156  sub csp, jssp, #0x10 (16)
0xffff582bc680   160  stp fp, lr, [jssp, #-16]!
0xffff582bc684   164  bl #+0x4 (addr 0xffff582bc688)
0xffff582bc688   168  movz x17, #0xa00000000
0xffff582bc68c   172  sub csp, jssp, #0x10 (16)
0xffff582bc690   176  stp x17, cp, [jssp, #-16]!
0xffff582bc694   180  add fp, jssp, #0x10 (16)
0xffff582bc698   184  ldr x17, pc+24 (addr 0x0000ffff582bc6b0)    ;; lazy deoptimization bailout 0
0xffff582bc69c   188  add x17, x17, x16
0xffff582bc6a0   192  br x17
0xffff582bc6a4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582bc6a8   200  d63f03e0       constant
0xffff582bc6ac   204  d503201f       constant
0xffff582bc6b0   208  58006000       constant
0xffff582bc6b4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582bc614  code target (STUB)  (0xffff582378a0)
0xffff582bc64c  code target (STUB)  (0xffff58238080)
0xffff582bc65c  constant pool (size 28)
0xffff582bc698  runtime entry
0xffff582bc6a4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = stream
compiler = unknown
Instructions (size = 184)
0xffff582bc720     0  sub csp, jssp, #0x8 (8)
0xffff582bc724     4  str x3, [jssp, #-8]!
0xffff582bc728     8  sub csp, jssp, #0x8 (8)
0xffff582bc72c    12  str x4, [jssp, #-8]!
0xffff582bc730    16  ldr x3, pc+112 (addr 0x0000ffff582bc7a0)    ;; object: 0x39c63e59 Cell for 0
0xffff582bc734    20  ldur x3, [x3, #7]
0xffff582bc738    24  cmp x3, #0x0 (0)
0xffff582bc73c    28  b.ne #+0x44 (addr 0xffff582bc780)
0xffff582bc740    32  tbz w0, #0, #+0x40 (addr 0xffff582bc780)
0xffff582bc744    36  ldur x3, [x0, #-1]
0xffff582bc748    40  ldr x4, pc+96 (addr 0x0000ffff582bc7a8)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582bc74c    44  ldur x4, [x4, #7]
0xffff582bc750    48  cmp x3, x4
0xffff582bc754    52  b.ne #+0x2c (addr 0xffff582bc780)
0xffff582bc758    56  ldr x5, pc+88 (addr 0x0000ffff582bc7b0)    ;; object: 0x2251c4a9 WeakCell for 0x32b2fe91 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582bc75c    60  ldur x5, [x5, #7]
0xffff582bc760    64  tbz w5, #0, #+0x20 (addr 0xffff582bc780)
0xffff582bc764    68  ldursw x4, [x5, #15]
0xffff582bc768    72  tbnz w4, #23, #+0x18 (addr 0xffff582bc780)
0xffff582bc76c    76  ldr x4, [jssp], #8
0xffff582bc770    80  ldr x3, [jssp], #8
0xffff582bc774    84  ldr x2, pc+68 (addr 0x0000ffff582bc7b8)    ;; object: 0x39cbe091 <String[6]: stream>
0xffff582bc778    88  ldr x16, pc+72 (addr 0x0000ffff582bc7c0)    ;; code: HANDLER, StoreTransitionStub, minor: 196623
0xffff582bc77c    92  br x16
0xffff582bc780    96  ldr x2, pc+72 (addr 0x0000ffff582bc7c8)    ;; object: 0x39cbe091 <String[6]: stream>
0xffff582bc784   100  ldr x4, [jssp], #8
0xffff582bc788   104  ldr x3, [jssp], #8
0xffff582bc78c   108  ldr x16, pc+68 (addr 0x0000ffff582bc7d0)    ;; code: BUILTIN
0xffff582bc790   112  br x16
0xffff582bc794   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582bc798   120  d63f03e0       constant
0xffff582bc79c   124  d503201f       constant
0xffff582bc7a0   128  39c63e59       constant
0xffff582bc7a4   132  00000000       constant
0xffff582bc7a8   136  39cc22b1       constant
0xffff582bc7ac   140  00000000       constant
0xffff582bc7b0   144  2251c4a9       constant
0xffff582bc7b4   148  00000000       constant
0xffff582bc7b8   152  39cbe091       constant
0xffff582bc7bc   156  00000000       constant
0xffff582bc7c0   160  582bc5e0       constant
0xffff582bc7c4   164  0000ffff       constant
0xffff582bc7c8   168  39cbe091       constant
0xffff582bc7cc   172  00000000       constant
0xffff582bc7d0   176  58222420       constant
0xffff582bc7d4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582bc730  embedded object  (0x39c63e59 Cell for 0)
0xffff582bc748  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582bc758  embedded object  (0x2251c4a9 WeakCell for 0x32b2fe91 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582bc774  embedded object  (0x39cbe091 <String[6]: stream>)
0xffff582bc778  code target (HANDLER)  (0xffff582bc5e0)
0xffff582bc780  embedded object  (0x39cbe091 <String[6]: stream>)
0xffff582bc78c  code target (BUILTIN)  (0xffff58222420)
0xffff582bc794  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = call
compiler = unknown
Instructions (size = 120)
0xffff582bce00     0  sub csp, jssp, #0x8 (8)
0xffff582bce04     4  str x3, [jssp, #-8]!
0xffff582bce08     8  sub csp, jssp, #0x8 (8)
0xffff582bce0c    12  str x0, [jssp, #-8]!
0xffff582bce10    16  ldr x0, pc+72 (addr 0x0000ffff582bce58)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582bce14    20  ldur x0, [x0, #7]
0xffff582bce18    24  cmp x0, #0x0 (0)
0xffff582bce1c    28  b.ne #+0x14 (addr 0xffff582bce30)
0xffff582bce20    32  ldr x3, pc+64 (addr 0x0000ffff582bce60)    ;; object: 0x2251cb01 WeakCell for 0x39c40019 <JS Function (SharedFunctionInfo 0x39c3ff71)>
0xffff582bce24    36  ldur x3, [x3, #7]
0xffff582bce28    40  tbz w3, #0, #+0x8 (addr 0xffff582bce30)
0xffff582bce2c    44  b #+0x14 (addr 0xffff582bce40)
0xffff582bce30    48  ldr x0, [jssp], #8
0xffff582bce34    52  ldr x3, [jssp], #8
0xffff582bce38    56  ldr x16, pc+48 (addr 0x0000ffff582bce68)    ;; code: BUILTIN
0xffff582bce3c    60  br x16
0xffff582bce40    64  add jssp, jssp, #0x10 (16)
0xffff582bce44    68  mov x1, x3
0xffff582bce48    72  ldr x16, pc+40 (addr 0x0000ffff582bce70)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff582bce4c    76  br x16
0xffff582bce50    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582bce54    84  d63f03e0       constant
0xffff582bce58    88  39c5b0f1       constant
0xffff582bce5c    92  00000000       constant
0xffff582bce60    96  2251cb01       constant
0xffff582bce64   100  00000000       constant
0xffff582bce68   104  582222e0       constant
0xffff582bce6c   108  0000ffff       constant
0xffff582bce70   112  5828b020       constant
0xffff582bce74   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582bce10  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582bce20  embedded object  (0x2251cb01 WeakCell for 0x39c40019 <JS Function (SharedFunctionInfo 0x39c3ff71)>)
0xffff582bce38  code target (BUILTIN)  (0xffff582222e0)
0xffff582bce48  code target (HANDLER)  (0xffff5828b020)
0xffff582bce50  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582bcee0     0  tbz w0, #0, #+0x98 (addr 0xffff582bcf78)
0xffff582bcee4     4  mov x2, x0
0xffff582bcee8     8  ldur x4, [x1, #7]
0xffff582bceec    12  stur x2, [x4, #127]
0xffff582bcef0    16  add x3, x4, #0x7f (127)
0xffff582bcef4    20  and x2, x2, #0xfffffffffff00000
0xffff582bcef8    24  ldr x2, [x2, #8]
0xffff582bcefc    28  tbz w2, #1, #+0x24 (addr 0xffff582bcf20)
0xffff582bcf00    32  and x2, x4, #0xfffffffffff00000
0xffff582bcf04    36  ldr x2, [x2, #8]
0xffff582bcf08    40  tbz w2, #2, #+0x18 (addr 0xffff582bcf20)
0xffff582bcf0c    44  sub csp, jssp, #0x8 (8)
0xffff582bcf10    48  str lr, [jssp, #-8]!
0xffff582bcf14    52  ldr x16, pc+84 (addr 0x0000ffff582bcf68)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582bcf18    56  blr x16
0xffff582bcf1c    60  ldr lr, [jssp], #8
0xffff582bcf20    64  stur x5, [x1, #-1]
0xffff582bcf24    68  tbz w5, #0, #+0x34 (addr 0xffff582bcf58)
0xffff582bcf28    72  sub x2, x1, #0x1 (1)
0xffff582bcf2c    76  and x5, x5, #0xfffffffffff00000
0xffff582bcf30    80  ldr x5, [x5, #8]
0xffff582bcf34    84  tbz w5, #1, #+0x24 (addr 0xffff582bcf58)
0xffff582bcf38    88  and x5, x1, #0xfffffffffff00000
0xffff582bcf3c    92  ldr x5, [x5, #8]
0xffff582bcf40    96  tbz w5, #2, #+0x18 (addr 0xffff582bcf58)
0xffff582bcf44   100  sub csp, jssp, #0x8 (8)
0xffff582bcf48   104  str lr, [jssp, #-8]!
0xffff582bcf4c   108  ldr x16, pc+36 (addr 0x0000ffff582bcf70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582bcf50   112  blr x16
0xffff582bcf54   116  ldr lr, [jssp], #8
0xffff582bcf58   120  ret
0xffff582bcf5c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582bcf60   128  d63f03e0       constant
0xffff582bcf64   132  d503201f       constant
0xffff582bcf68   136  582378a0       constant
0xffff582bcf6c   140  0000ffff       constant
0xffff582bcf70   144  58238080       constant
0xffff582bcf74   148  0000ffff       constant
0xffff582bcf78   152  movz x16, #0x0
0xffff582bcf7c   156  sub csp, jssp, #0x10 (16)
0xffff582bcf80   160  stp fp, lr, [jssp, #-16]!
0xffff582bcf84   164  bl #+0x4 (addr 0xffff582bcf88)
0xffff582bcf88   168  movz x17, #0xa00000000
0xffff582bcf8c   172  sub csp, jssp, #0x10 (16)
0xffff582bcf90   176  stp x17, cp, [jssp, #-16]!
0xffff582bcf94   180  add fp, jssp, #0x10 (16)
0xffff582bcf98   184  ldr x17, pc+24 (addr 0x0000ffff582bcfb0)    ;; lazy deoptimization bailout 0
0xffff582bcf9c   188  add x17, x17, x16
0xffff582bcfa0   192  br x17
0xffff582bcfa4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582bcfa8   200  d63f03e0       constant
0xffff582bcfac   204  d503201f       constant
0xffff582bcfb0   208  58006000       constant
0xffff582bcfb4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582bcf14  code target (STUB)  (0xffff582378a0)
0xffff582bcf4c  code target (STUB)  (0xffff58238080)
0xffff582bcf5c  constant pool (size 28)
0xffff582bcf98  runtime entry
0xffff582bcfa4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582bcee0     0  tbz w0, #0, #+0x98 (addr 0xffff582bcf78)
0xffff582bcee4     4  mov x2, x0
0xffff582bcee8     8  ldur x4, [x1, #7]
0xffff582bceec    12  stur x2, [x4, #127]
0xffff582bcef0    16  add x3, x4, #0x7f (127)
0xffff582bcef4    20  and x2, x2, #0xfffffffffff00000
0xffff582bcef8    24  ldr x2, [x2, #8]
0xffff582bcefc    28  tbz w2, #1, #+0x24 (addr 0xffff582bcf20)
0xffff582bcf00    32  and x2, x4, #0xfffffffffff00000
0xffff582bcf04    36  ldr x2, [x2, #8]
0xffff582bcf08    40  tbz w2, #2, #+0x18 (addr 0xffff582bcf20)
0xffff582bcf0c    44  sub csp, jssp, #0x8 (8)
0xffff582bcf10    48  str lr, [jssp, #-8]!
0xffff582bcf14    52  ldr x16, pc+84 (addr 0x0000ffff582bcf68)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582bcf18    56  blr x16
0xffff582bcf1c    60  ldr lr, [jssp], #8
0xffff582bcf20    64  stur x5, [x1, #-1]
0xffff582bcf24    68  tbz w5, #0, #+0x34 (addr 0xffff582bcf58)
0xffff582bcf28    72  sub x2, x1, #0x1 (1)
0xffff582bcf2c    76  and x5, x5, #0xfffffffffff00000
0xffff582bcf30    80  ldr x5, [x5, #8]
0xffff582bcf34    84  tbz w5, #1, #+0x24 (addr 0xffff582bcf58)
0xffff582bcf38    88  and x5, x1, #0xfffffffffff00000
0xffff582bcf3c    92  ldr x5, [x5, #8]
0xffff582bcf40    96  tbz w5, #2, #+0x18 (addr 0xffff582bcf58)
0xffff582bcf44   100  sub csp, jssp, #0x8 (8)
0xffff582bcf48   104  str lr, [jssp, #-8]!
0xffff582bcf4c   108  ldr x16, pc+36 (addr 0x0000ffff582bcf70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582bcf50   112  blr x16
0xffff582bcf54   116  ldr lr, [jssp], #8
0xffff582bcf58   120  ret
0xffff582bcf5c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582bcf60   128  d63f03e0       constant
0xffff582bcf64   132  d503201f       constant
0xffff582bcf68   136  582378a0       constant
0xffff582bcf6c   140  0000ffff       constant
0xffff582bcf70   144  58238080       constant
0xffff582bcf74   148  0000ffff       constant
0xffff582bcf78   152  movz x16, #0x0
0xffff582bcf7c   156  sub csp, jssp, #0x10 (16)
0xffff582bcf80   160  stp fp, lr, [jssp, #-16]!
0xffff582bcf84   164  bl #+0x4 (addr 0xffff582bcf88)
0xffff582bcf88   168  movz x17, #0xa00000000
0xffff582bcf8c   172  sub csp, jssp, #0x10 (16)
0xffff582bcf90   176  stp x17, cp, [jssp, #-16]!
0xffff582bcf94   180  add fp, jssp, #0x10 (16)
0xffff582bcf98   184  ldr x17, pc+24 (addr 0x0000ffff582bcfb0)    ;; lazy deoptimization bailout 0
0xffff582bcf9c   188  add x17, x17, x16
0xffff582bcfa0   192  br x17
0xffff582bcfa4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582bcfa8   200  d63f03e0       constant
0xffff582bcfac   204  d503201f       constant
0xffff582bcfb0   208  58006000       constant
0xffff582bcfb4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582bcf14  code target (STUB)  (0xffff582378a0)
0xffff582bcf4c  code target (STUB)  (0xffff58238080)
0xffff582bcf5c  constant pool (size 28)
0xffff582bcf98  runtime entry
0xffff582bcfa4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/streams/legacy
compiler = unknown
Instructions (size = 184)
0xffff582bd020     0  sub csp, jssp, #0x8 (8)
0xffff582bd024     4  str x3, [jssp, #-8]!
0xffff582bd028     8  sub csp, jssp, #0x8 (8)
0xffff582bd02c    12  str x4, [jssp, #-8]!
0xffff582bd030    16  ldr x3, pc+112 (addr 0x0000ffff582bd0a0)    ;; object: 0x39c63e59 Cell for 0
0xffff582bd034    20  ldur x3, [x3, #7]
0xffff582bd038    24  cmp x3, #0x0 (0)
0xffff582bd03c    28  b.ne #+0x44 (addr 0xffff582bd080)
0xffff582bd040    32  tbz w0, #0, #+0x40 (addr 0xffff582bd080)
0xffff582bd044    36  ldur x3, [x0, #-1]
0xffff582bd048    40  ldr x4, pc+96 (addr 0x0000ffff582bd0a8)    ;; object: 0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582bd04c    44  ldur x4, [x4, #7]
0xffff582bd050    48  cmp x3, x4
0xffff582bd054    52  b.ne #+0x2c (addr 0xffff582bd080)
0xffff582bd058    56  ldr x5, pc+88 (addr 0x0000ffff582bd0b0)    ;; object: 0x2251cc81 WeakCell for 0x32b2fee9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582bd05c    60  ldur x5, [x5, #7]
0xffff582bd060    64  tbz w5, #0, #+0x20 (addr 0xffff582bd080)
0xffff582bd064    68  ldursw x4, [x5, #15]
0xffff582bd068    72  tbnz w4, #23, #+0x18 (addr 0xffff582bd080)
0xffff582bd06c    76  ldr x4, [jssp], #8
0xffff582bd070    80  ldr x3, [jssp], #8
0xffff582bd074    84  ldr x2, pc+68 (addr 0x0000ffff582bd0b8)    ;; object: 0x39cbe491 <String[23]: internal/streams/legacy>
0xffff582bd078    88  ldr x16, pc+72 (addr 0x0000ffff582bd0c0)    ;; code: HANDLER, StoreTransitionStub, minor: 196624
0xffff582bd07c    92  br x16
0xffff582bd080    96  ldr x2, pc+72 (addr 0x0000ffff582bd0c8)    ;; object: 0x39cbe491 <String[23]: internal/streams/legacy>
0xffff582bd084   100  ldr x4, [jssp], #8
0xffff582bd088   104  ldr x3, [jssp], #8
0xffff582bd08c   108  ldr x16, pc+68 (addr 0x0000ffff582bd0d0)    ;; code: BUILTIN
0xffff582bd090   112  br x16
0xffff582bd094   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582bd098   120  d63f03e0       constant
0xffff582bd09c   124  d503201f       constant
0xffff582bd0a0   128  39c63e59       constant
0xffff582bd0a4   132  00000000       constant
0xffff582bd0a8   136  39cc22b1       constant
0xffff582bd0ac   140  00000000       constant
0xffff582bd0b0   144  2251cc81       constant
0xffff582bd0b4   148  00000000       constant
0xffff582bd0b8   152  39cbe491       constant
0xffff582bd0bc   156  00000000       constant
0xffff582bd0c0   160  582bcee0       constant
0xffff582bd0c4   164  0000ffff       constant
0xffff582bd0c8   168  39cbe491       constant
0xffff582bd0cc   172  00000000       constant
0xffff582bd0d0   176  58222420       constant
0xffff582bd0d4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582bd030  embedded object  (0x39c63e59 Cell for 0)
0xffff582bd048  embedded object  (0x39cc22b1 WeakCell for 0x32b1b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582bd058  embedded object  (0x2251cc81 WeakCell for 0x32b2fee9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582bd074  embedded object  (0x39cbe491 <String[23]: internal/streams/legacy>)
0xffff582bd078  code target (HANDLER)  (0xffff582bcee0)
0xffff582bd080  embedded object  (0x39cbe491 <String[23]: internal/streams/legacy>)
0xffff582bd08c  code target (BUILTIN)  (0xffff58222420)
0xffff582bd094  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = super_
compiler = unknown
Instructions (size = 152)
0xffff582bd620     0  sub csp, jssp, #0x8 (8)
0xffff582bd624     4  str x3, [jssp, #-8]!
0xffff582bd628     8  sub csp, jssp, #0x8 (8)
0xffff582bd62c    12  str x4, [jssp, #-8]!
0xffff582bd630    16  ldr x3, pc+88 (addr 0x0000ffff582bd688)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582bd634    20  ldur x3, [x3, #7]
0xffff582bd638    24  cmp x3, #0x0 (0)
0xffff582bd63c    28  b.ne #+0x30 (addr 0xffff582bd66c)
0xffff582bd640    32  tbz w0, #0, #+0x2c (addr 0xffff582bd66c)
0xffff582bd644    36  ldr x5, pc+76 (addr 0x0000ffff582bd690)    ;; object: 0x2251d5d9 WeakCell for 0x32b2ff41 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582bd648    40  ldur x5, [x5, #7]
0xffff582bd64c    44  tbz w5, #0, #+0x20 (addr 0xffff582bd66c)
0xffff582bd650    48  ldursw x4, [x5, #15]
0xffff582bd654    52  tbnz w4, #23, #+0x18 (addr 0xffff582bd66c)
0xffff582bd658    56  ldr x4, [jssp], #8
0xffff582bd65c    60  ldr x3, [jssp], #8
0xffff582bd660    64  ldr x2, pc+56 (addr 0x0000ffff582bd698)    ;; object: 0x39cc9f09 <String[6]: super_>
0xffff582bd664    68  ldr x16, pc+60 (addr 0x0000ffff582bd6a0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff582bd668    72  br x16
0xffff582bd66c    76  ldr x2, pc+60 (addr 0x0000ffff582bd6a8)    ;; object: 0x39cc9f09 <String[6]: super_>
0xffff582bd670    80  ldr x4, [jssp], #8
0xffff582bd674    84  ldr x3, [jssp], #8
0xffff582bd678    88  ldr x16, pc+56 (addr 0x0000ffff582bd6b0)    ;; code: BUILTIN
0xffff582bd67c    92  br x16
0xffff582bd680    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582bd684   100  d63f03e0       constant
0xffff582bd688   104  39c5b0f1       constant
0xffff582bd68c   108  00000000       constant
0xffff582bd690   112  2251d5d9       constant
0xffff582bd694   116  00000000       constant
0xffff582bd698   120  39cc9f09       constant
0xffff582bd69c   124  00000000       constant
0xffff582bd6a0   128  58238860       constant
0xffff582bd6a4   132  0000ffff       constant
0xffff582bd6a8   136  39cc9f09       constant
0xffff582bd6ac   140  00000000       constant
0xffff582bd6b0   144  58222420       constant
0xffff582bd6b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582bd630  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582bd644  embedded object  (0x2251d5d9 WeakCell for 0x32b2ff41 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582bd660  embedded object  (0x39cc9f09 <String[6]: super_>)
0xffff582bd664  code target (HANDLER)  (0xffff58238860)
0xffff582bd66c  embedded object  (0x39cc9f09 <String[6]: super_>)
0xffff582bd678  code target (BUILTIN)  (0xffff58222420)
0xffff582bd680  constant pool (size 56)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 781)
0xffff582bd720     0  movz x2, #0x92c0
0xffff582bd724     4  movk x2, #0x16e7, lsl #16
0xffff582bd728     8  ldp x3, x0, [x2]
0xffff582bd72c    12  adds x16, x3, #0x130 (304)
0xffff582bd730    16  ccmp x16, x0, #nzCv, lo
0xffff582bd734    20  b.hi #+0x150 (addr 0xffff582bd884)
0xffff582bd738    24  str x16, [x2]
0xffff582bd73c    28  orr x3, x3, #0x1
0xffff582bd740    32  ldr x0, pc+432 (addr 0x0000ffff582bd8f0)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582bd744    36  stur x0, [x3, #-1]
0xffff582bd748    40  movz x0, #0x2400000000
0xffff582bd74c    44  stur x0, [x3, #7]
0xffff582bd750    48  stur x1, [x3, #15]
0xffff582bd754    52  stur cp, [x3, #23]
0xffff582bd758    56  ldr x0, pc+416 (addr 0x0000ffff582bd8f8)    ;; object: 0x39c04519 <the hole>
0xffff582bd75c    60  stur x0, [x3, #31]
0xffff582bd760    64  ldur x0, [cp, #39]
0xffff582bd764    68  stur x0, [x3, #39]
0xffff582bd768    72  ldr x0, pc+408 (addr 0x0000ffff582bd900)    ;; object: 0x39c04241 <undefined>
0xffff582bd76c    76  stur x0, [x3, #47]
0xffff582bd770    80  ldr x0, pc+408 (addr 0x0000ffff582bd908)    ;; object: 0x39c04241 <undefined>
0xffff582bd774    84  stur x0, [x3, #55]
0xffff582bd778    88  ldr x0, pc+408 (addr 0x0000ffff582bd910)    ;; object: 0x39c04241 <undefined>
0xffff582bd77c    92  stur x0, [x3, #63]
0xffff582bd780    96  ldr x0, pc+408 (addr 0x0000ffff582bd918)    ;; object: 0x39c04241 <undefined>
0xffff582bd784   100  stur x0, [x3, #71]
0xffff582bd788   104  ldr x0, pc+408 (addr 0x0000ffff582bd920)    ;; object: 0x39c04241 <undefined>
0xffff582bd78c   108  stur x0, [x3, #79]
0xffff582bd790   112  ldr x0, pc+408 (addr 0x0000ffff582bd928)    ;; object: 0x39c04241 <undefined>
0xffff582bd794   116  stur x0, [x3, #87]
0xffff582bd798   120  ldr x0, pc+408 (addr 0x0000ffff582bd930)    ;; object: 0x39c04241 <undefined>
0xffff582bd79c   124  stur x0, [x3, #95]
0xffff582bd7a0   128  ldr x0, pc+408 (addr 0x0000ffff582bd938)    ;; object: 0x39c04241 <undefined>
0xffff582bd7a4   132  stur x0, [x3, #103]
0xffff582bd7a8   136  ldr x0, pc+408 (addr 0x0000ffff582bd940)    ;; object: 0x39c04241 <undefined>
0xffff582bd7ac   140  stur x0, [x3, #111]
0xffff582bd7b0   144  ldr x0, pc+408 (addr 0x0000ffff582bd948)    ;; object: 0x39c04241 <undefined>
0xffff582bd7b4   148  stur x0, [x3, #119]
0xffff582bd7b8   152  ldr x0, pc+408 (addr 0x0000ffff582bd950)    ;; object: 0x39c04241 <undefined>
0xffff582bd7bc   156  stur x0, [x3, #127]
0xffff582bd7c0   160  ldr x0, pc+408 (addr 0x0000ffff582bd958)    ;; object: 0x39c04241 <undefined>
0xffff582bd7c4   164  stur x0, [x3, #135]
0xffff582bd7c8   168  ldr x0, pc+408 (addr 0x0000ffff582bd960)    ;; object: 0x39c04241 <undefined>
0xffff582bd7cc   172  stur x0, [x3, #143]
0xffff582bd7d0   176  ldr x0, pc+408 (addr 0x0000ffff582bd968)    ;; object: 0x39c04241 <undefined>
0xffff582bd7d4   180  stur x0, [x3, #151]
0xffff582bd7d8   184  ldr x0, pc+408 (addr 0x0000ffff582bd970)    ;; object: 0x39c04241 <undefined>
0xffff582bd7dc   188  stur x0, [x3, #159]
0xffff582bd7e0   192  ldr x0, pc+408 (addr 0x0000ffff582bd978)    ;; object: 0x39c04241 <undefined>
0xffff582bd7e4   196  stur x0, [x3, #167]
0xffff582bd7e8   200  ldr x0, pc+408 (addr 0x0000ffff582bd980)    ;; object: 0x39c04241 <undefined>
0xffff582bd7ec   204  stur x0, [x3, #175]
0xffff582bd7f0   208  ldr x0, pc+408 (addr 0x0000ffff582bd988)    ;; object: 0x39c04241 <undefined>
0xffff582bd7f4   212  stur x0, [x3, #183]
0xffff582bd7f8   216  ldr x0, pc+408 (addr 0x0000ffff582bd990)    ;; object: 0x39c04241 <undefined>
0xffff582bd7fc   220  stur x0, [x3, #191]
0xffff582bd800   224  ldr x0, pc+408 (addr 0x0000ffff582bd998)    ;; object: 0x39c04241 <undefined>
0xffff582bd804   228  stur x0, [x3, #199]
0xffff582bd808   232  ldr x0, pc+408 (addr 0x0000ffff582bd9a0)    ;; object: 0x39c04241 <undefined>
0xffff582bd80c   236  stur x0, [x3, #207]
0xffff582bd810   240  ldr x0, pc+408 (addr 0x0000ffff582bd9a8)    ;; object: 0x39c04241 <undefined>
0xffff582bd814   244  stur x0, [x3, #215]
0xffff582bd818   248  ldr x0, pc+408 (addr 0x0000ffff582bd9b0)    ;; object: 0x39c04241 <undefined>
0xffff582bd81c   252  stur x0, [x3, #223]
0xffff582bd820   256  ldr x0, pc+408 (addr 0x0000ffff582bd9b8)    ;; object: 0x39c04241 <undefined>
0xffff582bd824   260  stur x0, [x3, #231]
0xffff582bd828   264  ldr x0, pc+408 (addr 0x0000ffff582bd9c0)    ;; object: 0x39c04241 <undefined>
0xffff582bd82c   268  stur x0, [x3, #239]
0xffff582bd830   272  ldr x0, pc+408 (addr 0x0000ffff582bd9c8)    ;; object: 0x39c04241 <undefined>
0xffff582bd834   276  stur x0, [x3, #247]
0xffff582bd838   280  ldr x0, pc+408 (addr 0x0000ffff582bd9d0)    ;; object: 0x39c04241 <undefined>
0xffff582bd83c   284  stur x0, [x3, #255]
0xffff582bd840   288  ldr x0, pc+408 (addr 0x0000ffff582bd9d8)    ;; object: 0x39c04241 <undefined>
0xffff582bd844   292  movz x16, #0x107
0xffff582bd848   296  str x0, [x3, x16]
0xffff582bd84c   300  ldr x0, pc+404 (addr 0x0000ffff582bd9e0)    ;; object: 0x39c04241 <undefined>
0xffff582bd850   304  movz x16, #0x10f
0xffff582bd854   308  str x0, [x3, x16]
0xffff582bd858   312  ldr x0, pc+400 (addr 0x0000ffff582bd9e8)    ;; object: 0x39c04241 <undefined>
0xffff582bd85c   316  movz x16, #0x117
0xffff582bd860   320  str x0, [x3, x16]
0xffff582bd864   324  ldr x0, pc+396 (addr 0x0000ffff582bd9f0)    ;; object: 0x39c04241 <undefined>
0xffff582bd868   328  movz x16, #0x11f
0xffff582bd86c   332  str x0, [x3, x16]
0xffff582bd870   336  ldr x0, pc+392 (addr 0x0000ffff582bd9f8)    ;; object: 0x39c04241 <undefined>
0xffff582bd874   340  movz x16, #0x127
0xffff582bd878   344  str x0, [x3, x16]
0xffff582bd87c   348  mov x0, x3
0xffff582bd880   352  ret
0xffff582bd884   356  sub csp, jssp, #0x10 (16)
0xffff582bd888   360  stp fp, lr, [jssp, #-16]!
0xffff582bd88c   364  movz fp, #0xa00000000
0xffff582bd890   368  sub csp, jssp, #0x8 (8)
0xffff582bd894   372  str fp, [jssp, #-8]!
0xffff582bd898   376  add fp, jssp, #0x8 (8)
0xffff582bd89c   380  movz x3, #0x0
0xffff582bd8a0   384  mov x16, lr
0xffff582bd8a4   388  ldr x17, pc+348 (addr 0x0000ffff582bda00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582bd8a8   392  blr x17
0xffff582bd8ac   396  movz x0, #0x13000000000
0xffff582bd8b0   400  movz x10, #0x0
0xffff582bd8b4   404  sub csp, jssp, #0x10 (16)
0xffff582bd8b8   408  stp x10, x0, [jssp, #-16]!
0xffff582bd8bc   412  movz x0, #0x2
0xffff582bd8c0   416  movz x1, #0x5b88
0xffff582bd8c4   420  movk x1, #0xe2, lsl #16
0xffff582bd8c8   424  ldr x16, pc+320 (addr 0x0000ffff582bda08)    ;; code: STUB, CEntryStub, minor: 5
0xffff582bd8cc   428  blr x16
0xffff582bd8d0   432  str x0, [jssp, #24]
0xffff582bd8d4   436  ldr x16, pc+316 (addr 0x0000ffff582bda10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582bd8d8   440  blr x16
0xffff582bd8dc   444  ldr lr, [jssp, #16]
0xffff582bd8e0   448  ldp xzr, fp, [jssp], #24
0xffff582bd8e4   452  b #-0x1a4 (addr 0xffff582bd740)
0xffff582bd8e8   456  5800097f       constant pool begin (num_const = 75)    ;; constant pool
0xffff582bd8ec   460  d63f03e0       constant
0xffff582bd8f0   464  32b06149       constant
0xffff582bd8f4   468  00000000       constant
0xffff582bd8f8   472  39c04519       constant
0xffff582bd8fc   476  00000000       constant
0xffff582bd900   480  39c04241       constant
0xffff582bd904   484  00000000       constant
0xffff582bd908   488  39c04241       constant
0xffff582bd90c   492  00000000       constant
0xffff582bd910   496  39c04241       constant
0xffff582bd914   500  00000000       constant
0xffff582bd918   504  39c04241       constant
0xffff582bd91c   508  00000000       constant
0xffff582bd920   512  39c04241       constant
0xffff582bd924   516  00000000       constant
0xffff582bd928   520  39c04241       constant
0xffff582bd92c   524  00000000       constant
0xffff582bd930   528  39c04241       constant
0xffff582bd934   532  00000000       constant
0xffff582bd938   536  39c04241       constant
0xffff582bd93c   540  00000000       constant
0xffff582bd940   544  39c04241       constant
0xffff582bd944   548  00000000       constant
0xffff582bd948   552  39c04241       constant
0xffff582bd94c   556  00000000       constant
0xffff582bd950   560  39c04241       constant
0xffff582bd954   564  00000000       constant
0xffff582bd958   568  39c04241       constant
0xffff582bd95c   572  00000000       constant
0xffff582bd960   576  39c04241       constant
0xffff582bd964   580  00000000       constant
0xffff582bd968   584  39c04241       constant
0xffff582bd96c   588  00000000       constant
0xffff582bd970   592  39c04241       constant
0xffff582bd974   596  00000000       constant
0xffff582bd978   600  39c04241       constant
0xffff582bd97c   604  00000000       constant
0xffff582bd980   608  39c04241       constant
0xffff582bd984   612  00000000       constant
0xffff582bd988   616  39c04241       constant
0xffff582bd98c   620  00000000       constant
0xffff582bd990   624  39c04241       constant
0xffff582bd994   628  00000000       constant
0xffff582bd998   632  39c04241       constant
0xffff582bd99c   636  00000000       constant
0xffff582bd9a0   640  39c04241       constant
0xffff582bd9a4   644  00000000       constant
0xffff582bd9a8   648  39c04241       constant
0xffff582bd9ac   652  00000000       constant
0xffff582bd9b0   656  39c04241       constant
0xffff582bd9b4   660  00000000       constant
0xffff582bd9b8   664  39c04241       constant
0xffff582bd9bc   668  00000000       constant
0xffff582bd9c0   672  39c04241       constant
0xffff582bd9c4   676  00000000       constant
0xffff582bd9c8   680  39c04241       constant
0xffff582bd9cc   684  00000000       constant
0xffff582bd9d0   688  39c04241       constant
0xffff582bd9d4   692  00000000       constant
0xffff582bd9d8   696  39c04241       constant
0xffff582bd9dc   700  00000000       constant
0xffff582bd9e0   704  39c04241       constant
0xffff582bd9e4   708  00000000       constant
0xffff582bd9e8   712  39c04241       constant
0xffff582bd9ec   716  00000000       constant
0xffff582bd9f0   720  39c04241       constant
0xffff582bd9f4   724  00000000       constant
0xffff582bd9f8   728  39c04241       constant
0xffff582bd9fc   732  00000000       constant
0xffff582bda00   736  58206820       constant
0xffff582bda04   740  0000ffff       constant
0xffff582bda08   744  58206260       constant
0xffff582bda0c   748  0000ffff       constant
0xffff582bda10   752  582068e0       constant
0xffff582bda14   756  0000ffff       constant


Safepoints (size = 21)
0xffff582bd8d0   432  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 43)
0xffff582bd740  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582bd758  embedded object  (0x39c04519 <the hole>)
0xffff582bd768  embedded object  (0x39c04241 <undefined>)
0xffff582bd770  embedded object  (0x39c04241 <undefined>)
0xffff582bd778  embedded object  (0x39c04241 <undefined>)
0xffff582bd780  embedded object  (0x39c04241 <undefined>)
0xffff582bd788  embedded object  (0x39c04241 <undefined>)
0xffff582bd790  embedded object  (0x39c04241 <undefined>)
0xffff582bd798  embedded object  (0x39c04241 <undefined>)
0xffff582bd7a0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7a8  embedded object  (0x39c04241 <undefined>)
0xffff582bd7b0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7b8  embedded object  (0x39c04241 <undefined>)
0xffff582bd7c0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7c8  embedded object  (0x39c04241 <undefined>)
0xffff582bd7d0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7d8  embedded object  (0x39c04241 <undefined>)
0xffff582bd7e0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7e8  embedded object  (0x39c04241 <undefined>)
0xffff582bd7f0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7f8  embedded object  (0x39c04241 <undefined>)
0xffff582bd800  embedded object  (0x39c04241 <undefined>)
0xffff582bd808  embedded object  (0x39c04241 <undefined>)
0xffff582bd810  embedded object  (0x39c04241 <undefined>)
0xffff582bd818  embedded object  (0x39c04241 <undefined>)
0xffff582bd820  embedded object  (0x39c04241 <undefined>)
0xffff582bd828  embedded object  (0x39c04241 <undefined>)
0xffff582bd830  embedded object  (0x39c04241 <undefined>)
0xffff582bd838  embedded object  (0x39c04241 <undefined>)
0xffff582bd840  embedded object  (0x39c04241 <undefined>)
0xffff582bd84c  embedded object  (0x39c04241 <undefined>)
0xffff582bd858  embedded object  (0x39c04241 <undefined>)
0xffff582bd864  embedded object  (0x39c04241 <undefined>)
0xffff582bd870  embedded object  (0x39c04241 <undefined>)
0xffff582bd8a4  code target (STUB)  (0xffff58206820)
0xffff582bd8c8  code target (STUB)  (0xffff58206260)
0xffff582bd8d4  code target (STUB)  (0xffff582068e0)
0xffff582bd8e8  constant pool (size 304)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 781)
0xffff582bd720     0  movz x2, #0x92c0
0xffff582bd724     4  movk x2, #0x16e7, lsl #16
0xffff582bd728     8  ldp x3, x0, [x2]
0xffff582bd72c    12  adds x16, x3, #0x130 (304)
0xffff582bd730    16  ccmp x16, x0, #nzCv, lo
0xffff582bd734    20  b.hi #+0x150 (addr 0xffff582bd884)
0xffff582bd738    24  str x16, [x2]
0xffff582bd73c    28  orr x3, x3, #0x1
0xffff582bd740    32  ldr x0, pc+432 (addr 0x0000ffff582bd8f0)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582bd744    36  stur x0, [x3, #-1]
0xffff582bd748    40  movz x0, #0x2400000000
0xffff582bd74c    44  stur x0, [x3, #7]
0xffff582bd750    48  stur x1, [x3, #15]
0xffff582bd754    52  stur cp, [x3, #23]
0xffff582bd758    56  ldr x0, pc+416 (addr 0x0000ffff582bd8f8)    ;; object: 0x39c04519 <the hole>
0xffff582bd75c    60  stur x0, [x3, #31]
0xffff582bd760    64  ldur x0, [cp, #39]
0xffff582bd764    68  stur x0, [x3, #39]
0xffff582bd768    72  ldr x0, pc+408 (addr 0x0000ffff582bd900)    ;; object: 0x39c04241 <undefined>
0xffff582bd76c    76  stur x0, [x3, #47]
0xffff582bd770    80  ldr x0, pc+408 (addr 0x0000ffff582bd908)    ;; object: 0x39c04241 <undefined>
0xffff582bd774    84  stur x0, [x3, #55]
0xffff582bd778    88  ldr x0, pc+408 (addr 0x0000ffff582bd910)    ;; object: 0x39c04241 <undefined>
0xffff582bd77c    92  stur x0, [x3, #63]
0xffff582bd780    96  ldr x0, pc+408 (addr 0x0000ffff582bd918)    ;; object: 0x39c04241 <undefined>
0xffff582bd784   100  stur x0, [x3, #71]
0xffff582bd788   104  ldr x0, pc+408 (addr 0x0000ffff582bd920)    ;; object: 0x39c04241 <undefined>
0xffff582bd78c   108  stur x0, [x3, #79]
0xffff582bd790   112  ldr x0, pc+408 (addr 0x0000ffff582bd928)    ;; object: 0x39c04241 <undefined>
0xffff582bd794   116  stur x0, [x3, #87]
0xffff582bd798   120  ldr x0, pc+408 (addr 0x0000ffff582bd930)    ;; object: 0x39c04241 <undefined>
0xffff582bd79c   124  stur x0, [x3, #95]
0xffff582bd7a0   128  ldr x0, pc+408 (addr 0x0000ffff582bd938)    ;; object: 0x39c04241 <undefined>
0xffff582bd7a4   132  stur x0, [x3, #103]
0xffff582bd7a8   136  ldr x0, pc+408 (addr 0x0000ffff582bd940)    ;; object: 0x39c04241 <undefined>
0xffff582bd7ac   140  stur x0, [x3, #111]
0xffff582bd7b0   144  ldr x0, pc+408 (addr 0x0000ffff582bd948)    ;; object: 0x39c04241 <undefined>
0xffff582bd7b4   148  stur x0, [x3, #119]
0xffff582bd7b8   152  ldr x0, pc+408 (addr 0x0000ffff582bd950)    ;; object: 0x39c04241 <undefined>
0xffff582bd7bc   156  stur x0, [x3, #127]
0xffff582bd7c0   160  ldr x0, pc+408 (addr 0x0000ffff582bd958)    ;; object: 0x39c04241 <undefined>
0xffff582bd7c4   164  stur x0, [x3, #135]
0xffff582bd7c8   168  ldr x0, pc+408 (addr 0x0000ffff582bd960)    ;; object: 0x39c04241 <undefined>
0xffff582bd7cc   172  stur x0, [x3, #143]
0xffff582bd7d0   176  ldr x0, pc+408 (addr 0x0000ffff582bd968)    ;; object: 0x39c04241 <undefined>
0xffff582bd7d4   180  stur x0, [x3, #151]
0xffff582bd7d8   184  ldr x0, pc+408 (addr 0x0000ffff582bd970)    ;; object: 0x39c04241 <undefined>
0xffff582bd7dc   188  stur x0, [x3, #159]
0xffff582bd7e0   192  ldr x0, pc+408 (addr 0x0000ffff582bd978)    ;; object: 0x39c04241 <undefined>
0xffff582bd7e4   196  stur x0, [x3, #167]
0xffff582bd7e8   200  ldr x0, pc+408 (addr 0x0000ffff582bd980)    ;; object: 0x39c04241 <undefined>
0xffff582bd7ec   204  stur x0, [x3, #175]
0xffff582bd7f0   208  ldr x0, pc+408 (addr 0x0000ffff582bd988)    ;; object: 0x39c04241 <undefined>
0xffff582bd7f4   212  stur x0, [x3, #183]
0xffff582bd7f8   216  ldr x0, pc+408 (addr 0x0000ffff582bd990)    ;; object: 0x39c04241 <undefined>
0xffff582bd7fc   220  stur x0, [x3, #191]
0xffff582bd800   224  ldr x0, pc+408 (addr 0x0000ffff582bd998)    ;; object: 0x39c04241 <undefined>
0xffff582bd804   228  stur x0, [x3, #199]
0xffff582bd808   232  ldr x0, pc+408 (addr 0x0000ffff582bd9a0)    ;; object: 0x39c04241 <undefined>
0xffff582bd80c   236  stur x0, [x3, #207]
0xffff582bd810   240  ldr x0, pc+408 (addr 0x0000ffff582bd9a8)    ;; object: 0x39c04241 <undefined>
0xffff582bd814   244  stur x0, [x3, #215]
0xffff582bd818   248  ldr x0, pc+408 (addr 0x0000ffff582bd9b0)    ;; object: 0x39c04241 <undefined>
0xffff582bd81c   252  stur x0, [x3, #223]
0xffff582bd820   256  ldr x0, pc+408 (addr 0x0000ffff582bd9b8)    ;; object: 0x39c04241 <undefined>
0xffff582bd824   260  stur x0, [x3, #231]
0xffff582bd828   264  ldr x0, pc+408 (addr 0x0000ffff582bd9c0)    ;; object: 0x39c04241 <undefined>
0xffff582bd82c   268  stur x0, [x3, #239]
0xffff582bd830   272  ldr x0, pc+408 (addr 0x0000ffff582bd9c8)    ;; object: 0x39c04241 <undefined>
0xffff582bd834   276  stur x0, [x3, #247]
0xffff582bd838   280  ldr x0, pc+408 (addr 0x0000ffff582bd9d0)    ;; object: 0x39c04241 <undefined>
0xffff582bd83c   284  stur x0, [x3, #255]
0xffff582bd840   288  ldr x0, pc+408 (addr 0x0000ffff582bd9d8)    ;; object: 0x39c04241 <undefined>
0xffff582bd844   292  movz x16, #0x107
0xffff582bd848   296  str x0, [x3, x16]
0xffff582bd84c   300  ldr x0, pc+404 (addr 0x0000ffff582bd9e0)    ;; object: 0x39c04241 <undefined>
0xffff582bd850   304  movz x16, #0x10f
0xffff582bd854   308  str x0, [x3, x16]
0xffff582bd858   312  ldr x0, pc+400 (addr 0x0000ffff582bd9e8)    ;; object: 0x39c04241 <undefined>
0xffff582bd85c   316  movz x16, #0x117
0xffff582bd860   320  str x0, [x3, x16]
0xffff582bd864   324  ldr x0, pc+396 (addr 0x0000ffff582bd9f0)    ;; object: 0x39c04241 <undefined>
0xffff582bd868   328  movz x16, #0x11f
0xffff582bd86c   332  str x0, [x3, x16]
0xffff582bd870   336  ldr x0, pc+392 (addr 0x0000ffff582bd9f8)    ;; object: 0x39c04241 <undefined>
0xffff582bd874   340  movz x16, #0x127
0xffff582bd878   344  str x0, [x3, x16]
0xffff582bd87c   348  mov x0, x3
0xffff582bd880   352  ret
0xffff582bd884   356  sub csp, jssp, #0x10 (16)
0xffff582bd888   360  stp fp, lr, [jssp, #-16]!
0xffff582bd88c   364  movz fp, #0xa00000000
0xffff582bd890   368  sub csp, jssp, #0x8 (8)
0xffff582bd894   372  str fp, [jssp, #-8]!
0xffff582bd898   376  add fp, jssp, #0x8 (8)
0xffff582bd89c   380  movz x3, #0x0
0xffff582bd8a0   384  mov x16, lr
0xffff582bd8a4   388  ldr x17, pc+348 (addr 0x0000ffff582bda00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582bd8a8   392  blr x17
0xffff582bd8ac   396  movz x0, #0x13000000000
0xffff582bd8b0   400  movz x10, #0x0
0xffff582bd8b4   404  sub csp, jssp, #0x10 (16)
0xffff582bd8b8   408  stp x10, x0, [jssp, #-16]!
0xffff582bd8bc   412  movz x0, #0x2
0xffff582bd8c0   416  movz x1, #0x5b88
0xffff582bd8c4   420  movk x1, #0xe2, lsl #16
0xffff582bd8c8   424  ldr x16, pc+320 (addr 0x0000ffff582bda08)    ;; code: STUB, CEntryStub, minor: 5
0xffff582bd8cc   428  blr x16
0xffff582bd8d0   432  str x0, [jssp, #24]
0xffff582bd8d4   436  ldr x16, pc+316 (addr 0x0000ffff582bda10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582bd8d8   440  blr x16
0xffff582bd8dc   444  ldr lr, [jssp, #16]
0xffff582bd8e0   448  ldp xzr, fp, [jssp], #24
0xffff582bd8e4   452  b #-0x1a4 (addr 0xffff582bd740)
0xffff582bd8e8   456  5800097f       constant pool begin (num_const = 75)    ;; constant pool
0xffff582bd8ec   460  d63f03e0       constant
0xffff582bd8f0   464  32b06149       constant
0xffff582bd8f4   468  00000000       constant
0xffff582bd8f8   472  39c04519       constant
0xffff582bd8fc   476  00000000       constant
0xffff582bd900   480  39c04241       constant
0xffff582bd904   484  00000000       constant
0xffff582bd908   488  39c04241       constant
0xffff582bd90c   492  00000000       constant
0xffff582bd910   496  39c04241       constant
0xffff582bd914   500  00000000       constant
0xffff582bd918   504  39c04241       constant
0xffff582bd91c   508  00000000       constant
0xffff582bd920   512  39c04241       constant
0xffff582bd924   516  00000000       constant
0xffff582bd928   520  39c04241       constant
0xffff582bd92c   524  00000000       constant
0xffff582bd930   528  39c04241       constant
0xffff582bd934   532  00000000       constant
0xffff582bd938   536  39c04241       constant
0xffff582bd93c   540  00000000       constant
0xffff582bd940   544  39c04241       constant
0xffff582bd944   548  00000000       constant
0xffff582bd948   552  39c04241       constant
0xffff582bd94c   556  00000000       constant
0xffff582bd950   560  39c04241       constant
0xffff582bd954   564  00000000       constant
0xffff582bd958   568  39c04241       constant
0xffff582bd95c   572  00000000       constant
0xffff582bd960   576  39c04241       constant
0xffff582bd964   580  00000000       constant
0xffff582bd968   584  39c04241       constant
0xffff582bd96c   588  00000000       constant
0xffff582bd970   592  39c04241       constant
0xffff582bd974   596  00000000       constant
0xffff582bd978   600  39c04241       constant
0xffff582bd97c   604  00000000       constant
0xffff582bd980   608  39c04241       constant
0xffff582bd984   612  00000000       constant
0xffff582bd988   616  39c04241       constant
0xffff582bd98c   620  00000000       constant
0xffff582bd990   624  39c04241       constant
0xffff582bd994   628  00000000       constant
0xffff582bd998   632  39c04241       constant
0xffff582bd99c   636  00000000       constant
0xffff582bd9a0   640  39c04241       constant
0xffff582bd9a4   644  00000000       constant
0xffff582bd9a8   648  39c04241       constant
0xffff582bd9ac   652  00000000       constant
0xffff582bd9b0   656  39c04241       constant
0xffff582bd9b4   660  00000000       constant
0xffff582bd9b8   664  39c04241       constant
0xffff582bd9bc   668  00000000       constant
0xffff582bd9c0   672  39c04241       constant
0xffff582bd9c4   676  00000000       constant
0xffff582bd9c8   680  39c04241       constant
0xffff582bd9cc   684  00000000       constant
0xffff582bd9d0   688  39c04241       constant
0xffff582bd9d4   692  00000000       constant
0xffff582bd9d8   696  39c04241       constant
0xffff582bd9dc   700  00000000       constant
0xffff582bd9e0   704  39c04241       constant
0xffff582bd9e4   708  00000000       constant
0xffff582bd9e8   712  39c04241       constant
0xffff582bd9ec   716  00000000       constant
0xffff582bd9f0   720  39c04241       constant
0xffff582bd9f4   724  00000000       constant
0xffff582bd9f8   728  39c04241       constant
0xffff582bd9fc   732  00000000       constant
0xffff582bda00   736  58206820       constant
0xffff582bda04   740  0000ffff       constant
0xffff582bda08   744  58206260       constant
0xffff582bda0c   748  0000ffff       constant
0xffff582bda10   752  582068e0       constant
0xffff582bda14   756  0000ffff       constant


Safepoints (size = 21)
0xffff582bd8d0   432  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 43)
0xffff582bd740  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582bd758  embedded object  (0x39c04519 <the hole>)
0xffff582bd768  embedded object  (0x39c04241 <undefined>)
0xffff582bd770  embedded object  (0x39c04241 <undefined>)
0xffff582bd778  embedded object  (0x39c04241 <undefined>)
0xffff582bd780  embedded object  (0x39c04241 <undefined>)
0xffff582bd788  embedded object  (0x39c04241 <undefined>)
0xffff582bd790  embedded object  (0x39c04241 <undefined>)
0xffff582bd798  embedded object  (0x39c04241 <undefined>)
0xffff582bd7a0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7a8  embedded object  (0x39c04241 <undefined>)
0xffff582bd7b0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7b8  embedded object  (0x39c04241 <undefined>)
0xffff582bd7c0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7c8  embedded object  (0x39c04241 <undefined>)
0xffff582bd7d0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7d8  embedded object  (0x39c04241 <undefined>)
0xffff582bd7e0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7e8  embedded object  (0x39c04241 <undefined>)
0xffff582bd7f0  embedded object  (0x39c04241 <undefined>)
0xffff582bd7f8  embedded object  (0x39c04241 <undefined>)
0xffff582bd800  embedded object  (0x39c04241 <undefined>)
0xffff582bd808  embedded object  (0x39c04241 <undefined>)
0xffff582bd810  embedded object  (0x39c04241 <undefined>)
0xffff582bd818  embedded object  (0x39c04241 <undefined>)
0xffff582bd820  embedded object  (0x39c04241 <undefined>)
0xffff582bd828  embedded object  (0x39c04241 <undefined>)
0xffff582bd830  embedded object  (0x39c04241 <undefined>)
0xffff582bd838  embedded object  (0x39c04241 <undefined>)
0xffff582bd840  embedded object  (0x39c04241 <undefined>)
0xffff582bd84c  embedded object  (0x39c04241 <undefined>)
0xffff582bd858  embedded object  (0x39c04241 <undefined>)
0xffff582bd864  embedded object  (0x39c04241 <undefined>)
0xffff582bd870  embedded object  (0x39c04241 <undefined>)
0xffff582bd8a4  code target (STUB)  (0xffff58206820)
0xffff582bd8c8  code target (STUB)  (0xffff58206260)
0xffff582bd8d4  code target (STUB)  (0xffff582068e0)
0xffff582bd8e8  constant pool (size 304)


kind = HANDLER
major_key = <NoCache>Stub
name = toUpperCase
compiler = unknown
Instructions (size = 152)
0xffff582bf0a0     0  sub csp, jssp, #0x8 (8)
0xffff582bf0a4     4  str x3, [jssp, #-8]!
0xffff582bf0a8     8  sub csp, jssp, #0x8 (8)
0xffff582bf0ac    12  str x0, [jssp, #-8]!
0xffff582bf0b0    16  ldur x3, [cp, #39]
0xffff582bf0b4    20  movz x16, #0x2e7
0xffff582bf0b8    24  ldr x3, [x3, x16]
0xffff582bf0bc    28  ldur x3, [x3, #23]
0xffff582bf0c0    32  ldur x3, [x3, #23]
0xffff582bf0c4    36  ldr x0, pc+84 (addr 0x0000ffff582bf118)    ;; object: 0x39c63e59 Cell for 0
0xffff582bf0c8    40  ldur x0, [x0, #7]
0xffff582bf0cc    44  cmp x0, #0x0 (0)
0xffff582bf0d0    48  b.ne #+0x1c (addr 0xffff582bf0ec)
0xffff582bf0d4    52  ldur x0, [x3, #-1]
0xffff582bf0d8    56  ldr x4, pc+72 (addr 0x0000ffff582bf120)    ;; object: 0x22506e39 WeakCell for 0x32b156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff582bf0dc    60  ldur x4, [x4, #7]
0xffff582bf0e0    64  cmp x0, x4
0xffff582bf0e4    68  b.ne #+0x8 (addr 0xffff582bf0ec)
0xffff582bf0e8    72  b #+0x14 (addr 0xffff582bf0fc)
0xffff582bf0ec    76  ldr x0, [jssp], #8
0xffff582bf0f0    80  ldr x3, [jssp], #8
0xffff582bf0f4    84  ldr x16, pc+52 (addr 0x0000ffff582bf128)    ;; code: BUILTIN
0xffff582bf0f8    88  br x16
0xffff582bf0fc    92  add jssp, jssp, #0x10 (16)
0xffff582bf100    96  mov x1, x3
0xffff582bf104   100  ldr x16, pc+44 (addr 0x0000ffff582bf130)    ;; code: HANDLER, LoadConstantStub, minor: 25
0xffff582bf108   104  br x16
0xffff582bf10c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff582bf110   112  d63f03e0       constant
0xffff582bf114   116  d503201f       constant
0xffff582bf118   120  39c63e59       constant
0xffff582bf11c   124  00000000       constant
0xffff582bf120   128  22506e39       constant
0xffff582bf124   132  00000000       constant
0xffff582bf128   136  582222e0       constant
0xffff582bf12c   140  0000ffff       constant
0xffff582bf130   144  5827b440       constant
0xffff582bf134   148  0000ffff       constant


RelocInfo (size = 10)
0xffff582bf0c4  embedded object  (0x39c63e59 Cell for 0)
0xffff582bf0d8  embedded object  (0x22506e39 WeakCell for 0x32b156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff582bf0f4  code target (BUILTIN)  (0xffff582222e0)
0xffff582bf104  code target (HANDLER)  (0xffff5827b440)
0xffff582bf10c  constant pool (size 44)

kind = HANDLER
major_key = <NoCache>Stub
name = RegExp
compiler = unknown
Instructions (size = 120)
0xffff582bf1a0     0  sub csp, jssp, #0x8 (8)
0xffff582bf1a4     4  str x3, [jssp, #-8]!
0xffff582bf1a8     8  sub csp, jssp, #0x8 (8)
0xffff582bf1ac    12  str x0, [jssp, #-8]!
0xffff582bf1b0    16  ldr x0, pc+80 (addr 0x0000ffff582bf200)    ;; object: 0x39cc5d51 Cell for 0
0xffff582bf1b4    20  ldur x0, [x0, #7]
0xffff582bf1b8    24  cmp x0, #0x0 (0)
0xffff582bf1bc    28  b.ne #+0x2c (addr 0xffff582bf1e8)
0xffff582bf1c0    32  ldr x0, pc+72 (addr 0x0000ffff582bf208)    ;; object: 0x22520c49 WeakCell for 0x39c46281 PropertyCell for 0x39c46219 <JS Function RegExp (SharedFunctionInfo 0x39c46171)>
0xffff582bf1c4    36  ldur x0, [x0, #7]
0xffff582bf1c8    40  tbz w0, #0, #+0x20 (addr 0xffff582bf1e8)
0xffff582bf1cc    44  ldur x0, [x0, #15]
0xffff582bf1d0    48  ldr x16, [x26, #88]
0xffff582bf1d4    52  cmp x0, x16
0xffff582bf1d8    56  b.eq #+0x10 (addr 0xffff582bf1e8)
0xffff582bf1dc    60  add jssp, jssp, #0x10 (16)
0xffff582bf1e0    64  ret
0xffff582bf1e4    68  b #+0x14 (addr 0xffff582bf1f8)
0xffff582bf1e8    72  ldr x0, [jssp], #8
0xffff582bf1ec    76  ldr x3, [jssp], #8
0xffff582bf1f0    80  ldr x16, pc+32 (addr 0x0000ffff582bf210)    ;; code: BUILTIN
0xffff582bf1f4    84  br x16
0xffff582bf1f8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582bf1fc    92  d63f03e0       constant
0xffff582bf200    96  39cc5d51       constant
0xffff582bf204   100  00000000       constant
0xffff582bf208   104  22520c49       constant
0xffff582bf20c   108  00000000       constant
0xffff582bf210   112  582222e0       constant
0xffff582bf214   116  0000ffff       constant


RelocInfo (size = 9)
0xffff582bf1b0  embedded object  (0x39cc5d51 Cell for 0)
0xffff582bf1c0  embedded object  (0x22520c49 WeakCell for 0x39c46281 PropertyCell for 0x39c46219 <JS Function RegExp (SharedFunctionInfo 0x39c46171)>)
0xffff582bf1f0  code target (BUILTIN)  (0xffff582222e0)
0xffff582bf1f8  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = test
compiler = unknown
Instructions (size = 120)
0xffff582bf280     0  sub csp, jssp, #0x8 (8)
0xffff582bf284     4  str x3, [jssp, #-8]!
0xffff582bf288     8  sub csp, jssp, #0x8 (8)
0xffff582bf28c    12  str x0, [jssp, #-8]!
0xffff582bf290    16  ldr x0, pc+72 (addr 0x0000ffff582bf2d8)    ;; object: 0x39ced491 Cell for 0
0xffff582bf294    20  ldur x0, [x0, #7]
0xffff582bf298    24  cmp x0, #0x0 (0)
0xffff582bf29c    28  b.ne #+0x14 (addr 0xffff582bf2b0)
0xffff582bf2a0    32  ldr x3, pc+64 (addr 0x0000ffff582bf2e0)    ;; object: 0x22520c81 WeakCell for 0x25f6ca81 <an Object with map 0x32b164d1>
0xffff582bf2a4    36  ldur x3, [x3, #7]
0xffff582bf2a8    40  tbz w3, #0, #+0x8 (addr 0xffff582bf2b0)
0xffff582bf2ac    44  b #+0x14 (addr 0xffff582bf2c0)
0xffff582bf2b0    48  ldr x0, [jssp], #8
0xffff582bf2b4    52  ldr x3, [jssp], #8
0xffff582bf2b8    56  ldr x16, pc+48 (addr 0x0000ffff582bf2e8)    ;; code: BUILTIN
0xffff582bf2bc    60  br x16
0xffff582bf2c0    64  add jssp, jssp, #0x10 (16)
0xffff582bf2c4    68  mov x1, x3
0xffff582bf2c8    72  ldr x16, pc+40 (addr 0x0000ffff582bf2f0)    ;; code: HANDLER, LoadFieldStub, minor: 7
0xffff582bf2cc    76  br x16
0xffff582bf2d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582bf2d4    84  d63f03e0       constant
0xffff582bf2d8    88  39ced491       constant
0xffff582bf2dc    92  00000000       constant
0xffff582bf2e0    96  22520c81       constant
0xffff582bf2e4   100  00000000       constant
0xffff582bf2e8   104  582222e0       constant
0xffff582bf2ec   108  0000ffff       constant
0xffff582bf2f0   112  58267340       constant
0xffff582bf2f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582bf290  embedded object  (0x39ced491 Cell for 0)
0xffff582bf2a0  embedded object  (0x22520c81 WeakCell for 0x25f6ca81 <an Object with map 0x32b164d1>)
0xffff582bf2b8  code target (BUILTIN)  (0xffff582222e0)
0xffff582bf2c8  code target (HANDLER)  (0xffff58267340)
0xffff582bf2d0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = super_
compiler = unknown
Instructions (size = 168)
0xffff582bff00     0  sub csp, jssp, #0x8 (8)
0xffff582bff04     4  str x3, [jssp, #-8]!
0xffff582bff08     8  sub csp, jssp, #0x8 (8)
0xffff582bff0c    12  str x4, [jssp, #-8]!
0xffff582bff10    16  ldr x3, pc+104 (addr 0x0000ffff582bff78)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582bff14    20  ldur x3, [x3, #7]
0xffff582bff18    24  cmp x3, #0x0 (0)
0xffff582bff1c    28  b.ne #+0x3c (addr 0xffff582bff58)
0xffff582bff20    32  ldr x5, pc+96 (addr 0x0000ffff582bff80)    ;; object: 0x22521e39 WeakCell for 0x32b30469 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582bff24    36  ldur x5, [x5, #7]
0xffff582bff28    40  tbz w5, #0, #+0x30 (addr 0xffff582bff58)
0xffff582bff2c    44  ldursw x4, [x5, #15]
0xffff582bff30    48  tbnz w4, #23, #+0x28 (addr 0xffff582bff58)
0xffff582bff34    52  ldur x4, [x5, #47]
0xffff582bff38    56  ldur x4, [x4, #143]
0xffff582bff3c    60  cmp x0, x4
0xffff582bff40    64  b.ne #+0x18 (addr 0xffff582bff58)
0xffff582bff44    68  ldr x4, [jssp], #8
0xffff582bff48    72  ldr x3, [jssp], #8
0xffff582bff4c    76  ldr x2, pc+60 (addr 0x0000ffff582bff88)    ;; object: 0x39cc9f09 <String[6]: super_>
0xffff582bff50    80  ldr x16, pc+64 (addr 0x0000ffff582bff90)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff582bff54    84  br x16
0xffff582bff58    88  ldr x2, pc+64 (addr 0x0000ffff582bff98)    ;; object: 0x39cc9f09 <String[6]: super_>
0xffff582bff5c    92  ldr x4, [jssp], #8
0xffff582bff60    96  ldr x3, [jssp], #8
0xffff582bff64   100  ldr x16, pc+60 (addr 0x0000ffff582bffa0)    ;; code: BUILTIN
0xffff582bff68   104  br x16
0xffff582bff6c   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582bff70   112  d63f03e0       constant
0xffff582bff74   116  d503201f       constant
0xffff582bff78   120  39c5b0f1       constant
0xffff582bff7c   124  00000000       constant
0xffff582bff80   128  22521e39       constant
0xffff582bff84   132  00000000       constant
0xffff582bff88   136  39cc9f09       constant
0xffff582bff8c   140  00000000       constant
0xffff582bff90   144  5823cea0       constant
0xffff582bff94   148  0000ffff       constant
0xffff582bff98   152  39cc9f09       constant
0xffff582bff9c   156  00000000       constant
0xffff582bffa0   160  58222420       constant
0xffff582bffa4   164  0000ffff       constant


RelocInfo (size = 12)
0xffff582bff10  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582bff20  embedded object  (0x22521e39 WeakCell for 0x32b30469 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582bff4c  embedded object  (0x39cc9f09 <String[6]: super_>)
0xffff582bff50  code target (HANDLER)  (0xffff5823cea0)
0xffff582bff58  embedded object  (0x39cc9f09 <String[6]: super_>)
0xffff582bff64  code target (BUILTIN)  (0xffff58222420)
0xffff582bff6c  constant pool (size 60)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 621)
0xffff582c0020     0  movz x2, #0x92c0
0xffff582c0024     4  movk x2, #0x16e7, lsl #16
0xffff582c0028     8  ldp x3, x0, [x2]
0xffff582c002c    12  adds x16, x3, #0xe8 (232)
0xffff582c0030    16  ccmp x16, x0, #nzCv, lo
0xffff582c0034    20  b.hi #+0xf4 (addr 0xffff582c0128)
0xffff582c0038    24  str x16, [x2]
0xffff582c003c    28  orr x3, x3, #0x1
0xffff582c0040    32  ldr x0, pc+344 (addr 0x0000ffff582c0198)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582c0044    36  stur x0, [x3, #-1]
0xffff582c0048    40  movz x0, #0x1b00000000
0xffff582c004c    44  stur x0, [x3, #7]
0xffff582c0050    48  stur x1, [x3, #15]
0xffff582c0054    52  stur cp, [x3, #23]
0xffff582c0058    56  ldr x0, pc+328 (addr 0x0000ffff582c01a0)    ;; object: 0x39c04519 <the hole>
0xffff582c005c    60  stur x0, [x3, #31]
0xffff582c0060    64  ldur x0, [cp, #39]
0xffff582c0064    68  stur x0, [x3, #39]
0xffff582c0068    72  ldr x0, pc+320 (addr 0x0000ffff582c01a8)    ;; object: 0x39c04241 <undefined>
0xffff582c006c    76  stur x0, [x3, #47]
0xffff582c0070    80  ldr x0, pc+320 (addr 0x0000ffff582c01b0)    ;; object: 0x39c04241 <undefined>
0xffff582c0074    84  stur x0, [x3, #55]
0xffff582c0078    88  ldr x0, pc+320 (addr 0x0000ffff582c01b8)    ;; object: 0x39c04241 <undefined>
0xffff582c007c    92  stur x0, [x3, #63]
0xffff582c0080    96  ldr x0, pc+320 (addr 0x0000ffff582c01c0)    ;; object: 0x39c04241 <undefined>
0xffff582c0084   100  stur x0, [x3, #71]
0xffff582c0088   104  ldr x0, pc+320 (addr 0x0000ffff582c01c8)    ;; object: 0x39c04241 <undefined>
0xffff582c008c   108  stur x0, [x3, #79]
0xffff582c0090   112  ldr x0, pc+320 (addr 0x0000ffff582c01d0)    ;; object: 0x39c04241 <undefined>
0xffff582c0094   116  stur x0, [x3, #87]
0xffff582c0098   120  ldr x0, pc+320 (addr 0x0000ffff582c01d8)    ;; object: 0x39c04241 <undefined>
0xffff582c009c   124  stur x0, [x3, #95]
0xffff582c00a0   128  ldr x0, pc+320 (addr 0x0000ffff582c01e0)    ;; object: 0x39c04241 <undefined>
0xffff582c00a4   132  stur x0, [x3, #103]
0xffff582c00a8   136  ldr x0, pc+320 (addr 0x0000ffff582c01e8)    ;; object: 0x39c04241 <undefined>
0xffff582c00ac   140  stur x0, [x3, #111]
0xffff582c00b0   144  ldr x0, pc+320 (addr 0x0000ffff582c01f0)    ;; object: 0x39c04241 <undefined>
0xffff582c00b4   148  stur x0, [x3, #119]
0xffff582c00b8   152  ldr x0, pc+320 (addr 0x0000ffff582c01f8)    ;; object: 0x39c04241 <undefined>
0xffff582c00bc   156  stur x0, [x3, #127]
0xffff582c00c0   160  ldr x0, pc+320 (addr 0x0000ffff582c0200)    ;; object: 0x39c04241 <undefined>
0xffff582c00c4   164  stur x0, [x3, #135]
0xffff582c00c8   168  ldr x0, pc+320 (addr 0x0000ffff582c0208)    ;; object: 0x39c04241 <undefined>
0xffff582c00cc   172  stur x0, [x3, #143]
0xffff582c00d0   176  ldr x0, pc+320 (addr 0x0000ffff582c0210)    ;; object: 0x39c04241 <undefined>
0xffff582c00d4   180  stur x0, [x3, #151]
0xffff582c00d8   184  ldr x0, pc+320 (addr 0x0000ffff582c0218)    ;; object: 0x39c04241 <undefined>
0xffff582c00dc   188  stur x0, [x3, #159]
0xffff582c00e0   192  ldr x0, pc+320 (addr 0x0000ffff582c0220)    ;; object: 0x39c04241 <undefined>
0xffff582c00e4   196  stur x0, [x3, #167]
0xffff582c00e8   200  ldr x0, pc+320 (addr 0x0000ffff582c0228)    ;; object: 0x39c04241 <undefined>
0xffff582c00ec   204  stur x0, [x3, #175]
0xffff582c00f0   208  ldr x0, pc+320 (addr 0x0000ffff582c0230)    ;; object: 0x39c04241 <undefined>
0xffff582c00f4   212  stur x0, [x3, #183]
0xffff582c00f8   216  ldr x0, pc+320 (addr 0x0000ffff582c0238)    ;; object: 0x39c04241 <undefined>
0xffff582c00fc   220  stur x0, [x3, #191]
0xffff582c0100   224  ldr x0, pc+320 (addr 0x0000ffff582c0240)    ;; object: 0x39c04241 <undefined>
0xffff582c0104   228  stur x0, [x3, #199]
0xffff582c0108   232  ldr x0, pc+320 (addr 0x0000ffff582c0248)    ;; object: 0x39c04241 <undefined>
0xffff582c010c   236  stur x0, [x3, #207]
0xffff582c0110   240  ldr x0, pc+320 (addr 0x0000ffff582c0250)    ;; object: 0x39c04241 <undefined>
0xffff582c0114   244  stur x0, [x3, #215]
0xffff582c0118   248  ldr x0, pc+320 (addr 0x0000ffff582c0258)    ;; object: 0x39c04241 <undefined>
0xffff582c011c   252  stur x0, [x3, #223]
0xffff582c0120   256  mov x0, x3
0xffff582c0124   260  ret
0xffff582c0128   264  sub csp, jssp, #0x10 (16)
0xffff582c012c   268  stp fp, lr, [jssp, #-16]!
0xffff582c0130   272  movz fp, #0xa00000000
0xffff582c0134   276  sub csp, jssp, #0x8 (8)
0xffff582c0138   280  str fp, [jssp, #-8]!
0xffff582c013c   284  add fp, jssp, #0x8 (8)
0xffff582c0140   288  movz x3, #0x0
0xffff582c0144   292  mov x16, lr
0xffff582c0148   296  ldr x17, pc+280 (addr 0x0000ffff582c0260)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582c014c   300  blr x17
0xffff582c0150   304  movz x0, #0xe800000000
0xffff582c0154   308  movz x10, #0x0
0xffff582c0158   312  sub csp, jssp, #0x10 (16)
0xffff582c015c   316  stp x10, x0, [jssp, #-16]!
0xffff582c0160   320  movz x0, #0x2
0xffff582c0164   324  movz x1, #0x5b88
0xffff582c0168   328  movk x1, #0xe2, lsl #16
0xffff582c016c   332  ldr x16, pc+252 (addr 0x0000ffff582c0268)    ;; code: STUB, CEntryStub, minor: 5
0xffff582c0170   336  blr x16
0xffff582c0174   340  str x0, [jssp, #24]
0xffff582c0178   344  ldr x16, pc+248 (addr 0x0000ffff582c0270)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582c017c   348  blr x16
0xffff582c0180   352  ldr lr, [jssp, #16]
0xffff582c0184   356  ldp xzr, fp, [jssp], #24
0xffff582c0188   360  b #-0x148 (addr 0xffff582c0040)
0xffff582c018c   364  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff582c0190   368  d63f03e0       constant
0xffff582c0194   372  d503201f       constant
0xffff582c0198   376  32b06149       constant
0xffff582c019c   380  00000000       constant
0xffff582c01a0   384  39c04519       constant
0xffff582c01a4   388  00000000       constant
0xffff582c01a8   392  39c04241       constant
0xffff582c01ac   396  00000000       constant
0xffff582c01b0   400  39c04241       constant
0xffff582c01b4   404  00000000       constant
0xffff582c01b8   408  39c04241       constant
0xffff582c01bc   412  00000000       constant
0xffff582c01c0   416  39c04241       constant
0xffff582c01c4   420  00000000       constant
0xffff582c01c8   424  39c04241       constant
0xffff582c01cc   428  00000000       constant
0xffff582c01d0   432  39c04241       constant
0xffff582c01d4   436  00000000       constant
0xffff582c01d8   440  39c04241       constant
0xffff582c01dc   444  00000000       constant
0xffff582c01e0   448  39c04241       constant
0xffff582c01e4   452  00000000       constant
0xffff582c01e8   456  39c04241       constant
0xffff582c01ec   460  00000000       constant
0xffff582c01f0   464  39c04241       constant
0xffff582c01f4   468  00000000       constant
0xffff582c01f8   472  39c04241       constant
0xffff582c01fc   476  00000000       constant
0xffff582c0200   480  39c04241       constant
0xffff582c0204   484  00000000       constant
0xffff582c0208   488  39c04241       constant
0xffff582c020c   492  00000000       constant
0xffff582c0210   496  39c04241       constant
0xffff582c0214   500  00000000       constant
0xffff582c0218   504  39c04241       constant
0xffff582c021c   508  00000000       constant
0xffff582c0220   512  39c04241       constant
0xffff582c0224   516  00000000       constant
0xffff582c0228   520  39c04241       constant
0xffff582c022c   524  00000000       constant
0xffff582c0230   528  39c04241       constant
0xffff582c0234   532  00000000       constant
0xffff582c0238   536  39c04241       constant
0xffff582c023c   540  00000000       constant
0xffff582c0240   544  39c04241       constant
0xffff582c0244   548  00000000       constant
0xffff582c0248   552  39c04241       constant
0xffff582c024c   556  00000000       constant
0xffff582c0250   560  39c04241       constant
0xffff582c0254   564  00000000       constant
0xffff582c0258   568  39c04241       constant
0xffff582c025c   572  00000000       constant
0xffff582c0260   576  58206820       constant
0xffff582c0264   580  0000ffff       constant
0xffff582c0268   584  58206260       constant
0xffff582c026c   588  0000ffff       constant
0xffff582c0270   592  582068e0       constant
0xffff582c0274   596  0000ffff       constant


Safepoints (size = 21)
0xffff582c0174   340  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff582c0040  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582c0058  embedded object  (0x39c04519 <the hole>)
0xffff582c0068  embedded object  (0x39c04241 <undefined>)
0xffff582c0070  embedded object  (0x39c04241 <undefined>)
0xffff582c0078  embedded object  (0x39c04241 <undefined>)
0xffff582c0080  embedded object  (0x39c04241 <undefined>)
0xffff582c0088  embedded object  (0x39c04241 <undefined>)
0xffff582c0090  embedded object  (0x39c04241 <undefined>)
0xffff582c0098  embedded object  (0x39c04241 <undefined>)
0xffff582c00a0  embedded object  (0x39c04241 <undefined>)
0xffff582c00a8  embedded object  (0x39c04241 <undefined>)
0xffff582c00b0  embedded object  (0x39c04241 <undefined>)
0xffff582c00b8  embedded object  (0x39c04241 <undefined>)
0xffff582c00c0  embedded object  (0x39c04241 <undefined>)
0xffff582c00c8  embedded object  (0x39c04241 <undefined>)
0xffff582c00d0  embedded object  (0x39c04241 <undefined>)
0xffff582c00d8  embedded object  (0x39c04241 <undefined>)
0xffff582c00e0  embedded object  (0x39c04241 <undefined>)
0xffff582c00e8  embedded object  (0x39c04241 <undefined>)
0xffff582c00f0  embedded object  (0x39c04241 <undefined>)
0xffff582c00f8  embedded object  (0x39c04241 <undefined>)
0xffff582c0100  embedded object  (0x39c04241 <undefined>)
0xffff582c0108  embedded object  (0x39c04241 <undefined>)
0xffff582c0110  embedded object  (0x39c04241 <undefined>)
0xffff582c0118  embedded object  (0x39c04241 <undefined>)
0xffff582c0148  code target (STUB)  (0xffff58206820)
0xffff582c016c  code target (STUB)  (0xffff58206260)
0xffff582c0178  code target (STUB)  (0xffff582068e0)
0xffff582c018c  constant pool (size 236)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 621)
0xffff582c0020     0  movz x2, #0x92c0
0xffff582c0024     4  movk x2, #0x16e7, lsl #16
0xffff582c0028     8  ldp x3, x0, [x2]
0xffff582c002c    12  adds x16, x3, #0xe8 (232)
0xffff582c0030    16  ccmp x16, x0, #nzCv, lo
0xffff582c0034    20  b.hi #+0xf4 (addr 0xffff582c0128)
0xffff582c0038    24  str x16, [x2]
0xffff582c003c    28  orr x3, x3, #0x1
0xffff582c0040    32  ldr x0, pc+344 (addr 0x0000ffff582c0198)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582c0044    36  stur x0, [x3, #-1]
0xffff582c0048    40  movz x0, #0x1b00000000
0xffff582c004c    44  stur x0, [x3, #7]
0xffff582c0050    48  stur x1, [x3, #15]
0xffff582c0054    52  stur cp, [x3, #23]
0xffff582c0058    56  ldr x0, pc+328 (addr 0x0000ffff582c01a0)    ;; object: 0x39c04519 <the hole>
0xffff582c005c    60  stur x0, [x3, #31]
0xffff582c0060    64  ldur x0, [cp, #39]
0xffff582c0064    68  stur x0, [x3, #39]
0xffff582c0068    72  ldr x0, pc+320 (addr 0x0000ffff582c01a8)    ;; object: 0x39c04241 <undefined>
0xffff582c006c    76  stur x0, [x3, #47]
0xffff582c0070    80  ldr x0, pc+320 (addr 0x0000ffff582c01b0)    ;; object: 0x39c04241 <undefined>
0xffff582c0074    84  stur x0, [x3, #55]
0xffff582c0078    88  ldr x0, pc+320 (addr 0x0000ffff582c01b8)    ;; object: 0x39c04241 <undefined>
0xffff582c007c    92  stur x0, [x3, #63]
0xffff582c0080    96  ldr x0, pc+320 (addr 0x0000ffff582c01c0)    ;; object: 0x39c04241 <undefined>
0xffff582c0084   100  stur x0, [x3, #71]
0xffff582c0088   104  ldr x0, pc+320 (addr 0x0000ffff582c01c8)    ;; object: 0x39c04241 <undefined>
0xffff582c008c   108  stur x0, [x3, #79]
0xffff582c0090   112  ldr x0, pc+320 (addr 0x0000ffff582c01d0)    ;; object: 0x39c04241 <undefined>
0xffff582c0094   116  stur x0, [x3, #87]
0xffff582c0098   120  ldr x0, pc+320 (addr 0x0000ffff582c01d8)    ;; object: 0x39c04241 <undefined>
0xffff582c009c   124  stur x0, [x3, #95]
0xffff582c00a0   128  ldr x0, pc+320 (addr 0x0000ffff582c01e0)    ;; object: 0x39c04241 <undefined>
0xffff582c00a4   132  stur x0, [x3, #103]
0xffff582c00a8   136  ldr x0, pc+320 (addr 0x0000ffff582c01e8)    ;; object: 0x39c04241 <undefined>
0xffff582c00ac   140  stur x0, [x3, #111]
0xffff582c00b0   144  ldr x0, pc+320 (addr 0x0000ffff582c01f0)    ;; object: 0x39c04241 <undefined>
0xffff582c00b4   148  stur x0, [x3, #119]
0xffff582c00b8   152  ldr x0, pc+320 (addr 0x0000ffff582c01f8)    ;; object: 0x39c04241 <undefined>
0xffff582c00bc   156  stur x0, [x3, #127]
0xffff582c00c0   160  ldr x0, pc+320 (addr 0x0000ffff582c0200)    ;; object: 0x39c04241 <undefined>
0xffff582c00c4   164  stur x0, [x3, #135]
0xffff582c00c8   168  ldr x0, pc+320 (addr 0x0000ffff582c0208)    ;; object: 0x39c04241 <undefined>
0xffff582c00cc   172  stur x0, [x3, #143]
0xffff582c00d0   176  ldr x0, pc+320 (addr 0x0000ffff582c0210)    ;; object: 0x39c04241 <undefined>
0xffff582c00d4   180  stur x0, [x3, #151]
0xffff582c00d8   184  ldr x0, pc+320 (addr 0x0000ffff582c0218)    ;; object: 0x39c04241 <undefined>
0xffff582c00dc   188  stur x0, [x3, #159]
0xffff582c00e0   192  ldr x0, pc+320 (addr 0x0000ffff582c0220)    ;; object: 0x39c04241 <undefined>
0xffff582c00e4   196  stur x0, [x3, #167]
0xffff582c00e8   200  ldr x0, pc+320 (addr 0x0000ffff582c0228)    ;; object: 0x39c04241 <undefined>
0xffff582c00ec   204  stur x0, [x3, #175]
0xffff582c00f0   208  ldr x0, pc+320 (addr 0x0000ffff582c0230)    ;; object: 0x39c04241 <undefined>
0xffff582c00f4   212  stur x0, [x3, #183]
0xffff582c00f8   216  ldr x0, pc+320 (addr 0x0000ffff582c0238)    ;; object: 0x39c04241 <undefined>
0xffff582c00fc   220  stur x0, [x3, #191]
0xffff582c0100   224  ldr x0, pc+320 (addr 0x0000ffff582c0240)    ;; object: 0x39c04241 <undefined>
0xffff582c0104   228  stur x0, [x3, #199]
0xffff582c0108   232  ldr x0, pc+320 (addr 0x0000ffff582c0248)    ;; object: 0x39c04241 <undefined>
0xffff582c010c   236  stur x0, [x3, #207]
0xffff582c0110   240  ldr x0, pc+320 (addr 0x0000ffff582c0250)    ;; object: 0x39c04241 <undefined>
0xffff582c0114   244  stur x0, [x3, #215]
0xffff582c0118   248  ldr x0, pc+320 (addr 0x0000ffff582c0258)    ;; object: 0x39c04241 <undefined>
0xffff582c011c   252  stur x0, [x3, #223]
0xffff582c0120   256  mov x0, x3
0xffff582c0124   260  ret
0xffff582c0128   264  sub csp, jssp, #0x10 (16)
0xffff582c012c   268  stp fp, lr, [jssp, #-16]!
0xffff582c0130   272  movz fp, #0xa00000000
0xffff582c0134   276  sub csp, jssp, #0x8 (8)
0xffff582c0138   280  str fp, [jssp, #-8]!
0xffff582c013c   284  add fp, jssp, #0x8 (8)
0xffff582c0140   288  movz x3, #0x0
0xffff582c0144   292  mov x16, lr
0xffff582c0148   296  ldr x17, pc+280 (addr 0x0000ffff582c0260)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582c014c   300  blr x17
0xffff582c0150   304  movz x0, #0xe800000000
0xffff582c0154   308  movz x10, #0x0
0xffff582c0158   312  sub csp, jssp, #0x10 (16)
0xffff582c015c   316  stp x10, x0, [jssp, #-16]!
0xffff582c0160   320  movz x0, #0x2
0xffff582c0164   324  movz x1, #0x5b88
0xffff582c0168   328  movk x1, #0xe2, lsl #16
0xffff582c016c   332  ldr x16, pc+252 (addr 0x0000ffff582c0268)    ;; code: STUB, CEntryStub, minor: 5
0xffff582c0170   336  blr x16
0xffff582c0174   340  str x0, [jssp, #24]
0xffff582c0178   344  ldr x16, pc+248 (addr 0x0000ffff582c0270)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582c017c   348  blr x16
0xffff582c0180   352  ldr lr, [jssp, #16]
0xffff582c0184   356  ldp xzr, fp, [jssp], #24
0xffff582c0188   360  b #-0x148 (addr 0xffff582c0040)
0xffff582c018c   364  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff582c0190   368  d63f03e0       constant
0xffff582c0194   372  d503201f       constant
0xffff582c0198   376  32b06149       constant
0xffff582c019c   380  00000000       constant
0xffff582c01a0   384  39c04519       constant
0xffff582c01a4   388  00000000       constant
0xffff582c01a8   392  39c04241       constant
0xffff582c01ac   396  00000000       constant
0xffff582c01b0   400  39c04241       constant
0xffff582c01b4   404  00000000       constant
0xffff582c01b8   408  39c04241       constant
0xffff582c01bc   412  00000000       constant
0xffff582c01c0   416  39c04241       constant
0xffff582c01c4   420  00000000       constant
0xffff582c01c8   424  39c04241       constant
0xffff582c01cc   428  00000000       constant
0xffff582c01d0   432  39c04241       constant
0xffff582c01d4   436  00000000       constant
0xffff582c01d8   440  39c04241       constant
0xffff582c01dc   444  00000000       constant
0xffff582c01e0   448  39c04241       constant
0xffff582c01e4   452  00000000       constant
0xffff582c01e8   456  39c04241       constant
0xffff582c01ec   460  00000000       constant
0xffff582c01f0   464  39c04241       constant
0xffff582c01f4   468  00000000       constant
0xffff582c01f8   472  39c04241       constant
0xffff582c01fc   476  00000000       constant
0xffff582c0200   480  39c04241       constant
0xffff582c0204   484  00000000       constant
0xffff582c0208   488  39c04241       constant
0xffff582c020c   492  00000000       constant
0xffff582c0210   496  39c04241       constant
0xffff582c0214   500  00000000       constant
0xffff582c0218   504  39c04241       constant
0xffff582c021c   508  00000000       constant
0xffff582c0220   512  39c04241       constant
0xffff582c0224   516  00000000       constant
0xffff582c0228   520  39c04241       constant
0xffff582c022c   524  00000000       constant
0xffff582c0230   528  39c04241       constant
0xffff582c0234   532  00000000       constant
0xffff582c0238   536  39c04241       constant
0xffff582c023c   540  00000000       constant
0xffff582c0240   544  39c04241       constant
0xffff582c0244   548  00000000       constant
0xffff582c0248   552  39c04241       constant
0xffff582c024c   556  00000000       constant
0xffff582c0250   560  39c04241       constant
0xffff582c0254   564  00000000       constant
0xffff582c0258   568  39c04241       constant
0xffff582c025c   572  00000000       constant
0xffff582c0260   576  58206820       constant
0xffff582c0264   580  0000ffff       constant
0xffff582c0268   584  58206260       constant
0xffff582c026c   588  0000ffff       constant
0xffff582c0270   592  582068e0       constant
0xffff582c0274   596  0000ffff       constant


Safepoints (size = 21)
0xffff582c0174   340  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff582c0040  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582c0058  embedded object  (0x39c04519 <the hole>)
0xffff582c0068  embedded object  (0x39c04241 <undefined>)
0xffff582c0070  embedded object  (0x39c04241 <undefined>)
0xffff582c0078  embedded object  (0x39c04241 <undefined>)
0xffff582c0080  embedded object  (0x39c04241 <undefined>)
0xffff582c0088  embedded object  (0x39c04241 <undefined>)
0xffff582c0090  embedded object  (0x39c04241 <undefined>)
0xffff582c0098  embedded object  (0x39c04241 <undefined>)
0xffff582c00a0  embedded object  (0x39c04241 <undefined>)
0xffff582c00a8  embedded object  (0x39c04241 <undefined>)
0xffff582c00b0  embedded object  (0x39c04241 <undefined>)
0xffff582c00b8  embedded object  (0x39c04241 <undefined>)
0xffff582c00c0  embedded object  (0x39c04241 <undefined>)
0xffff582c00c8  embedded object  (0x39c04241 <undefined>)
0xffff582c00d0  embedded object  (0x39c04241 <undefined>)
0xffff582c00d8  embedded object  (0x39c04241 <undefined>)
0xffff582c00e0  embedded object  (0x39c04241 <undefined>)
0xffff582c00e8  embedded object  (0x39c04241 <undefined>)
0xffff582c00f0  embedded object  (0x39c04241 <undefined>)
0xffff582c00f8  embedded object  (0x39c04241 <undefined>)
0xffff582c0100  embedded object  (0x39c04241 <undefined>)
0xffff582c0108  embedded object  (0x39c04241 <undefined>)
0xffff582c0110  embedded object  (0x39c04241 <undefined>)
0xffff582c0118  embedded object  (0x39c04241 <undefined>)
0xffff582c0148  code target (STUB)  (0xffff58206820)
0xffff582c016c  code target (STUB)  (0xffff58206260)
0xffff582c0178  code target (STUB)  (0xffff582068e0)
0xffff582c018c  constant pool (size 236)


kind = LOAD_IC
major_key = LoadICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = LoadICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff582c0300     0  ldur x3, [fp, #-16]
0xffff582c0304     4  ldur x3, [x3, #31]
0xffff582c0308     8  ldur x3, [x3, #87]
0xffff582c030c    12  add x4, x3, x0, asr #29
0xffff582c0310    16  ldur x4, [x4, #15]
0xffff582c0314    20  tbz w1, #0, #+0x170 (addr 0xffff582c0484)
0xffff582c0318    24  ldur x5, [x1, #-1]
0xffff582c031c    28  ldur x6, [x4, #7]
0xffff582c0320    32  cmp x6, x5
0xffff582c0324    36  b.ne #+0x14 (addr 0xffff582c0338)
0xffff582c0328    40  add x4, x3, x0, asr #29
0xffff582c032c    44  ldur x4, [x4, #23]
0xffff582c0330    48  add x4, x4, #0x5f (95)
0xffff582c0334    52  br x4
0xffff582c0338    56  ldur x6, [x4, #-1]
0xffff582c033c    60  ldr x16, [x26, #224]
0xffff582c0340    64  cmp x6, x16
0xffff582c0344    68  b.ne #+0x5c (addr 0xffff582c03a0)
0xffff582c0348    72  ldur x6, [x4, #15]
0xffff582c034c    76  ldur x6, [x6, #7]
0xffff582c0350    80  cmp x5, x6
0xffff582c0354    84  b.ne #+0x10 (addr 0xffff582c0364)
0xffff582c0358    88  ldur x4, [x4, #23]
0xffff582c035c    92  add x4, x4, #0x5f (95)
0xffff582c0360    96  br x4
0xffff582c0364   100  ldur x7, [x4, #7]
0xffff582c0368   104  add x7, x4, x7, asr #29
0xffff582c036c   108  add x7, x7, #0xf (15)
0xffff582c0370   112  add x4, x4, #0x1f (31)
0xffff582c0374   116  ldr x6, [x4]
0xffff582c0378   120  ldur x6, [x6, #7]
0xffff582c037c   124  cmp x5, x6
0xffff582c0380   128  b.ne #+0x10 (addr 0xffff582c0390)
0xffff582c0384   132  ldr x4, [x4, #8]
0xffff582c0388   136  add x4, x4, #0x5f (95)
0xffff582c038c   140  br x4
0xffff582c0390   144  add x4, x4, #0x10 (16)
0xffff582c0394   148  cmp x4, x7
0xffff582c0398   152  b.lt #-0x24 (addr 0xffff582c0374)
0xffff582c039c   156  b #+0xcc (addr 0xffff582c0468)
0xffff582c03a0   160  ldr x16, [x26, #2400]
0xffff582c03a4   164  cmp x4, x16
0xffff582c03a8   168  b.ne #+0xc0 (addr 0xffff582c0468)
0xffff582c03ac   172  tbz w1, #0, #+0xbc (addr 0xffff582c0468)
0xffff582c03b0   176  ldur x4, [x2, #7]
0xffff582c03b4   180  ldur x5, [x1, #-1]
0xffff582c03b8   184  add x4, x4, x5
0xffff582c03bc   188  movz x16, #0x5102
0xffff582c03c0   192  eor x4, x4, x16
0xffff582c03c4   196  ubfx x4, x4, #2, #11
0xffff582c03c8   200  add x7, x4, x4, lsl #1
0xffff582c03cc   204  ldr x5, pc+204 (addr 0x0000ffff582c0498)    ;; external reference (StubCache::primary_->key)
0xffff582c03d0   208  add x5, x5, x7, lsl #3
0xffff582c03d4   212  ldr x6, [x5]
0xffff582c03d8   216  cmp x2, x6
0xffff582c03dc   220  b.ne #+0x34 (addr 0xffff582c0410)
0xffff582c03e0   224  ldr x6, [x5, #16]
0xffff582c03e4   228  ldur x7, [x1, #-1]
0xffff582c03e8   232  cmp x6, x7
0xffff582c03ec   236  b.ne #+0x24 (addr 0xffff582c0410)
0xffff582c03f0   240  ldr x5, [x5, #8]
0xffff582c03f4   244  ldur w6, [x5, #63]
0xffff582c03f8   248  and w6, w6, #0xffffffc7
0xffff582c03fc   252  movz w16, #0x5102
0xffff582c0400   256  cmp w6, w16
0xffff582c0404   260  b.ne #+0xc (addr 0xffff582c0410)
0xffff582c0408   264  add x5, x5, #0x5f (95)
0xffff582c040c   268  br x5
0xffff582c0410   272  sub x4, x4, x2, lsr #2
0xffff582c0414   276  movz x16, #0x1440
0xffff582c0418   280  add x4, x4, x16
0xffff582c041c   284  and x4, x4, #0x1ff
0xffff582c0420   288  add x7, x4, x4, lsl #1
0xffff582c0424   292  ldr x5, pc+124 (addr 0x0000ffff582c04a0)    ;; external reference (StubCache::secondary_->key)
0xffff582c0428   296  add x5, x5, x7, lsl #3
0xffff582c042c   300  ldr x6, [x5]
0xffff582c0430   304  cmp x2, x6
0xffff582c0434   308  b.ne #+0x34 (addr 0xffff582c0468)
0xffff582c0438   312  ldr x6, [x5, #16]
0xffff582c043c   316  ldur x7, [x1, #-1]
0xffff582c0440   320  cmp x6, x7
0xffff582c0444   324  b.ne #+0x24 (addr 0xffff582c0468)
0xffff582c0448   328  ldr x5, [x5, #8]
0xffff582c044c   332  ldur w6, [x5, #63]
0xffff582c0450   336  and w6, w6, #0xffffffc7
0xffff582c0454   340  movz w16, #0x5102
0xffff582c0458   344  cmp w6, w16
0xffff582c045c   348  b.ne #+0xc (addr 0xffff582c0468)
0xffff582c0460   352  add x5, x5, #0x5f (95)
0xffff582c0464   356  br x5
0xffff582c0468   360  sub csp, jssp, #0x20 (32)
0xffff582c046c   364  stp x3, x0, [jssp, #-32]!
0xffff582c0470   368  stp x2, x1, [jssp, #16]
0xffff582c0474   372  movz x0, #0x4
0xffff582c0478   376  ldr x1, pc+48 (addr 0x0000ffff582c04a8)    ;; external reference (Runtime::LoadIC_Miss)
0xffff582c047c   380  ldr x16, pc+52 (addr 0x0000ffff582c04b0)    ;; code: STUB, CEntryStub, minor: 4
0xffff582c0480   384  br x16
0xffff582c0484   388  ldr x5, [x26, #120]
0xffff582c0488   392  b #-0x16c (addr 0xffff582c031c)
0xffff582c048c   396  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff582c0490   400  d63f03e0       constant
0xffff582c0494   404  d503201f       constant
0xffff582c0498   408  16e93950       constant
0xffff582c049c   412  00000000       constant
0xffff582c04a0   416  16e9f950       constant
0xffff582c04a4   420  00000000       constant
0xffff582c04a8   424  00c86e20       constant
0xffff582c04ac   428  00000000       constant
0xffff582c04b0   432  58206060       constant
0xffff582c04b4   436  0000ffff       constant


RelocInfo (size = 19)
0xffff582c03cc  external reference (StubCache::primary_->key)  (0x16e93950)
0xffff582c0424  external reference (StubCache::secondary_->key)  (0x16e9f950)
0xffff582c0478  external reference (Runtime::LoadIC_Miss)  (0xc86e20)
0xffff582c047c  code target (STUB)  (0xffff58206060)
0xffff582c048c  constant pool (size 44)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582c1ac0     0  ldur x0, [x1, #55]
0xffff582c1ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582c1ac0     0  ldur x0, [x1, #55]
0xffff582c1ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = super_
compiler = unknown
Instructions (size = 168)
0xffff582c1b40     0  sub csp, jssp, #0x8 (8)
0xffff582c1b44     4  str x3, [jssp, #-8]!
0xffff582c1b48     8  sub csp, jssp, #0x8 (8)
0xffff582c1b4c    12  str x4, [jssp, #-8]!
0xffff582c1b50    16  ldr x3, pc+104 (addr 0x0000ffff582c1bb8)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582c1b54    20  ldur x3, [x3, #7]
0xffff582c1b58    24  cmp x3, #0x0 (0)
0xffff582c1b5c    28  b.ne #+0x3c (addr 0xffff582c1b98)
0xffff582c1b60    32  ldr x5, pc+96 (addr 0x0000ffff582c1bc0)    ;; object: 0x22525349 WeakCell for 0x32b30af1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582c1b64    36  ldur x5, [x5, #7]
0xffff582c1b68    40  tbz w5, #0, #+0x30 (addr 0xffff582c1b98)
0xffff582c1b6c    44  ldursw x4, [x5, #15]
0xffff582c1b70    48  tbnz w4, #23, #+0x28 (addr 0xffff582c1b98)
0xffff582c1b74    52  ldur x4, [x5, #47]
0xffff582c1b78    56  ldur x4, [x4, #143]
0xffff582c1b7c    60  cmp x0, x4
0xffff582c1b80    64  b.ne #+0x18 (addr 0xffff582c1b98)
0xffff582c1b84    68  ldr x4, [jssp], #8
0xffff582c1b88    72  ldr x3, [jssp], #8
0xffff582c1b8c    76  ldr x2, pc+60 (addr 0x0000ffff582c1bc8)    ;; object: 0x39cc9f09 <String[6]: super_>
0xffff582c1b90    80  ldr x16, pc+64 (addr 0x0000ffff582c1bd0)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff582c1b94    84  br x16
0xffff582c1b98    88  ldr x2, pc+64 (addr 0x0000ffff582c1bd8)    ;; object: 0x39cc9f09 <String[6]: super_>
0xffff582c1b9c    92  ldr x4, [jssp], #8
0xffff582c1ba0    96  ldr x3, [jssp], #8
0xffff582c1ba4   100  ldr x16, pc+60 (addr 0x0000ffff582c1be0)    ;; code: BUILTIN
0xffff582c1ba8   104  br x16
0xffff582c1bac   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582c1bb0   112  d63f03e0       constant
0xffff582c1bb4   116  d503201f       constant
0xffff582c1bb8   120  39c5b0f1       constant
0xffff582c1bbc   124  00000000       constant
0xffff582c1bc0   128  22525349       constant
0xffff582c1bc4   132  00000000       constant
0xffff582c1bc8   136  39cc9f09       constant
0xffff582c1bcc   140  00000000       constant
0xffff582c1bd0   144  5823cea0       constant
0xffff582c1bd4   148  0000ffff       constant
0xffff582c1bd8   152  39cc9f09       constant
0xffff582c1bdc   156  00000000       constant
0xffff582c1be0   160  58222420       constant
0xffff582c1be4   164  0000ffff       constant


RelocInfo (size = 12)
0xffff582c1b50  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582c1b60  embedded object  (0x22525349 WeakCell for 0x32b30af1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582c1b8c  embedded object  (0x39cc9f09 <String[6]: super_>)
0xffff582c1b90  code target (HANDLER)  (0xffff5823cea0)
0xffff582c1b98  embedded object  (0x39cc9f09 <String[6]: super_>)
0xffff582c1ba4  code target (BUILTIN)  (0xffff58222420)
0xffff582c1bac  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff582c1d00     0  sub csp, jssp, #0x8 (8)
0xffff582c1d04     4  str x3, [jssp, #-8]!
0xffff582c1d08     8  sub csp, jssp, #0x8 (8)
0xffff582c1d0c    12  str x4, [jssp, #-8]!
0xffff582c1d10    16  ldr x3, pc+104 (addr 0x0000ffff582c1d78)    ;; object: 0x225255d9 Cell for 0
0xffff582c1d14    20  ldur x3, [x3, #7]
0xffff582c1d18    24  cmp x3, #0x0 (0)
0xffff582c1d1c    28  b.ne #+0x8 (addr 0xffff582c1d24)
0xffff582c1d20    32  b #+0x18 (addr 0xffff582c1d38)
0xffff582c1d24    36  ldr x2, pc+92 (addr 0x0000ffff582c1d80)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff582c1d28    40  ldr x4, [jssp], #8
0xffff582c1d2c    44  ldr x3, [jssp], #8
0xffff582c1d30    48  ldr x16, pc+88 (addr 0x0000ffff582c1d88)    ;; code: BUILTIN
0xffff582c1d34    52  br x16
0xffff582c1d38    56  add jssp, jssp, #0x10 (16)
0xffff582c1d3c    60  ldr x3, pc+84 (addr 0x0000ffff582c1d90)    ;; object: 0x39c404a9 <AccessorInfo>
0xffff582c1d40    64  ldr x4, pc+88 (addr 0x0000ffff582c1d98)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff582c1d44    68  sub csp, jssp, #0x28 (40)
0xffff582c1d48    72  stp x4, x3, [jssp, #-32]!
0xffff582c1d4c    76  stp x1, x1, [jssp, #16]
0xffff582c1d50    80  str x0, [jssp, #-8]!
0xffff582c1d54    84  movz x16, #0x100000000
0xffff582c1d58    88  sub csp, jssp, #0x8 (8)
0xffff582c1d5c    92  str x16, [jssp, #-8]!
0xffff582c1d60    96  movz x0, #0x6
0xffff582c1d64   100  ldr x1, pc+60 (addr 0x0000ffff582c1da0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff582c1d68   104  ldr x16, pc+64 (addr 0x0000ffff582c1da8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582c1d6c   108  br x16
0xffff582c1d70   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff582c1d74   116  d63f03e0       constant
0xffff582c1d78   120  225255d9       constant
0xffff582c1d7c   124  00000000       constant
0xffff582c1d80   128  39c05371       constant
0xffff582c1d84   132  00000000       constant
0xffff582c1d88   136  58222420       constant
0xffff582c1d8c   140  0000ffff       constant
0xffff582c1d90   144  39c404a9       constant
0xffff582c1d94   148  00000000       constant
0xffff582c1d98   152  39c05371       constant
0xffff582c1d9c   156  00000000       constant
0xffff582c1da0   160  00c8b560       constant
0xffff582c1da4   164  00000000       constant
0xffff582c1da8   168  58206060       constant
0xffff582c1dac   172  0000ffff       constant


RelocInfo (size = 14)
0xffff582c1d10  embedded object  (0x225255d9 Cell for 0)
0xffff582c1d24  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff582c1d30  code target (BUILTIN)  (0xffff58222420)
0xffff582c1d3c  embedded object  (0x39c404a9 <AccessorInfo>)
0xffff582c1d40  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff582c1d64  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff582c1d68  code target (STUB)  (0xffff58206060)
0xffff582c1d70  constant pool (size 64)

--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 64
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 136)
0xffff582c1e20     0  tbz w0, #0, #+0x40 (addr 0xffff582c1e60)
0xffff582c1e24     4  ldur x2, [x0, #-1]
0xffff582c1e28     8  ldrb w1, [x2, #11]
0xffff582c1e2c    12  cmp x1, #0x80 (128)
0xffff582c1e30    16  b.eq #+0x10 (addr 0xffff582c1e40)
0xffff582c1e34    20  b #+0x2c (addr 0xffff582c1e60)
0xffff582c1e38    24  ldr x0, pc+24 (addr 0x0000ffff582c1e50)    ;; object: 0x39c042b1 <false>
0xffff582c1e3c    28  ret
0xffff582c1e40    32  ldr x0, pc+24 (addr 0x0000ffff582c1e58)    ;; object: 0x39c04281 <true>
0xffff582c1e44    36  ret
0xffff582c1e48    40  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582c1e4c    44  d63f03e0       constant
0xffff582c1e50    48  39c042b1       constant
0xffff582c1e54    52  00000000       constant
0xffff582c1e58    56  39c04281       constant
0xffff582c1e5c    60  00000000       constant
0xffff582c1e60    64  movz x16, #0x0
0xffff582c1e64    68  sub csp, jssp, #0x10 (16)
0xffff582c1e68    72  stp fp, lr, [jssp, #-16]!
0xffff582c1e6c    76  bl #+0x4 (addr 0xffff582c1e70)
0xffff582c1e70    80  movz x17, #0xa00000000
0xffff582c1e74    84  sub csp, jssp, #0x10 (16)
0xffff582c1e78    88  stp x17, cp, [jssp, #-16]!
0xffff582c1e7c    92  add fp, jssp, #0x10 (16)
0xffff582c1e80    96  ldr x17, pc+24 (addr 0x0000ffff582c1e98)    ;; lazy deoptimization bailout 0
0xffff582c1e84   100  add x17, x17, x16
0xffff582c1e88   104  br x17
0xffff582c1e8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582c1e90   112  d63f03e0       constant
0xffff582c1e94   116  d503201f       constant
0xffff582c1e98   120  58006000       constant
0xffff582c1e9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582c1e38  embedded object  (0x39c042b1 <false>)
0xffff582c1e40  embedded object  (0x39c04281 <true>)
0xffff582c1e48  constant pool (size 24)
0xffff582c1e80  runtime entry
0xffff582c1e8c  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 64
type = NORMAL
name = ToBooleanICStub(Symbol)
compiler = crankshaft
Instructions (size = 136)
0xffff582c1e20     0  tbz w0, #0, #+0x40 (addr 0xffff582c1e60)
0xffff582c1e24     4  ldur x2, [x0, #-1]
0xffff582c1e28     8  ldrb w1, [x2, #11]
0xffff582c1e2c    12  cmp x1, #0x80 (128)
0xffff582c1e30    16  b.eq #+0x10 (addr 0xffff582c1e40)
0xffff582c1e34    20  b #+0x2c (addr 0xffff582c1e60)
0xffff582c1e38    24  ldr x0, pc+24 (addr 0x0000ffff582c1e50)    ;; object: 0x39c042b1 <false>
0xffff582c1e3c    28  ret
0xffff582c1e40    32  ldr x0, pc+24 (addr 0x0000ffff582c1e58)    ;; object: 0x39c04281 <true>
0xffff582c1e44    36  ret
0xffff582c1e48    40  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582c1e4c    44  d63f03e0       constant
0xffff582c1e50    48  39c042b1       constant
0xffff582c1e54    52  00000000       constant
0xffff582c1e58    56  39c04281       constant
0xffff582c1e5c    60  00000000       constant
0xffff582c1e60    64  movz x16, #0x0
0xffff582c1e64    68  sub csp, jssp, #0x10 (16)
0xffff582c1e68    72  stp fp, lr, [jssp, #-16]!
0xffff582c1e6c    76  bl #+0x4 (addr 0xffff582c1e70)
0xffff582c1e70    80  movz x17, #0xa00000000
0xffff582c1e74    84  sub csp, jssp, #0x10 (16)
0xffff582c1e78    88  stp x17, cp, [jssp, #-16]!
0xffff582c1e7c    92  add fp, jssp, #0x10 (16)
0xffff582c1e80    96  ldr x17, pc+24 (addr 0x0000ffff582c1e98)    ;; lazy deoptimization bailout 0
0xffff582c1e84   100  add x17, x17, x16
0xffff582c1e88   104  br x17
0xffff582c1e8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582c1e90   112  d63f03e0       constant
0xffff582c1e94   116  d503201f       constant
0xffff582c1e98   120  58006000       constant
0xffff582c1e9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582c1e38  embedded object  (0x39c042b1 <false>)
0xffff582c1e40  embedded object  (0x39c04281 <true>)
0xffff582c1e48  constant pool (size 24)
0xffff582c1e80  runtime entry
0xffff582c1e8c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff582c3c80     0  sub csp, jssp, #0x8 (8)
0xffff582c3c84     4  str x3, [jssp, #-8]!
0xffff582c3c88     8  sub csp, jssp, #0x8 (8)
0xffff582c3c8c    12  str x4, [jssp, #-8]!
0xffff582c3c90    16  ldr x3, pc+104 (addr 0x0000ffff582c3cf8)    ;; object: 0x2252e999 Cell for 0
0xffff582c3c94    20  ldur x3, [x3, #7]
0xffff582c3c98    24  cmp x3, #0x0 (0)
0xffff582c3c9c    28  b.ne #+0x8 (addr 0xffff582c3ca4)
0xffff582c3ca0    32  b #+0x18 (addr 0xffff582c3cb8)
0xffff582c3ca4    36  ldr x2, pc+92 (addr 0x0000ffff582c3d00)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff582c3ca8    40  ldr x4, [jssp], #8
0xffff582c3cac    44  ldr x3, [jssp], #8
0xffff582c3cb0    48  ldr x16, pc+88 (addr 0x0000ffff582c3d08)    ;; code: BUILTIN
0xffff582c3cb4    52  br x16
0xffff582c3cb8    56  add jssp, jssp, #0x10 (16)
0xffff582c3cbc    60  ldr x3, pc+84 (addr 0x0000ffff582c3d10)    ;; object: 0x39c404a9 <AccessorInfo>
0xffff582c3cc0    64  ldr x4, pc+88 (addr 0x0000ffff582c3d18)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff582c3cc4    68  sub csp, jssp, #0x28 (40)
0xffff582c3cc8    72  stp x4, x3, [jssp, #-32]!
0xffff582c3ccc    76  stp x1, x1, [jssp, #16]
0xffff582c3cd0    80  str x0, [jssp, #-8]!
0xffff582c3cd4    84  movz x16, #0x100000000
0xffff582c3cd8    88  sub csp, jssp, #0x8 (8)
0xffff582c3cdc    92  str x16, [jssp, #-8]!
0xffff582c3ce0    96  movz x0, #0x6
0xffff582c3ce4   100  ldr x1, pc+60 (addr 0x0000ffff582c3d20)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff582c3ce8   104  ldr x16, pc+64 (addr 0x0000ffff582c3d28)    ;; code: STUB, CEntryStub, minor: 4
0xffff582c3cec   108  br x16
0xffff582c3cf0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff582c3cf4   116  d63f03e0       constant
0xffff582c3cf8   120  2252e999       constant
0xffff582c3cfc   124  00000000       constant
0xffff582c3d00   128  39c05371       constant
0xffff582c3d04   132  00000000       constant
0xffff582c3d08   136  58222420       constant
0xffff582c3d0c   140  0000ffff       constant
0xffff582c3d10   144  39c404a9       constant
0xffff582c3d14   148  00000000       constant
0xffff582c3d18   152  39c05371       constant
0xffff582c3d1c   156  00000000       constant
0xffff582c3d20   160  00c8b560       constant
0xffff582c3d24   164  00000000       constant
0xffff582c3d28   168  58206060       constant
0xffff582c3d2c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff582c3c90  embedded object  (0x2252e999 Cell for 0)
0xffff582c3ca4  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff582c3cb0  code target (BUILTIN)  (0xffff58222420)
0xffff582c3cbc  embedded object  (0x39c404a9 <AccessorInfo>)
0xffff582c3cc0  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff582c3ce4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff582c3ce8  code target (STUB)  (0xffff58206060)
0xffff582c3cf0  constant pool (size 64)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 349)
0xffff582cb800     0  movz x2, #0x92c0
0xffff582cb804     4  movk x2, #0x16e7, lsl #16
0xffff582cb808     8  ldp x3, x0, [x2]
0xffff582cb80c    12  adds x16, x3, #0x60 (96)
0xffff582cb810    16  ccmp x16, x0, #nzCv, lo
0xffff582cb814    20  b.hi #+0x6c (addr 0xffff582cb880)
0xffff582cb818    24  str x16, [x2]
0xffff582cb81c    28  orr x3, x3, #0x1
0xffff582cb820    32  ldr x0, pc+208 (addr 0x0000ffff582cb8f0)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582cb824    36  stur x0, [x3, #-1]
0xffff582cb828    40  movz x0, #0xa00000000
0xffff582cb82c    44  stur x0, [x3, #7]
0xffff582cb830    48  stur x1, [x3, #15]
0xffff582cb834    52  stur cp, [x3, #23]
0xffff582cb838    56  ldr x0, pc+192 (addr 0x0000ffff582cb8f8)    ;; object: 0x39c04519 <the hole>
0xffff582cb83c    60  stur x0, [x3, #31]
0xffff582cb840    64  ldur x0, [cp, #39]
0xffff582cb844    68  stur x0, [x3, #39]
0xffff582cb848    72  ldr x0, pc+184 (addr 0x0000ffff582cb900)    ;; object: 0x39c04241 <undefined>
0xffff582cb84c    76  stur x0, [x3, #47]
0xffff582cb850    80  ldr x0, pc+184 (addr 0x0000ffff582cb908)    ;; object: 0x39c04241 <undefined>
0xffff582cb854    84  stur x0, [x3, #55]
0xffff582cb858    88  ldr x0, pc+184 (addr 0x0000ffff582cb910)    ;; object: 0x39c04241 <undefined>
0xffff582cb85c    92  stur x0, [x3, #63]
0xffff582cb860    96  ldr x0, pc+184 (addr 0x0000ffff582cb918)    ;; object: 0x39c04241 <undefined>
0xffff582cb864   100  stur x0, [x3, #71]
0xffff582cb868   104  ldr x0, pc+184 (addr 0x0000ffff582cb920)    ;; object: 0x39c04241 <undefined>
0xffff582cb86c   108  stur x0, [x3, #79]
0xffff582cb870   112  ldr x0, pc+184 (addr 0x0000ffff582cb928)    ;; object: 0x39c04241 <undefined>
0xffff582cb874   116  stur x0, [x3, #87]
0xffff582cb878   120  mov x0, x3
0xffff582cb87c   124  ret
0xffff582cb880   128  sub csp, jssp, #0x10 (16)
0xffff582cb884   132  stp fp, lr, [jssp, #-16]!
0xffff582cb888   136  movz fp, #0xa00000000
0xffff582cb88c   140  sub csp, jssp, #0x8 (8)
0xffff582cb890   144  str fp, [jssp, #-8]!
0xffff582cb894   148  add fp, jssp, #0x8 (8)
0xffff582cb898   152  movz x3, #0x0
0xffff582cb89c   156  mov x16, lr
0xffff582cb8a0   160  ldr x17, pc+144 (addr 0x0000ffff582cb930)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582cb8a4   164  blr x17
0xffff582cb8a8   168  movz x0, #0x6000000000
0xffff582cb8ac   172  movz x10, #0x0
0xffff582cb8b0   176  sub csp, jssp, #0x10 (16)
0xffff582cb8b4   180  stp x10, x0, [jssp, #-16]!
0xffff582cb8b8   184  movz x0, #0x2
0xffff582cb8bc   188  movz x1, #0x5b88
0xffff582cb8c0   192  movk x1, #0xe2, lsl #16
0xffff582cb8c4   196  ldr x16, pc+116 (addr 0x0000ffff582cb938)    ;; code: STUB, CEntryStub, minor: 5
0xffff582cb8c8   200  blr x16
0xffff582cb8cc   204  str x0, [jssp, #24]
0xffff582cb8d0   208  ldr x16, pc+112 (addr 0x0000ffff582cb940)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582cb8d4   212  blr x16
0xffff582cb8d8   216  ldr lr, [jssp, #16]
0xffff582cb8dc   220  ldp xzr, fp, [jssp], #24
0xffff582cb8e0   224  b #-0xc0 (addr 0xffff582cb820)
0xffff582cb8e4   228  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff582cb8e8   232  d63f03e0       constant
0xffff582cb8ec   236  d503201f       constant
0xffff582cb8f0   240  32b06149       constant
0xffff582cb8f4   244  00000000       constant
0xffff582cb8f8   248  39c04519       constant
0xffff582cb8fc   252  00000000       constant
0xffff582cb900   256  39c04241       constant
0xffff582cb904   260  00000000       constant
0xffff582cb908   264  39c04241       constant
0xffff582cb90c   268  00000000       constant
0xffff582cb910   272  39c04241       constant
0xffff582cb914   276  00000000       constant
0xffff582cb918   280  39c04241       constant
0xffff582cb91c   284  00000000       constant
0xffff582cb920   288  39c04241       constant
0xffff582cb924   292  00000000       constant
0xffff582cb928   296  39c04241       constant
0xffff582cb92c   300  00000000       constant
0xffff582cb930   304  58206820       constant
0xffff582cb934   308  0000ffff       constant
0xffff582cb938   312  58206260       constant
0xffff582cb93c   316  0000ffff       constant
0xffff582cb940   320  582068e0       constant
0xffff582cb944   324  0000ffff       constant


Safepoints (size = 21)
0xffff582cb8cc   204  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 17)
0xffff582cb820  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582cb838  embedded object  (0x39c04519 <the hole>)
0xffff582cb848  embedded object  (0x39c04241 <undefined>)
0xffff582cb850  embedded object  (0x39c04241 <undefined>)
0xffff582cb858  embedded object  (0x39c04241 <undefined>)
0xffff582cb860  embedded object  (0x39c04241 <undefined>)
0xffff582cb868  embedded object  (0x39c04241 <undefined>)
0xffff582cb870  embedded object  (0x39c04241 <undefined>)
0xffff582cb8a0  code target (STUB)  (0xffff58206820)
0xffff582cb8c4  code target (STUB)  (0xffff58206260)
0xffff582cb8d0  code target (STUB)  (0xffff582068e0)
0xffff582cb8e4  constant pool (size 100)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 349)
0xffff582cb800     0  movz x2, #0x92c0
0xffff582cb804     4  movk x2, #0x16e7, lsl #16
0xffff582cb808     8  ldp x3, x0, [x2]
0xffff582cb80c    12  adds x16, x3, #0x60 (96)
0xffff582cb810    16  ccmp x16, x0, #nzCv, lo
0xffff582cb814    20  b.hi #+0x6c (addr 0xffff582cb880)
0xffff582cb818    24  str x16, [x2]
0xffff582cb81c    28  orr x3, x3, #0x1
0xffff582cb820    32  ldr x0, pc+208 (addr 0x0000ffff582cb8f0)    ;; object: 0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582cb824    36  stur x0, [x3, #-1]
0xffff582cb828    40  movz x0, #0xa00000000
0xffff582cb82c    44  stur x0, [x3, #7]
0xffff582cb830    48  stur x1, [x3, #15]
0xffff582cb834    52  stur cp, [x3, #23]
0xffff582cb838    56  ldr x0, pc+192 (addr 0x0000ffff582cb8f8)    ;; object: 0x39c04519 <the hole>
0xffff582cb83c    60  stur x0, [x3, #31]
0xffff582cb840    64  ldur x0, [cp, #39]
0xffff582cb844    68  stur x0, [x3, #39]
0xffff582cb848    72  ldr x0, pc+184 (addr 0x0000ffff582cb900)    ;; object: 0x39c04241 <undefined>
0xffff582cb84c    76  stur x0, [x3, #47]
0xffff582cb850    80  ldr x0, pc+184 (addr 0x0000ffff582cb908)    ;; object: 0x39c04241 <undefined>
0xffff582cb854    84  stur x0, [x3, #55]
0xffff582cb858    88  ldr x0, pc+184 (addr 0x0000ffff582cb910)    ;; object: 0x39c04241 <undefined>
0xffff582cb85c    92  stur x0, [x3, #63]
0xffff582cb860    96  ldr x0, pc+184 (addr 0x0000ffff582cb918)    ;; object: 0x39c04241 <undefined>
0xffff582cb864   100  stur x0, [x3, #71]
0xffff582cb868   104  ldr x0, pc+184 (addr 0x0000ffff582cb920)    ;; object: 0x39c04241 <undefined>
0xffff582cb86c   108  stur x0, [x3, #79]
0xffff582cb870   112  ldr x0, pc+184 (addr 0x0000ffff582cb928)    ;; object: 0x39c04241 <undefined>
0xffff582cb874   116  stur x0, [x3, #87]
0xffff582cb878   120  mov x0, x3
0xffff582cb87c   124  ret
0xffff582cb880   128  sub csp, jssp, #0x10 (16)
0xffff582cb884   132  stp fp, lr, [jssp, #-16]!
0xffff582cb888   136  movz fp, #0xa00000000
0xffff582cb88c   140  sub csp, jssp, #0x8 (8)
0xffff582cb890   144  str fp, [jssp, #-8]!
0xffff582cb894   148  add fp, jssp, #0x8 (8)
0xffff582cb898   152  movz x3, #0x0
0xffff582cb89c   156  mov x16, lr
0xffff582cb8a0   160  ldr x17, pc+144 (addr 0x0000ffff582cb930)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582cb8a4   164  blr x17
0xffff582cb8a8   168  movz x0, #0x6000000000
0xffff582cb8ac   172  movz x10, #0x0
0xffff582cb8b0   176  sub csp, jssp, #0x10 (16)
0xffff582cb8b4   180  stp x10, x0, [jssp, #-16]!
0xffff582cb8b8   184  movz x0, #0x2
0xffff582cb8bc   188  movz x1, #0x5b88
0xffff582cb8c0   192  movk x1, #0xe2, lsl #16
0xffff582cb8c4   196  ldr x16, pc+116 (addr 0x0000ffff582cb938)    ;; code: STUB, CEntryStub, minor: 5
0xffff582cb8c8   200  blr x16
0xffff582cb8cc   204  str x0, [jssp, #24]
0xffff582cb8d0   208  ldr x16, pc+112 (addr 0x0000ffff582cb940)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582cb8d4   212  blr x16
0xffff582cb8d8   216  ldr lr, [jssp, #16]
0xffff582cb8dc   220  ldp xzr, fp, [jssp], #24
0xffff582cb8e0   224  b #-0xc0 (addr 0xffff582cb820)
0xffff582cb8e4   228  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff582cb8e8   232  d63f03e0       constant
0xffff582cb8ec   236  d503201f       constant
0xffff582cb8f0   240  32b06149       constant
0xffff582cb8f4   244  00000000       constant
0xffff582cb8f8   248  39c04519       constant
0xffff582cb8fc   252  00000000       constant
0xffff582cb900   256  39c04241       constant
0xffff582cb904   260  00000000       constant
0xffff582cb908   264  39c04241       constant
0xffff582cb90c   268  00000000       constant
0xffff582cb910   272  39c04241       constant
0xffff582cb914   276  00000000       constant
0xffff582cb918   280  39c04241       constant
0xffff582cb91c   284  00000000       constant
0xffff582cb920   288  39c04241       constant
0xffff582cb924   292  00000000       constant
0xffff582cb928   296  39c04241       constant
0xffff582cb92c   300  00000000       constant
0xffff582cb930   304  58206820       constant
0xffff582cb934   308  0000ffff       constant
0xffff582cb938   312  58206260       constant
0xffff582cb93c   316  0000ffff       constant
0xffff582cb940   320  582068e0       constant
0xffff582cb944   324  0000ffff       constant


Safepoints (size = 21)
0xffff582cb8cc   204  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 17)
0xffff582cb820  embedded object  (0x32b06149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582cb838  embedded object  (0x39c04519 <the hole>)
0xffff582cb848  embedded object  (0x39c04241 <undefined>)
0xffff582cb850  embedded object  (0x39c04241 <undefined>)
0xffff582cb858  embedded object  (0x39c04241 <undefined>)
0xffff582cb860  embedded object  (0x39c04241 <undefined>)
0xffff582cb868  embedded object  (0x39c04241 <undefined>)
0xffff582cb870  embedded object  (0x39c04241 <undefined>)
0xffff582cb8a0  code target (STUB)  (0xffff58206820)
0xffff582cb8c4  code target (STUB)  (0xffff58206260)
0xffff582cb8d0  code target (STUB)  (0xffff582068e0)
0xffff582cb8e4  constant pool (size 100)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff582cfa60     0  ldur x4, [x1, #15]
0xffff582cfa64     4  ldur w5, [x1, #27]
0xffff582cfa68     8  tbnz w2, #0, #+0x2c (addr 0xffff582cfa94)
0xffff582cfa6c    12  asr x7, x2, #32
0xffff582cfa70    16  cmp w7, w5
0xffff582cfa74    20  b.hs #+0x48 (addr 0xffff582cfabc)
0xffff582cfa78    24  add x5, x4, #0xf (15)
0xffff582cfa7c    28  ldr x6, [x5, w7, sxtw #3]
0xffff582cfa80    32  ldr x16, [x26, #88]
0xffff582cfa84    36  cmp x6, x16
0xffff582cfa88    40  b.eq #+0x44 (addr 0xffff582cfacc)
0xffff582cfa8c    44  mov x0, x6
0xffff582cfa90    48  ret
0xffff582cfa94    52  ldur x16, [x2, #-1]
0xffff582cfa98    56  ldr x17, [x26, #120]
0xffff582cfa9c    60  cmp x16, x17
0xffff582cfaa0    64  b.ne #+0x3c (addr 0xffff582cfadc)
0xffff582cfaa4    68  ldur d29, [x2, #7]
0xffff582cfaa8    72  fcvtzs w7, d29
0xffff582cfaac    76  scvtf d0, w7
0xffff582cfab0    80  fcmp d29, d0
0xffff582cfab4    84  b.ne #+0x28 (addr 0xffff582cfadc)
0xffff582cfab8    88  b #-0x48 (addr 0xffff582cfa70)
0xffff582cfabc    92  movz x16, #0x0
0xffff582cfac0    96  sub csp, jssp, #0x10 (16)
0xffff582cfac4   100  stp fp, lr, [jssp, #-16]!
0xffff582cfac8   104  bl #+0x24 (addr 0xffff582cfaec)
0xffff582cfacc   108  movz x16, #0x8
0xffff582cfad0   112  sub csp, jssp, #0x10 (16)
0xffff582cfad4   116  stp fp, lr, [jssp, #-16]!
0xffff582cfad8   120  bl #+0x14 (addr 0xffff582cfaec)
0xffff582cfadc   124  movz x16, #0x10
0xffff582cfae0   128  sub csp, jssp, #0x10 (16)
0xffff582cfae4   132  stp fp, lr, [jssp, #-16]!
0xffff582cfae8   136  bl #+0x4 (addr 0xffff582cfaec)
0xffff582cfaec   140  movz x17, #0xa00000000
0xffff582cfaf0   144  sub csp, jssp, #0x10 (16)
0xffff582cfaf4   148  stp x17, cp, [jssp, #-16]!
0xffff582cfaf8   152  add fp, jssp, #0x10 (16)
0xffff582cfafc   156  ldr x17, pc+20 (addr 0x0000ffff582cfb10)    ;; lazy deoptimization bailout 0
0xffff582cfb00   160  add x17, x17, x16
0xffff582cfb04   164  br x17
0xffff582cfb08   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582cfb0c   172  d63f03e0       constant
0xffff582cfb10   176  58006000       constant
0xffff582cfb14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582cfafc  runtime entry
0xffff582cfb08  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff582cfa60     0  ldur x4, [x1, #15]
0xffff582cfa64     4  ldur w5, [x1, #27]
0xffff582cfa68     8  tbnz w2, #0, #+0x2c (addr 0xffff582cfa94)
0xffff582cfa6c    12  asr x7, x2, #32
0xffff582cfa70    16  cmp w7, w5
0xffff582cfa74    20  b.hs #+0x48 (addr 0xffff582cfabc)
0xffff582cfa78    24  add x5, x4, #0xf (15)
0xffff582cfa7c    28  ldr x6, [x5, w7, sxtw #3]
0xffff582cfa80    32  ldr x16, [x26, #88]
0xffff582cfa84    36  cmp x6, x16
0xffff582cfa88    40  b.eq #+0x44 (addr 0xffff582cfacc)
0xffff582cfa8c    44  mov x0, x6
0xffff582cfa90    48  ret
0xffff582cfa94    52  ldur x16, [x2, #-1]
0xffff582cfa98    56  ldr x17, [x26, #120]
0xffff582cfa9c    60  cmp x16, x17
0xffff582cfaa0    64  b.ne #+0x3c (addr 0xffff582cfadc)
0xffff582cfaa4    68  ldur d29, [x2, #7]
0xffff582cfaa8    72  fcvtzs w7, d29
0xffff582cfaac    76  scvtf d0, w7
0xffff582cfab0    80  fcmp d29, d0
0xffff582cfab4    84  b.ne #+0x28 (addr 0xffff582cfadc)
0xffff582cfab8    88  b #-0x48 (addr 0xffff582cfa70)
0xffff582cfabc    92  movz x16, #0x0
0xffff582cfac0    96  sub csp, jssp, #0x10 (16)
0xffff582cfac4   100  stp fp, lr, [jssp, #-16]!
0xffff582cfac8   104  bl #+0x24 (addr 0xffff582cfaec)
0xffff582cfacc   108  movz x16, #0x8
0xffff582cfad0   112  sub csp, jssp, #0x10 (16)
0xffff582cfad4   116  stp fp, lr, [jssp, #-16]!
0xffff582cfad8   120  bl #+0x14 (addr 0xffff582cfaec)
0xffff582cfadc   124  movz x16, #0x10
0xffff582cfae0   128  sub csp, jssp, #0x10 (16)
0xffff582cfae4   132  stp fp, lr, [jssp, #-16]!
0xffff582cfae8   136  bl #+0x4 (addr 0xffff582cfaec)
0xffff582cfaec   140  movz x17, #0xa00000000
0xffff582cfaf0   144  sub csp, jssp, #0x10 (16)
0xffff582cfaf4   148  stp x17, cp, [jssp, #-16]!
0xffff582cfaf8   152  add fp, jssp, #0x10 (16)
0xffff582cfafc   156  ldr x17, pc+20 (addr 0x0000ffff582cfb10)    ;; lazy deoptimization bailout 0
0xffff582cfb00   160  add x17, x17, x16
0xffff582cfb04   164  br x17
0xffff582cfb08   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582cfb0c   172  d63f03e0       constant
0xffff582cfb10   176  58006000       constant
0xffff582cfb14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582cfafc  runtime entry
0xffff582cfb08  constant pool (size 16)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff582d0200     0  orr x16, x1, x0
0xffff582d0204     4  tbnz w16, #0, #+0x10 (addr 0xffff582d0214)
0xffff582d0208     8  asr x1, x1, #32
0xffff582d020c    12  sub x0, x1, x0, asr #32
0xffff582d0210    16  ret
0xffff582d0214    20  cmp x0, x1
0xffff582d0218    24  b.ne #+0x30 (addr 0xffff582d0248)
0xffff582d021c    28  ldur x16, [x0, #-1]
0xffff582d0220    32  ldr x17, [x26, #120]
0xffff582d0224    36  cmp x16, x17
0xffff582d0228    40  b.eq #+0xc (addr 0xffff582d0234)
0xffff582d022c    44  movz x0, #0x0
0xffff582d0230    48  ret
0xffff582d0234    52  ldur d0, [x0, #7]
0xffff582d0238    56  fcmp d0, d0
0xffff582d023c    60  b.vc #-0x10 (addr 0xffff582d022c)
0xffff582d0240    64  movn x0, #0x0
0xffff582d0244    68  ret
0xffff582d0248    72  and x16, x1, x0
0xffff582d024c    76  tbnz w16, #0, #+0x64 (addr 0xffff582d02b0)
0xffff582d0250    80  tbz w0, #0, #+0x24 (addr 0xffff582d0274)
0xffff582d0254    84  ldur x16, [x0, #-1]
0xffff582d0258    88  ldr x17, [x26, #120]
0xffff582d025c    92  cmp x16, x17
0xffff582d0260    96  b.eq #+0x8 (addr 0xffff582d0268)
0xffff582d0264   100  ret
0xffff582d0268   104  ldur d0, [x0, #7]
0xffff582d026c   108  scvtf d1, x1, #32
0xffff582d0270   112  b #+0x24 (addr 0xffff582d0294)
0xffff582d0274   116  ldur x16, [x1, #-1]
0xffff582d0278   120  ldr x17, [x26, #120]
0xffff582d027c   124  cmp x16, x17
0xffff582d0280   128  b.eq #+0xc (addr 0xffff582d028c)
0xffff582d0284   132  movz x0, #0x1
0xffff582d0288   136  ret
0xffff582d028c   140  ldur d1, [x1, #7]
0xffff582d0290   144  scvtf d0, x0, #32
0xffff582d0294   148  fcmp d1, d0
0xffff582d0298   152  b.vs #+0x10 (addr 0xffff582d02a8)
0xffff582d029c   156  cset x0, gt
0xffff582d02a0   160  csinv x0, x0, xzr, ge
0xffff582d02a4   164  ret
0xffff582d02a8   168  movn x0, #0x0
0xffff582d02ac   172  ret
0xffff582d02b0   176  ldur x10, [x0, #-1]
0xffff582d02b4   180  ldur x12, [x1, #-1]
0xffff582d02b8   184  ldrb w11, [x10, #11]
0xffff582d02bc   188  ldrb w13, [x12, #11]
0xffff582d02c0   192  cmp x11, #0xb1 (177)
0xffff582d02c4   196  b.lt #+0x8 (addr 0xffff582d02cc)
0xffff582d02c8   200  ret
0xffff582d02cc   204  cmp x11, #0x83 (131)
0xffff582d02d0   208  movz x16, #0x83
0xffff582d02d4   212  ccmp x13, x16, #nZcv, ne
0xffff582d02d8   216  movz x16, #0xb1
0xffff582d02dc   220  ccmp x13, x16, #NzcV, ne
0xffff582d02e0   224  b.ge #-0x18 (addr 0xffff582d02c8)
0xffff582d02e4   228  orr x14, x13, x11
0xffff582d02e8   232  tst x14, #0xc0
0xffff582d02ec   236  b.eq #-0x24 (addr 0xffff582d02c8)
0xffff582d02f0   240  cmp x11, #0x81 (129)
0xffff582d02f4   244  b.ne #+0x18 (addr 0xffff582d030c)
0xffff582d02f8   248  cmp x12, x10
0xffff582d02fc   252  b.ne #+0x10 (addr 0xffff582d030c)
0xffff582d0300   256  ldur d1, [x1, #7]
0xffff582d0304   260  ldur d0, [x0, #7]
0xffff582d0308   264  b #-0x74 (addr 0xffff582d0294)
0xffff582d030c   268  movz x16, #0x87
0xffff582d0310   272  and x14, x13, x16
0xffff582d0314   276  movz x16, #0x87
0xffff582d0318   280  and x15, x11, x16
0xffff582d031c   284  cmp x14, #0x4 (4)
0xffff582d0320   288  ccmp x15, #4, #nzcv, eq
0xffff582d0324   292  b.ne #+0x5c (addr 0xffff582d0380)
0xffff582d0328   296  ldur x10, [x1, #15]
0xffff582d032c   300  ldur x11, [x0, #15]
0xffff582d0330   304  cmp x10, x11
0xffff582d0334   308  b.eq #+0xc (addr 0xffff582d0340)
0xffff582d0338   312  movz x0, #0x100000000
0xffff582d033c   316  ret
0xffff582d0340   320  cbnz x10, #+0xc (addr 0xffff582d034c)
0xffff582d0344   324  movz x0, #0x0
0xffff582d0348   328  ret
0xffff582d034c   332  asr x10, x10, #32
0xffff582d0350   336  add x11, x10, #0x17 (23)
0xffff582d0354   340  add x1, x1, x11
0xffff582d0358   344  add x0, x0, x11
0xffff582d035c   348  neg x10, x10
0xffff582d0360   352  ldrb w11, [x1, x10]
0xffff582d0364   356  ldrb w12, [x0, x10]
0xffff582d0368   360  cmp x11, x12
0xffff582d036c   364  b.ne #-0x34 (addr 0xffff582d0338)
0xffff582d0370   368  add x10, x10, #0x1 (1)
0xffff582d0374   372  cbnz x10, #-0x14 (addr 0xffff582d0360)
0xffff582d0378   376  movz x0, #0x0
0xffff582d037c   380  ret
0xffff582d0380   384  movz x16, #0xc00000000
0xffff582d0384   388  sub csp, jssp, #0x10 (16)
0xffff582d0388   392  stp fp, lr, [jssp, #-16]!
0xffff582d038c   396  sub csp, jssp, #0x10 (16)
0xffff582d0390   400  str x16, [jssp, #-8]!
0xffff582d0394   404  ldr x17, pc+172 (addr 0x0000ffff582d0440)    ;; object: 0xffff582d01a1 <Code: COMPARE_IC>
0xffff582d0398   408  sub csp, jssp, #0x10 (16)
0xffff582d039c   412  str x17, [jssp, #-8]!
0xffff582d03a0   416  add fp, jssp, #0x10 (16)
0xffff582d03a4   420  sub csp, jssp, #0x10 (16)
0xffff582d03a8   424  stp x0, x1, [jssp, #-16]!
0xffff582d03ac   428  movz x0, #0x2
0xffff582d03b0   432  ldr x1, pc+152 (addr 0x0000ffff582d0448)    ;; external reference (Runtime::StrictEqual)
0xffff582d03b4   436  ldr x16, pc+156 (addr 0x0000ffff582d0450)    ;; code: STUB, CEntryStub, minor: 4
0xffff582d03b8   440  blr x16
0xffff582d03bc   444  mov jssp, fp
0xffff582d03c0   448  ldp fp, lr, [jssp], #16
0xffff582d03c4   452  ldr x1, [x26, #64]
0xffff582d03c8   456  sub x0, x0, x1
0xffff582d03cc   460  ret
0xffff582d03d0   464  movz x16, #0xc00000000
0xffff582d03d4   468  sub csp, jssp, #0x10 (16)
0xffff582d03d8   472  stp fp, lr, [jssp, #-16]!
0xffff582d03dc   476  sub csp, jssp, #0x10 (16)
0xffff582d03e0   480  str x16, [jssp, #-8]!
0xffff582d03e4   484  ldr x17, pc+116 (addr 0x0000ffff582d0458)    ;; object: 0xffff582d01a1 <Code: COMPARE_IC>
0xffff582d03e8   488  sub csp, jssp, #0x10 (16)
0xffff582d03ec   492  str x17, [jssp, #-8]!
0xffff582d03f0   496  add fp, jssp, #0x10 (16)
0xffff582d03f4   500  sub csp, jssp, #0x18 (24)
0xffff582d03f8   504  stp lr, x0, [jssp, #-24]!
0xffff582d03fc   508  str x1, [jssp, #16]
0xffff582d0400   512  movz x10, #0x2f00000000
0xffff582d0404   516  sub csp, jssp, #0x18 (24)
0xffff582d0408   520  stp x10, x0, [jssp, #-24]!
0xffff582d040c   524  str x1, [jssp, #16]
0xffff582d0410   528  movz x0, #0x3
0xffff582d0414   532  ldr x1, pc+76 (addr 0x0000ffff582d0460)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582d0418   536  ldr x16, pc+80 (addr 0x0000ffff582d0468)    ;; code: STUB, CEntryStub, minor: 4
0xffff582d041c   540  blr x16
0xffff582d0420   544  add x11, x0, #0x5f (95)
0xffff582d0424   548  ldr x1, [jssp, #16]
0xffff582d0428   552  ldp lr, x0, [jssp], #24
0xffff582d042c   556  mov jssp, fp
0xffff582d0430   560  ldp fp, lr, [jssp], #16
0xffff582d0434   564  br x11
0xffff582d0438   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582d043c   572  d63f03e0       constant
0xffff582d0440   576  582d01a1       constant
0xffff582d0444   580  0000ffff       constant
0xffff582d0448   584  00e50928       constant
0xffff582d044c   588  00000000       constant
0xffff582d0450   592  58206060       constant
0xffff582d0454   596  0000ffff       constant
0xffff582d0458   600  582d01a1       constant
0xffff582d045c   604  0000ffff       constant
0xffff582d0460   608  00c8a980       constant
0xffff582d0464   612  00000000       constant
0xffff582d0468   616  58206060       constant
0xffff582d046c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff582d0394  embedded object  (0xffff582d01a1 <Code: COMPARE_IC>)
0xffff582d03b0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff582d03b4  code target (STUB)  (0xffff58206060)
0xffff582d03e4  embedded object  (0xffff582d01a1 <Code: COMPARE_IC>)
0xffff582d0414  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582d0418  code target (STUB)  (0xffff58206060)
0xffff582d0438  constant pool (size 56)


kind = HANDLER
major_key = <NoCache>Stub
name = indexOf
compiler = unknown
Instructions (size = 152)
0xffff582d0820     0  sub csp, jssp, #0x8 (8)
0xffff582d0824     4  str x3, [jssp, #-8]!
0xffff582d0828     8  sub csp, jssp, #0x8 (8)
0xffff582d082c    12  str x0, [jssp, #-8]!
0xffff582d0830    16  ldur x3, [cp, #39]
0xffff582d0834    20  movz x16, #0x2e7
0xffff582d0838    24  ldr x3, [x3, x16]
0xffff582d083c    28  ldur x3, [x3, #23]
0xffff582d0840    32  ldur x3, [x3, #23]
0xffff582d0844    36  ldr x0, pc+84 (addr 0x0000ffff582d0898)    ;; object: 0x39c63e59 Cell for 0
0xffff582d0848    40  ldur x0, [x0, #7]
0xffff582d084c    44  cmp x0, #0x0 (0)
0xffff582d0850    48  b.ne #+0x1c (addr 0xffff582d086c)
0xffff582d0854    52  ldur x0, [x3, #-1]
0xffff582d0858    56  ldr x4, pc+72 (addr 0x0000ffff582d08a0)    ;; object: 0x22506e39 WeakCell for 0x32b156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff582d085c    60  ldur x4, [x4, #7]
0xffff582d0860    64  cmp x0, x4
0xffff582d0864    68  b.ne #+0x8 (addr 0xffff582d086c)
0xffff582d0868    72  b #+0x14 (addr 0xffff582d087c)
0xffff582d086c    76  ldr x0, [jssp], #8
0xffff582d0870    80  ldr x3, [jssp], #8
0xffff582d0874    84  ldr x16, pc+52 (addr 0x0000ffff582d08a8)    ;; code: BUILTIN
0xffff582d0878    88  br x16
0xffff582d087c    92  add jssp, jssp, #0x10 (16)
0xffff582d0880    96  mov x1, x3
0xffff582d0884   100  ldr x16, pc+44 (addr 0x0000ffff582d08b0)    ;; code: HANDLER, LoadConstantStub, minor: 10
0xffff582d0888   104  br x16
0xffff582d088c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff582d0890   112  d63f03e0       constant
0xffff582d0894   116  d503201f       constant
0xffff582d0898   120  39c63e59       constant
0xffff582d089c   124  00000000       constant
0xffff582d08a0   128  22506e39       constant
0xffff582d08a4   132  00000000       constant
0xffff582d08a8   136  582222e0       constant
0xffff582d08ac   140  0000ffff       constant
0xffff582d08b0   144  5828c760       constant
0xffff582d08b4   148  0000ffff       constant


RelocInfo (size = 10)
0xffff582d0844  embedded object  (0x39c63e59 Cell for 0)
0xffff582d0858  embedded object  (0x22506e39 WeakCell for 0x32b156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff582d0874  code target (BUILTIN)  (0xffff582222e0)
0xffff582d0884  code target (HANDLER)  (0xffff5828c760)
0xffff582d088c  constant pool (size 44)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 413)
0xffff582d12e0     0  ldur x4, [x1, #15]
0xffff582d12e4     4  ldur w5, [x4, #11]
0xffff582d12e8     8  ldur x16, [x1, #23]
0xffff582d12ec    12  ldur x16, [x16, #39]
0xffff582d12f0    16  tst x16, #0x8
0xffff582d12f4    20  b.ne #+0x11c (addr 0xffff582d1410)
0xffff582d12f8    24  ldur x6, [x4, #23]
0xffff582d12fc    28  ldur x4, [x4, #15]
0xffff582d1300    32  add x4, x6, x4
0xffff582d1304    36  tbnz w2, #0, #+0x48 (addr 0xffff582d134c)
0xffff582d1308    40  asr x7, x2, #32
0xffff582d130c    44  cmp w7, w5
0xffff582d1310    48  b.hs #+0x110 (addr 0xffff582d1420)
0xffff582d1314    52  ldr d0, [x4, w7, sxtw #3]
0xffff582d1318    56  movz x1, #0x92c0
0xffff582d131c    60  movk x1, #0x16e7, lsl #16
0xffff582d1320    64  ldp x2, x0, [x1]
0xffff582d1324    68  adds x16, x2, #0x10 (16)
0xffff582d1328    72  ccmp x16, x0, #nzCv, lo
0xffff582d132c    76  b.hi #+0x68 (addr 0xffff582d1394)
0xffff582d1330    80  str x16, [x1]
0xffff582d1334    84  ldr x1, [x26, #120]
0xffff582d1338    88  str x1, [x2]
0xffff582d133c    92  orr x2, x2, #0x1
0xffff582d1340    96  stur d0, [x2, #7]
0xffff582d1344   100  mov x0, x2
0xffff582d1348   104  ret
0xffff582d134c   108  sub csp, jssp, #0x10 (16)
0xffff582d1350   112  stp fp, lr, [jssp, #-16]!
0xffff582d1354   116  movz fp, #0xa00000000
0xffff582d1358   120  sub csp, jssp, #0x8 (8)
0xffff582d135c   124  str fp, [jssp, #-8]!
0xffff582d1360   128  add fp, jssp, #0x8 (8)
0xffff582d1364   132  ldur x16, [x2, #-1]
0xffff582d1368   136  ldr x17, [x26, #120]
0xffff582d136c   140  cmp x16, x17
0xffff582d1370   144  b.ne #+0xc0 (addr 0xffff582d1430)
0xffff582d1374   148  ldur d29, [x2, #7]
0xffff582d1378   152  fcvtzs w7, d29
0xffff582d137c   156  scvtf d0, w7
0xffff582d1380   160  fcmp d29, d0
0xffff582d1384   164  b.ne #+0xac (addr 0xffff582d1430)
0xffff582d1388   168  ldr lr, [jssp, #16]
0xffff582d138c   172  ldp xzr, fp, [jssp], #24
0xffff582d1390   176  b #-0x84 (addr 0xffff582d130c)
0xffff582d1394   180  sub csp, jssp, #0x10 (16)
0xffff582d1398   184  stp fp, lr, [jssp, #-16]!
0xffff582d139c   188  movz fp, #0xa00000000
0xffff582d13a0   192  sub csp, jssp, #0x8 (8)
0xffff582d13a4   196  str fp, [jssp, #-8]!
0xffff582d13a8   200  add fp, jssp, #0x8 (8)
0xffff582d13ac   204  movz x2, #0x0
0xffff582d13b0   208  mov x16, lr
0xffff582d13b4   212  ldr x17, pc+68 (addr 0x0000ffff582d13f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582d13b8   216  blr x17
0xffff582d13bc   220  ldur cp, [fp, #-8]
0xffff582d13c0   224  movz x0, #0x0
0xffff582d13c4   228  movz x1, #0x4b48
0xffff582d13c8   232  movk x1, #0xe4, lsl #16
0xffff582d13cc   236  ldr x16, pc+52 (addr 0x0000ffff582d1400)    ;; code: STUB, CEntryStub, minor: 5
0xffff582d13d0   240  blr x16
0xffff582d13d4   244  str x0, [jssp, #16]
0xffff582d13d8   248  ldr x16, pc+48 (addr 0x0000ffff582d1408)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582d13dc   252  blr x16
0xffff582d13e0   256  ldr lr, [jssp, #16]
0xffff582d13e4   260  ldp xzr, fp, [jssp], #24
0xffff582d13e8   264  b #-0xa8 (addr 0xffff582d1340)
0xffff582d13ec   268  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff582d13f0   272  d63f03e0       constant
0xffff582d13f4   276  d503201f       constant
0xffff582d13f8   280  58206820       constant
0xffff582d13fc   284  0000ffff       constant
0xffff582d1400   288  58206260       constant
0xffff582d1404   292  0000ffff       constant
0xffff582d1408   296  582068e0       constant
0xffff582d140c   300  0000ffff       constant
0xffff582d1410   304  movz x16, #0x0
0xffff582d1414   308  sub csp, jssp, #0x10 (16)
0xffff582d1418   312  stp fp, lr, [jssp, #-16]!
0xffff582d141c   316  bl #+0x1c (addr 0xffff582d1438)
0xffff582d1420   320  movz x16, #0x8
0xffff582d1424   324  sub csp, jssp, #0x10 (16)
0xffff582d1428   328  stp fp, lr, [jssp, #-16]!
0xffff582d142c   332  bl #+0xc (addr 0xffff582d1438)
0xffff582d1430   336  movz x16, #0x10
0xffff582d1434   340  bl #+0x14 (addr 0xffff582d1448)
0xffff582d1438   344  movz x17, #0xa00000000
0xffff582d143c   348  sub csp, jssp, #0x10 (16)
0xffff582d1440   352  stp x17, cp, [jssp, #-16]!
0xffff582d1444   356  add fp, jssp, #0x10 (16)
0xffff582d1448   360  ldr x17, pc+24 (addr 0x0000ffff582d1460)    ;; lazy deoptimization bailout 0
0xffff582d144c   364  add x17, x17, x16
0xffff582d1450   368  br x17
0xffff582d1454   372  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d1458   376  d63f03e0       constant
0xffff582d145c   380  d503201f       constant
0xffff582d1460   384  58006000       constant
0xffff582d1464   388  0000ffff       constant


Safepoints (size = 21)
0xffff582d13d4   244  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582d13b4  code target (STUB)  (0xffff58206820)
0xffff582d13cc  code target (STUB)  (0xffff58206260)
0xffff582d13d8  code target (STUB)  (0xffff582068e0)
0xffff582d13ec  constant pool (size 36)
0xffff582d1448  runtime entry
0xffff582d1454  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 413)
0xffff582d12e0     0  ldur x4, [x1, #15]
0xffff582d12e4     4  ldur w5, [x4, #11]
0xffff582d12e8     8  ldur x16, [x1, #23]
0xffff582d12ec    12  ldur x16, [x16, #39]
0xffff582d12f0    16  tst x16, #0x8
0xffff582d12f4    20  b.ne #+0x11c (addr 0xffff582d1410)
0xffff582d12f8    24  ldur x6, [x4, #23]
0xffff582d12fc    28  ldur x4, [x4, #15]
0xffff582d1300    32  add x4, x6, x4
0xffff582d1304    36  tbnz w2, #0, #+0x48 (addr 0xffff582d134c)
0xffff582d1308    40  asr x7, x2, #32
0xffff582d130c    44  cmp w7, w5
0xffff582d1310    48  b.hs #+0x110 (addr 0xffff582d1420)
0xffff582d1314    52  ldr d0, [x4, w7, sxtw #3]
0xffff582d1318    56  movz x1, #0x92c0
0xffff582d131c    60  movk x1, #0x16e7, lsl #16
0xffff582d1320    64  ldp x2, x0, [x1]
0xffff582d1324    68  adds x16, x2, #0x10 (16)
0xffff582d1328    72  ccmp x16, x0, #nzCv, lo
0xffff582d132c    76  b.hi #+0x68 (addr 0xffff582d1394)
0xffff582d1330    80  str x16, [x1]
0xffff582d1334    84  ldr x1, [x26, #120]
0xffff582d1338    88  str x1, [x2]
0xffff582d133c    92  orr x2, x2, #0x1
0xffff582d1340    96  stur d0, [x2, #7]
0xffff582d1344   100  mov x0, x2
0xffff582d1348   104  ret
0xffff582d134c   108  sub csp, jssp, #0x10 (16)
0xffff582d1350   112  stp fp, lr, [jssp, #-16]!
0xffff582d1354   116  movz fp, #0xa00000000
0xffff582d1358   120  sub csp, jssp, #0x8 (8)
0xffff582d135c   124  str fp, [jssp, #-8]!
0xffff582d1360   128  add fp, jssp, #0x8 (8)
0xffff582d1364   132  ldur x16, [x2, #-1]
0xffff582d1368   136  ldr x17, [x26, #120]
0xffff582d136c   140  cmp x16, x17
0xffff582d1370   144  b.ne #+0xc0 (addr 0xffff582d1430)
0xffff582d1374   148  ldur d29, [x2, #7]
0xffff582d1378   152  fcvtzs w7, d29
0xffff582d137c   156  scvtf d0, w7
0xffff582d1380   160  fcmp d29, d0
0xffff582d1384   164  b.ne #+0xac (addr 0xffff582d1430)
0xffff582d1388   168  ldr lr, [jssp, #16]
0xffff582d138c   172  ldp xzr, fp, [jssp], #24
0xffff582d1390   176  b #-0x84 (addr 0xffff582d130c)
0xffff582d1394   180  sub csp, jssp, #0x10 (16)
0xffff582d1398   184  stp fp, lr, [jssp, #-16]!
0xffff582d139c   188  movz fp, #0xa00000000
0xffff582d13a0   192  sub csp, jssp, #0x8 (8)
0xffff582d13a4   196  str fp, [jssp, #-8]!
0xffff582d13a8   200  add fp, jssp, #0x8 (8)
0xffff582d13ac   204  movz x2, #0x0
0xffff582d13b0   208  mov x16, lr
0xffff582d13b4   212  ldr x17, pc+68 (addr 0x0000ffff582d13f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582d13b8   216  blr x17
0xffff582d13bc   220  ldur cp, [fp, #-8]
0xffff582d13c0   224  movz x0, #0x0
0xffff582d13c4   228  movz x1, #0x4b48
0xffff582d13c8   232  movk x1, #0xe4, lsl #16
0xffff582d13cc   236  ldr x16, pc+52 (addr 0x0000ffff582d1400)    ;; code: STUB, CEntryStub, minor: 5
0xffff582d13d0   240  blr x16
0xffff582d13d4   244  str x0, [jssp, #16]
0xffff582d13d8   248  ldr x16, pc+48 (addr 0x0000ffff582d1408)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582d13dc   252  blr x16
0xffff582d13e0   256  ldr lr, [jssp, #16]
0xffff582d13e4   260  ldp xzr, fp, [jssp], #24
0xffff582d13e8   264  b #-0xa8 (addr 0xffff582d1340)
0xffff582d13ec   268  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff582d13f0   272  d63f03e0       constant
0xffff582d13f4   276  d503201f       constant
0xffff582d13f8   280  58206820       constant
0xffff582d13fc   284  0000ffff       constant
0xffff582d1400   288  58206260       constant
0xffff582d1404   292  0000ffff       constant
0xffff582d1408   296  582068e0       constant
0xffff582d140c   300  0000ffff       constant
0xffff582d1410   304  movz x16, #0x0
0xffff582d1414   308  sub csp, jssp, #0x10 (16)
0xffff582d1418   312  stp fp, lr, [jssp, #-16]!
0xffff582d141c   316  bl #+0x1c (addr 0xffff582d1438)
0xffff582d1420   320  movz x16, #0x8
0xffff582d1424   324  sub csp, jssp, #0x10 (16)
0xffff582d1428   328  stp fp, lr, [jssp, #-16]!
0xffff582d142c   332  bl #+0xc (addr 0xffff582d1438)
0xffff582d1430   336  movz x16, #0x10
0xffff582d1434   340  bl #+0x14 (addr 0xffff582d1448)
0xffff582d1438   344  movz x17, #0xa00000000
0xffff582d143c   348  sub csp, jssp, #0x10 (16)
0xffff582d1440   352  stp x17, cp, [jssp, #-16]!
0xffff582d1444   356  add fp, jssp, #0x10 (16)
0xffff582d1448   360  ldr x17, pc+24 (addr 0x0000ffff582d1460)    ;; lazy deoptimization bailout 0
0xffff582d144c   364  add x17, x17, x16
0xffff582d1450   368  br x17
0xffff582d1454   372  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d1458   376  d63f03e0       constant
0xffff582d145c   380  d503201f       constant
0xffff582d1460   384  58006000       constant
0xffff582d1464   388  0000ffff       constant


Safepoints (size = 21)
0xffff582d13d4   244  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff582d13b4  code target (STUB)  (0xffff58206820)
0xffff582d13cc  code target (STUB)  (0xffff58206260)
0xffff582d13d8  code target (STUB)  (0xffff582068e0)
0xffff582d13ec  constant pool (size 36)
0xffff582d1448  runtime entry
0xffff582d1454  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = Date
compiler = unknown
Instructions (size = 120)
0xffff582d1a60     0  sub csp, jssp, #0x8 (8)
0xffff582d1a64     4  str x3, [jssp, #-8]!
0xffff582d1a68     8  sub csp, jssp, #0x8 (8)
0xffff582d1a6c    12  str x0, [jssp, #-8]!
0xffff582d1a70    16  ldr x0, pc+80 (addr 0x0000ffff582d1ac0)    ;; object: 0x39cc5d51 Cell for 0
0xffff582d1a74    20  ldur x0, [x0, #7]
0xffff582d1a78    24  cmp x0, #0x0 (0)
0xffff582d1a7c    28  b.ne #+0x2c (addr 0xffff582d1aa8)
0xffff582d1a80    32  ldr x0, pc+72 (addr 0x0000ffff582d1ac8)    ;; object: 0x22534939 WeakCell for 0x39c42ca1 PropertyCell for 0x39c42c39 <JS Function Date (SharedFunctionInfo 0x39c42b91)>
0xffff582d1a84    36  ldur x0, [x0, #7]
0xffff582d1a88    40  tbz w0, #0, #+0x20 (addr 0xffff582d1aa8)
0xffff582d1a8c    44  ldur x0, [x0, #15]
0xffff582d1a90    48  ldr x16, [x26, #88]
0xffff582d1a94    52  cmp x0, x16
0xffff582d1a98    56  b.eq #+0x10 (addr 0xffff582d1aa8)
0xffff582d1a9c    60  add jssp, jssp, #0x10 (16)
0xffff582d1aa0    64  ret
0xffff582d1aa4    68  b #+0x14 (addr 0xffff582d1ab8)
0xffff582d1aa8    72  ldr x0, [jssp], #8
0xffff582d1aac    76  ldr x3, [jssp], #8
0xffff582d1ab0    80  ldr x16, pc+32 (addr 0x0000ffff582d1ad0)    ;; code: BUILTIN
0xffff582d1ab4    84  br x16
0xffff582d1ab8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582d1abc    92  d63f03e0       constant
0xffff582d1ac0    96  39cc5d51       constant
0xffff582d1ac4   100  00000000       constant
0xffff582d1ac8   104  22534939       constant
0xffff582d1acc   108  00000000       constant
0xffff582d1ad0   112  582222e0       constant
0xffff582d1ad4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff582d1a70  embedded object  (0x39cc5d51 Cell for 0)
0xffff582d1a80  embedded object  (0x22534939 WeakCell for 0x39c42ca1 PropertyCell for 0x39c42c39 <JS Function Date (SharedFunctionInfo 0x39c42b91)>)
0xffff582d1ab0  code target (BUILTIN)  (0xffff582222e0)
0xffff582d1ab8  constant pool (size 32)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = STRING*SMI -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 632)
0xffff582d2a40     0  tbnz w0, #0, #+0x1d4 (addr 0xffff582d2c14)
0xffff582d2a44     4  orr x16, x1, x0
0xffff582d2a48     8  tbnz w16, #0, #+0x10 (addr 0xffff582d2a58)
0xffff582d2a4c    12  asr x1, x1, #32
0xffff582d2a50    16  sub x0, x1, x0, asr #32
0xffff582d2a54    20  ret
0xffff582d2a58    24  cmp x0, x1
0xffff582d2a5c    28  b.ne #+0x30 (addr 0xffff582d2a8c)
0xffff582d2a60    32  ldur x16, [x0, #-1]
0xffff582d2a64    36  ldr x17, [x26, #120]
0xffff582d2a68    40  cmp x16, x17
0xffff582d2a6c    44  b.eq #+0xc (addr 0xffff582d2a78)
0xffff582d2a70    48  movz x0, #0x0
0xffff582d2a74    52  ret
0xffff582d2a78    56  ldur d0, [x0, #7]
0xffff582d2a7c    60  fcmp d0, d0
0xffff582d2a80    64  b.vc #-0x10 (addr 0xffff582d2a70)
0xffff582d2a84    68  movn x0, #0x0
0xffff582d2a88    72  ret
0xffff582d2a8c    76  and x16, x1, x0
0xffff582d2a90    80  tbnz w16, #0, #+0x64 (addr 0xffff582d2af4)
0xffff582d2a94    84  tbz w0, #0, #+0x24 (addr 0xffff582d2ab8)
0xffff582d2a98    88  ldur x16, [x0, #-1]
0xffff582d2a9c    92  ldr x17, [x26, #120]
0xffff582d2aa0    96  cmp x16, x17
0xffff582d2aa4   100  b.eq #+0x8 (addr 0xffff582d2aac)
0xffff582d2aa8   104  ret
0xffff582d2aac   108  ldur d0, [x0, #7]
0xffff582d2ab0   112  scvtf d1, x1, #32
0xffff582d2ab4   116  b #+0x24 (addr 0xffff582d2ad8)
0xffff582d2ab8   120  ldur x16, [x1, #-1]
0xffff582d2abc   124  ldr x17, [x26, #120]
0xffff582d2ac0   128  cmp x16, x17
0xffff582d2ac4   132  b.eq #+0xc (addr 0xffff582d2ad0)
0xffff582d2ac8   136  movz x0, #0x1
0xffff582d2acc   140  ret
0xffff582d2ad0   144  ldur d1, [x1, #7]
0xffff582d2ad4   148  scvtf d0, x0, #32
0xffff582d2ad8   152  fcmp d1, d0
0xffff582d2adc   156  b.vs #+0x10 (addr 0xffff582d2aec)
0xffff582d2ae0   160  cset x0, gt
0xffff582d2ae4   164  csinv x0, x0, xzr, ge
0xffff582d2ae8   168  ret
0xffff582d2aec   172  movn x0, #0x0
0xffff582d2af0   176  ret
0xffff582d2af4   180  ldur x10, [x0, #-1]
0xffff582d2af8   184  ldur x12, [x1, #-1]
0xffff582d2afc   188  ldrb w11, [x10, #11]
0xffff582d2b00   192  ldrb w13, [x12, #11]
0xffff582d2b04   196  cmp x11, #0xb1 (177)
0xffff582d2b08   200  b.lt #+0x8 (addr 0xffff582d2b10)
0xffff582d2b0c   204  ret
0xffff582d2b10   208  cmp x11, #0x83 (131)
0xffff582d2b14   212  movz x16, #0x83
0xffff582d2b18   216  ccmp x13, x16, #nZcv, ne
0xffff582d2b1c   220  movz x16, #0xb1
0xffff582d2b20   224  ccmp x13, x16, #NzcV, ne
0xffff582d2b24   228  b.ge #-0x18 (addr 0xffff582d2b0c)
0xffff582d2b28   232  orr x14, x13, x11
0xffff582d2b2c   236  tst x14, #0xc0
0xffff582d2b30   240  b.eq #-0x24 (addr 0xffff582d2b0c)
0xffff582d2b34   244  cmp x11, #0x81 (129)
0xffff582d2b38   248  b.ne #+0x18 (addr 0xffff582d2b50)
0xffff582d2b3c   252  cmp x12, x10
0xffff582d2b40   256  b.ne #+0x10 (addr 0xffff582d2b50)
0xffff582d2b44   260  ldur d1, [x1, #7]
0xffff582d2b48   264  ldur d0, [x0, #7]
0xffff582d2b4c   268  b #-0x74 (addr 0xffff582d2ad8)
0xffff582d2b50   272  movz x16, #0x87
0xffff582d2b54   276  and x14, x13, x16
0xffff582d2b58   280  movz x16, #0x87
0xffff582d2b5c   284  and x15, x11, x16
0xffff582d2b60   288  cmp x14, #0x4 (4)
0xffff582d2b64   292  ccmp x15, #4, #nzcv, eq
0xffff582d2b68   296  b.ne #+0x5c (addr 0xffff582d2bc4)
0xffff582d2b6c   300  ldur x10, [x1, #15]
0xffff582d2b70   304  ldur x11, [x0, #15]
0xffff582d2b74   308  cmp x10, x11
0xffff582d2b78   312  b.eq #+0xc (addr 0xffff582d2b84)
0xffff582d2b7c   316  movz x0, #0x100000000
0xffff582d2b80   320  ret
0xffff582d2b84   324  cbnz x10, #+0xc (addr 0xffff582d2b90)
0xffff582d2b88   328  movz x0, #0x0
0xffff582d2b8c   332  ret
0xffff582d2b90   336  asr x10, x10, #32
0xffff582d2b94   340  add x11, x10, #0x17 (23)
0xffff582d2b98   344  add x1, x1, x11
0xffff582d2b9c   348  add x0, x0, x11
0xffff582d2ba0   352  neg x10, x10
0xffff582d2ba4   356  ldrb w11, [x1, x10]
0xffff582d2ba8   360  ldrb w12, [x0, x10]
0xffff582d2bac   364  cmp x11, x12
0xffff582d2bb0   368  b.ne #-0x34 (addr 0xffff582d2b7c)
0xffff582d2bb4   372  add x10, x10, #0x1 (1)
0xffff582d2bb8   376  cbnz x10, #-0x14 (addr 0xffff582d2ba4)
0xffff582d2bbc   380  movz x0, #0x0
0xffff582d2bc0   384  ret
0xffff582d2bc4   388  movz x16, #0xc00000000
0xffff582d2bc8   392  sub csp, jssp, #0x10 (16)
0xffff582d2bcc   396  stp fp, lr, [jssp, #-16]!
0xffff582d2bd0   400  sub csp, jssp, #0x10 (16)
0xffff582d2bd4   404  str x16, [jssp, #-8]!
0xffff582d2bd8   408  ldr x17, pc+176 (addr 0x0000ffff582d2c88)    ;; object: 0xffff582d29e1 <Code: COMPARE_IC>
0xffff582d2bdc   412  sub csp, jssp, #0x10 (16)
0xffff582d2be0   416  str x17, [jssp, #-8]!
0xffff582d2be4   420  add fp, jssp, #0x10 (16)
0xffff582d2be8   424  sub csp, jssp, #0x10 (16)
0xffff582d2bec   428  stp x0, x1, [jssp, #-16]!
0xffff582d2bf0   432  movz x0, #0x2
0xffff582d2bf4   436  ldr x1, pc+156 (addr 0x0000ffff582d2c90)    ;; external reference (Runtime::StrictEqual)
0xffff582d2bf8   440  ldr x16, pc+160 (addr 0x0000ffff582d2c98)    ;; code: STUB, CEntryStub, minor: 4
0xffff582d2bfc   444  blr x16
0xffff582d2c00   448  mov jssp, fp
0xffff582d2c04   452  ldp fp, lr, [jssp], #16
0xffff582d2c08   456  ldr x1, [x26, #64]
0xffff582d2c0c   460  sub x0, x0, x1
0xffff582d2c10   464  ret
0xffff582d2c14   468  movz x16, #0xc00000000
0xffff582d2c18   472  sub csp, jssp, #0x10 (16)
0xffff582d2c1c   476  stp fp, lr, [jssp, #-16]!
0xffff582d2c20   480  sub csp, jssp, #0x10 (16)
0xffff582d2c24   484  str x16, [jssp, #-8]!
0xffff582d2c28   488  ldr x17, pc+120 (addr 0x0000ffff582d2ca0)    ;; object: 0xffff582d29e1 <Code: COMPARE_IC>
0xffff582d2c2c   492  sub csp, jssp, #0x10 (16)
0xffff582d2c30   496  str x17, [jssp, #-8]!
0xffff582d2c34   500  add fp, jssp, #0x10 (16)
0xffff582d2c38   504  sub csp, jssp, #0x18 (24)
0xffff582d2c3c   508  stp lr, x0, [jssp, #-24]!
0xffff582d2c40   512  str x1, [jssp, #16]
0xffff582d2c44   516  movz x10, #0x2f00000000
0xffff582d2c48   520  sub csp, jssp, #0x18 (24)
0xffff582d2c4c   524  stp x10, x0, [jssp, #-24]!
0xffff582d2c50   528  str x1, [jssp, #16]
0xffff582d2c54   532  movz x0, #0x3
0xffff582d2c58   536  ldr x1, pc+80 (addr 0x0000ffff582d2ca8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582d2c5c   540  ldr x16, pc+84 (addr 0x0000ffff582d2cb0)    ;; code: STUB, CEntryStub, minor: 4
0xffff582d2c60   544  blr x16
0xffff582d2c64   548  add x11, x0, #0x5f (95)
0xffff582d2c68   552  ldr x1, [jssp, #16]
0xffff582d2c6c   556  ldp lr, x0, [jssp], #24
0xffff582d2c70   560  mov jssp, fp
0xffff582d2c74   564  ldp fp, lr, [jssp], #16
0xffff582d2c78   568  br x11
0xffff582d2c7c   572  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d2c80   576  d63f03e0       constant
0xffff582d2c84   580  d503201f       constant
0xffff582d2c88   584  582d29e1       constant
0xffff582d2c8c   588  0000ffff       constant
0xffff582d2c90   592  00e50928       constant
0xffff582d2c94   596  00000000       constant
0xffff582d2c98   600  58206060       constant
0xffff582d2c9c   604  0000ffff       constant
0xffff582d2ca0   608  582d29e1       constant
0xffff582d2ca4   612  0000ffff       constant
0xffff582d2ca8   616  00c8a980       constant
0xffff582d2cac   620  00000000       constant
0xffff582d2cb0   624  58206060       constant
0xffff582d2cb4   628  0000ffff       constant


RelocInfo (size = 16)
0xffff582d2bd8  embedded object  (0xffff582d29e1 <Code: COMPARE_IC>)
0xffff582d2bf4  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff582d2bf8  code target (STUB)  (0xffff58206060)
0xffff582d2c28  embedded object  (0xffff582d29e1 <Code: COMPARE_IC>)
0xffff582d2c58  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582d2c5c  code target (STUB)  (0xffff58206060)
0xffff582d2c7c  constant pool (size 60)


kind = HANDLER
major_key = <NoCache>Stub
name = get
compiler = unknown
Instructions (size = 120)
0xffff582d2fa0     0  sub csp, jssp, #0x8 (8)
0xffff582d2fa4     4  str x3, [jssp, #-8]!
0xffff582d2fa8     8  sub csp, jssp, #0x8 (8)
0xffff582d2fac    12  str x0, [jssp, #-8]!
0xffff582d2fb0    16  ldr x0, pc+72 (addr 0x0000ffff582d2ff8)    ;; object: 0x22535189 Cell for 0
0xffff582d2fb4    20  ldur x0, [x0, #7]
0xffff582d2fb8    24  cmp x0, #0x0 (0)
0xffff582d2fbc    28  b.ne #+0x14 (addr 0xffff582d2fd0)
0xffff582d2fc0    32  ldr x3, pc+64 (addr 0x0000ffff582d3000)    ;; object: 0x22535199 WeakCell for 0x25f757c1 <an Object with map 0x32b11eb1>
0xffff582d2fc4    36  ldur x3, [x3, #7]
0xffff582d2fc8    40  tbz w3, #0, #+0x8 (addr 0xffff582d2fd0)
0xffff582d2fcc    44  b #+0x14 (addr 0xffff582d2fe0)
0xffff582d2fd0    48  ldr x0, [jssp], #8
0xffff582d2fd4    52  ldr x3, [jssp], #8
0xffff582d2fd8    56  ldr x16, pc+48 (addr 0x0000ffff582d3008)    ;; code: BUILTIN
0xffff582d2fdc    60  br x16
0xffff582d2fe0    64  add jssp, jssp, #0x10 (16)
0xffff582d2fe4    68  mov x1, x3
0xffff582d2fe8    72  ldr x16, pc+40 (addr 0x0000ffff582d3010)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff582d2fec    76  br x16
0xffff582d2ff0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582d2ff4    84  d63f03e0       constant
0xffff582d2ff8    88  22535189       constant
0xffff582d2ffc    92  00000000       constant
0xffff582d3000    96  22535199       constant
0xffff582d3004   100  00000000       constant
0xffff582d3008   104  582222e0       constant
0xffff582d300c   108  0000ffff       constant
0xffff582d3010   112  58243400       constant
0xffff582d3014   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582d2fb0  embedded object  (0x22535189 Cell for 0)
0xffff582d2fc0  embedded object  (0x22535199 WeakCell for 0x25f757c1 <an Object with map 0x32b11eb1>)
0xffff582d2fd8  code target (BUILTIN)  (0xffff582222e0)
0xffff582d2fe8  code target (HANDLER)  (0xffff58243400)
0xffff582d2ff0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582d3080     0  ldur x0, [x1, #-1]
0xffff582d3084     4  ldur x0, [x0, #47]
0xffff582d3088     8  movz x16, #0x197
0xffff582d308c    12  ldr x0, [x0, x16]
0xffff582d3090    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582d3080     0  ldur x0, [x1, #-1]
0xffff582d3084     4  ldur x0, [x0, #47]
0xffff582d3088     8  movz x16, #0x197
0xffff582d308c    12  ldr x0, [x0, x16]
0xffff582d3090    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582d3100     0  ldur x0, [x1, #63]
0xffff582d3104     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582d3100     0  ldur x0, [x1, #63]
0xffff582d3104     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 512)
0xffff582d3180     0  orr x16, x1, x0
0xffff582d3184     4  tbnz w16, #0, #+0x10 (addr 0xffff582d3194)
0xffff582d3188     8  asr x1, x1, #32
0xffff582d318c    12  sub x0, x1, x0, asr #32
0xffff582d3190    16  ret
0xffff582d3194    20  cmp x0, x1
0xffff582d3198    24  b.ne #+0x2c (addr 0xffff582d31c4)
0xffff582d319c    28  ldur x10, [x0, #-1]
0xffff582d31a0    32  ldrb w10, [x10, #11]
0xffff582d31a4    36  cmp x10, #0xb1 (177)
0xffff582d31a8    40  b.ge #+0x118 (addr 0xffff582d32c0)
0xffff582d31ac    44  cmp x10, #0x80 (128)
0xffff582d31b0    48  b.eq #+0x110 (addr 0xffff582d32c0)
0xffff582d31b4    52  cmp x10, #0x82 (130)
0xffff582d31b8    56  b.eq #+0x108 (addr 0xffff582d32c0)
0xffff582d31bc    60  movz x0, #0x1
0xffff582d31c0    64  ret
0xffff582d31c4    68  and x16, x1, x0
0xffff582d31c8    72  tbnz w16, #0, #+0x58 (addr 0xffff582d3220)
0xffff582d31cc    76  tbz w0, #0, #+0x20 (addr 0xffff582d31ec)
0xffff582d31d0    80  ldur x16, [x0, #-1]
0xffff582d31d4    84  ldr x17, [x26, #120]
0xffff582d31d8    88  cmp x16, x17
0xffff582d31dc    92  b.ne #+0xe4 (addr 0xffff582d32c0)
0xffff582d31e0    96  ldur d0, [x0, #7]
0xffff582d31e4   100  scvtf d1, x1, #32
0xffff582d31e8   104  b #+0x1c (addr 0xffff582d3204)
0xffff582d31ec   108  ldur x16, [x1, #-1]
0xffff582d31f0   112  ldr x17, [x26, #120]
0xffff582d31f4   116  cmp x16, x17
0xffff582d31f8   120  b.ne #+0xc8 (addr 0xffff582d32c0)
0xffff582d31fc   124  ldur d1, [x1, #7]
0xffff582d3200   128  scvtf d0, x0, #32
0xffff582d3204   132  fcmp d1, d0
0xffff582d3208   136  b.vs #+0x10 (addr 0xffff582d3218)
0xffff582d320c   140  cset x0, gt
0xffff582d3210   144  csinv x0, x0, xzr, ge
0xffff582d3214   148  ret
0xffff582d3218   152  movz x0, #0x1
0xffff582d321c   156  ret
0xffff582d3220   160  ldur x10, [x0, #-1]
0xffff582d3224   164  ldur x12, [x1, #-1]
0xffff582d3228   168  ldrb w11, [x10, #11]
0xffff582d322c   172  ldrb w13, [x12, #11]
0xffff582d3230   176  cmp x11, #0x81 (129)
0xffff582d3234   180  b.ne #+0x18 (addr 0xffff582d324c)
0xffff582d3238   184  cmp x12, x10
0xffff582d323c   188  b.ne #+0x10 (addr 0xffff582d324c)
0xffff582d3240   192  ldur d1, [x1, #7]
0xffff582d3244   196  ldur d0, [x0, #7]
0xffff582d3248   200  b #-0x44 (addr 0xffff582d3204)
0xffff582d324c   204  movz x16, #0x87
0xffff582d3250   208  and x14, x13, x16
0xffff582d3254   212  movz x16, #0x87
0xffff582d3258   216  and x15, x11, x16
0xffff582d325c   220  cmp x14, #0x4 (4)
0xffff582d3260   224  ccmp x15, #4, #nzcv, eq
0xffff582d3264   228  b.ne #+0x5c (addr 0xffff582d32c0)
0xffff582d3268   232  ldur x10, [x1, #15]
0xffff582d326c   236  ldur x11, [x0, #15]
0xffff582d3270   240  subs x12, x10, x11
0xffff582d3274   244  csel x10, x11, x10, gt
0xffff582d3278   248  cbz x10, #+0x30 (addr 0xffff582d32a8)
0xffff582d327c   252  asr x10, x10, #32
0xffff582d3280   256  add x11, x10, #0x17 (23)
0xffff582d3284   260  add x1, x1, x11
0xffff582d3288   264  add x0, x0, x11
0xffff582d328c   268  neg x10, x10
0xffff582d3290   272  ldrb w11, [x1, x10]
0xffff582d3294   276  ldrb w13, [x0, x10]
0xffff582d3298   280  cmp x11, x13
0xffff582d329c   284  b.ne #+0x10 (addr 0xffff582d32ac)
0xffff582d32a0   288  add x10, x10, #0x1 (1)
0xffff582d32a4   292  cbnz x10, #-0x14 (addr 0xffff582d3290)
0xffff582d32a8   296  subs x0, x12, #0x0 (0)
0xffff582d32ac   300  movz x10, #0x100000000
0xffff582d32b0   304  mov x11, #0xffffffff00000000
0xffff582d32b4   308  csel x0, x10, x0, gt
0xffff582d32b8   312  csel x0, x11, x0, lt
0xffff582d32bc   316  ret
0xffff582d32c0   320  sub csp, jssp, #0x10 (16)
0xffff582d32c4   324  stp x0, x1, [jssp, #-16]!
0xffff582d32c8   328  movz x10, #0x100000000
0xffff582d32cc   332  sub csp, jssp, #0x8 (8)
0xffff582d32d0   336  str x10, [jssp, #-8]!
0xffff582d32d4   340  movz x0, #0x3
0xffff582d32d8   344  ldr x1, pc+128 (addr 0x0000ffff582d3358)    ;; external reference (Runtime::Compare)
0xffff582d32dc   348  ldr x16, pc+132 (addr 0x0000ffff582d3360)    ;; code: STUB, CEntryStub, minor: 4
0xffff582d32e0   352  br x16
0xffff582d32e4   356  movz x16, #0xc00000000
0xffff582d32e8   360  sub csp, jssp, #0x10 (16)
0xffff582d32ec   364  stp fp, lr, [jssp, #-16]!
0xffff582d32f0   368  sub csp, jssp, #0x10 (16)
0xffff582d32f4   372  str x16, [jssp, #-8]!
0xffff582d32f8   376  ldr x17, pc+112 (addr 0x0000ffff582d3368)    ;; object: 0xffff582d3121 <Code: COMPARE_IC>
0xffff582d32fc   380  sub csp, jssp, #0x10 (16)
0xffff582d3300   384  str x17, [jssp, #-8]!
0xffff582d3304   388  add fp, jssp, #0x10 (16)
0xffff582d3308   392  sub csp, jssp, #0x18 (24)
0xffff582d330c   396  stp lr, x0, [jssp, #-24]!
0xffff582d3310   400  str x1, [jssp, #16]
0xffff582d3314   404  movz x10, #0x3100000000
0xffff582d3318   408  sub csp, jssp, #0x18 (24)
0xffff582d331c   412  stp x10, x0, [jssp, #-24]!
0xffff582d3320   416  str x1, [jssp, #16]
0xffff582d3324   420  movz x0, #0x3
0xffff582d3328   424  ldr x1, pc+72 (addr 0x0000ffff582d3370)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582d332c   428  ldr x16, pc+76 (addr 0x0000ffff582d3378)    ;; code: STUB, CEntryStub, minor: 4
0xffff582d3330   432  blr x16
0xffff582d3334   436  add x11, x0, #0x5f (95)
0xffff582d3338   440  ldr x1, [jssp, #16]
0xffff582d333c   444  ldp lr, x0, [jssp], #24
0xffff582d3340   448  mov jssp, fp
0xffff582d3344   452  ldp fp, lr, [jssp], #16
0xffff582d3348   456  br x11
0xffff582d334c   460  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff582d3350   464  d63f03e0       constant
0xffff582d3354   468  d503201f       constant
0xffff582d3358   472  00e49ea8       constant
0xffff582d335c   476  00000000       constant
0xffff582d3360   480  58206060       constant
0xffff582d3364   484  0000ffff       constant
0xffff582d3368   488  582d3121       constant
0xffff582d336c   492  0000ffff       constant
0xffff582d3370   496  00c8a980       constant
0xffff582d3374   500  00000000       constant
0xffff582d3378   504  58206060       constant
0xffff582d337c   508  0000ffff       constant


RelocInfo (size = 15)
0xffff582d32d8  external reference (Runtime::Compare)  (0xe49ea8)
0xffff582d32dc  code target (STUB)  (0xffff58206060)
0xffff582d32f8  embedded object  (0xffff582d3121 <Code: COMPARE_IC>)
0xffff582d3328  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582d332c  code target (STUB)  (0xffff58206060)
0xffff582d334c  constant pool (size 52)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff582d33e0     0  tbnz w0, #0, #+0x88 (addr 0xffff582d3468)
0xffff582d33e4     4  scvtf d0, x0, #32
0xffff582d33e8     8  scvtf d1, x1, #32
0xffff582d33ec    12  tbz w0, #0, #+0x18 (addr 0xffff582d3404)
0xffff582d33f0    16  ldur x16, [x0, #-1]
0xffff582d33f4    20  ldr x17, [x26, #120]
0xffff582d33f8    24  cmp x16, x17
0xffff582d33fc    28  b.ne #+0x3c (addr 0xffff582d3438)
0xffff582d3400    32  ldur d0, [x0, #7]
0xffff582d3404    36  tbz w1, #0, #+0x18 (addr 0xffff582d341c)
0xffff582d3408    40  ldur x16, [x1, #-1]
0xffff582d340c    44  ldr x17, [x26, #120]
0xffff582d3410    48  cmp x16, x17
0xffff582d3414    52  b.ne #+0x48 (addr 0xffff582d345c)
0xffff582d3418    56  ldur d1, [x1, #7]
0xffff582d341c    60  fcmp d1, d0
0xffff582d3420    64  b.vs #+0x10 (addr 0xffff582d3430)
0xffff582d3424    68  cset x0, gt
0xffff582d3428    72  csinv x0, x0, xzr, ge
0xffff582d342c    76  ret
0xffff582d3430    80  ldr x16, pc+168 (addr 0x0000ffff582d34d8)    ;; code: COMPARE_IC, GENERIC
0xffff582d3434    84  br x16
0xffff582d3438    88  ldr x16, [x26, #40]
0xffff582d343c    92  cmp x0, x16
0xffff582d3440    96  b.ne #+0x28 (addr 0xffff582d3468)
0xffff582d3444   100  tbz w1, #0, #-0x14 (addr 0xffff582d3430)
0xffff582d3448   104  ldur x16, [x1, #-1]
0xffff582d344c   108  ldr x17, [x26, #120]
0xffff582d3450   112  cmp x16, x17
0xffff582d3454   116  b.ne #+0x8 (addr 0xffff582d345c)
0xffff582d3458   120  b #-0x28 (addr 0xffff582d3430)
0xffff582d345c   124  ldr x16, [x26, #40]
0xffff582d3460   128  cmp x1, x16
0xffff582d3464   132  b.eq #-0x34 (addr 0xffff582d3430)
0xffff582d3468   136  movz x16, #0xc00000000
0xffff582d346c   140  sub csp, jssp, #0x10 (16)
0xffff582d3470   144  stp fp, lr, [jssp, #-16]!
0xffff582d3474   148  sub csp, jssp, #0x10 (16)
0xffff582d3478   152  str x16, [jssp, #-8]!
0xffff582d347c   156  ldr x17, pc+100 (addr 0x0000ffff582d34e0)    ;; object: 0xffff582d3381 <Code: COMPARE_IC>
0xffff582d3480   160  sub csp, jssp, #0x10 (16)
0xffff582d3484   164  str x17, [jssp, #-8]!
0xffff582d3488   168  add fp, jssp, #0x10 (16)
0xffff582d348c   172  sub csp, jssp, #0x18 (24)
0xffff582d3490   176  stp lr, x0, [jssp, #-24]!
0xffff582d3494   180  str x1, [jssp, #16]
0xffff582d3498   184  movz x10, #0x3100000000
0xffff582d349c   188  sub csp, jssp, #0x18 (24)
0xffff582d34a0   192  stp x10, x0, [jssp, #-24]!
0xffff582d34a4   196  str x1, [jssp, #16]
0xffff582d34a8   200  movz x0, #0x3
0xffff582d34ac   204  ldr x1, pc+60 (addr 0x0000ffff582d34e8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582d34b0   208  ldr x16, pc+64 (addr 0x0000ffff582d34f0)    ;; code: STUB, CEntryStub, minor: 4
0xffff582d34b4   212  blr x16
0xffff582d34b8   216  add x11, x0, #0x5f (95)
0xffff582d34bc   220  ldr x1, [jssp, #16]
0xffff582d34c0   224  ldp lr, x0, [jssp], #24
0xffff582d34c4   228  mov jssp, fp
0xffff582d34c8   232  ldp fp, lr, [jssp], #16
0xffff582d34cc   236  br x11
0xffff582d34d0   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582d34d4   244  d63f03e0       constant
0xffff582d34d8   248  582d3180       constant
0xffff582d34dc   252  0000ffff       constant
0xffff582d34e0   256  582d3381       constant
0xffff582d34e4   260  0000ffff       constant
0xffff582d34e8   264  00c8a980       constant
0xffff582d34ec   268  00000000       constant
0xffff582d34f0   272  58206060       constant
0xffff582d34f4   276  0000ffff       constant


RelocInfo (size = 15)
0xffff582d3430  code target (COMPARE_IC)  (0xffff582d3180)
0xffff582d347c  embedded object  (0xffff582d3381 <Code: COMPARE_IC>)
0xffff582d34ac  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582d34b0  code target (STUB)  (0xffff58206060)
0xffff582d34d0  constant pool (size 40)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d3560     0  tbz w0, #0, #+0x1c (addr 0xffff582d357c)
0xffff582d3564     4  ldur x16, [x0, #-1]
0xffff582d3568     8  ldr x17, [x26, #120]
0xffff582d356c    12  cmp x16, x17
0xffff582d3570    16  b.ne #+0x60 (addr 0xffff582d35d0)
0xffff582d3574    20  ldur d0, [x0, #7]
0xffff582d3578    24  b #+0x8 (addr 0xffff582d3580)
0xffff582d357c    28  scvtf d0, x0, #32
0xffff582d3580    32  stur d0, [x1, #23]
0xffff582d3584    36  stur x5, [x1, #-1]
0xffff582d3588    40  tbz w5, #0, #+0x34 (addr 0xffff582d35bc)
0xffff582d358c    44  sub x2, x1, #0x1 (1)
0xffff582d3590    48  and x5, x5, #0xfffffffffff00000
0xffff582d3594    52  ldr x5, [x5, #8]
0xffff582d3598    56  tbz w5, #1, #+0x24 (addr 0xffff582d35bc)
0xffff582d359c    60  and x5, x1, #0xfffffffffff00000
0xffff582d35a0    64  ldr x5, [x5, #8]
0xffff582d35a4    68  tbz w5, #2, #+0x18 (addr 0xffff582d35bc)
0xffff582d35a8    72  sub csp, jssp, #0x8 (8)
0xffff582d35ac    76  str lr, [jssp, #-8]!
0xffff582d35b0    80  ldr x16, pc+24 (addr 0x0000ffff582d35c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d35b4    84  blr x16
0xffff582d35b8    88  ldr lr, [jssp], #8
0xffff582d35bc    92  ret
0xffff582d35c0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d35c4   100  d63f03e0       constant
0xffff582d35c8   104  58238080       constant
0xffff582d35cc   108  0000ffff       constant
0xffff582d35d0   112  movz x16, #0x0
0xffff582d35d4   116  sub csp, jssp, #0x10 (16)
0xffff582d35d8   120  stp fp, lr, [jssp, #-16]!
0xffff582d35dc   124  bl #+0x4 (addr 0xffff582d35e0)
0xffff582d35e0   128  movz x17, #0xa00000000
0xffff582d35e4   132  sub csp, jssp, #0x10 (16)
0xffff582d35e8   136  stp x17, cp, [jssp, #-16]!
0xffff582d35ec   140  add fp, jssp, #0x10 (16)
0xffff582d35f0   144  ldr x17, pc+24 (addr 0x0000ffff582d3608)    ;; lazy deoptimization bailout 0
0xffff582d35f4   148  add x17, x17, x16
0xffff582d35f8   152  br x17
0xffff582d35fc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d3600   160  d63f03e0       constant
0xffff582d3604   164  d503201f       constant
0xffff582d3608   168  58006000       constant
0xffff582d360c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d35b0  code target (STUB)  (0xffff58238080)
0xffff582d35c0  constant pool (size 16)
0xffff582d35f0  runtime entry
0xffff582d35fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d3560     0  tbz w0, #0, #+0x1c (addr 0xffff582d357c)
0xffff582d3564     4  ldur x16, [x0, #-1]
0xffff582d3568     8  ldr x17, [x26, #120]
0xffff582d356c    12  cmp x16, x17
0xffff582d3570    16  b.ne #+0x60 (addr 0xffff582d35d0)
0xffff582d3574    20  ldur d0, [x0, #7]
0xffff582d3578    24  b #+0x8 (addr 0xffff582d3580)
0xffff582d357c    28  scvtf d0, x0, #32
0xffff582d3580    32  stur d0, [x1, #23]
0xffff582d3584    36  stur x5, [x1, #-1]
0xffff582d3588    40  tbz w5, #0, #+0x34 (addr 0xffff582d35bc)
0xffff582d358c    44  sub x2, x1, #0x1 (1)
0xffff582d3590    48  and x5, x5, #0xfffffffffff00000
0xffff582d3594    52  ldr x5, [x5, #8]
0xffff582d3598    56  tbz w5, #1, #+0x24 (addr 0xffff582d35bc)
0xffff582d359c    60  and x5, x1, #0xfffffffffff00000
0xffff582d35a0    64  ldr x5, [x5, #8]
0xffff582d35a4    68  tbz w5, #2, #+0x18 (addr 0xffff582d35bc)
0xffff582d35a8    72  sub csp, jssp, #0x8 (8)
0xffff582d35ac    76  str lr, [jssp, #-8]!
0xffff582d35b0    80  ldr x16, pc+24 (addr 0x0000ffff582d35c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d35b4    84  blr x16
0xffff582d35b8    88  ldr lr, [jssp], #8
0xffff582d35bc    92  ret
0xffff582d35c0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d35c4   100  d63f03e0       constant
0xffff582d35c8   104  58238080       constant
0xffff582d35cc   108  0000ffff       constant
0xffff582d35d0   112  movz x16, #0x0
0xffff582d35d4   116  sub csp, jssp, #0x10 (16)
0xffff582d35d8   120  stp fp, lr, [jssp, #-16]!
0xffff582d35dc   124  bl #+0x4 (addr 0xffff582d35e0)
0xffff582d35e0   128  movz x17, #0xa00000000
0xffff582d35e4   132  sub csp, jssp, #0x10 (16)
0xffff582d35e8   136  stp x17, cp, [jssp, #-16]!
0xffff582d35ec   140  add fp, jssp, #0x10 (16)
0xffff582d35f0   144  ldr x17, pc+24 (addr 0x0000ffff582d3608)    ;; lazy deoptimization bailout 0
0xffff582d35f4   148  add x17, x17, x16
0xffff582d35f8   152  br x17
0xffff582d35fc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d3600   160  d63f03e0       constant
0xffff582d3604   164  d503201f       constant
0xffff582d3608   168  58006000       constant
0xffff582d360c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d35b0  code target (STUB)  (0xffff58238080)
0xffff582d35c0  constant pool (size 16)
0xffff582d35f0  runtime entry
0xffff582d35fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = dev
compiler = unknown
Instructions (size = 152)
0xffff582d3680     0  sub csp, jssp, #0x8 (8)
0xffff582d3684     4  str x3, [jssp, #-8]!
0xffff582d3688     8  sub csp, jssp, #0x8 (8)
0xffff582d368c    12  str x4, [jssp, #-8]!
0xffff582d3690    16  ldr x3, pc+88 (addr 0x0000ffff582d36e8)    ;; object: 0x225352e9 Cell for 0
0xffff582d3694    20  ldur x3, [x3, #7]
0xffff582d3698    24  cmp x3, #0x0 (0)
0xffff582d369c    28  b.ne #+0x2c (addr 0xffff582d36c8)
0xffff582d36a0    32  ldr x5, pc+80 (addr 0x0000ffff582d36f0)    ;; object: 0x22535291 WeakCell for 0x32b35c11 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d36a4    36  ldur x5, [x5, #7]
0xffff582d36a8    40  tbz w5, #0, #+0x20 (addr 0xffff582d36c8)
0xffff582d36ac    44  ldursw x4, [x5, #15]
0xffff582d36b0    48  tbnz w4, #23, #+0x18 (addr 0xffff582d36c8)
0xffff582d36b4    52  ldr x4, [jssp], #8
0xffff582d36b8    56  ldr x3, [jssp], #8
0xffff582d36bc    60  ldr x2, pc+60 (addr 0x0000ffff582d36f8)    ;; object: 0x2250d0c9 <String[3]: dev>
0xffff582d36c0    64  ldr x16, pc+64 (addr 0x0000ffff582d3700)    ;; code: HANDLER, StoreTransitionStub, minor: 194563
0xffff582d36c4    68  br x16
0xffff582d36c8    72  ldr x2, pc+64 (addr 0x0000ffff582d3708)    ;; object: 0x2250d0c9 <String[3]: dev>
0xffff582d36cc    76  ldr x4, [jssp], #8
0xffff582d36d0    80  ldr x3, [jssp], #8
0xffff582d36d4    84  ldr x16, pc+60 (addr 0x0000ffff582d3710)    ;; code: BUILTIN
0xffff582d36d8    88  br x16
0xffff582d36dc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d36e0    96  d63f03e0       constant
0xffff582d36e4   100  d503201f       constant
0xffff582d36e8   104  225352e9       constant
0xffff582d36ec   108  00000000       constant
0xffff582d36f0   112  22535291       constant
0xffff582d36f4   116  00000000       constant
0xffff582d36f8   120  2250d0c9       constant
0xffff582d36fc   124  00000000       constant
0xffff582d3700   128  582d3560       constant
0xffff582d3704   132  0000ffff       constant
0xffff582d3708   136  2250d0c9       constant
0xffff582d370c   140  00000000       constant
0xffff582d3710   144  58222420       constant
0xffff582d3714   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582d3690  embedded object  (0x225352e9 Cell for 0)
0xffff582d36a0  embedded object  (0x22535291 WeakCell for 0x32b35c11 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d36bc  embedded object  (0x2250d0c9 <String[3]: dev>)
0xffff582d36c0  code target (HANDLER)  (0xffff582d3560)
0xffff582d36c8  embedded object  (0x2250d0c9 <String[3]: dev>)
0xffff582d36d4  code target (BUILTIN)  (0xffff58222420)
0xffff582d36dc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d3780     0  tbz w0, #0, #+0x1c (addr 0xffff582d379c)
0xffff582d3784     4  ldur x16, [x0, #-1]
0xffff582d3788     8  ldr x17, [x26, #120]
0xffff582d378c    12  cmp x16, x17
0xffff582d3790    16  b.ne #+0x60 (addr 0xffff582d37f0)
0xffff582d3794    20  ldur d0, [x0, #7]
0xffff582d3798    24  b #+0x8 (addr 0xffff582d37a0)
0xffff582d379c    28  scvtf d0, x0, #32
0xffff582d37a0    32  stur d0, [x1, #31]
0xffff582d37a4    36  stur x5, [x1, #-1]
0xffff582d37a8    40  tbz w5, #0, #+0x34 (addr 0xffff582d37dc)
0xffff582d37ac    44  sub x2, x1, #0x1 (1)
0xffff582d37b0    48  and x5, x5, #0xfffffffffff00000
0xffff582d37b4    52  ldr x5, [x5, #8]
0xffff582d37b8    56  tbz w5, #1, #+0x24 (addr 0xffff582d37dc)
0xffff582d37bc    60  and x5, x1, #0xfffffffffff00000
0xffff582d37c0    64  ldr x5, [x5, #8]
0xffff582d37c4    68  tbz w5, #2, #+0x18 (addr 0xffff582d37dc)
0xffff582d37c8    72  sub csp, jssp, #0x8 (8)
0xffff582d37cc    76  str lr, [jssp, #-8]!
0xffff582d37d0    80  ldr x16, pc+24 (addr 0x0000ffff582d37e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d37d4    84  blr x16
0xffff582d37d8    88  ldr lr, [jssp], #8
0xffff582d37dc    92  ret
0xffff582d37e0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d37e4   100  d63f03e0       constant
0xffff582d37e8   104  58238080       constant
0xffff582d37ec   108  0000ffff       constant
0xffff582d37f0   112  movz x16, #0x0
0xffff582d37f4   116  sub csp, jssp, #0x10 (16)
0xffff582d37f8   120  stp fp, lr, [jssp, #-16]!
0xffff582d37fc   124  bl #+0x4 (addr 0xffff582d3800)
0xffff582d3800   128  movz x17, #0xa00000000
0xffff582d3804   132  sub csp, jssp, #0x10 (16)
0xffff582d3808   136  stp x17, cp, [jssp, #-16]!
0xffff582d380c   140  add fp, jssp, #0x10 (16)
0xffff582d3810   144  ldr x17, pc+24 (addr 0x0000ffff582d3828)    ;; lazy deoptimization bailout 0
0xffff582d3814   148  add x17, x17, x16
0xffff582d3818   152  br x17
0xffff582d381c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d3820   160  d63f03e0       constant
0xffff582d3824   164  d503201f       constant
0xffff582d3828   168  58006000       constant
0xffff582d382c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d37d0  code target (STUB)  (0xffff58238080)
0xffff582d37e0  constant pool (size 16)
0xffff582d3810  runtime entry
0xffff582d381c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d3780     0  tbz w0, #0, #+0x1c (addr 0xffff582d379c)
0xffff582d3784     4  ldur x16, [x0, #-1]
0xffff582d3788     8  ldr x17, [x26, #120]
0xffff582d378c    12  cmp x16, x17
0xffff582d3790    16  b.ne #+0x60 (addr 0xffff582d37f0)
0xffff582d3794    20  ldur d0, [x0, #7]
0xffff582d3798    24  b #+0x8 (addr 0xffff582d37a0)
0xffff582d379c    28  scvtf d0, x0, #32
0xffff582d37a0    32  stur d0, [x1, #31]
0xffff582d37a4    36  stur x5, [x1, #-1]
0xffff582d37a8    40  tbz w5, #0, #+0x34 (addr 0xffff582d37dc)
0xffff582d37ac    44  sub x2, x1, #0x1 (1)
0xffff582d37b0    48  and x5, x5, #0xfffffffffff00000
0xffff582d37b4    52  ldr x5, [x5, #8]
0xffff582d37b8    56  tbz w5, #1, #+0x24 (addr 0xffff582d37dc)
0xffff582d37bc    60  and x5, x1, #0xfffffffffff00000
0xffff582d37c0    64  ldr x5, [x5, #8]
0xffff582d37c4    68  tbz w5, #2, #+0x18 (addr 0xffff582d37dc)
0xffff582d37c8    72  sub csp, jssp, #0x8 (8)
0xffff582d37cc    76  str lr, [jssp, #-8]!
0xffff582d37d0    80  ldr x16, pc+24 (addr 0x0000ffff582d37e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d37d4    84  blr x16
0xffff582d37d8    88  ldr lr, [jssp], #8
0xffff582d37dc    92  ret
0xffff582d37e0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d37e4   100  d63f03e0       constant
0xffff582d37e8   104  58238080       constant
0xffff582d37ec   108  0000ffff       constant
0xffff582d37f0   112  movz x16, #0x0
0xffff582d37f4   116  sub csp, jssp, #0x10 (16)
0xffff582d37f8   120  stp fp, lr, [jssp, #-16]!
0xffff582d37fc   124  bl #+0x4 (addr 0xffff582d3800)
0xffff582d3800   128  movz x17, #0xa00000000
0xffff582d3804   132  sub csp, jssp, #0x10 (16)
0xffff582d3808   136  stp x17, cp, [jssp, #-16]!
0xffff582d380c   140  add fp, jssp, #0x10 (16)
0xffff582d3810   144  ldr x17, pc+24 (addr 0x0000ffff582d3828)    ;; lazy deoptimization bailout 0
0xffff582d3814   148  add x17, x17, x16
0xffff582d3818   152  br x17
0xffff582d381c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d3820   160  d63f03e0       constant
0xffff582d3824   164  d503201f       constant
0xffff582d3828   168  58006000       constant
0xffff582d382c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d37d0  code target (STUB)  (0xffff58238080)
0xffff582d37e0  constant pool (size 16)
0xffff582d3810  runtime entry
0xffff582d381c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = mode
compiler = unknown
Instructions (size = 152)
0xffff582d38a0     0  sub csp, jssp, #0x8 (8)
0xffff582d38a4     4  str x3, [jssp, #-8]!
0xffff582d38a8     8  sub csp, jssp, #0x8 (8)
0xffff582d38ac    12  str x4, [jssp, #-8]!
0xffff582d38b0    16  ldr x3, pc+88 (addr 0x0000ffff582d3908)    ;; object: 0x225352e9 Cell for 0
0xffff582d38b4    20  ldur x3, [x3, #7]
0xffff582d38b8    24  cmp x3, #0x0 (0)
0xffff582d38bc    28  b.ne #+0x2c (addr 0xffff582d38e8)
0xffff582d38c0    32  ldr x5, pc+80 (addr 0x0000ffff582d3910)    ;; object: 0x225353f1 WeakCell for 0x32b35c69 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d38c4    36  ldur x5, [x5, #7]
0xffff582d38c8    40  tbz w5, #0, #+0x20 (addr 0xffff582d38e8)
0xffff582d38cc    44  ldursw x4, [x5, #15]
0xffff582d38d0    48  tbnz w4, #23, #+0x18 (addr 0xffff582d38e8)
0xffff582d38d4    52  ldr x4, [jssp], #8
0xffff582d38d8    56  ldr x3, [jssp], #8
0xffff582d38dc    60  ldr x2, pc+60 (addr 0x0000ffff582d3918)    ;; object: 0x2250d0e9 <String[4]: mode>
0xffff582d38e0    64  ldr x16, pc+64 (addr 0x0000ffff582d3920)    ;; code: HANDLER, StoreTransitionStub, minor: 194564
0xffff582d38e4    68  br x16
0xffff582d38e8    72  ldr x2, pc+64 (addr 0x0000ffff582d3928)    ;; object: 0x2250d0e9 <String[4]: mode>
0xffff582d38ec    76  ldr x4, [jssp], #8
0xffff582d38f0    80  ldr x3, [jssp], #8
0xffff582d38f4    84  ldr x16, pc+60 (addr 0x0000ffff582d3930)    ;; code: BUILTIN
0xffff582d38f8    88  br x16
0xffff582d38fc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d3900    96  d63f03e0       constant
0xffff582d3904   100  d503201f       constant
0xffff582d3908   104  225352e9       constant
0xffff582d390c   108  00000000       constant
0xffff582d3910   112  225353f1       constant
0xffff582d3914   116  00000000       constant
0xffff582d3918   120  2250d0e9       constant
0xffff582d391c   124  00000000       constant
0xffff582d3920   128  582d3780       constant
0xffff582d3924   132  0000ffff       constant
0xffff582d3928   136  2250d0e9       constant
0xffff582d392c   140  00000000       constant
0xffff582d3930   144  58222420       constant
0xffff582d3934   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582d38b0  embedded object  (0x225352e9 Cell for 0)
0xffff582d38c0  embedded object  (0x225353f1 WeakCell for 0x32b35c69 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d38dc  embedded object  (0x2250d0e9 <String[4]: mode>)
0xffff582d38e0  code target (HANDLER)  (0xffff582d3780)
0xffff582d38e8  embedded object  (0x2250d0e9 <String[4]: mode>)
0xffff582d38f4  code target (BUILTIN)  (0xffff58222420)
0xffff582d38fc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d39a0     0  tbz w0, #0, #+0x1c (addr 0xffff582d39bc)
0xffff582d39a4     4  ldur x16, [x0, #-1]
0xffff582d39a8     8  ldr x17, [x26, #120]
0xffff582d39ac    12  cmp x16, x17
0xffff582d39b0    16  b.ne #+0x60 (addr 0xffff582d3a10)
0xffff582d39b4    20  ldur d0, [x0, #7]
0xffff582d39b8    24  b #+0x8 (addr 0xffff582d39c0)
0xffff582d39bc    28  scvtf d0, x0, #32
0xffff582d39c0    32  stur d0, [x1, #39]
0xffff582d39c4    36  stur x5, [x1, #-1]
0xffff582d39c8    40  tbz w5, #0, #+0x34 (addr 0xffff582d39fc)
0xffff582d39cc    44  sub x2, x1, #0x1 (1)
0xffff582d39d0    48  and x5, x5, #0xfffffffffff00000
0xffff582d39d4    52  ldr x5, [x5, #8]
0xffff582d39d8    56  tbz w5, #1, #+0x24 (addr 0xffff582d39fc)
0xffff582d39dc    60  and x5, x1, #0xfffffffffff00000
0xffff582d39e0    64  ldr x5, [x5, #8]
0xffff582d39e4    68  tbz w5, #2, #+0x18 (addr 0xffff582d39fc)
0xffff582d39e8    72  sub csp, jssp, #0x8 (8)
0xffff582d39ec    76  str lr, [jssp, #-8]!
0xffff582d39f0    80  ldr x16, pc+24 (addr 0x0000ffff582d3a08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d39f4    84  blr x16
0xffff582d39f8    88  ldr lr, [jssp], #8
0xffff582d39fc    92  ret
0xffff582d3a00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d3a04   100  d63f03e0       constant
0xffff582d3a08   104  58238080       constant
0xffff582d3a0c   108  0000ffff       constant
0xffff582d3a10   112  movz x16, #0x0
0xffff582d3a14   116  sub csp, jssp, #0x10 (16)
0xffff582d3a18   120  stp fp, lr, [jssp, #-16]!
0xffff582d3a1c   124  bl #+0x4 (addr 0xffff582d3a20)
0xffff582d3a20   128  movz x17, #0xa00000000
0xffff582d3a24   132  sub csp, jssp, #0x10 (16)
0xffff582d3a28   136  stp x17, cp, [jssp, #-16]!
0xffff582d3a2c   140  add fp, jssp, #0x10 (16)
0xffff582d3a30   144  ldr x17, pc+24 (addr 0x0000ffff582d3a48)    ;; lazy deoptimization bailout 0
0xffff582d3a34   148  add x17, x17, x16
0xffff582d3a38   152  br x17
0xffff582d3a3c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d3a40   160  d63f03e0       constant
0xffff582d3a44   164  d503201f       constant
0xffff582d3a48   168  58006000       constant
0xffff582d3a4c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d39f0  code target (STUB)  (0xffff58238080)
0xffff582d3a00  constant pool (size 16)
0xffff582d3a30  runtime entry
0xffff582d3a3c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d39a0     0  tbz w0, #0, #+0x1c (addr 0xffff582d39bc)
0xffff582d39a4     4  ldur x16, [x0, #-1]
0xffff582d39a8     8  ldr x17, [x26, #120]
0xffff582d39ac    12  cmp x16, x17
0xffff582d39b0    16  b.ne #+0x60 (addr 0xffff582d3a10)
0xffff582d39b4    20  ldur d0, [x0, #7]
0xffff582d39b8    24  b #+0x8 (addr 0xffff582d39c0)
0xffff582d39bc    28  scvtf d0, x0, #32
0xffff582d39c0    32  stur d0, [x1, #39]
0xffff582d39c4    36  stur x5, [x1, #-1]
0xffff582d39c8    40  tbz w5, #0, #+0x34 (addr 0xffff582d39fc)
0xffff582d39cc    44  sub x2, x1, #0x1 (1)
0xffff582d39d0    48  and x5, x5, #0xfffffffffff00000
0xffff582d39d4    52  ldr x5, [x5, #8]
0xffff582d39d8    56  tbz w5, #1, #+0x24 (addr 0xffff582d39fc)
0xffff582d39dc    60  and x5, x1, #0xfffffffffff00000
0xffff582d39e0    64  ldr x5, [x5, #8]
0xffff582d39e4    68  tbz w5, #2, #+0x18 (addr 0xffff582d39fc)
0xffff582d39e8    72  sub csp, jssp, #0x8 (8)
0xffff582d39ec    76  str lr, [jssp, #-8]!
0xffff582d39f0    80  ldr x16, pc+24 (addr 0x0000ffff582d3a08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d39f4    84  blr x16
0xffff582d39f8    88  ldr lr, [jssp], #8
0xffff582d39fc    92  ret
0xffff582d3a00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d3a04   100  d63f03e0       constant
0xffff582d3a08   104  58238080       constant
0xffff582d3a0c   108  0000ffff       constant
0xffff582d3a10   112  movz x16, #0x0
0xffff582d3a14   116  sub csp, jssp, #0x10 (16)
0xffff582d3a18   120  stp fp, lr, [jssp, #-16]!
0xffff582d3a1c   124  bl #+0x4 (addr 0xffff582d3a20)
0xffff582d3a20   128  movz x17, #0xa00000000
0xffff582d3a24   132  sub csp, jssp, #0x10 (16)
0xffff582d3a28   136  stp x17, cp, [jssp, #-16]!
0xffff582d3a2c   140  add fp, jssp, #0x10 (16)
0xffff582d3a30   144  ldr x17, pc+24 (addr 0x0000ffff582d3a48)    ;; lazy deoptimization bailout 0
0xffff582d3a34   148  add x17, x17, x16
0xffff582d3a38   152  br x17
0xffff582d3a3c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d3a40   160  d63f03e0       constant
0xffff582d3a44   164  d503201f       constant
0xffff582d3a48   168  58006000       constant
0xffff582d3a4c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d39f0  code target (STUB)  (0xffff58238080)
0xffff582d3a00  constant pool (size 16)
0xffff582d3a30  runtime entry
0xffff582d3a3c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = nlink
compiler = unknown
Instructions (size = 152)
0xffff582d3ac0     0  sub csp, jssp, #0x8 (8)
0xffff582d3ac4     4  str x3, [jssp, #-8]!
0xffff582d3ac8     8  sub csp, jssp, #0x8 (8)
0xffff582d3acc    12  str x4, [jssp, #-8]!
0xffff582d3ad0    16  ldr x3, pc+88 (addr 0x0000ffff582d3b28)    ;; object: 0x225352e9 Cell for 0
0xffff582d3ad4    20  ldur x3, [x3, #7]
0xffff582d3ad8    24  cmp x3, #0x0 (0)
0xffff582d3adc    28  b.ne #+0x2c (addr 0xffff582d3b08)
0xffff582d3ae0    32  ldr x5, pc+80 (addr 0x0000ffff582d3b30)    ;; object: 0x225354e9 WeakCell for 0x32b35cc1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d3ae4    36  ldur x5, [x5, #7]
0xffff582d3ae8    40  tbz w5, #0, #+0x20 (addr 0xffff582d3b08)
0xffff582d3aec    44  ldursw x4, [x5, #15]
0xffff582d3af0    48  tbnz w4, #23, #+0x18 (addr 0xffff582d3b08)
0xffff582d3af4    52  ldr x4, [jssp], #8
0xffff582d3af8    56  ldr x3, [jssp], #8
0xffff582d3afc    60  ldr x2, pc+60 (addr 0x0000ffff582d3b38)    ;; object: 0x2250d109 <String[5]: nlink>
0xffff582d3b00    64  ldr x16, pc+64 (addr 0x0000ffff582d3b40)    ;; code: HANDLER, StoreTransitionStub, minor: 194565
0xffff582d3b04    68  br x16
0xffff582d3b08    72  ldr x2, pc+64 (addr 0x0000ffff582d3b48)    ;; object: 0x2250d109 <String[5]: nlink>
0xffff582d3b0c    76  ldr x4, [jssp], #8
0xffff582d3b10    80  ldr x3, [jssp], #8
0xffff582d3b14    84  ldr x16, pc+60 (addr 0x0000ffff582d3b50)    ;; code: BUILTIN
0xffff582d3b18    88  br x16
0xffff582d3b1c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d3b20    96  d63f03e0       constant
0xffff582d3b24   100  d503201f       constant
0xffff582d3b28   104  225352e9       constant
0xffff582d3b2c   108  00000000       constant
0xffff582d3b30   112  225354e9       constant
0xffff582d3b34   116  00000000       constant
0xffff582d3b38   120  2250d109       constant
0xffff582d3b3c   124  00000000       constant
0xffff582d3b40   128  582d39a0       constant
0xffff582d3b44   132  0000ffff       constant
0xffff582d3b48   136  2250d109       constant
0xffff582d3b4c   140  00000000       constant
0xffff582d3b50   144  58222420       constant
0xffff582d3b54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582d3ad0  embedded object  (0x225352e9 Cell for 0)
0xffff582d3ae0  embedded object  (0x225354e9 WeakCell for 0x32b35cc1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d3afc  embedded object  (0x2250d109 <String[5]: nlink>)
0xffff582d3b00  code target (HANDLER)  (0xffff582d39a0)
0xffff582d3b08  embedded object  (0x2250d109 <String[5]: nlink>)
0xffff582d3b14  code target (BUILTIN)  (0xffff58222420)
0xffff582d3b1c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d3bc0     0  tbz w0, #0, #+0x1c (addr 0xffff582d3bdc)
0xffff582d3bc4     4  ldur x16, [x0, #-1]
0xffff582d3bc8     8  ldr x17, [x26, #120]
0xffff582d3bcc    12  cmp x16, x17
0xffff582d3bd0    16  b.ne #+0x60 (addr 0xffff582d3c30)
0xffff582d3bd4    20  ldur d0, [x0, #7]
0xffff582d3bd8    24  b #+0x8 (addr 0xffff582d3be0)
0xffff582d3bdc    28  scvtf d0, x0, #32
0xffff582d3be0    32  stur d0, [x1, #47]
0xffff582d3be4    36  stur x5, [x1, #-1]
0xffff582d3be8    40  tbz w5, #0, #+0x34 (addr 0xffff582d3c1c)
0xffff582d3bec    44  sub x2, x1, #0x1 (1)
0xffff582d3bf0    48  and x5, x5, #0xfffffffffff00000
0xffff582d3bf4    52  ldr x5, [x5, #8]
0xffff582d3bf8    56  tbz w5, #1, #+0x24 (addr 0xffff582d3c1c)
0xffff582d3bfc    60  and x5, x1, #0xfffffffffff00000
0xffff582d3c00    64  ldr x5, [x5, #8]
0xffff582d3c04    68  tbz w5, #2, #+0x18 (addr 0xffff582d3c1c)
0xffff582d3c08    72  sub csp, jssp, #0x8 (8)
0xffff582d3c0c    76  str lr, [jssp, #-8]!
0xffff582d3c10    80  ldr x16, pc+24 (addr 0x0000ffff582d3c28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d3c14    84  blr x16
0xffff582d3c18    88  ldr lr, [jssp], #8
0xffff582d3c1c    92  ret
0xffff582d3c20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d3c24   100  d63f03e0       constant
0xffff582d3c28   104  58238080       constant
0xffff582d3c2c   108  0000ffff       constant
0xffff582d3c30   112  movz x16, #0x0
0xffff582d3c34   116  sub csp, jssp, #0x10 (16)
0xffff582d3c38   120  stp fp, lr, [jssp, #-16]!
0xffff582d3c3c   124  bl #+0x4 (addr 0xffff582d3c40)
0xffff582d3c40   128  movz x17, #0xa00000000
0xffff582d3c44   132  sub csp, jssp, #0x10 (16)
0xffff582d3c48   136  stp x17, cp, [jssp, #-16]!
0xffff582d3c4c   140  add fp, jssp, #0x10 (16)
0xffff582d3c50   144  ldr x17, pc+24 (addr 0x0000ffff582d3c68)    ;; lazy deoptimization bailout 0
0xffff582d3c54   148  add x17, x17, x16
0xffff582d3c58   152  br x17
0xffff582d3c5c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d3c60   160  d63f03e0       constant
0xffff582d3c64   164  d503201f       constant
0xffff582d3c68   168  58006000       constant
0xffff582d3c6c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d3c10  code target (STUB)  (0xffff58238080)
0xffff582d3c20  constant pool (size 16)
0xffff582d3c50  runtime entry
0xffff582d3c5c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d3bc0     0  tbz w0, #0, #+0x1c (addr 0xffff582d3bdc)
0xffff582d3bc4     4  ldur x16, [x0, #-1]
0xffff582d3bc8     8  ldr x17, [x26, #120]
0xffff582d3bcc    12  cmp x16, x17
0xffff582d3bd0    16  b.ne #+0x60 (addr 0xffff582d3c30)
0xffff582d3bd4    20  ldur d0, [x0, #7]
0xffff582d3bd8    24  b #+0x8 (addr 0xffff582d3be0)
0xffff582d3bdc    28  scvtf d0, x0, #32
0xffff582d3be0    32  stur d0, [x1, #47]
0xffff582d3be4    36  stur x5, [x1, #-1]
0xffff582d3be8    40  tbz w5, #0, #+0x34 (addr 0xffff582d3c1c)
0xffff582d3bec    44  sub x2, x1, #0x1 (1)
0xffff582d3bf0    48  and x5, x5, #0xfffffffffff00000
0xffff582d3bf4    52  ldr x5, [x5, #8]
0xffff582d3bf8    56  tbz w5, #1, #+0x24 (addr 0xffff582d3c1c)
0xffff582d3bfc    60  and x5, x1, #0xfffffffffff00000
0xffff582d3c00    64  ldr x5, [x5, #8]
0xffff582d3c04    68  tbz w5, #2, #+0x18 (addr 0xffff582d3c1c)
0xffff582d3c08    72  sub csp, jssp, #0x8 (8)
0xffff582d3c0c    76  str lr, [jssp, #-8]!
0xffff582d3c10    80  ldr x16, pc+24 (addr 0x0000ffff582d3c28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d3c14    84  blr x16
0xffff582d3c18    88  ldr lr, [jssp], #8
0xffff582d3c1c    92  ret
0xffff582d3c20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d3c24   100  d63f03e0       constant
0xffff582d3c28   104  58238080       constant
0xffff582d3c2c   108  0000ffff       constant
0xffff582d3c30   112  movz x16, #0x0
0xffff582d3c34   116  sub csp, jssp, #0x10 (16)
0xffff582d3c38   120  stp fp, lr, [jssp, #-16]!
0xffff582d3c3c   124  bl #+0x4 (addr 0xffff582d3c40)
0xffff582d3c40   128  movz x17, #0xa00000000
0xffff582d3c44   132  sub csp, jssp, #0x10 (16)
0xffff582d3c48   136  stp x17, cp, [jssp, #-16]!
0xffff582d3c4c   140  add fp, jssp, #0x10 (16)
0xffff582d3c50   144  ldr x17, pc+24 (addr 0x0000ffff582d3c68)    ;; lazy deoptimization bailout 0
0xffff582d3c54   148  add x17, x17, x16
0xffff582d3c58   152  br x17
0xffff582d3c5c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d3c60   160  d63f03e0       constant
0xffff582d3c64   164  d503201f       constant
0xffff582d3c68   168  58006000       constant
0xffff582d3c6c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d3c10  code target (STUB)  (0xffff58238080)
0xffff582d3c20  constant pool (size 16)
0xffff582d3c50  runtime entry
0xffff582d3c5c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = uid
compiler = unknown
Instructions (size = 152)
0xffff582d3ce0     0  sub csp, jssp, #0x8 (8)
0xffff582d3ce4     4  str x3, [jssp, #-8]!
0xffff582d3ce8     8  sub csp, jssp, #0x8 (8)
0xffff582d3cec    12  str x4, [jssp, #-8]!
0xffff582d3cf0    16  ldr x3, pc+88 (addr 0x0000ffff582d3d48)    ;; object: 0x225352e9 Cell for 0
0xffff582d3cf4    20  ldur x3, [x3, #7]
0xffff582d3cf8    24  cmp x3, #0x0 (0)
0xffff582d3cfc    28  b.ne #+0x2c (addr 0xffff582d3d28)
0xffff582d3d00    32  ldr x5, pc+80 (addr 0x0000ffff582d3d50)    ;; object: 0x225355e1 WeakCell for 0x32b35d19 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d3d04    36  ldur x5, [x5, #7]
0xffff582d3d08    40  tbz w5, #0, #+0x20 (addr 0xffff582d3d28)
0xffff582d3d0c    44  ldursw x4, [x5, #15]
0xffff582d3d10    48  tbnz w4, #23, #+0x18 (addr 0xffff582d3d28)
0xffff582d3d14    52  ldr x4, [jssp], #8
0xffff582d3d18    56  ldr x3, [jssp], #8
0xffff582d3d1c    60  ldr x2, pc+60 (addr 0x0000ffff582d3d58)    ;; object: 0x39cb33a9 <String[3]: uid>
0xffff582d3d20    64  ldr x16, pc+64 (addr 0x0000ffff582d3d60)    ;; code: HANDLER, StoreTransitionStub, minor: 194566
0xffff582d3d24    68  br x16
0xffff582d3d28    72  ldr x2, pc+64 (addr 0x0000ffff582d3d68)    ;; object: 0x39cb33a9 <String[3]: uid>
0xffff582d3d2c    76  ldr x4, [jssp], #8
0xffff582d3d30    80  ldr x3, [jssp], #8
0xffff582d3d34    84  ldr x16, pc+60 (addr 0x0000ffff582d3d70)    ;; code: BUILTIN
0xffff582d3d38    88  br x16
0xffff582d3d3c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d3d40    96  d63f03e0       constant
0xffff582d3d44   100  d503201f       constant
0xffff582d3d48   104  225352e9       constant
0xffff582d3d4c   108  00000000       constant
0xffff582d3d50   112  225355e1       constant
0xffff582d3d54   116  00000000       constant
0xffff582d3d58   120  39cb33a9       constant
0xffff582d3d5c   124  00000000       constant
0xffff582d3d60   128  582d3bc0       constant
0xffff582d3d64   132  0000ffff       constant
0xffff582d3d68   136  39cb33a9       constant
0xffff582d3d6c   140  00000000       constant
0xffff582d3d70   144  58222420       constant
0xffff582d3d74   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582d3cf0  embedded object  (0x225352e9 Cell for 0)
0xffff582d3d00  embedded object  (0x225355e1 WeakCell for 0x32b35d19 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d3d1c  embedded object  (0x39cb33a9 <String[3]: uid>)
0xffff582d3d20  code target (HANDLER)  (0xffff582d3bc0)
0xffff582d3d28  embedded object  (0x39cb33a9 <String[3]: uid>)
0xffff582d3d34  code target (BUILTIN)  (0xffff58222420)
0xffff582d3d3c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d3de0     0  tbz w0, #0, #+0x1c (addr 0xffff582d3dfc)
0xffff582d3de4     4  ldur x16, [x0, #-1]
0xffff582d3de8     8  ldr x17, [x26, #120]
0xffff582d3dec    12  cmp x16, x17
0xffff582d3df0    16  b.ne #+0x60 (addr 0xffff582d3e50)
0xffff582d3df4    20  ldur d0, [x0, #7]
0xffff582d3df8    24  b #+0x8 (addr 0xffff582d3e00)
0xffff582d3dfc    28  scvtf d0, x0, #32
0xffff582d3e00    32  stur d0, [x1, #55]
0xffff582d3e04    36  stur x5, [x1, #-1]
0xffff582d3e08    40  tbz w5, #0, #+0x34 (addr 0xffff582d3e3c)
0xffff582d3e0c    44  sub x2, x1, #0x1 (1)
0xffff582d3e10    48  and x5, x5, #0xfffffffffff00000
0xffff582d3e14    52  ldr x5, [x5, #8]
0xffff582d3e18    56  tbz w5, #1, #+0x24 (addr 0xffff582d3e3c)
0xffff582d3e1c    60  and x5, x1, #0xfffffffffff00000
0xffff582d3e20    64  ldr x5, [x5, #8]
0xffff582d3e24    68  tbz w5, #2, #+0x18 (addr 0xffff582d3e3c)
0xffff582d3e28    72  sub csp, jssp, #0x8 (8)
0xffff582d3e2c    76  str lr, [jssp, #-8]!
0xffff582d3e30    80  ldr x16, pc+24 (addr 0x0000ffff582d3e48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d3e34    84  blr x16
0xffff582d3e38    88  ldr lr, [jssp], #8
0xffff582d3e3c    92  ret
0xffff582d3e40    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d3e44   100  d63f03e0       constant
0xffff582d3e48   104  58238080       constant
0xffff582d3e4c   108  0000ffff       constant
0xffff582d3e50   112  movz x16, #0x0
0xffff582d3e54   116  sub csp, jssp, #0x10 (16)
0xffff582d3e58   120  stp fp, lr, [jssp, #-16]!
0xffff582d3e5c   124  bl #+0x4 (addr 0xffff582d3e60)
0xffff582d3e60   128  movz x17, #0xa00000000
0xffff582d3e64   132  sub csp, jssp, #0x10 (16)
0xffff582d3e68   136  stp x17, cp, [jssp, #-16]!
0xffff582d3e6c   140  add fp, jssp, #0x10 (16)
0xffff582d3e70   144  ldr x17, pc+24 (addr 0x0000ffff582d3e88)    ;; lazy deoptimization bailout 0
0xffff582d3e74   148  add x17, x17, x16
0xffff582d3e78   152  br x17
0xffff582d3e7c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d3e80   160  d63f03e0       constant
0xffff582d3e84   164  d503201f       constant
0xffff582d3e88   168  58006000       constant
0xffff582d3e8c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d3e30  code target (STUB)  (0xffff58238080)
0xffff582d3e40  constant pool (size 16)
0xffff582d3e70  runtime entry
0xffff582d3e7c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d3de0     0  tbz w0, #0, #+0x1c (addr 0xffff582d3dfc)
0xffff582d3de4     4  ldur x16, [x0, #-1]
0xffff582d3de8     8  ldr x17, [x26, #120]
0xffff582d3dec    12  cmp x16, x17
0xffff582d3df0    16  b.ne #+0x60 (addr 0xffff582d3e50)
0xffff582d3df4    20  ldur d0, [x0, #7]
0xffff582d3df8    24  b #+0x8 (addr 0xffff582d3e00)
0xffff582d3dfc    28  scvtf d0, x0, #32
0xffff582d3e00    32  stur d0, [x1, #55]
0xffff582d3e04    36  stur x5, [x1, #-1]
0xffff582d3e08    40  tbz w5, #0, #+0x34 (addr 0xffff582d3e3c)
0xffff582d3e0c    44  sub x2, x1, #0x1 (1)
0xffff582d3e10    48  and x5, x5, #0xfffffffffff00000
0xffff582d3e14    52  ldr x5, [x5, #8]
0xffff582d3e18    56  tbz w5, #1, #+0x24 (addr 0xffff582d3e3c)
0xffff582d3e1c    60  and x5, x1, #0xfffffffffff00000
0xffff582d3e20    64  ldr x5, [x5, #8]
0xffff582d3e24    68  tbz w5, #2, #+0x18 (addr 0xffff582d3e3c)
0xffff582d3e28    72  sub csp, jssp, #0x8 (8)
0xffff582d3e2c    76  str lr, [jssp, #-8]!
0xffff582d3e30    80  ldr x16, pc+24 (addr 0x0000ffff582d3e48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d3e34    84  blr x16
0xffff582d3e38    88  ldr lr, [jssp], #8
0xffff582d3e3c    92  ret
0xffff582d3e40    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d3e44   100  d63f03e0       constant
0xffff582d3e48   104  58238080       constant
0xffff582d3e4c   108  0000ffff       constant
0xffff582d3e50   112  movz x16, #0x0
0xffff582d3e54   116  sub csp, jssp, #0x10 (16)
0xffff582d3e58   120  stp fp, lr, [jssp, #-16]!
0xffff582d3e5c   124  bl #+0x4 (addr 0xffff582d3e60)
0xffff582d3e60   128  movz x17, #0xa00000000
0xffff582d3e64   132  sub csp, jssp, #0x10 (16)
0xffff582d3e68   136  stp x17, cp, [jssp, #-16]!
0xffff582d3e6c   140  add fp, jssp, #0x10 (16)
0xffff582d3e70   144  ldr x17, pc+24 (addr 0x0000ffff582d3e88)    ;; lazy deoptimization bailout 0
0xffff582d3e74   148  add x17, x17, x16
0xffff582d3e78   152  br x17
0xffff582d3e7c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d3e80   160  d63f03e0       constant
0xffff582d3e84   164  d503201f       constant
0xffff582d3e88   168  58006000       constant
0xffff582d3e8c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d3e30  code target (STUB)  (0xffff58238080)
0xffff582d3e40  constant pool (size 16)
0xffff582d3e70  runtime entry
0xffff582d3e7c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = gid
compiler = unknown
Instructions (size = 152)
0xffff582d3f00     0  sub csp, jssp, #0x8 (8)
0xffff582d3f04     4  str x3, [jssp, #-8]!
0xffff582d3f08     8  sub csp, jssp, #0x8 (8)
0xffff582d3f0c    12  str x4, [jssp, #-8]!
0xffff582d3f10    16  ldr x3, pc+88 (addr 0x0000ffff582d3f68)    ;; object: 0x225352e9 Cell for 0
0xffff582d3f14    20  ldur x3, [x3, #7]
0xffff582d3f18    24  cmp x3, #0x0 (0)
0xffff582d3f1c    28  b.ne #+0x2c (addr 0xffff582d3f48)
0xffff582d3f20    32  ldr x5, pc+80 (addr 0x0000ffff582d3f70)    ;; object: 0x225356d9 WeakCell for 0x32b35d71 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d3f24    36  ldur x5, [x5, #7]
0xffff582d3f28    40  tbz w5, #0, #+0x20 (addr 0xffff582d3f48)
0xffff582d3f2c    44  ldursw x4, [x5, #15]
0xffff582d3f30    48  tbnz w4, #23, #+0x18 (addr 0xffff582d3f48)
0xffff582d3f34    52  ldr x4, [jssp], #8
0xffff582d3f38    56  ldr x3, [jssp], #8
0xffff582d3f3c    60  ldr x2, pc+60 (addr 0x0000ffff582d3f78)    ;; object: 0x39cb2771 <String[3]: gid>
0xffff582d3f40    64  ldr x16, pc+64 (addr 0x0000ffff582d3f80)    ;; code: HANDLER, StoreTransitionStub, minor: 194567
0xffff582d3f44    68  br x16
0xffff582d3f48    72  ldr x2, pc+64 (addr 0x0000ffff582d3f88)    ;; object: 0x39cb2771 <String[3]: gid>
0xffff582d3f4c    76  ldr x4, [jssp], #8
0xffff582d3f50    80  ldr x3, [jssp], #8
0xffff582d3f54    84  ldr x16, pc+60 (addr 0x0000ffff582d3f90)    ;; code: BUILTIN
0xffff582d3f58    88  br x16
0xffff582d3f5c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d3f60    96  d63f03e0       constant
0xffff582d3f64   100  d503201f       constant
0xffff582d3f68   104  225352e9       constant
0xffff582d3f6c   108  00000000       constant
0xffff582d3f70   112  225356d9       constant
0xffff582d3f74   116  00000000       constant
0xffff582d3f78   120  39cb2771       constant
0xffff582d3f7c   124  00000000       constant
0xffff582d3f80   128  582d3de0       constant
0xffff582d3f84   132  0000ffff       constant
0xffff582d3f88   136  39cb2771       constant
0xffff582d3f8c   140  00000000       constant
0xffff582d3f90   144  58222420       constant
0xffff582d3f94   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582d3f10  embedded object  (0x225352e9 Cell for 0)
0xffff582d3f20  embedded object  (0x225356d9 WeakCell for 0x32b35d71 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d3f3c  embedded object  (0x39cb2771 <String[3]: gid>)
0xffff582d3f40  code target (HANDLER)  (0xffff582d3de0)
0xffff582d3f48  embedded object  (0x39cb2771 <String[3]: gid>)
0xffff582d3f54  code target (BUILTIN)  (0xffff58222420)
0xffff582d3f5c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d4000     0  tbz w0, #0, #+0x1c (addr 0xffff582d401c)
0xffff582d4004     4  ldur x16, [x0, #-1]
0xffff582d4008     8  ldr x17, [x26, #120]
0xffff582d400c    12  cmp x16, x17
0xffff582d4010    16  b.ne #+0x60 (addr 0xffff582d4070)
0xffff582d4014    20  ldur d0, [x0, #7]
0xffff582d4018    24  b #+0x8 (addr 0xffff582d4020)
0xffff582d401c    28  scvtf d0, x0, #32
0xffff582d4020    32  stur d0, [x1, #63]
0xffff582d4024    36  stur x5, [x1, #-1]
0xffff582d4028    40  tbz w5, #0, #+0x34 (addr 0xffff582d405c)
0xffff582d402c    44  sub x2, x1, #0x1 (1)
0xffff582d4030    48  and x5, x5, #0xfffffffffff00000
0xffff582d4034    52  ldr x5, [x5, #8]
0xffff582d4038    56  tbz w5, #1, #+0x24 (addr 0xffff582d405c)
0xffff582d403c    60  and x5, x1, #0xfffffffffff00000
0xffff582d4040    64  ldr x5, [x5, #8]
0xffff582d4044    68  tbz w5, #2, #+0x18 (addr 0xffff582d405c)
0xffff582d4048    72  sub csp, jssp, #0x8 (8)
0xffff582d404c    76  str lr, [jssp, #-8]!
0xffff582d4050    80  ldr x16, pc+24 (addr 0x0000ffff582d4068)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4054    84  blr x16
0xffff582d4058    88  ldr lr, [jssp], #8
0xffff582d405c    92  ret
0xffff582d4060    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d4064   100  d63f03e0       constant
0xffff582d4068   104  58238080       constant
0xffff582d406c   108  0000ffff       constant
0xffff582d4070   112  movz x16, #0x0
0xffff582d4074   116  sub csp, jssp, #0x10 (16)
0xffff582d4078   120  stp fp, lr, [jssp, #-16]!
0xffff582d407c   124  bl #+0x4 (addr 0xffff582d4080)
0xffff582d4080   128  movz x17, #0xa00000000
0xffff582d4084   132  sub csp, jssp, #0x10 (16)
0xffff582d4088   136  stp x17, cp, [jssp, #-16]!
0xffff582d408c   140  add fp, jssp, #0x10 (16)
0xffff582d4090   144  ldr x17, pc+24 (addr 0x0000ffff582d40a8)    ;; lazy deoptimization bailout 0
0xffff582d4094   148  add x17, x17, x16
0xffff582d4098   152  br x17
0xffff582d409c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d40a0   160  d63f03e0       constant
0xffff582d40a4   164  d503201f       constant
0xffff582d40a8   168  58006000       constant
0xffff582d40ac   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d4050  code target (STUB)  (0xffff58238080)
0xffff582d4060  constant pool (size 16)
0xffff582d4090  runtime entry
0xffff582d409c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d4000     0  tbz w0, #0, #+0x1c (addr 0xffff582d401c)
0xffff582d4004     4  ldur x16, [x0, #-1]
0xffff582d4008     8  ldr x17, [x26, #120]
0xffff582d400c    12  cmp x16, x17
0xffff582d4010    16  b.ne #+0x60 (addr 0xffff582d4070)
0xffff582d4014    20  ldur d0, [x0, #7]
0xffff582d4018    24  b #+0x8 (addr 0xffff582d4020)
0xffff582d401c    28  scvtf d0, x0, #32
0xffff582d4020    32  stur d0, [x1, #63]
0xffff582d4024    36  stur x5, [x1, #-1]
0xffff582d4028    40  tbz w5, #0, #+0x34 (addr 0xffff582d405c)
0xffff582d402c    44  sub x2, x1, #0x1 (1)
0xffff582d4030    48  and x5, x5, #0xfffffffffff00000
0xffff582d4034    52  ldr x5, [x5, #8]
0xffff582d4038    56  tbz w5, #1, #+0x24 (addr 0xffff582d405c)
0xffff582d403c    60  and x5, x1, #0xfffffffffff00000
0xffff582d4040    64  ldr x5, [x5, #8]
0xffff582d4044    68  tbz w5, #2, #+0x18 (addr 0xffff582d405c)
0xffff582d4048    72  sub csp, jssp, #0x8 (8)
0xffff582d404c    76  str lr, [jssp, #-8]!
0xffff582d4050    80  ldr x16, pc+24 (addr 0x0000ffff582d4068)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4054    84  blr x16
0xffff582d4058    88  ldr lr, [jssp], #8
0xffff582d405c    92  ret
0xffff582d4060    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d4064   100  d63f03e0       constant
0xffff582d4068   104  58238080       constant
0xffff582d406c   108  0000ffff       constant
0xffff582d4070   112  movz x16, #0x0
0xffff582d4074   116  sub csp, jssp, #0x10 (16)
0xffff582d4078   120  stp fp, lr, [jssp, #-16]!
0xffff582d407c   124  bl #+0x4 (addr 0xffff582d4080)
0xffff582d4080   128  movz x17, #0xa00000000
0xffff582d4084   132  sub csp, jssp, #0x10 (16)
0xffff582d4088   136  stp x17, cp, [jssp, #-16]!
0xffff582d408c   140  add fp, jssp, #0x10 (16)
0xffff582d4090   144  ldr x17, pc+24 (addr 0x0000ffff582d40a8)    ;; lazy deoptimization bailout 0
0xffff582d4094   148  add x17, x17, x16
0xffff582d4098   152  br x17
0xffff582d409c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d40a0   160  d63f03e0       constant
0xffff582d40a4   164  d503201f       constant
0xffff582d40a8   168  58006000       constant
0xffff582d40ac   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d4050  code target (STUB)  (0xffff58238080)
0xffff582d4060  constant pool (size 16)
0xffff582d4090  runtime entry
0xffff582d409c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = rdev
compiler = unknown
Instructions (size = 152)
0xffff582d4120     0  sub csp, jssp, #0x8 (8)
0xffff582d4124     4  str x3, [jssp, #-8]!
0xffff582d4128     8  sub csp, jssp, #0x8 (8)
0xffff582d412c    12  str x4, [jssp, #-8]!
0xffff582d4130    16  ldr x3, pc+88 (addr 0x0000ffff582d4188)    ;; object: 0x225352e9 Cell for 0
0xffff582d4134    20  ldur x3, [x3, #7]
0xffff582d4138    24  cmp x3, #0x0 (0)
0xffff582d413c    28  b.ne #+0x2c (addr 0xffff582d4168)
0xffff582d4140    32  ldr x5, pc+80 (addr 0x0000ffff582d4190)    ;; object: 0x225357d1 WeakCell for 0x32b35dc9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d4144    36  ldur x5, [x5, #7]
0xffff582d4148    40  tbz w5, #0, #+0x20 (addr 0xffff582d4168)
0xffff582d414c    44  ldursw x4, [x5, #15]
0xffff582d4150    48  tbnz w4, #23, #+0x18 (addr 0xffff582d4168)
0xffff582d4154    52  ldr x4, [jssp], #8
0xffff582d4158    56  ldr x3, [jssp], #8
0xffff582d415c    60  ldr x2, pc+60 (addr 0x0000ffff582d4198)    ;; object: 0x2250d129 <String[4]: rdev>
0xffff582d4160    64  ldr x16, pc+64 (addr 0x0000ffff582d41a0)    ;; code: HANDLER, StoreTransitionStub, minor: 194568
0xffff582d4164    68  br x16
0xffff582d4168    72  ldr x2, pc+64 (addr 0x0000ffff582d41a8)    ;; object: 0x2250d129 <String[4]: rdev>
0xffff582d416c    76  ldr x4, [jssp], #8
0xffff582d4170    80  ldr x3, [jssp], #8
0xffff582d4174    84  ldr x16, pc+60 (addr 0x0000ffff582d41b0)    ;; code: BUILTIN
0xffff582d4178    88  br x16
0xffff582d417c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d4180    96  d63f03e0       constant
0xffff582d4184   100  d503201f       constant
0xffff582d4188   104  225352e9       constant
0xffff582d418c   108  00000000       constant
0xffff582d4190   112  225357d1       constant
0xffff582d4194   116  00000000       constant
0xffff582d4198   120  2250d129       constant
0xffff582d419c   124  00000000       constant
0xffff582d41a0   128  582d4000       constant
0xffff582d41a4   132  0000ffff       constant
0xffff582d41a8   136  2250d129       constant
0xffff582d41ac   140  00000000       constant
0xffff582d41b0   144  58222420       constant
0xffff582d41b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582d4130  embedded object  (0x225352e9 Cell for 0)
0xffff582d4140  embedded object  (0x225357d1 WeakCell for 0x32b35dc9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d415c  embedded object  (0x2250d129 <String[4]: rdev>)
0xffff582d4160  code target (HANDLER)  (0xffff582d4000)
0xffff582d4168  embedded object  (0x2250d129 <String[4]: rdev>)
0xffff582d4174  code target (BUILTIN)  (0xffff58222420)
0xffff582d417c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d4220     0  tbz w0, #0, #+0x1c (addr 0xffff582d423c)
0xffff582d4224     4  ldur x16, [x0, #-1]
0xffff582d4228     8  ldr x17, [x26, #120]
0xffff582d422c    12  cmp x16, x17
0xffff582d4230    16  b.ne #+0x60 (addr 0xffff582d4290)
0xffff582d4234    20  ldur d0, [x0, #7]
0xffff582d4238    24  b #+0x8 (addr 0xffff582d4240)
0xffff582d423c    28  scvtf d0, x0, #32
0xffff582d4240    32  stur d0, [x1, #71]
0xffff582d4244    36  stur x5, [x1, #-1]
0xffff582d4248    40  tbz w5, #0, #+0x34 (addr 0xffff582d427c)
0xffff582d424c    44  sub x2, x1, #0x1 (1)
0xffff582d4250    48  and x5, x5, #0xfffffffffff00000
0xffff582d4254    52  ldr x5, [x5, #8]
0xffff582d4258    56  tbz w5, #1, #+0x24 (addr 0xffff582d427c)
0xffff582d425c    60  and x5, x1, #0xfffffffffff00000
0xffff582d4260    64  ldr x5, [x5, #8]
0xffff582d4264    68  tbz w5, #2, #+0x18 (addr 0xffff582d427c)
0xffff582d4268    72  sub csp, jssp, #0x8 (8)
0xffff582d426c    76  str lr, [jssp, #-8]!
0xffff582d4270    80  ldr x16, pc+24 (addr 0x0000ffff582d4288)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4274    84  blr x16
0xffff582d4278    88  ldr lr, [jssp], #8
0xffff582d427c    92  ret
0xffff582d4280    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d4284   100  d63f03e0       constant
0xffff582d4288   104  58238080       constant
0xffff582d428c   108  0000ffff       constant
0xffff582d4290   112  movz x16, #0x0
0xffff582d4294   116  sub csp, jssp, #0x10 (16)
0xffff582d4298   120  stp fp, lr, [jssp, #-16]!
0xffff582d429c   124  bl #+0x4 (addr 0xffff582d42a0)
0xffff582d42a0   128  movz x17, #0xa00000000
0xffff582d42a4   132  sub csp, jssp, #0x10 (16)
0xffff582d42a8   136  stp x17, cp, [jssp, #-16]!
0xffff582d42ac   140  add fp, jssp, #0x10 (16)
0xffff582d42b0   144  ldr x17, pc+24 (addr 0x0000ffff582d42c8)    ;; lazy deoptimization bailout 0
0xffff582d42b4   148  add x17, x17, x16
0xffff582d42b8   152  br x17
0xffff582d42bc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d42c0   160  d63f03e0       constant
0xffff582d42c4   164  d503201f       constant
0xffff582d42c8   168  58006000       constant
0xffff582d42cc   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d4270  code target (STUB)  (0xffff58238080)
0xffff582d4280  constant pool (size 16)
0xffff582d42b0  runtime entry
0xffff582d42bc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d4220     0  tbz w0, #0, #+0x1c (addr 0xffff582d423c)
0xffff582d4224     4  ldur x16, [x0, #-1]
0xffff582d4228     8  ldr x17, [x26, #120]
0xffff582d422c    12  cmp x16, x17
0xffff582d4230    16  b.ne #+0x60 (addr 0xffff582d4290)
0xffff582d4234    20  ldur d0, [x0, #7]
0xffff582d4238    24  b #+0x8 (addr 0xffff582d4240)
0xffff582d423c    28  scvtf d0, x0, #32
0xffff582d4240    32  stur d0, [x1, #71]
0xffff582d4244    36  stur x5, [x1, #-1]
0xffff582d4248    40  tbz w5, #0, #+0x34 (addr 0xffff582d427c)
0xffff582d424c    44  sub x2, x1, #0x1 (1)
0xffff582d4250    48  and x5, x5, #0xfffffffffff00000
0xffff582d4254    52  ldr x5, [x5, #8]
0xffff582d4258    56  tbz w5, #1, #+0x24 (addr 0xffff582d427c)
0xffff582d425c    60  and x5, x1, #0xfffffffffff00000
0xffff582d4260    64  ldr x5, [x5, #8]
0xffff582d4264    68  tbz w5, #2, #+0x18 (addr 0xffff582d427c)
0xffff582d4268    72  sub csp, jssp, #0x8 (8)
0xffff582d426c    76  str lr, [jssp, #-8]!
0xffff582d4270    80  ldr x16, pc+24 (addr 0x0000ffff582d4288)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4274    84  blr x16
0xffff582d4278    88  ldr lr, [jssp], #8
0xffff582d427c    92  ret
0xffff582d4280    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d4284   100  d63f03e0       constant
0xffff582d4288   104  58238080       constant
0xffff582d428c   108  0000ffff       constant
0xffff582d4290   112  movz x16, #0x0
0xffff582d4294   116  sub csp, jssp, #0x10 (16)
0xffff582d4298   120  stp fp, lr, [jssp, #-16]!
0xffff582d429c   124  bl #+0x4 (addr 0xffff582d42a0)
0xffff582d42a0   128  movz x17, #0xa00000000
0xffff582d42a4   132  sub csp, jssp, #0x10 (16)
0xffff582d42a8   136  stp x17, cp, [jssp, #-16]!
0xffff582d42ac   140  add fp, jssp, #0x10 (16)
0xffff582d42b0   144  ldr x17, pc+24 (addr 0x0000ffff582d42c8)    ;; lazy deoptimization bailout 0
0xffff582d42b4   148  add x17, x17, x16
0xffff582d42b8   152  br x17
0xffff582d42bc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d42c0   160  d63f03e0       constant
0xffff582d42c4   164  d503201f       constant
0xffff582d42c8   168  58006000       constant
0xffff582d42cc   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d4270  code target (STUB)  (0xffff58238080)
0xffff582d4280  constant pool (size 16)
0xffff582d42b0  runtime entry
0xffff582d42bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = blksize
compiler = unknown
Instructions (size = 152)
0xffff582d4340     0  sub csp, jssp, #0x8 (8)
0xffff582d4344     4  str x3, [jssp, #-8]!
0xffff582d4348     8  sub csp, jssp, #0x8 (8)
0xffff582d434c    12  str x4, [jssp, #-8]!
0xffff582d4350    16  ldr x3, pc+88 (addr 0x0000ffff582d43a8)    ;; object: 0x225352e9 Cell for 0
0xffff582d4354    20  ldur x3, [x3, #7]
0xffff582d4358    24  cmp x3, #0x0 (0)
0xffff582d435c    28  b.ne #+0x2c (addr 0xffff582d4388)
0xffff582d4360    32  ldr x5, pc+80 (addr 0x0000ffff582d43b0)    ;; object: 0x225358c9 WeakCell for 0x32b35e21 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d4364    36  ldur x5, [x5, #7]
0xffff582d4368    40  tbz w5, #0, #+0x20 (addr 0xffff582d4388)
0xffff582d436c    44  ldursw x4, [x5, #15]
0xffff582d4370    48  tbnz w4, #23, #+0x18 (addr 0xffff582d4388)
0xffff582d4374    52  ldr x4, [jssp], #8
0xffff582d4378    56  ldr x3, [jssp], #8
0xffff582d437c    60  ldr x2, pc+60 (addr 0x0000ffff582d43b8)    ;; object: 0x2250d149 <String[7]: blksize>
0xffff582d4380    64  ldr x16, pc+64 (addr 0x0000ffff582d43c0)    ;; code: HANDLER, StoreTransitionStub, minor: 194569
0xffff582d4384    68  br x16
0xffff582d4388    72  ldr x2, pc+64 (addr 0x0000ffff582d43c8)    ;; object: 0x2250d149 <String[7]: blksize>
0xffff582d438c    76  ldr x4, [jssp], #8
0xffff582d4390    80  ldr x3, [jssp], #8
0xffff582d4394    84  ldr x16, pc+60 (addr 0x0000ffff582d43d0)    ;; code: BUILTIN
0xffff582d4398    88  br x16
0xffff582d439c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d43a0    96  d63f03e0       constant
0xffff582d43a4   100  d503201f       constant
0xffff582d43a8   104  225352e9       constant
0xffff582d43ac   108  00000000       constant
0xffff582d43b0   112  225358c9       constant
0xffff582d43b4   116  00000000       constant
0xffff582d43b8   120  2250d149       constant
0xffff582d43bc   124  00000000       constant
0xffff582d43c0   128  582d4220       constant
0xffff582d43c4   132  0000ffff       constant
0xffff582d43c8   136  2250d149       constant
0xffff582d43cc   140  00000000       constant
0xffff582d43d0   144  58222420       constant
0xffff582d43d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582d4350  embedded object  (0x225352e9 Cell for 0)
0xffff582d4360  embedded object  (0x225358c9 WeakCell for 0x32b35e21 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d437c  embedded object  (0x2250d149 <String[7]: blksize>)
0xffff582d4380  code target (HANDLER)  (0xffff582d4220)
0xffff582d4388  embedded object  (0x2250d149 <String[7]: blksize>)
0xffff582d4394  code target (BUILTIN)  (0xffff58222420)
0xffff582d439c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d4440     0  tbz w0, #0, #+0x1c (addr 0xffff582d445c)
0xffff582d4444     4  ldur x16, [x0, #-1]
0xffff582d4448     8  ldr x17, [x26, #120]
0xffff582d444c    12  cmp x16, x17
0xffff582d4450    16  b.ne #+0x60 (addr 0xffff582d44b0)
0xffff582d4454    20  ldur d0, [x0, #7]
0xffff582d4458    24  b #+0x8 (addr 0xffff582d4460)
0xffff582d445c    28  scvtf d0, x0, #32
0xffff582d4460    32  stur d0, [x1, #79]
0xffff582d4464    36  stur x5, [x1, #-1]
0xffff582d4468    40  tbz w5, #0, #+0x34 (addr 0xffff582d449c)
0xffff582d446c    44  sub x2, x1, #0x1 (1)
0xffff582d4470    48  and x5, x5, #0xfffffffffff00000
0xffff582d4474    52  ldr x5, [x5, #8]
0xffff582d4478    56  tbz w5, #1, #+0x24 (addr 0xffff582d449c)
0xffff582d447c    60  and x5, x1, #0xfffffffffff00000
0xffff582d4480    64  ldr x5, [x5, #8]
0xffff582d4484    68  tbz w5, #2, #+0x18 (addr 0xffff582d449c)
0xffff582d4488    72  sub csp, jssp, #0x8 (8)
0xffff582d448c    76  str lr, [jssp, #-8]!
0xffff582d4490    80  ldr x16, pc+24 (addr 0x0000ffff582d44a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4494    84  blr x16
0xffff582d4498    88  ldr lr, [jssp], #8
0xffff582d449c    92  ret
0xffff582d44a0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d44a4   100  d63f03e0       constant
0xffff582d44a8   104  58238080       constant
0xffff582d44ac   108  0000ffff       constant
0xffff582d44b0   112  movz x16, #0x0
0xffff582d44b4   116  sub csp, jssp, #0x10 (16)
0xffff582d44b8   120  stp fp, lr, [jssp, #-16]!
0xffff582d44bc   124  bl #+0x4 (addr 0xffff582d44c0)
0xffff582d44c0   128  movz x17, #0xa00000000
0xffff582d44c4   132  sub csp, jssp, #0x10 (16)
0xffff582d44c8   136  stp x17, cp, [jssp, #-16]!
0xffff582d44cc   140  add fp, jssp, #0x10 (16)
0xffff582d44d0   144  ldr x17, pc+24 (addr 0x0000ffff582d44e8)    ;; lazy deoptimization bailout 0
0xffff582d44d4   148  add x17, x17, x16
0xffff582d44d8   152  br x17
0xffff582d44dc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d44e0   160  d63f03e0       constant
0xffff582d44e4   164  d503201f       constant
0xffff582d44e8   168  58006000       constant
0xffff582d44ec   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d4490  code target (STUB)  (0xffff58238080)
0xffff582d44a0  constant pool (size 16)
0xffff582d44d0  runtime entry
0xffff582d44dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d4440     0  tbz w0, #0, #+0x1c (addr 0xffff582d445c)
0xffff582d4444     4  ldur x16, [x0, #-1]
0xffff582d4448     8  ldr x17, [x26, #120]
0xffff582d444c    12  cmp x16, x17
0xffff582d4450    16  b.ne #+0x60 (addr 0xffff582d44b0)
0xffff582d4454    20  ldur d0, [x0, #7]
0xffff582d4458    24  b #+0x8 (addr 0xffff582d4460)
0xffff582d445c    28  scvtf d0, x0, #32
0xffff582d4460    32  stur d0, [x1, #79]
0xffff582d4464    36  stur x5, [x1, #-1]
0xffff582d4468    40  tbz w5, #0, #+0x34 (addr 0xffff582d449c)
0xffff582d446c    44  sub x2, x1, #0x1 (1)
0xffff582d4470    48  and x5, x5, #0xfffffffffff00000
0xffff582d4474    52  ldr x5, [x5, #8]
0xffff582d4478    56  tbz w5, #1, #+0x24 (addr 0xffff582d449c)
0xffff582d447c    60  and x5, x1, #0xfffffffffff00000
0xffff582d4480    64  ldr x5, [x5, #8]
0xffff582d4484    68  tbz w5, #2, #+0x18 (addr 0xffff582d449c)
0xffff582d4488    72  sub csp, jssp, #0x8 (8)
0xffff582d448c    76  str lr, [jssp, #-8]!
0xffff582d4490    80  ldr x16, pc+24 (addr 0x0000ffff582d44a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4494    84  blr x16
0xffff582d4498    88  ldr lr, [jssp], #8
0xffff582d449c    92  ret
0xffff582d44a0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d44a4   100  d63f03e0       constant
0xffff582d44a8   104  58238080       constant
0xffff582d44ac   108  0000ffff       constant
0xffff582d44b0   112  movz x16, #0x0
0xffff582d44b4   116  sub csp, jssp, #0x10 (16)
0xffff582d44b8   120  stp fp, lr, [jssp, #-16]!
0xffff582d44bc   124  bl #+0x4 (addr 0xffff582d44c0)
0xffff582d44c0   128  movz x17, #0xa00000000
0xffff582d44c4   132  sub csp, jssp, #0x10 (16)
0xffff582d44c8   136  stp x17, cp, [jssp, #-16]!
0xffff582d44cc   140  add fp, jssp, #0x10 (16)
0xffff582d44d0   144  ldr x17, pc+24 (addr 0x0000ffff582d44e8)    ;; lazy deoptimization bailout 0
0xffff582d44d4   148  add x17, x17, x16
0xffff582d44d8   152  br x17
0xffff582d44dc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d44e0   160  d63f03e0       constant
0xffff582d44e4   164  d503201f       constant
0xffff582d44e8   168  58006000       constant
0xffff582d44ec   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d4490  code target (STUB)  (0xffff58238080)
0xffff582d44a0  constant pool (size 16)
0xffff582d44d0  runtime entry
0xffff582d44dc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = ino
compiler = unknown
Instructions (size = 152)
0xffff582d4560     0  sub csp, jssp, #0x8 (8)
0xffff582d4564     4  str x3, [jssp, #-8]!
0xffff582d4568     8  sub csp, jssp, #0x8 (8)
0xffff582d456c    12  str x4, [jssp, #-8]!
0xffff582d4570    16  ldr x3, pc+88 (addr 0x0000ffff582d45c8)    ;; object: 0x225352e9 Cell for 0
0xffff582d4574    20  ldur x3, [x3, #7]
0xffff582d4578    24  cmp x3, #0x0 (0)
0xffff582d457c    28  b.ne #+0x2c (addr 0xffff582d45a8)
0xffff582d4580    32  ldr x5, pc+80 (addr 0x0000ffff582d45d0)    ;; object: 0x225359c1 WeakCell for 0x32b35e79 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d4584    36  ldur x5, [x5, #7]
0xffff582d4588    40  tbz w5, #0, #+0x20 (addr 0xffff582d45a8)
0xffff582d458c    44  ldursw x4, [x5, #15]
0xffff582d4590    48  tbnz w4, #23, #+0x18 (addr 0xffff582d45a8)
0xffff582d4594    52  ldr x4, [jssp], #8
0xffff582d4598    56  ldr x3, [jssp], #8
0xffff582d459c    60  ldr x2, pc+60 (addr 0x0000ffff582d45d8)    ;; object: 0x2250d169 <String[3]: ino>
0xffff582d45a0    64  ldr x16, pc+64 (addr 0x0000ffff582d45e0)    ;; code: HANDLER, StoreTransitionStub, minor: 194570
0xffff582d45a4    68  br x16
0xffff582d45a8    72  ldr x2, pc+64 (addr 0x0000ffff582d45e8)    ;; object: 0x2250d169 <String[3]: ino>
0xffff582d45ac    76  ldr x4, [jssp], #8
0xffff582d45b0    80  ldr x3, [jssp], #8
0xffff582d45b4    84  ldr x16, pc+60 (addr 0x0000ffff582d45f0)    ;; code: BUILTIN
0xffff582d45b8    88  br x16
0xffff582d45bc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d45c0    96  d63f03e0       constant
0xffff582d45c4   100  d503201f       constant
0xffff582d45c8   104  225352e9       constant
0xffff582d45cc   108  00000000       constant
0xffff582d45d0   112  225359c1       constant
0xffff582d45d4   116  00000000       constant
0xffff582d45d8   120  2250d169       constant
0xffff582d45dc   124  00000000       constant
0xffff582d45e0   128  582d4440       constant
0xffff582d45e4   132  0000ffff       constant
0xffff582d45e8   136  2250d169       constant
0xffff582d45ec   140  00000000       constant
0xffff582d45f0   144  58222420       constant
0xffff582d45f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582d4570  embedded object  (0x225352e9 Cell for 0)
0xffff582d4580  embedded object  (0x225359c1 WeakCell for 0x32b35e79 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d459c  embedded object  (0x2250d169 <String[3]: ino>)
0xffff582d45a0  code target (HANDLER)  (0xffff582d4440)
0xffff582d45a8  embedded object  (0x2250d169 <String[3]: ino>)
0xffff582d45b4  code target (BUILTIN)  (0xffff58222420)
0xffff582d45bc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d4660     0  tbz w0, #0, #+0x1c (addr 0xffff582d467c)
0xffff582d4664     4  ldur x16, [x0, #-1]
0xffff582d4668     8  ldr x17, [x26, #120]
0xffff582d466c    12  cmp x16, x17
0xffff582d4670    16  b.ne #+0x60 (addr 0xffff582d46d0)
0xffff582d4674    20  ldur d0, [x0, #7]
0xffff582d4678    24  b #+0x8 (addr 0xffff582d4680)
0xffff582d467c    28  scvtf d0, x0, #32
0xffff582d4680    32  stur d0, [x1, #87]
0xffff582d4684    36  stur x5, [x1, #-1]
0xffff582d4688    40  tbz w5, #0, #+0x34 (addr 0xffff582d46bc)
0xffff582d468c    44  sub x2, x1, #0x1 (1)
0xffff582d4690    48  and x5, x5, #0xfffffffffff00000
0xffff582d4694    52  ldr x5, [x5, #8]
0xffff582d4698    56  tbz w5, #1, #+0x24 (addr 0xffff582d46bc)
0xffff582d469c    60  and x5, x1, #0xfffffffffff00000
0xffff582d46a0    64  ldr x5, [x5, #8]
0xffff582d46a4    68  tbz w5, #2, #+0x18 (addr 0xffff582d46bc)
0xffff582d46a8    72  sub csp, jssp, #0x8 (8)
0xffff582d46ac    76  str lr, [jssp, #-8]!
0xffff582d46b0    80  ldr x16, pc+24 (addr 0x0000ffff582d46c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d46b4    84  blr x16
0xffff582d46b8    88  ldr lr, [jssp], #8
0xffff582d46bc    92  ret
0xffff582d46c0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d46c4   100  d63f03e0       constant
0xffff582d46c8   104  58238080       constant
0xffff582d46cc   108  0000ffff       constant
0xffff582d46d0   112  movz x16, #0x0
0xffff582d46d4   116  sub csp, jssp, #0x10 (16)
0xffff582d46d8   120  stp fp, lr, [jssp, #-16]!
0xffff582d46dc   124  bl #+0x4 (addr 0xffff582d46e0)
0xffff582d46e0   128  movz x17, #0xa00000000
0xffff582d46e4   132  sub csp, jssp, #0x10 (16)
0xffff582d46e8   136  stp x17, cp, [jssp, #-16]!
0xffff582d46ec   140  add fp, jssp, #0x10 (16)
0xffff582d46f0   144  ldr x17, pc+24 (addr 0x0000ffff582d4708)    ;; lazy deoptimization bailout 0
0xffff582d46f4   148  add x17, x17, x16
0xffff582d46f8   152  br x17
0xffff582d46fc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d4700   160  d63f03e0       constant
0xffff582d4704   164  d503201f       constant
0xffff582d4708   168  58006000       constant
0xffff582d470c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d46b0  code target (STUB)  (0xffff58238080)
0xffff582d46c0  constant pool (size 16)
0xffff582d46f0  runtime entry
0xffff582d46fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d4660     0  tbz w0, #0, #+0x1c (addr 0xffff582d467c)
0xffff582d4664     4  ldur x16, [x0, #-1]
0xffff582d4668     8  ldr x17, [x26, #120]
0xffff582d466c    12  cmp x16, x17
0xffff582d4670    16  b.ne #+0x60 (addr 0xffff582d46d0)
0xffff582d4674    20  ldur d0, [x0, #7]
0xffff582d4678    24  b #+0x8 (addr 0xffff582d4680)
0xffff582d467c    28  scvtf d0, x0, #32
0xffff582d4680    32  stur d0, [x1, #87]
0xffff582d4684    36  stur x5, [x1, #-1]
0xffff582d4688    40  tbz w5, #0, #+0x34 (addr 0xffff582d46bc)
0xffff582d468c    44  sub x2, x1, #0x1 (1)
0xffff582d4690    48  and x5, x5, #0xfffffffffff00000
0xffff582d4694    52  ldr x5, [x5, #8]
0xffff582d4698    56  tbz w5, #1, #+0x24 (addr 0xffff582d46bc)
0xffff582d469c    60  and x5, x1, #0xfffffffffff00000
0xffff582d46a0    64  ldr x5, [x5, #8]
0xffff582d46a4    68  tbz w5, #2, #+0x18 (addr 0xffff582d46bc)
0xffff582d46a8    72  sub csp, jssp, #0x8 (8)
0xffff582d46ac    76  str lr, [jssp, #-8]!
0xffff582d46b0    80  ldr x16, pc+24 (addr 0x0000ffff582d46c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d46b4    84  blr x16
0xffff582d46b8    88  ldr lr, [jssp], #8
0xffff582d46bc    92  ret
0xffff582d46c0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d46c4   100  d63f03e0       constant
0xffff582d46c8   104  58238080       constant
0xffff582d46cc   108  0000ffff       constant
0xffff582d46d0   112  movz x16, #0x0
0xffff582d46d4   116  sub csp, jssp, #0x10 (16)
0xffff582d46d8   120  stp fp, lr, [jssp, #-16]!
0xffff582d46dc   124  bl #+0x4 (addr 0xffff582d46e0)
0xffff582d46e0   128  movz x17, #0xa00000000
0xffff582d46e4   132  sub csp, jssp, #0x10 (16)
0xffff582d46e8   136  stp x17, cp, [jssp, #-16]!
0xffff582d46ec   140  add fp, jssp, #0x10 (16)
0xffff582d46f0   144  ldr x17, pc+24 (addr 0x0000ffff582d4708)    ;; lazy deoptimization bailout 0
0xffff582d46f4   148  add x17, x17, x16
0xffff582d46f8   152  br x17
0xffff582d46fc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d4700   160  d63f03e0       constant
0xffff582d4704   164  d503201f       constant
0xffff582d4708   168  58006000       constant
0xffff582d470c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d46b0  code target (STUB)  (0xffff58238080)
0xffff582d46c0  constant pool (size 16)
0xffff582d46f0  runtime entry
0xffff582d46fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = size
compiler = unknown
Instructions (size = 152)
0xffff582d4780     0  sub csp, jssp, #0x8 (8)
0xffff582d4784     4  str x3, [jssp, #-8]!
0xffff582d4788     8  sub csp, jssp, #0x8 (8)
0xffff582d478c    12  str x4, [jssp, #-8]!
0xffff582d4790    16  ldr x3, pc+88 (addr 0x0000ffff582d47e8)    ;; object: 0x225352e9 Cell for 0
0xffff582d4794    20  ldur x3, [x3, #7]
0xffff582d4798    24  cmp x3, #0x0 (0)
0xffff582d479c    28  b.ne #+0x2c (addr 0xffff582d47c8)
0xffff582d47a0    32  ldr x5, pc+80 (addr 0x0000ffff582d47f0)    ;; object: 0x22535ab9 WeakCell for 0x32b35ed1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d47a4    36  ldur x5, [x5, #7]
0xffff582d47a8    40  tbz w5, #0, #+0x20 (addr 0xffff582d47c8)
0xffff582d47ac    44  ldursw x4, [x5, #15]
0xffff582d47b0    48  tbnz w4, #23, #+0x18 (addr 0xffff582d47c8)
0xffff582d47b4    52  ldr x4, [jssp], #8
0xffff582d47b8    56  ldr x3, [jssp], #8
0xffff582d47bc    60  ldr x2, pc+60 (addr 0x0000ffff582d47f8)    ;; object: 0x39c89861 <String[4]: size>
0xffff582d47c0    64  ldr x16, pc+64 (addr 0x0000ffff582d4800)    ;; code: HANDLER, StoreTransitionStub, minor: 194571
0xffff582d47c4    68  br x16
0xffff582d47c8    72  ldr x2, pc+64 (addr 0x0000ffff582d4808)    ;; object: 0x39c89861 <String[4]: size>
0xffff582d47cc    76  ldr x4, [jssp], #8
0xffff582d47d0    80  ldr x3, [jssp], #8
0xffff582d47d4    84  ldr x16, pc+60 (addr 0x0000ffff582d4810)    ;; code: BUILTIN
0xffff582d47d8    88  br x16
0xffff582d47dc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d47e0    96  d63f03e0       constant
0xffff582d47e4   100  d503201f       constant
0xffff582d47e8   104  225352e9       constant
0xffff582d47ec   108  00000000       constant
0xffff582d47f0   112  22535ab9       constant
0xffff582d47f4   116  00000000       constant
0xffff582d47f8   120  39c89861       constant
0xffff582d47fc   124  00000000       constant
0xffff582d4800   128  582d4660       constant
0xffff582d4804   132  0000ffff       constant
0xffff582d4808   136  39c89861       constant
0xffff582d480c   140  00000000       constant
0xffff582d4810   144  58222420       constant
0xffff582d4814   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582d4790  embedded object  (0x225352e9 Cell for 0)
0xffff582d47a0  embedded object  (0x22535ab9 WeakCell for 0x32b35ed1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d47bc  embedded object  (0x39c89861 <String[4]: size>)
0xffff582d47c0  code target (HANDLER)  (0xffff582d4660)
0xffff582d47c8  embedded object  (0x39c89861 <String[4]: size>)
0xffff582d47d4  code target (BUILTIN)  (0xffff58222420)
0xffff582d47dc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d4880     0  tbz w0, #0, #+0x1c (addr 0xffff582d489c)
0xffff582d4884     4  ldur x16, [x0, #-1]
0xffff582d4888     8  ldr x17, [x26, #120]
0xffff582d488c    12  cmp x16, x17
0xffff582d4890    16  b.ne #+0x60 (addr 0xffff582d48f0)
0xffff582d4894    20  ldur d0, [x0, #7]
0xffff582d4898    24  b #+0x8 (addr 0xffff582d48a0)
0xffff582d489c    28  scvtf d0, x0, #32
0xffff582d48a0    32  stur d0, [x1, #95]
0xffff582d48a4    36  stur x5, [x1, #-1]
0xffff582d48a8    40  tbz w5, #0, #+0x34 (addr 0xffff582d48dc)
0xffff582d48ac    44  sub x2, x1, #0x1 (1)
0xffff582d48b0    48  and x5, x5, #0xfffffffffff00000
0xffff582d48b4    52  ldr x5, [x5, #8]
0xffff582d48b8    56  tbz w5, #1, #+0x24 (addr 0xffff582d48dc)
0xffff582d48bc    60  and x5, x1, #0xfffffffffff00000
0xffff582d48c0    64  ldr x5, [x5, #8]
0xffff582d48c4    68  tbz w5, #2, #+0x18 (addr 0xffff582d48dc)
0xffff582d48c8    72  sub csp, jssp, #0x8 (8)
0xffff582d48cc    76  str lr, [jssp, #-8]!
0xffff582d48d0    80  ldr x16, pc+24 (addr 0x0000ffff582d48e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d48d4    84  blr x16
0xffff582d48d8    88  ldr lr, [jssp], #8
0xffff582d48dc    92  ret
0xffff582d48e0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d48e4   100  d63f03e0       constant
0xffff582d48e8   104  58238080       constant
0xffff582d48ec   108  0000ffff       constant
0xffff582d48f0   112  movz x16, #0x0
0xffff582d48f4   116  sub csp, jssp, #0x10 (16)
0xffff582d48f8   120  stp fp, lr, [jssp, #-16]!
0xffff582d48fc   124  bl #+0x4 (addr 0xffff582d4900)
0xffff582d4900   128  movz x17, #0xa00000000
0xffff582d4904   132  sub csp, jssp, #0x10 (16)
0xffff582d4908   136  stp x17, cp, [jssp, #-16]!
0xffff582d490c   140  add fp, jssp, #0x10 (16)
0xffff582d4910   144  ldr x17, pc+24 (addr 0x0000ffff582d4928)    ;; lazy deoptimization bailout 0
0xffff582d4914   148  add x17, x17, x16
0xffff582d4918   152  br x17
0xffff582d491c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d4920   160  d63f03e0       constant
0xffff582d4924   164  d503201f       constant
0xffff582d4928   168  58006000       constant
0xffff582d492c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d48d0  code target (STUB)  (0xffff58238080)
0xffff582d48e0  constant pool (size 16)
0xffff582d4910  runtime entry
0xffff582d491c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff582d4880     0  tbz w0, #0, #+0x1c (addr 0xffff582d489c)
0xffff582d4884     4  ldur x16, [x0, #-1]
0xffff582d4888     8  ldr x17, [x26, #120]
0xffff582d488c    12  cmp x16, x17
0xffff582d4890    16  b.ne #+0x60 (addr 0xffff582d48f0)
0xffff582d4894    20  ldur d0, [x0, #7]
0xffff582d4898    24  b #+0x8 (addr 0xffff582d48a0)
0xffff582d489c    28  scvtf d0, x0, #32
0xffff582d48a0    32  stur d0, [x1, #95]
0xffff582d48a4    36  stur x5, [x1, #-1]
0xffff582d48a8    40  tbz w5, #0, #+0x34 (addr 0xffff582d48dc)
0xffff582d48ac    44  sub x2, x1, #0x1 (1)
0xffff582d48b0    48  and x5, x5, #0xfffffffffff00000
0xffff582d48b4    52  ldr x5, [x5, #8]
0xffff582d48b8    56  tbz w5, #1, #+0x24 (addr 0xffff582d48dc)
0xffff582d48bc    60  and x5, x1, #0xfffffffffff00000
0xffff582d48c0    64  ldr x5, [x5, #8]
0xffff582d48c4    68  tbz w5, #2, #+0x18 (addr 0xffff582d48dc)
0xffff582d48c8    72  sub csp, jssp, #0x8 (8)
0xffff582d48cc    76  str lr, [jssp, #-8]!
0xffff582d48d0    80  ldr x16, pc+24 (addr 0x0000ffff582d48e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d48d4    84  blr x16
0xffff582d48d8    88  ldr lr, [jssp], #8
0xffff582d48dc    92  ret
0xffff582d48e0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582d48e4   100  d63f03e0       constant
0xffff582d48e8   104  58238080       constant
0xffff582d48ec   108  0000ffff       constant
0xffff582d48f0   112  movz x16, #0x0
0xffff582d48f4   116  sub csp, jssp, #0x10 (16)
0xffff582d48f8   120  stp fp, lr, [jssp, #-16]!
0xffff582d48fc   124  bl #+0x4 (addr 0xffff582d4900)
0xffff582d4900   128  movz x17, #0xa00000000
0xffff582d4904   132  sub csp, jssp, #0x10 (16)
0xffff582d4908   136  stp x17, cp, [jssp, #-16]!
0xffff582d490c   140  add fp, jssp, #0x10 (16)
0xffff582d4910   144  ldr x17, pc+24 (addr 0x0000ffff582d4928)    ;; lazy deoptimization bailout 0
0xffff582d4914   148  add x17, x17, x16
0xffff582d4918   152  br x17
0xffff582d491c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d4920   160  d63f03e0       constant
0xffff582d4924   164  d503201f       constant
0xffff582d4928   168  58006000       constant
0xffff582d492c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff582d48d0  code target (STUB)  (0xffff58238080)
0xffff582d48e0  constant pool (size 16)
0xffff582d4910  runtime entry
0xffff582d491c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = blocks
compiler = unknown
Instructions (size = 152)
0xffff582d49a0     0  sub csp, jssp, #0x8 (8)
0xffff582d49a4     4  str x3, [jssp, #-8]!
0xffff582d49a8     8  sub csp, jssp, #0x8 (8)
0xffff582d49ac    12  str x4, [jssp, #-8]!
0xffff582d49b0    16  ldr x3, pc+88 (addr 0x0000ffff582d4a08)    ;; object: 0x225352e9 Cell for 0
0xffff582d49b4    20  ldur x3, [x3, #7]
0xffff582d49b8    24  cmp x3, #0x0 (0)
0xffff582d49bc    28  b.ne #+0x2c (addr 0xffff582d49e8)
0xffff582d49c0    32  ldr x5, pc+80 (addr 0x0000ffff582d4a10)    ;; object: 0x22535bb1 WeakCell for 0x32b35f29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d49c4    36  ldur x5, [x5, #7]
0xffff582d49c8    40  tbz w5, #0, #+0x20 (addr 0xffff582d49e8)
0xffff582d49cc    44  ldursw x4, [x5, #15]
0xffff582d49d0    48  tbnz w4, #23, #+0x18 (addr 0xffff582d49e8)
0xffff582d49d4    52  ldr x4, [jssp], #8
0xffff582d49d8    56  ldr x3, [jssp], #8
0xffff582d49dc    60  ldr x2, pc+60 (addr 0x0000ffff582d4a18)    ;; object: 0x2250d189 <String[6]: blocks>
0xffff582d49e0    64  ldr x16, pc+64 (addr 0x0000ffff582d4a20)    ;; code: HANDLER, StoreTransitionStub, minor: 194572
0xffff582d49e4    68  br x16
0xffff582d49e8    72  ldr x2, pc+64 (addr 0x0000ffff582d4a28)    ;; object: 0x2250d189 <String[6]: blocks>
0xffff582d49ec    76  ldr x4, [jssp], #8
0xffff582d49f0    80  ldr x3, [jssp], #8
0xffff582d49f4    84  ldr x16, pc+60 (addr 0x0000ffff582d4a30)    ;; code: BUILTIN
0xffff582d49f8    88  br x16
0xffff582d49fc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582d4a00    96  d63f03e0       constant
0xffff582d4a04   100  d503201f       constant
0xffff582d4a08   104  225352e9       constant
0xffff582d4a0c   108  00000000       constant
0xffff582d4a10   112  22535bb1       constant
0xffff582d4a14   116  00000000       constant
0xffff582d4a18   120  2250d189       constant
0xffff582d4a1c   124  00000000       constant
0xffff582d4a20   128  582d4880       constant
0xffff582d4a24   132  0000ffff       constant
0xffff582d4a28   136  2250d189       constant
0xffff582d4a2c   140  00000000       constant
0xffff582d4a30   144  58222420       constant
0xffff582d4a34   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582d49b0  embedded object  (0x225352e9 Cell for 0)
0xffff582d49c0  embedded object  (0x22535bb1 WeakCell for 0x32b35f29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d49dc  embedded object  (0x2250d189 <String[6]: blocks>)
0xffff582d49e0  code target (HANDLER)  (0xffff582d4880)
0xffff582d49e8  embedded object  (0x2250d189 <String[6]: blocks>)
0xffff582d49f4  code target (BUILTIN)  (0xffff58222420)
0xffff582d49fc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582d4aa0     0  tbz w0, #0, #+0x90 (addr 0xffff582d4b30)
0xffff582d4aa4     4  mov x2, x0
0xffff582d4aa8     8  stur x2, [x1, #103]
0xffff582d4aac    12  add x3, x1, #0x67 (103)
0xffff582d4ab0    16  and x2, x2, #0xfffffffffff00000
0xffff582d4ab4    20  ldr x2, [x2, #8]
0xffff582d4ab8    24  tbz w2, #1, #+0x24 (addr 0xffff582d4adc)
0xffff582d4abc    28  and x2, x1, #0xfffffffffff00000
0xffff582d4ac0    32  ldr x2, [x2, #8]
0xffff582d4ac4    36  tbz w2, #2, #+0x18 (addr 0xffff582d4adc)
0xffff582d4ac8    40  sub csp, jssp, #0x8 (8)
0xffff582d4acc    44  str lr, [jssp, #-8]!
0xffff582d4ad0    48  ldr x16, pc+80 (addr 0x0000ffff582d4b20)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582d4ad4    52  blr x16
0xffff582d4ad8    56  ldr lr, [jssp], #8
0xffff582d4adc    60  stur x5, [x1, #-1]
0xffff582d4ae0    64  tbz w5, #0, #+0x34 (addr 0xffff582d4b14)
0xffff582d4ae4    68  sub x2, x1, #0x1 (1)
0xffff582d4ae8    72  and x5, x5, #0xfffffffffff00000
0xffff582d4aec    76  ldr x5, [x5, #8]
0xffff582d4af0    80  tbz w5, #1, #+0x24 (addr 0xffff582d4b14)
0xffff582d4af4    84  and x5, x1, #0xfffffffffff00000
0xffff582d4af8    88  ldr x5, [x5, #8]
0xffff582d4afc    92  tbz w5, #2, #+0x18 (addr 0xffff582d4b14)
0xffff582d4b00    96  sub csp, jssp, #0x8 (8)
0xffff582d4b04   100  str lr, [jssp, #-8]!
0xffff582d4b08   104  ldr x16, pc+32 (addr 0x0000ffff582d4b28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4b0c   108  blr x16
0xffff582d4b10   112  ldr lr, [jssp], #8
0xffff582d4b14   116  ret
0xffff582d4b18   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582d4b1c   124  d63f03e0       constant
0xffff582d4b20   128  582170c0       constant
0xffff582d4b24   132  0000ffff       constant
0xffff582d4b28   136  58238080       constant
0xffff582d4b2c   140  0000ffff       constant
0xffff582d4b30   144  movz x16, #0x0
0xffff582d4b34   148  sub csp, jssp, #0x10 (16)
0xffff582d4b38   152  stp fp, lr, [jssp, #-16]!
0xffff582d4b3c   156  bl #+0x4 (addr 0xffff582d4b40)
0xffff582d4b40   160  movz x17, #0xa00000000
0xffff582d4b44   164  sub csp, jssp, #0x10 (16)
0xffff582d4b48   168  stp x17, cp, [jssp, #-16]!
0xffff582d4b4c   172  add fp, jssp, #0x10 (16)
0xffff582d4b50   176  ldr x17, pc+24 (addr 0x0000ffff582d4b68)    ;; lazy deoptimization bailout 0
0xffff582d4b54   180  add x17, x17, x16
0xffff582d4b58   184  br x17
0xffff582d4b5c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d4b60   192  d63f03e0       constant
0xffff582d4b64   196  d503201f       constant
0xffff582d4b68   200  58006000       constant
0xffff582d4b6c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582d4ad0  code target (STUB)  (0xffff582170c0)
0xffff582d4b08  code target (STUB)  (0xffff58238080)
0xffff582d4b18  constant pool (size 24)
0xffff582d4b50  runtime entry
0xffff582d4b5c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582d4aa0     0  tbz w0, #0, #+0x90 (addr 0xffff582d4b30)
0xffff582d4aa4     4  mov x2, x0
0xffff582d4aa8     8  stur x2, [x1, #103]
0xffff582d4aac    12  add x3, x1, #0x67 (103)
0xffff582d4ab0    16  and x2, x2, #0xfffffffffff00000
0xffff582d4ab4    20  ldr x2, [x2, #8]
0xffff582d4ab8    24  tbz w2, #1, #+0x24 (addr 0xffff582d4adc)
0xffff582d4abc    28  and x2, x1, #0xfffffffffff00000
0xffff582d4ac0    32  ldr x2, [x2, #8]
0xffff582d4ac4    36  tbz w2, #2, #+0x18 (addr 0xffff582d4adc)
0xffff582d4ac8    40  sub csp, jssp, #0x8 (8)
0xffff582d4acc    44  str lr, [jssp, #-8]!
0xffff582d4ad0    48  ldr x16, pc+80 (addr 0x0000ffff582d4b20)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582d4ad4    52  blr x16
0xffff582d4ad8    56  ldr lr, [jssp], #8
0xffff582d4adc    60  stur x5, [x1, #-1]
0xffff582d4ae0    64  tbz w5, #0, #+0x34 (addr 0xffff582d4b14)
0xffff582d4ae4    68  sub x2, x1, #0x1 (1)
0xffff582d4ae8    72  and x5, x5, #0xfffffffffff00000
0xffff582d4aec    76  ldr x5, [x5, #8]
0xffff582d4af0    80  tbz w5, #1, #+0x24 (addr 0xffff582d4b14)
0xffff582d4af4    84  and x5, x1, #0xfffffffffff00000
0xffff582d4af8    88  ldr x5, [x5, #8]
0xffff582d4afc    92  tbz w5, #2, #+0x18 (addr 0xffff582d4b14)
0xffff582d4b00    96  sub csp, jssp, #0x8 (8)
0xffff582d4b04   100  str lr, [jssp, #-8]!
0xffff582d4b08   104  ldr x16, pc+32 (addr 0x0000ffff582d4b28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4b0c   108  blr x16
0xffff582d4b10   112  ldr lr, [jssp], #8
0xffff582d4b14   116  ret
0xffff582d4b18   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582d4b1c   124  d63f03e0       constant
0xffff582d4b20   128  582170c0       constant
0xffff582d4b24   132  0000ffff       constant
0xffff582d4b28   136  58238080       constant
0xffff582d4b2c   140  0000ffff       constant
0xffff582d4b30   144  movz x16, #0x0
0xffff582d4b34   148  sub csp, jssp, #0x10 (16)
0xffff582d4b38   152  stp fp, lr, [jssp, #-16]!
0xffff582d4b3c   156  bl #+0x4 (addr 0xffff582d4b40)
0xffff582d4b40   160  movz x17, #0xa00000000
0xffff582d4b44   164  sub csp, jssp, #0x10 (16)
0xffff582d4b48   168  stp x17, cp, [jssp, #-16]!
0xffff582d4b4c   172  add fp, jssp, #0x10 (16)
0xffff582d4b50   176  ldr x17, pc+24 (addr 0x0000ffff582d4b68)    ;; lazy deoptimization bailout 0
0xffff582d4b54   180  add x17, x17, x16
0xffff582d4b58   184  br x17
0xffff582d4b5c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d4b60   192  d63f03e0       constant
0xffff582d4b64   196  d503201f       constant
0xffff582d4b68   200  58006000       constant
0xffff582d4b6c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582d4ad0  code target (STUB)  (0xffff582170c0)
0xffff582d4b08  code target (STUB)  (0xffff58238080)
0xffff582d4b18  constant pool (size 24)
0xffff582d4b50  runtime entry
0xffff582d4b5c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = atime
compiler = unknown
Instructions (size = 184)
0xffff582d4be0     0  sub csp, jssp, #0x8 (8)
0xffff582d4be4     4  str x3, [jssp, #-8]!
0xffff582d4be8     8  sub csp, jssp, #0x8 (8)
0xffff582d4bec    12  str x4, [jssp, #-8]!
0xffff582d4bf0    16  ldr x3, pc+112 (addr 0x0000ffff582d4c60)    ;; object: 0x225352e9 Cell for 0
0xffff582d4bf4    20  ldur x3, [x3, #7]
0xffff582d4bf8    24  cmp x3, #0x0 (0)
0xffff582d4bfc    28  b.ne #+0x44 (addr 0xffff582d4c40)
0xffff582d4c00    32  tbz w0, #0, #+0x40 (addr 0xffff582d4c40)
0xffff582d4c04    36  ldur x3, [x0, #-1]
0xffff582d4c08    40  ldr x4, pc+96 (addr 0x0000ffff582d4c68)    ;; object: 0x22534909 WeakCell for 0x32b07e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff582d4c0c    44  ldur x4, [x4, #7]
0xffff582d4c10    48  cmp x3, x4
0xffff582d4c14    52  b.ne #+0x2c (addr 0xffff582d4c40)
0xffff582d4c18    56  ldr x5, pc+88 (addr 0x0000ffff582d4c70)    ;; object: 0x22535ca9 WeakCell for 0x32b35f81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d4c1c    60  ldur x5, [x5, #7]
0xffff582d4c20    64  tbz w5, #0, #+0x20 (addr 0xffff582d4c40)
0xffff582d4c24    68  ldursw x4, [x5, #15]
0xffff582d4c28    72  tbnz w4, #23, #+0x18 (addr 0xffff582d4c40)
0xffff582d4c2c    76  ldr x4, [jssp], #8
0xffff582d4c30    80  ldr x3, [jssp], #8
0xffff582d4c34    84  ldr x2, pc+68 (addr 0x0000ffff582d4c78)    ;; object: 0x2250d249 <String[5]: atime>
0xffff582d4c38    88  ldr x16, pc+72 (addr 0x0000ffff582d4c80)    ;; code: HANDLER, StoreTransitionStub, minor: 198669
0xffff582d4c3c    92  br x16
0xffff582d4c40    96  ldr x2, pc+72 (addr 0x0000ffff582d4c88)    ;; object: 0x2250d249 <String[5]: atime>
0xffff582d4c44   100  ldr x4, [jssp], #8
0xffff582d4c48   104  ldr x3, [jssp], #8
0xffff582d4c4c   108  ldr x16, pc+68 (addr 0x0000ffff582d4c90)    ;; code: BUILTIN
0xffff582d4c50   112  br x16
0xffff582d4c54   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582d4c58   120  d63f03e0       constant
0xffff582d4c5c   124  d503201f       constant
0xffff582d4c60   128  225352e9       constant
0xffff582d4c64   132  00000000       constant
0xffff582d4c68   136  22534909       constant
0xffff582d4c6c   140  00000000       constant
0xffff582d4c70   144  22535ca9       constant
0xffff582d4c74   148  00000000       constant
0xffff582d4c78   152  2250d249       constant
0xffff582d4c7c   156  00000000       constant
0xffff582d4c80   160  582d4aa0       constant
0xffff582d4c84   164  0000ffff       constant
0xffff582d4c88   168  2250d249       constant
0xffff582d4c8c   172  00000000       constant
0xffff582d4c90   176  58222420       constant
0xffff582d4c94   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582d4bf0  embedded object  (0x225352e9 Cell for 0)
0xffff582d4c08  embedded object  (0x22534909 WeakCell for 0x32b07e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff582d4c18  embedded object  (0x22535ca9 WeakCell for 0x32b35f81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d4c34  embedded object  (0x2250d249 <String[5]: atime>)
0xffff582d4c38  code target (HANDLER)  (0xffff582d4aa0)
0xffff582d4c40  embedded object  (0x2250d249 <String[5]: atime>)
0xffff582d4c4c  code target (BUILTIN)  (0xffff58222420)
0xffff582d4c54  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582d4d00     0  tbz w0, #0, #+0x90 (addr 0xffff582d4d90)
0xffff582d4d04     4  mov x2, x0
0xffff582d4d08     8  stur x2, [x1, #111]
0xffff582d4d0c    12  add x3, x1, #0x6f (111)
0xffff582d4d10    16  and x2, x2, #0xfffffffffff00000
0xffff582d4d14    20  ldr x2, [x2, #8]
0xffff582d4d18    24  tbz w2, #1, #+0x24 (addr 0xffff582d4d3c)
0xffff582d4d1c    28  and x2, x1, #0xfffffffffff00000
0xffff582d4d20    32  ldr x2, [x2, #8]
0xffff582d4d24    36  tbz w2, #2, #+0x18 (addr 0xffff582d4d3c)
0xffff582d4d28    40  sub csp, jssp, #0x8 (8)
0xffff582d4d2c    44  str lr, [jssp, #-8]!
0xffff582d4d30    48  ldr x16, pc+80 (addr 0x0000ffff582d4d80)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582d4d34    52  blr x16
0xffff582d4d38    56  ldr lr, [jssp], #8
0xffff582d4d3c    60  stur x5, [x1, #-1]
0xffff582d4d40    64  tbz w5, #0, #+0x34 (addr 0xffff582d4d74)
0xffff582d4d44    68  sub x2, x1, #0x1 (1)
0xffff582d4d48    72  and x5, x5, #0xfffffffffff00000
0xffff582d4d4c    76  ldr x5, [x5, #8]
0xffff582d4d50    80  tbz w5, #1, #+0x24 (addr 0xffff582d4d74)
0xffff582d4d54    84  and x5, x1, #0xfffffffffff00000
0xffff582d4d58    88  ldr x5, [x5, #8]
0xffff582d4d5c    92  tbz w5, #2, #+0x18 (addr 0xffff582d4d74)
0xffff582d4d60    96  sub csp, jssp, #0x8 (8)
0xffff582d4d64   100  str lr, [jssp, #-8]!
0xffff582d4d68   104  ldr x16, pc+32 (addr 0x0000ffff582d4d88)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4d6c   108  blr x16
0xffff582d4d70   112  ldr lr, [jssp], #8
0xffff582d4d74   116  ret
0xffff582d4d78   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582d4d7c   124  d63f03e0       constant
0xffff582d4d80   128  582170c0       constant
0xffff582d4d84   132  0000ffff       constant
0xffff582d4d88   136  58238080       constant
0xffff582d4d8c   140  0000ffff       constant
0xffff582d4d90   144  movz x16, #0x0
0xffff582d4d94   148  sub csp, jssp, #0x10 (16)
0xffff582d4d98   152  stp fp, lr, [jssp, #-16]!
0xffff582d4d9c   156  bl #+0x4 (addr 0xffff582d4da0)
0xffff582d4da0   160  movz x17, #0xa00000000
0xffff582d4da4   164  sub csp, jssp, #0x10 (16)
0xffff582d4da8   168  stp x17, cp, [jssp, #-16]!
0xffff582d4dac   172  add fp, jssp, #0x10 (16)
0xffff582d4db0   176  ldr x17, pc+24 (addr 0x0000ffff582d4dc8)    ;; lazy deoptimization bailout 0
0xffff582d4db4   180  add x17, x17, x16
0xffff582d4db8   184  br x17
0xffff582d4dbc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d4dc0   192  d63f03e0       constant
0xffff582d4dc4   196  d503201f       constant
0xffff582d4dc8   200  58006000       constant
0xffff582d4dcc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582d4d30  code target (STUB)  (0xffff582170c0)
0xffff582d4d68  code target (STUB)  (0xffff58238080)
0xffff582d4d78  constant pool (size 24)
0xffff582d4db0  runtime entry
0xffff582d4dbc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582d4d00     0  tbz w0, #0, #+0x90 (addr 0xffff582d4d90)
0xffff582d4d04     4  mov x2, x0
0xffff582d4d08     8  stur x2, [x1, #111]
0xffff582d4d0c    12  add x3, x1, #0x6f (111)
0xffff582d4d10    16  and x2, x2, #0xfffffffffff00000
0xffff582d4d14    20  ldr x2, [x2, #8]
0xffff582d4d18    24  tbz w2, #1, #+0x24 (addr 0xffff582d4d3c)
0xffff582d4d1c    28  and x2, x1, #0xfffffffffff00000
0xffff582d4d20    32  ldr x2, [x2, #8]
0xffff582d4d24    36  tbz w2, #2, #+0x18 (addr 0xffff582d4d3c)
0xffff582d4d28    40  sub csp, jssp, #0x8 (8)
0xffff582d4d2c    44  str lr, [jssp, #-8]!
0xffff582d4d30    48  ldr x16, pc+80 (addr 0x0000ffff582d4d80)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582d4d34    52  blr x16
0xffff582d4d38    56  ldr lr, [jssp], #8
0xffff582d4d3c    60  stur x5, [x1, #-1]
0xffff582d4d40    64  tbz w5, #0, #+0x34 (addr 0xffff582d4d74)
0xffff582d4d44    68  sub x2, x1, #0x1 (1)
0xffff582d4d48    72  and x5, x5, #0xfffffffffff00000
0xffff582d4d4c    76  ldr x5, [x5, #8]
0xffff582d4d50    80  tbz w5, #1, #+0x24 (addr 0xffff582d4d74)
0xffff582d4d54    84  and x5, x1, #0xfffffffffff00000
0xffff582d4d58    88  ldr x5, [x5, #8]
0xffff582d4d5c    92  tbz w5, #2, #+0x18 (addr 0xffff582d4d74)
0xffff582d4d60    96  sub csp, jssp, #0x8 (8)
0xffff582d4d64   100  str lr, [jssp, #-8]!
0xffff582d4d68   104  ldr x16, pc+32 (addr 0x0000ffff582d4d88)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4d6c   108  blr x16
0xffff582d4d70   112  ldr lr, [jssp], #8
0xffff582d4d74   116  ret
0xffff582d4d78   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582d4d7c   124  d63f03e0       constant
0xffff582d4d80   128  582170c0       constant
0xffff582d4d84   132  0000ffff       constant
0xffff582d4d88   136  58238080       constant
0xffff582d4d8c   140  0000ffff       constant
0xffff582d4d90   144  movz x16, #0x0
0xffff582d4d94   148  sub csp, jssp, #0x10 (16)
0xffff582d4d98   152  stp fp, lr, [jssp, #-16]!
0xffff582d4d9c   156  bl #+0x4 (addr 0xffff582d4da0)
0xffff582d4da0   160  movz x17, #0xa00000000
0xffff582d4da4   164  sub csp, jssp, #0x10 (16)
0xffff582d4da8   168  stp x17, cp, [jssp, #-16]!
0xffff582d4dac   172  add fp, jssp, #0x10 (16)
0xffff582d4db0   176  ldr x17, pc+24 (addr 0x0000ffff582d4dc8)    ;; lazy deoptimization bailout 0
0xffff582d4db4   180  add x17, x17, x16
0xffff582d4db8   184  br x17
0xffff582d4dbc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d4dc0   192  d63f03e0       constant
0xffff582d4dc4   196  d503201f       constant
0xffff582d4dc8   200  58006000       constant
0xffff582d4dcc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582d4d30  code target (STUB)  (0xffff582170c0)
0xffff582d4d68  code target (STUB)  (0xffff58238080)
0xffff582d4d78  constant pool (size 24)
0xffff582d4db0  runtime entry
0xffff582d4dbc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = mtime
compiler = unknown
Instructions (size = 184)
0xffff582d4e40     0  sub csp, jssp, #0x8 (8)
0xffff582d4e44     4  str x3, [jssp, #-8]!
0xffff582d4e48     8  sub csp, jssp, #0x8 (8)
0xffff582d4e4c    12  str x4, [jssp, #-8]!
0xffff582d4e50    16  ldr x3, pc+112 (addr 0x0000ffff582d4ec0)    ;; object: 0x225352e9 Cell for 0
0xffff582d4e54    20  ldur x3, [x3, #7]
0xffff582d4e58    24  cmp x3, #0x0 (0)
0xffff582d4e5c    28  b.ne #+0x44 (addr 0xffff582d4ea0)
0xffff582d4e60    32  tbz w0, #0, #+0x40 (addr 0xffff582d4ea0)
0xffff582d4e64    36  ldur x3, [x0, #-1]
0xffff582d4e68    40  ldr x4, pc+96 (addr 0x0000ffff582d4ec8)    ;; object: 0x22534909 WeakCell for 0x32b07e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff582d4e6c    44  ldur x4, [x4, #7]
0xffff582d4e70    48  cmp x3, x4
0xffff582d4e74    52  b.ne #+0x2c (addr 0xffff582d4ea0)
0xffff582d4e78    56  ldr x5, pc+88 (addr 0x0000ffff582d4ed0)    ;; object: 0x22535d99 WeakCell for 0x32b35fd9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d4e7c    60  ldur x5, [x5, #7]
0xffff582d4e80    64  tbz w5, #0, #+0x20 (addr 0xffff582d4ea0)
0xffff582d4e84    68  ldursw x4, [x5, #15]
0xffff582d4e88    72  tbnz w4, #23, #+0x18 (addr 0xffff582d4ea0)
0xffff582d4e8c    76  ldr x4, [jssp], #8
0xffff582d4e90    80  ldr x3, [jssp], #8
0xffff582d4e94    84  ldr x2, pc+68 (addr 0x0000ffff582d4ed8)    ;; object: 0x2250d269 <String[5]: mtime>
0xffff582d4e98    88  ldr x16, pc+72 (addr 0x0000ffff582d4ee0)    ;; code: HANDLER, StoreTransitionStub, minor: 198670
0xffff582d4e9c    92  br x16
0xffff582d4ea0    96  ldr x2, pc+72 (addr 0x0000ffff582d4ee8)    ;; object: 0x2250d269 <String[5]: mtime>
0xffff582d4ea4   100  ldr x4, [jssp], #8
0xffff582d4ea8   104  ldr x3, [jssp], #8
0xffff582d4eac   108  ldr x16, pc+68 (addr 0x0000ffff582d4ef0)    ;; code: BUILTIN
0xffff582d4eb0   112  br x16
0xffff582d4eb4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582d4eb8   120  d63f03e0       constant
0xffff582d4ebc   124  d503201f       constant
0xffff582d4ec0   128  225352e9       constant
0xffff582d4ec4   132  00000000       constant
0xffff582d4ec8   136  22534909       constant
0xffff582d4ecc   140  00000000       constant
0xffff582d4ed0   144  22535d99       constant
0xffff582d4ed4   148  00000000       constant
0xffff582d4ed8   152  2250d269       constant
0xffff582d4edc   156  00000000       constant
0xffff582d4ee0   160  582d4d00       constant
0xffff582d4ee4   164  0000ffff       constant
0xffff582d4ee8   168  2250d269       constant
0xffff582d4eec   172  00000000       constant
0xffff582d4ef0   176  58222420       constant
0xffff582d4ef4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582d4e50  embedded object  (0x225352e9 Cell for 0)
0xffff582d4e68  embedded object  (0x22534909 WeakCell for 0x32b07e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff582d4e78  embedded object  (0x22535d99 WeakCell for 0x32b35fd9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d4e94  embedded object  (0x2250d269 <String[5]: mtime>)
0xffff582d4e98  code target (HANDLER)  (0xffff582d4d00)
0xffff582d4ea0  embedded object  (0x2250d269 <String[5]: mtime>)
0xffff582d4eac  code target (BUILTIN)  (0xffff58222420)
0xffff582d4eb4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582d4f60     0  tbz w0, #0, #+0x90 (addr 0xffff582d4ff0)
0xffff582d4f64     4  mov x2, x0
0xffff582d4f68     8  stur x2, [x1, #119]
0xffff582d4f6c    12  add x3, x1, #0x77 (119)
0xffff582d4f70    16  and x2, x2, #0xfffffffffff00000
0xffff582d4f74    20  ldr x2, [x2, #8]
0xffff582d4f78    24  tbz w2, #1, #+0x24 (addr 0xffff582d4f9c)
0xffff582d4f7c    28  and x2, x1, #0xfffffffffff00000
0xffff582d4f80    32  ldr x2, [x2, #8]
0xffff582d4f84    36  tbz w2, #2, #+0x18 (addr 0xffff582d4f9c)
0xffff582d4f88    40  sub csp, jssp, #0x8 (8)
0xffff582d4f8c    44  str lr, [jssp, #-8]!
0xffff582d4f90    48  ldr x16, pc+80 (addr 0x0000ffff582d4fe0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582d4f94    52  blr x16
0xffff582d4f98    56  ldr lr, [jssp], #8
0xffff582d4f9c    60  stur x5, [x1, #-1]
0xffff582d4fa0    64  tbz w5, #0, #+0x34 (addr 0xffff582d4fd4)
0xffff582d4fa4    68  sub x2, x1, #0x1 (1)
0xffff582d4fa8    72  and x5, x5, #0xfffffffffff00000
0xffff582d4fac    76  ldr x5, [x5, #8]
0xffff582d4fb0    80  tbz w5, #1, #+0x24 (addr 0xffff582d4fd4)
0xffff582d4fb4    84  and x5, x1, #0xfffffffffff00000
0xffff582d4fb8    88  ldr x5, [x5, #8]
0xffff582d4fbc    92  tbz w5, #2, #+0x18 (addr 0xffff582d4fd4)
0xffff582d4fc0    96  sub csp, jssp, #0x8 (8)
0xffff582d4fc4   100  str lr, [jssp, #-8]!
0xffff582d4fc8   104  ldr x16, pc+32 (addr 0x0000ffff582d4fe8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4fcc   108  blr x16
0xffff582d4fd0   112  ldr lr, [jssp], #8
0xffff582d4fd4   116  ret
0xffff582d4fd8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582d4fdc   124  d63f03e0       constant
0xffff582d4fe0   128  582170c0       constant
0xffff582d4fe4   132  0000ffff       constant
0xffff582d4fe8   136  58238080       constant
0xffff582d4fec   140  0000ffff       constant
0xffff582d4ff0   144  movz x16, #0x0
0xffff582d4ff4   148  sub csp, jssp, #0x10 (16)
0xffff582d4ff8   152  stp fp, lr, [jssp, #-16]!
0xffff582d4ffc   156  bl #+0x4 (addr 0xffff582d5000)
0xffff582d5000   160  movz x17, #0xa00000000
0xffff582d5004   164  sub csp, jssp, #0x10 (16)
0xffff582d5008   168  stp x17, cp, [jssp, #-16]!
0xffff582d500c   172  add fp, jssp, #0x10 (16)
0xffff582d5010   176  ldr x17, pc+24 (addr 0x0000ffff582d5028)    ;; lazy deoptimization bailout 0
0xffff582d5014   180  add x17, x17, x16
0xffff582d5018   184  br x17
0xffff582d501c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d5020   192  d63f03e0       constant
0xffff582d5024   196  d503201f       constant
0xffff582d5028   200  58006000       constant
0xffff582d502c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582d4f90  code target (STUB)  (0xffff582170c0)
0xffff582d4fc8  code target (STUB)  (0xffff58238080)
0xffff582d4fd8  constant pool (size 24)
0xffff582d5010  runtime entry
0xffff582d501c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582d4f60     0  tbz w0, #0, #+0x90 (addr 0xffff582d4ff0)
0xffff582d4f64     4  mov x2, x0
0xffff582d4f68     8  stur x2, [x1, #119]
0xffff582d4f6c    12  add x3, x1, #0x77 (119)
0xffff582d4f70    16  and x2, x2, #0xfffffffffff00000
0xffff582d4f74    20  ldr x2, [x2, #8]
0xffff582d4f78    24  tbz w2, #1, #+0x24 (addr 0xffff582d4f9c)
0xffff582d4f7c    28  and x2, x1, #0xfffffffffff00000
0xffff582d4f80    32  ldr x2, [x2, #8]
0xffff582d4f84    36  tbz w2, #2, #+0x18 (addr 0xffff582d4f9c)
0xffff582d4f88    40  sub csp, jssp, #0x8 (8)
0xffff582d4f8c    44  str lr, [jssp, #-8]!
0xffff582d4f90    48  ldr x16, pc+80 (addr 0x0000ffff582d4fe0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582d4f94    52  blr x16
0xffff582d4f98    56  ldr lr, [jssp], #8
0xffff582d4f9c    60  stur x5, [x1, #-1]
0xffff582d4fa0    64  tbz w5, #0, #+0x34 (addr 0xffff582d4fd4)
0xffff582d4fa4    68  sub x2, x1, #0x1 (1)
0xffff582d4fa8    72  and x5, x5, #0xfffffffffff00000
0xffff582d4fac    76  ldr x5, [x5, #8]
0xffff582d4fb0    80  tbz w5, #1, #+0x24 (addr 0xffff582d4fd4)
0xffff582d4fb4    84  and x5, x1, #0xfffffffffff00000
0xffff582d4fb8    88  ldr x5, [x5, #8]
0xffff582d4fbc    92  tbz w5, #2, #+0x18 (addr 0xffff582d4fd4)
0xffff582d4fc0    96  sub csp, jssp, #0x8 (8)
0xffff582d4fc4   100  str lr, [jssp, #-8]!
0xffff582d4fc8   104  ldr x16, pc+32 (addr 0x0000ffff582d4fe8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d4fcc   108  blr x16
0xffff582d4fd0   112  ldr lr, [jssp], #8
0xffff582d4fd4   116  ret
0xffff582d4fd8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582d4fdc   124  d63f03e0       constant
0xffff582d4fe0   128  582170c0       constant
0xffff582d4fe4   132  0000ffff       constant
0xffff582d4fe8   136  58238080       constant
0xffff582d4fec   140  0000ffff       constant
0xffff582d4ff0   144  movz x16, #0x0
0xffff582d4ff4   148  sub csp, jssp, #0x10 (16)
0xffff582d4ff8   152  stp fp, lr, [jssp, #-16]!
0xffff582d4ffc   156  bl #+0x4 (addr 0xffff582d5000)
0xffff582d5000   160  movz x17, #0xa00000000
0xffff582d5004   164  sub csp, jssp, #0x10 (16)
0xffff582d5008   168  stp x17, cp, [jssp, #-16]!
0xffff582d500c   172  add fp, jssp, #0x10 (16)
0xffff582d5010   176  ldr x17, pc+24 (addr 0x0000ffff582d5028)    ;; lazy deoptimization bailout 0
0xffff582d5014   180  add x17, x17, x16
0xffff582d5018   184  br x17
0xffff582d501c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d5020   192  d63f03e0       constant
0xffff582d5024   196  d503201f       constant
0xffff582d5028   200  58006000       constant
0xffff582d502c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582d4f90  code target (STUB)  (0xffff582170c0)
0xffff582d4fc8  code target (STUB)  (0xffff58238080)
0xffff582d4fd8  constant pool (size 24)
0xffff582d5010  runtime entry
0xffff582d501c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = ctime
compiler = unknown
Instructions (size = 184)
0xffff582d50a0     0  sub csp, jssp, #0x8 (8)
0xffff582d50a4     4  str x3, [jssp, #-8]!
0xffff582d50a8     8  sub csp, jssp, #0x8 (8)
0xffff582d50ac    12  str x4, [jssp, #-8]!
0xffff582d50b0    16  ldr x3, pc+112 (addr 0x0000ffff582d5120)    ;; object: 0x225352e9 Cell for 0
0xffff582d50b4    20  ldur x3, [x3, #7]
0xffff582d50b8    24  cmp x3, #0x0 (0)
0xffff582d50bc    28  b.ne #+0x44 (addr 0xffff582d5100)
0xffff582d50c0    32  tbz w0, #0, #+0x40 (addr 0xffff582d5100)
0xffff582d50c4    36  ldur x3, [x0, #-1]
0xffff582d50c8    40  ldr x4, pc+96 (addr 0x0000ffff582d5128)    ;; object: 0x22534909 WeakCell for 0x32b07e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff582d50cc    44  ldur x4, [x4, #7]
0xffff582d50d0    48  cmp x3, x4
0xffff582d50d4    52  b.ne #+0x2c (addr 0xffff582d5100)
0xffff582d50d8    56  ldr x5, pc+88 (addr 0x0000ffff582d5130)    ;; object: 0x22535e89 WeakCell for 0x32b36031 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d50dc    60  ldur x5, [x5, #7]
0xffff582d50e0    64  tbz w5, #0, #+0x20 (addr 0xffff582d5100)
0xffff582d50e4    68  ldursw x4, [x5, #15]
0xffff582d50e8    72  tbnz w4, #23, #+0x18 (addr 0xffff582d5100)
0xffff582d50ec    76  ldr x4, [jssp], #8
0xffff582d50f0    80  ldr x3, [jssp], #8
0xffff582d50f4    84  ldr x2, pc+68 (addr 0x0000ffff582d5138)    ;; object: 0x2250d289 <String[5]: ctime>
0xffff582d50f8    88  ldr x16, pc+72 (addr 0x0000ffff582d5140)    ;; code: HANDLER, StoreTransitionStub, minor: 198671
0xffff582d50fc    92  br x16
0xffff582d5100    96  ldr x2, pc+72 (addr 0x0000ffff582d5148)    ;; object: 0x2250d289 <String[5]: ctime>
0xffff582d5104   100  ldr x4, [jssp], #8
0xffff582d5108   104  ldr x3, [jssp], #8
0xffff582d510c   108  ldr x16, pc+68 (addr 0x0000ffff582d5150)    ;; code: BUILTIN
0xffff582d5110   112  br x16
0xffff582d5114   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582d5118   120  d63f03e0       constant
0xffff582d511c   124  d503201f       constant
0xffff582d5120   128  225352e9       constant
0xffff582d5124   132  00000000       constant
0xffff582d5128   136  22534909       constant
0xffff582d512c   140  00000000       constant
0xffff582d5130   144  22535e89       constant
0xffff582d5134   148  00000000       constant
0xffff582d5138   152  2250d289       constant
0xffff582d513c   156  00000000       constant
0xffff582d5140   160  582d4f60       constant
0xffff582d5144   164  0000ffff       constant
0xffff582d5148   168  2250d289       constant
0xffff582d514c   172  00000000       constant
0xffff582d5150   176  58222420       constant
0xffff582d5154   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582d50b0  embedded object  (0x225352e9 Cell for 0)
0xffff582d50c8  embedded object  (0x22534909 WeakCell for 0x32b07e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff582d50d8  embedded object  (0x22535e89 WeakCell for 0x32b36031 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d50f4  embedded object  (0x2250d289 <String[5]: ctime>)
0xffff582d50f8  code target (HANDLER)  (0xffff582d4f60)
0xffff582d5100  embedded object  (0x2250d289 <String[5]: ctime>)
0xffff582d510c  code target (BUILTIN)  (0xffff58222420)
0xffff582d5114  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582d51c0     0  tbz w0, #0, #+0x90 (addr 0xffff582d5250)
0xffff582d51c4     4  mov x2, x0
0xffff582d51c8     8  stur x2, [x1, #127]
0xffff582d51cc    12  add x3, x1, #0x7f (127)
0xffff582d51d0    16  and x2, x2, #0xfffffffffff00000
0xffff582d51d4    20  ldr x2, [x2, #8]
0xffff582d51d8    24  tbz w2, #1, #+0x24 (addr 0xffff582d51fc)
0xffff582d51dc    28  and x2, x1, #0xfffffffffff00000
0xffff582d51e0    32  ldr x2, [x2, #8]
0xffff582d51e4    36  tbz w2, #2, #+0x18 (addr 0xffff582d51fc)
0xffff582d51e8    40  sub csp, jssp, #0x8 (8)
0xffff582d51ec    44  str lr, [jssp, #-8]!
0xffff582d51f0    48  ldr x16, pc+80 (addr 0x0000ffff582d5240)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582d51f4    52  blr x16
0xffff582d51f8    56  ldr lr, [jssp], #8
0xffff582d51fc    60  stur x5, [x1, #-1]
0xffff582d5200    64  tbz w5, #0, #+0x34 (addr 0xffff582d5234)
0xffff582d5204    68  sub x2, x1, #0x1 (1)
0xffff582d5208    72  and x5, x5, #0xfffffffffff00000
0xffff582d520c    76  ldr x5, [x5, #8]
0xffff582d5210    80  tbz w5, #1, #+0x24 (addr 0xffff582d5234)
0xffff582d5214    84  and x5, x1, #0xfffffffffff00000
0xffff582d5218    88  ldr x5, [x5, #8]
0xffff582d521c    92  tbz w5, #2, #+0x18 (addr 0xffff582d5234)
0xffff582d5220    96  sub csp, jssp, #0x8 (8)
0xffff582d5224   100  str lr, [jssp, #-8]!
0xffff582d5228   104  ldr x16, pc+32 (addr 0x0000ffff582d5248)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d522c   108  blr x16
0xffff582d5230   112  ldr lr, [jssp], #8
0xffff582d5234   116  ret
0xffff582d5238   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582d523c   124  d63f03e0       constant
0xffff582d5240   128  582170c0       constant
0xffff582d5244   132  0000ffff       constant
0xffff582d5248   136  58238080       constant
0xffff582d524c   140  0000ffff       constant
0xffff582d5250   144  movz x16, #0x0
0xffff582d5254   148  sub csp, jssp, #0x10 (16)
0xffff582d5258   152  stp fp, lr, [jssp, #-16]!
0xffff582d525c   156  bl #+0x4 (addr 0xffff582d5260)
0xffff582d5260   160  movz x17, #0xa00000000
0xffff582d5264   164  sub csp, jssp, #0x10 (16)
0xffff582d5268   168  stp x17, cp, [jssp, #-16]!
0xffff582d526c   172  add fp, jssp, #0x10 (16)
0xffff582d5270   176  ldr x17, pc+24 (addr 0x0000ffff582d5288)    ;; lazy deoptimization bailout 0
0xffff582d5274   180  add x17, x17, x16
0xffff582d5278   184  br x17
0xffff582d527c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d5280   192  d63f03e0       constant
0xffff582d5284   196  d503201f       constant
0xffff582d5288   200  58006000       constant
0xffff582d528c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582d51f0  code target (STUB)  (0xffff582170c0)
0xffff582d5228  code target (STUB)  (0xffff58238080)
0xffff582d5238  constant pool (size 24)
0xffff582d5270  runtime entry
0xffff582d527c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582d51c0     0  tbz w0, #0, #+0x90 (addr 0xffff582d5250)
0xffff582d51c4     4  mov x2, x0
0xffff582d51c8     8  stur x2, [x1, #127]
0xffff582d51cc    12  add x3, x1, #0x7f (127)
0xffff582d51d0    16  and x2, x2, #0xfffffffffff00000
0xffff582d51d4    20  ldr x2, [x2, #8]
0xffff582d51d8    24  tbz w2, #1, #+0x24 (addr 0xffff582d51fc)
0xffff582d51dc    28  and x2, x1, #0xfffffffffff00000
0xffff582d51e0    32  ldr x2, [x2, #8]
0xffff582d51e4    36  tbz w2, #2, #+0x18 (addr 0xffff582d51fc)
0xffff582d51e8    40  sub csp, jssp, #0x8 (8)
0xffff582d51ec    44  str lr, [jssp, #-8]!
0xffff582d51f0    48  ldr x16, pc+80 (addr 0x0000ffff582d5240)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582d51f4    52  blr x16
0xffff582d51f8    56  ldr lr, [jssp], #8
0xffff582d51fc    60  stur x5, [x1, #-1]
0xffff582d5200    64  tbz w5, #0, #+0x34 (addr 0xffff582d5234)
0xffff582d5204    68  sub x2, x1, #0x1 (1)
0xffff582d5208    72  and x5, x5, #0xfffffffffff00000
0xffff582d520c    76  ldr x5, [x5, #8]
0xffff582d5210    80  tbz w5, #1, #+0x24 (addr 0xffff582d5234)
0xffff582d5214    84  and x5, x1, #0xfffffffffff00000
0xffff582d5218    88  ldr x5, [x5, #8]
0xffff582d521c    92  tbz w5, #2, #+0x18 (addr 0xffff582d5234)
0xffff582d5220    96  sub csp, jssp, #0x8 (8)
0xffff582d5224   100  str lr, [jssp, #-8]!
0xffff582d5228   104  ldr x16, pc+32 (addr 0x0000ffff582d5248)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582d522c   108  blr x16
0xffff582d5230   112  ldr lr, [jssp], #8
0xffff582d5234   116  ret
0xffff582d5238   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582d523c   124  d63f03e0       constant
0xffff582d5240   128  582170c0       constant
0xffff582d5244   132  0000ffff       constant
0xffff582d5248   136  58238080       constant
0xffff582d524c   140  0000ffff       constant
0xffff582d5250   144  movz x16, #0x0
0xffff582d5254   148  sub csp, jssp, #0x10 (16)
0xffff582d5258   152  stp fp, lr, [jssp, #-16]!
0xffff582d525c   156  bl #+0x4 (addr 0xffff582d5260)
0xffff582d5260   160  movz x17, #0xa00000000
0xffff582d5264   164  sub csp, jssp, #0x10 (16)
0xffff582d5268   168  stp x17, cp, [jssp, #-16]!
0xffff582d526c   172  add fp, jssp, #0x10 (16)
0xffff582d5270   176  ldr x17, pc+24 (addr 0x0000ffff582d5288)    ;; lazy deoptimization bailout 0
0xffff582d5274   180  add x17, x17, x16
0xffff582d5278   184  br x17
0xffff582d527c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d5280   192  d63f03e0       constant
0xffff582d5284   196  d503201f       constant
0xffff582d5288   200  58006000       constant
0xffff582d528c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582d51f0  code target (STUB)  (0xffff582170c0)
0xffff582d5228  code target (STUB)  (0xffff58238080)
0xffff582d5238  constant pool (size 24)
0xffff582d5270  runtime entry
0xffff582d527c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = birthtime
compiler = unknown
Instructions (size = 184)
0xffff582d5300     0  sub csp, jssp, #0x8 (8)
0xffff582d5304     4  str x3, [jssp, #-8]!
0xffff582d5308     8  sub csp, jssp, #0x8 (8)
0xffff582d530c    12  str x4, [jssp, #-8]!
0xffff582d5310    16  ldr x3, pc+112 (addr 0x0000ffff582d5380)    ;; object: 0x225352e9 Cell for 0
0xffff582d5314    20  ldur x3, [x3, #7]
0xffff582d5318    24  cmp x3, #0x0 (0)
0xffff582d531c    28  b.ne #+0x44 (addr 0xffff582d5360)
0xffff582d5320    32  tbz w0, #0, #+0x40 (addr 0xffff582d5360)
0xffff582d5324    36  ldur x3, [x0, #-1]
0xffff582d5328    40  ldr x4, pc+96 (addr 0x0000ffff582d5388)    ;; object: 0x22534909 WeakCell for 0x32b07e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff582d532c    44  ldur x4, [x4, #7]
0xffff582d5330    48  cmp x3, x4
0xffff582d5334    52  b.ne #+0x2c (addr 0xffff582d5360)
0xffff582d5338    56  ldr x5, pc+88 (addr 0x0000ffff582d5390)    ;; object: 0x22535f79 WeakCell for 0x32b36089 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d533c    60  ldur x5, [x5, #7]
0xffff582d5340    64  tbz w5, #0, #+0x20 (addr 0xffff582d5360)
0xffff582d5344    68  ldursw x4, [x5, #15]
0xffff582d5348    72  tbnz w4, #23, #+0x18 (addr 0xffff582d5360)
0xffff582d534c    76  ldr x4, [jssp], #8
0xffff582d5350    80  ldr x3, [jssp], #8
0xffff582d5354    84  ldr x2, pc+68 (addr 0x0000ffff582d5398)    ;; object: 0x2250d2a9 <String[9]: birthtime>
0xffff582d5358    88  ldr x16, pc+72 (addr 0x0000ffff582d53a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198672
0xffff582d535c    92  br x16
0xffff582d5360    96  ldr x2, pc+72 (addr 0x0000ffff582d53a8)    ;; object: 0x2250d2a9 <String[9]: birthtime>
0xffff582d5364   100  ldr x4, [jssp], #8
0xffff582d5368   104  ldr x3, [jssp], #8
0xffff582d536c   108  ldr x16, pc+68 (addr 0x0000ffff582d53b0)    ;; code: BUILTIN
0xffff582d5370   112  br x16
0xffff582d5374   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582d5378   120  d63f03e0       constant
0xffff582d537c   124  d503201f       constant
0xffff582d5380   128  225352e9       constant
0xffff582d5384   132  00000000       constant
0xffff582d5388   136  22534909       constant
0xffff582d538c   140  00000000       constant
0xffff582d5390   144  22535f79       constant
0xffff582d5394   148  00000000       constant
0xffff582d5398   152  2250d2a9       constant
0xffff582d539c   156  00000000       constant
0xffff582d53a0   160  582d51c0       constant
0xffff582d53a4   164  0000ffff       constant
0xffff582d53a8   168  2250d2a9       constant
0xffff582d53ac   172  00000000       constant
0xffff582d53b0   176  58222420       constant
0xffff582d53b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582d5310  embedded object  (0x225352e9 Cell for 0)
0xffff582d5328  embedded object  (0x22534909 WeakCell for 0x32b07e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff582d5338  embedded object  (0x22535f79 WeakCell for 0x32b36089 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d5354  embedded object  (0x2250d2a9 <String[9]: birthtime>)
0xffff582d5358  code target (HANDLER)  (0xffff582d51c0)
0xffff582d5360  embedded object  (0x2250d2a9 <String[9]: birthtime>)
0xffff582d536c  code target (BUILTIN)  (0xffff58222420)
0xffff582d5374  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = isSymbolicLink
compiler = unknown
Instructions (size = 120)
0xffff582d5420     0  sub csp, jssp, #0x8 (8)
0xffff582d5424     4  str x3, [jssp, #-8]!
0xffff582d5428     8  sub csp, jssp, #0x8 (8)
0xffff582d542c    12  str x0, [jssp, #-8]!
0xffff582d5430    16  ldr x0, pc+72 (addr 0x0000ffff582d5478)    ;; object: 0x225352e9 Cell for 0
0xffff582d5434    20  ldur x0, [x0, #7]
0xffff582d5438    24  cmp x0, #0x0 (0)
0xffff582d543c    28  b.ne #+0x14 (addr 0xffff582d5450)
0xffff582d5440    32  ldr x3, pc+64 (addr 0x0000ffff582d5480)    ;; object: 0x22536069 WeakCell for 0x25ff2831 <an Object with map 0x32b320f1>
0xffff582d5444    36  ldur x3, [x3, #7]
0xffff582d5448    40  tbz w3, #0, #+0x8 (addr 0xffff582d5450)
0xffff582d544c    44  b #+0x14 (addr 0xffff582d5460)
0xffff582d5450    48  ldr x0, [jssp], #8
0xffff582d5454    52  ldr x3, [jssp], #8
0xffff582d5458    56  ldr x16, pc+48 (addr 0x0000ffff582d5488)    ;; code: BUILTIN
0xffff582d545c    60  br x16
0xffff582d5460    64  add jssp, jssp, #0x10 (16)
0xffff582d5464    68  mov x1, x3
0xffff582d5468    72  ldr x16, pc+40 (addr 0x0000ffff582d5490)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff582d546c    76  br x16
0xffff582d5470    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582d5474    84  d63f03e0       constant
0xffff582d5478    88  225352e9       constant
0xffff582d547c    92  00000000       constant
0xffff582d5480    96  22536069       constant
0xffff582d5484   100  00000000       constant
0xffff582d5488   104  582222e0       constant
0xffff582d548c   108  0000ffff       constant
0xffff582d5490   112  5828b020       constant
0xffff582d5494   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582d5430  embedded object  (0x225352e9 Cell for 0)
0xffff582d5440  embedded object  (0x22536069 WeakCell for 0x25ff2831 <an Object with map 0x32b320f1>)
0xffff582d5458  code target (BUILTIN)  (0xffff582222e0)
0xffff582d5468  code target (HANDLER)  (0xffff5828b020)
0xffff582d5470  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _checkModeProperty
compiler = unknown
Instructions (size = 120)
0xffff582d5500     0  sub csp, jssp, #0x8 (8)
0xffff582d5504     4  str x3, [jssp, #-8]!
0xffff582d5508     8  sub csp, jssp, #0x8 (8)
0xffff582d550c    12  str x0, [jssp, #-8]!
0xffff582d5510    16  ldr x0, pc+72 (addr 0x0000ffff582d5558)    ;; object: 0x225352e9 Cell for 0
0xffff582d5514    20  ldur x0, [x0, #7]
0xffff582d5518    24  cmp x0, #0x0 (0)
0xffff582d551c    28  b.ne #+0x14 (addr 0xffff582d5530)
0xffff582d5520    32  ldr x3, pc+64 (addr 0x0000ffff582d5560)    ;; object: 0x225360b9 WeakCell for 0x25ff2831 <an Object with map 0x32b320f1>
0xffff582d5524    36  ldur x3, [x3, #7]
0xffff582d5528    40  tbz w3, #0, #+0x8 (addr 0xffff582d5530)
0xffff582d552c    44  b #+0x14 (addr 0xffff582d5540)
0xffff582d5530    48  ldr x0, [jssp], #8
0xffff582d5534    52  ldr x3, [jssp], #8
0xffff582d5538    56  ldr x16, pc+48 (addr 0x0000ffff582d5568)    ;; code: BUILTIN
0xffff582d553c    60  br x16
0xffff582d5540    64  add jssp, jssp, #0x10 (16)
0xffff582d5544    68  mov x1, x3
0xffff582d5548    72  ldr x16, pc+40 (addr 0x0000ffff582d5570)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff582d554c    76  br x16
0xffff582d5550    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582d5554    84  d63f03e0       constant
0xffff582d5558    88  225352e9       constant
0xffff582d555c    92  00000000       constant
0xffff582d5560    96  225360b9       constant
0xffff582d5564   100  00000000       constant
0xffff582d5568   104  582222e0       constant
0xffff582d556c   108  0000ffff       constant
0xffff582d5570   112  58243300       constant
0xffff582d5574   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582d5510  embedded object  (0x225352e9 Cell for 0)
0xffff582d5520  embedded object  (0x225360b9 WeakCell for 0x25ff2831 <an Object with map 0x32b320f1>)
0xffff582d5538  code target (BUILTIN)  (0xffff582222e0)
0xffff582d5548  code target (HANDLER)  (0xffff58243300)
0xffff582d5550  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff582d55e0     0  ldur d0, [x1, #31]
0xffff582d55e4     4  movz x1, #0x92c0
0xffff582d55e8     8  movk x1, #0x16e7, lsl #16
0xffff582d55ec    12  ldp x2, x0, [x1]
0xffff582d55f0    16  adds x16, x2, #0x10 (16)
0xffff582d55f4    20  ccmp x16, x0, #nzCv, lo
0xffff582d55f8    24  b.hi #+0x20 (addr 0xffff582d5618)
0xffff582d55fc    28  str x16, [x1]
0xffff582d5600    32  ldr x1, [x26, #120]
0xffff582d5604    36  str x1, [x2]
0xffff582d5608    40  orr x2, x2, #0x1
0xffff582d560c    44  stur d0, [x2, #7]
0xffff582d5610    48  mov x0, x2
0xffff582d5614    52  ret
0xffff582d5618    56  sub csp, jssp, #0x10 (16)
0xffff582d561c    60  stp fp, lr, [jssp, #-16]!
0xffff582d5620    64  movz fp, #0xa00000000
0xffff582d5624    68  sub csp, jssp, #0x8 (8)
0xffff582d5628    72  str fp, [jssp, #-8]!
0xffff582d562c    76  add fp, jssp, #0x8 (8)
0xffff582d5630    80  movz x2, #0x0
0xffff582d5634    84  mov x16, lr
0xffff582d5638    88  ldr x17, pc+64 (addr 0x0000ffff582d5678)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582d563c    92  blr x17
0xffff582d5640    96  ldur cp, [fp, #-8]
0xffff582d5644   100  movz x0, #0x0
0xffff582d5648   104  movz x1, #0x4b48
0xffff582d564c   108  movk x1, #0xe4, lsl #16
0xffff582d5650   112  ldr x16, pc+48 (addr 0x0000ffff582d5680)    ;; code: STUB, CEntryStub, minor: 5
0xffff582d5654   116  blr x16
0xffff582d5658   120  str x0, [jssp, #16]
0xffff582d565c   124  ldr x16, pc+44 (addr 0x0000ffff582d5688)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582d5660   128  blr x16
0xffff582d5664   132  ldr lr, [jssp, #16]
0xffff582d5668   136  ldp xzr, fp, [jssp], #24
0xffff582d566c   140  b #-0x60 (addr 0xffff582d560c)
0xffff582d5670   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582d5674   148  d63f03e0       constant
0xffff582d5678   152  58206820       constant
0xffff582d567c   156  0000ffff       constant
0xffff582d5680   160  58206260       constant
0xffff582d5684   164  0000ffff       constant
0xffff582d5688   168  582068e0       constant
0xffff582d568c   172  0000ffff       constant


Safepoints (size = 21)
0xffff582d5658   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff582d5638  code target (STUB)  (0xffff58206820)
0xffff582d5650  code target (STUB)  (0xffff58206260)
0xffff582d565c  code target (STUB)  (0xffff582068e0)
0xffff582d5670  constant pool (size 32)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff582d55e0     0  ldur d0, [x1, #31]
0xffff582d55e4     4  movz x1, #0x92c0
0xffff582d55e8     8  movk x1, #0x16e7, lsl #16
0xffff582d55ec    12  ldp x2, x0, [x1]
0xffff582d55f0    16  adds x16, x2, #0x10 (16)
0xffff582d55f4    20  ccmp x16, x0, #nzCv, lo
0xffff582d55f8    24  b.hi #+0x20 (addr 0xffff582d5618)
0xffff582d55fc    28  str x16, [x1]
0xffff582d5600    32  ldr x1, [x26, #120]
0xffff582d5604    36  str x1, [x2]
0xffff582d5608    40  orr x2, x2, #0x1
0xffff582d560c    44  stur d0, [x2, #7]
0xffff582d5610    48  mov x0, x2
0xffff582d5614    52  ret
0xffff582d5618    56  sub csp, jssp, #0x10 (16)
0xffff582d561c    60  stp fp, lr, [jssp, #-16]!
0xffff582d5620    64  movz fp, #0xa00000000
0xffff582d5624    68  sub csp, jssp, #0x8 (8)
0xffff582d5628    72  str fp, [jssp, #-8]!
0xffff582d562c    76  add fp, jssp, #0x8 (8)
0xffff582d5630    80  movz x2, #0x0
0xffff582d5634    84  mov x16, lr
0xffff582d5638    88  ldr x17, pc+64 (addr 0x0000ffff582d5678)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582d563c    92  blr x17
0xffff582d5640    96  ldur cp, [fp, #-8]
0xffff582d5644   100  movz x0, #0x0
0xffff582d5648   104  movz x1, #0x4b48
0xffff582d564c   108  movk x1, #0xe4, lsl #16
0xffff582d5650   112  ldr x16, pc+48 (addr 0x0000ffff582d5680)    ;; code: STUB, CEntryStub, minor: 5
0xffff582d5654   116  blr x16
0xffff582d5658   120  str x0, [jssp, #16]
0xffff582d565c   124  ldr x16, pc+44 (addr 0x0000ffff582d5688)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582d5660   128  blr x16
0xffff582d5664   132  ldr lr, [jssp, #16]
0xffff582d5668   136  ldp xzr, fp, [jssp], #24
0xffff582d566c   140  b #-0x60 (addr 0xffff582d560c)
0xffff582d5670   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582d5674   148  d63f03e0       constant
0xffff582d5678   152  58206820       constant
0xffff582d567c   156  0000ffff       constant
0xffff582d5680   160  58206260       constant
0xffff582d5684   164  0000ffff       constant
0xffff582d5688   168  582068e0       constant
0xffff582d568c   172  0000ffff       constant


Safepoints (size = 21)
0xffff582d5658   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff582d5638  code target (STUB)  (0xffff58206820)
0xffff582d5650  code target (STUB)  (0xffff58206260)
0xffff582d565c  code target (STUB)  (0xffff582068e0)
0xffff582d5670  constant pool (size 32)


kind = HANDLER
major_key = <NoCache>Stub
name = set
compiler = unknown
Instructions (size = 120)
0xffff582d5720     0  sub csp, jssp, #0x8 (8)
0xffff582d5724     4  str x3, [jssp, #-8]!
0xffff582d5728     8  sub csp, jssp, #0x8 (8)
0xffff582d572c    12  str x0, [jssp, #-8]!
0xffff582d5730    16  ldr x0, pc+72 (addr 0x0000ffff582d5778)    ;; object: 0x22535189 Cell for 0
0xffff582d5734    20  ldur x0, [x0, #7]
0xffff582d5738    24  cmp x0, #0x0 (0)
0xffff582d573c    28  b.ne #+0x14 (addr 0xffff582d5750)
0xffff582d5740    32  ldr x3, pc+64 (addr 0x0000ffff582d5780)    ;; object: 0x22536141 WeakCell for 0x25f757c1 <an Object with map 0x32b11eb1>
0xffff582d5744    36  ldur x3, [x3, #7]
0xffff582d5748    40  tbz w3, #0, #+0x8 (addr 0xffff582d5750)
0xffff582d574c    44  b #+0x14 (addr 0xffff582d5760)
0xffff582d5750    48  ldr x0, [jssp], #8
0xffff582d5754    52  ldr x3, [jssp], #8
0xffff582d5758    56  ldr x16, pc+48 (addr 0x0000ffff582d5788)    ;; code: BUILTIN
0xffff582d575c    60  br x16
0xffff582d5760    64  add jssp, jssp, #0x10 (16)
0xffff582d5764    68  mov x1, x3
0xffff582d5768    72  ldr x16, pc+40 (addr 0x0000ffff582d5790)    ;; code: HANDLER, LoadConstantStub, minor: 4
0xffff582d576c    76  br x16
0xffff582d5770    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582d5774    84  d63f03e0       constant
0xffff582d5778    88  22535189       constant
0xffff582d577c    92  00000000       constant
0xffff582d5780    96  22536141       constant
0xffff582d5784   100  00000000       constant
0xffff582d5788   104  582222e0       constant
0xffff582d578c   108  0000ffff       constant
0xffff582d5790   112  58243480       constant
0xffff582d5794   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582d5730  embedded object  (0x22535189 Cell for 0)
0xffff582d5740  embedded object  (0x22536141 WeakCell for 0x25f757c1 <an Object with map 0x32b11eb1>)
0xffff582d5758  code target (BUILTIN)  (0xffff582222e0)
0xffff582d5768  code target (HANDLER)  (0xffff58243480)
0xffff582d5770  constant pool (size 40)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = STRING*STRING -> STRING
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 416)
0xffff582d5800     0  and x16, x0, x1
0xffff582d5804     4  tbz w16, #0, #+0xfc (addr 0xffff582d5900)
0xffff582d5808     8  ldur x11, [x1, #-1]
0xffff582d580c    12  ldur x10, [x0, #-1]
0xffff582d5810    16  ldrb w11, [x11, #11]
0xffff582d5814    20  ldrb w10, [x10, #11]
0xffff582d5818    24  orr x12, x11, x10
0xffff582d581c    28  tbnz w12, #7, #+0xe4 (addr 0xffff582d5900)
0xffff582d5820    32  cmp x1, x0
0xffff582d5824    36  b.ne #+0xc (addr 0xffff582d5830)
0xffff582d5828    40  movz x0, #0x0
0xffff582d582c    44  ret
0xffff582d5830    48  orr x12, x11, x10
0xffff582d5834    52  tbnz w12, #6, #+0x8 (addr 0xffff582d583c)
0xffff582d5838    56  ret
0xffff582d583c    60  movz x16, #0x87
0xffff582d5840    64  and x12, x11, x16
0xffff582d5844    68  movz x16, #0x87
0xffff582d5848    72  and x13, x10, x16
0xffff582d584c    76  cmp x12, #0x4 (4)
0xffff582d5850    80  ccmp x13, #4, #nzcv, eq
0xffff582d5854    84  b.ne #+0x5c (addr 0xffff582d58b0)
0xffff582d5858    88  ldur x10, [x1, #15]
0xffff582d585c    92  ldur x11, [x0, #15]
0xffff582d5860    96  cmp x10, x11
0xffff582d5864   100  b.eq #+0xc (addr 0xffff582d5870)
0xffff582d5868   104  movz x0, #0x100000000
0xffff582d586c   108  ret
0xffff582d5870   112  cbnz x10, #+0xc (addr 0xffff582d587c)
0xffff582d5874   116  movz x0, #0x0
0xffff582d5878   120  ret
0xffff582d587c   124  asr x10, x10, #32
0xffff582d5880   128  add x11, x10, #0x17 (23)
0xffff582d5884   132  add x1, x1, x11
0xffff582d5888   136  add x0, x0, x11
0xffff582d588c   140  neg x10, x10
0xffff582d5890   144  ldrb w11, [x1, x10]
0xffff582d5894   148  ldrb w12, [x0, x10]
0xffff582d5898   152  cmp x11, x12
0xffff582d589c   156  b.ne #-0x34 (addr 0xffff582d5868)
0xffff582d58a0   160  add x10, x10, #0x1 (1)
0xffff582d58a4   164  cbnz x10, #-0x14 (addr 0xffff582d5890)
0xffff582d58a8   168  movz x0, #0x0
0xffff582d58ac   172  ret
0xffff582d58b0   176  movz x16, #0xc00000000
0xffff582d58b4   180  sub csp, jssp, #0x10 (16)
0xffff582d58b8   184  stp fp, lr, [jssp, #-16]!
0xffff582d58bc   188  sub csp, jssp, #0x10 (16)
0xffff582d58c0   192  str x16, [jssp, #-8]!
0xffff582d58c4   196  ldr x17, pc+172 (addr 0x0000ffff582d5970)    ;; object: 0xffff582d57a1 <Code: COMPARE_IC>
0xffff582d58c8   200  sub csp, jssp, #0x10 (16)
0xffff582d58cc   204  str x17, [jssp, #-8]!
0xffff582d58d0   208  add fp, jssp, #0x10 (16)
0xffff582d58d4   212  sub csp, jssp, #0x10 (16)
0xffff582d58d8   216  stp x0, x1, [jssp, #-16]!
0xffff582d58dc   220  movz x0, #0x2
0xffff582d58e0   224  ldr x1, pc+152 (addr 0x0000ffff582d5978)    ;; external reference (Runtime::StringEqual)
0xffff582d58e4   228  ldr x16, pc+156 (addr 0x0000ffff582d5980)    ;; code: STUB, CEntryStub, minor: 4
0xffff582d58e8   232  blr x16
0xffff582d58ec   236  mov jssp, fp
0xffff582d58f0   240  ldp fp, lr, [jssp], #16
0xffff582d58f4   244  ldr x1, [x26, #64]
0xffff582d58f8   248  sub x0, x0, x1
0xffff582d58fc   252  ret
0xffff582d5900   256  movz x16, #0xc00000000
0xffff582d5904   260  sub csp, jssp, #0x10 (16)
0xffff582d5908   264  stp fp, lr, [jssp, #-16]!
0xffff582d590c   268  sub csp, jssp, #0x10 (16)
0xffff582d5910   272  str x16, [jssp, #-8]!
0xffff582d5914   276  ldr x17, pc+116 (addr 0x0000ffff582d5988)    ;; object: 0xffff582d57a1 <Code: COMPARE_IC>
0xffff582d5918   280  sub csp, jssp, #0x10 (16)
0xffff582d591c   284  str x17, [jssp, #-8]!
0xffff582d5920   288  add fp, jssp, #0x10 (16)
0xffff582d5924   292  sub csp, jssp, #0x18 (24)
0xffff582d5928   296  stp lr, x0, [jssp, #-24]!
0xffff582d592c   300  str x1, [jssp, #16]
0xffff582d5930   304  movz x10, #0x2f00000000
0xffff582d5934   308  sub csp, jssp, #0x18 (24)
0xffff582d5938   312  stp x10, x0, [jssp, #-24]!
0xffff582d593c   316  str x1, [jssp, #16]
0xffff582d5940   320  movz x0, #0x3
0xffff582d5944   324  ldr x1, pc+76 (addr 0x0000ffff582d5990)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582d5948   328  ldr x16, pc+80 (addr 0x0000ffff582d5998)    ;; code: STUB, CEntryStub, minor: 4
0xffff582d594c   332  blr x16
0xffff582d5950   336  add x11, x0, #0x5f (95)
0xffff582d5954   340  ldr x1, [jssp, #16]
0xffff582d5958   344  ldp lr, x0, [jssp], #24
0xffff582d595c   348  mov jssp, fp
0xffff582d5960   352  ldp fp, lr, [jssp], #16
0xffff582d5964   356  br x11
0xffff582d5968   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582d596c   364  d63f03e0       constant
0xffff582d5970   368  582d57a1       constant
0xffff582d5974   372  0000ffff       constant
0xffff582d5978   376  00ed0748       constant
0xffff582d597c   380  00000000       constant
0xffff582d5980   384  58206060       constant
0xffff582d5984   388  0000ffff       constant
0xffff582d5988   392  582d57a1       constant
0xffff582d598c   396  0000ffff       constant
0xffff582d5990   400  00c8a980       constant
0xffff582d5994   404  00000000       constant
0xffff582d5998   408  58206060       constant
0xffff582d599c   412  0000ffff       constant


RelocInfo (size = 16)
0xffff582d58c4  embedded object  (0xffff582d57a1 <Code: COMPARE_IC>)
0xffff582d58e0  external reference (Runtime::StringEqual)  (0xed0748)
0xffff582d58e4  code target (STUB)  (0xffff58206060)
0xffff582d5914  embedded object  (0xffff582d57a1 <Code: COMPARE_IC>)
0xffff582d5944  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582d5948  code target (STUB)  (0xffff58206060)
0xffff582d5968  constant pool (size 56)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff582d7d60     0  ldur x4, [x1, #15]
0xffff582d7d64     4  ldur w5, [x1, #27]
0xffff582d7d68     8  tbnz w2, #0, #+0x20 (addr 0xffff582d7d88)
0xffff582d7d6c    12  asr x7, x2, #32
0xffff582d7d70    16  cmp w7, w5
0xffff582d7d74    20  b.hs #+0x5c (addr 0xffff582d7dd0)
0xffff582d7d78    24  add x0, x4, w7, sxtw #3
0xffff582d7d7c    28  ldur w1, [x0, #19]
0xffff582d7d80    32  lsl x0, x1, #32
0xffff582d7d84    36  ret
0xffff582d7d88    40  sub csp, jssp, #0x10 (16)
0xffff582d7d8c    44  stp fp, lr, [jssp, #-16]!
0xffff582d7d90    48  movz fp, #0xa00000000
0xffff582d7d94    52  sub csp, jssp, #0x8 (8)
0xffff582d7d98    56  str fp, [jssp, #-8]!
0xffff582d7d9c    60  add fp, jssp, #0x8 (8)
0xffff582d7da0    64  ldur x16, [x2, #-1]
0xffff582d7da4    68  ldr x17, [x26, #120]
0xffff582d7da8    72  cmp x16, x17
0xffff582d7dac    76  b.ne #+0x34 (addr 0xffff582d7de0)
0xffff582d7db0    80  ldur d29, [x2, #7]
0xffff582d7db4    84  fcvtzs w7, d29
0xffff582d7db8    88  scvtf d0, w7
0xffff582d7dbc    92  fcmp d29, d0
0xffff582d7dc0    96  b.ne #+0x20 (addr 0xffff582d7de0)
0xffff582d7dc4   100  ldr lr, [jssp, #16]
0xffff582d7dc8   104  ldp xzr, fp, [jssp], #24
0xffff582d7dcc   108  b #-0x5c (addr 0xffff582d7d70)
0xffff582d7dd0   112  movz x16, #0x0
0xffff582d7dd4   116  sub csp, jssp, #0x10 (16)
0xffff582d7dd8   120  stp fp, lr, [jssp, #-16]!
0xffff582d7ddc   124  bl #+0xc (addr 0xffff582d7de8)
0xffff582d7de0   128  movz x16, #0x8
0xffff582d7de4   132  bl #+0x14 (addr 0xffff582d7df8)
0xffff582d7de8   136  movz x17, #0xa00000000
0xffff582d7dec   140  sub csp, jssp, #0x10 (16)
0xffff582d7df0   144  stp x17, cp, [jssp, #-16]!
0xffff582d7df4   148  add fp, jssp, #0x10 (16)
0xffff582d7df8   152  ldr x17, pc+24 (addr 0x0000ffff582d7e10)    ;; lazy deoptimization bailout 0
0xffff582d7dfc   156  add x17, x17, x16
0xffff582d7e00   160  br x17
0xffff582d7e04   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d7e08   168  d63f03e0       constant
0xffff582d7e0c   172  d503201f       constant
0xffff582d7e10   176  58006000       constant
0xffff582d7e14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582d7df8  runtime entry
0xffff582d7e04  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff582d7d60     0  ldur x4, [x1, #15]
0xffff582d7d64     4  ldur w5, [x1, #27]
0xffff582d7d68     8  tbnz w2, #0, #+0x20 (addr 0xffff582d7d88)
0xffff582d7d6c    12  asr x7, x2, #32
0xffff582d7d70    16  cmp w7, w5
0xffff582d7d74    20  b.hs #+0x5c (addr 0xffff582d7dd0)
0xffff582d7d78    24  add x0, x4, w7, sxtw #3
0xffff582d7d7c    28  ldur w1, [x0, #19]
0xffff582d7d80    32  lsl x0, x1, #32
0xffff582d7d84    36  ret
0xffff582d7d88    40  sub csp, jssp, #0x10 (16)
0xffff582d7d8c    44  stp fp, lr, [jssp, #-16]!
0xffff582d7d90    48  movz fp, #0xa00000000
0xffff582d7d94    52  sub csp, jssp, #0x8 (8)
0xffff582d7d98    56  str fp, [jssp, #-8]!
0xffff582d7d9c    60  add fp, jssp, #0x8 (8)
0xffff582d7da0    64  ldur x16, [x2, #-1]
0xffff582d7da4    68  ldr x17, [x26, #120]
0xffff582d7da8    72  cmp x16, x17
0xffff582d7dac    76  b.ne #+0x34 (addr 0xffff582d7de0)
0xffff582d7db0    80  ldur d29, [x2, #7]
0xffff582d7db4    84  fcvtzs w7, d29
0xffff582d7db8    88  scvtf d0, w7
0xffff582d7dbc    92  fcmp d29, d0
0xffff582d7dc0    96  b.ne #+0x20 (addr 0xffff582d7de0)
0xffff582d7dc4   100  ldr lr, [jssp, #16]
0xffff582d7dc8   104  ldp xzr, fp, [jssp], #24
0xffff582d7dcc   108  b #-0x5c (addr 0xffff582d7d70)
0xffff582d7dd0   112  movz x16, #0x0
0xffff582d7dd4   116  sub csp, jssp, #0x10 (16)
0xffff582d7dd8   120  stp fp, lr, [jssp, #-16]!
0xffff582d7ddc   124  bl #+0xc (addr 0xffff582d7de8)
0xffff582d7de0   128  movz x16, #0x8
0xffff582d7de4   132  bl #+0x14 (addr 0xffff582d7df8)
0xffff582d7de8   136  movz x17, #0xa00000000
0xffff582d7dec   140  sub csp, jssp, #0x10 (16)
0xffff582d7df0   144  stp x17, cp, [jssp, #-16]!
0xffff582d7df4   148  add fp, jssp, #0x10 (16)
0xffff582d7df8   152  ldr x17, pc+24 (addr 0x0000ffff582d7e10)    ;; lazy deoptimization bailout 0
0xffff582d7dfc   156  add x17, x17, x16
0xffff582d7e00   160  br x17
0xffff582d7e04   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d7e08   168  d63f03e0       constant
0xffff582d7e0c   172  d503201f       constant
0xffff582d7e10   176  58006000       constant
0xffff582d7e14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582d7df8  runtime entry
0xffff582d7e04  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 477)
0xffff582d8ac0     0  ldur x4, [x3, #47]
0xffff582d8ac4     4  tbnz w2, #0, #+0xa0 (addr 0xffff582d8b64)
0xffff582d8ac8     8  asr x6, x2, #32
0xffff582d8acc    12  add x5, x4, #0x17 (23)
0xffff582d8ad0    16  ldr x7, [x5, w6, sxtw #3]
0xffff582d8ad4    20  ldr x4, pc+324 (addr 0x0000ffff582d8c18)    ;; object: 0x39c04241 <undefined>
0xffff582d8ad8    24  cmp x7, x4
0xffff582d8adc    28  b.eq #+0x84 (addr 0xffff582d8b60)
0xffff582d8ae0    32  ldur x4, [x7, #7]
0xffff582d8ae4    36  ldur x5, [x4, #-1]
0xffff582d8ae8    40  ldrb w6, [x5, #7]
0xffff582d8aec    44  cmp w6, #0x5 (5)
0xffff582d8af0    48  b.ne #+0x70 (addr 0xffff582d8b60)
0xffff582d8af4    52  movz x1, #0x92c0
0xffff582d8af8    56  movk x1, #0x16e7, lsl #16
0xffff582d8afc    60  ldp x2, x0, [x1]
0xffff582d8b00    64  adds x16, x2, #0x38 (56)
0xffff582d8b04    68  ccmp x16, x0, #nzCv, lo
0xffff582d8b08    72  b.hi #+0xa4 (addr 0xffff582d8bac)
0xffff582d8b0c    76  str x16, [x1]
0xffff582d8b10    80  orr x2, x2, #0x1
0xffff582d8b14    84  stur x5, [x2, #-1]
0xffff582d8b18    88  ldur x0, [x4, #7]
0xffff582d8b1c    92  stur x0, [x2, #7]
0xffff582d8b20    96  ldur x0, [x4, #15]
0xffff582d8b24   100  stur x0, [x2, #15]
0xffff582d8b28   104  ldur x0, [x4, #23]
0xffff582d8b2c   108  stur x0, [x2, #23]
0xffff582d8b30   112  ldur x0, [x4, #31]
0xffff582d8b34   116  stur x0, [x2, #31]
0xffff582d8b38   120  add x0, x2, #0x28 (40)
0xffff582d8b3c   124  ldr x1, pc+228 (addr 0x0000ffff582d8c20)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d8b40   128  stur x1, [x0, #-1]
0xffff582d8b44   132  stur x7, [x0, #7]
0xffff582d8b48   136  ldur w0, [x7, #35]
0xffff582d8b4c   140  add w0, w0, #0x1 (1)
0xffff582d8b50   144  lsl x0, x0, #32
0xffff582d8b54   148  stur x0, [x7, #31]
0xffff582d8b58   152  mov x0, x2
0xffff582d8b5c   156  ret
0xffff582d8b60   160  b #+0xe0 (addr 0xffff582d8c40)
0xffff582d8b64   164  sub csp, jssp, #0x10 (16)
0xffff582d8b68   168  stp fp, lr, [jssp, #-16]!
0xffff582d8b6c   172  movz fp, #0xa00000000
0xffff582d8b70   176  sub csp, jssp, #0x8 (8)
0xffff582d8b74   180  str fp, [jssp, #-8]!
0xffff582d8b78   184  add fp, jssp, #0x8 (8)
0xffff582d8b7c   188  ldur x16, [x2, #-1]
0xffff582d8b80   192  ldr x17, [x26, #120]
0xffff582d8b84   196  cmp x16, x17
0xffff582d8b88   200  b.ne #+0xc8 (addr 0xffff582d8c50)
0xffff582d8b8c   204  ldur d29, [x2, #7]
0xffff582d8b90   208  fcvtzs w6, d29
0xffff582d8b94   212  scvtf d0, w6
0xffff582d8b98   216  fcmp d29, d0
0xffff582d8b9c   220  b.ne #+0xb4 (addr 0xffff582d8c50)
0xffff582d8ba0   224  ldr lr, [jssp, #16]
0xffff582d8ba4   228  ldp xzr, fp, [jssp], #24
0xffff582d8ba8   232  b #-0xdc (addr 0xffff582d8acc)
0xffff582d8bac   236  sub csp, jssp, #0x10 (16)
0xffff582d8bb0   240  stp fp, lr, [jssp, #-16]!
0xffff582d8bb4   244  movz fp, #0xa00000000
0xffff582d8bb8   248  sub csp, jssp, #0x8 (8)
0xffff582d8bbc   252  str fp, [jssp, #-8]!
0xffff582d8bc0   256  add fp, jssp, #0x8 (8)
0xffff582d8bc4   260  movz x2, #0x0
0xffff582d8bc8   264  mov x16, lr
0xffff582d8bcc   268  ldr x17, pc+92 (addr 0x0000ffff582d8c28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582d8bd0   272  blr x17
0xffff582d8bd4   276  movz x0, #0x3800000000
0xffff582d8bd8   280  movz x10, #0x0
0xffff582d8bdc   284  sub csp, jssp, #0x10 (16)
0xffff582d8be0   288  stp x10, x0, [jssp, #-16]!
0xffff582d8be4   292  movz x0, #0x2
0xffff582d8be8   296  movz x1, #0x5b88
0xffff582d8bec   300  movk x1, #0xe2, lsl #16
0xffff582d8bf0   304  ldr x16, pc+64 (addr 0x0000ffff582d8c30)    ;; code: STUB, CEntryStub, minor: 5
0xffff582d8bf4   308  blr x16
0xffff582d8bf8   312  str x0, [jssp, #16]
0xffff582d8bfc   316  ldr x16, pc+60 (addr 0x0000ffff582d8c38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582d8c00   320  blr x16
0xffff582d8c04   324  ldr lr, [jssp, #16]
0xffff582d8c08   328  ldp xzr, fp, [jssp], #24
0xffff582d8c0c   332  b #-0xf8 (addr 0xffff582d8b14)
0xffff582d8c10   336  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff582d8c14   340  d63f03e0       constant
0xffff582d8c18   344  39c04241       constant
0xffff582d8c1c   348  00000000       constant
0xffff582d8c20   352  32b05d81       constant
0xffff582d8c24   356  00000000       constant
0xffff582d8c28   360  58206820       constant
0xffff582d8c2c   364  0000ffff       constant
0xffff582d8c30   368  58206260       constant
0xffff582d8c34   372  0000ffff       constant
0xffff582d8c38   376  582068e0       constant
0xffff582d8c3c   380  0000ffff       constant
0xffff582d8c40   384  movz x16, #0x0
0xffff582d8c44   388  sub csp, jssp, #0x10 (16)
0xffff582d8c48   392  stp fp, lr, [jssp, #-16]!
0xffff582d8c4c   396  bl #+0xc (addr 0xffff582d8c58)
0xffff582d8c50   400  movz x16, #0x8
0xffff582d8c54   404  bl #+0x14 (addr 0xffff582d8c68)
0xffff582d8c58   408  movz x17, #0xa00000000
0xffff582d8c5c   412  sub csp, jssp, #0x10 (16)
0xffff582d8c60   416  stp x17, cp, [jssp, #-16]!
0xffff582d8c64   420  add fp, jssp, #0x10 (16)
0xffff582d8c68   424  ldr x17, pc+24 (addr 0x0000ffff582d8c80)    ;; lazy deoptimization bailout 0
0xffff582d8c6c   428  add x17, x17, x16
0xffff582d8c70   432  br x17
0xffff582d8c74   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d8c78   440  d63f03e0       constant
0xffff582d8c7c   444  d503201f       constant
0xffff582d8c80   448  58006000       constant
0xffff582d8c84   452  0000ffff       constant


Safepoints (size = 21)
0xffff582d8bf8   312  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff582d8ad4  embedded object  (0x39c04241 <undefined>)
0xffff582d8b3c  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d8bcc  code target (STUB)  (0xffff58206820)
0xffff582d8bf0  code target (STUB)  (0xffff58206260)
0xffff582d8bfc  code target (STUB)  (0xffff582068e0)
0xffff582d8c10  constant pool (size 48)
0xffff582d8c68  runtime entry
0xffff582d8c74  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 477)
0xffff582d8ac0     0  ldur x4, [x3, #47]
0xffff582d8ac4     4  tbnz w2, #0, #+0xa0 (addr 0xffff582d8b64)
0xffff582d8ac8     8  asr x6, x2, #32
0xffff582d8acc    12  add x5, x4, #0x17 (23)
0xffff582d8ad0    16  ldr x7, [x5, w6, sxtw #3]
0xffff582d8ad4    20  ldr x4, pc+324 (addr 0x0000ffff582d8c18)    ;; object: 0x39c04241 <undefined>
0xffff582d8ad8    24  cmp x7, x4
0xffff582d8adc    28  b.eq #+0x84 (addr 0xffff582d8b60)
0xffff582d8ae0    32  ldur x4, [x7, #7]
0xffff582d8ae4    36  ldur x5, [x4, #-1]
0xffff582d8ae8    40  ldrb w6, [x5, #7]
0xffff582d8aec    44  cmp w6, #0x5 (5)
0xffff582d8af0    48  b.ne #+0x70 (addr 0xffff582d8b60)
0xffff582d8af4    52  movz x1, #0x92c0
0xffff582d8af8    56  movk x1, #0x16e7, lsl #16
0xffff582d8afc    60  ldp x2, x0, [x1]
0xffff582d8b00    64  adds x16, x2, #0x38 (56)
0xffff582d8b04    68  ccmp x16, x0, #nzCv, lo
0xffff582d8b08    72  b.hi #+0xa4 (addr 0xffff582d8bac)
0xffff582d8b0c    76  str x16, [x1]
0xffff582d8b10    80  orr x2, x2, #0x1
0xffff582d8b14    84  stur x5, [x2, #-1]
0xffff582d8b18    88  ldur x0, [x4, #7]
0xffff582d8b1c    92  stur x0, [x2, #7]
0xffff582d8b20    96  ldur x0, [x4, #15]
0xffff582d8b24   100  stur x0, [x2, #15]
0xffff582d8b28   104  ldur x0, [x4, #23]
0xffff582d8b2c   108  stur x0, [x2, #23]
0xffff582d8b30   112  ldur x0, [x4, #31]
0xffff582d8b34   116  stur x0, [x2, #31]
0xffff582d8b38   120  add x0, x2, #0x28 (40)
0xffff582d8b3c   124  ldr x1, pc+228 (addr 0x0000ffff582d8c20)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582d8b40   128  stur x1, [x0, #-1]
0xffff582d8b44   132  stur x7, [x0, #7]
0xffff582d8b48   136  ldur w0, [x7, #35]
0xffff582d8b4c   140  add w0, w0, #0x1 (1)
0xffff582d8b50   144  lsl x0, x0, #32
0xffff582d8b54   148  stur x0, [x7, #31]
0xffff582d8b58   152  mov x0, x2
0xffff582d8b5c   156  ret
0xffff582d8b60   160  b #+0xe0 (addr 0xffff582d8c40)
0xffff582d8b64   164  sub csp, jssp, #0x10 (16)
0xffff582d8b68   168  stp fp, lr, [jssp, #-16]!
0xffff582d8b6c   172  movz fp, #0xa00000000
0xffff582d8b70   176  sub csp, jssp, #0x8 (8)
0xffff582d8b74   180  str fp, [jssp, #-8]!
0xffff582d8b78   184  add fp, jssp, #0x8 (8)
0xffff582d8b7c   188  ldur x16, [x2, #-1]
0xffff582d8b80   192  ldr x17, [x26, #120]
0xffff582d8b84   196  cmp x16, x17
0xffff582d8b88   200  b.ne #+0xc8 (addr 0xffff582d8c50)
0xffff582d8b8c   204  ldur d29, [x2, #7]
0xffff582d8b90   208  fcvtzs w6, d29
0xffff582d8b94   212  scvtf d0, w6
0xffff582d8b98   216  fcmp d29, d0
0xffff582d8b9c   220  b.ne #+0xb4 (addr 0xffff582d8c50)
0xffff582d8ba0   224  ldr lr, [jssp, #16]
0xffff582d8ba4   228  ldp xzr, fp, [jssp], #24
0xffff582d8ba8   232  b #-0xdc (addr 0xffff582d8acc)
0xffff582d8bac   236  sub csp, jssp, #0x10 (16)
0xffff582d8bb0   240  stp fp, lr, [jssp, #-16]!
0xffff582d8bb4   244  movz fp, #0xa00000000
0xffff582d8bb8   248  sub csp, jssp, #0x8 (8)
0xffff582d8bbc   252  str fp, [jssp, #-8]!
0xffff582d8bc0   256  add fp, jssp, #0x8 (8)
0xffff582d8bc4   260  movz x2, #0x0
0xffff582d8bc8   264  mov x16, lr
0xffff582d8bcc   268  ldr x17, pc+92 (addr 0x0000ffff582d8c28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582d8bd0   272  blr x17
0xffff582d8bd4   276  movz x0, #0x3800000000
0xffff582d8bd8   280  movz x10, #0x0
0xffff582d8bdc   284  sub csp, jssp, #0x10 (16)
0xffff582d8be0   288  stp x10, x0, [jssp, #-16]!
0xffff582d8be4   292  movz x0, #0x2
0xffff582d8be8   296  movz x1, #0x5b88
0xffff582d8bec   300  movk x1, #0xe2, lsl #16
0xffff582d8bf0   304  ldr x16, pc+64 (addr 0x0000ffff582d8c30)    ;; code: STUB, CEntryStub, minor: 5
0xffff582d8bf4   308  blr x16
0xffff582d8bf8   312  str x0, [jssp, #16]
0xffff582d8bfc   316  ldr x16, pc+60 (addr 0x0000ffff582d8c38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582d8c00   320  blr x16
0xffff582d8c04   324  ldr lr, [jssp, #16]
0xffff582d8c08   328  ldp xzr, fp, [jssp], #24
0xffff582d8c0c   332  b #-0xf8 (addr 0xffff582d8b14)
0xffff582d8c10   336  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff582d8c14   340  d63f03e0       constant
0xffff582d8c18   344  39c04241       constant
0xffff582d8c1c   348  00000000       constant
0xffff582d8c20   352  32b05d81       constant
0xffff582d8c24   356  00000000       constant
0xffff582d8c28   360  58206820       constant
0xffff582d8c2c   364  0000ffff       constant
0xffff582d8c30   368  58206260       constant
0xffff582d8c34   372  0000ffff       constant
0xffff582d8c38   376  582068e0       constant
0xffff582d8c3c   380  0000ffff       constant
0xffff582d8c40   384  movz x16, #0x0
0xffff582d8c44   388  sub csp, jssp, #0x10 (16)
0xffff582d8c48   392  stp fp, lr, [jssp, #-16]!
0xffff582d8c4c   396  bl #+0xc (addr 0xffff582d8c58)
0xffff582d8c50   400  movz x16, #0x8
0xffff582d8c54   404  bl #+0x14 (addr 0xffff582d8c68)
0xffff582d8c58   408  movz x17, #0xa00000000
0xffff582d8c5c   412  sub csp, jssp, #0x10 (16)
0xffff582d8c60   416  stp x17, cp, [jssp, #-16]!
0xffff582d8c64   420  add fp, jssp, #0x10 (16)
0xffff582d8c68   424  ldr x17, pc+24 (addr 0x0000ffff582d8c80)    ;; lazy deoptimization bailout 0
0xffff582d8c6c   428  add x17, x17, x16
0xffff582d8c70   432  br x17
0xffff582d8c74   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582d8c78   440  d63f03e0       constant
0xffff582d8c7c   444  d503201f       constant
0xffff582d8c80   448  58006000       constant
0xffff582d8c84   452  0000ffff       constant


Safepoints (size = 21)
0xffff582d8bf8   312  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff582d8ad4  embedded object  (0x39c04241 <undefined>)
0xffff582d8b3c  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582d8bcc  code target (STUB)  (0xffff58206820)
0xffff582d8bf0  code target (STUB)  (0xffff58206260)
0xffff582d8bfc  code target (STUB)  (0xffff582068e0)
0xffff582d8c10  constant pool (size 48)
0xffff582d8c68  runtime entry
0xffff582d8c74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MEGAMORPHIC
extra_ic_state = 2709
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 181)
0xffff582daa00     0  movz x16, #0xa00000000
0xffff582daa04     4  sub csp, jssp, #0x10 (16)
0xffff582daa08     8  stp fp, lr, [jssp, #-16]!
0xffff582daa0c    12  mov fp, jssp
0xffff582daa10    16  sub csp, jssp, #0x20 (32)
0xffff582daa14    20  sub jssp, jssp, #0x20 (32)
0xffff582daa18    24  stur x16, [fp, #-8]
0xffff582daa1c    28  str x1, [jssp, #16]
0xffff582daa20    32  str x0, [jssp, #8]
0xffff582daa24    36  str cp, [jssp]
0xffff582daa28    40  mov x3, cp
0xffff582daa2c    44  mov x2, x0
0xffff582daa30    48  tbnz w2, #0, #+0x48 (addr 0xffff582daa78)
0xffff582daa34    52  sub csp, jssp, #0x10 (16)
0xffff582daa38    56  stp x2, x1, [jssp, #-16]!
0xffff582daa3c    60  mov cp, x3
0xffff582daa40    64  movz x0, #0x2
0xffff582daa44    68  movz x1, #0xf938
0xffff582daa48    72  movk x1, #0xe4, lsl #16
0xffff582daa4c    76  ldr x16, pc+36 (addr 0x0000ffff582daa70)    ;; code: STUB, CEntryStub, minor: 4
0xffff582daa50    80  blr x16
0xffff582daa54    84  ldr cp, [jssp]
0xffff582daa58    88  mov jssp, fp
0xffff582daa5c    92  ldp fp, lr, [jssp], #16
0xffff582daa60    96  ret
0xffff582daa64   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582daa68   104  d63f03e0       constant
0xffff582daa6c   108  d503201f       constant
0xffff582daa70   112  58206060       constant
0xffff582daa74   116  0000ffff       constant
0xffff582daa78   120  movz x16, #0x0
0xffff582daa7c   124  bl #+0x4 (addr 0xffff582daa80)
0xffff582daa80   128  ldr x17, pc+24 (addr 0x0000ffff582daa98)    ;; lazy deoptimization bailout 0
0xffff582daa84   132  add x17, x17, x16
0xffff582daa88   136  br x17
0xffff582daa8c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582daa90   144  d63f03e0       constant
0xffff582daa94   148  d503201f       constant
0xffff582daa98   152  58006000       constant
0xffff582daa9c   156  0000ffff       constant


Safepoints (size = 21)
0xffff582daa54    84  111000 (sp -> fp)       1

RelocInfo (size = 17)
0xffff582daa4c  code target (STUB)  (0xffff58206060)
0xffff582daa64  constant pool (size 20)
0xffff582daa80  runtime entry
0xffff582daa8c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MEGAMORPHIC
extra_ic_state = 2709
name = BinaryOpICStub(SHR:Generic*Smi->Smi)
compiler = crankshaft
Instructions (size = 181)
0xffff582daa00     0  movz x16, #0xa00000000
0xffff582daa04     4  sub csp, jssp, #0x10 (16)
0xffff582daa08     8  stp fp, lr, [jssp, #-16]!
0xffff582daa0c    12  mov fp, jssp
0xffff582daa10    16  sub csp, jssp, #0x20 (32)
0xffff582daa14    20  sub jssp, jssp, #0x20 (32)
0xffff582daa18    24  stur x16, [fp, #-8]
0xffff582daa1c    28  str x1, [jssp, #16]
0xffff582daa20    32  str x0, [jssp, #8]
0xffff582daa24    36  str cp, [jssp]
0xffff582daa28    40  mov x3, cp
0xffff582daa2c    44  mov x2, x0
0xffff582daa30    48  tbnz w2, #0, #+0x48 (addr 0xffff582daa78)
0xffff582daa34    52  sub csp, jssp, #0x10 (16)
0xffff582daa38    56  stp x2, x1, [jssp, #-16]!
0xffff582daa3c    60  mov cp, x3
0xffff582daa40    64  movz x0, #0x2
0xffff582daa44    68  movz x1, #0xf938
0xffff582daa48    72  movk x1, #0xe4, lsl #16
0xffff582daa4c    76  ldr x16, pc+36 (addr 0x0000ffff582daa70)    ;; code: STUB, CEntryStub, minor: 4
0xffff582daa50    80  blr x16
0xffff582daa54    84  ldr cp, [jssp]
0xffff582daa58    88  mov jssp, fp
0xffff582daa5c    92  ldp fp, lr, [jssp], #16
0xffff582daa60    96  ret
0xffff582daa64   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582daa68   104  d63f03e0       constant
0xffff582daa6c   108  d503201f       constant
0xffff582daa70   112  58206060       constant
0xffff582daa74   116  0000ffff       constant
0xffff582daa78   120  movz x16, #0x0
0xffff582daa7c   124  bl #+0x4 (addr 0xffff582daa80)
0xffff582daa80   128  ldr x17, pc+24 (addr 0x0000ffff582daa98)    ;; lazy deoptimization bailout 0
0xffff582daa84   132  add x17, x17, x16
0xffff582daa88   136  br x17
0xffff582daa8c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582daa90   144  d63f03e0       constant
0xffff582daa94   148  d503201f       constant
0xffff582daa98   152  58006000       constant
0xffff582daa9c   156  0000ffff       constant


Safepoints (size = 21)
0xffff582daa54    84  111000 (sp -> fp)       1

RelocInfo (size = 17)
0xffff582daa4c  code target (STUB)  (0xffff58206060)
0xffff582daa64  constant pool (size 20)
0xffff582daa80  runtime entry
0xffff582daa8c  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 632)
0xffff582dab20     0  tbnz w1, #0, #+0x1d4 (addr 0xffff582dacf4)
0xffff582dab24     4  orr x16, x1, x0
0xffff582dab28     8  tbnz w16, #0, #+0x10 (addr 0xffff582dab38)
0xffff582dab2c    12  asr x1, x1, #32
0xffff582dab30    16  sub x0, x1, x0, asr #32
0xffff582dab34    20  ret
0xffff582dab38    24  cmp x0, x1
0xffff582dab3c    28  b.ne #+0x30 (addr 0xffff582dab6c)
0xffff582dab40    32  ldur x16, [x0, #-1]
0xffff582dab44    36  ldr x17, [x26, #120]
0xffff582dab48    40  cmp x16, x17
0xffff582dab4c    44  b.eq #+0xc (addr 0xffff582dab58)
0xffff582dab50    48  movz x0, #0x0
0xffff582dab54    52  ret
0xffff582dab58    56  ldur d0, [x0, #7]
0xffff582dab5c    60  fcmp d0, d0
0xffff582dab60    64  b.vc #-0x10 (addr 0xffff582dab50)
0xffff582dab64    68  movn x0, #0x0
0xffff582dab68    72  ret
0xffff582dab6c    76  and x16, x1, x0
0xffff582dab70    80  tbnz w16, #0, #+0x64 (addr 0xffff582dabd4)
0xffff582dab74    84  tbz w0, #0, #+0x24 (addr 0xffff582dab98)
0xffff582dab78    88  ldur x16, [x0, #-1]
0xffff582dab7c    92  ldr x17, [x26, #120]
0xffff582dab80    96  cmp x16, x17
0xffff582dab84   100  b.eq #+0x8 (addr 0xffff582dab8c)
0xffff582dab88   104  ret
0xffff582dab8c   108  ldur d0, [x0, #7]
0xffff582dab90   112  scvtf d1, x1, #32
0xffff582dab94   116  b #+0x24 (addr 0xffff582dabb8)
0xffff582dab98   120  ldur x16, [x1, #-1]
0xffff582dab9c   124  ldr x17, [x26, #120]
0xffff582daba0   128  cmp x16, x17
0xffff582daba4   132  b.eq #+0xc (addr 0xffff582dabb0)
0xffff582daba8   136  movz x0, #0x1
0xffff582dabac   140  ret
0xffff582dabb0   144  ldur d1, [x1, #7]
0xffff582dabb4   148  scvtf d0, x0, #32
0xffff582dabb8   152  fcmp d1, d0
0xffff582dabbc   156  b.vs #+0x10 (addr 0xffff582dabcc)
0xffff582dabc0   160  cset x0, gt
0xffff582dabc4   164  csinv x0, x0, xzr, ge
0xffff582dabc8   168  ret
0xffff582dabcc   172  movn x0, #0x0
0xffff582dabd0   176  ret
0xffff582dabd4   180  ldur x10, [x0, #-1]
0xffff582dabd8   184  ldur x12, [x1, #-1]
0xffff582dabdc   188  ldrb w11, [x10, #11]
0xffff582dabe0   192  ldrb w13, [x12, #11]
0xffff582dabe4   196  cmp x11, #0xb1 (177)
0xffff582dabe8   200  b.lt #+0x8 (addr 0xffff582dabf0)
0xffff582dabec   204  ret
0xffff582dabf0   208  cmp x11, #0x83 (131)
0xffff582dabf4   212  movz x16, #0x83
0xffff582dabf8   216  ccmp x13, x16, #nZcv, ne
0xffff582dabfc   220  movz x16, #0xb1
0xffff582dac00   224  ccmp x13, x16, #NzcV, ne
0xffff582dac04   228  b.ge #-0x18 (addr 0xffff582dabec)
0xffff582dac08   232  orr x14, x13, x11
0xffff582dac0c   236  tst x14, #0xc0
0xffff582dac10   240  b.eq #-0x24 (addr 0xffff582dabec)
0xffff582dac14   244  cmp x11, #0x81 (129)
0xffff582dac18   248  b.ne #+0x18 (addr 0xffff582dac30)
0xffff582dac1c   252  cmp x12, x10
0xffff582dac20   256  b.ne #+0x10 (addr 0xffff582dac30)
0xffff582dac24   260  ldur d1, [x1, #7]
0xffff582dac28   264  ldur d0, [x0, #7]
0xffff582dac2c   268  b #-0x74 (addr 0xffff582dabb8)
0xffff582dac30   272  movz x16, #0x87
0xffff582dac34   276  and x14, x13, x16
0xffff582dac38   280  movz x16, #0x87
0xffff582dac3c   284  and x15, x11, x16
0xffff582dac40   288  cmp x14, #0x4 (4)
0xffff582dac44   292  ccmp x15, #4, #nzcv, eq
0xffff582dac48   296  b.ne #+0x5c (addr 0xffff582daca4)
0xffff582dac4c   300  ldur x10, [x1, #15]
0xffff582dac50   304  ldur x11, [x0, #15]
0xffff582dac54   308  cmp x10, x11
0xffff582dac58   312  b.eq #+0xc (addr 0xffff582dac64)
0xffff582dac5c   316  movz x0, #0x100000000
0xffff582dac60   320  ret
0xffff582dac64   324  cbnz x10, #+0xc (addr 0xffff582dac70)
0xffff582dac68   328  movz x0, #0x0
0xffff582dac6c   332  ret
0xffff582dac70   336  asr x10, x10, #32
0xffff582dac74   340  add x11, x10, #0x17 (23)
0xffff582dac78   344  add x1, x1, x11
0xffff582dac7c   348  add x0, x0, x11
0xffff582dac80   352  neg x10, x10
0xffff582dac84   356  ldrb w11, [x1, x10]
0xffff582dac88   360  ldrb w12, [x0, x10]
0xffff582dac8c   364  cmp x11, x12
0xffff582dac90   368  b.ne #-0x34 (addr 0xffff582dac5c)
0xffff582dac94   372  add x10, x10, #0x1 (1)
0xffff582dac98   376  cbnz x10, #-0x14 (addr 0xffff582dac84)
0xffff582dac9c   380  movz x0, #0x0
0xffff582daca0   384  ret
0xffff582daca4   388  movz x16, #0xc00000000
0xffff582daca8   392  sub csp, jssp, #0x10 (16)
0xffff582dacac   396  stp fp, lr, [jssp, #-16]!
0xffff582dacb0   400  sub csp, jssp, #0x10 (16)
0xffff582dacb4   404  str x16, [jssp, #-8]!
0xffff582dacb8   408  ldr x17, pc+176 (addr 0x0000ffff582dad68)    ;; object: 0xffff582daac1 <Code: COMPARE_IC>
0xffff582dacbc   412  sub csp, jssp, #0x10 (16)
0xffff582dacc0   416  str x17, [jssp, #-8]!
0xffff582dacc4   420  add fp, jssp, #0x10 (16)
0xffff582dacc8   424  sub csp, jssp, #0x10 (16)
0xffff582daccc   428  stp x0, x1, [jssp, #-16]!
0xffff582dacd0   432  movz x0, #0x2
0xffff582dacd4   436  ldr x1, pc+156 (addr 0x0000ffff582dad70)    ;; external reference (Runtime::StrictEqual)
0xffff582dacd8   440  ldr x16, pc+160 (addr 0x0000ffff582dad78)    ;; code: STUB, CEntryStub, minor: 4
0xffff582dacdc   444  blr x16
0xffff582dace0   448  mov jssp, fp
0xffff582dace4   452  ldp fp, lr, [jssp], #16
0xffff582dace8   456  ldr x1, [x26, #64]
0xffff582dacec   460  sub x0, x0, x1
0xffff582dacf0   464  ret
0xffff582dacf4   468  movz x16, #0xc00000000
0xffff582dacf8   472  sub csp, jssp, #0x10 (16)
0xffff582dacfc   476  stp fp, lr, [jssp, #-16]!
0xffff582dad00   480  sub csp, jssp, #0x10 (16)
0xffff582dad04   484  str x16, [jssp, #-8]!
0xffff582dad08   488  ldr x17, pc+120 (addr 0x0000ffff582dad80)    ;; object: 0xffff582daac1 <Code: COMPARE_IC>
0xffff582dad0c   492  sub csp, jssp, #0x10 (16)
0xffff582dad10   496  str x17, [jssp, #-8]!
0xffff582dad14   500  add fp, jssp, #0x10 (16)
0xffff582dad18   504  sub csp, jssp, #0x18 (24)
0xffff582dad1c   508  stp lr, x0, [jssp, #-24]!
0xffff582dad20   512  str x1, [jssp, #16]
0xffff582dad24   516  movz x10, #0x2f00000000
0xffff582dad28   520  sub csp, jssp, #0x18 (24)
0xffff582dad2c   524  stp x10, x0, [jssp, #-24]!
0xffff582dad30   528  str x1, [jssp, #16]
0xffff582dad34   532  movz x0, #0x3
0xffff582dad38   536  ldr x1, pc+80 (addr 0x0000ffff582dad88)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582dad3c   540  ldr x16, pc+84 (addr 0x0000ffff582dad90)    ;; code: STUB, CEntryStub, minor: 4
0xffff582dad40   544  blr x16
0xffff582dad44   548  add x11, x0, #0x5f (95)
0xffff582dad48   552  ldr x1, [jssp, #16]
0xffff582dad4c   556  ldp lr, x0, [jssp], #24
0xffff582dad50   560  mov jssp, fp
0xffff582dad54   564  ldp fp, lr, [jssp], #16
0xffff582dad58   568  br x11
0xffff582dad5c   572  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582dad60   576  d63f03e0       constant
0xffff582dad64   580  d503201f       constant
0xffff582dad68   584  582daac1       constant
0xffff582dad6c   588  0000ffff       constant
0xffff582dad70   592  00e50928       constant
0xffff582dad74   596  00000000       constant
0xffff582dad78   600  58206060       constant
0xffff582dad7c   604  0000ffff       constant
0xffff582dad80   608  582daac1       constant
0xffff582dad84   612  0000ffff       constant
0xffff582dad88   616  00c8a980       constant
0xffff582dad8c   620  00000000       constant
0xffff582dad90   624  58206060       constant
0xffff582dad94   628  0000ffff       constant


RelocInfo (size = 16)
0xffff582dacb8  embedded object  (0xffff582daac1 <Code: COMPARE_IC>)
0xffff582dacd4  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff582dacd8  code target (STUB)  (0xffff58206060)
0xffff582dad08  embedded object  (0xffff582daac1 <Code: COMPARE_IC>)
0xffff582dad38  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582dad3c  code target (STUB)  (0xffff58206060)
0xffff582dad5c  constant pool (size 60)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 568)
0xffff582ddba0     0  orr x16, x1, x0
0xffff582ddba4     4  tbnz w16, #0, #+0x10 (addr 0xffff582ddbb4)
0xffff582ddba8     8  asr x1, x1, #32
0xffff582ddbac    12  sub x0, x1, x0, asr #32
0xffff582ddbb0    16  ret
0xffff582ddbb4    20  cmp x0, x1
0xffff582ddbb8    24  b.ne #+0x64 (addr 0xffff582ddc1c)
0xffff582ddbbc    28  ldur x10, [x0, #-1]
0xffff582ddbc0    32  ldrb w10, [x10, #11]
0xffff582ddbc4    36  cmp x10, #0x81 (129)
0xffff582ddbc8    40  b.eq #+0x40 (addr 0xffff582ddc08)
0xffff582ddbcc    44  cmp x10, #0xb1 (177)
0xffff582ddbd0    48  b.ge #+0x148 (addr 0xffff582ddd18)
0xffff582ddbd4    52  cmp x10, #0x80 (128)
0xffff582ddbd8    56  b.eq #+0x140 (addr 0xffff582ddd18)
0xffff582ddbdc    60  cmp x10, #0x82 (130)
0xffff582ddbe0    64  b.eq #+0x138 (addr 0xffff582ddd18)
0xffff582ddbe4    68  cmp x10, #0x83 (131)
0xffff582ddbe8    72  b.ne #+0x18 (addr 0xffff582ddc00)
0xffff582ddbec    76  ldr x16, [x26, #40]
0xffff582ddbf0    80  cmp x0, x16
0xffff582ddbf4    84  b.ne #+0xc (addr 0xffff582ddc00)
0xffff582ddbf8    88  movz x0, #0x1
0xffff582ddbfc    92  ret
0xffff582ddc00    96  movz x0, #0x0
0xffff582ddc04   100  ret
0xffff582ddc08   104  ldur d0, [x0, #7]
0xffff582ddc0c   108  fcmp d0, d0
0xffff582ddc10   112  b.vc #-0x10 (addr 0xffff582ddc00)
0xffff582ddc14   116  movz x0, #0x1
0xffff582ddc18   120  ret
0xffff582ddc1c   124  and x16, x1, x0
0xffff582ddc20   128  tbnz w16, #0, #+0x58 (addr 0xffff582ddc78)
0xffff582ddc24   132  tbz w0, #0, #+0x20 (addr 0xffff582ddc44)
0xffff582ddc28   136  ldur x16, [x0, #-1]
0xffff582ddc2c   140  ldr x17, [x26, #120]
0xffff582ddc30   144  cmp x16, x17
0xffff582ddc34   148  b.ne #+0xe4 (addr 0xffff582ddd18)
0xffff582ddc38   152  ldur d0, [x0, #7]
0xffff582ddc3c   156  scvtf d1, x1, #32
0xffff582ddc40   160  b #+0x1c (addr 0xffff582ddc5c)
0xffff582ddc44   164  ldur x16, [x1, #-1]
0xffff582ddc48   168  ldr x17, [x26, #120]
0xffff582ddc4c   172  cmp x16, x17
0xffff582ddc50   176  b.ne #+0xc8 (addr 0xffff582ddd18)
0xffff582ddc54   180  ldur d1, [x1, #7]
0xffff582ddc58   184  scvtf d0, x0, #32
0xffff582ddc5c   188  fcmp d1, d0
0xffff582ddc60   192  b.vs #+0x10 (addr 0xffff582ddc70)
0xffff582ddc64   196  cset x0, gt
0xffff582ddc68   200  csinv x0, x0, xzr, ge
0xffff582ddc6c   204  ret
0xffff582ddc70   208  movz x0, #0x1
0xffff582ddc74   212  ret
0xffff582ddc78   216  ldur x10, [x0, #-1]
0xffff582ddc7c   220  ldur x12, [x1, #-1]
0xffff582ddc80   224  ldrb w11, [x10, #11]
0xffff582ddc84   228  ldrb w13, [x12, #11]
0xffff582ddc88   232  cmp x11, #0x81 (129)
0xffff582ddc8c   236  b.ne #+0x18 (addr 0xffff582ddca4)
0xffff582ddc90   240  cmp x12, x10
0xffff582ddc94   244  b.ne #+0x10 (addr 0xffff582ddca4)
0xffff582ddc98   248  ldur d1, [x1, #7]
0xffff582ddc9c   252  ldur d0, [x0, #7]
0xffff582ddca0   256  b #-0x44 (addr 0xffff582ddc5c)
0xffff582ddca4   260  movz x16, #0x87
0xffff582ddca8   264  and x14, x13, x16
0xffff582ddcac   268  movz x16, #0x87
0xffff582ddcb0   272  and x15, x11, x16
0xffff582ddcb4   276  cmp x14, #0x4 (4)
0xffff582ddcb8   280  ccmp x15, #4, #nzcv, eq
0xffff582ddcbc   284  b.ne #+0x5c (addr 0xffff582ddd18)
0xffff582ddcc0   288  ldur x10, [x1, #15]
0xffff582ddcc4   292  ldur x11, [x0, #15]
0xffff582ddcc8   296  subs x12, x10, x11
0xffff582ddccc   300  csel x10, x11, x10, gt
0xffff582ddcd0   304  cbz x10, #+0x30 (addr 0xffff582ddd00)
0xffff582ddcd4   308  asr x10, x10, #32
0xffff582ddcd8   312  add x11, x10, #0x17 (23)
0xffff582ddcdc   316  add x1, x1, x11
0xffff582ddce0   320  add x0, x0, x11
0xffff582ddce4   324  neg x10, x10
0xffff582ddce8   328  ldrb w11, [x1, x10]
0xffff582ddcec   332  ldrb w13, [x0, x10]
0xffff582ddcf0   336  cmp x11, x13
0xffff582ddcf4   340  b.ne #+0x10 (addr 0xffff582ddd04)
0xffff582ddcf8   344  add x10, x10, #0x1 (1)
0xffff582ddcfc   348  cbnz x10, #-0x14 (addr 0xffff582ddce8)
0xffff582ddd00   352  subs x0, x12, #0x0 (0)
0xffff582ddd04   356  movz x10, #0x100000000
0xffff582ddd08   360  mov x11, #0xffffffff00000000
0xffff582ddd0c   364  csel x0, x10, x0, gt
0xffff582ddd10   368  csel x0, x11, x0, lt
0xffff582ddd14   372  ret
0xffff582ddd18   376  sub csp, jssp, #0x10 (16)
0xffff582ddd1c   380  stp x0, x1, [jssp, #-16]!
0xffff582ddd20   384  movz x10, #0x100000000
0xffff582ddd24   388  sub csp, jssp, #0x8 (8)
0xffff582ddd28   392  str x10, [jssp, #-8]!
0xffff582ddd2c   396  movz x0, #0x3
0xffff582ddd30   400  ldr x1, pc+128 (addr 0x0000ffff582dddb0)    ;; external reference (Runtime::Compare)
0xffff582ddd34   404  ldr x16, pc+132 (addr 0x0000ffff582dddb8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582ddd38   408  br x16
0xffff582ddd3c   412  movz x16, #0xc00000000
0xffff582ddd40   416  sub csp, jssp, #0x10 (16)
0xffff582ddd44   420  stp fp, lr, [jssp, #-16]!
0xffff582ddd48   424  sub csp, jssp, #0x10 (16)
0xffff582ddd4c   428  str x16, [jssp, #-8]!
0xffff582ddd50   432  ldr x17, pc+112 (addr 0x0000ffff582dddc0)    ;; object: 0xffff582ddb41 <Code: COMPARE_IC>
0xffff582ddd54   436  sub csp, jssp, #0x10 (16)
0xffff582ddd58   440  str x17, [jssp, #-8]!
0xffff582ddd5c   444  add fp, jssp, #0x10 (16)
0xffff582ddd60   448  sub csp, jssp, #0x18 (24)
0xffff582ddd64   452  stp lr, x0, [jssp, #-24]!
0xffff582ddd68   456  str x1, [jssp, #16]
0xffff582ddd6c   460  movz x10, #0x3300000000
0xffff582ddd70   464  sub csp, jssp, #0x18 (24)
0xffff582ddd74   468  stp x10, x0, [jssp, #-24]!
0xffff582ddd78   472  str x1, [jssp, #16]
0xffff582ddd7c   476  movz x0, #0x3
0xffff582ddd80   480  ldr x1, pc+72 (addr 0x0000ffff582dddc8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582ddd84   484  ldr x16, pc+76 (addr 0x0000ffff582dddd0)    ;; code: STUB, CEntryStub, minor: 4
0xffff582ddd88   488  blr x16
0xffff582ddd8c   492  add x11, x0, #0x5f (95)
0xffff582ddd90   496  ldr x1, [jssp, #16]
0xffff582ddd94   500  ldp lr, x0, [jssp], #24
0xffff582ddd98   504  mov jssp, fp
0xffff582ddd9c   508  ldp fp, lr, [jssp], #16
0xffff582ddda0   512  br x11
0xffff582ddda4   516  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff582ddda8   520  d63f03e0       constant
0xffff582dddac   524  d503201f       constant
0xffff582dddb0   528  00e49ea8       constant
0xffff582dddb4   532  00000000       constant
0xffff582dddb8   536  58206060       constant
0xffff582dddbc   540  0000ffff       constant
0xffff582dddc0   544  582ddb41       constant
0xffff582dddc4   548  0000ffff       constant
0xffff582dddc8   552  00c8a980       constant
0xffff582dddcc   556  00000000       constant
0xffff582dddd0   560  58206060       constant
0xffff582dddd4   564  0000ffff       constant


RelocInfo (size = 15)
0xffff582ddd30  external reference (Runtime::Compare)  (0xe49ea8)
0xffff582ddd34  code target (STUB)  (0xffff58206060)
0xffff582ddd50  embedded object  (0xffff582ddb41 <Code: COMPARE_IC>)
0xffff582ddd80  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582ddd84  code target (STUB)  (0xffff58206060)
0xffff582ddda4  constant pool (size 52)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff582dde40     0  tbnz w0, #0, #+0x88 (addr 0xffff582ddec8)
0xffff582dde44     4  scvtf d0, x0, #32
0xffff582dde48     8  scvtf d1, x1, #32
0xffff582dde4c    12  tbz w0, #0, #+0x18 (addr 0xffff582dde64)
0xffff582dde50    16  ldur x16, [x0, #-1]
0xffff582dde54    20  ldr x17, [x26, #120]
0xffff582dde58    24  cmp x16, x17
0xffff582dde5c    28  b.ne #+0x3c (addr 0xffff582dde98)
0xffff582dde60    32  ldur d0, [x0, #7]
0xffff582dde64    36  tbz w1, #0, #+0x18 (addr 0xffff582dde7c)
0xffff582dde68    40  ldur x16, [x1, #-1]
0xffff582dde6c    44  ldr x17, [x26, #120]
0xffff582dde70    48  cmp x16, x17
0xffff582dde74    52  b.ne #+0x48 (addr 0xffff582ddebc)
0xffff582dde78    56  ldur d1, [x1, #7]
0xffff582dde7c    60  fcmp d1, d0
0xffff582dde80    64  b.vs #+0x10 (addr 0xffff582dde90)
0xffff582dde84    68  cset x0, gt
0xffff582dde88    72  csinv x0, x0, xzr, ge
0xffff582dde8c    76  ret
0xffff582dde90    80  ldr x16, pc+168 (addr 0x0000ffff582ddf38)    ;; code: COMPARE_IC, GENERIC
0xffff582dde94    84  br x16
0xffff582dde98    88  ldr x16, [x26, #40]
0xffff582dde9c    92  cmp x0, x16
0xffff582ddea0    96  b.ne #+0x28 (addr 0xffff582ddec8)
0xffff582ddea4   100  tbz w1, #0, #-0x14 (addr 0xffff582dde90)
0xffff582ddea8   104  ldur x16, [x1, #-1]
0xffff582ddeac   108  ldr x17, [x26, #120]
0xffff582ddeb0   112  cmp x16, x17
0xffff582ddeb4   116  b.ne #+0x8 (addr 0xffff582ddebc)
0xffff582ddeb8   120  b #-0x28 (addr 0xffff582dde90)
0xffff582ddebc   124  ldr x16, [x26, #40]
0xffff582ddec0   128  cmp x1, x16
0xffff582ddec4   132  b.eq #-0x34 (addr 0xffff582dde90)
0xffff582ddec8   136  movz x16, #0xc00000000
0xffff582ddecc   140  sub csp, jssp, #0x10 (16)
0xffff582dded0   144  stp fp, lr, [jssp, #-16]!
0xffff582dded4   148  sub csp, jssp, #0x10 (16)
0xffff582dded8   152  str x16, [jssp, #-8]!
0xffff582ddedc   156  ldr x17, pc+100 (addr 0x0000ffff582ddf40)    ;; object: 0xffff582ddde1 <Code: COMPARE_IC>
0xffff582ddee0   160  sub csp, jssp, #0x10 (16)
0xffff582ddee4   164  str x17, [jssp, #-8]!
0xffff582ddee8   168  add fp, jssp, #0x10 (16)
0xffff582ddeec   172  sub csp, jssp, #0x18 (24)
0xffff582ddef0   176  stp lr, x0, [jssp, #-24]!
0xffff582ddef4   180  str x1, [jssp, #16]
0xffff582ddef8   184  movz x10, #0x3300000000
0xffff582ddefc   188  sub csp, jssp, #0x18 (24)
0xffff582ddf00   192  stp x10, x0, [jssp, #-24]!
0xffff582ddf04   196  str x1, [jssp, #16]
0xffff582ddf08   200  movz x0, #0x3
0xffff582ddf0c   204  ldr x1, pc+60 (addr 0x0000ffff582ddf48)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582ddf10   208  ldr x16, pc+64 (addr 0x0000ffff582ddf50)    ;; code: STUB, CEntryStub, minor: 4
0xffff582ddf14   212  blr x16
0xffff582ddf18   216  add x11, x0, #0x5f (95)
0xffff582ddf1c   220  ldr x1, [jssp, #16]
0xffff582ddf20   224  ldp lr, x0, [jssp], #24
0xffff582ddf24   228  mov jssp, fp
0xffff582ddf28   232  ldp fp, lr, [jssp], #16
0xffff582ddf2c   236  br x11
0xffff582ddf30   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582ddf34   244  d63f03e0       constant
0xffff582ddf38   248  582ddba0       constant
0xffff582ddf3c   252  0000ffff       constant
0xffff582ddf40   256  582ddde1       constant
0xffff582ddf44   260  0000ffff       constant
0xffff582ddf48   264  00c8a980       constant
0xffff582ddf4c   268  00000000       constant
0xffff582ddf50   272  58206060       constant
0xffff582ddf54   276  0000ffff       constant


RelocInfo (size = 15)
0xffff582dde90  code target (COMPARE_IC)  (0xffff582ddba0)
0xffff582ddedc  embedded object  (0xffff582ddde1 <Code: COMPARE_IC>)
0xffff582ddf0c  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582ddf10  code target (STUB)  (0xffff58206060)
0xffff582ddf30  constant pool (size 40)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 512)
0xffff582ddfc0     0  orr x16, x1, x0
0xffff582ddfc4     4  tbnz w16, #0, #+0x10 (addr 0xffff582ddfd4)
0xffff582ddfc8     8  asr x1, x1, #32
0xffff582ddfcc    12  sub x0, x1, x0, asr #32
0xffff582ddfd0    16  ret
0xffff582ddfd4    20  cmp x0, x1
0xffff582ddfd8    24  b.ne #+0x2c (addr 0xffff582de004)
0xffff582ddfdc    28  ldur x10, [x0, #-1]
0xffff582ddfe0    32  ldrb w10, [x10, #11]
0xffff582ddfe4    36  cmp x10, #0xb1 (177)
0xffff582ddfe8    40  b.ge #+0x118 (addr 0xffff582de100)
0xffff582ddfec    44  cmp x10, #0x80 (128)
0xffff582ddff0    48  b.eq #+0x110 (addr 0xffff582de100)
0xffff582ddff4    52  cmp x10, #0x82 (130)
0xffff582ddff8    56  b.eq #+0x108 (addr 0xffff582de100)
0xffff582ddffc    60  movn x0, #0x0
0xffff582de000    64  ret
0xffff582de004    68  and x16, x1, x0
0xffff582de008    72  tbnz w16, #0, #+0x58 (addr 0xffff582de060)
0xffff582de00c    76  tbz w0, #0, #+0x20 (addr 0xffff582de02c)
0xffff582de010    80  ldur x16, [x0, #-1]
0xffff582de014    84  ldr x17, [x26, #120]
0xffff582de018    88  cmp x16, x17
0xffff582de01c    92  b.ne #+0xe4 (addr 0xffff582de100)
0xffff582de020    96  ldur d0, [x0, #7]
0xffff582de024   100  scvtf d1, x1, #32
0xffff582de028   104  b #+0x1c (addr 0xffff582de044)
0xffff582de02c   108  ldur x16, [x1, #-1]
0xffff582de030   112  ldr x17, [x26, #120]
0xffff582de034   116  cmp x16, x17
0xffff582de038   120  b.ne #+0xc8 (addr 0xffff582de100)
0xffff582de03c   124  ldur d1, [x1, #7]
0xffff582de040   128  scvtf d0, x0, #32
0xffff582de044   132  fcmp d1, d0
0xffff582de048   136  b.vs #+0x10 (addr 0xffff582de058)
0xffff582de04c   140  cset x0, gt
0xffff582de050   144  csinv x0, x0, xzr, ge
0xffff582de054   148  ret
0xffff582de058   152  movn x0, #0x0
0xffff582de05c   156  ret
0xffff582de060   160  ldur x10, [x0, #-1]
0xffff582de064   164  ldur x12, [x1, #-1]
0xffff582de068   168  ldrb w11, [x10, #11]
0xffff582de06c   172  ldrb w13, [x12, #11]
0xffff582de070   176  cmp x11, #0x81 (129)
0xffff582de074   180  b.ne #+0x18 (addr 0xffff582de08c)
0xffff582de078   184  cmp x12, x10
0xffff582de07c   188  b.ne #+0x10 (addr 0xffff582de08c)
0xffff582de080   192  ldur d1, [x1, #7]
0xffff582de084   196  ldur d0, [x0, #7]
0xffff582de088   200  b #-0x44 (addr 0xffff582de044)
0xffff582de08c   204  movz x16, #0x87
0xffff582de090   208  and x14, x13, x16
0xffff582de094   212  movz x16, #0x87
0xffff582de098   216  and x15, x11, x16
0xffff582de09c   220  cmp x14, #0x4 (4)
0xffff582de0a0   224  ccmp x15, #4, #nzcv, eq
0xffff582de0a4   228  b.ne #+0x5c (addr 0xffff582de100)
0xffff582de0a8   232  ldur x10, [x1, #15]
0xffff582de0ac   236  ldur x11, [x0, #15]
0xffff582de0b0   240  subs x12, x10, x11
0xffff582de0b4   244  csel x10, x11, x10, gt
0xffff582de0b8   248  cbz x10, #+0x30 (addr 0xffff582de0e8)
0xffff582de0bc   252  asr x10, x10, #32
0xffff582de0c0   256  add x11, x10, #0x17 (23)
0xffff582de0c4   260  add x1, x1, x11
0xffff582de0c8   264  add x0, x0, x11
0xffff582de0cc   268  neg x10, x10
0xffff582de0d0   272  ldrb w11, [x1, x10]
0xffff582de0d4   276  ldrb w13, [x0, x10]
0xffff582de0d8   280  cmp x11, x13
0xffff582de0dc   284  b.ne #+0x10 (addr 0xffff582de0ec)
0xffff582de0e0   288  add x10, x10, #0x1 (1)
0xffff582de0e4   292  cbnz x10, #-0x14 (addr 0xffff582de0d0)
0xffff582de0e8   296  subs x0, x12, #0x0 (0)
0xffff582de0ec   300  movz x10, #0x100000000
0xffff582de0f0   304  mov x11, #0xffffffff00000000
0xffff582de0f4   308  csel x0, x10, x0, gt
0xffff582de0f8   312  csel x0, x11, x0, lt
0xffff582de0fc   316  ret
0xffff582de100   320  sub csp, jssp, #0x10 (16)
0xffff582de104   324  stp x0, x1, [jssp, #-16]!
0xffff582de108   328  mov x10, #0xffffffff00000000
0xffff582de10c   332  sub csp, jssp, #0x8 (8)
0xffff582de110   336  str x10, [jssp, #-8]!
0xffff582de114   340  movz x0, #0x3
0xffff582de118   344  ldr x1, pc+128 (addr 0x0000ffff582de198)    ;; external reference (Runtime::Compare)
0xffff582de11c   348  ldr x16, pc+132 (addr 0x0000ffff582de1a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff582de120   352  br x16
0xffff582de124   356  movz x16, #0xc00000000
0xffff582de128   360  sub csp, jssp, #0x10 (16)
0xffff582de12c   364  stp fp, lr, [jssp, #-16]!
0xffff582de130   368  sub csp, jssp, #0x10 (16)
0xffff582de134   372  str x16, [jssp, #-8]!
0xffff582de138   376  ldr x17, pc+112 (addr 0x0000ffff582de1a8)    ;; object: 0xffff582ddf61 <Code: COMPARE_IC>
0xffff582de13c   380  sub csp, jssp, #0x10 (16)
0xffff582de140   384  str x17, [jssp, #-8]!
0xffff582de144   388  add fp, jssp, #0x10 (16)
0xffff582de148   392  sub csp, jssp, #0x18 (24)
0xffff582de14c   396  stp lr, x0, [jssp, #-24]!
0xffff582de150   400  str x1, [jssp, #16]
0xffff582de154   404  movz x10, #0x3200000000
0xffff582de158   408  sub csp, jssp, #0x18 (24)
0xffff582de15c   412  stp x10, x0, [jssp, #-24]!
0xffff582de160   416  str x1, [jssp, #16]
0xffff582de164   420  movz x0, #0x3
0xffff582de168   424  ldr x1, pc+72 (addr 0x0000ffff582de1b0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582de16c   428  ldr x16, pc+76 (addr 0x0000ffff582de1b8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582de170   432  blr x16
0xffff582de174   436  add x11, x0, #0x5f (95)
0xffff582de178   440  ldr x1, [jssp, #16]
0xffff582de17c   444  ldp lr, x0, [jssp], #24
0xffff582de180   448  mov jssp, fp
0xffff582de184   452  ldp fp, lr, [jssp], #16
0xffff582de188   456  br x11
0xffff582de18c   460  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff582de190   464  d63f03e0       constant
0xffff582de194   468  d503201f       constant
0xffff582de198   472  00e49ea8       constant
0xffff582de19c   476  00000000       constant
0xffff582de1a0   480  58206060       constant
0xffff582de1a4   484  0000ffff       constant
0xffff582de1a8   488  582ddf61       constant
0xffff582de1ac   492  0000ffff       constant
0xffff582de1b0   496  00c8a980       constant
0xffff582de1b4   500  00000000       constant
0xffff582de1b8   504  58206060       constant
0xffff582de1bc   508  0000ffff       constant


RelocInfo (size = 15)
0xffff582de118  external reference (Runtime::Compare)  (0xe49ea8)
0xffff582de11c  code target (STUB)  (0xffff58206060)
0xffff582de138  embedded object  (0xffff582ddf61 <Code: COMPARE_IC>)
0xffff582de168  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582de16c  code target (STUB)  (0xffff58206060)
0xffff582de18c  constant pool (size 52)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff582de220     0  tbnz w0, #0, #+0x88 (addr 0xffff582de2a8)
0xffff582de224     4  scvtf d0, x0, #32
0xffff582de228     8  scvtf d1, x1, #32
0xffff582de22c    12  tbz w0, #0, #+0x18 (addr 0xffff582de244)
0xffff582de230    16  ldur x16, [x0, #-1]
0xffff582de234    20  ldr x17, [x26, #120]
0xffff582de238    24  cmp x16, x17
0xffff582de23c    28  b.ne #+0x3c (addr 0xffff582de278)
0xffff582de240    32  ldur d0, [x0, #7]
0xffff582de244    36  tbz w1, #0, #+0x18 (addr 0xffff582de25c)
0xffff582de248    40  ldur x16, [x1, #-1]
0xffff582de24c    44  ldr x17, [x26, #120]
0xffff582de250    48  cmp x16, x17
0xffff582de254    52  b.ne #+0x48 (addr 0xffff582de29c)
0xffff582de258    56  ldur d1, [x1, #7]
0xffff582de25c    60  fcmp d1, d0
0xffff582de260    64  b.vs #+0x10 (addr 0xffff582de270)
0xffff582de264    68  cset x0, gt
0xffff582de268    72  csinv x0, x0, xzr, ge
0xffff582de26c    76  ret
0xffff582de270    80  ldr x16, pc+168 (addr 0x0000ffff582de318)    ;; code: COMPARE_IC, GENERIC
0xffff582de274    84  br x16
0xffff582de278    88  ldr x16, [x26, #40]
0xffff582de27c    92  cmp x0, x16
0xffff582de280    96  b.ne #+0x28 (addr 0xffff582de2a8)
0xffff582de284   100  tbz w1, #0, #-0x14 (addr 0xffff582de270)
0xffff582de288   104  ldur x16, [x1, #-1]
0xffff582de28c   108  ldr x17, [x26, #120]
0xffff582de290   112  cmp x16, x17
0xffff582de294   116  b.ne #+0x8 (addr 0xffff582de29c)
0xffff582de298   120  b #-0x28 (addr 0xffff582de270)
0xffff582de29c   124  ldr x16, [x26, #40]
0xffff582de2a0   128  cmp x1, x16
0xffff582de2a4   132  b.eq #-0x34 (addr 0xffff582de270)
0xffff582de2a8   136  movz x16, #0xc00000000
0xffff582de2ac   140  sub csp, jssp, #0x10 (16)
0xffff582de2b0   144  stp fp, lr, [jssp, #-16]!
0xffff582de2b4   148  sub csp, jssp, #0x10 (16)
0xffff582de2b8   152  str x16, [jssp, #-8]!
0xffff582de2bc   156  ldr x17, pc+100 (addr 0x0000ffff582de320)    ;; object: 0xffff582de1c1 <Code: COMPARE_IC>
0xffff582de2c0   160  sub csp, jssp, #0x10 (16)
0xffff582de2c4   164  str x17, [jssp, #-8]!
0xffff582de2c8   168  add fp, jssp, #0x10 (16)
0xffff582de2cc   172  sub csp, jssp, #0x18 (24)
0xffff582de2d0   176  stp lr, x0, [jssp, #-24]!
0xffff582de2d4   180  str x1, [jssp, #16]
0xffff582de2d8   184  movz x10, #0x3200000000
0xffff582de2dc   188  sub csp, jssp, #0x18 (24)
0xffff582de2e0   192  stp x10, x0, [jssp, #-24]!
0xffff582de2e4   196  str x1, [jssp, #16]
0xffff582de2e8   200  movz x0, #0x3
0xffff582de2ec   204  ldr x1, pc+60 (addr 0x0000ffff582de328)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582de2f0   208  ldr x16, pc+64 (addr 0x0000ffff582de330)    ;; code: STUB, CEntryStub, minor: 4
0xffff582de2f4   212  blr x16
0xffff582de2f8   216  add x11, x0, #0x5f (95)
0xffff582de2fc   220  ldr x1, [jssp, #16]
0xffff582de300   224  ldp lr, x0, [jssp], #24
0xffff582de304   228  mov jssp, fp
0xffff582de308   232  ldp fp, lr, [jssp], #16
0xffff582de30c   236  br x11
0xffff582de310   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582de314   244  d63f03e0       constant
0xffff582de318   248  582ddfc0       constant
0xffff582de31c   252  0000ffff       constant
0xffff582de320   256  582de1c1       constant
0xffff582de324   260  0000ffff       constant
0xffff582de328   264  00c8a980       constant
0xffff582de32c   268  00000000       constant
0xffff582de330   272  58206060       constant
0xffff582de334   276  0000ffff       constant


RelocInfo (size = 15)
0xffff582de270  code target (COMPARE_IC)  (0xffff582ddfc0)
0xffff582de2bc  embedded object  (0xffff582de1c1 <Code: COMPARE_IC>)
0xffff582de2ec  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582de2f0  code target (STUB)  (0xffff58206060)
0xffff582de310  constant pool (size 40)


kind = HANDLER
major_key = <NoCache>Stub
name = Math
compiler = unknown
Instructions (size = 120)
0xffff582ded40     0  sub csp, jssp, #0x8 (8)
0xffff582ded44     4  str x3, [jssp, #-8]!
0xffff582ded48     8  sub csp, jssp, #0x8 (8)
0xffff582ded4c    12  str x0, [jssp, #-8]!
0xffff582ded50    16  ldr x0, pc+80 (addr 0x0000ffff582deda0)    ;; object: 0x39cc5d51 Cell for 0
0xffff582ded54    20  ldur x0, [x0, #7]
0xffff582ded58    24  cmp x0, #0x0 (0)
0xffff582ded5c    28  b.ne #+0x2c (addr 0xffff582ded88)
0xffff582ded60    32  ldr x0, pc+72 (addr 0x0000ffff582deda8)    ;; object: 0x225c7bf9 WeakCell for 0x39c46e89 PropertyCell for 0x39c46e51 <a Math with map 0x32b0e5a1>
0xffff582ded64    36  ldur x0, [x0, #7]
0xffff582ded68    40  tbz w0, #0, #+0x20 (addr 0xffff582ded88)
0xffff582ded6c    44  ldur x0, [x0, #15]
0xffff582ded70    48  ldr x16, [x26, #88]
0xffff582ded74    52  cmp x0, x16
0xffff582ded78    56  b.eq #+0x10 (addr 0xffff582ded88)
0xffff582ded7c    60  add jssp, jssp, #0x10 (16)
0xffff582ded80    64  ret
0xffff582ded84    68  b #+0x14 (addr 0xffff582ded98)
0xffff582ded88    72  ldr x0, [jssp], #8
0xffff582ded8c    76  ldr x3, [jssp], #8
0xffff582ded90    80  ldr x16, pc+32 (addr 0x0000ffff582dedb0)    ;; code: BUILTIN
0xffff582ded94    84  br x16
0xffff582ded98    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582ded9c    92  d63f03e0       constant
0xffff582deda0    96  39cc5d51       constant
0xffff582deda4   100  00000000       constant
0xffff582deda8   104  225c7bf9       constant
0xffff582dedac   108  00000000       constant
0xffff582dedb0   112  582222e0       constant
0xffff582dedb4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff582ded50  embedded object  (0x39cc5d51 Cell for 0)
0xffff582ded60  embedded object  (0x225c7bf9 WeakCell for 0x39c46e89 PropertyCell for 0x39c46e51 <a Math with map 0x32b0e5a1>)
0xffff582ded90  code target (BUILTIN)  (0xffff582222e0)
0xffff582ded98  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582dee20     0  ldur x0, [x1, #-1]
0xffff582dee24     4  ldur x0, [x0, #47]
0xffff582dee28     8  movz x16, #0x14f
0xffff582dee2c    12  ldr x0, [x0, x16]
0xffff582dee30    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582dee20     0  ldur x0, [x1, #-1]
0xffff582dee24     4  ldur x0, [x0, #47]
0xffff582dee28     8  movz x16, #0x14f
0xffff582dee2c    12  ldr x0, [x0, x16]
0xffff582dee30    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 1179
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff582dfa20     0  mov x2, x1
0xffff582dfa24     4  tbnz w2, #0, #+0x44 (addr 0xffff582dfa68)
0xffff582dfa28     8  mov x3, x0
0xffff582dfa2c    12  tbnz w3, #0, #+0x4c (addr 0xffff582dfa78)
0xffff582dfa30    16  asr x3, x3, #32
0xffff582dfa34    20  cmp w3, #0x1 (1)
0xffff582dfa38    24  b.eq #+0x8 (addr 0xffff582dfa40)
0xffff582dfa3c    28  b #+0x4c (addr 0xffff582dfa88)
0xffff582dfa40    32  asr x2, x2, #32
0xffff582dfa44    36  tbz w2, #31, #+0x18 (addr 0xffff582dfa5c)
0xffff582dfa48    40  neg w2, w2
0xffff582dfa4c    44  movz w2, #0x0
0xffff582dfa50    48  negs w2, w2
0xffff582dfa54    52  b.eq #+0x44 (addr 0xffff582dfa98)
0xffff582dfa58    56  b #+0x8 (addr 0xffff582dfa60)
0xffff582dfa5c    60  movz w2, #0x0
0xffff582dfa60    64  lsl x0, x2, #32
0xffff582dfa64    68  ret
0xffff582dfa68    72  movz x16, #0x0
0xffff582dfa6c    76  sub csp, jssp, #0x10 (16)
0xffff582dfa70    80  stp fp, lr, [jssp, #-16]!
0xffff582dfa74    84  bl #+0x34 (addr 0xffff582dfaa8)
0xffff582dfa78    88  movz x16, #0x8
0xffff582dfa7c    92  sub csp, jssp, #0x10 (16)
0xffff582dfa80    96  stp fp, lr, [jssp, #-16]!
0xffff582dfa84   100  bl #+0x24 (addr 0xffff582dfaa8)
0xffff582dfa88   104  movz x16, #0x10
0xffff582dfa8c   108  sub csp, jssp, #0x10 (16)
0xffff582dfa90   112  stp fp, lr, [jssp, #-16]!
0xffff582dfa94   116  bl #+0x14 (addr 0xffff582dfaa8)
0xffff582dfa98   120  movz x16, #0x18
0xffff582dfa9c   124  sub csp, jssp, #0x10 (16)
0xffff582dfaa0   128  stp fp, lr, [jssp, #-16]!
0xffff582dfaa4   132  bl #+0x4 (addr 0xffff582dfaa8)
0xffff582dfaa8   136  movz x17, #0xa00000000
0xffff582dfaac   140  sub csp, jssp, #0x10 (16)
0xffff582dfab0   144  stp x17, cp, [jssp, #-16]!
0xffff582dfab4   148  add fp, jssp, #0x10 (16)
0xffff582dfab8   152  ldr x17, pc+24 (addr 0x0000ffff582dfad0)    ;; lazy deoptimization bailout 0
0xffff582dfabc   156  add x17, x17, x16
0xffff582dfac0   160  br x17
0xffff582dfac4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582dfac8   168  d63f03e0       constant
0xffff582dfacc   172  d503201f       constant
0xffff582dfad0   176  58006000       constant
0xffff582dfad4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582dfab8  runtime entry
0xffff582dfac4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 1179
type = NORMAL
name = BinaryOpICStub(MOD:Smi*1->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff582dfa20     0  mov x2, x1
0xffff582dfa24     4  tbnz w2, #0, #+0x44 (addr 0xffff582dfa68)
0xffff582dfa28     8  mov x3, x0
0xffff582dfa2c    12  tbnz w3, #0, #+0x4c (addr 0xffff582dfa78)
0xffff582dfa30    16  asr x3, x3, #32
0xffff582dfa34    20  cmp w3, #0x1 (1)
0xffff582dfa38    24  b.eq #+0x8 (addr 0xffff582dfa40)
0xffff582dfa3c    28  b #+0x4c (addr 0xffff582dfa88)
0xffff582dfa40    32  asr x2, x2, #32
0xffff582dfa44    36  tbz w2, #31, #+0x18 (addr 0xffff582dfa5c)
0xffff582dfa48    40  neg w2, w2
0xffff582dfa4c    44  movz w2, #0x0
0xffff582dfa50    48  negs w2, w2
0xffff582dfa54    52  b.eq #+0x44 (addr 0xffff582dfa98)
0xffff582dfa58    56  b #+0x8 (addr 0xffff582dfa60)
0xffff582dfa5c    60  movz w2, #0x0
0xffff582dfa60    64  lsl x0, x2, #32
0xffff582dfa64    68  ret
0xffff582dfa68    72  movz x16, #0x0
0xffff582dfa6c    76  sub csp, jssp, #0x10 (16)
0xffff582dfa70    80  stp fp, lr, [jssp, #-16]!
0xffff582dfa74    84  bl #+0x34 (addr 0xffff582dfaa8)
0xffff582dfa78    88  movz x16, #0x8
0xffff582dfa7c    92  sub csp, jssp, #0x10 (16)
0xffff582dfa80    96  stp fp, lr, [jssp, #-16]!
0xffff582dfa84   100  bl #+0x24 (addr 0xffff582dfaa8)
0xffff582dfa88   104  movz x16, #0x10
0xffff582dfa8c   108  sub csp, jssp, #0x10 (16)
0xffff582dfa90   112  stp fp, lr, [jssp, #-16]!
0xffff582dfa94   116  bl #+0x14 (addr 0xffff582dfaa8)
0xffff582dfa98   120  movz x16, #0x18
0xffff582dfa9c   124  sub csp, jssp, #0x10 (16)
0xffff582dfaa0   128  stp fp, lr, [jssp, #-16]!
0xffff582dfaa4   132  bl #+0x4 (addr 0xffff582dfaa8)
0xffff582dfaa8   136  movz x17, #0xa00000000
0xffff582dfaac   140  sub csp, jssp, #0x10 (16)
0xffff582dfab0   144  stp x17, cp, [jssp, #-16]!
0xffff582dfab4   148  add fp, jssp, #0x10 (16)
0xffff582dfab8   152  ldr x17, pc+24 (addr 0x0000ffff582dfad0)    ;; lazy deoptimization bailout 0
0xffff582dfabc   156  add x17, x17, x16
0xffff582dfac0   160  br x17
0xffff582dfac4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582dfac8   168  d63f03e0       constant
0xffff582dfacc   172  d503201f       constant
0xffff582dfad0   176  58006000       constant
0xffff582dfad4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582dfab8  runtime entry
0xffff582dfac4  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*NUMBER -> NUMBER
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff582e0ae0     0  tbnz w1, #0, #+0x88 (addr 0xffff582e0b68)
0xffff582e0ae4     4  scvtf d0, x0, #32
0xffff582e0ae8     8  scvtf d1, x1, #32
0xffff582e0aec    12  tbz w0, #0, #+0x18 (addr 0xffff582e0b04)
0xffff582e0af0    16  ldur x16, [x0, #-1]
0xffff582e0af4    20  ldr x17, [x26, #120]
0xffff582e0af8    24  cmp x16, x17
0xffff582e0afc    28  b.ne #+0x3c (addr 0xffff582e0b38)
0xffff582e0b00    32  ldur d0, [x0, #7]
0xffff582e0b04    36  tbz w1, #0, #+0x18 (addr 0xffff582e0b1c)
0xffff582e0b08    40  ldur x16, [x1, #-1]
0xffff582e0b0c    44  ldr x17, [x26, #120]
0xffff582e0b10    48  cmp x16, x17
0xffff582e0b14    52  b.ne #+0x48 (addr 0xffff582e0b5c)
0xffff582e0b18    56  ldur d1, [x1, #7]
0xffff582e0b1c    60  fcmp d1, d0
0xffff582e0b20    64  b.vs #+0x10 (addr 0xffff582e0b30)
0xffff582e0b24    68  cset x0, gt
0xffff582e0b28    72  csinv x0, x0, xzr, ge
0xffff582e0b2c    76  ret
0xffff582e0b30    80  ldr x16, pc+168 (addr 0x0000ffff582e0bd8)    ;; code: COMPARE_IC, GENERIC
0xffff582e0b34    84  br x16
0xffff582e0b38    88  ldr x16, [x26, #40]
0xffff582e0b3c    92  cmp x0, x16
0xffff582e0b40    96  b.ne #+0x28 (addr 0xffff582e0b68)
0xffff582e0b44   100  tbz w1, #0, #-0x14 (addr 0xffff582e0b30)
0xffff582e0b48   104  ldur x16, [x1, #-1]
0xffff582e0b4c   108  ldr x17, [x26, #120]
0xffff582e0b50   112  cmp x16, x17
0xffff582e0b54   116  b.ne #+0x8 (addr 0xffff582e0b5c)
0xffff582e0b58   120  b #-0x28 (addr 0xffff582e0b30)
0xffff582e0b5c   124  ldr x16, [x26, #40]
0xffff582e0b60   128  cmp x1, x16
0xffff582e0b64   132  b.eq #-0x34 (addr 0xffff582e0b30)
0xffff582e0b68   136  movz x16, #0xc00000000
0xffff582e0b6c   140  sub csp, jssp, #0x10 (16)
0xffff582e0b70   144  stp fp, lr, [jssp, #-16]!
0xffff582e0b74   148  sub csp, jssp, #0x10 (16)
0xffff582e0b78   152  str x16, [jssp, #-8]!
0xffff582e0b7c   156  ldr x17, pc+100 (addr 0x0000ffff582e0be0)    ;; object: 0xffff582e0a81 <Code: COMPARE_IC>
0xffff582e0b80   160  sub csp, jssp, #0x10 (16)
0xffff582e0b84   164  str x17, [jssp, #-8]!
0xffff582e0b88   168  add fp, jssp, #0x10 (16)
0xffff582e0b8c   172  sub csp, jssp, #0x18 (24)
0xffff582e0b90   176  stp lr, x0, [jssp, #-24]!
0xffff582e0b94   180  str x1, [jssp, #16]
0xffff582e0b98   184  movz x10, #0x3100000000
0xffff582e0b9c   188  sub csp, jssp, #0x18 (24)
0xffff582e0ba0   192  stp x10, x0, [jssp, #-24]!
0xffff582e0ba4   196  str x1, [jssp, #16]
0xffff582e0ba8   200  movz x0, #0x3
0xffff582e0bac   204  ldr x1, pc+60 (addr 0x0000ffff582e0be8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582e0bb0   208  ldr x16, pc+64 (addr 0x0000ffff582e0bf0)    ;; code: STUB, CEntryStub, minor: 4
0xffff582e0bb4   212  blr x16
0xffff582e0bb8   216  add x11, x0, #0x5f (95)
0xffff582e0bbc   220  ldr x1, [jssp, #16]
0xffff582e0bc0   224  ldp lr, x0, [jssp], #24
0xffff582e0bc4   228  mov jssp, fp
0xffff582e0bc8   232  ldp fp, lr, [jssp], #16
0xffff582e0bcc   236  br x11
0xffff582e0bd0   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582e0bd4   244  d63f03e0       constant
0xffff582e0bd8   248  582d3180       constant
0xffff582e0bdc   252  0000ffff       constant
0xffff582e0be0   256  582e0a81       constant
0xffff582e0be4   260  0000ffff       constant
0xffff582e0be8   264  00c8a980       constant
0xffff582e0bec   268  00000000       constant
0xffff582e0bf0   272  58206060       constant
0xffff582e0bf4   276  0000ffff       constant


RelocInfo (size = 15)
0xffff582e0b30  code target (COMPARE_IC)  (0xffff582d3180)
0xffff582e0b7c  embedded object  (0xffff582e0a81 <Code: COMPARE_IC>)
0xffff582e0bac  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582e0bb0  code target (STUB)  (0xffff58206060)
0xffff582e0bd0  constant pool (size 40)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 469)
0xffff582e3680     0  ldur x4, [x3, #47]
0xffff582e3684     4  tbnz w2, #0, #+0x98 (addr 0xffff582e371c)
0xffff582e3688     8  asr x6, x2, #32
0xffff582e368c    12  add x5, x4, #0x17 (23)
0xffff582e3690    16  ldr x7, [x5, w6, sxtw #3]
0xffff582e3694    20  ldr x4, pc+316 (addr 0x0000ffff582e37d0)    ;; object: 0x39c04241 <undefined>
0xffff582e3698    24  cmp x7, x4
0xffff582e369c    28  b.eq #+0x7c (addr 0xffff582e3718)
0xffff582e36a0    32  ldur x4, [x7, #7]
0xffff582e36a4    36  ldur x5, [x4, #-1]
0xffff582e36a8    40  ldrb w6, [x5, #7]
0xffff582e36ac    44  cmp w6, #0x4 (4)
0xffff582e36b0    48  b.ne #+0x68 (addr 0xffff582e3718)
0xffff582e36b4    52  movz x1, #0x92c0
0xffff582e36b8    56  movk x1, #0x16e7, lsl #16
0xffff582e36bc    60  ldp x2, x0, [x1]
0xffff582e36c0    64  adds x16, x2, #0x30 (48)
0xffff582e36c4    68  ccmp x16, x0, #nzCv, lo
0xffff582e36c8    72  b.hi #+0x9c (addr 0xffff582e3764)
0xffff582e36cc    76  str x16, [x1]
0xffff582e36d0    80  orr x2, x2, #0x1
0xffff582e36d4    84  stur x5, [x2, #-1]
0xffff582e36d8    88  ldur x0, [x4, #7]
0xffff582e36dc    92  stur x0, [x2, #7]
0xffff582e36e0    96  ldur x0, [x4, #15]
0xffff582e36e4   100  stur x0, [x2, #15]
0xffff582e36e8   104  ldur x0, [x4, #23]
0xffff582e36ec   108  stur x0, [x2, #23]
0xffff582e36f0   112  add x0, x2, #0x20 (32)
0xffff582e36f4   116  ldr x1, pc+228 (addr 0x0000ffff582e37d8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e36f8   120  stur x1, [x0, #-1]
0xffff582e36fc   124  stur x7, [x0, #7]
0xffff582e3700   128  ldur w0, [x7, #35]
0xffff582e3704   132  add w0, w0, #0x1 (1)
0xffff582e3708   136  lsl x0, x0, #32
0xffff582e370c   140  stur x0, [x7, #31]
0xffff582e3710   144  mov x0, x2
0xffff582e3714   148  ret
0xffff582e3718   152  b #+0xe0 (addr 0xffff582e37f8)
0xffff582e371c   156  sub csp, jssp, #0x10 (16)
0xffff582e3720   160  stp fp, lr, [jssp, #-16]!
0xffff582e3724   164  movz fp, #0xa00000000
0xffff582e3728   168  sub csp, jssp, #0x8 (8)
0xffff582e372c   172  str fp, [jssp, #-8]!
0xffff582e3730   176  add fp, jssp, #0x8 (8)
0xffff582e3734   180  ldur x16, [x2, #-1]
0xffff582e3738   184  ldr x17, [x26, #120]
0xffff582e373c   188  cmp x16, x17
0xffff582e3740   192  b.ne #+0xc8 (addr 0xffff582e3808)
0xffff582e3744   196  ldur d29, [x2, #7]
0xffff582e3748   200  fcvtzs w6, d29
0xffff582e374c   204  scvtf d0, w6
0xffff582e3750   208  fcmp d29, d0
0xffff582e3754   212  b.ne #+0xb4 (addr 0xffff582e3808)
0xffff582e3758   216  ldr lr, [jssp, #16]
0xffff582e375c   220  ldp xzr, fp, [jssp], #24
0xffff582e3760   224  b #-0xd4 (addr 0xffff582e368c)
0xffff582e3764   228  sub csp, jssp, #0x10 (16)
0xffff582e3768   232  stp fp, lr, [jssp, #-16]!
0xffff582e376c   236  movz fp, #0xa00000000
0xffff582e3770   240  sub csp, jssp, #0x8 (8)
0xffff582e3774   244  str fp, [jssp, #-8]!
0xffff582e3778   248  add fp, jssp, #0x8 (8)
0xffff582e377c   252  movz x2, #0x0
0xffff582e3780   256  mov x16, lr
0xffff582e3784   260  ldr x17, pc+92 (addr 0x0000ffff582e37e0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582e3788   264  blr x17
0xffff582e378c   268  movz x0, #0x3000000000
0xffff582e3790   272  movz x10, #0x0
0xffff582e3794   276  sub csp, jssp, #0x10 (16)
0xffff582e3798   280  stp x10, x0, [jssp, #-16]!
0xffff582e379c   284  movz x0, #0x2
0xffff582e37a0   288  movz x1, #0x5b88
0xffff582e37a4   292  movk x1, #0xe2, lsl #16
0xffff582e37a8   296  ldr x16, pc+64 (addr 0x0000ffff582e37e8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582e37ac   300  blr x16
0xffff582e37b0   304  str x0, [jssp, #16]
0xffff582e37b4   308  ldr x16, pc+60 (addr 0x0000ffff582e37f0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582e37b8   312  blr x16
0xffff582e37bc   316  ldr lr, [jssp, #16]
0xffff582e37c0   320  ldp xzr, fp, [jssp], #24
0xffff582e37c4   324  b #-0xf0 (addr 0xffff582e36d4)
0xffff582e37c8   328  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff582e37cc   332  d63f03e0       constant
0xffff582e37d0   336  39c04241       constant
0xffff582e37d4   340  00000000       constant
0xffff582e37d8   344  32b05d81       constant
0xffff582e37dc   348  00000000       constant
0xffff582e37e0   352  58206820       constant
0xffff582e37e4   356  0000ffff       constant
0xffff582e37e8   360  58206260       constant
0xffff582e37ec   364  0000ffff       constant
0xffff582e37f0   368  582068e0       constant
0xffff582e37f4   372  0000ffff       constant
0xffff582e37f8   376  movz x16, #0x0
0xffff582e37fc   380  sub csp, jssp, #0x10 (16)
0xffff582e3800   384  stp fp, lr, [jssp, #-16]!
0xffff582e3804   388  bl #+0xc (addr 0xffff582e3810)
0xffff582e3808   392  movz x16, #0x8
0xffff582e380c   396  bl #+0x14 (addr 0xffff582e3820)
0xffff582e3810   400  movz x17, #0xa00000000
0xffff582e3814   404  sub csp, jssp, #0x10 (16)
0xffff582e3818   408  stp x17, cp, [jssp, #-16]!
0xffff582e381c   412  add fp, jssp, #0x10 (16)
0xffff582e3820   416  ldr x17, pc+24 (addr 0x0000ffff582e3838)    ;; lazy deoptimization bailout 0
0xffff582e3824   420  add x17, x17, x16
0xffff582e3828   424  br x17
0xffff582e382c   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582e3830   432  d63f03e0       constant
0xffff582e3834   436  d503201f       constant
0xffff582e3838   440  58006000       constant
0xffff582e383c   444  0000ffff       constant


Safepoints (size = 21)
0xffff582e37b0   304  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff582e3694  embedded object  (0x39c04241 <undefined>)
0xffff582e36f4  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e3784  code target (STUB)  (0xffff58206820)
0xffff582e37a8  code target (STUB)  (0xffff58206260)
0xffff582e37b4  code target (STUB)  (0xffff582068e0)
0xffff582e37c8  constant pool (size 48)
0xffff582e3820  runtime entry
0xffff582e382c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 469)
0xffff582e3680     0  ldur x4, [x3, #47]
0xffff582e3684     4  tbnz w2, #0, #+0x98 (addr 0xffff582e371c)
0xffff582e3688     8  asr x6, x2, #32
0xffff582e368c    12  add x5, x4, #0x17 (23)
0xffff582e3690    16  ldr x7, [x5, w6, sxtw #3]
0xffff582e3694    20  ldr x4, pc+316 (addr 0x0000ffff582e37d0)    ;; object: 0x39c04241 <undefined>
0xffff582e3698    24  cmp x7, x4
0xffff582e369c    28  b.eq #+0x7c (addr 0xffff582e3718)
0xffff582e36a0    32  ldur x4, [x7, #7]
0xffff582e36a4    36  ldur x5, [x4, #-1]
0xffff582e36a8    40  ldrb w6, [x5, #7]
0xffff582e36ac    44  cmp w6, #0x4 (4)
0xffff582e36b0    48  b.ne #+0x68 (addr 0xffff582e3718)
0xffff582e36b4    52  movz x1, #0x92c0
0xffff582e36b8    56  movk x1, #0x16e7, lsl #16
0xffff582e36bc    60  ldp x2, x0, [x1]
0xffff582e36c0    64  adds x16, x2, #0x30 (48)
0xffff582e36c4    68  ccmp x16, x0, #nzCv, lo
0xffff582e36c8    72  b.hi #+0x9c (addr 0xffff582e3764)
0xffff582e36cc    76  str x16, [x1]
0xffff582e36d0    80  orr x2, x2, #0x1
0xffff582e36d4    84  stur x5, [x2, #-1]
0xffff582e36d8    88  ldur x0, [x4, #7]
0xffff582e36dc    92  stur x0, [x2, #7]
0xffff582e36e0    96  ldur x0, [x4, #15]
0xffff582e36e4   100  stur x0, [x2, #15]
0xffff582e36e8   104  ldur x0, [x4, #23]
0xffff582e36ec   108  stur x0, [x2, #23]
0xffff582e36f0   112  add x0, x2, #0x20 (32)
0xffff582e36f4   116  ldr x1, pc+228 (addr 0x0000ffff582e37d8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e36f8   120  stur x1, [x0, #-1]
0xffff582e36fc   124  stur x7, [x0, #7]
0xffff582e3700   128  ldur w0, [x7, #35]
0xffff582e3704   132  add w0, w0, #0x1 (1)
0xffff582e3708   136  lsl x0, x0, #32
0xffff582e370c   140  stur x0, [x7, #31]
0xffff582e3710   144  mov x0, x2
0xffff582e3714   148  ret
0xffff582e3718   152  b #+0xe0 (addr 0xffff582e37f8)
0xffff582e371c   156  sub csp, jssp, #0x10 (16)
0xffff582e3720   160  stp fp, lr, [jssp, #-16]!
0xffff582e3724   164  movz fp, #0xa00000000
0xffff582e3728   168  sub csp, jssp, #0x8 (8)
0xffff582e372c   172  str fp, [jssp, #-8]!
0xffff582e3730   176  add fp, jssp, #0x8 (8)
0xffff582e3734   180  ldur x16, [x2, #-1]
0xffff582e3738   184  ldr x17, [x26, #120]
0xffff582e373c   188  cmp x16, x17
0xffff582e3740   192  b.ne #+0xc8 (addr 0xffff582e3808)
0xffff582e3744   196  ldur d29, [x2, #7]
0xffff582e3748   200  fcvtzs w6, d29
0xffff582e374c   204  scvtf d0, w6
0xffff582e3750   208  fcmp d29, d0
0xffff582e3754   212  b.ne #+0xb4 (addr 0xffff582e3808)
0xffff582e3758   216  ldr lr, [jssp, #16]
0xffff582e375c   220  ldp xzr, fp, [jssp], #24
0xffff582e3760   224  b #-0xd4 (addr 0xffff582e368c)
0xffff582e3764   228  sub csp, jssp, #0x10 (16)
0xffff582e3768   232  stp fp, lr, [jssp, #-16]!
0xffff582e376c   236  movz fp, #0xa00000000
0xffff582e3770   240  sub csp, jssp, #0x8 (8)
0xffff582e3774   244  str fp, [jssp, #-8]!
0xffff582e3778   248  add fp, jssp, #0x8 (8)
0xffff582e377c   252  movz x2, #0x0
0xffff582e3780   256  mov x16, lr
0xffff582e3784   260  ldr x17, pc+92 (addr 0x0000ffff582e37e0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582e3788   264  blr x17
0xffff582e378c   268  movz x0, #0x3000000000
0xffff582e3790   272  movz x10, #0x0
0xffff582e3794   276  sub csp, jssp, #0x10 (16)
0xffff582e3798   280  stp x10, x0, [jssp, #-16]!
0xffff582e379c   284  movz x0, #0x2
0xffff582e37a0   288  movz x1, #0x5b88
0xffff582e37a4   292  movk x1, #0xe2, lsl #16
0xffff582e37a8   296  ldr x16, pc+64 (addr 0x0000ffff582e37e8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582e37ac   300  blr x16
0xffff582e37b0   304  str x0, [jssp, #16]
0xffff582e37b4   308  ldr x16, pc+60 (addr 0x0000ffff582e37f0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582e37b8   312  blr x16
0xffff582e37bc   316  ldr lr, [jssp, #16]
0xffff582e37c0   320  ldp xzr, fp, [jssp], #24
0xffff582e37c4   324  b #-0xf0 (addr 0xffff582e36d4)
0xffff582e37c8   328  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff582e37cc   332  d63f03e0       constant
0xffff582e37d0   336  39c04241       constant
0xffff582e37d4   340  00000000       constant
0xffff582e37d8   344  32b05d81       constant
0xffff582e37dc   348  00000000       constant
0xffff582e37e0   352  58206820       constant
0xffff582e37e4   356  0000ffff       constant
0xffff582e37e8   360  58206260       constant
0xffff582e37ec   364  0000ffff       constant
0xffff582e37f0   368  582068e0       constant
0xffff582e37f4   372  0000ffff       constant
0xffff582e37f8   376  movz x16, #0x0
0xffff582e37fc   380  sub csp, jssp, #0x10 (16)
0xffff582e3800   384  stp fp, lr, [jssp, #-16]!
0xffff582e3804   388  bl #+0xc (addr 0xffff582e3810)
0xffff582e3808   392  movz x16, #0x8
0xffff582e380c   396  bl #+0x14 (addr 0xffff582e3820)
0xffff582e3810   400  movz x17, #0xa00000000
0xffff582e3814   404  sub csp, jssp, #0x10 (16)
0xffff582e3818   408  stp x17, cp, [jssp, #-16]!
0xffff582e381c   412  add fp, jssp, #0x10 (16)
0xffff582e3820   416  ldr x17, pc+24 (addr 0x0000ffff582e3838)    ;; lazy deoptimization bailout 0
0xffff582e3824   420  add x17, x17, x16
0xffff582e3828   424  br x17
0xffff582e382c   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582e3830   432  d63f03e0       constant
0xffff582e3834   436  d503201f       constant
0xffff582e3838   440  58006000       constant
0xffff582e383c   444  0000ffff       constant


Safepoints (size = 21)
0xffff582e37b0   304  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff582e3694  embedded object  (0x39c04241 <undefined>)
0xffff582e36f4  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e3784  code target (STUB)  (0xffff58206820)
0xffff582e37a8  code target (STUB)  (0xffff58206260)
0xffff582e37b4  code target (STUB)  (0xffff582068e0)
0xffff582e37c8  constant pool (size 48)
0xffff582e3820  runtime entry
0xffff582e382c  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 34
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 176)
0xffff582e4740     0  ldr x16, [x26, #64]
0xffff582e4744     4  cmp x0, x16
0xffff582e4748     8  b.eq #+0x3c (addr 0xffff582e4784)
0xffff582e474c    12  ldr x16, [x26, #72]
0xffff582e4750    16  cmp x0, x16
0xffff582e4754    20  b.eq #+0x28 (addr 0xffff582e477c)
0xffff582e4758    24  tbz w0, #0, #+0x50 (addr 0xffff582e47a8)
0xffff582e475c    28  ldur x2, [x0, #-1]
0xffff582e4760    32  ldrb w1, [x2, #11]
0xffff582e4764    36  cmp x1, #0x80 (128)
0xffff582e4768    40  b.ge #+0x10 (addr 0xffff582e4778)
0xffff582e476c    44  ldur x1, [x0, #15]
0xffff582e4770    48  cbz x1, #+0xc (addr 0xffff582e477c)
0xffff582e4774    52  b #+0x10 (addr 0xffff582e4784)
0xffff582e4778    56  b #+0x30 (addr 0xffff582e47a8)
0xffff582e477c    60  ldr x0, pc+28 (addr 0x0000ffff582e4798)    ;; object: 0x39c042b1 <false>
0xffff582e4780    64  ret
0xffff582e4784    68  ldr x0, pc+28 (addr 0x0000ffff582e47a0)    ;; object: 0x39c04281 <true>
0xffff582e4788    72  ret
0xffff582e478c    76  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582e4790    80  d63f03e0       constant
0xffff582e4794    84  d503201f       constant
0xffff582e4798    88  39c042b1       constant
0xffff582e479c    92  00000000       constant
0xffff582e47a0    96  39c04281       constant
0xffff582e47a4   100  00000000       constant
0xffff582e47a8   104  movz x16, #0x0
0xffff582e47ac   108  sub csp, jssp, #0x10 (16)
0xffff582e47b0   112  stp fp, lr, [jssp, #-16]!
0xffff582e47b4   116  bl #+0x4 (addr 0xffff582e47b8)
0xffff582e47b8   120  movz x17, #0xa00000000
0xffff582e47bc   124  sub csp, jssp, #0x10 (16)
0xffff582e47c0   128  stp x17, cp, [jssp, #-16]!
0xffff582e47c4   132  add fp, jssp, #0x10 (16)
0xffff582e47c8   136  ldr x17, pc+24 (addr 0x0000ffff582e47e0)    ;; lazy deoptimization bailout 0
0xffff582e47cc   140  add x17, x17, x16
0xffff582e47d0   144  br x17
0xffff582e47d4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582e47d8   152  d63f03e0       constant
0xffff582e47dc   156  d503201f       constant
0xffff582e47e0   160  58006000       constant
0xffff582e47e4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582e477c  embedded object  (0x39c042b1 <false>)
0xffff582e4784  embedded object  (0x39c04281 <true>)
0xffff582e478c  constant pool (size 28)
0xffff582e47c8  runtime entry
0xffff582e47d4  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 34
type = NORMAL
name = ToBooleanICStub(Bool,String)
compiler = crankshaft
Instructions (size = 176)
0xffff582e4740     0  ldr x16, [x26, #64]
0xffff582e4744     4  cmp x0, x16
0xffff582e4748     8  b.eq #+0x3c (addr 0xffff582e4784)
0xffff582e474c    12  ldr x16, [x26, #72]
0xffff582e4750    16  cmp x0, x16
0xffff582e4754    20  b.eq #+0x28 (addr 0xffff582e477c)
0xffff582e4758    24  tbz w0, #0, #+0x50 (addr 0xffff582e47a8)
0xffff582e475c    28  ldur x2, [x0, #-1]
0xffff582e4760    32  ldrb w1, [x2, #11]
0xffff582e4764    36  cmp x1, #0x80 (128)
0xffff582e4768    40  b.ge #+0x10 (addr 0xffff582e4778)
0xffff582e476c    44  ldur x1, [x0, #15]
0xffff582e4770    48  cbz x1, #+0xc (addr 0xffff582e477c)
0xffff582e4774    52  b #+0x10 (addr 0xffff582e4784)
0xffff582e4778    56  b #+0x30 (addr 0xffff582e47a8)
0xffff582e477c    60  ldr x0, pc+28 (addr 0x0000ffff582e4798)    ;; object: 0x39c042b1 <false>
0xffff582e4780    64  ret
0xffff582e4784    68  ldr x0, pc+28 (addr 0x0000ffff582e47a0)    ;; object: 0x39c04281 <true>
0xffff582e4788    72  ret
0xffff582e478c    76  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582e4790    80  d63f03e0       constant
0xffff582e4794    84  d503201f       constant
0xffff582e4798    88  39c042b1       constant
0xffff582e479c    92  00000000       constant
0xffff582e47a0    96  39c04281       constant
0xffff582e47a4   100  00000000       constant
0xffff582e47a8   104  movz x16, #0x0
0xffff582e47ac   108  sub csp, jssp, #0x10 (16)
0xffff582e47b0   112  stp fp, lr, [jssp, #-16]!
0xffff582e47b4   116  bl #+0x4 (addr 0xffff582e47b8)
0xffff582e47b8   120  movz x17, #0xa00000000
0xffff582e47bc   124  sub csp, jssp, #0x10 (16)
0xffff582e47c0   128  stp x17, cp, [jssp, #-16]!
0xffff582e47c4   132  add fp, jssp, #0x10 (16)
0xffff582e47c8   136  ldr x17, pc+24 (addr 0x0000ffff582e47e0)    ;; lazy deoptimization bailout 0
0xffff582e47cc   140  add x17, x17, x16
0xffff582e47d0   144  br x17
0xffff582e47d4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582e47d8   152  d63f03e0       constant
0xffff582e47dc   156  d503201f       constant
0xffff582e47e0   160  58006000       constant
0xffff582e47e4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582e477c  embedded object  (0x39c042b1 <false>)
0xffff582e4784  embedded object  (0x39c04281 <true>)
0xffff582e478c  constant pool (size 28)
0xffff582e47c8  runtime entry
0xffff582e47d4  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 20
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 160)
0xffff582e4860     0  ldr x16, [x26, #56]
0xffff582e4864     4  cmp x0, x16
0xffff582e4868     8  b.eq #+0x24 (addr 0xffff582e488c)
0xffff582e486c    12  tbz w0, #0, #+0x4c (addr 0xffff582e48b8)
0xffff582e4870    16  ldur x2, [x0, #-1]
0xffff582e4874    20  ldrb w1, [x2, #12]
0xffff582e4878    24  tbnz w1, #4, #+0x14 (addr 0xffff582e488c)
0xffff582e487c    28  ldrb w1, [x2, #11]
0xffff582e4880    32  cmp x1, #0xb1 (177)
0xffff582e4884    36  b.ge #+0x10 (addr 0xffff582e4894)
0xffff582e4888    40  b #+0x30 (addr 0xffff582e48b8)
0xffff582e488c    44  ldr x0, pc+28 (addr 0x0000ffff582e48a8)    ;; object: 0x39c042b1 <false>
0xffff582e4890    48  ret
0xffff582e4894    52  ldr x0, pc+28 (addr 0x0000ffff582e48b0)    ;; object: 0x39c04281 <true>
0xffff582e4898    56  ret
0xffff582e489c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582e48a0    64  d63f03e0       constant
0xffff582e48a4    68  d503201f       constant
0xffff582e48a8    72  39c042b1       constant
0xffff582e48ac    76  00000000       constant
0xffff582e48b0    80  39c04281       constant
0xffff582e48b4    84  00000000       constant
0xffff582e48b8    88  movz x16, #0x0
0xffff582e48bc    92  sub csp, jssp, #0x10 (16)
0xffff582e48c0    96  stp fp, lr, [jssp, #-16]!
0xffff582e48c4   100  bl #+0x4 (addr 0xffff582e48c8)
0xffff582e48c8   104  movz x17, #0xa00000000
0xffff582e48cc   108  sub csp, jssp, #0x10 (16)
0xffff582e48d0   112  stp x17, cp, [jssp, #-16]!
0xffff582e48d4   116  add fp, jssp, #0x10 (16)
0xffff582e48d8   120  ldr x17, pc+24 (addr 0x0000ffff582e48f0)    ;; lazy deoptimization bailout 0
0xffff582e48dc   124  add x17, x17, x16
0xffff582e48e0   128  br x17
0xffff582e48e4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582e48e8   136  d63f03e0       constant
0xffff582e48ec   140  d503201f       constant
0xffff582e48f0   144  58006000       constant
0xffff582e48f4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582e488c  embedded object  (0x39c042b1 <false>)
0xffff582e4894  embedded object  (0x39c04281 <true>)
0xffff582e489c  constant pool (size 28)
0xffff582e48d8  runtime entry
0xffff582e48e4  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 20
type = NORMAL
name = ToBooleanICStub(Null,SpecObject)
compiler = crankshaft
Instructions (size = 160)
0xffff582e4860     0  ldr x16, [x26, #56]
0xffff582e4864     4  cmp x0, x16
0xffff582e4868     8  b.eq #+0x24 (addr 0xffff582e488c)
0xffff582e486c    12  tbz w0, #0, #+0x4c (addr 0xffff582e48b8)
0xffff582e4870    16  ldur x2, [x0, #-1]
0xffff582e4874    20  ldrb w1, [x2, #12]
0xffff582e4878    24  tbnz w1, #4, #+0x14 (addr 0xffff582e488c)
0xffff582e487c    28  ldrb w1, [x2, #11]
0xffff582e4880    32  cmp x1, #0xb1 (177)
0xffff582e4884    36  b.ge #+0x10 (addr 0xffff582e4894)
0xffff582e4888    40  b #+0x30 (addr 0xffff582e48b8)
0xffff582e488c    44  ldr x0, pc+28 (addr 0x0000ffff582e48a8)    ;; object: 0x39c042b1 <false>
0xffff582e4890    48  ret
0xffff582e4894    52  ldr x0, pc+28 (addr 0x0000ffff582e48b0)    ;; object: 0x39c04281 <true>
0xffff582e4898    56  ret
0xffff582e489c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582e48a0    64  d63f03e0       constant
0xffff582e48a4    68  d503201f       constant
0xffff582e48a8    72  39c042b1       constant
0xffff582e48ac    76  00000000       constant
0xffff582e48b0    80  39c04281       constant
0xffff582e48b4    84  00000000       constant
0xffff582e48b8    88  movz x16, #0x0
0xffff582e48bc    92  sub csp, jssp, #0x10 (16)
0xffff582e48c0    96  stp fp, lr, [jssp, #-16]!
0xffff582e48c4   100  bl #+0x4 (addr 0xffff582e48c8)
0xffff582e48c8   104  movz x17, #0xa00000000
0xffff582e48cc   108  sub csp, jssp, #0x10 (16)
0xffff582e48d0   112  stp x17, cp, [jssp, #-16]!
0xffff582e48d4   116  add fp, jssp, #0x10 (16)
0xffff582e48d8   120  ldr x17, pc+24 (addr 0x0000ffff582e48f0)    ;; lazy deoptimization bailout 0
0xffff582e48dc   124  add x17, x17, x16
0xffff582e48e0   128  br x17
0xffff582e48e4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582e48e8   136  d63f03e0       constant
0xffff582e48ec   140  d503201f       constant
0xffff582e48f0   144  58006000       constant
0xffff582e48f4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582e488c  embedded object  (0x39c042b1 <false>)
0xffff582e4894  embedded object  (0x39c04281 <true>)
0xffff582e489c  constant pool (size 28)
0xffff582e48d8  runtime entry
0xffff582e48e4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582e4960     0  ldur x0, [x1, #-1]
0xffff582e4964     4  ldur x0, [x0, #47]
0xffff582e4968     8  movz x16, #0x17f
0xffff582e496c    12  ldr x0, [x0, x16]
0xffff582e4970    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582e4960     0  ldur x0, [x1, #-1]
0xffff582e4964     4  ldur x0, [x0, #47]
0xffff582e4968     8  movz x16, #0x17f
0xffff582e496c    12  ldr x0, [x0, x16]
0xffff582e4970    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = JSON
compiler = unknown
Instructions (size = 120)
0xffff582e58c0     0  sub csp, jssp, #0x8 (8)
0xffff582e58c4     4  str x3, [jssp, #-8]!
0xffff582e58c8     8  sub csp, jssp, #0x8 (8)
0xffff582e58cc    12  str x0, [jssp, #-8]!
0xffff582e58d0    16  ldr x0, pc+80 (addr 0x0000ffff582e5920)    ;; object: 0x39cc5d51 Cell for 0
0xffff582e58d4    20  ldur x0, [x0, #7]
0xffff582e58d8    24  cmp x0, #0x0 (0)
0xffff582e58dc    28  b.ne #+0x2c (addr 0xffff582e5908)
0xffff582e58e0    32  ldr x0, pc+72 (addr 0x0000ffff582e5928)    ;; object: 0x225cb379 WeakCell for 0x39c46d21 PropertyCell for 0x39c46ce9 <a JSON with map 0x32b13b91>
0xffff582e58e4    36  ldur x0, [x0, #7]
0xffff582e58e8    40  tbz w0, #0, #+0x20 (addr 0xffff582e5908)
0xffff582e58ec    44  ldur x0, [x0, #15]
0xffff582e58f0    48  ldr x16, [x26, #88]
0xffff582e58f4    52  cmp x0, x16
0xffff582e58f8    56  b.eq #+0x10 (addr 0xffff582e5908)
0xffff582e58fc    60  add jssp, jssp, #0x10 (16)
0xffff582e5900    64  ret
0xffff582e5904    68  b #+0x14 (addr 0xffff582e5918)
0xffff582e5908    72  ldr x0, [jssp], #8
0xffff582e590c    76  ldr x3, [jssp], #8
0xffff582e5910    80  ldr x16, pc+32 (addr 0x0000ffff582e5930)    ;; code: BUILTIN
0xffff582e5914    84  br x16
0xffff582e5918    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582e591c    92  d63f03e0       constant
0xffff582e5920    96  39cc5d51       constant
0xffff582e5924   100  00000000       constant
0xffff582e5928   104  225cb379       constant
0xffff582e592c   108  00000000       constant
0xffff582e5930   112  582222e0       constant
0xffff582e5934   116  0000ffff       constant


RelocInfo (size = 9)
0xffff582e58d0  embedded object  (0x39cc5d51 Cell for 0)
0xffff582e58e0  embedded object  (0x225cb379 WeakCell for 0x39c46d21 PropertyCell for 0x39c46ce9 <a JSON with map 0x32b13b91>)
0xffff582e5910  code target (BUILTIN)  (0xffff582222e0)
0xffff582e5918  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = toString
compiler = unknown
Instructions (size = 152)
0xffff582e59a0     0  sub csp, jssp, #0x8 (8)
0xffff582e59a4     4  str x3, [jssp, #-8]!
0xffff582e59a8     8  sub csp, jssp, #0x8 (8)
0xffff582e59ac    12  str x0, [jssp, #-8]!
0xffff582e59b0    16  ldur x3, [cp, #39]
0xffff582e59b4    20  movz x16, #0x2e7
0xffff582e59b8    24  ldr x3, [x3, x16]
0xffff582e59bc    28  ldur x3, [x3, #23]
0xffff582e59c0    32  ldur x3, [x3, #23]
0xffff582e59c4    36  ldr x0, pc+84 (addr 0x0000ffff582e5a18)    ;; object: 0x39c63e59 Cell for 0
0xffff582e59c8    40  ldur x0, [x0, #7]
0xffff582e59cc    44  cmp x0, #0x0 (0)
0xffff582e59d0    48  b.ne #+0x1c (addr 0xffff582e59ec)
0xffff582e59d4    52  ldur x0, [x3, #-1]
0xffff582e59d8    56  ldr x4, pc+72 (addr 0x0000ffff582e5a20)    ;; object: 0x22506e39 WeakCell for 0x32b156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff582e59dc    60  ldur x4, [x4, #7]
0xffff582e59e0    64  cmp x0, x4
0xffff582e59e4    68  b.ne #+0x8 (addr 0xffff582e59ec)
0xffff582e59e8    72  b #+0x14 (addr 0xffff582e59fc)
0xffff582e59ec    76  ldr x0, [jssp], #8
0xffff582e59f0    80  ldr x3, [jssp], #8
0xffff582e59f4    84  ldr x16, pc+52 (addr 0x0000ffff582e5a28)    ;; code: BUILTIN
0xffff582e59f8    88  br x16
0xffff582e59fc    92  add jssp, jssp, #0x10 (16)
0xffff582e5a00    96  mov x1, x3
0xffff582e5a04   100  ldr x16, pc+44 (addr 0x0000ffff582e5a30)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff582e5a08   104  br x16
0xffff582e5a0c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff582e5a10   112  d63f03e0       constant
0xffff582e5a14   116  d503201f       constant
0xffff582e5a18   120  39c63e59       constant
0xffff582e5a1c   124  00000000       constant
0xffff582e5a20   128  22506e39       constant
0xffff582e5a24   132  00000000       constant
0xffff582e5a28   136  582222e0       constant
0xffff582e5a2c   140  0000ffff       constant
0xffff582e5a30   144  58243400       constant
0xffff582e5a34   148  0000ffff       constant


RelocInfo (size = 10)
0xffff582e59c4  embedded object  (0x39c63e59 Cell for 0)
0xffff582e59d8  embedded object  (0x22506e39 WeakCell for 0x32b156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff582e59f4  code target (BUILTIN)  (0xffff582222e0)
0xffff582e5a04  code target (HANDLER)  (0xffff58243400)
0xffff582e5a0c  constant pool (size 44)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 96)
0xffff582e5aa0     0  sub csp, jssp, #0x8 (8)
0xffff582e5aa4     4  str x3, [jssp, #-8]!
0xffff582e5aa8     8  sub csp, jssp, #0x8 (8)
0xffff582e5aac    12  str x0, [jssp, #-8]!
0xffff582e5ab0    16  ldr x0, pc+56 (addr 0x0000ffff582e5ae8)    ;; object: 0x39c63e59 Cell for 0
0xffff582e5ab4    20  ldur x0, [x0, #7]
0xffff582e5ab8    24  cmp x0, #0x0 (0)
0xffff582e5abc    28  b.ne #+0x14 (addr 0xffff582e5ad0)
0xffff582e5ac0    32  add jssp, jssp, #0x10 (16)
0xffff582e5ac4    36  ldr x0, pc+44 (addr 0x0000ffff582e5af0)    ;; object: 0x39c04241 <undefined>
0xffff582e5ac8    40  ret
0xffff582e5acc    44  b #+0x14 (addr 0xffff582e5ae0)
0xffff582e5ad0    48  ldr x0, [jssp], #8
0xffff582e5ad4    52  ldr x3, [jssp], #8
0xffff582e5ad8    56  ldr x16, pc+32 (addr 0x0000ffff582e5af8)    ;; code: BUILTIN
0xffff582e5adc    60  br x16
0xffff582e5ae0    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582e5ae4    68  d63f03e0       constant
0xffff582e5ae8    72  39c63e59       constant
0xffff582e5aec    76  00000000       constant
0xffff582e5af0    80  39c04241       constant
0xffff582e5af4    84  00000000       constant
0xffff582e5af8    88  582222e0       constant
0xffff582e5afc    92  0000ffff       constant


RelocInfo (size = 9)
0xffff582e5ab0  embedded object  (0x39c63e59 Cell for 0)
0xffff582e5ac4  embedded object  (0x39c04241 <undefined>)
0xffff582e5ad8  code target (BUILTIN)  (0xffff582222e0)
0xffff582e5ae0  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = id
compiler = unknown
Instructions (size = 152)
0xffff582e5b60     0  sub csp, jssp, #0x8 (8)
0xffff582e5b64     4  str x3, [jssp, #-8]!
0xffff582e5b68     8  sub csp, jssp, #0x8 (8)
0xffff582e5b6c    12  str x4, [jssp, #-8]!
0xffff582e5b70    16  ldr x3, pc+88 (addr 0x0000ffff582e5bc8)    ;; object: 0x225cb5c9 Cell for 0
0xffff582e5b74    20  ldur x3, [x3, #7]
0xffff582e5b78    24  cmp x3, #0x0 (0)
0xffff582e5b7c    28  b.ne #+0x30 (addr 0xffff582e5bac)
0xffff582e5b80    32  tbz w0, #0, #+0x2c (addr 0xffff582e5bac)
0xffff582e5b84    36  ldr x5, pc+76 (addr 0x0000ffff582e5bd0)    ;; object: 0x22536b19 WeakCell for 0x32b362f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e5b88    40  ldur x5, [x5, #7]
0xffff582e5b8c    44  tbz w5, #0, #+0x20 (addr 0xffff582e5bac)
0xffff582e5b90    48  ldursw x4, [x5, #15]
0xffff582e5b94    52  tbnz w4, #23, #+0x18 (addr 0xffff582e5bac)
0xffff582e5b98    56  ldr x4, [jssp], #8
0xffff582e5b9c    60  ldr x3, [jssp], #8
0xffff582e5ba0    64  ldr x2, pc+56 (addr 0x0000ffff582e5bd8)    ;; object: 0x39c4e919 <String[2]: id>
0xffff582e5ba4    68  ldr x16, pc+60 (addr 0x0000ffff582e5be0)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff582e5ba8    72  br x16
0xffff582e5bac    76  ldr x2, pc+60 (addr 0x0000ffff582e5be8)    ;; object: 0x39c4e919 <String[2]: id>
0xffff582e5bb0    80  ldr x4, [jssp], #8
0xffff582e5bb4    84  ldr x3, [jssp], #8
0xffff582e5bb8    88  ldr x16, pc+56 (addr 0x0000ffff582e5bf0)    ;; code: BUILTIN
0xffff582e5bbc    92  br x16
0xffff582e5bc0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582e5bc4   100  d63f03e0       constant
0xffff582e5bc8   104  225cb5c9       constant
0xffff582e5bcc   108  00000000       constant
0xffff582e5bd0   112  22536b19       constant
0xffff582e5bd4   116  00000000       constant
0xffff582e5bd8   120  39c4e919       constant
0xffff582e5bdc   124  00000000       constant
0xffff582e5be0   128  5828b940       constant
0xffff582e5be4   132  0000ffff       constant
0xffff582e5be8   136  39c4e919       constant
0xffff582e5bec   140  00000000       constant
0xffff582e5bf0   144  58222420       constant
0xffff582e5bf4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582e5b70  embedded object  (0x225cb5c9 Cell for 0)
0xffff582e5b84  embedded object  (0x22536b19 WeakCell for 0x32b362f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e5ba0  embedded object  (0x39c4e919 <String[2]: id>)
0xffff582e5ba4  code target (HANDLER)  (0xffff5828b940)
0xffff582e5bac  embedded object  (0x39c4e919 <String[2]: id>)
0xffff582e5bb8  code target (BUILTIN)  (0xffff58222420)
0xffff582e5bc0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = exports
compiler = unknown
Instructions (size = 152)
0xffff582e5c60     0  sub csp, jssp, #0x8 (8)
0xffff582e5c64     4  str x3, [jssp, #-8]!
0xffff582e5c68     8  sub csp, jssp, #0x8 (8)
0xffff582e5c6c    12  str x4, [jssp, #-8]!
0xffff582e5c70    16  ldr x3, pc+88 (addr 0x0000ffff582e5cc8)    ;; object: 0x225cb5c9 Cell for 0
0xffff582e5c74    20  ldur x3, [x3, #7]
0xffff582e5c78    24  cmp x3, #0x0 (0)
0xffff582e5c7c    28  b.ne #+0x30 (addr 0xffff582e5cac)
0xffff582e5c80    32  tbz w0, #0, #+0x2c (addr 0xffff582e5cac)
0xffff582e5c84    36  ldr x5, pc+76 (addr 0x0000ffff582e5cd0)    ;; object: 0x22536b69 WeakCell for 0x32b36349 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e5c88    40  ldur x5, [x5, #7]
0xffff582e5c8c    44  tbz w5, #0, #+0x20 (addr 0xffff582e5cac)
0xffff582e5c90    48  ldursw x4, [x5, #15]
0xffff582e5c94    52  tbnz w4, #23, #+0x18 (addr 0xffff582e5cac)
0xffff582e5c98    56  ldr x4, [jssp], #8
0xffff582e5c9c    60  ldr x3, [jssp], #8
0xffff582e5ca0    64  ldr x2, pc+56 (addr 0x0000ffff582e5cd8)    ;; object: 0x39cb2651 <String[7]: exports>
0xffff582e5ca4    68  ldr x16, pc+60 (addr 0x0000ffff582e5ce0)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff582e5ca8    72  br x16
0xffff582e5cac    76  ldr x2, pc+60 (addr 0x0000ffff582e5ce8)    ;; object: 0x39cb2651 <String[7]: exports>
0xffff582e5cb0    80  ldr x4, [jssp], #8
0xffff582e5cb4    84  ldr x3, [jssp], #8
0xffff582e5cb8    88  ldr x16, pc+56 (addr 0x0000ffff582e5cf0)    ;; code: BUILTIN
0xffff582e5cbc    92  br x16
0xffff582e5cc0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582e5cc4   100  d63f03e0       constant
0xffff582e5cc8   104  225cb5c9       constant
0xffff582e5ccc   108  00000000       constant
0xffff582e5cd0   112  22536b69       constant
0xffff582e5cd4   116  00000000       constant
0xffff582e5cd8   120  39cb2651       constant
0xffff582e5cdc   124  00000000       constant
0xffff582e5ce0   128  5828bb80       constant
0xffff582e5ce4   132  0000ffff       constant
0xffff582e5ce8   136  39cb2651       constant
0xffff582e5cec   140  00000000       constant
0xffff582e5cf0   144  58222420       constant
0xffff582e5cf4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582e5c70  embedded object  (0x225cb5c9 Cell for 0)
0xffff582e5c84  embedded object  (0x22536b69 WeakCell for 0x32b36349 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e5ca0  embedded object  (0x39cb2651 <String[7]: exports>)
0xffff582e5ca4  code target (HANDLER)  (0xffff5828bb80)
0xffff582e5cac  embedded object  (0x39cb2651 <String[7]: exports>)
0xffff582e5cb8  code target (BUILTIN)  (0xffff58222420)
0xffff582e5cc0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = parent
compiler = unknown
Instructions (size = 152)
0xffff582e5d60     0  sub csp, jssp, #0x8 (8)
0xffff582e5d64     4  str x3, [jssp, #-8]!
0xffff582e5d68     8  sub csp, jssp, #0x8 (8)
0xffff582e5d6c    12  str x4, [jssp, #-8]!
0xffff582e5d70    16  ldr x3, pc+88 (addr 0x0000ffff582e5dc8)    ;; object: 0x225cb5c9 Cell for 0
0xffff582e5d74    20  ldur x3, [x3, #7]
0xffff582e5d78    24  cmp x3, #0x0 (0)
0xffff582e5d7c    28  b.ne #+0x30 (addr 0xffff582e5dac)
0xffff582e5d80    32  tbz w0, #0, #+0x2c (addr 0xffff582e5dac)
0xffff582e5d84    36  ldr x5, pc+76 (addr 0x0000ffff582e5dd0)    ;; object: 0x22536b81 WeakCell for 0x32b363a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e5d88    40  ldur x5, [x5, #7]
0xffff582e5d8c    44  tbz w5, #0, #+0x20 (addr 0xffff582e5dac)
0xffff582e5d90    48  ldursw x4, [x5, #15]
0xffff582e5d94    52  tbnz w4, #23, #+0x18 (addr 0xffff582e5dac)
0xffff582e5d98    56  ldr x4, [jssp], #8
0xffff582e5d9c    60  ldr x3, [jssp], #8
0xffff582e5da0    64  ldr x2, pc+56 (addr 0x0000ffff582e5dd8)    ;; object: 0x39ccfca1 <String[6]: parent>
0xffff582e5da4    68  ldr x16, pc+60 (addr 0x0000ffff582e5de0)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff582e5da8    72  br x16
0xffff582e5dac    76  ldr x2, pc+60 (addr 0x0000ffff582e5de8)    ;; object: 0x39ccfca1 <String[6]: parent>
0xffff582e5db0    80  ldr x4, [jssp], #8
0xffff582e5db4    84  ldr x3, [jssp], #8
0xffff582e5db8    88  ldr x16, pc+56 (addr 0x0000ffff582e5df0)    ;; code: BUILTIN
0xffff582e5dbc    92  br x16
0xffff582e5dc0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582e5dc4   100  d63f03e0       constant
0xffff582e5dc8   104  225cb5c9       constant
0xffff582e5dcc   108  00000000       constant
0xffff582e5dd0   112  22536b81       constant
0xffff582e5dd4   116  00000000       constant
0xffff582e5dd8   120  39ccfca1       constant
0xffff582e5ddc   124  00000000       constant
0xffff582e5de0   128  5828bdc0       constant
0xffff582e5de4   132  0000ffff       constant
0xffff582e5de8   136  39ccfca1       constant
0xffff582e5dec   140  00000000       constant
0xffff582e5df0   144  58222420       constant
0xffff582e5df4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582e5d70  embedded object  (0x225cb5c9 Cell for 0)
0xffff582e5d84  embedded object  (0x22536b81 WeakCell for 0x32b363a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e5da0  embedded object  (0x39ccfca1 <String[6]: parent>)
0xffff582e5da4  code target (HANDLER)  (0xffff5828bdc0)
0xffff582e5dac  embedded object  (0x39ccfca1 <String[6]: parent>)
0xffff582e5db8  code target (BUILTIN)  (0xffff58222420)
0xffff582e5dc0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = filename
compiler = unknown
Instructions (size = 152)
0xffff582e5e60     0  sub csp, jssp, #0x8 (8)
0xffff582e5e64     4  str x3, [jssp, #-8]!
0xffff582e5e68     8  sub csp, jssp, #0x8 (8)
0xffff582e5e6c    12  str x4, [jssp, #-8]!
0xffff582e5e70    16  ldr x3, pc+88 (addr 0x0000ffff582e5ec8)    ;; object: 0x225cb5c9 Cell for 0
0xffff582e5e74    20  ldur x3, [x3, #7]
0xffff582e5e78    24  cmp x3, #0x0 (0)
0xffff582e5e7c    28  b.ne #+0x30 (addr 0xffff582e5eac)
0xffff582e5e80    32  tbz w0, #0, #+0x2c (addr 0xffff582e5eac)
0xffff582e5e84    36  ldr x5, pc+76 (addr 0x0000ffff582e5ed0)    ;; object: 0x22536b99 WeakCell for 0x32b363f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e5e88    40  ldur x5, [x5, #7]
0xffff582e5e8c    44  tbz w5, #0, #+0x20 (addr 0xffff582e5eac)
0xffff582e5e90    48  ldursw x4, [x5, #15]
0xffff582e5e94    52  tbnz w4, #23, #+0x18 (addr 0xffff582e5eac)
0xffff582e5e98    56  ldr x4, [jssp], #8
0xffff582e5e9c    60  ldr x3, [jssp], #8
0xffff582e5ea0    64  ldr x2, pc+56 (addr 0x0000ffff582e5ed8)    ;; object: 0x39cb9cf1 <String[8]: filename>
0xffff582e5ea4    68  ldr x16, pc+60 (addr 0x0000ffff582e5ee0)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff582e5ea8    72  br x16
0xffff582e5eac    76  ldr x2, pc+60 (addr 0x0000ffff582e5ee8)    ;; object: 0x39cb9cf1 <String[8]: filename>
0xffff582e5eb0    80  ldr x4, [jssp], #8
0xffff582e5eb4    84  ldr x3, [jssp], #8
0xffff582e5eb8    88  ldr x16, pc+56 (addr 0x0000ffff582e5ef0)    ;; code: BUILTIN
0xffff582e5ebc    92  br x16
0xffff582e5ec0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582e5ec4   100  d63f03e0       constant
0xffff582e5ec8   104  225cb5c9       constant
0xffff582e5ecc   108  00000000       constant
0xffff582e5ed0   112  22536b99       constant
0xffff582e5ed4   116  00000000       constant
0xffff582e5ed8   120  39cb9cf1       constant
0xffff582e5edc   124  00000000       constant
0xffff582e5ee0   128  5828c000       constant
0xffff582e5ee4   132  0000ffff       constant
0xffff582e5ee8   136  39cb9cf1       constant
0xffff582e5eec   140  00000000       constant
0xffff582e5ef0   144  58222420       constant
0xffff582e5ef4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582e5e70  embedded object  (0x225cb5c9 Cell for 0)
0xffff582e5e84  embedded object  (0x22536b99 WeakCell for 0x32b363f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e5ea0  embedded object  (0x39cb9cf1 <String[8]: filename>)
0xffff582e5ea4  code target (HANDLER)  (0xffff5828c000)
0xffff582e5eac  embedded object  (0x39cb9cf1 <String[8]: filename>)
0xffff582e5eb8  code target (BUILTIN)  (0xffff58222420)
0xffff582e5ec0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = loaded
compiler = unknown
Instructions (size = 152)
0xffff582e5f60     0  sub csp, jssp, #0x8 (8)
0xffff582e5f64     4  str x3, [jssp, #-8]!
0xffff582e5f68     8  sub csp, jssp, #0x8 (8)
0xffff582e5f6c    12  str x4, [jssp, #-8]!
0xffff582e5f70    16  ldr x3, pc+88 (addr 0x0000ffff582e5fc8)    ;; object: 0x225cb5c9 Cell for 0
0xffff582e5f74    20  ldur x3, [x3, #7]
0xffff582e5f78    24  cmp x3, #0x0 (0)
0xffff582e5f7c    28  b.ne #+0x30 (addr 0xffff582e5fac)
0xffff582e5f80    32  tbz w0, #0, #+0x2c (addr 0xffff582e5fac)
0xffff582e5f84    36  ldr x5, pc+76 (addr 0x0000ffff582e5fd0)    ;; object: 0x22536bb1 WeakCell for 0x32b36451 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e5f88    40  ldur x5, [x5, #7]
0xffff582e5f8c    44  tbz w5, #0, #+0x20 (addr 0xffff582e5fac)
0xffff582e5f90    48  ldursw x4, [x5, #15]
0xffff582e5f94    52  tbnz w4, #23, #+0x18 (addr 0xffff582e5fac)
0xffff582e5f98    56  ldr x4, [jssp], #8
0xffff582e5f9c    60  ldr x3, [jssp], #8
0xffff582e5fa0    64  ldr x2, pc+56 (addr 0x0000ffff582e5fd8)    ;; object: 0x39cba9e1 <String[6]: loaded>
0xffff582e5fa4    68  ldr x16, pc+60 (addr 0x0000ffff582e5fe0)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff582e5fa8    72  br x16
0xffff582e5fac    76  ldr x2, pc+60 (addr 0x0000ffff582e5fe8)    ;; object: 0x39cba9e1 <String[6]: loaded>
0xffff582e5fb0    80  ldr x4, [jssp], #8
0xffff582e5fb4    84  ldr x3, [jssp], #8
0xffff582e5fb8    88  ldr x16, pc+56 (addr 0x0000ffff582e5ff0)    ;; code: BUILTIN
0xffff582e5fbc    92  br x16
0xffff582e5fc0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582e5fc4   100  d63f03e0       constant
0xffff582e5fc8   104  225cb5c9       constant
0xffff582e5fcc   108  00000000       constant
0xffff582e5fd0   112  22536bb1       constant
0xffff582e5fd4   116  00000000       constant
0xffff582e5fd8   120  39cba9e1       constant
0xffff582e5fdc   124  00000000       constant
0xffff582e5fe0   128  5828c240       constant
0xffff582e5fe4   132  0000ffff       constant
0xffff582e5fe8   136  39cba9e1       constant
0xffff582e5fec   140  00000000       constant
0xffff582e5ff0   144  58222420       constant
0xffff582e5ff4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582e5f70  embedded object  (0x225cb5c9 Cell for 0)
0xffff582e5f84  embedded object  (0x22536bb1 WeakCell for 0x32b36451 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e5fa0  embedded object  (0x39cba9e1 <String[6]: loaded>)
0xffff582e5fa4  code target (HANDLER)  (0xffff5828c240)
0xffff582e5fac  embedded object  (0x39cba9e1 <String[6]: loaded>)
0xffff582e5fb8  code target (BUILTIN)  (0xffff58222420)
0xffff582e5fc0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582e6060     0  tbz w0, #0, #+0x90 (addr 0xffff582e60f0)
0xffff582e6064     4  mov x2, x0
0xffff582e6068     8  stur x2, [x1, #63]
0xffff582e606c    12  add x3, x1, #0x3f (63)
0xffff582e6070    16  and x2, x2, #0xfffffffffff00000
0xffff582e6074    20  ldr x2, [x2, #8]
0xffff582e6078    24  tbz w2, #1, #+0x24 (addr 0xffff582e609c)
0xffff582e607c    28  and x2, x1, #0xfffffffffff00000
0xffff582e6080    32  ldr x2, [x2, #8]
0xffff582e6084    36  tbz w2, #2, #+0x18 (addr 0xffff582e609c)
0xffff582e6088    40  sub csp, jssp, #0x8 (8)
0xffff582e608c    44  str lr, [jssp, #-8]!
0xffff582e6090    48  ldr x16, pc+80 (addr 0x0000ffff582e60e0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582e6094    52  blr x16
0xffff582e6098    56  ldr lr, [jssp], #8
0xffff582e609c    60  stur x5, [x1, #-1]
0xffff582e60a0    64  tbz w5, #0, #+0x34 (addr 0xffff582e60d4)
0xffff582e60a4    68  sub x2, x1, #0x1 (1)
0xffff582e60a8    72  and x5, x5, #0xfffffffffff00000
0xffff582e60ac    76  ldr x5, [x5, #8]
0xffff582e60b0    80  tbz w5, #1, #+0x24 (addr 0xffff582e60d4)
0xffff582e60b4    84  and x5, x1, #0xfffffffffff00000
0xffff582e60b8    88  ldr x5, [x5, #8]
0xffff582e60bc    92  tbz w5, #2, #+0x18 (addr 0xffff582e60d4)
0xffff582e60c0    96  sub csp, jssp, #0x8 (8)
0xffff582e60c4   100  str lr, [jssp, #-8]!
0xffff582e60c8   104  ldr x16, pc+32 (addr 0x0000ffff582e60e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582e60cc   108  blr x16
0xffff582e60d0   112  ldr lr, [jssp], #8
0xffff582e60d4   116  ret
0xffff582e60d8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582e60dc   124  d63f03e0       constant
0xffff582e60e0   128  582170c0       constant
0xffff582e60e4   132  0000ffff       constant
0xffff582e60e8   136  58238080       constant
0xffff582e60ec   140  0000ffff       constant
0xffff582e60f0   144  movz x16, #0x0
0xffff582e60f4   148  sub csp, jssp, #0x10 (16)
0xffff582e60f8   152  stp fp, lr, [jssp, #-16]!
0xffff582e60fc   156  bl #+0x4 (addr 0xffff582e6100)
0xffff582e6100   160  movz x17, #0xa00000000
0xffff582e6104   164  sub csp, jssp, #0x10 (16)
0xffff582e6108   168  stp x17, cp, [jssp, #-16]!
0xffff582e610c   172  add fp, jssp, #0x10 (16)
0xffff582e6110   176  ldr x17, pc+24 (addr 0x0000ffff582e6128)    ;; lazy deoptimization bailout 0
0xffff582e6114   180  add x17, x17, x16
0xffff582e6118   184  br x17
0xffff582e611c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582e6120   192  d63f03e0       constant
0xffff582e6124   196  d503201f       constant
0xffff582e6128   200  58006000       constant
0xffff582e612c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582e6090  code target (STUB)  (0xffff582170c0)
0xffff582e60c8  code target (STUB)  (0xffff58238080)
0xffff582e60d8  constant pool (size 24)
0xffff582e6110  runtime entry
0xffff582e611c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582e6060     0  tbz w0, #0, #+0x90 (addr 0xffff582e60f0)
0xffff582e6064     4  mov x2, x0
0xffff582e6068     8  stur x2, [x1, #63]
0xffff582e606c    12  add x3, x1, #0x3f (63)
0xffff582e6070    16  and x2, x2, #0xfffffffffff00000
0xffff582e6074    20  ldr x2, [x2, #8]
0xffff582e6078    24  tbz w2, #1, #+0x24 (addr 0xffff582e609c)
0xffff582e607c    28  and x2, x1, #0xfffffffffff00000
0xffff582e6080    32  ldr x2, [x2, #8]
0xffff582e6084    36  tbz w2, #2, #+0x18 (addr 0xffff582e609c)
0xffff582e6088    40  sub csp, jssp, #0x8 (8)
0xffff582e608c    44  str lr, [jssp, #-8]!
0xffff582e6090    48  ldr x16, pc+80 (addr 0x0000ffff582e60e0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582e6094    52  blr x16
0xffff582e6098    56  ldr lr, [jssp], #8
0xffff582e609c    60  stur x5, [x1, #-1]
0xffff582e60a0    64  tbz w5, #0, #+0x34 (addr 0xffff582e60d4)
0xffff582e60a4    68  sub x2, x1, #0x1 (1)
0xffff582e60a8    72  and x5, x5, #0xfffffffffff00000
0xffff582e60ac    76  ldr x5, [x5, #8]
0xffff582e60b0    80  tbz w5, #1, #+0x24 (addr 0xffff582e60d4)
0xffff582e60b4    84  and x5, x1, #0xfffffffffff00000
0xffff582e60b8    88  ldr x5, [x5, #8]
0xffff582e60bc    92  tbz w5, #2, #+0x18 (addr 0xffff582e60d4)
0xffff582e60c0    96  sub csp, jssp, #0x8 (8)
0xffff582e60c4   100  str lr, [jssp, #-8]!
0xffff582e60c8   104  ldr x16, pc+32 (addr 0x0000ffff582e60e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582e60cc   108  blr x16
0xffff582e60d0   112  ldr lr, [jssp], #8
0xffff582e60d4   116  ret
0xffff582e60d8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582e60dc   124  d63f03e0       constant
0xffff582e60e0   128  582170c0       constant
0xffff582e60e4   132  0000ffff       constant
0xffff582e60e8   136  58238080       constant
0xffff582e60ec   140  0000ffff       constant
0xffff582e60f0   144  movz x16, #0x0
0xffff582e60f4   148  sub csp, jssp, #0x10 (16)
0xffff582e60f8   152  stp fp, lr, [jssp, #-16]!
0xffff582e60fc   156  bl #+0x4 (addr 0xffff582e6100)
0xffff582e6100   160  movz x17, #0xa00000000
0xffff582e6104   164  sub csp, jssp, #0x10 (16)
0xffff582e6108   168  stp x17, cp, [jssp, #-16]!
0xffff582e610c   172  add fp, jssp, #0x10 (16)
0xffff582e6110   176  ldr x17, pc+24 (addr 0x0000ffff582e6128)    ;; lazy deoptimization bailout 0
0xffff582e6114   180  add x17, x17, x16
0xffff582e6118   184  br x17
0xffff582e611c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582e6120   192  d63f03e0       constant
0xffff582e6124   196  d503201f       constant
0xffff582e6128   200  58006000       constant
0xffff582e612c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582e6090  code target (STUB)  (0xffff582170c0)
0xffff582e60c8  code target (STUB)  (0xffff58238080)
0xffff582e60d8  constant pool (size 24)
0xffff582e6110  runtime entry
0xffff582e611c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = children
compiler = unknown
Instructions (size = 152)
0xffff582e61a0     0  sub csp, jssp, #0x8 (8)
0xffff582e61a4     4  str x3, [jssp, #-8]!
0xffff582e61a8     8  sub csp, jssp, #0x8 (8)
0xffff582e61ac    12  str x4, [jssp, #-8]!
0xffff582e61b0    16  ldr x3, pc+88 (addr 0x0000ffff582e6208)    ;; object: 0x225cb5c9 Cell for 0
0xffff582e61b4    20  ldur x3, [x3, #7]
0xffff582e61b8    24  cmp x3, #0x0 (0)
0xffff582e61bc    28  b.ne #+0x30 (addr 0xffff582e61ec)
0xffff582e61c0    32  tbz w0, #0, #+0x2c (addr 0xffff582e61ec)
0xffff582e61c4    36  ldr x5, pc+76 (addr 0x0000ffff582e6210)    ;; object: 0x22536c01 WeakCell for 0x32b364a9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e61c8    40  ldur x5, [x5, #7]
0xffff582e61cc    44  tbz w5, #0, #+0x20 (addr 0xffff582e61ec)
0xffff582e61d0    48  ldursw x4, [x5, #15]
0xffff582e61d4    52  tbnz w4, #23, #+0x18 (addr 0xffff582e61ec)
0xffff582e61d8    56  ldr x4, [jssp], #8
0xffff582e61dc    60  ldr x3, [jssp], #8
0xffff582e61e0    64  ldr x2, pc+56 (addr 0x0000ffff582e6218)    ;; object: 0x225079a9 <String[8]: children>
0xffff582e61e4    68  ldr x16, pc+60 (addr 0x0000ffff582e6220)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff582e61e8    72  br x16
0xffff582e61ec    76  ldr x2, pc+60 (addr 0x0000ffff582e6228)    ;; object: 0x225079a9 <String[8]: children>
0xffff582e61f0    80  ldr x4, [jssp], #8
0xffff582e61f4    84  ldr x3, [jssp], #8
0xffff582e61f8    88  ldr x16, pc+56 (addr 0x0000ffff582e6230)    ;; code: BUILTIN
0xffff582e61fc    92  br x16
0xffff582e6200    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582e6204   100  d63f03e0       constant
0xffff582e6208   104  225cb5c9       constant
0xffff582e620c   108  00000000       constant
0xffff582e6210   112  22536c01       constant
0xffff582e6214   116  00000000       constant
0xffff582e6218   120  225079a9       constant
0xffff582e621c   124  00000000       constant
0xffff582e6220   128  582e6060       constant
0xffff582e6224   132  0000ffff       constant
0xffff582e6228   136  225079a9       constant
0xffff582e622c   140  00000000       constant
0xffff582e6230   144  58222420       constant
0xffff582e6234   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582e61b0  embedded object  (0x225cb5c9 Cell for 0)
0xffff582e61c4  embedded object  (0x22536c01 WeakCell for 0x32b364a9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e61e0  embedded object  (0x225079a9 <String[8]: children>)
0xffff582e61e4  code target (HANDLER)  (0xffff582e6060)
0xffff582e61ec  embedded object  (0x225079a9 <String[8]: children>)
0xffff582e61f8  code target (BUILTIN)  (0xffff58222420)
0xffff582e6200  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = load
compiler = unknown
Instructions (size = 120)
0xffff582e62a0     0  sub csp, jssp, #0x8 (8)
0xffff582e62a4     4  str x3, [jssp, #-8]!
0xffff582e62a8     8  sub csp, jssp, #0x8 (8)
0xffff582e62ac    12  str x0, [jssp, #-8]!
0xffff582e62b0    16  ldr x0, pc+72 (addr 0x0000ffff582e62f8)    ;; object: 0x225cb5c9 Cell for 0
0xffff582e62b4    20  ldur x0, [x0, #7]
0xffff582e62b8    24  cmp x0, #0x0 (0)
0xffff582e62bc    28  b.ne #+0x14 (addr 0xffff582e62d0)
0xffff582e62c0    32  ldr x3, pc+64 (addr 0x0000ffff582e6300)    ;; object: 0x225cb799 WeakCell for 0x4f940609 <an Object with map 0x32b35009>
0xffff582e62c4    36  ldur x3, [x3, #7]
0xffff582e62c8    40  tbz w3, #0, #+0x8 (addr 0xffff582e62d0)
0xffff582e62cc    44  b #+0x14 (addr 0xffff582e62e0)
0xffff582e62d0    48  ldr x0, [jssp], #8
0xffff582e62d4    52  ldr x3, [jssp], #8
0xffff582e62d8    56  ldr x16, pc+48 (addr 0x0000ffff582e6308)    ;; code: BUILTIN
0xffff582e62dc    60  br x16
0xffff582e62e0    64  add jssp, jssp, #0x10 (16)
0xffff582e62e4    68  mov x1, x3
0xffff582e62e8    72  ldr x16, pc+40 (addr 0x0000ffff582e6310)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff582e62ec    76  br x16
0xffff582e62f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582e62f4    84  d63f03e0       constant
0xffff582e62f8    88  225cb5c9       constant
0xffff582e62fc    92  00000000       constant
0xffff582e6300    96  225cb799       constant
0xffff582e6304   100  00000000       constant
0xffff582e6308   104  582222e0       constant
0xffff582e630c   108  0000ffff       constant
0xffff582e6310   112  58243300       constant
0xffff582e6314   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582e62b0  embedded object  (0x225cb5c9 Cell for 0)
0xffff582e62c0  embedded object  (0x225cb799 WeakCell for 0x4f940609 <an Object with map 0x32b35009>)
0xffff582e62d8  code target (BUILTIN)  (0xffff582222e0)
0xffff582e62e8  code target (HANDLER)  (0xffff58243300)
0xffff582e62f0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582e6380     0  ldur x0, [x1, #71]
0xffff582e6384     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582e6380     0  ldur x0, [x1, #71]
0xffff582e6384     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582e6400     0  tbz w0, #0, #+0x90 (addr 0xffff582e6490)
0xffff582e6404     4  mov x2, x0
0xffff582e6408     8  stur x2, [x1, #71]
0xffff582e640c    12  add x3, x1, #0x47 (71)
0xffff582e6410    16  and x2, x2, #0xfffffffffff00000
0xffff582e6414    20  ldr x2, [x2, #8]
0xffff582e6418    24  tbz w2, #1, #+0x24 (addr 0xffff582e643c)
0xffff582e641c    28  and x2, x1, #0xfffffffffff00000
0xffff582e6420    32  ldr x2, [x2, #8]
0xffff582e6424    36  tbz w2, #2, #+0x18 (addr 0xffff582e643c)
0xffff582e6428    40  sub csp, jssp, #0x8 (8)
0xffff582e642c    44  str lr, [jssp, #-8]!
0xffff582e6430    48  ldr x16, pc+80 (addr 0x0000ffff582e6480)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582e6434    52  blr x16
0xffff582e6438    56  ldr lr, [jssp], #8
0xffff582e643c    60  stur x5, [x1, #-1]
0xffff582e6440    64  tbz w5, #0, #+0x34 (addr 0xffff582e6474)
0xffff582e6444    68  sub x2, x1, #0x1 (1)
0xffff582e6448    72  and x5, x5, #0xfffffffffff00000
0xffff582e644c    76  ldr x5, [x5, #8]
0xffff582e6450    80  tbz w5, #1, #+0x24 (addr 0xffff582e6474)
0xffff582e6454    84  and x5, x1, #0xfffffffffff00000
0xffff582e6458    88  ldr x5, [x5, #8]
0xffff582e645c    92  tbz w5, #2, #+0x18 (addr 0xffff582e6474)
0xffff582e6460    96  sub csp, jssp, #0x8 (8)
0xffff582e6464   100  str lr, [jssp, #-8]!
0xffff582e6468   104  ldr x16, pc+32 (addr 0x0000ffff582e6488)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582e646c   108  blr x16
0xffff582e6470   112  ldr lr, [jssp], #8
0xffff582e6474   116  ret
0xffff582e6478   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582e647c   124  d63f03e0       constant
0xffff582e6480   128  582170c0       constant
0xffff582e6484   132  0000ffff       constant
0xffff582e6488   136  58238080       constant
0xffff582e648c   140  0000ffff       constant
0xffff582e6490   144  movz x16, #0x0
0xffff582e6494   148  sub csp, jssp, #0x10 (16)
0xffff582e6498   152  stp fp, lr, [jssp, #-16]!
0xffff582e649c   156  bl #+0x4 (addr 0xffff582e64a0)
0xffff582e64a0   160  movz x17, #0xa00000000
0xffff582e64a4   164  sub csp, jssp, #0x10 (16)
0xffff582e64a8   168  stp x17, cp, [jssp, #-16]!
0xffff582e64ac   172  add fp, jssp, #0x10 (16)
0xffff582e64b0   176  ldr x17, pc+24 (addr 0x0000ffff582e64c8)    ;; lazy deoptimization bailout 0
0xffff582e64b4   180  add x17, x17, x16
0xffff582e64b8   184  br x17
0xffff582e64bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582e64c0   192  d63f03e0       constant
0xffff582e64c4   196  d503201f       constant
0xffff582e64c8   200  58006000       constant
0xffff582e64cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582e6430  code target (STUB)  (0xffff582170c0)
0xffff582e6468  code target (STUB)  (0xffff58238080)
0xffff582e6478  constant pool (size 24)
0xffff582e64b0  runtime entry
0xffff582e64bc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582e6400     0  tbz w0, #0, #+0x90 (addr 0xffff582e6490)
0xffff582e6404     4  mov x2, x0
0xffff582e6408     8  stur x2, [x1, #71]
0xffff582e640c    12  add x3, x1, #0x47 (71)
0xffff582e6410    16  and x2, x2, #0xfffffffffff00000
0xffff582e6414    20  ldr x2, [x2, #8]
0xffff582e6418    24  tbz w2, #1, #+0x24 (addr 0xffff582e643c)
0xffff582e641c    28  and x2, x1, #0xfffffffffff00000
0xffff582e6420    32  ldr x2, [x2, #8]
0xffff582e6424    36  tbz w2, #2, #+0x18 (addr 0xffff582e643c)
0xffff582e6428    40  sub csp, jssp, #0x8 (8)
0xffff582e642c    44  str lr, [jssp, #-8]!
0xffff582e6430    48  ldr x16, pc+80 (addr 0x0000ffff582e6480)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582e6434    52  blr x16
0xffff582e6438    56  ldr lr, [jssp], #8
0xffff582e643c    60  stur x5, [x1, #-1]
0xffff582e6440    64  tbz w5, #0, #+0x34 (addr 0xffff582e6474)
0xffff582e6444    68  sub x2, x1, #0x1 (1)
0xffff582e6448    72  and x5, x5, #0xfffffffffff00000
0xffff582e644c    76  ldr x5, [x5, #8]
0xffff582e6450    80  tbz w5, #1, #+0x24 (addr 0xffff582e6474)
0xffff582e6454    84  and x5, x1, #0xfffffffffff00000
0xffff582e6458    88  ldr x5, [x5, #8]
0xffff582e645c    92  tbz w5, #2, #+0x18 (addr 0xffff582e6474)
0xffff582e6460    96  sub csp, jssp, #0x8 (8)
0xffff582e6464   100  str lr, [jssp, #-8]!
0xffff582e6468   104  ldr x16, pc+32 (addr 0x0000ffff582e6488)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582e646c   108  blr x16
0xffff582e6470   112  ldr lr, [jssp], #8
0xffff582e6474   116  ret
0xffff582e6478   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582e647c   124  d63f03e0       constant
0xffff582e6480   128  582170c0       constant
0xffff582e6484   132  0000ffff       constant
0xffff582e6488   136  58238080       constant
0xffff582e648c   140  0000ffff       constant
0xffff582e6490   144  movz x16, #0x0
0xffff582e6494   148  sub csp, jssp, #0x10 (16)
0xffff582e6498   152  stp fp, lr, [jssp, #-16]!
0xffff582e649c   156  bl #+0x4 (addr 0xffff582e64a0)
0xffff582e64a0   160  movz x17, #0xa00000000
0xffff582e64a4   164  sub csp, jssp, #0x10 (16)
0xffff582e64a8   168  stp x17, cp, [jssp, #-16]!
0xffff582e64ac   172  add fp, jssp, #0x10 (16)
0xffff582e64b0   176  ldr x17, pc+24 (addr 0x0000ffff582e64c8)    ;; lazy deoptimization bailout 0
0xffff582e64b4   180  add x17, x17, x16
0xffff582e64b8   184  br x17
0xffff582e64bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582e64c0   192  d63f03e0       constant
0xffff582e64c4   196  d503201f       constant
0xffff582e64c8   200  58006000       constant
0xffff582e64cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582e6430  code target (STUB)  (0xffff582170c0)
0xffff582e6468  code target (STUB)  (0xffff58238080)
0xffff582e6478  constant pool (size 24)
0xffff582e64b0  runtime entry
0xffff582e64bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = paths
compiler = unknown
Instructions (size = 152)
0xffff582e6540     0  sub csp, jssp, #0x8 (8)
0xffff582e6544     4  str x3, [jssp, #-8]!
0xffff582e6548     8  sub csp, jssp, #0x8 (8)
0xffff582e654c    12  str x4, [jssp, #-8]!
0xffff582e6550    16  ldr x3, pc+88 (addr 0x0000ffff582e65a8)    ;; object: 0x225cb5c9 Cell for 0
0xffff582e6554    20  ldur x3, [x3, #7]
0xffff582e6558    24  cmp x3, #0x0 (0)
0xffff582e655c    28  b.ne #+0x30 (addr 0xffff582e658c)
0xffff582e6560    32  tbz w0, #0, #+0x2c (addr 0xffff582e658c)
0xffff582e6564    36  ldr x5, pc+76 (addr 0x0000ffff582e65b0)    ;; object: 0x225c5369 WeakCell for 0x32b36559 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e6568    40  ldur x5, [x5, #7]
0xffff582e656c    44  tbz w5, #0, #+0x20 (addr 0xffff582e658c)
0xffff582e6570    48  ldursw x4, [x5, #15]
0xffff582e6574    52  tbnz w4, #23, #+0x18 (addr 0xffff582e658c)
0xffff582e6578    56  ldr x4, [jssp], #8
0xffff582e657c    60  ldr x3, [jssp], #8
0xffff582e6580    64  ldr x2, pc+56 (addr 0x0000ffff582e65b8)    ;; object: 0x39cba4c1 <String[5]: paths>
0xffff582e6584    68  ldr x16, pc+60 (addr 0x0000ffff582e65c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198665
0xffff582e6588    72  br x16
0xffff582e658c    76  ldr x2, pc+60 (addr 0x0000ffff582e65c8)    ;; object: 0x39cba4c1 <String[5]: paths>
0xffff582e6590    80  ldr x4, [jssp], #8
0xffff582e6594    84  ldr x3, [jssp], #8
0xffff582e6598    88  ldr x16, pc+56 (addr 0x0000ffff582e65d0)    ;; code: BUILTIN
0xffff582e659c    92  br x16
0xffff582e65a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582e65a4   100  d63f03e0       constant
0xffff582e65a8   104  225cb5c9       constant
0xffff582e65ac   108  00000000       constant
0xffff582e65b0   112  225c5369       constant
0xffff582e65b4   116  00000000       constant
0xffff582e65b8   120  39cba4c1       constant
0xffff582e65bc   124  00000000       constant
0xffff582e65c0   128  582e6400       constant
0xffff582e65c4   132  0000ffff       constant
0xffff582e65c8   136  39cba4c1       constant
0xffff582e65cc   140  00000000       constant
0xffff582e65d0   144  58222420       constant
0xffff582e65d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582e6550  embedded object  (0x225cb5c9 Cell for 0)
0xffff582e6564  embedded object  (0x225c5369 WeakCell for 0x32b36559 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e6580  embedded object  (0x39cba4c1 <String[5]: paths>)
0xffff582e6584  code target (HANDLER)  (0xffff582e6400)
0xffff582e658c  embedded object  (0x39cba4c1 <String[5]: paths>)
0xffff582e6598  code target (BUILTIN)  (0xffff58222420)
0xffff582e65a0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582e6640     0  ldur x0, [x1, #87]
0xffff582e6644     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582e6640     0  ldur x0, [x1, #87]
0xffff582e6644     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582e66c0     0  ldur x0, [x1, #-1]
0xffff582e66c4     4  ldur x0, [x0, #47]
0xffff582e66c8     8  movz x16, #0x1af
0xffff582e66cc    12  ldr x0, [x0, x16]
0xffff582e66d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582e66c0     0  ldur x0, [x1, #-1]
0xffff582e66c4     4  ldur x0, [x0, #47]
0xffff582e66c8     8  movz x16, #0x1af
0xffff582e66cc    12  ldr x0, [x0, x16]
0xffff582e66d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = isFile
compiler = unknown
Instructions (size = 120)
0xffff582e6740     0  sub csp, jssp, #0x8 (8)
0xffff582e6744     4  str x3, [jssp, #-8]!
0xffff582e6748     8  sub csp, jssp, #0x8 (8)
0xffff582e674c    12  str x0, [jssp, #-8]!
0xffff582e6750    16  ldr x0, pc+72 (addr 0x0000ffff582e6798)    ;; object: 0x225352e9 Cell for 0
0xffff582e6754    20  ldur x0, [x0, #7]
0xffff582e6758    24  cmp x0, #0x0 (0)
0xffff582e675c    28  b.ne #+0x14 (addr 0xffff582e6770)
0xffff582e6760    32  ldr x3, pc+64 (addr 0x0000ffff582e67a0)    ;; object: 0x225cb939 WeakCell for 0x4f93b081 <an Object with map 0x32b320f1>
0xffff582e6764    36  ldur x3, [x3, #7]
0xffff582e6768    40  tbz w3, #0, #+0x8 (addr 0xffff582e6770)
0xffff582e676c    44  b #+0x14 (addr 0xffff582e6780)
0xffff582e6770    48  ldr x0, [jssp], #8
0xffff582e6774    52  ldr x3, [jssp], #8
0xffff582e6778    56  ldr x16, pc+48 (addr 0x0000ffff582e67a8)    ;; code: BUILTIN
0xffff582e677c    60  br x16
0xffff582e6780    64  add jssp, jssp, #0x10 (16)
0xffff582e6784    68  mov x1, x3
0xffff582e6788    72  ldr x16, pc+40 (addr 0x0000ffff582e67b0)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff582e678c    76  br x16
0xffff582e6790    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582e6794    84  d63f03e0       constant
0xffff582e6798    88  225352e9       constant
0xffff582e679c    92  00000000       constant
0xffff582e67a0    96  225cb939       constant
0xffff582e67a4   100  00000000       constant
0xffff582e67a8   104  582222e0       constant
0xffff582e67ac   108  0000ffff       constant
0xffff582e67b0   112  58243400       constant
0xffff582e67b4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582e6750  embedded object  (0x225352e9 Cell for 0)
0xffff582e6760  embedded object  (0x225cb939 WeakCell for 0x4f93b081 <an Object with map 0x32b320f1>)
0xffff582e6778  code target (BUILTIN)  (0xffff582222e0)
0xffff582e6788  code target (HANDLER)  (0xffff58243400)
0xffff582e6790  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff582e6820     0  ldur d0, [x1, #87]
0xffff582e6824     4  movz x1, #0x92c0
0xffff582e6828     8  movk x1, #0x16e7, lsl #16
0xffff582e682c    12  ldp x2, x0, [x1]
0xffff582e6830    16  adds x16, x2, #0x10 (16)
0xffff582e6834    20  ccmp x16, x0, #nzCv, lo
0xffff582e6838    24  b.hi #+0x20 (addr 0xffff582e6858)
0xffff582e683c    28  str x16, [x1]
0xffff582e6840    32  ldr x1, [x26, #120]
0xffff582e6844    36  str x1, [x2]
0xffff582e6848    40  orr x2, x2, #0x1
0xffff582e684c    44  stur d0, [x2, #7]
0xffff582e6850    48  mov x0, x2
0xffff582e6854    52  ret
0xffff582e6858    56  sub csp, jssp, #0x10 (16)
0xffff582e685c    60  stp fp, lr, [jssp, #-16]!
0xffff582e6860    64  movz fp, #0xa00000000
0xffff582e6864    68  sub csp, jssp, #0x8 (8)
0xffff582e6868    72  str fp, [jssp, #-8]!
0xffff582e686c    76  add fp, jssp, #0x8 (8)
0xffff582e6870    80  movz x2, #0x0
0xffff582e6874    84  mov x16, lr
0xffff582e6878    88  ldr x17, pc+64 (addr 0x0000ffff582e68b8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582e687c    92  blr x17
0xffff582e6880    96  ldur cp, [fp, #-8]
0xffff582e6884   100  movz x0, #0x0
0xffff582e6888   104  movz x1, #0x4b48
0xffff582e688c   108  movk x1, #0xe4, lsl #16
0xffff582e6890   112  ldr x16, pc+48 (addr 0x0000ffff582e68c0)    ;; code: STUB, CEntryStub, minor: 5
0xffff582e6894   116  blr x16
0xffff582e6898   120  str x0, [jssp, #16]
0xffff582e689c   124  ldr x16, pc+44 (addr 0x0000ffff582e68c8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582e68a0   128  blr x16
0xffff582e68a4   132  ldr lr, [jssp, #16]
0xffff582e68a8   136  ldp xzr, fp, [jssp], #24
0xffff582e68ac   140  b #-0x60 (addr 0xffff582e684c)
0xffff582e68b0   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582e68b4   148  d63f03e0       constant
0xffff582e68b8   152  58206820       constant
0xffff582e68bc   156  0000ffff       constant
0xffff582e68c0   160  58206260       constant
0xffff582e68c4   164  0000ffff       constant
0xffff582e68c8   168  582068e0       constant
0xffff582e68cc   172  0000ffff       constant


Safepoints (size = 21)
0xffff582e6898   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff582e6878  code target (STUB)  (0xffff58206820)
0xffff582e6890  code target (STUB)  (0xffff58206260)
0xffff582e689c  code target (STUB)  (0xffff582068e0)
0xffff582e68b0  constant pool (size 32)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff582e6820     0  ldur d0, [x1, #87]
0xffff582e6824     4  movz x1, #0x92c0
0xffff582e6828     8  movk x1, #0x16e7, lsl #16
0xffff582e682c    12  ldp x2, x0, [x1]
0xffff582e6830    16  adds x16, x2, #0x10 (16)
0xffff582e6834    20  ccmp x16, x0, #nzCv, lo
0xffff582e6838    24  b.hi #+0x20 (addr 0xffff582e6858)
0xffff582e683c    28  str x16, [x1]
0xffff582e6840    32  ldr x1, [x26, #120]
0xffff582e6844    36  str x1, [x2]
0xffff582e6848    40  orr x2, x2, #0x1
0xffff582e684c    44  stur d0, [x2, #7]
0xffff582e6850    48  mov x0, x2
0xffff582e6854    52  ret
0xffff582e6858    56  sub csp, jssp, #0x10 (16)
0xffff582e685c    60  stp fp, lr, [jssp, #-16]!
0xffff582e6860    64  movz fp, #0xa00000000
0xffff582e6864    68  sub csp, jssp, #0x8 (8)
0xffff582e6868    72  str fp, [jssp, #-8]!
0xffff582e686c    76  add fp, jssp, #0x8 (8)
0xffff582e6870    80  movz x2, #0x0
0xffff582e6874    84  mov x16, lr
0xffff582e6878    88  ldr x17, pc+64 (addr 0x0000ffff582e68b8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582e687c    92  blr x17
0xffff582e6880    96  ldur cp, [fp, #-8]
0xffff582e6884   100  movz x0, #0x0
0xffff582e6888   104  movz x1, #0x4b48
0xffff582e688c   108  movk x1, #0xe4, lsl #16
0xffff582e6890   112  ldr x16, pc+48 (addr 0x0000ffff582e68c0)    ;; code: STUB, CEntryStub, minor: 5
0xffff582e6894   116  blr x16
0xffff582e6898   120  str x0, [jssp, #16]
0xffff582e689c   124  ldr x16, pc+44 (addr 0x0000ffff582e68c8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582e68a0   128  blr x16
0xffff582e68a4   132  ldr lr, [jssp, #16]
0xffff582e68a8   136  ldp xzr, fp, [jssp], #24
0xffff582e68ac   140  b #-0x60 (addr 0xffff582e684c)
0xffff582e68b0   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582e68b4   148  d63f03e0       constant
0xffff582e68b8   152  58206820       constant
0xffff582e68bc   156  0000ffff       constant
0xffff582e68c0   160  58206260       constant
0xffff582e68c4   164  0000ffff       constant
0xffff582e68c8   168  582068e0       constant
0xffff582e68cc   172  0000ffff       constant


Safepoints (size = 21)
0xffff582e6898   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff582e6878  code target (STUB)  (0xffff58206820)
0xffff582e6890  code target (STUB)  (0xffff58206260)
0xffff582e689c  code target (STUB)  (0xffff582068e0)
0xffff582e68b0  constant pool (size 32)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582e6960     0  ldur x0, [x1, #-1]
0xffff582e6964     4  ldur x0, [x0, #47]
0xffff582e6968     8  movz x16, #0x2b7
0xffff582e696c    12  ldr x0, [x0, x16]
0xffff582e6970    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582e6960     0  ldur x0, [x1, #-1]
0xffff582e6964     4  ldur x0, [x0, #47]
0xffff582e6968     8  movz x16, #0x2b7
0xffff582e696c    12  ldr x0, [x0, x16]
0xffff582e6970    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = slice
compiler = unknown
Instructions (size = 120)
0xffff582e69e0     0  sub csp, jssp, #0x8 (8)
0xffff582e69e4     4  str x3, [jssp, #-8]!
0xffff582e69e8     8  sub csp, jssp, #0x8 (8)
0xffff582e69ec    12  str x0, [jssp, #-8]!
0xffff582e69f0    16  ldr x0, pc+72 (addr 0x0000ffff582e6a38)    ;; object: 0x225cba51 Cell for 0
0xffff582e69f4    20  ldur x0, [x0, #7]
0xffff582e69f8    24  cmp x0, #0x0 (0)
0xffff582e69fc    28  b.ne #+0x14 (addr 0xffff582e6a10)
0xffff582e6a00    32  ldr x3, pc+64 (addr 0x0000ffff582e6a40)    ;; object: 0x225cba61 WeakCell for 0x22540a11 <a FastBuffer with map 0x32b22341>
0xffff582e6a04    36  ldur x3, [x3, #7]
0xffff582e6a08    40  tbz w3, #0, #+0x8 (addr 0xffff582e6a10)
0xffff582e6a0c    44  b #+0x14 (addr 0xffff582e6a20)
0xffff582e6a10    48  ldr x0, [jssp], #8
0xffff582e6a14    52  ldr x3, [jssp], #8
0xffff582e6a18    56  ldr x16, pc+48 (addr 0x0000ffff582e6a48)    ;; code: BUILTIN
0xffff582e6a1c    60  br x16
0xffff582e6a20    64  add jssp, jssp, #0x10 (16)
0xffff582e6a24    68  mov x1, x3
0xffff582e6a28    72  ldr x16, pc+40 (addr 0x0000ffff582e6a50)    ;; code: HANDLER, LoadConstantStub, minor: 27
0xffff582e6a2c    76  br x16
0xffff582e6a30    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582e6a34    84  d63f03e0       constant
0xffff582e6a38    88  225cba51       constant
0xffff582e6a3c    92  00000000       constant
0xffff582e6a40    96  225cba61       constant
0xffff582e6a44   100  00000000       constant
0xffff582e6a48   104  582222e0       constant
0xffff582e6a4c   108  0000ffff       constant
0xffff582e6a50   112  582e6960       constant
0xffff582e6a54   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582e69f0  embedded object  (0x225cba51 Cell for 0)
0xffff582e6a00  embedded object  (0x225cba61 WeakCell for 0x22540a11 <a FastBuffer with map 0x32b22341>)
0xffff582e6a18  code target (BUILTIN)  (0xffff582222e0)
0xffff582e6a28  code target (HANDLER)  (0xffff582e6960)
0xffff582e6a30  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = length
compiler = unknown
Instructions (size = 216)
0xffff582e6ac0     0  sub csp, jssp, #0x8 (8)
0xffff582e6ac4     4  str x3, [jssp, #-8]!
0xffff582e6ac8     8  sub csp, jssp, #0x8 (8)
0xffff582e6acc    12  str x0, [jssp, #-8]!
0xffff582e6ad0    16  ldr x0, pc+160 (addr 0x0000ffff582e6b70)    ;; object: 0x225cba51 Cell for 0
0xffff582e6ad4    20  ldur x0, [x0, #7]
0xffff582e6ad8    24  cmp x0, #0x0 (0)
0xffff582e6adc    28  b.ne #+0x14 (addr 0xffff582e6af0)
0xffff582e6ae0    32  ldr x3, pc+152 (addr 0x0000ffff582e6b78)    ;; object: 0x225cbad9 WeakCell for 0x225a6ef1 <an Object with map 0x32b14111>
0xffff582e6ae4    36  ldur x3, [x3, #7]
0xffff582e6ae8    40  tbz w3, #0, #+0x8 (addr 0xffff582e6af0)
0xffff582e6aec    44  b #+0x14 (addr 0xffff582e6b00)
0xffff582e6af0    48  ldr x0, [jssp], #8
0xffff582e6af4    52  ldr x3, [jssp], #8
0xffff582e6af8    56  ldr x16, pc+136 (addr 0x0000ffff582e6b80)    ;; code: BUILTIN
0xffff582e6afc    60  br x16
0xffff582e6b00    64  add jssp, jssp, #0x10 (16)
0xffff582e6b04    68  movz x16, #0xc00000000
0xffff582e6b08    72  sub csp, jssp, #0x10 (16)
0xffff582e6b0c    76  stp fp, lr, [jssp, #-16]!
0xffff582e6b10    80  sub csp, jssp, #0x10 (16)
0xffff582e6b14    84  str x16, [jssp, #-8]!
0xffff582e6b18    88  ldr x17, pc+112 (addr 0x0000ffff582e6b88)    ;; object: 0xffff582e6a61 <Code: HANDLER>
0xffff582e6b1c    92  sub csp, jssp, #0x10 (16)
0xffff582e6b20    96  str x17, [jssp, #-8]!
0xffff582e6b24   100  add fp, jssp, #0x10 (16)
0xffff582e6b28   104  sub csp, jssp, #0x8 (8)
0xffff582e6b2c   108  str cp, [jssp, #-8]!
0xffff582e6b30   112  sub csp, jssp, #0x8 (8)
0xffff582e6b34   116  str x1, [jssp, #-8]!
0xffff582e6b38   120  ldur x1, [x3, #-1]
0xffff582e6b3c   124  ldur x1, [x1, #47]
0xffff582e6b40   128  ldur x1, [x1, #143]
0xffff582e6b44   132  ldur x1, [x1, #7]
0xffff582e6b48   136  movz x0, #0x0
0xffff582e6b4c   140  ldr x16, pc+68 (addr 0x0000ffff582e6b90)    ;; code: BUILTIN
0xffff582e6b50   144  blr x16
0xffff582e6b54   148  ldr cp, [jssp], #8
0xffff582e6b58   152  mov jssp, fp
0xffff582e6b5c   156  ldp fp, lr, [jssp], #16
0xffff582e6b60   160  ret
0xffff582e6b64   164  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff582e6b68   168  d63f03e0       constant
0xffff582e6b6c   172  d503201f       constant
0xffff582e6b70   176  225cba51       constant
0xffff582e6b74   180  00000000       constant
0xffff582e6b78   184  225cbad9       constant
0xffff582e6b7c   188  00000000       constant
0xffff582e6b80   192  582222e0       constant
0xffff582e6b84   196  0000ffff       constant
0xffff582e6b88   200  582e6a61       constant
0xffff582e6b8c   204  0000ffff       constant
0xffff582e6b90   208  5821e600       constant
0xffff582e6b94   212  0000ffff       constant


RelocInfo (size = 11)
0xffff582e6ad0  embedded object  (0x225cba51 Cell for 0)
0xffff582e6ae0  embedded object  (0x225cbad9 WeakCell for 0x225a6ef1 <an Object with map 0x32b14111>)
0xffff582e6af8  code target (BUILTIN)  (0xffff582222e0)
0xffff582e6b18  embedded object  (0xffff582e6a61 <Code: HANDLER>)
0xffff582e6b4c  code target (BUILTIN)  (0xffff5821e600)
0xffff582e6b64  constant pool (size 52)

kind = HANDLER
major_key = <NoCache>Stub
name = Number
compiler = unknown
Instructions (size = 120)
0xffff582e6c00     0  sub csp, jssp, #0x8 (8)
0xffff582e6c04     4  str x3, [jssp, #-8]!
0xffff582e6c08     8  sub csp, jssp, #0x8 (8)
0xffff582e6c0c    12  str x0, [jssp, #-8]!
0xffff582e6c10    16  ldr x0, pc+80 (addr 0x0000ffff582e6c60)    ;; object: 0x39cc5d51 Cell for 0
0xffff582e6c14    20  ldur x0, [x0, #7]
0xffff582e6c18    24  cmp x0, #0x0 (0)
0xffff582e6c1c    28  b.ne #+0x2c (addr 0xffff582e6c48)
0xffff582e6c20    32  ldr x0, pc+72 (addr 0x0000ffff582e6c68)    ;; object: 0x225cbb11 WeakCell for 0x39c423d9 PropertyCell for 0x39c42371 <JS Function Number (SharedFunctionInfo 0x39c422c9)>
0xffff582e6c24    36  ldur x0, [x0, #7]
0xffff582e6c28    40  tbz w0, #0, #+0x20 (addr 0xffff582e6c48)
0xffff582e6c2c    44  ldur x0, [x0, #15]
0xffff582e6c30    48  ldr x16, [x26, #88]
0xffff582e6c34    52  cmp x0, x16
0xffff582e6c38    56  b.eq #+0x10 (addr 0xffff582e6c48)
0xffff582e6c3c    60  add jssp, jssp, #0x10 (16)
0xffff582e6c40    64  ret
0xffff582e6c44    68  b #+0x14 (addr 0xffff582e6c58)
0xffff582e6c48    72  ldr x0, [jssp], #8
0xffff582e6c4c    76  ldr x3, [jssp], #8
0xffff582e6c50    80  ldr x16, pc+32 (addr 0x0000ffff582e6c70)    ;; code: BUILTIN
0xffff582e6c54    84  br x16
0xffff582e6c58    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582e6c5c    92  d63f03e0       constant
0xffff582e6c60    96  39cc5d51       constant
0xffff582e6c64   100  00000000       constant
0xffff582e6c68   104  225cbb11       constant
0xffff582e6c6c   108  00000000       constant
0xffff582e6c70   112  582222e0       constant
0xffff582e6c74   116  0000ffff       constant


RelocInfo (size = 9)
0xffff582e6c10  embedded object  (0x39cc5d51 Cell for 0)
0xffff582e6c20  embedded object  (0x225cbb11 WeakCell for 0x39c423d9 PropertyCell for 0x39c42371 <JS Function Number (SharedFunctionInfo 0x39c422c9)>)
0xffff582e6c50  code target (BUILTIN)  (0xffff582222e0)
0xffff582e6c58  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = buffer
compiler = unknown
Instructions (size = 216)
0xffff582e6ce0     0  sub csp, jssp, #0x8 (8)
0xffff582e6ce4     4  str x3, [jssp, #-8]!
0xffff582e6ce8     8  sub csp, jssp, #0x8 (8)
0xffff582e6cec    12  str x0, [jssp, #-8]!
0xffff582e6cf0    16  ldr x0, pc+160 (addr 0x0000ffff582e6d90)    ;; object: 0x225cba51 Cell for 0
0xffff582e6cf4    20  ldur x0, [x0, #7]
0xffff582e6cf8    24  cmp x0, #0x0 (0)
0xffff582e6cfc    28  b.ne #+0x14 (addr 0xffff582e6d10)
0xffff582e6d00    32  ldr x3, pc+152 (addr 0x0000ffff582e6d98)    ;; object: 0x225cbb79 WeakCell for 0x225a6ef1 <an Object with map 0x32b14111>
0xffff582e6d04    36  ldur x3, [x3, #7]
0xffff582e6d08    40  tbz w3, #0, #+0x8 (addr 0xffff582e6d10)
0xffff582e6d0c    44  b #+0x14 (addr 0xffff582e6d20)
0xffff582e6d10    48  ldr x0, [jssp], #8
0xffff582e6d14    52  ldr x3, [jssp], #8
0xffff582e6d18    56  ldr x16, pc+136 (addr 0x0000ffff582e6da0)    ;; code: BUILTIN
0xffff582e6d1c    60  br x16
0xffff582e6d20    64  add jssp, jssp, #0x10 (16)
0xffff582e6d24    68  movz x16, #0xc00000000
0xffff582e6d28    72  sub csp, jssp, #0x10 (16)
0xffff582e6d2c    76  stp fp, lr, [jssp, #-16]!
0xffff582e6d30    80  sub csp, jssp, #0x10 (16)
0xffff582e6d34    84  str x16, [jssp, #-8]!
0xffff582e6d38    88  ldr x17, pc+112 (addr 0x0000ffff582e6da8)    ;; object: 0xffff582e6c81 <Code: HANDLER>
0xffff582e6d3c    92  sub csp, jssp, #0x10 (16)
0xffff582e6d40    96  str x17, [jssp, #-8]!
0xffff582e6d44   100  add fp, jssp, #0x10 (16)
0xffff582e6d48   104  sub csp, jssp, #0x8 (8)
0xffff582e6d4c   108  str cp, [jssp, #-8]!
0xffff582e6d50   112  sub csp, jssp, #0x8 (8)
0xffff582e6d54   116  str x1, [jssp, #-8]!
0xffff582e6d58   120  ldur x1, [x3, #-1]
0xffff582e6d5c   124  ldur x1, [x1, #47]
0xffff582e6d60   128  ldur x1, [x1, #71]
0xffff582e6d64   132  ldur x1, [x1, #7]
0xffff582e6d68   136  movz x0, #0x0
0xffff582e6d6c   140  ldr x16, pc+68 (addr 0x0000ffff582e6db0)    ;; code: BUILTIN
0xffff582e6d70   144  blr x16
0xffff582e6d74   148  ldr cp, [jssp], #8
0xffff582e6d78   152  mov jssp, fp
0xffff582e6d7c   156  ldp fp, lr, [jssp], #16
0xffff582e6d80   160  ret
0xffff582e6d84   164  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff582e6d88   168  d63f03e0       constant
0xffff582e6d8c   172  d503201f       constant
0xffff582e6d90   176  225cba51       constant
0xffff582e6d94   180  00000000       constant
0xffff582e6d98   184  225cbb79       constant
0xffff582e6d9c   188  00000000       constant
0xffff582e6da0   192  582222e0       constant
0xffff582e6da4   196  0000ffff       constant
0xffff582e6da8   200  582e6c81       constant
0xffff582e6dac   204  0000ffff       constant
0xffff582e6db0   208  5821e600       constant
0xffff582e6db4   212  0000ffff       constant


RelocInfo (size = 11)
0xffff582e6cf0  embedded object  (0x225cba51 Cell for 0)
0xffff582e6d00  embedded object  (0x225cbb79 WeakCell for 0x225a6ef1 <an Object with map 0x32b14111>)
0xffff582e6d18  code target (BUILTIN)  (0xffff582222e0)
0xffff582e6d38  embedded object  (0xffff582e6c81 <Code: HANDLER>)
0xffff582e6d6c  code target (BUILTIN)  (0xffff5821e600)
0xffff582e6d84  constant pool (size 52)

kind = HANDLER
major_key = <NoCache>Stub
name = byteOffset
compiler = unknown
Instructions (size = 216)
0xffff582e6e20     0  sub csp, jssp, #0x8 (8)
0xffff582e6e24     4  str x3, [jssp, #-8]!
0xffff582e6e28     8  sub csp, jssp, #0x8 (8)
0xffff582e6e2c    12  str x0, [jssp, #-8]!
0xffff582e6e30    16  ldr x0, pc+160 (addr 0x0000ffff582e6ed0)    ;; object: 0x225cba51 Cell for 0
0xffff582e6e34    20  ldur x0, [x0, #7]
0xffff582e6e38    24  cmp x0, #0x0 (0)
0xffff582e6e3c    28  b.ne #+0x14 (addr 0xffff582e6e50)
0xffff582e6e40    32  ldr x3, pc+152 (addr 0x0000ffff582e6ed8)    ;; object: 0x225cbbb1 WeakCell for 0x225a6ef1 <an Object with map 0x32b14111>
0xffff582e6e44    36  ldur x3, [x3, #7]
0xffff582e6e48    40  tbz w3, #0, #+0x8 (addr 0xffff582e6e50)
0xffff582e6e4c    44  b #+0x14 (addr 0xffff582e6e60)
0xffff582e6e50    48  ldr x0, [jssp], #8
0xffff582e6e54    52  ldr x3, [jssp], #8
0xffff582e6e58    56  ldr x16, pc+136 (addr 0x0000ffff582e6ee0)    ;; code: BUILTIN
0xffff582e6e5c    60  br x16
0xffff582e6e60    64  add jssp, jssp, #0x10 (16)
0xffff582e6e64    68  movz x16, #0xc00000000
0xffff582e6e68    72  sub csp, jssp, #0x10 (16)
0xffff582e6e6c    76  stp fp, lr, [jssp, #-16]!
0xffff582e6e70    80  sub csp, jssp, #0x10 (16)
0xffff582e6e74    84  str x16, [jssp, #-8]!
0xffff582e6e78    88  ldr x17, pc+112 (addr 0x0000ffff582e6ee8)    ;; object: 0xffff582e6dc1 <Code: HANDLER>
0xffff582e6e7c    92  sub csp, jssp, #0x10 (16)
0xffff582e6e80    96  str x17, [jssp, #-8]!
0xffff582e6e84   100  add fp, jssp, #0x10 (16)
0xffff582e6e88   104  sub csp, jssp, #0x8 (8)
0xffff582e6e8c   108  str cp, [jssp, #-8]!
0xffff582e6e90   112  sub csp, jssp, #0x8 (8)
0xffff582e6e94   116  str x1, [jssp, #-8]!
0xffff582e6e98   120  ldur x1, [x3, #-1]
0xffff582e6e9c   124  ldur x1, [x1, #47]
0xffff582e6ea0   128  ldur x1, [x1, #95]
0xffff582e6ea4   132  ldur x1, [x1, #7]
0xffff582e6ea8   136  movz x0, #0x0
0xffff582e6eac   140  ldr x16, pc+68 (addr 0x0000ffff582e6ef0)    ;; code: BUILTIN
0xffff582e6eb0   144  blr x16
0xffff582e6eb4   148  ldr cp, [jssp], #8
0xffff582e6eb8   152  mov jssp, fp
0xffff582e6ebc   156  ldp fp, lr, [jssp], #16
0xffff582e6ec0   160  ret
0xffff582e6ec4   164  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff582e6ec8   168  d63f03e0       constant
0xffff582e6ecc   172  d503201f       constant
0xffff582e6ed0   176  225cba51       constant
0xffff582e6ed4   180  00000000       constant
0xffff582e6ed8   184  225cbbb1       constant
0xffff582e6edc   188  00000000       constant
0xffff582e6ee0   192  582222e0       constant
0xffff582e6ee4   196  0000ffff       constant
0xffff582e6ee8   200  582e6dc1       constant
0xffff582e6eec   204  0000ffff       constant
0xffff582e6ef0   208  5821e600       constant
0xffff582e6ef4   212  0000ffff       constant


RelocInfo (size = 11)
0xffff582e6e30  embedded object  (0x225cba51 Cell for 0)
0xffff582e6e40  embedded object  (0x225cbbb1 WeakCell for 0x225a6ef1 <an Object with map 0x32b14111>)
0xffff582e6e58  code target (BUILTIN)  (0xffff582222e0)
0xffff582e6e78  embedded object  (0xffff582e6dc1 <Code: HANDLER>)
0xffff582e6eac  code target (BUILTIN)  (0xffff5821e600)
0xffff582e6ec4  constant pool (size 52)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 120)
0xffff582e6f60     0  sub csp, jssp, #0x8 (8)
0xffff582e6f64     4  str x3, [jssp, #-8]!
0xffff582e6f68     8  sub csp, jssp, #0x8 (8)
0xffff582e6f6c    12  str x0, [jssp, #-8]!
0xffff582e6f70    16  ldr x0, pc+72 (addr 0x0000ffff582e6fb8)    ;; object: 0x225cbc69 Cell for 0
0xffff582e6f74    20  ldur x0, [x0, #7]
0xffff582e6f78    24  cmp x0, #0x0 (0)
0xffff582e6f7c    28  b.ne #+0x14 (addr 0xffff582e6f90)
0xffff582e6f80    32  ldr x3, pc+64 (addr 0x0000ffff582e6fc0)    ;; object: 0x225cbc79 WeakCell for 0x39c40019 <JS Function (SharedFunctionInfo 0x39c3ff71)>
0xffff582e6f84    36  ldur x3, [x3, #7]
0xffff582e6f88    40  tbz w3, #0, #+0x8 (addr 0xffff582e6f90)
0xffff582e6f8c    44  b #+0x14 (addr 0xffff582e6fa0)
0xffff582e6f90    48  ldr x0, [jssp], #8
0xffff582e6f94    52  ldr x3, [jssp], #8
0xffff582e6f98    56  ldr x16, pc+48 (addr 0x0000ffff582e6fc8)    ;; code: BUILTIN
0xffff582e6f9c    60  br x16
0xffff582e6fa0    64  add jssp, jssp, #0x10 (16)
0xffff582e6fa4    68  mov x1, x3
0xffff582e6fa8    72  ldr x16, pc+40 (addr 0x0000ffff582e6fd0)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff582e6fac    76  br x16
0xffff582e6fb0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582e6fb4    84  d63f03e0       constant
0xffff582e6fb8    88  225cbc69       constant
0xffff582e6fbc    92  00000000       constant
0xffff582e6fc0    96  225cbc79       constant
0xffff582e6fc4   100  00000000       constant
0xffff582e6fc8   104  582222e0       constant
0xffff582e6fcc   108  0000ffff       constant
0xffff582e6fd0   112  5824c160       constant
0xffff582e6fd4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582e6f70  embedded object  (0x225cbc69 Cell for 0)
0xffff582e6f80  embedded object  (0x225cbc79 WeakCell for 0x39c40019 <JS Function (SharedFunctionInfo 0x39c3ff71)>)
0xffff582e6f98  code target (BUILTIN)  (0xffff582222e0)
0xffff582e6fa8  code target (HANDLER)  (0xffff5824c160)
0xffff582e6fb0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = toString
compiler = unknown
Instructions (size = 120)
0xffff582e7040     0  sub csp, jssp, #0x8 (8)
0xffff582e7044     4  str x3, [jssp, #-8]!
0xffff582e7048     8  sub csp, jssp, #0x8 (8)
0xffff582e704c    12  str x0, [jssp, #-8]!
0xffff582e7050    16  ldr x0, pc+72 (addr 0x0000ffff582e7098)    ;; object: 0x225cba51 Cell for 0
0xffff582e7054    20  ldur x0, [x0, #7]
0xffff582e7058    24  cmp x0, #0x0 (0)
0xffff582e705c    28  b.ne #+0x14 (addr 0xffff582e7070)
0xffff582e7060    32  ldr x3, pc+64 (addr 0x0000ffff582e70a0)    ;; object: 0x225cbcc9 WeakCell for 0x22540a11 <a FastBuffer with map 0x32b22341>
0xffff582e7064    36  ldur x3, [x3, #7]
0xffff582e7068    40  tbz w3, #0, #+0x8 (addr 0xffff582e7070)
0xffff582e706c    44  b #+0x14 (addr 0xffff582e7080)
0xffff582e7070    48  ldr x0, [jssp], #8
0xffff582e7074    52  ldr x3, [jssp], #8
0xffff582e7078    56  ldr x16, pc+48 (addr 0x0000ffff582e70a8)    ;; code: BUILTIN
0xffff582e707c    60  br x16
0xffff582e7080    64  add jssp, jssp, #0x10 (16)
0xffff582e7084    68  mov x1, x3
0xffff582e7088    72  ldr x16, pc+40 (addr 0x0000ffff582e70b0)    ;; code: HANDLER, LoadConstantStub, minor: 16
0xffff582e708c    76  br x16
0xffff582e7090    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582e7094    84  d63f03e0       constant
0xffff582e7098    88  225cba51       constant
0xffff582e709c    92  00000000       constant
0xffff582e70a0    96  225cbcc9       constant
0xffff582e70a4   100  00000000       constant
0xffff582e70a8   104  582222e0       constant
0xffff582e70ac   108  0000ffff       constant
0xffff582e70b0   112  582e66c0       constant
0xffff582e70b4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582e7050  embedded object  (0x225cba51 Cell for 0)
0xffff582e7060  embedded object  (0x225cbcc9 WeakCell for 0x22540a11 <a FastBuffer with map 0x32b22341>)
0xffff582e7078  code target (BUILTIN)  (0xffff582222e0)
0xffff582e7088  code target (HANDLER)  (0xffff582e66c0)
0xffff582e7090  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = apply
compiler = unknown
Instructions (size = 120)
0xffff582e7120     0  sub csp, jssp, #0x8 (8)
0xffff582e7124     4  str x3, [jssp, #-8]!
0xffff582e7128     8  sub csp, jssp, #0x8 (8)
0xffff582e712c    12  str x0, [jssp, #-8]!
0xffff582e7130    16  ldr x0, pc+72 (addr 0x0000ffff582e7178)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582e7134    20  ldur x0, [x0, #7]
0xffff582e7138    24  cmp x0, #0x0 (0)
0xffff582e713c    28  b.ne #+0x14 (addr 0xffff582e7150)
0xffff582e7140    32  ldr x3, pc+64 (addr 0x0000ffff582e7180)    ;; object: 0x225cbd01 WeakCell for 0x39c40019 <JS Function (SharedFunctionInfo 0x39c3ff71)>
0xffff582e7144    36  ldur x3, [x3, #7]
0xffff582e7148    40  tbz w3, #0, #+0x8 (addr 0xffff582e7150)
0xffff582e714c    44  b #+0x14 (addr 0xffff582e7160)
0xffff582e7150    48  ldr x0, [jssp], #8
0xffff582e7154    52  ldr x3, [jssp], #8
0xffff582e7158    56  ldr x16, pc+48 (addr 0x0000ffff582e7188)    ;; code: BUILTIN
0xffff582e715c    60  br x16
0xffff582e7160    64  add jssp, jssp, #0x10 (16)
0xffff582e7164    68  mov x1, x3
0xffff582e7168    72  ldr x16, pc+40 (addr 0x0000ffff582e7190)    ;; code: HANDLER, LoadConstantStub, minor: 4
0xffff582e716c    76  br x16
0xffff582e7170    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582e7174    84  d63f03e0       constant
0xffff582e7178    88  39c5b0f1       constant
0xffff582e717c    92  00000000       constant
0xffff582e7180    96  225cbd01       constant
0xffff582e7184   100  00000000       constant
0xffff582e7188   104  582222e0       constant
0xffff582e718c   108  0000ffff       constant
0xffff582e7190   112  58243480       constant
0xffff582e7194   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582e7130  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582e7140  embedded object  (0x225cbd01 WeakCell for 0x39c40019 <JS Function (SharedFunctionInfo 0x39c3ff71)>)
0xffff582e7158  code target (BUILTIN)  (0xffff582222e0)
0xffff582e7168  code target (HANDLER)  (0xffff58243480)
0xffff582e7170  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = utf8Slice
compiler = unknown
Instructions (size = 120)
0xffff582e7200     0  sub csp, jssp, #0x8 (8)
0xffff582e7204     4  str x3, [jssp, #-8]!
0xffff582e7208     8  sub csp, jssp, #0x8 (8)
0xffff582e720c    12  str x0, [jssp, #-8]!
0xffff582e7210    16  ldr x0, pc+72 (addr 0x0000ffff582e7258)    ;; object: 0x225cba51 Cell for 0
0xffff582e7214    20  ldur x0, [x0, #7]
0xffff582e7218    24  cmp x0, #0x0 (0)
0xffff582e721c    28  b.ne #+0x14 (addr 0xffff582e7230)
0xffff582e7220    32  ldr x3, pc+64 (addr 0x0000ffff582e7260)    ;; object: 0x225cbd39 WeakCell for 0x22540a11 <a FastBuffer with map 0x32b22341>
0xffff582e7224    36  ldur x3, [x3, #7]
0xffff582e7228    40  tbz w3, #0, #+0x8 (addr 0xffff582e7230)
0xffff582e722c    44  b #+0x14 (addr 0xffff582e7240)
0xffff582e7230    48  ldr x0, [jssp], #8
0xffff582e7234    52  ldr x3, [jssp], #8
0xffff582e7238    56  ldr x16, pc+48 (addr 0x0000ffff582e7268)    ;; code: BUILTIN
0xffff582e723c    60  br x16
0xffff582e7240    64  add jssp, jssp, #0x10 (16)
0xffff582e7244    68  mov x1, x3
0xffff582e7248    72  ldr x16, pc+40 (addr 0x0000ffff582e7270)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff582e724c    76  br x16
0xffff582e7250    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582e7254    84  d63f03e0       constant
0xffff582e7258    88  225cba51       constant
0xffff582e725c    92  00000000       constant
0xffff582e7260    96  225cbd39       constant
0xffff582e7264   100  00000000       constant
0xffff582e7268   104  582222e0       constant
0xffff582e726c   108  0000ffff       constant
0xffff582e7270   112  5828b020       constant
0xffff582e7274   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582e7210  embedded object  (0x225cba51 Cell for 0)
0xffff582e7220  embedded object  (0x225cbd39 WeakCell for 0x22540a11 <a FastBuffer with map 0x32b22341>)
0xffff582e7238  code target (BUILTIN)  (0xffff582222e0)
0xffff582e7248  code target (HANDLER)  (0xffff5828b020)
0xffff582e7250  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _compile
compiler = unknown
Instructions (size = 120)
0xffff582e72e0     0  sub csp, jssp, #0x8 (8)
0xffff582e72e4     4  str x3, [jssp, #-8]!
0xffff582e72e8     8  sub csp, jssp, #0x8 (8)
0xffff582e72ec    12  str x0, [jssp, #-8]!
0xffff582e72f0    16  ldr x0, pc+72 (addr 0x0000ffff582e7338)    ;; object: 0x225cb5c9 Cell for 0
0xffff582e72f4    20  ldur x0, [x0, #7]
0xffff582e72f8    24  cmp x0, #0x0 (0)
0xffff582e72fc    28  b.ne #+0x14 (addr 0xffff582e7310)
0xffff582e7300    32  ldr x3, pc+64 (addr 0x0000ffff582e7340)    ;; object: 0x225cbd71 WeakCell for 0x4f940609 <an Object with map 0x32b35009>
0xffff582e7304    36  ldur x3, [x3, #7]
0xffff582e7308    40  tbz w3, #0, #+0x8 (addr 0xffff582e7310)
0xffff582e730c    44  b #+0x14 (addr 0xffff582e7320)
0xffff582e7310    48  ldr x0, [jssp], #8
0xffff582e7314    52  ldr x3, [jssp], #8
0xffff582e7318    56  ldr x16, pc+48 (addr 0x0000ffff582e7348)    ;; code: BUILTIN
0xffff582e731c    60  br x16
0xffff582e7320    64  add jssp, jssp, #0x10 (16)
0xffff582e7324    68  mov x1, x3
0xffff582e7328    72  ldr x16, pc+40 (addr 0x0000ffff582e7350)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff582e732c    76  br x16
0xffff582e7330    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582e7334    84  d63f03e0       constant
0xffff582e7338    88  225cb5c9       constant
0xffff582e733c    92  00000000       constant
0xffff582e7340    96  225cbd71       constant
0xffff582e7344   100  00000000       constant
0xffff582e7348   104  582222e0       constant
0xffff582e734c   108  0000ffff       constant
0xffff582e7350   112  58243400       constant
0xffff582e7354   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582e72f0  embedded object  (0x225cb5c9 Cell for 0)
0xffff582e7300  embedded object  (0x225cbd71 WeakCell for 0x4f940609 <an Object with map 0x32b35009>)
0xffff582e7318  code target (BUILTIN)  (0xffff582222e0)
0xffff582e7328  code target (HANDLER)  (0xffff58243400)
0xffff582e7330  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _debugWaitConnect
compiler = unknown
Instructions (size = 632)
0xffff582e7700     0  sub csp, jssp, #0x8 (8)
0xffff582e7704     4  str x3, [jssp, #-8]!
0xffff582e7708     8  sub csp, jssp, #0x8 (8)
0xffff582e770c    12  str x0, [jssp, #-8]!
0xffff582e7710    16  ldr x0, pc+544 (addr 0x0000ffff582e7930)    ;; object: 0x39ce3709 Cell for 0
0xffff582e7714    20  ldur x0, [x0, #7]
0xffff582e7718    24  cmp x0, #0x0 (0)
0xffff582e771c    28  b.ne #+0x1f8 (addr 0xffff582e7914)
0xffff582e7720    32  ldur x4, [x1, #-1]
0xffff582e7724    36  ldrb w0, [x4, #12]
0xffff582e7728    40  movz x16, #0x44
0xffff582e772c    44  tst x0, x16
0xffff582e7730    48  b.ne #+0x1e4 (addr 0xffff582e7914)
0xffff582e7734    52  ldrb w0, [x4, #11]
0xffff582e7738    56  cmp x0, #0xb1 (177)
0xffff582e773c    60  b.lt #+0x1d8 (addr 0xffff582e7914)
0xffff582e7740    64  ldur x0, [x1, #7]
0xffff582e7744    68  ldur x4, [x0, #-1]
0xffff582e7748    72  ldr x16, [x26, #432]
0xffff582e774c    76  cmp x4, x16
0xffff582e7750    80  b.ne #+0x1c4 (addr 0xffff582e7914)
0xffff582e7754    84  ldursw x4, [x0, #35]
0xffff582e7758    88  sub x4, x4, #0x1 (1)
0xffff582e775c    92  movz x16, #0x704a
0xffff582e7760    96  movk x16, #0x31e0, lsl #16
0xffff582e7764   100  and x4, x4, x16
0xffff582e7768   104  add x4, x4, x4, lsl #1
0xffff582e776c   108  add x4, x0, x4, lsl #3
0xffff582e7770   112  ldur x4, [x4, #55]
0xffff582e7774   116  ldr x16, [x26, #40]
0xffff582e7778   120  cmp x4, x16
0xffff582e777c   124  b.eq #+0x188 (addr 0xffff582e7904)
0xffff582e7780   128  ldr x16, pc+440 (addr 0x0000ffff582e7938)    ;; object: 0x39cba8a1 <String[17]: _debugWaitConnect>
0xffff582e7784   132  cmp x4, x16
0xffff582e7788   136  b.eq #+0x18c (addr 0xffff582e7914)
0xffff582e778c   140  ldr x16, [x26, #88]
0xffff582e7790   144  cmp x4, x16
0xffff582e7794   148  b.eq #+0x1c (addr 0xffff582e77b0)
0xffff582e7798   152  ldur x4, [x4, #-1]
0xffff582e779c   156  ldrb w4, [x4, #11]
0xffff582e77a0   160  tst x4, #0xc0
0xffff582e77a4   164  movz x16, #0x80
0xffff582e77a8   168  ccmp x4, x16, #nZcv, ne
0xffff582e77ac   172  b.ne #+0x168 (addr 0xffff582e7914)
0xffff582e77b0   176  ldursw x4, [x0, #35]
0xffff582e77b4   180  sub x4, x4, #0x1 (1)
0xffff582e77b8   184  movz x16, #0x704b
0xffff582e77bc   188  movk x16, #0x31e0, lsl #16
0xffff582e77c0   192  and x4, x4, x16
0xffff582e77c4   196  add x4, x4, x4, lsl #1
0xffff582e77c8   200  add x4, x0, x4, lsl #3
0xffff582e77cc   204  ldur x4, [x4, #55]
0xffff582e77d0   208  ldr x16, [x26, #40]
0xffff582e77d4   212  cmp x4, x16
0xffff582e77d8   216  b.eq #+0x12c (addr 0xffff582e7904)
0xffff582e77dc   220  ldr x16, pc+356 (addr 0x0000ffff582e7940)    ;; object: 0x39cba8a1 <String[17]: _debugWaitConnect>
0xffff582e77e0   224  cmp x4, x16
0xffff582e77e4   228  b.eq #+0x130 (addr 0xffff582e7914)
0xffff582e77e8   232  ldr x16, [x26, #88]
0xffff582e77ec   236  cmp x4, x16
0xffff582e77f0   240  b.eq #+0x1c (addr 0xffff582e780c)
0xffff582e77f4   244  ldur x4, [x4, #-1]
0xffff582e77f8   248  ldrb w4, [x4, #11]
0xffff582e77fc   252  tst x4, #0xc0
0xffff582e7800   256  movz x16, #0x80
0xffff582e7804   260  ccmp x4, x16, #nZcv, ne
0xffff582e7808   264  b.ne #+0x10c (addr 0xffff582e7914)
0xffff582e780c   268  ldursw x4, [x0, #35]
0xffff582e7810   272  sub x4, x4, #0x1 (1)
0xffff582e7814   276  movz x16, #0x704d
0xffff582e7818   280  movk x16, #0x31e0, lsl #16
0xffff582e781c   284  and x4, x4, x16
0xffff582e7820   288  add x4, x4, x4, lsl #1
0xffff582e7824   292  add x4, x0, x4, lsl #3
0xffff582e7828   296  ldur x4, [x4, #55]
0xffff582e782c   300  ldr x16, [x26, #40]
0xffff582e7830   304  cmp x4, x16
0xffff582e7834   308  b.eq #+0xd0 (addr 0xffff582e7904)
0xffff582e7838   312  ldr x16, pc+272 (addr 0x0000ffff582e7948)    ;; object: 0x39cba8a1 <String[17]: _debugWaitConnect>
0xffff582e783c   316  cmp x4, x16
0xffff582e7840   320  b.eq #+0xd4 (addr 0xffff582e7914)
0xffff582e7844   324  ldr x16, [x26, #88]
0xffff582e7848   328  cmp x4, x16
0xffff582e784c   332  b.eq #+0x1c (addr 0xffff582e7868)
0xffff582e7850   336  ldur x4, [x4, #-1]
0xffff582e7854   340  ldrb w4, [x4, #11]
0xffff582e7858   344  tst x4, #0xc0
0xffff582e785c   348  movz x16, #0x80
0xffff582e7860   352  ccmp x4, x16, #nZcv, ne
0xffff582e7864   356  b.ne #+0xb0 (addr 0xffff582e7914)
0xffff582e7868   360  ldursw x4, [x0, #35]
0xffff582e786c   364  sub x4, x4, #0x1 (1)
0xffff582e7870   368  movz x16, #0x7050
0xffff582e7874   372  movk x16, #0x31e0, lsl #16
0xffff582e7878   376  and x4, x4, x16
0xffff582e787c   380  add x4, x4, x4, lsl #1
0xffff582e7880   384  add x4, x0, x4, lsl #3
0xffff582e7884   388  ldur x4, [x4, #55]
0xffff582e7888   392  ldr x16, [x26, #40]
0xffff582e788c   396  cmp x4, x16
0xffff582e7890   400  b.eq #+0x74 (addr 0xffff582e7904)
0xffff582e7894   404  ldr x16, pc+188 (addr 0x0000ffff582e7950)    ;; object: 0x39cba8a1 <String[17]: _debugWaitConnect>
0xffff582e7898   408  cmp x4, x16
0xffff582e789c   412  b.eq #+0x78 (addr 0xffff582e7914)
0xffff582e78a0   416  ldr x16, [x26, #88]
0xffff582e78a4   420  cmp x4, x16
0xffff582e78a8   424  b.eq #+0x1c (addr 0xffff582e78c4)
0xffff582e78ac   428  ldur x4, [x4, #-1]
0xffff582e78b0   432  ldrb w4, [x4, #11]
0xffff582e78b4   436  tst x4, #0xc0
0xffff582e78b8   440  movz x16, #0x80
0xffff582e78bc   444  ccmp x4, x16, #nZcv, ne
0xffff582e78c0   448  b.ne #+0x54 (addr 0xffff582e7914)
0xffff582e78c4   452  sub csp, jssp, #0x38 (56)
0xffff582e78c8   456  stp x3, x5, [jssp, #-32]!
0xffff582e78cc   460  stp x6, lr, [jssp, #16]
0xffff582e78d0   464  stp x0, x1, [jssp, #-24]!
0xffff582e78d4   468  str x2, [jssp, #16]
0xffff582e78d8   472  ldur x0, [x1, #7]
0xffff582e78dc   476  ldr x1, pc+124 (addr 0x0000ffff582e7958)    ;; object: 0x39cba8a1 <String[17]: _debugWaitConnect>
0xffff582e78e0   480  ldr x16, pc+128 (addr 0x0000ffff582e7960)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff582e78e4   484  blr x16
0xffff582e78e8   488  mov x4, x0
0xffff582e78ec   492  ldp x2, x3, [jssp, #16]
0xffff582e78f0   496  ldp x0, x1, [jssp], #32
0xffff582e78f4   500  ldr lr, [jssp, #16]
0xffff582e78f8   504  ldp x5, x6, [jssp], #24
0xffff582e78fc   508  cbz x4, #+0x8 (addr 0xffff582e7904)
0xffff582e7900   512  b #+0x14 (addr 0xffff582e7914)
0xffff582e7904   516  add jssp, jssp, #0x10 (16)
0xffff582e7908   520  ldr x0, pc+96 (addr 0x0000ffff582e7968)    ;; object: 0x39c04241 <undefined>
0xffff582e790c   524  ret
0xffff582e7910   528  b #+0x14 (addr 0xffff582e7924)
0xffff582e7914   532  ldr x0, [jssp], #8
0xffff582e7918   536  ldr x3, [jssp], #8
0xffff582e791c   540  ldr x16, pc+84 (addr 0x0000ffff582e7970)    ;; code: BUILTIN
0xffff582e7920   544  br x16
0xffff582e7924   548  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff582e7928   552  d63f03e0       constant
0xffff582e792c   556  d503201f       constant
0xffff582e7930   560  39ce3709       constant
0xffff582e7934   564  00000000       constant
0xffff582e7938   568  39cba8a1       constant
0xffff582e793c   572  00000000       constant
0xffff582e7940   576  39cba8a1       constant
0xffff582e7944   580  00000000       constant
0xffff582e7948   584  39cba8a1       constant
0xffff582e794c   588  00000000       constant
0xffff582e7950   592  39cba8a1       constant
0xffff582e7954   596  00000000       constant
0xffff582e7958   600  39cba8a1       constant
0xffff582e795c   604  00000000       constant
0xffff582e7960   608  5828b120       constant
0xffff582e7964   612  0000ffff       constant
0xffff582e7968   616  39c04241       constant
0xffff582e796c   620  00000000       constant
0xffff582e7970   624  582222e0       constant
0xffff582e7974   628  0000ffff       constant


RelocInfo (size = 25)
0xffff582e7710  embedded object  (0x39ce3709 Cell for 0)
0xffff582e7780  embedded object  (0x39cba8a1 <String[17]: _debugWaitConnect>)
0xffff582e77dc  embedded object  (0x39cba8a1 <String[17]: _debugWaitConnect>)
0xffff582e7838  embedded object  (0x39cba8a1 <String[17]: _debugWaitConnect>)
0xffff582e7894  embedded object  (0x39cba8a1 <String[17]: _debugWaitConnect>)
0xffff582e78dc  embedded object  (0x39cba8a1 <String[17]: _debugWaitConnect>)
0xffff582e78e0  code target (STUB)  (0xffff5828b120)
0xffff582e7908  embedded object  (0x39c04241 <undefined>)
0xffff582e791c  code target (BUILTIN)  (0xffff582222e0)
0xffff582e7924  constant pool (size 84)

kind = HANDLER
major_key = <NoCache>Stub
name = constructor
compiler = unknown
Instructions (size = 120)
0xffff582e79e0     0  sub csp, jssp, #0x8 (8)
0xffff582e79e4     4  str x3, [jssp, #-8]!
0xffff582e79e8     8  sub csp, jssp, #0x8 (8)
0xffff582e79ec    12  str x0, [jssp, #-8]!
0xffff582e79f0    16  ldr x0, pc+72 (addr 0x0000ffff582e7a38)    ;; object: 0x225cb5c9 Cell for 0
0xffff582e79f4    20  ldur x0, [x0, #7]
0xffff582e79f8    24  cmp x0, #0x0 (0)
0xffff582e79fc    28  b.ne #+0x14 (addr 0xffff582e7a10)
0xffff582e7a00    32  ldr x3, pc+64 (addr 0x0000ffff582e7a40)    ;; object: 0x225cc3d1 WeakCell for 0x4f940609 <an Object with map 0x32b35009>
0xffff582e7a04    36  ldur x3, [x3, #7]
0xffff582e7a08    40  tbz w3, #0, #+0x8 (addr 0xffff582e7a10)
0xffff582e7a0c    44  b #+0x14 (addr 0xffff582e7a20)
0xffff582e7a10    48  ldr x0, [jssp], #8
0xffff582e7a14    52  ldr x3, [jssp], #8
0xffff582e7a18    56  ldr x16, pc+48 (addr 0x0000ffff582e7a48)    ;; code: BUILTIN
0xffff582e7a1c    60  br x16
0xffff582e7a20    64  add jssp, jssp, #0x10 (16)
0xffff582e7a24    68  mov x1, x3
0xffff582e7a28    72  ldr x16, pc+40 (addr 0x0000ffff582e7a50)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff582e7a2c    76  br x16
0xffff582e7a30    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582e7a34    84  d63f03e0       constant
0xffff582e7a38    88  225cb5c9       constant
0xffff582e7a3c    92  00000000       constant
0xffff582e7a40    96  225cc3d1       constant
0xffff582e7a44   100  00000000       constant
0xffff582e7a48   104  582222e0       constant
0xffff582e7a4c   108  0000ffff       constant
0xffff582e7a50   112  582431a0       constant
0xffff582e7a54   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582e79f0  embedded object  (0x225cb5c9 Cell for 0)
0xffff582e7a00  embedded object  (0x225cc3d1 WeakCell for 0x4f940609 <an Object with map 0x32b35009>)
0xffff582e7a18  code target (BUILTIN)  (0xffff582222e0)
0xffff582e7a28  code target (HANDLER)  (0xffff582431a0)
0xffff582e7a30  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = resolve
compiler = unknown
Instructions (size = 152)
0xffff582e7ac0     0  sub csp, jssp, #0x8 (8)
0xffff582e7ac4     4  str x3, [jssp, #-8]!
0xffff582e7ac8     8  sub csp, jssp, #0x8 (8)
0xffff582e7acc    12  str x4, [jssp, #-8]!
0xffff582e7ad0    16  ldr x3, pc+88 (addr 0x0000ffff582e7b28)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582e7ad4    20  ldur x3, [x3, #7]
0xffff582e7ad8    24  cmp x3, #0x0 (0)
0xffff582e7adc    28  b.ne #+0x30 (addr 0xffff582e7b0c)
0xffff582e7ae0    32  tbz w0, #0, #+0x2c (addr 0xffff582e7b0c)
0xffff582e7ae4    36  ldr x5, pc+76 (addr 0x0000ffff582e7b30)    ;; object: 0x225cc409 WeakCell for 0x32b368c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e7ae8    40  ldur x5, [x5, #7]
0xffff582e7aec    44  tbz w5, #0, #+0x20 (addr 0xffff582e7b0c)
0xffff582e7af0    48  ldursw x4, [x5, #15]
0xffff582e7af4    52  tbnz w4, #23, #+0x18 (addr 0xffff582e7b0c)
0xffff582e7af8    56  ldr x4, [jssp], #8
0xffff582e7afc    60  ldr x3, [jssp], #8
0xffff582e7b00    64  ldr x2, pc+56 (addr 0x0000ffff582e7b38)    ;; object: 0x39c8fcd9 <String[7]: resolve>
0xffff582e7b04    68  ldr x16, pc+60 (addr 0x0000ffff582e7b40)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff582e7b08    72  br x16
0xffff582e7b0c    76  ldr x2, pc+60 (addr 0x0000ffff582e7b48)    ;; object: 0x39c8fcd9 <String[7]: resolve>
0xffff582e7b10    80  ldr x4, [jssp], #8
0xffff582e7b14    84  ldr x3, [jssp], #8
0xffff582e7b18    88  ldr x16, pc+56 (addr 0x0000ffff582e7b50)    ;; code: BUILTIN
0xffff582e7b1c    92  br x16
0xffff582e7b20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582e7b24   100  d63f03e0       constant
0xffff582e7b28   104  39c5b0f1       constant
0xffff582e7b2c   108  00000000       constant
0xffff582e7b30   112  225cc409       constant
0xffff582e7b34   116  00000000       constant
0xffff582e7b38   120  39c8fcd9       constant
0xffff582e7b3c   124  00000000       constant
0xffff582e7b40   128  58238860       constant
0xffff582e7b44   132  0000ffff       constant
0xffff582e7b48   136  39c8fcd9       constant
0xffff582e7b4c   140  00000000       constant
0xffff582e7b50   144  58222420       constant
0xffff582e7b54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582e7ad0  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582e7ae4  embedded object  (0x225cc409 WeakCell for 0x32b368c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e7b00  embedded object  (0x39c8fcd9 <String[7]: resolve>)
0xffff582e7b04  code target (HANDLER)  (0xffff58238860)
0xffff582e7b0c  embedded object  (0x39c8fcd9 <String[7]: resolve>)
0xffff582e7b18  code target (BUILTIN)  (0xffff58222420)
0xffff582e7b20  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = main
compiler = unknown
Instructions (size = 184)
0xffff582e7bc0     0  sub csp, jssp, #0x8 (8)
0xffff582e7bc4     4  str x3, [jssp, #-8]!
0xffff582e7bc8     8  sub csp, jssp, #0x8 (8)
0xffff582e7bcc    12  str x4, [jssp, #-8]!
0xffff582e7bd0    16  ldr x3, pc+112 (addr 0x0000ffff582e7c40)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582e7bd4    20  ldur x3, [x3, #7]
0xffff582e7bd8    24  cmp x3, #0x0 (0)
0xffff582e7bdc    28  b.ne #+0x44 (addr 0xffff582e7c20)
0xffff582e7be0    32  tbz w0, #0, #+0x40 (addr 0xffff582e7c20)
0xffff582e7be4    36  ldur x3, [x0, #-1]
0xffff582e7be8    40  ldr x4, pc+96 (addr 0x0000ffff582e7c48)    ;; object: 0x225c5369 WeakCell for 0x32b36559 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e7bec    44  ldur x4, [x4, #7]
0xffff582e7bf0    48  cmp x3, x4
0xffff582e7bf4    52  b.ne #+0x2c (addr 0xffff582e7c20)
0xffff582e7bf8    56  ldr x5, pc+88 (addr 0x0000ffff582e7c50)    ;; object: 0x225cc441 WeakCell for 0x32b36921 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e7bfc    60  ldur x5, [x5, #7]
0xffff582e7c00    64  tbz w5, #0, #+0x20 (addr 0xffff582e7c20)
0xffff582e7c04    68  ldursw x4, [x5, #15]
0xffff582e7c08    72  tbnz w4, #23, #+0x18 (addr 0xffff582e7c20)
0xffff582e7c0c    76  ldr x4, [jssp], #8
0xffff582e7c10    80  ldr x3, [jssp], #8
0xffff582e7c14    84  ldr x2, pc+68 (addr 0x0000ffff582e7c58)    ;; object: 0x22507b89 <String[4]: main>
0xffff582e7c18    88  ldr x16, pc+72 (addr 0x0000ffff582e7c60)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff582e7c1c    92  br x16
0xffff582e7c20    96  ldr x2, pc+72 (addr 0x0000ffff582e7c68)    ;; object: 0x22507b89 <String[4]: main>
0xffff582e7c24   100  ldr x4, [jssp], #8
0xffff582e7c28   104  ldr x3, [jssp], #8
0xffff582e7c2c   108  ldr x16, pc+68 (addr 0x0000ffff582e7c70)    ;; code: BUILTIN
0xffff582e7c30   112  br x16
0xffff582e7c34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582e7c38   120  d63f03e0       constant
0xffff582e7c3c   124  d503201f       constant
0xffff582e7c40   128  39c5b0f1       constant
0xffff582e7c44   132  00000000       constant
0xffff582e7c48   136  225c5369       constant
0xffff582e7c4c   140  00000000       constant
0xffff582e7c50   144  225cc441       constant
0xffff582e7c54   148  00000000       constant
0xffff582e7c58   152  22507b89       constant
0xffff582e7c5c   156  00000000       constant
0xffff582e7c60   160  58299940       constant
0xffff582e7c64   164  0000ffff       constant
0xffff582e7c68   168  22507b89       constant
0xffff582e7c6c   172  00000000       constant
0xffff582e7c70   176  58222420       constant
0xffff582e7c74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582e7bd0  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582e7be8  embedded object  (0x225c5369 WeakCell for 0x32b36559 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e7bf8  embedded object  (0x225cc441 WeakCell for 0x32b36921 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e7c14  embedded object  (0x22507b89 <String[4]: main>)
0xffff582e7c18  code target (HANDLER)  (0xffff58299940)
0xffff582e7c20  embedded object  (0x22507b89 <String[4]: main>)
0xffff582e7c2c  code target (BUILTIN)  (0xffff58222420)
0xffff582e7c34  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = extensions
compiler = unknown
Instructions (size = 184)
0xffff582e7ce0     0  sub csp, jssp, #0x8 (8)
0xffff582e7ce4     4  str x3, [jssp, #-8]!
0xffff582e7ce8     8  sub csp, jssp, #0x8 (8)
0xffff582e7cec    12  str x4, [jssp, #-8]!
0xffff582e7cf0    16  ldr x3, pc+112 (addr 0x0000ffff582e7d60)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582e7cf4    20  ldur x3, [x3, #7]
0xffff582e7cf8    24  cmp x3, #0x0 (0)
0xffff582e7cfc    28  b.ne #+0x44 (addr 0xffff582e7d40)
0xffff582e7d00    32  tbz w0, #0, #+0x40 (addr 0xffff582e7d40)
0xffff582e7d04    36  ldur x3, [x0, #-1]
0xffff582e7d08    40  ldr x4, pc+96 (addr 0x0000ffff582e7d68)    ;; object: 0x2252e741 WeakCell for 0x32b35111 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e7d0c    44  ldur x4, [x4, #7]
0xffff582e7d10    48  cmp x3, x4
0xffff582e7d14    52  b.ne #+0x2c (addr 0xffff582e7d40)
0xffff582e7d18    56  ldr x5, pc+88 (addr 0x0000ffff582e7d70)    ;; object: 0x225cc479 WeakCell for 0x32b36979 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e7d1c    60  ldur x5, [x5, #7]
0xffff582e7d20    64  tbz w5, #0, #+0x20 (addr 0xffff582e7d40)
0xffff582e7d24    68  ldursw x4, [x5, #15]
0xffff582e7d28    72  tbnz w4, #23, #+0x18 (addr 0xffff582e7d40)
0xffff582e7d2c    76  ldr x4, [jssp], #8
0xffff582e7d30    80  ldr x3, [jssp], #8
0xffff582e7d34    84  ldr x2, pc+68 (addr 0x0000ffff582e7d78)    ;; object: 0x2250a9e9 <String[10]: extensions>
0xffff582e7d38    88  ldr x16, pc+72 (addr 0x0000ffff582e7d80)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff582e7d3c    92  br x16
0xffff582e7d40    96  ldr x2, pc+72 (addr 0x0000ffff582e7d88)    ;; object: 0x2250a9e9 <String[10]: extensions>
0xffff582e7d44   100  ldr x4, [jssp], #8
0xffff582e7d48   104  ldr x3, [jssp], #8
0xffff582e7d4c   108  ldr x16, pc+68 (addr 0x0000ffff582e7d90)    ;; code: BUILTIN
0xffff582e7d50   112  br x16
0xffff582e7d54   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582e7d58   120  d63f03e0       constant
0xffff582e7d5c   124  d503201f       constant
0xffff582e7d60   128  39c5b0f1       constant
0xffff582e7d64   132  00000000       constant
0xffff582e7d68   136  2252e741       constant
0xffff582e7d6c   140  00000000       constant
0xffff582e7d70   144  225cc479       constant
0xffff582e7d74   148  00000000       constant
0xffff582e7d78   152  2250a9e9       constant
0xffff582e7d7c   156  00000000       constant
0xffff582e7d80   160  5829a100       constant
0xffff582e7d84   164  0000ffff       constant
0xffff582e7d88   168  2250a9e9       constant
0xffff582e7d8c   172  00000000       constant
0xffff582e7d90   176  58222420       constant
0xffff582e7d94   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582e7cf0  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582e7d08  embedded object  (0x2252e741 WeakCell for 0x32b35111 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e7d18  embedded object  (0x225cc479 WeakCell for 0x32b36979 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e7d34  embedded object  (0x2250a9e9 <String[10]: extensions>)
0xffff582e7d38  code target (HANDLER)  (0xffff5829a100)
0xffff582e7d40  embedded object  (0x2250a9e9 <String[10]: extensions>)
0xffff582e7d4c  code target (BUILTIN)  (0xffff58222420)
0xffff582e7d54  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = cache
compiler = unknown
Instructions (size = 184)
0xffff582e7e00     0  sub csp, jssp, #0x8 (8)
0xffff582e7e04     4  str x3, [jssp, #-8]!
0xffff582e7e08     8  sub csp, jssp, #0x8 (8)
0xffff582e7e0c    12  str x4, [jssp, #-8]!
0xffff582e7e10    16  ldr x3, pc+112 (addr 0x0000ffff582e7e80)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582e7e14    20  ldur x3, [x3, #7]
0xffff582e7e18    24  cmp x3, #0x0 (0)
0xffff582e7e1c    28  b.ne #+0x44 (addr 0xffff582e7e60)
0xffff582e7e20    32  tbz w0, #0, #+0x40 (addr 0xffff582e7e60)
0xffff582e7e24    36  ldur x3, [x0, #-1]
0xffff582e7e28    40  ldr x4, pc+96 (addr 0x0000ffff582e7e88)    ;; object: 0x225cb781 WeakCell for 0x32b36871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e7e2c    44  ldur x4, [x4, #7]
0xffff582e7e30    48  cmp x3, x4
0xffff582e7e34    52  b.ne #+0x2c (addr 0xffff582e7e60)
0xffff582e7e38    56  ldr x5, pc+88 (addr 0x0000ffff582e7e90)    ;; object: 0x225cc4b1 WeakCell for 0x32b369d1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582e7e3c    60  ldur x5, [x5, #7]
0xffff582e7e40    64  tbz w5, #0, #+0x20 (addr 0xffff582e7e60)
0xffff582e7e44    68  ldursw x4, [x5, #15]
0xffff582e7e48    72  tbnz w4, #23, #+0x18 (addr 0xffff582e7e60)
0xffff582e7e4c    76  ldr x4, [jssp], #8
0xffff582e7e50    80  ldr x3, [jssp], #8
0xffff582e7e54    84  ldr x2, pc+68 (addr 0x0000ffff582e7e98)    ;; object: 0x39cbab51 <String[5]: cache>
0xffff582e7e58    88  ldr x16, pc+72 (addr 0x0000ffff582e7ea0)    ;; code: HANDLER, StoreTransitionStub, minor: 327685
0xffff582e7e5c    92  br x16
0xffff582e7e60    96  ldr x2, pc+72 (addr 0x0000ffff582e7ea8)    ;; object: 0x39cbab51 <String[5]: cache>
0xffff582e7e64   100  ldr x4, [jssp], #8
0xffff582e7e68   104  ldr x3, [jssp], #8
0xffff582e7e6c   108  ldr x16, pc+68 (addr 0x0000ffff582e7eb0)    ;; code: BUILTIN
0xffff582e7e70   112  br x16
0xffff582e7e74   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582e7e78   120  d63f03e0       constant
0xffff582e7e7c   124  d503201f       constant
0xffff582e7e80   128  39c5b0f1       constant
0xffff582e7e84   132  00000000       constant
0xffff582e7e88   136  225cb781       constant
0xffff582e7e8c   140  00000000       constant
0xffff582e7e90   144  225cc4b1       constant
0xffff582e7e94   148  00000000       constant
0xffff582e7e98   152  39cbab51       constant
0xffff582e7e9c   156  00000000       constant
0xffff582e7ea0   160  5829d3c0       constant
0xffff582e7ea4   164  0000ffff       constant
0xffff582e7ea8   168  39cbab51       constant
0xffff582e7eac   172  00000000       constant
0xffff582e7eb0   176  58222420       constant
0xffff582e7eb4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582e7e10  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582e7e28  embedded object  (0x225cb781 WeakCell for 0x32b36871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e7e38  embedded object  (0x225cc4b1 WeakCell for 0x32b369d1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582e7e54  embedded object  (0x39cbab51 <String[5]: cache>)
0xffff582e7e58  code target (HANDLER)  (0xffff5829d3c0)
0xffff582e7e60  embedded object  (0x39cbab51 <String[5]: cache>)
0xffff582e7e6c  code target (BUILTIN)  (0xffff58222420)
0xffff582e7e74  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = math
compiler = unknown
Instructions (size = 120)
0xffff582e7f20     0  sub csp, jssp, #0x8 (8)
0xffff582e7f24     4  str x3, [jssp, #-8]!
0xffff582e7f28     8  sub csp, jssp, #0x8 (8)
0xffff582e7f2c    12  str x0, [jssp, #-8]!
0xffff582e7f30    16  ldr x0, pc+80 (addr 0x0000ffff582e7f80)    ;; object: 0x39cc5d51 Cell for 0
0xffff582e7f34    20  ldur x0, [x0, #7]
0xffff582e7f38    24  cmp x0, #0x0 (0)
0xffff582e7f3c    28  b.ne #+0x2c (addr 0xffff582e7f68)
0xffff582e7f40    32  ldr x0, pc+72 (addr 0x0000ffff582e7f88)    ;; object: 0x225cc651 WeakCell for 0x225cc619 PropertyCell for 0x4f94e619 <an Object with map 0x32b36ad9>
0xffff582e7f44    36  ldur x0, [x0, #7]
0xffff582e7f48    40  tbz w0, #0, #+0x20 (addr 0xffff582e7f68)
0xffff582e7f4c    44  ldur x0, [x0, #15]
0xffff582e7f50    48  ldr x16, [x26, #88]
0xffff582e7f54    52  cmp x0, x16
0xffff582e7f58    56  b.eq #+0x10 (addr 0xffff582e7f68)
0xffff582e7f5c    60  add jssp, jssp, #0x10 (16)
0xffff582e7f60    64  ret
0xffff582e7f64    68  b #+0x14 (addr 0xffff582e7f78)
0xffff582e7f68    72  ldr x0, [jssp], #8
0xffff582e7f6c    76  ldr x3, [jssp], #8
0xffff582e7f70    80  ldr x16, pc+32 (addr 0x0000ffff582e7f90)    ;; code: BUILTIN
0xffff582e7f74    84  br x16
0xffff582e7f78    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582e7f7c    92  d63f03e0       constant
0xffff582e7f80    96  39cc5d51       constant
0xffff582e7f84   100  00000000       constant
0xffff582e7f88   104  225cc651       constant
0xffff582e7f8c   108  00000000       constant
0xffff582e7f90   112  582222e0       constant
0xffff582e7f94   116  0000ffff       constant


RelocInfo (size = 9)
0xffff582e7f30  embedded object  (0x39cc5d51 Cell for 0)
0xffff582e7f40  embedded object  (0x225cc651 WeakCell for 0x225cc619 PropertyCell for 0x4f94e619 <an Object with map 0x32b36ad9>)
0xffff582e7f70  code target (BUILTIN)  (0xffff582222e0)
0xffff582e7f78  constant pool (size 32)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*SMI -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 632)
0xffff582eb480     0  tbnz w0, #0, #+0x1d4 (addr 0xffff582eb654)
0xffff582eb484     4  orr x16, x1, x0
0xffff582eb488     8  tbnz w16, #0, #+0x10 (addr 0xffff582eb498)
0xffff582eb48c    12  asr x1, x1, #32
0xffff582eb490    16  sub x0, x1, x0, asr #32
0xffff582eb494    20  ret
0xffff582eb498    24  cmp x0, x1
0xffff582eb49c    28  b.ne #+0x30 (addr 0xffff582eb4cc)
0xffff582eb4a0    32  ldur x16, [x0, #-1]
0xffff582eb4a4    36  ldr x17, [x26, #120]
0xffff582eb4a8    40  cmp x16, x17
0xffff582eb4ac    44  b.eq #+0xc (addr 0xffff582eb4b8)
0xffff582eb4b0    48  movz x0, #0x0
0xffff582eb4b4    52  ret
0xffff582eb4b8    56  ldur d0, [x0, #7]
0xffff582eb4bc    60  fcmp d0, d0
0xffff582eb4c0    64  b.vc #-0x10 (addr 0xffff582eb4b0)
0xffff582eb4c4    68  movn x0, #0x0
0xffff582eb4c8    72  ret
0xffff582eb4cc    76  and x16, x1, x0
0xffff582eb4d0    80  tbnz w16, #0, #+0x64 (addr 0xffff582eb534)
0xffff582eb4d4    84  tbz w0, #0, #+0x24 (addr 0xffff582eb4f8)
0xffff582eb4d8    88  ldur x16, [x0, #-1]
0xffff582eb4dc    92  ldr x17, [x26, #120]
0xffff582eb4e0    96  cmp x16, x17
0xffff582eb4e4   100  b.eq #+0x8 (addr 0xffff582eb4ec)
0xffff582eb4e8   104  ret
0xffff582eb4ec   108  ldur d0, [x0, #7]
0xffff582eb4f0   112  scvtf d1, x1, #32
0xffff582eb4f4   116  b #+0x24 (addr 0xffff582eb518)
0xffff582eb4f8   120  ldur x16, [x1, #-1]
0xffff582eb4fc   124  ldr x17, [x26, #120]
0xffff582eb500   128  cmp x16, x17
0xffff582eb504   132  b.eq #+0xc (addr 0xffff582eb510)
0xffff582eb508   136  movz x0, #0x1
0xffff582eb50c   140  ret
0xffff582eb510   144  ldur d1, [x1, #7]
0xffff582eb514   148  scvtf d0, x0, #32
0xffff582eb518   152  fcmp d1, d0
0xffff582eb51c   156  b.vs #+0x10 (addr 0xffff582eb52c)
0xffff582eb520   160  cset x0, gt
0xffff582eb524   164  csinv x0, x0, xzr, ge
0xffff582eb528   168  ret
0xffff582eb52c   172  movn x0, #0x0
0xffff582eb530   176  ret
0xffff582eb534   180  ldur x10, [x0, #-1]
0xffff582eb538   184  ldur x12, [x1, #-1]
0xffff582eb53c   188  ldrb w11, [x10, #11]
0xffff582eb540   192  ldrb w13, [x12, #11]
0xffff582eb544   196  cmp x11, #0xb1 (177)
0xffff582eb548   200  b.lt #+0x8 (addr 0xffff582eb550)
0xffff582eb54c   204  ret
0xffff582eb550   208  cmp x11, #0x83 (131)
0xffff582eb554   212  movz x16, #0x83
0xffff582eb558   216  ccmp x13, x16, #nZcv, ne
0xffff582eb55c   220  movz x16, #0xb1
0xffff582eb560   224  ccmp x13, x16, #NzcV, ne
0xffff582eb564   228  b.ge #-0x18 (addr 0xffff582eb54c)
0xffff582eb568   232  orr x14, x13, x11
0xffff582eb56c   236  tst x14, #0xc0
0xffff582eb570   240  b.eq #-0x24 (addr 0xffff582eb54c)
0xffff582eb574   244  cmp x11, #0x81 (129)
0xffff582eb578   248  b.ne #+0x18 (addr 0xffff582eb590)
0xffff582eb57c   252  cmp x12, x10
0xffff582eb580   256  b.ne #+0x10 (addr 0xffff582eb590)
0xffff582eb584   260  ldur d1, [x1, #7]
0xffff582eb588   264  ldur d0, [x0, #7]
0xffff582eb58c   268  b #-0x74 (addr 0xffff582eb518)
0xffff582eb590   272  movz x16, #0x87
0xffff582eb594   276  and x14, x13, x16
0xffff582eb598   280  movz x16, #0x87
0xffff582eb59c   284  and x15, x11, x16
0xffff582eb5a0   288  cmp x14, #0x4 (4)
0xffff582eb5a4   292  ccmp x15, #4, #nzcv, eq
0xffff582eb5a8   296  b.ne #+0x5c (addr 0xffff582eb604)
0xffff582eb5ac   300  ldur x10, [x1, #15]
0xffff582eb5b0   304  ldur x11, [x0, #15]
0xffff582eb5b4   308  cmp x10, x11
0xffff582eb5b8   312  b.eq #+0xc (addr 0xffff582eb5c4)
0xffff582eb5bc   316  movz x0, #0x100000000
0xffff582eb5c0   320  ret
0xffff582eb5c4   324  cbnz x10, #+0xc (addr 0xffff582eb5d0)
0xffff582eb5c8   328  movz x0, #0x0
0xffff582eb5cc   332  ret
0xffff582eb5d0   336  asr x10, x10, #32
0xffff582eb5d4   340  add x11, x10, #0x17 (23)
0xffff582eb5d8   344  add x1, x1, x11
0xffff582eb5dc   348  add x0, x0, x11
0xffff582eb5e0   352  neg x10, x10
0xffff582eb5e4   356  ldrb w11, [x1, x10]
0xffff582eb5e8   360  ldrb w12, [x0, x10]
0xffff582eb5ec   364  cmp x11, x12
0xffff582eb5f0   368  b.ne #-0x34 (addr 0xffff582eb5bc)
0xffff582eb5f4   372  add x10, x10, #0x1 (1)
0xffff582eb5f8   376  cbnz x10, #-0x14 (addr 0xffff582eb5e4)
0xffff582eb5fc   380  movz x0, #0x0
0xffff582eb600   384  ret
0xffff582eb604   388  movz x16, #0xc00000000
0xffff582eb608   392  sub csp, jssp, #0x10 (16)
0xffff582eb60c   396  stp fp, lr, [jssp, #-16]!
0xffff582eb610   400  sub csp, jssp, #0x10 (16)
0xffff582eb614   404  str x16, [jssp, #-8]!
0xffff582eb618   408  ldr x17, pc+176 (addr 0x0000ffff582eb6c8)    ;; object: 0xffff582eb421 <Code: COMPARE_IC>
0xffff582eb61c   412  sub csp, jssp, #0x10 (16)
0xffff582eb620   416  str x17, [jssp, #-8]!
0xffff582eb624   420  add fp, jssp, #0x10 (16)
0xffff582eb628   424  sub csp, jssp, #0x10 (16)
0xffff582eb62c   428  stp x0, x1, [jssp, #-16]!
0xffff582eb630   432  movz x0, #0x2
0xffff582eb634   436  ldr x1, pc+156 (addr 0x0000ffff582eb6d0)    ;; external reference (Runtime::StrictEqual)
0xffff582eb638   440  ldr x16, pc+160 (addr 0x0000ffff582eb6d8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582eb63c   444  blr x16
0xffff582eb640   448  mov jssp, fp
0xffff582eb644   452  ldp fp, lr, [jssp], #16
0xffff582eb648   456  ldr x1, [x26, #64]
0xffff582eb64c   460  sub x0, x0, x1
0xffff582eb650   464  ret
0xffff582eb654   468  movz x16, #0xc00000000
0xffff582eb658   472  sub csp, jssp, #0x10 (16)
0xffff582eb65c   476  stp fp, lr, [jssp, #-16]!
0xffff582eb660   480  sub csp, jssp, #0x10 (16)
0xffff582eb664   484  str x16, [jssp, #-8]!
0xffff582eb668   488  ldr x17, pc+120 (addr 0x0000ffff582eb6e0)    ;; object: 0xffff582eb421 <Code: COMPARE_IC>
0xffff582eb66c   492  sub csp, jssp, #0x10 (16)
0xffff582eb670   496  str x17, [jssp, #-8]!
0xffff582eb674   500  add fp, jssp, #0x10 (16)
0xffff582eb678   504  sub csp, jssp, #0x18 (24)
0xffff582eb67c   508  stp lr, x0, [jssp, #-24]!
0xffff582eb680   512  str x1, [jssp, #16]
0xffff582eb684   516  movz x10, #0x2f00000000
0xffff582eb688   520  sub csp, jssp, #0x18 (24)
0xffff582eb68c   524  stp x10, x0, [jssp, #-24]!
0xffff582eb690   528  str x1, [jssp, #16]
0xffff582eb694   532  movz x0, #0x3
0xffff582eb698   536  ldr x1, pc+80 (addr 0x0000ffff582eb6e8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582eb69c   540  ldr x16, pc+84 (addr 0x0000ffff582eb6f0)    ;; code: STUB, CEntryStub, minor: 4
0xffff582eb6a0   544  blr x16
0xffff582eb6a4   548  add x11, x0, #0x5f (95)
0xffff582eb6a8   552  ldr x1, [jssp, #16]
0xffff582eb6ac   556  ldp lr, x0, [jssp], #24
0xffff582eb6b0   560  mov jssp, fp
0xffff582eb6b4   564  ldp fp, lr, [jssp], #16
0xffff582eb6b8   568  br x11
0xffff582eb6bc   572  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582eb6c0   576  d63f03e0       constant
0xffff582eb6c4   580  d503201f       constant
0xffff582eb6c8   584  582eb421       constant
0xffff582eb6cc   588  0000ffff       constant
0xffff582eb6d0   592  00e50928       constant
0xffff582eb6d4   596  00000000       constant
0xffff582eb6d8   600  58206060       constant
0xffff582eb6dc   604  0000ffff       constant
0xffff582eb6e0   608  582eb421       constant
0xffff582eb6e4   612  0000ffff       constant
0xffff582eb6e8   616  00c8a980       constant
0xffff582eb6ec   620  00000000       constant
0xffff582eb6f0   624  58206060       constant
0xffff582eb6f4   628  0000ffff       constant


RelocInfo (size = 16)
0xffff582eb618  embedded object  (0xffff582eb421 <Code: COMPARE_IC>)
0xffff582eb634  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff582eb638  code target (STUB)  (0xffff58206060)
0xffff582eb668  embedded object  (0xffff582eb421 <Code: COMPARE_IC>)
0xffff582eb698  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582eb69c  code target (STUB)  (0xffff58206060)
0xffff582eb6bc  constant pool (size 60)


kind = HANDLER
major_key = <NoCache>Stub
name = domain
compiler = unknown
Instructions (size = 152)
0xffff582ebb40     0  sub csp, jssp, #0x8 (8)
0xffff582ebb44     4  str x3, [jssp, #-8]!
0xffff582ebb48     8  sub csp, jssp, #0x8 (8)
0xffff582ebb4c    12  str x4, [jssp, #-8]!
0xffff582ebb50    16  ldr x3, pc+88 (addr 0x0000ffff582ebba8)    ;; object: 0x225d1f11 Cell for 0
0xffff582ebb54    20  ldur x3, [x3, #7]
0xffff582ebb58    24  cmp x3, #0x0 (0)
0xffff582ebb5c    28  b.ne #+0x30 (addr 0xffff582ebb8c)
0xffff582ebb60    32  tbz w0, #0, #+0x2c (addr 0xffff582ebb8c)
0xffff582ebb64    36  ldr x5, pc+76 (addr 0x0000ffff582ebbb0)    ;; object: 0x225d1e51 WeakCell for 0x32b38b29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582ebb68    40  ldur x5, [x5, #7]
0xffff582ebb6c    44  tbz w5, #0, #+0x20 (addr 0xffff582ebb8c)
0xffff582ebb70    48  ldursw x4, [x5, #15]
0xffff582ebb74    52  tbnz w4, #23, #+0x18 (addr 0xffff582ebb8c)
0xffff582ebb78    56  ldr x4, [jssp], #8
0xffff582ebb7c    60  ldr x3, [jssp], #8
0xffff582ebb80    64  ldr x2, pc+56 (addr 0x0000ffff582ebbb8)    ;; object: 0x39cb2439 <String[6]: domain>
0xffff582ebb84    68  ldr x16, pc+60 (addr 0x0000ffff582ebbc0)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff582ebb88    72  br x16
0xffff582ebb8c    76  ldr x2, pc+60 (addr 0x0000ffff582ebbc8)    ;; object: 0x39cb2439 <String[6]: domain>
0xffff582ebb90    80  ldr x4, [jssp], #8
0xffff582ebb94    84  ldr x3, [jssp], #8
0xffff582ebb98    88  ldr x16, pc+56 (addr 0x0000ffff582ebbd0)    ;; code: BUILTIN
0xffff582ebb9c    92  br x16
0xffff582ebba0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582ebba4   100  d63f03e0       constant
0xffff582ebba8   104  225d1f11       constant
0xffff582ebbac   108  00000000       constant
0xffff582ebbb0   112  225d1e51       constant
0xffff582ebbb4   116  00000000       constant
0xffff582ebbb8   120  39cb2439       constant
0xffff582ebbbc   124  00000000       constant
0xffff582ebbc0   128  5828bdc0       constant
0xffff582ebbc4   132  0000ffff       constant
0xffff582ebbc8   136  39cb2439       constant
0xffff582ebbcc   140  00000000       constant
0xffff582ebbd0   144  58222420       constant
0xffff582ebbd4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582ebb50  embedded object  (0x225d1f11 Cell for 0)
0xffff582ebb64  embedded object  (0x225d1e51 WeakCell for 0x32b38b29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582ebb80  embedded object  (0x39cb2439 <String[6]: domain>)
0xffff582ebb84  code target (HANDLER)  (0xffff5828bdc0)
0xffff582ebb8c  embedded object  (0x39cb2439 <String[6]: domain>)
0xffff582ebb98  code target (BUILTIN)  (0xffff58222420)
0xffff582ebba0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 120)
0xffff582ebc40     0  sub csp, jssp, #0x8 (8)
0xffff582ebc44     4  str x3, [jssp, #-8]!
0xffff582ebc48     8  sub csp, jssp, #0x8 (8)
0xffff582ebc4c    12  str x0, [jssp, #-8]!
0xffff582ebc50    16  ldr x0, pc+72 (addr 0x0000ffff582ebc98)    ;; object: 0x225d1f11 Cell for 0
0xffff582ebc54    20  ldur x0, [x0, #7]
0xffff582ebc58    24  cmp x0, #0x0 (0)
0xffff582ebc5c    28  b.ne #+0x14 (addr 0xffff582ebc70)
0xffff582ebc60    32  ldr x3, pc+64 (addr 0x0000ffff582ebca0)    ;; object: 0x225d1f41 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>
0xffff582ebc64    36  ldur x3, [x3, #7]
0xffff582ebc68    40  tbz w3, #0, #+0x8 (addr 0xffff582ebc70)
0xffff582ebc6c    44  b #+0x14 (addr 0xffff582ebc80)
0xffff582ebc70    48  ldr x0, [jssp], #8
0xffff582ebc74    52  ldr x3, [jssp], #8
0xffff582ebc78    56  ldr x16, pc+48 (addr 0x0000ffff582ebca8)    ;; code: BUILTIN
0xffff582ebc7c    60  br x16
0xffff582ebc80    64  add jssp, jssp, #0x10 (16)
0xffff582ebc84    68  mov x1, x3
0xffff582ebc88    72  ldr x16, pc+40 (addr 0x0000ffff582ebcb0)    ;; code: HANDLER, LoadFieldStub, minor: 2052
0xffff582ebc8c    76  br x16
0xffff582ebc90    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582ebc94    84  d63f03e0       constant
0xffff582ebc98    88  225d1f11       constant
0xffff582ebc9c    92  00000000       constant
0xffff582ebca0    96  225d1f41       constant
0xffff582ebca4   100  00000000       constant
0xffff582ebca8   104  582222e0       constant
0xffff582ebcac   108  0000ffff       constant
0xffff582ebcb0   112  58278da0       constant
0xffff582ebcb4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582ebc50  embedded object  (0x225d1f11 Cell for 0)
0xffff582ebc60  embedded object  (0x225d1f41 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>)
0xffff582ebc78  code target (BUILTIN)  (0xffff582222e0)
0xffff582ebc88  code target (HANDLER)  (0xffff58278da0)
0xffff582ebc90  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 120)
0xffff582ebe40     0  sub csp, jssp, #0x8 (8)
0xffff582ebe44     4  str x3, [jssp, #-8]!
0xffff582ebe48     8  sub csp, jssp, #0x8 (8)
0xffff582ebe4c    12  str x0, [jssp, #-8]!
0xffff582ebe50    16  ldr x0, pc+72 (addr 0x0000ffff582ebe98)    ;; object: 0x225d1f11 Cell for 0
0xffff582ebe54    20  ldur x0, [x0, #7]
0xffff582ebe58    24  cmp x0, #0x0 (0)
0xffff582ebe5c    28  b.ne #+0x14 (addr 0xffff582ebe70)
0xffff582ebe60    32  ldr x3, pc+64 (addr 0x0000ffff582ebea0)    ;; object: 0x225d2089 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>
0xffff582ebe64    36  ldur x3, [x3, #7]
0xffff582ebe68    40  tbz w3, #0, #+0x8 (addr 0xffff582ebe70)
0xffff582ebe6c    44  b #+0x14 (addr 0xffff582ebe80)
0xffff582ebe70    48  ldr x0, [jssp], #8
0xffff582ebe74    52  ldr x3, [jssp], #8
0xffff582ebe78    56  ldr x16, pc+48 (addr 0x0000ffff582ebea8)    ;; code: BUILTIN
0xffff582ebe7c    60  br x16
0xffff582ebe80    64  add jssp, jssp, #0x10 (16)
0xffff582ebe84    68  mov x1, x3
0xffff582ebe88    72  ldr x16, pc+40 (addr 0x0000ffff582ebeb0)    ;; code: HANDLER, LoadFieldStub, minor: 2053
0xffff582ebe8c    76  br x16
0xffff582ebe90    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582ebe94    84  d63f03e0       constant
0xffff582ebe98    88  225d1f11       constant
0xffff582ebe9c    92  00000000       constant
0xffff582ebea0    96  225d2089       constant
0xffff582ebea4   100  00000000       constant
0xffff582ebea8   104  582222e0       constant
0xffff582ebeac   108  0000ffff       constant
0xffff582ebeb0   112  58278e20       constant
0xffff582ebeb4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582ebe50  embedded object  (0x225d1f11 Cell for 0)
0xffff582ebe60  embedded object  (0x225d2089 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>)
0xffff582ebe78  code target (BUILTIN)  (0xffff582222e0)
0xffff582ebe88  code target (HANDLER)  (0xffff58278e20)
0xffff582ebe90  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 152)
0xffff582ebf20     0  sub csp, jssp, #0x8 (8)
0xffff582ebf24     4  str x3, [jssp, #-8]!
0xffff582ebf28     8  sub csp, jssp, #0x8 (8)
0xffff582ebf2c    12  str x4, [jssp, #-8]!
0xffff582ebf30    16  ldr x3, pc+88 (addr 0x0000ffff582ebf88)    ;; object: 0x225d1f11 Cell for 0
0xffff582ebf34    20  ldur x3, [x3, #7]
0xffff582ebf38    24  cmp x3, #0x0 (0)
0xffff582ebf3c    28  b.ne #+0x30 (addr 0xffff582ebf6c)
0xffff582ebf40    32  tbz w0, #0, #+0x2c (addr 0xffff582ebf6c)
0xffff582ebf44    36  ldr x5, pc+76 (addr 0x0000ffff582ebf90)    ;; object: 0x225d20c1 WeakCell for 0x32b38c89 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582ebf48    40  ldur x5, [x5, #7]
0xffff582ebf4c    44  tbz w5, #0, #+0x20 (addr 0xffff582ebf6c)
0xffff582ebf50    48  ldursw x4, [x5, #15]
0xffff582ebf54    52  tbnz w4, #23, #+0x18 (addr 0xffff582ebf6c)
0xffff582ebf58    56  ldr x4, [jssp], #8
0xffff582ebf5c    60  ldr x3, [jssp], #8
0xffff582ebf60    64  ldr x2, pc+56 (addr 0x0000ffff582ebf98)    ;; object: 0x39cc32b1 <String[13]: _maxListeners>
0xffff582ebf64    68  ldr x16, pc+60 (addr 0x0000ffff582ebfa0)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff582ebf68    72  br x16
0xffff582ebf6c    76  ldr x2, pc+60 (addr 0x0000ffff582ebfa8)    ;; object: 0x39cc32b1 <String[13]: _maxListeners>
0xffff582ebf70    80  ldr x4, [jssp], #8
0xffff582ebf74    84  ldr x3, [jssp], #8
0xffff582ebf78    88  ldr x16, pc+56 (addr 0x0000ffff582ebfb0)    ;; code: BUILTIN
0xffff582ebf7c    92  br x16
0xffff582ebf80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582ebf84   100  d63f03e0       constant
0xffff582ebf88   104  225d1f11       constant
0xffff582ebf8c   108  00000000       constant
0xffff582ebf90   112  225d20c1       constant
0xffff582ebf94   116  00000000       constant
0xffff582ebf98   120  39cc32b1       constant
0xffff582ebf9c   124  00000000       constant
0xffff582ebfa0   128  582e6060       constant
0xffff582ebfa4   132  0000ffff       constant
0xffff582ebfa8   136  39cc32b1       constant
0xffff582ebfac   140  00000000       constant
0xffff582ebfb0   144  58222420       constant
0xffff582ebfb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582ebf30  embedded object  (0x225d1f11 Cell for 0)
0xffff582ebf44  embedded object  (0x225d20c1 WeakCell for 0x32b38c89 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582ebf60  embedded object  (0x39cc32b1 <String[13]: _maxListeners>)
0xffff582ebf64  code target (HANDLER)  (0xffff582e6060)
0xffff582ebf6c  embedded object  (0x39cc32b1 <String[13]: _maxListeners>)
0xffff582ebf78  code target (BUILTIN)  (0xffff58222420)
0xffff582ebf80  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 96)
0xffff582ec020     0  sub csp, jssp, #0x8 (8)
0xffff582ec024     4  str x3, [jssp, #-8]!
0xffff582ec028     8  sub csp, jssp, #0x8 (8)
0xffff582ec02c    12  str x0, [jssp, #-8]!
0xffff582ec030    16  ldr x0, pc+56 (addr 0x0000ffff582ec068)    ;; object: 0x225d2199 Cell for 0
0xffff582ec034    20  ldur x0, [x0, #7]
0xffff582ec038    24  cmp x0, #0x0 (0)
0xffff582ec03c    28  b.ne #+0x14 (addr 0xffff582ec050)
0xffff582ec040    32  add jssp, jssp, #0x10 (16)
0xffff582ec044    36  ldr x0, pc+44 (addr 0x0000ffff582ec070)    ;; object: 0x39c04241 <undefined>
0xffff582ec048    40  ret
0xffff582ec04c    44  b #+0x14 (addr 0xffff582ec060)
0xffff582ec050    48  ldr x0, [jssp], #8
0xffff582ec054    52  ldr x3, [jssp], #8
0xffff582ec058    56  ldr x16, pc+32 (addr 0x0000ffff582ec078)    ;; code: BUILTIN
0xffff582ec05c    60  br x16
0xffff582ec060    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582ec064    68  d63f03e0       constant
0xffff582ec068    72  225d2199       constant
0xffff582ec06c    76  00000000       constant
0xffff582ec070    80  39c04241       constant
0xffff582ec074    84  00000000       constant
0xffff582ec078    88  582222e0       constant
0xffff582ec07c    92  0000ffff       constant


RelocInfo (size = 9)
0xffff582ec030  embedded object  (0x225d2199 Cell for 0)
0xffff582ec044  embedded object  (0x39c04241 <undefined>)
0xffff582ec058  code target (BUILTIN)  (0xffff582222e0)
0xffff582ec060  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = end
compiler = unknown
Instructions (size = 168)
0xffff582ec0e0     0  sub csp, jssp, #0x8 (8)
0xffff582ec0e4     4  str x3, [jssp, #-8]!
0xffff582ec0e8     8  sub csp, jssp, #0x8 (8)
0xffff582ec0ec    12  str x4, [jssp, #-8]!
0xffff582ec0f0    16  ldr x3, pc+104 (addr 0x0000ffff582ec158)    ;; object: 0x225d2199 Cell for 0
0xffff582ec0f4    20  ldur x3, [x3, #7]
0xffff582ec0f8    24  cmp x3, #0x0 (0)
0xffff582ec0fc    28  b.ne #+0x3c (addr 0xffff582ec138)
0xffff582ec100    32  ldr x5, pc+96 (addr 0x0000ffff582ec160)    ;; object: 0x225d21e1 WeakCell for 0x32b38de9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582ec104    36  ldur x5, [x5, #7]
0xffff582ec108    40  tbz w5, #0, #+0x30 (addr 0xffff582ec138)
0xffff582ec10c    44  ldursw x4, [x5, #15]
0xffff582ec110    48  tbnz w4, #23, #+0x28 (addr 0xffff582ec138)
0xffff582ec114    52  ldur x4, [x5, #47]
0xffff582ec118    56  ldur x4, [x4, #47]
0xffff582ec11c    60  cmp x0, x4
0xffff582ec120    64  b.ne #+0x18 (addr 0xffff582ec138)
0xffff582ec124    68  ldr x4, [jssp], #8
0xffff582ec128    72  ldr x3, [jssp], #8
0xffff582ec12c    76  ldr x2, pc+60 (addr 0x0000ffff582ec168)    ;; object: 0x39c93989 <String[3]: end>
0xffff582ec130    80  ldr x16, pc+64 (addr 0x0000ffff582ec170)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff582ec134    84  br x16
0xffff582ec138    88  ldr x2, pc+64 (addr 0x0000ffff582ec178)    ;; object: 0x39c93989 <String[3]: end>
0xffff582ec13c    92  ldr x4, [jssp], #8
0xffff582ec140    96  ldr x3, [jssp], #8
0xffff582ec144   100  ldr x16, pc+60 (addr 0x0000ffff582ec180)    ;; code: BUILTIN
0xffff582ec148   104  br x16
0xffff582ec14c   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582ec150   112  d63f03e0       constant
0xffff582ec154   116  d503201f       constant
0xffff582ec158   120  225d2199       constant
0xffff582ec15c   124  00000000       constant
0xffff582ec160   128  225d21e1       constant
0xffff582ec164   132  00000000       constant
0xffff582ec168   136  39c93989       constant
0xffff582ec16c   140  00000000       constant
0xffff582ec170   144  5823cea0       constant
0xffff582ec174   148  0000ffff       constant
0xffff582ec178   152  39c93989       constant
0xffff582ec17c   156  00000000       constant
0xffff582ec180   160  58222420       constant
0xffff582ec184   164  0000ffff       constant


RelocInfo (size = 12)
0xffff582ec0f0  embedded object  (0x225d2199 Cell for 0)
0xffff582ec100  embedded object  (0x225d21e1 WeakCell for 0x32b38de9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582ec12c  embedded object  (0x39c93989 <String[3]: end>)
0xffff582ec130  code target (HANDLER)  (0xffff5823cea0)
0xffff582ec138  embedded object  (0x39c93989 <String[3]: end>)
0xffff582ec144  code target (BUILTIN)  (0xffff58222420)
0xffff582ec14c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff582ec200     0  mov x5, x0
0xffff582ec204     4  tbnz w5, #0, #+0xc (addr 0xffff582ec210)
0xffff582ec208     8  stur x5, [x1, #55]
0xffff582ec20c    12  ret
0xffff582ec210    16  movz x16, #0x0
0xffff582ec214    20  sub csp, jssp, #0x10 (16)
0xffff582ec218    24  stp fp, lr, [jssp, #-16]!
0xffff582ec21c    28  bl #+0x4 (addr 0xffff582ec220)
0xffff582ec220    32  movz x17, #0xa00000000
0xffff582ec224    36  sub csp, jssp, #0x10 (16)
0xffff582ec228    40  stp x17, cp, [jssp, #-16]!
0xffff582ec22c    44  add fp, jssp, #0x10 (16)
0xffff582ec230    48  ldr x17, pc+24 (addr 0x0000ffff582ec248)    ;; lazy deoptimization bailout 0
0xffff582ec234    52  add x17, x17, x16
0xffff582ec238    56  br x17
0xffff582ec23c    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582ec240    64  d63f03e0       constant
0xffff582ec244    68  d503201f       constant
0xffff582ec248    72  58006000       constant
0xffff582ec24c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff582ec230  runtime entry
0xffff582ec23c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff582ec200     0  mov x5, x0
0xffff582ec204     4  tbnz w5, #0, #+0xc (addr 0xffff582ec210)
0xffff582ec208     8  stur x5, [x1, #55]
0xffff582ec20c    12  ret
0xffff582ec210    16  movz x16, #0x0
0xffff582ec214    20  sub csp, jssp, #0x10 (16)
0xffff582ec218    24  stp fp, lr, [jssp, #-16]!
0xffff582ec21c    28  bl #+0x4 (addr 0xffff582ec220)
0xffff582ec220    32  movz x17, #0xa00000000
0xffff582ec224    36  sub csp, jssp, #0x10 (16)
0xffff582ec228    40  stp x17, cp, [jssp, #-16]!
0xffff582ec22c    44  add fp, jssp, #0x10 (16)
0xffff582ec230    48  ldr x17, pc+24 (addr 0x0000ffff582ec248)    ;; lazy deoptimization bailout 0
0xffff582ec234    52  add x17, x17, x16
0xffff582ec238    56  br x17
0xffff582ec23c    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582ec240    64  d63f03e0       constant
0xffff582ec244    68  d503201f       constant
0xffff582ec248    72  58006000       constant
0xffff582ec24c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff582ec230  runtime entry
0xffff582ec23c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff582f1a00     0  tbz w0, #0, #+0x50 (addr 0xffff582f1a50)
0xffff582f1a04     4  mov x2, x0
0xffff582f1a08     8  stur x2, [x1, #39]
0xffff582f1a0c    12  add x3, x1, #0x27 (39)
0xffff582f1a10    16  and x2, x2, #0xfffffffffff00000
0xffff582f1a14    20  ldr x2, [x2, #8]
0xffff582f1a18    24  tbz w2, #1, #+0x24 (addr 0xffff582f1a3c)
0xffff582f1a1c    28  and x2, x1, #0xfffffffffff00000
0xffff582f1a20    32  ldr x2, [x2, #8]
0xffff582f1a24    36  tbz w2, #2, #+0x18 (addr 0xffff582f1a3c)
0xffff582f1a28    40  sub csp, jssp, #0x8 (8)
0xffff582f1a2c    44  str lr, [jssp, #-8]!
0xffff582f1a30    48  ldr x16, pc+24 (addr 0x0000ffff582f1a48)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f1a34    52  blr x16
0xffff582f1a38    56  ldr lr, [jssp], #8
0xffff582f1a3c    60  ret
0xffff582f1a40    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f1a44    68  d63f03e0       constant
0xffff582f1a48    72  582170c0       constant
0xffff582f1a4c    76  0000ffff       constant
0xffff582f1a50    80  movz x16, #0x0
0xffff582f1a54    84  sub csp, jssp, #0x10 (16)
0xffff582f1a58    88  stp fp, lr, [jssp, #-16]!
0xffff582f1a5c    92  bl #+0x4 (addr 0xffff582f1a60)
0xffff582f1a60    96  movz x17, #0xa00000000
0xffff582f1a64   100  sub csp, jssp, #0x10 (16)
0xffff582f1a68   104  stp x17, cp, [jssp, #-16]!
0xffff582f1a6c   108  add fp, jssp, #0x10 (16)
0xffff582f1a70   112  ldr x17, pc+24 (addr 0x0000ffff582f1a88)    ;; lazy deoptimization bailout 0
0xffff582f1a74   116  add x17, x17, x16
0xffff582f1a78   120  br x17
0xffff582f1a7c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f1a80   128  d63f03e0       constant
0xffff582f1a84   132  d503201f       constant
0xffff582f1a88   136  58006000       constant
0xffff582f1a8c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f1a30  code target (STUB)  (0xffff582170c0)
0xffff582f1a40  constant pool (size 16)
0xffff582f1a70  runtime entry
0xffff582f1a7c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff582f1a00     0  tbz w0, #0, #+0x50 (addr 0xffff582f1a50)
0xffff582f1a04     4  mov x2, x0
0xffff582f1a08     8  stur x2, [x1, #39]
0xffff582f1a0c    12  add x3, x1, #0x27 (39)
0xffff582f1a10    16  and x2, x2, #0xfffffffffff00000
0xffff582f1a14    20  ldr x2, [x2, #8]
0xffff582f1a18    24  tbz w2, #1, #+0x24 (addr 0xffff582f1a3c)
0xffff582f1a1c    28  and x2, x1, #0xfffffffffff00000
0xffff582f1a20    32  ldr x2, [x2, #8]
0xffff582f1a24    36  tbz w2, #2, #+0x18 (addr 0xffff582f1a3c)
0xffff582f1a28    40  sub csp, jssp, #0x8 (8)
0xffff582f1a2c    44  str lr, [jssp, #-8]!
0xffff582f1a30    48  ldr x16, pc+24 (addr 0x0000ffff582f1a48)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f1a34    52  blr x16
0xffff582f1a38    56  ldr lr, [jssp], #8
0xffff582f1a3c    60  ret
0xffff582f1a40    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f1a44    68  d63f03e0       constant
0xffff582f1a48    72  582170c0       constant
0xffff582f1a4c    76  0000ffff       constant
0xffff582f1a50    80  movz x16, #0x0
0xffff582f1a54    84  sub csp, jssp, #0x10 (16)
0xffff582f1a58    88  stp fp, lr, [jssp, #-16]!
0xffff582f1a5c    92  bl #+0x4 (addr 0xffff582f1a60)
0xffff582f1a60    96  movz x17, #0xa00000000
0xffff582f1a64   100  sub csp, jssp, #0x10 (16)
0xffff582f1a68   104  stp x17, cp, [jssp, #-16]!
0xffff582f1a6c   108  add fp, jssp, #0x10 (16)
0xffff582f1a70   112  ldr x17, pc+24 (addr 0x0000ffff582f1a88)    ;; lazy deoptimization bailout 0
0xffff582f1a74   116  add x17, x17, x16
0xffff582f1a78   120  br x17
0xffff582f1a7c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f1a80   128  d63f03e0       constant
0xffff582f1a84   132  d503201f       constant
0xffff582f1a88   136  58006000       constant
0xffff582f1a8c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f1a30  code target (STUB)  (0xffff582170c0)
0xffff582f1a40  constant pool (size 16)
0xffff582f1a70  runtime entry
0xffff582f1a7c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff582f1b00     0  sub csp, jssp, #0x8 (8)
0xffff582f1b04     4  str x3, [jssp, #-8]!
0xffff582f1b08     8  sub csp, jssp, #0x8 (8)
0xffff582f1b0c    12  str x4, [jssp, #-8]!
0xffff582f1b10    16  ldr x3, pc+104 (addr 0x0000ffff582f1b78)    ;; object: 0x225e6b31 Cell for 0
0xffff582f1b14    20  ldur x3, [x3, #7]
0xffff582f1b18    24  cmp x3, #0x0 (0)
0xffff582f1b1c    28  b.ne #+0x8 (addr 0xffff582f1b24)
0xffff582f1b20    32  b #+0x18 (addr 0xffff582f1b38)
0xffff582f1b24    36  ldr x2, pc+92 (addr 0x0000ffff582f1b80)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff582f1b28    40  ldr x4, [jssp], #8
0xffff582f1b2c    44  ldr x3, [jssp], #8
0xffff582f1b30    48  ldr x16, pc+88 (addr 0x0000ffff582f1b88)    ;; code: BUILTIN
0xffff582f1b34    52  br x16
0xffff582f1b38    56  add jssp, jssp, #0x10 (16)
0xffff582f1b3c    60  ldr x3, pc+84 (addr 0x0000ffff582f1b90)    ;; object: 0x39c404a9 <AccessorInfo>
0xffff582f1b40    64  ldr x4, pc+88 (addr 0x0000ffff582f1b98)    ;; object: 0x39c05371 <String[9]: prototype>
0xffff582f1b44    68  sub csp, jssp, #0x28 (40)
0xffff582f1b48    72  stp x4, x3, [jssp, #-32]!
0xffff582f1b4c    76  stp x1, x1, [jssp, #16]
0xffff582f1b50    80  str x0, [jssp, #-8]!
0xffff582f1b54    84  movz x16, #0x100000000
0xffff582f1b58    88  sub csp, jssp, #0x8 (8)
0xffff582f1b5c    92  str x16, [jssp, #-8]!
0xffff582f1b60    96  movz x0, #0x6
0xffff582f1b64   100  ldr x1, pc+60 (addr 0x0000ffff582f1ba0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff582f1b68   104  ldr x16, pc+64 (addr 0x0000ffff582f1ba8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582f1b6c   108  br x16
0xffff582f1b70   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff582f1b74   116  d63f03e0       constant
0xffff582f1b78   120  225e6b31       constant
0xffff582f1b7c   124  00000000       constant
0xffff582f1b80   128  39c05371       constant
0xffff582f1b84   132  00000000       constant
0xffff582f1b88   136  58222420       constant
0xffff582f1b8c   140  0000ffff       constant
0xffff582f1b90   144  39c404a9       constant
0xffff582f1b94   148  00000000       constant
0xffff582f1b98   152  39c05371       constant
0xffff582f1b9c   156  00000000       constant
0xffff582f1ba0   160  00c8b560       constant
0xffff582f1ba4   164  00000000       constant
0xffff582f1ba8   168  58206060       constant
0xffff582f1bac   172  0000ffff       constant


RelocInfo (size = 14)
0xffff582f1b10  embedded object  (0x225e6b31 Cell for 0)
0xffff582f1b24  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff582f1b30  code target (BUILTIN)  (0xffff58222420)
0xffff582f1b3c  embedded object  (0x39c404a9 <AccessorInfo>)
0xffff582f1b40  embedded object  (0x39c05371 <String[9]: prototype>)
0xffff582f1b64  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff582f1b68  code target (STUB)  (0xffff58206060)
0xffff582f1b70  constant pool (size 64)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f5ba0     0  tbz w0, #0, #+0x90 (addr 0xffff582f5c30)
0xffff582f5ba4     4  mov x2, x0
0xffff582f5ba8     8  stur x2, [x1, #79]
0xffff582f5bac    12  add x3, x1, #0x4f (79)
0xffff582f5bb0    16  and x2, x2, #0xfffffffffff00000
0xffff582f5bb4    20  ldr x2, [x2, #8]
0xffff582f5bb8    24  tbz w2, #1, #+0x24 (addr 0xffff582f5bdc)
0xffff582f5bbc    28  and x2, x1, #0xfffffffffff00000
0xffff582f5bc0    32  ldr x2, [x2, #8]
0xffff582f5bc4    36  tbz w2, #2, #+0x18 (addr 0xffff582f5bdc)
0xffff582f5bc8    40  sub csp, jssp, #0x8 (8)
0xffff582f5bcc    44  str lr, [jssp, #-8]!
0xffff582f5bd0    48  ldr x16, pc+80 (addr 0x0000ffff582f5c20)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f5bd4    52  blr x16
0xffff582f5bd8    56  ldr lr, [jssp], #8
0xffff582f5bdc    60  stur x5, [x1, #-1]
0xffff582f5be0    64  tbz w5, #0, #+0x34 (addr 0xffff582f5c14)
0xffff582f5be4    68  sub x2, x1, #0x1 (1)
0xffff582f5be8    72  and x5, x5, #0xfffffffffff00000
0xffff582f5bec    76  ldr x5, [x5, #8]
0xffff582f5bf0    80  tbz w5, #1, #+0x24 (addr 0xffff582f5c14)
0xffff582f5bf4    84  and x5, x1, #0xfffffffffff00000
0xffff582f5bf8    88  ldr x5, [x5, #8]
0xffff582f5bfc    92  tbz w5, #2, #+0x18 (addr 0xffff582f5c14)
0xffff582f5c00    96  sub csp, jssp, #0x8 (8)
0xffff582f5c04   100  str lr, [jssp, #-8]!
0xffff582f5c08   104  ldr x16, pc+32 (addr 0x0000ffff582f5c28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f5c0c   108  blr x16
0xffff582f5c10   112  ldr lr, [jssp], #8
0xffff582f5c14   116  ret
0xffff582f5c18   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f5c1c   124  d63f03e0       constant
0xffff582f5c20   128  582170c0       constant
0xffff582f5c24   132  0000ffff       constant
0xffff582f5c28   136  58238080       constant
0xffff582f5c2c   140  0000ffff       constant
0xffff582f5c30   144  movz x16, #0x0
0xffff582f5c34   148  sub csp, jssp, #0x10 (16)
0xffff582f5c38   152  stp fp, lr, [jssp, #-16]!
0xffff582f5c3c   156  bl #+0x4 (addr 0xffff582f5c40)
0xffff582f5c40   160  movz x17, #0xa00000000
0xffff582f5c44   164  sub csp, jssp, #0x10 (16)
0xffff582f5c48   168  stp x17, cp, [jssp, #-16]!
0xffff582f5c4c   172  add fp, jssp, #0x10 (16)
0xffff582f5c50   176  ldr x17, pc+24 (addr 0x0000ffff582f5c68)    ;; lazy deoptimization bailout 0
0xffff582f5c54   180  add x17, x17, x16
0xffff582f5c58   184  br x17
0xffff582f5c5c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f5c60   192  d63f03e0       constant
0xffff582f5c64   196  d503201f       constant
0xffff582f5c68   200  58006000       constant
0xffff582f5c6c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f5bd0  code target (STUB)  (0xffff582170c0)
0xffff582f5c08  code target (STUB)  (0xffff58238080)
0xffff582f5c18  constant pool (size 24)
0xffff582f5c50  runtime entry
0xffff582f5c5c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f5ba0     0  tbz w0, #0, #+0x90 (addr 0xffff582f5c30)
0xffff582f5ba4     4  mov x2, x0
0xffff582f5ba8     8  stur x2, [x1, #79]
0xffff582f5bac    12  add x3, x1, #0x4f (79)
0xffff582f5bb0    16  and x2, x2, #0xfffffffffff00000
0xffff582f5bb4    20  ldr x2, [x2, #8]
0xffff582f5bb8    24  tbz w2, #1, #+0x24 (addr 0xffff582f5bdc)
0xffff582f5bbc    28  and x2, x1, #0xfffffffffff00000
0xffff582f5bc0    32  ldr x2, [x2, #8]
0xffff582f5bc4    36  tbz w2, #2, #+0x18 (addr 0xffff582f5bdc)
0xffff582f5bc8    40  sub csp, jssp, #0x8 (8)
0xffff582f5bcc    44  str lr, [jssp, #-8]!
0xffff582f5bd0    48  ldr x16, pc+80 (addr 0x0000ffff582f5c20)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f5bd4    52  blr x16
0xffff582f5bd8    56  ldr lr, [jssp], #8
0xffff582f5bdc    60  stur x5, [x1, #-1]
0xffff582f5be0    64  tbz w5, #0, #+0x34 (addr 0xffff582f5c14)
0xffff582f5be4    68  sub x2, x1, #0x1 (1)
0xffff582f5be8    72  and x5, x5, #0xfffffffffff00000
0xffff582f5bec    76  ldr x5, [x5, #8]
0xffff582f5bf0    80  tbz w5, #1, #+0x24 (addr 0xffff582f5c14)
0xffff582f5bf4    84  and x5, x1, #0xfffffffffff00000
0xffff582f5bf8    88  ldr x5, [x5, #8]
0xffff582f5bfc    92  tbz w5, #2, #+0x18 (addr 0xffff582f5c14)
0xffff582f5c00    96  sub csp, jssp, #0x8 (8)
0xffff582f5c04   100  str lr, [jssp, #-8]!
0xffff582f5c08   104  ldr x16, pc+32 (addr 0x0000ffff582f5c28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f5c0c   108  blr x16
0xffff582f5c10   112  ldr lr, [jssp], #8
0xffff582f5c14   116  ret
0xffff582f5c18   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f5c1c   124  d63f03e0       constant
0xffff582f5c20   128  582170c0       constant
0xffff582f5c24   132  0000ffff       constant
0xffff582f5c28   136  58238080       constant
0xffff582f5c2c   140  0000ffff       constant
0xffff582f5c30   144  movz x16, #0x0
0xffff582f5c34   148  sub csp, jssp, #0x10 (16)
0xffff582f5c38   152  stp fp, lr, [jssp, #-16]!
0xffff582f5c3c   156  bl #+0x4 (addr 0xffff582f5c40)
0xffff582f5c40   160  movz x17, #0xa00000000
0xffff582f5c44   164  sub csp, jssp, #0x10 (16)
0xffff582f5c48   168  stp x17, cp, [jssp, #-16]!
0xffff582f5c4c   172  add fp, jssp, #0x10 (16)
0xffff582f5c50   176  ldr x17, pc+24 (addr 0x0000ffff582f5c68)    ;; lazy deoptimization bailout 0
0xffff582f5c54   180  add x17, x17, x16
0xffff582f5c58   184  br x17
0xffff582f5c5c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f5c60   192  d63f03e0       constant
0xffff582f5c64   196  d503201f       constant
0xffff582f5c68   200  58006000       constant
0xffff582f5c6c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f5bd0  code target (STUB)  (0xffff582170c0)
0xffff582f5c08  code target (STUB)  (0xffff58238080)
0xffff582f5c18  constant pool (size 24)
0xffff582f5c50  runtime entry
0xffff582f5c5c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = domain
compiler = unknown
Instructions (size = 152)
0xffff582f5ce0     0  sub csp, jssp, #0x8 (8)
0xffff582f5ce4     4  str x3, [jssp, #-8]!
0xffff582f5ce8     8  sub csp, jssp, #0x8 (8)
0xffff582f5cec    12  str x4, [jssp, #-8]!
0xffff582f5cf0    16  ldr x3, pc+88 (addr 0x0000ffff582f5d48)    ;; object: 0x225e9219 Cell for 0
0xffff582f5cf4    20  ldur x3, [x3, #7]
0xffff582f5cf8    24  cmp x3, #0x0 (0)
0xffff582f5cfc    28  b.ne #+0x30 (addr 0xffff582f5d2c)
0xffff582f5d00    32  tbz w0, #0, #+0x2c (addr 0xffff582f5d2c)
0xffff582f5d04    36  ldr x5, pc+76 (addr 0x0000ffff582f5d50)    ;; object: 0x225e9101 WeakCell for 0x32b40531 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f5d08    40  ldur x5, [x5, #7]
0xffff582f5d0c    44  tbz w5, #0, #+0x20 (addr 0xffff582f5d2c)
0xffff582f5d10    48  ldursw x4, [x5, #15]
0xffff582f5d14    52  tbnz w4, #23, #+0x18 (addr 0xffff582f5d2c)
0xffff582f5d18    56  ldr x4, [jssp], #8
0xffff582f5d1c    60  ldr x3, [jssp], #8
0xffff582f5d20    64  ldr x2, pc+56 (addr 0x0000ffff582f5d58)    ;; object: 0x39cb2439 <String[6]: domain>
0xffff582f5d24    68  ldr x16, pc+60 (addr 0x0000ffff582f5d60)    ;; code: HANDLER, StoreTransitionStub, minor: 198666
0xffff582f5d28    72  br x16
0xffff582f5d2c    76  ldr x2, pc+60 (addr 0x0000ffff582f5d68)    ;; object: 0x39cb2439 <String[6]: domain>
0xffff582f5d30    80  ldr x4, [jssp], #8
0xffff582f5d34    84  ldr x3, [jssp], #8
0xffff582f5d38    88  ldr x16, pc+56 (addr 0x0000ffff582f5d70)    ;; code: BUILTIN
0xffff582f5d3c    92  br x16
0xffff582f5d40    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f5d44   100  d63f03e0       constant
0xffff582f5d48   104  225e9219       constant
0xffff582f5d4c   108  00000000       constant
0xffff582f5d50   112  225e9101       constant
0xffff582f5d54   116  00000000       constant
0xffff582f5d58   120  39cb2439       constant
0xffff582f5d5c   124  00000000       constant
0xffff582f5d60   128  582f5ba0       constant
0xffff582f5d64   132  0000ffff       constant
0xffff582f5d68   136  39cb2439       constant
0xffff582f5d6c   140  00000000       constant
0xffff582f5d70   144  58222420       constant
0xffff582f5d74   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f5cf0  embedded object  (0x225e9219 Cell for 0)
0xffff582f5d04  embedded object  (0x225e9101 WeakCell for 0x32b40531 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f5d20  embedded object  (0x39cb2439 <String[6]: domain>)
0xffff582f5d24  code target (HANDLER)  (0xffff582f5ba0)
0xffff582f5d2c  embedded object  (0x39cb2439 <String[6]: domain>)
0xffff582f5d38  code target (BUILTIN)  (0xffff58222420)
0xffff582f5d40  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 120)
0xffff582f5de0     0  sub csp, jssp, #0x8 (8)
0xffff582f5de4     4  str x3, [jssp, #-8]!
0xffff582f5de8     8  sub csp, jssp, #0x8 (8)
0xffff582f5dec    12  str x0, [jssp, #-8]!
0xffff582f5df0    16  ldr x0, pc+72 (addr 0x0000ffff582f5e38)    ;; object: 0x225e9219 Cell for 0
0xffff582f5df4    20  ldur x0, [x0, #7]
0xffff582f5df8    24  cmp x0, #0x0 (0)
0xffff582f5dfc    28  b.ne #+0x14 (addr 0xffff582f5e10)
0xffff582f5e00    32  ldr x3, pc+64 (addr 0x0000ffff582f5e40)    ;; object: 0x225e9301 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>
0xffff582f5e04    36  ldur x3, [x3, #7]
0xffff582f5e08    40  tbz w3, #0, #+0x8 (addr 0xffff582f5e10)
0xffff582f5e0c    44  b #+0x14 (addr 0xffff582f5e20)
0xffff582f5e10    48  ldr x0, [jssp], #8
0xffff582f5e14    52  ldr x3, [jssp], #8
0xffff582f5e18    56  ldr x16, pc+48 (addr 0x0000ffff582f5e48)    ;; code: BUILTIN
0xffff582f5e1c    60  br x16
0xffff582f5e20    64  add jssp, jssp, #0x10 (16)
0xffff582f5e24    68  mov x1, x3
0xffff582f5e28    72  ldr x16, pc+40 (addr 0x0000ffff582f5e50)    ;; code: HANDLER, LoadFieldStub, minor: 2052
0xffff582f5e2c    76  br x16
0xffff582f5e30    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582f5e34    84  d63f03e0       constant
0xffff582f5e38    88  225e9219       constant
0xffff582f5e3c    92  00000000       constant
0xffff582f5e40    96  225e9301       constant
0xffff582f5e44   100  00000000       constant
0xffff582f5e48   104  582222e0       constant
0xffff582f5e4c   108  0000ffff       constant
0xffff582f5e50   112  58278da0       constant
0xffff582f5e54   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582f5df0  embedded object  (0x225e9219 Cell for 0)
0xffff582f5e00  embedded object  (0x225e9301 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>)
0xffff582f5e18  code target (BUILTIN)  (0xffff582222e0)
0xffff582f5e28  code target (HANDLER)  (0xffff58278da0)
0xffff582f5e30  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f5ec0     0  tbz w0, #0, #+0x90 (addr 0xffff582f5f50)
0xffff582f5ec4     4  mov x2, x0
0xffff582f5ec8     8  stur x2, [x1, #87]
0xffff582f5ecc    12  add x3, x1, #0x57 (87)
0xffff582f5ed0    16  and x2, x2, #0xfffffffffff00000
0xffff582f5ed4    20  ldr x2, [x2, #8]
0xffff582f5ed8    24  tbz w2, #1, #+0x24 (addr 0xffff582f5efc)
0xffff582f5edc    28  and x2, x1, #0xfffffffffff00000
0xffff582f5ee0    32  ldr x2, [x2, #8]
0xffff582f5ee4    36  tbz w2, #2, #+0x18 (addr 0xffff582f5efc)
0xffff582f5ee8    40  sub csp, jssp, #0x8 (8)
0xffff582f5eec    44  str lr, [jssp, #-8]!
0xffff582f5ef0    48  ldr x16, pc+80 (addr 0x0000ffff582f5f40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f5ef4    52  blr x16
0xffff582f5ef8    56  ldr lr, [jssp], #8
0xffff582f5efc    60  stur x5, [x1, #-1]
0xffff582f5f00    64  tbz w5, #0, #+0x34 (addr 0xffff582f5f34)
0xffff582f5f04    68  sub x2, x1, #0x1 (1)
0xffff582f5f08    72  and x5, x5, #0xfffffffffff00000
0xffff582f5f0c    76  ldr x5, [x5, #8]
0xffff582f5f10    80  tbz w5, #1, #+0x24 (addr 0xffff582f5f34)
0xffff582f5f14    84  and x5, x1, #0xfffffffffff00000
0xffff582f5f18    88  ldr x5, [x5, #8]
0xffff582f5f1c    92  tbz w5, #2, #+0x18 (addr 0xffff582f5f34)
0xffff582f5f20    96  sub csp, jssp, #0x8 (8)
0xffff582f5f24   100  str lr, [jssp, #-8]!
0xffff582f5f28   104  ldr x16, pc+32 (addr 0x0000ffff582f5f48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f5f2c   108  blr x16
0xffff582f5f30   112  ldr lr, [jssp], #8
0xffff582f5f34   116  ret
0xffff582f5f38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f5f3c   124  d63f03e0       constant
0xffff582f5f40   128  582170c0       constant
0xffff582f5f44   132  0000ffff       constant
0xffff582f5f48   136  58238080       constant
0xffff582f5f4c   140  0000ffff       constant
0xffff582f5f50   144  movz x16, #0x0
0xffff582f5f54   148  sub csp, jssp, #0x10 (16)
0xffff582f5f58   152  stp fp, lr, [jssp, #-16]!
0xffff582f5f5c   156  bl #+0x4 (addr 0xffff582f5f60)
0xffff582f5f60   160  movz x17, #0xa00000000
0xffff582f5f64   164  sub csp, jssp, #0x10 (16)
0xffff582f5f68   168  stp x17, cp, [jssp, #-16]!
0xffff582f5f6c   172  add fp, jssp, #0x10 (16)
0xffff582f5f70   176  ldr x17, pc+24 (addr 0x0000ffff582f5f88)    ;; lazy deoptimization bailout 0
0xffff582f5f74   180  add x17, x17, x16
0xffff582f5f78   184  br x17
0xffff582f5f7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f5f80   192  d63f03e0       constant
0xffff582f5f84   196  d503201f       constant
0xffff582f5f88   200  58006000       constant
0xffff582f5f8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f5ef0  code target (STUB)  (0xffff582170c0)
0xffff582f5f28  code target (STUB)  (0xffff58238080)
0xffff582f5f38  constant pool (size 24)
0xffff582f5f70  runtime entry
0xffff582f5f7c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f5ec0     0  tbz w0, #0, #+0x90 (addr 0xffff582f5f50)
0xffff582f5ec4     4  mov x2, x0
0xffff582f5ec8     8  stur x2, [x1, #87]
0xffff582f5ecc    12  add x3, x1, #0x57 (87)
0xffff582f5ed0    16  and x2, x2, #0xfffffffffff00000
0xffff582f5ed4    20  ldr x2, [x2, #8]
0xffff582f5ed8    24  tbz w2, #1, #+0x24 (addr 0xffff582f5efc)
0xffff582f5edc    28  and x2, x1, #0xfffffffffff00000
0xffff582f5ee0    32  ldr x2, [x2, #8]
0xffff582f5ee4    36  tbz w2, #2, #+0x18 (addr 0xffff582f5efc)
0xffff582f5ee8    40  sub csp, jssp, #0x8 (8)
0xffff582f5eec    44  str lr, [jssp, #-8]!
0xffff582f5ef0    48  ldr x16, pc+80 (addr 0x0000ffff582f5f40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f5ef4    52  blr x16
0xffff582f5ef8    56  ldr lr, [jssp], #8
0xffff582f5efc    60  stur x5, [x1, #-1]
0xffff582f5f00    64  tbz w5, #0, #+0x34 (addr 0xffff582f5f34)
0xffff582f5f04    68  sub x2, x1, #0x1 (1)
0xffff582f5f08    72  and x5, x5, #0xfffffffffff00000
0xffff582f5f0c    76  ldr x5, [x5, #8]
0xffff582f5f10    80  tbz w5, #1, #+0x24 (addr 0xffff582f5f34)
0xffff582f5f14    84  and x5, x1, #0xfffffffffff00000
0xffff582f5f18    88  ldr x5, [x5, #8]
0xffff582f5f1c    92  tbz w5, #2, #+0x18 (addr 0xffff582f5f34)
0xffff582f5f20    96  sub csp, jssp, #0x8 (8)
0xffff582f5f24   100  str lr, [jssp, #-8]!
0xffff582f5f28   104  ldr x16, pc+32 (addr 0x0000ffff582f5f48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f5f2c   108  blr x16
0xffff582f5f30   112  ldr lr, [jssp], #8
0xffff582f5f34   116  ret
0xffff582f5f38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f5f3c   124  d63f03e0       constant
0xffff582f5f40   128  582170c0       constant
0xffff582f5f44   132  0000ffff       constant
0xffff582f5f48   136  58238080       constant
0xffff582f5f4c   140  0000ffff       constant
0xffff582f5f50   144  movz x16, #0x0
0xffff582f5f54   148  sub csp, jssp, #0x10 (16)
0xffff582f5f58   152  stp fp, lr, [jssp, #-16]!
0xffff582f5f5c   156  bl #+0x4 (addr 0xffff582f5f60)
0xffff582f5f60   160  movz x17, #0xa00000000
0xffff582f5f64   164  sub csp, jssp, #0x10 (16)
0xffff582f5f68   168  stp x17, cp, [jssp, #-16]!
0xffff582f5f6c   172  add fp, jssp, #0x10 (16)
0xffff582f5f70   176  ldr x17, pc+24 (addr 0x0000ffff582f5f88)    ;; lazy deoptimization bailout 0
0xffff582f5f74   180  add x17, x17, x16
0xffff582f5f78   184  br x17
0xffff582f5f7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f5f80   192  d63f03e0       constant
0xffff582f5f84   196  d503201f       constant
0xffff582f5f88   200  58006000       constant
0xffff582f5f8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f5ef0  code target (STUB)  (0xffff582170c0)
0xffff582f5f28  code target (STUB)  (0xffff58238080)
0xffff582f5f38  constant pool (size 24)
0xffff582f5f70  runtime entry
0xffff582f5f7c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 152)
0xffff582f6000     0  sub csp, jssp, #0x8 (8)
0xffff582f6004     4  str x3, [jssp, #-8]!
0xffff582f6008     8  sub csp, jssp, #0x8 (8)
0xffff582f600c    12  str x4, [jssp, #-8]!
0xffff582f6010    16  ldr x3, pc+88 (addr 0x0000ffff582f6068)    ;; object: 0x225e9219 Cell for 0
0xffff582f6014    20  ldur x3, [x3, #7]
0xffff582f6018    24  cmp x3, #0x0 (0)
0xffff582f601c    28  b.ne #+0x30 (addr 0xffff582f604c)
0xffff582f6020    32  tbz w0, #0, #+0x2c (addr 0xffff582f604c)
0xffff582f6024    36  ldr x5, pc+76 (addr 0x0000ffff582f6070)    ;; object: 0x225e9351 WeakCell for 0x32b40589 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f6028    40  ldur x5, [x5, #7]
0xffff582f602c    44  tbz w5, #0, #+0x20 (addr 0xffff582f604c)
0xffff582f6030    48  ldursw x4, [x5, #15]
0xffff582f6034    52  tbnz w4, #23, #+0x18 (addr 0xffff582f604c)
0xffff582f6038    56  ldr x4, [jssp], #8
0xffff582f603c    60  ldr x3, [jssp], #8
0xffff582f6040    64  ldr x2, pc+56 (addr 0x0000ffff582f6078)    ;; object: 0x39cb2591 <String[7]: _events>
0xffff582f6044    68  ldr x16, pc+60 (addr 0x0000ffff582f6080)    ;; code: HANDLER, StoreTransitionStub, minor: 198667
0xffff582f6048    72  br x16
0xffff582f604c    76  ldr x2, pc+60 (addr 0x0000ffff582f6088)    ;; object: 0x39cb2591 <String[7]: _events>
0xffff582f6050    80  ldr x4, [jssp], #8
0xffff582f6054    84  ldr x3, [jssp], #8
0xffff582f6058    88  ldr x16, pc+56 (addr 0x0000ffff582f6090)    ;; code: BUILTIN
0xffff582f605c    92  br x16
0xffff582f6060    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f6064   100  d63f03e0       constant
0xffff582f6068   104  225e9219       constant
0xffff582f606c   108  00000000       constant
0xffff582f6070   112  225e9351       constant
0xffff582f6074   116  00000000       constant
0xffff582f6078   120  39cb2591       constant
0xffff582f607c   124  00000000       constant
0xffff582f6080   128  582f5ec0       constant
0xffff582f6084   132  0000ffff       constant
0xffff582f6088   136  39cb2591       constant
0xffff582f608c   140  00000000       constant
0xffff582f6090   144  58222420       constant
0xffff582f6094   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f6010  embedded object  (0x225e9219 Cell for 0)
0xffff582f6024  embedded object  (0x225e9351 WeakCell for 0x32b40589 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f6040  embedded object  (0x39cb2591 <String[7]: _events>)
0xffff582f6044  code target (HANDLER)  (0xffff582f5ec0)
0xffff582f604c  embedded object  (0x39cb2591 <String[7]: _events>)
0xffff582f6058  code target (BUILTIN)  (0xffff58222420)
0xffff582f6060  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f6100     0  mov x6, x0
0xffff582f6104     4  tbnz w6, #0, #+0x54 (addr 0xffff582f6158)
0xffff582f6108     8  stur x6, [x1, #95]
0xffff582f610c    12  stur x5, [x1, #-1]
0xffff582f6110    16  tbz w5, #0, #+0x34 (addr 0xffff582f6144)
0xffff582f6114    20  sub x2, x1, #0x1 (1)
0xffff582f6118    24  and x5, x5, #0xfffffffffff00000
0xffff582f611c    28  ldr x5, [x5, #8]
0xffff582f6120    32  tbz w5, #1, #+0x24 (addr 0xffff582f6144)
0xffff582f6124    36  and x5, x1, #0xfffffffffff00000
0xffff582f6128    40  ldr x5, [x5, #8]
0xffff582f612c    44  tbz w5, #2, #+0x18 (addr 0xffff582f6144)
0xffff582f6130    48  sub csp, jssp, #0x8 (8)
0xffff582f6134    52  str lr, [jssp, #-8]!
0xffff582f6138    56  ldr x16, pc+24 (addr 0x0000ffff582f6150)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f613c    60  blr x16
0xffff582f6140    64  ldr lr, [jssp], #8
0xffff582f6144    68  ret
0xffff582f6148    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f614c    76  d63f03e0       constant
0xffff582f6150    80  58238080       constant
0xffff582f6154    84  0000ffff       constant
0xffff582f6158    88  movz x16, #0x0
0xffff582f615c    92  sub csp, jssp, #0x10 (16)
0xffff582f6160    96  stp fp, lr, [jssp, #-16]!
0xffff582f6164   100  bl #+0x4 (addr 0xffff582f6168)
0xffff582f6168   104  movz x17, #0xa00000000
0xffff582f616c   108  sub csp, jssp, #0x10 (16)
0xffff582f6170   112  stp x17, cp, [jssp, #-16]!
0xffff582f6174   116  add fp, jssp, #0x10 (16)
0xffff582f6178   120  ldr x17, pc+24 (addr 0x0000ffff582f6190)    ;; lazy deoptimization bailout 0
0xffff582f617c   124  add x17, x17, x16
0xffff582f6180   128  br x17
0xffff582f6184   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f6188   136  d63f03e0       constant
0xffff582f618c   140  d503201f       constant
0xffff582f6190   144  58006000       constant
0xffff582f6194   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f6138  code target (STUB)  (0xffff58238080)
0xffff582f6148  constant pool (size 16)
0xffff582f6178  runtime entry
0xffff582f6184  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f6100     0  mov x6, x0
0xffff582f6104     4  tbnz w6, #0, #+0x54 (addr 0xffff582f6158)
0xffff582f6108     8  stur x6, [x1, #95]
0xffff582f610c    12  stur x5, [x1, #-1]
0xffff582f6110    16  tbz w5, #0, #+0x34 (addr 0xffff582f6144)
0xffff582f6114    20  sub x2, x1, #0x1 (1)
0xffff582f6118    24  and x5, x5, #0xfffffffffff00000
0xffff582f611c    28  ldr x5, [x5, #8]
0xffff582f6120    32  tbz w5, #1, #+0x24 (addr 0xffff582f6144)
0xffff582f6124    36  and x5, x1, #0xfffffffffff00000
0xffff582f6128    40  ldr x5, [x5, #8]
0xffff582f612c    44  tbz w5, #2, #+0x18 (addr 0xffff582f6144)
0xffff582f6130    48  sub csp, jssp, #0x8 (8)
0xffff582f6134    52  str lr, [jssp, #-8]!
0xffff582f6138    56  ldr x16, pc+24 (addr 0x0000ffff582f6150)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f613c    60  blr x16
0xffff582f6140    64  ldr lr, [jssp], #8
0xffff582f6144    68  ret
0xffff582f6148    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f614c    76  d63f03e0       constant
0xffff582f6150    80  58238080       constant
0xffff582f6154    84  0000ffff       constant
0xffff582f6158    88  movz x16, #0x0
0xffff582f615c    92  sub csp, jssp, #0x10 (16)
0xffff582f6160    96  stp fp, lr, [jssp, #-16]!
0xffff582f6164   100  bl #+0x4 (addr 0xffff582f6168)
0xffff582f6168   104  movz x17, #0xa00000000
0xffff582f616c   108  sub csp, jssp, #0x10 (16)
0xffff582f6170   112  stp x17, cp, [jssp, #-16]!
0xffff582f6174   116  add fp, jssp, #0x10 (16)
0xffff582f6178   120  ldr x17, pc+24 (addr 0x0000ffff582f6190)    ;; lazy deoptimization bailout 0
0xffff582f617c   124  add x17, x17, x16
0xffff582f6180   128  br x17
0xffff582f6184   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f6188   136  d63f03e0       constant
0xffff582f618c   140  d503201f       constant
0xffff582f6190   144  58006000       constant
0xffff582f6194   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f6138  code target (STUB)  (0xffff58238080)
0xffff582f6148  constant pool (size 16)
0xffff582f6178  runtime entry
0xffff582f6184  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _eventsCount
compiler = unknown
Instructions (size = 152)
0xffff582f6200     0  sub csp, jssp, #0x8 (8)
0xffff582f6204     4  str x3, [jssp, #-8]!
0xffff582f6208     8  sub csp, jssp, #0x8 (8)
0xffff582f620c    12  str x4, [jssp, #-8]!
0xffff582f6210    16  ldr x3, pc+88 (addr 0x0000ffff582f6268)    ;; object: 0x225e9219 Cell for 0
0xffff582f6214    20  ldur x3, [x3, #7]
0xffff582f6218    24  cmp x3, #0x0 (0)
0xffff582f621c    28  b.ne #+0x2c (addr 0xffff582f6248)
0xffff582f6220    32  ldr x5, pc+80 (addr 0x0000ffff582f6270)    ;; object: 0x225e9441 WeakCell for 0x32b405e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f6224    36  ldur x5, [x5, #7]
0xffff582f6228    40  tbz w5, #0, #+0x20 (addr 0xffff582f6248)
0xffff582f622c    44  ldursw x4, [x5, #15]
0xffff582f6230    48  tbnz w4, #23, #+0x18 (addr 0xffff582f6248)
0xffff582f6234    52  ldr x4, [jssp], #8
0xffff582f6238    56  ldr x3, [jssp], #8
0xffff582f623c    60  ldr x2, pc+60 (addr 0x0000ffff582f6278)    ;; object: 0x39cb93b9 <String[12]: _eventsCount>
0xffff582f6240    64  ldr x16, pc+64 (addr 0x0000ffff582f6280)    ;; code: HANDLER, StoreTransitionStub, minor: 174092
0xffff582f6244    68  br x16
0xffff582f6248    72  ldr x2, pc+64 (addr 0x0000ffff582f6288)    ;; object: 0x39cb93b9 <String[12]: _eventsCount>
0xffff582f624c    76  ldr x4, [jssp], #8
0xffff582f6250    80  ldr x3, [jssp], #8
0xffff582f6254    84  ldr x16, pc+60 (addr 0x0000ffff582f6290)    ;; code: BUILTIN
0xffff582f6258    88  br x16
0xffff582f625c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582f6260    96  d63f03e0       constant
0xffff582f6264   100  d503201f       constant
0xffff582f6268   104  225e9219       constant
0xffff582f626c   108  00000000       constant
0xffff582f6270   112  225e9441       constant
0xffff582f6274   116  00000000       constant
0xffff582f6278   120  39cb93b9       constant
0xffff582f627c   124  00000000       constant
0xffff582f6280   128  582f6100       constant
0xffff582f6284   132  0000ffff       constant
0xffff582f6288   136  39cb93b9       constant
0xffff582f628c   140  00000000       constant
0xffff582f6290   144  58222420       constant
0xffff582f6294   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f6210  embedded object  (0x225e9219 Cell for 0)
0xffff582f6220  embedded object  (0x225e9441 WeakCell for 0x32b405e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f623c  embedded object  (0x39cb93b9 <String[12]: _eventsCount>)
0xffff582f6240  code target (HANDLER)  (0xffff582f6100)
0xffff582f6248  embedded object  (0x39cb93b9 <String[12]: _eventsCount>)
0xffff582f6254  code target (BUILTIN)  (0xffff58222420)
0xffff582f625c  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 120)
0xffff582f6300     0  sub csp, jssp, #0x8 (8)
0xffff582f6304     4  str x3, [jssp, #-8]!
0xffff582f6308     8  sub csp, jssp, #0x8 (8)
0xffff582f630c    12  str x0, [jssp, #-8]!
0xffff582f6310    16  ldr x0, pc+72 (addr 0x0000ffff582f6358)    ;; object: 0x225e9219 Cell for 0
0xffff582f6314    20  ldur x0, [x0, #7]
0xffff582f6318    24  cmp x0, #0x0 (0)
0xffff582f631c    28  b.ne #+0x14 (addr 0xffff582f6330)
0xffff582f6320    32  ldr x3, pc+64 (addr 0x0000ffff582f6360)    ;; object: 0x225e9531 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>
0xffff582f6324    36  ldur x3, [x3, #7]
0xffff582f6328    40  tbz w3, #0, #+0x8 (addr 0xffff582f6330)
0xffff582f632c    44  b #+0x14 (addr 0xffff582f6340)
0xffff582f6330    48  ldr x0, [jssp], #8
0xffff582f6334    52  ldr x3, [jssp], #8
0xffff582f6338    56  ldr x16, pc+48 (addr 0x0000ffff582f6368)    ;; code: BUILTIN
0xffff582f633c    60  br x16
0xffff582f6340    64  add jssp, jssp, #0x10 (16)
0xffff582f6344    68  mov x1, x3
0xffff582f6348    72  ldr x16, pc+40 (addr 0x0000ffff582f6370)    ;; code: HANDLER, LoadFieldStub, minor: 2053
0xffff582f634c    76  br x16
0xffff582f6350    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582f6354    84  d63f03e0       constant
0xffff582f6358    88  225e9219       constant
0xffff582f635c    92  00000000       constant
0xffff582f6360    96  225e9531       constant
0xffff582f6364   100  00000000       constant
0xffff582f6368   104  582222e0       constant
0xffff582f636c   108  0000ffff       constant
0xffff582f6370   112  58278e20       constant
0xffff582f6374   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582f6310  embedded object  (0x225e9219 Cell for 0)
0xffff582f6320  embedded object  (0x225e9531 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>)
0xffff582f6338  code target (BUILTIN)  (0xffff582222e0)
0xffff582f6348  code target (HANDLER)  (0xffff58278e20)
0xffff582f6350  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 152)
0xffff582f63e0     0  sub csp, jssp, #0x8 (8)
0xffff582f63e4     4  str x3, [jssp, #-8]!
0xffff582f63e8     8  sub csp, jssp, #0x8 (8)
0xffff582f63ec    12  str x4, [jssp, #-8]!
0xffff582f63f0    16  ldr x3, pc+88 (addr 0x0000ffff582f6448)    ;; object: 0x225e9219 Cell for 0
0xffff582f63f4    20  ldur x3, [x3, #7]
0xffff582f63f8    24  cmp x3, #0x0 (0)
0xffff582f63fc    28  b.ne #+0x30 (addr 0xffff582f642c)
0xffff582f6400    32  tbz w0, #0, #+0x2c (addr 0xffff582f642c)
0xffff582f6404    36  ldr x5, pc+76 (addr 0x0000ffff582f6450)    ;; object: 0x225e9569 WeakCell for 0x32b40639 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f6408    40  ldur x5, [x5, #7]
0xffff582f640c    44  tbz w5, #0, #+0x20 (addr 0xffff582f642c)
0xffff582f6410    48  ldursw x4, [x5, #15]
0xffff582f6414    52  tbnz w4, #23, #+0x18 (addr 0xffff582f642c)
0xffff582f6418    56  ldr x4, [jssp], #8
0xffff582f641c    60  ldr x3, [jssp], #8
0xffff582f6420    64  ldr x2, pc+56 (addr 0x0000ffff582f6458)    ;; object: 0x39cc32b1 <String[13]: _maxListeners>
0xffff582f6424    68  ldr x16, pc+60 (addr 0x0000ffff582f6460)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff582f6428    72  br x16
0xffff582f642c    76  ldr x2, pc+60 (addr 0x0000ffff582f6468)    ;; object: 0x39cc32b1 <String[13]: _maxListeners>
0xffff582f6430    80  ldr x4, [jssp], #8
0xffff582f6434    84  ldr x3, [jssp], #8
0xffff582f6438    88  ldr x16, pc+56 (addr 0x0000ffff582f6470)    ;; code: BUILTIN
0xffff582f643c    92  br x16
0xffff582f6440    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f6444   100  d63f03e0       constant
0xffff582f6448   104  225e9219       constant
0xffff582f644c   108  00000000       constant
0xffff582f6450   112  225e9569       constant
0xffff582f6454   116  00000000       constant
0xffff582f6458   120  39cc32b1       constant
0xffff582f645c   124  00000000       constant
0xffff582f6460   128  58238860       constant
0xffff582f6464   132  0000ffff       constant
0xffff582f6468   136  39cc32b1       constant
0xffff582f646c   140  00000000       constant
0xffff582f6470   144  58222420       constant
0xffff582f6474   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f63f0  embedded object  (0x225e9219 Cell for 0)
0xffff582f6404  embedded object  (0x225e9569 WeakCell for 0x32b40639 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f6420  embedded object  (0x39cc32b1 <String[13]: _maxListeners>)
0xffff582f6424  code target (HANDLER)  (0xffff58238860)
0xffff582f642c  embedded object  (0x39cc32b1 <String[13]: _maxListeners>)
0xffff582f6438  code target (BUILTIN)  (0xffff58222420)
0xffff582f6440  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = objectMode
compiler = unknown
Instructions (size = 152)
0xffff582f64e0     0  sub csp, jssp, #0x8 (8)
0xffff582f64e4     4  str x3, [jssp, #-8]!
0xffff582f64e8     8  sub csp, jssp, #0x8 (8)
0xffff582f64ec    12  str x4, [jssp, #-8]!
0xffff582f64f0    16  ldr x3, pc+88 (addr 0x0000ffff582f6548)    ;; object: 0x225e95f9 Cell for 0
0xffff582f64f4    20  ldur x3, [x3, #7]
0xffff582f64f8    24  cmp x3, #0x0 (0)
0xffff582f64fc    28  b.ne #+0x30 (addr 0xffff582f652c)
0xffff582f6500    32  tbz w0, #0, #+0x2c (addr 0xffff582f652c)
0xffff582f6504    36  ldr x5, pc+76 (addr 0x0000ffff582f6550)    ;; object: 0x225d1689 WeakCell for 0x32b380d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f6508    40  ldur x5, [x5, #7]
0xffff582f650c    44  tbz w5, #0, #+0x20 (addr 0xffff582f652c)
0xffff582f6510    48  ldursw x4, [x5, #15]
0xffff582f6514    52  tbnz w4, #23, #+0x18 (addr 0xffff582f652c)
0xffff582f6518    56  ldr x4, [jssp], #8
0xffff582f651c    60  ldr x3, [jssp], #8
0xffff582f6520    64  ldr x2, pc+56 (addr 0x0000ffff582f6558)    ;; object: 0x2251d821 <String[10]: objectMode>
0xffff582f6524    68  ldr x16, pc+60 (addr 0x0000ffff582f6560)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff582f6528    72  br x16
0xffff582f652c    76  ldr x2, pc+60 (addr 0x0000ffff582f6568)    ;; object: 0x2251d821 <String[10]: objectMode>
0xffff582f6530    80  ldr x4, [jssp], #8
0xffff582f6534    84  ldr x3, [jssp], #8
0xffff582f6538    88  ldr x16, pc+56 (addr 0x0000ffff582f6570)    ;; code: BUILTIN
0xffff582f653c    92  br x16
0xffff582f6540    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f6544   100  d63f03e0       constant
0xffff582f6548   104  225e95f9       constant
0xffff582f654c   108  00000000       constant
0xffff582f6550   112  225d1689       constant
0xffff582f6554   116  00000000       constant
0xffff582f6558   120  2251d821       constant
0xffff582f655c   124  00000000       constant
0xffff582f6560   128  5828b940       constant
0xffff582f6564   132  0000ffff       constant
0xffff582f6568   136  2251d821       constant
0xffff582f656c   140  00000000       constant
0xffff582f6570   144  58222420       constant
0xffff582f6574   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f64f0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f6504  embedded object  (0x225d1689 WeakCell for 0x32b380d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f6520  embedded object  (0x2251d821 <String[10]: objectMode>)
0xffff582f6524  code target (HANDLER)  (0xffff5828b940)
0xffff582f652c  embedded object  (0x2251d821 <String[10]: objectMode>)
0xffff582f6538  code target (BUILTIN)  (0xffff58222420)
0xffff582f6540  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 120)
0xffff582f65e0     0  sub csp, jssp, #0x8 (8)
0xffff582f65e4     4  str x3, [jssp, #-8]!
0xffff582f65e8     8  sub csp, jssp, #0x8 (8)
0xffff582f65ec    12  str x0, [jssp, #-8]!
0xffff582f65f0    16  ldr x0, pc+72 (addr 0x0000ffff582f6638)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582f65f4    20  ldur x0, [x0, #7]
0xffff582f65f8    24  cmp x0, #0x0 (0)
0xffff582f65fc    28  b.ne #+0x14 (addr 0xffff582f6610)
0xffff582f6600    32  ldr x3, pc+64 (addr 0x0000ffff582f6640)    ;; object: 0x225e9659 WeakCell for 0x39c40019 <JS Function (SharedFunctionInfo 0x39c3ff71)>
0xffff582f6604    36  ldur x3, [x3, #7]
0xffff582f6608    40  tbz w3, #0, #+0x8 (addr 0xffff582f6610)
0xffff582f660c    44  b #+0x14 (addr 0xffff582f6620)
0xffff582f6610    48  ldr x0, [jssp], #8
0xffff582f6614    52  ldr x3, [jssp], #8
0xffff582f6618    56  ldr x16, pc+48 (addr 0x0000ffff582f6648)    ;; code: BUILTIN
0xffff582f661c    60  br x16
0xffff582f6620    64  add jssp, jssp, #0x10 (16)
0xffff582f6624    68  mov x1, x3
0xffff582f6628    72  ldr x16, pc+40 (addr 0x0000ffff582f6650)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff582f662c    76  br x16
0xffff582f6630    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582f6634    84  d63f03e0       constant
0xffff582f6638    88  39c5b0f1       constant
0xffff582f663c    92  00000000       constant
0xffff582f6640    96  225e9659       constant
0xffff582f6644   100  00000000       constant
0xffff582f6648   104  582222e0       constant
0xffff582f664c   108  0000ffff       constant
0xffff582f6650   112  5824c160       constant
0xffff582f6654   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582f65f0  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582f6600  embedded object  (0x225e9659 WeakCell for 0x39c40019 <JS Function (SharedFunctionInfo 0x39c3ff71)>)
0xffff582f6618  code target (BUILTIN)  (0xffff582222e0)
0xffff582f6628  code target (HANDLER)  (0xffff5824c160)
0xffff582f6630  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f66c0     0  mov x6, x0
0xffff582f66c4     4  tbnz w6, #0, #+0x54 (addr 0xffff582f6718)
0xffff582f66c8     8  stur x6, [x1, #31]
0xffff582f66cc    12  stur x5, [x1, #-1]
0xffff582f66d0    16  tbz w5, #0, #+0x34 (addr 0xffff582f6704)
0xffff582f66d4    20  sub x2, x1, #0x1 (1)
0xffff582f66d8    24  and x5, x5, #0xfffffffffff00000
0xffff582f66dc    28  ldr x5, [x5, #8]
0xffff582f66e0    32  tbz w5, #1, #+0x24 (addr 0xffff582f6704)
0xffff582f66e4    36  and x5, x1, #0xfffffffffff00000
0xffff582f66e8    40  ldr x5, [x5, #8]
0xffff582f66ec    44  tbz w5, #2, #+0x18 (addr 0xffff582f6704)
0xffff582f66f0    48  sub csp, jssp, #0x8 (8)
0xffff582f66f4    52  str lr, [jssp, #-8]!
0xffff582f66f8    56  ldr x16, pc+24 (addr 0x0000ffff582f6710)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f66fc    60  blr x16
0xffff582f6700    64  ldr lr, [jssp], #8
0xffff582f6704    68  ret
0xffff582f6708    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f670c    76  d63f03e0       constant
0xffff582f6710    80  58238080       constant
0xffff582f6714    84  0000ffff       constant
0xffff582f6718    88  movz x16, #0x0
0xffff582f671c    92  sub csp, jssp, #0x10 (16)
0xffff582f6720    96  stp fp, lr, [jssp, #-16]!
0xffff582f6724   100  bl #+0x4 (addr 0xffff582f6728)
0xffff582f6728   104  movz x17, #0xa00000000
0xffff582f672c   108  sub csp, jssp, #0x10 (16)
0xffff582f6730   112  stp x17, cp, [jssp, #-16]!
0xffff582f6734   116  add fp, jssp, #0x10 (16)
0xffff582f6738   120  ldr x17, pc+24 (addr 0x0000ffff582f6750)    ;; lazy deoptimization bailout 0
0xffff582f673c   124  add x17, x17, x16
0xffff582f6740   128  br x17
0xffff582f6744   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f6748   136  d63f03e0       constant
0xffff582f674c   140  d503201f       constant
0xffff582f6750   144  58006000       constant
0xffff582f6754   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f66f8  code target (STUB)  (0xffff58238080)
0xffff582f6708  constant pool (size 16)
0xffff582f6738  runtime entry
0xffff582f6744  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f66c0     0  mov x6, x0
0xffff582f66c4     4  tbnz w6, #0, #+0x54 (addr 0xffff582f6718)
0xffff582f66c8     8  stur x6, [x1, #31]
0xffff582f66cc    12  stur x5, [x1, #-1]
0xffff582f66d0    16  tbz w5, #0, #+0x34 (addr 0xffff582f6704)
0xffff582f66d4    20  sub x2, x1, #0x1 (1)
0xffff582f66d8    24  and x5, x5, #0xfffffffffff00000
0xffff582f66dc    28  ldr x5, [x5, #8]
0xffff582f66e0    32  tbz w5, #1, #+0x24 (addr 0xffff582f6704)
0xffff582f66e4    36  and x5, x1, #0xfffffffffff00000
0xffff582f66e8    40  ldr x5, [x5, #8]
0xffff582f66ec    44  tbz w5, #2, #+0x18 (addr 0xffff582f6704)
0xffff582f66f0    48  sub csp, jssp, #0x8 (8)
0xffff582f66f4    52  str lr, [jssp, #-8]!
0xffff582f66f8    56  ldr x16, pc+24 (addr 0x0000ffff582f6710)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f66fc    60  blr x16
0xffff582f6700    64  ldr lr, [jssp], #8
0xffff582f6704    68  ret
0xffff582f6708    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f670c    76  d63f03e0       constant
0xffff582f6710    80  58238080       constant
0xffff582f6714    84  0000ffff       constant
0xffff582f6718    88  movz x16, #0x0
0xffff582f671c    92  sub csp, jssp, #0x10 (16)
0xffff582f6720    96  stp fp, lr, [jssp, #-16]!
0xffff582f6724   100  bl #+0x4 (addr 0xffff582f6728)
0xffff582f6728   104  movz x17, #0xa00000000
0xffff582f672c   108  sub csp, jssp, #0x10 (16)
0xffff582f6730   112  stp x17, cp, [jssp, #-16]!
0xffff582f6734   116  add fp, jssp, #0x10 (16)
0xffff582f6738   120  ldr x17, pc+24 (addr 0x0000ffff582f6750)    ;; lazy deoptimization bailout 0
0xffff582f673c   124  add x17, x17, x16
0xffff582f6740   128  br x17
0xffff582f6744   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f6748   136  d63f03e0       constant
0xffff582f674c   140  d503201f       constant
0xffff582f6750   144  58006000       constant
0xffff582f6754   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f66f8  code target (STUB)  (0xffff58238080)
0xffff582f6708  constant pool (size 16)
0xffff582f6738  runtime entry
0xffff582f6744  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = highWaterMark
compiler = unknown
Instructions (size = 152)
0xffff582f67c0     0  sub csp, jssp, #0x8 (8)
0xffff582f67c4     4  str x3, [jssp, #-8]!
0xffff582f67c8     8  sub csp, jssp, #0x8 (8)
0xffff582f67cc    12  str x4, [jssp, #-8]!
0xffff582f67d0    16  ldr x3, pc+88 (addr 0x0000ffff582f6828)    ;; object: 0x225e95f9 Cell for 0
0xffff582f67d4    20  ldur x3, [x3, #7]
0xffff582f67d8    24  cmp x3, #0x0 (0)
0xffff582f67dc    28  b.ne #+0x2c (addr 0xffff582f6808)
0xffff582f67e0    32  ldr x5, pc+80 (addr 0x0000ffff582f6830)    ;; object: 0x225d16c1 WeakCell for 0x32b38131 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f67e4    36  ldur x5, [x5, #7]
0xffff582f67e8    40  tbz w5, #0, #+0x20 (addr 0xffff582f6808)
0xffff582f67ec    44  ldursw x4, [x5, #15]
0xffff582f67f0    48  tbnz w4, #23, #+0x18 (addr 0xffff582f6808)
0xffff582f67f4    52  ldr x4, [jssp], #8
0xffff582f67f8    56  ldr x3, [jssp], #8
0xffff582f67fc    60  ldr x2, pc+60 (addr 0x0000ffff582f6838)    ;; object: 0x39cf91d9 <String[13]: highWaterMark>
0xffff582f6800    64  ldr x16, pc+64 (addr 0x0000ffff582f6840)    ;; code: HANDLER, StoreTransitionStub, minor: 174084
0xffff582f6804    68  br x16
0xffff582f6808    72  ldr x2, pc+64 (addr 0x0000ffff582f6848)    ;; object: 0x39cf91d9 <String[13]: highWaterMark>
0xffff582f680c    76  ldr x4, [jssp], #8
0xffff582f6810    80  ldr x3, [jssp], #8
0xffff582f6814    84  ldr x16, pc+60 (addr 0x0000ffff582f6850)    ;; code: BUILTIN
0xffff582f6818    88  br x16
0xffff582f681c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582f6820    96  d63f03e0       constant
0xffff582f6824   100  d503201f       constant
0xffff582f6828   104  225e95f9       constant
0xffff582f682c   108  00000000       constant
0xffff582f6830   112  225d16c1       constant
0xffff582f6834   116  00000000       constant
0xffff582f6838   120  39cf91d9       constant
0xffff582f683c   124  00000000       constant
0xffff582f6840   128  582f66c0       constant
0xffff582f6844   132  0000ffff       constant
0xffff582f6848   136  39cf91d9       constant
0xffff582f684c   140  00000000       constant
0xffff582f6850   144  58222420       constant
0xffff582f6854   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f67d0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f67e0  embedded object  (0x225d16c1 WeakCell for 0x32b38131 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f67fc  embedded object  (0x39cf91d9 <String[13]: highWaterMark>)
0xffff582f6800  code target (HANDLER)  (0xffff582f66c0)
0xffff582f6808  embedded object  (0x39cf91d9 <String[13]: highWaterMark>)
0xffff582f6814  code target (BUILTIN)  (0xffff58222420)
0xffff582f681c  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = needDrain
compiler = unknown
Instructions (size = 152)
0xffff582f68c0     0  sub csp, jssp, #0x8 (8)
0xffff582f68c4     4  str x3, [jssp, #-8]!
0xffff582f68c8     8  sub csp, jssp, #0x8 (8)
0xffff582f68cc    12  str x4, [jssp, #-8]!
0xffff582f68d0    16  ldr x3, pc+88 (addr 0x0000ffff582f6928)    ;; object: 0x225e95f9 Cell for 0
0xffff582f68d4    20  ldur x3, [x3, #7]
0xffff582f68d8    24  cmp x3, #0x0 (0)
0xffff582f68dc    28  b.ne #+0x30 (addr 0xffff582f690c)
0xffff582f68e0    32  tbz w0, #0, #+0x2c (addr 0xffff582f690c)
0xffff582f68e4    36  ldr x5, pc+76 (addr 0x0000ffff582f6930)    ;; object: 0x225d16d9 WeakCell for 0x32b38189 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f68e8    40  ldur x5, [x5, #7]
0xffff582f68ec    44  tbz w5, #0, #+0x20 (addr 0xffff582f690c)
0xffff582f68f0    48  ldursw x4, [x5, #15]
0xffff582f68f4    52  tbnz w4, #23, #+0x18 (addr 0xffff582f690c)
0xffff582f68f8    56  ldr x4, [jssp], #8
0xffff582f68fc    60  ldr x3, [jssp], #8
0xffff582f6900    64  ldr x2, pc+56 (addr 0x0000ffff582f6938)    ;; object: 0x2251e111 <String[9]: needDrain>
0xffff582f6904    68  ldr x16, pc+60 (addr 0x0000ffff582f6940)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff582f6908    72  br x16
0xffff582f690c    76  ldr x2, pc+60 (addr 0x0000ffff582f6948)    ;; object: 0x2251e111 <String[9]: needDrain>
0xffff582f6910    80  ldr x4, [jssp], #8
0xffff582f6914    84  ldr x3, [jssp], #8
0xffff582f6918    88  ldr x16, pc+56 (addr 0x0000ffff582f6950)    ;; code: BUILTIN
0xffff582f691c    92  br x16
0xffff582f6920    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f6924   100  d63f03e0       constant
0xffff582f6928   104  225e95f9       constant
0xffff582f692c   108  00000000       constant
0xffff582f6930   112  225d16d9       constant
0xffff582f6934   116  00000000       constant
0xffff582f6938   120  2251e111       constant
0xffff582f693c   124  00000000       constant
0xffff582f6940   128  5828bdc0       constant
0xffff582f6944   132  0000ffff       constant
0xffff582f6948   136  2251e111       constant
0xffff582f694c   140  00000000       constant
0xffff582f6950   144  58222420       constant
0xffff582f6954   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f68d0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f68e4  embedded object  (0x225d16d9 WeakCell for 0x32b38189 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f6900  embedded object  (0x2251e111 <String[9]: needDrain>)
0xffff582f6904  code target (HANDLER)  (0xffff5828bdc0)
0xffff582f690c  embedded object  (0x2251e111 <String[9]: needDrain>)
0xffff582f6918  code target (BUILTIN)  (0xffff58222420)
0xffff582f6920  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = ending
compiler = unknown
Instructions (size = 152)
0xffff582f69c0     0  sub csp, jssp, #0x8 (8)
0xffff582f69c4     4  str x3, [jssp, #-8]!
0xffff582f69c8     8  sub csp, jssp, #0x8 (8)
0xffff582f69cc    12  str x4, [jssp, #-8]!
0xffff582f69d0    16  ldr x3, pc+88 (addr 0x0000ffff582f6a28)    ;; object: 0x225e95f9 Cell for 0
0xffff582f69d4    20  ldur x3, [x3, #7]
0xffff582f69d8    24  cmp x3, #0x0 (0)
0xffff582f69dc    28  b.ne #+0x30 (addr 0xffff582f6a0c)
0xffff582f69e0    32  tbz w0, #0, #+0x2c (addr 0xffff582f6a0c)
0xffff582f69e4    36  ldr x5, pc+76 (addr 0x0000ffff582f6a30)    ;; object: 0x225d16f1 WeakCell for 0x32b381e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f69e8    40  ldur x5, [x5, #7]
0xffff582f69ec    44  tbz w5, #0, #+0x20 (addr 0xffff582f6a0c)
0xffff582f69f0    48  ldursw x4, [x5, #15]
0xffff582f69f4    52  tbnz w4, #23, #+0x18 (addr 0xffff582f6a0c)
0xffff582f69f8    56  ldr x4, [jssp], #8
0xffff582f69fc    60  ldr x3, [jssp], #8
0xffff582f6a00    64  ldr x2, pc+56 (addr 0x0000ffff582f6a38)    ;; object: 0x22522889 <String[6]: ending>
0xffff582f6a04    68  ldr x16, pc+60 (addr 0x0000ffff582f6a40)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff582f6a08    72  br x16
0xffff582f6a0c    76  ldr x2, pc+60 (addr 0x0000ffff582f6a48)    ;; object: 0x22522889 <String[6]: ending>
0xffff582f6a10    80  ldr x4, [jssp], #8
0xffff582f6a14    84  ldr x3, [jssp], #8
0xffff582f6a18    88  ldr x16, pc+56 (addr 0x0000ffff582f6a50)    ;; code: BUILTIN
0xffff582f6a1c    92  br x16
0xffff582f6a20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f6a24   100  d63f03e0       constant
0xffff582f6a28   104  225e95f9       constant
0xffff582f6a2c   108  00000000       constant
0xffff582f6a30   112  225d16f1       constant
0xffff582f6a34   116  00000000       constant
0xffff582f6a38   120  22522889       constant
0xffff582f6a3c   124  00000000       constant
0xffff582f6a40   128  5828c000       constant
0xffff582f6a44   132  0000ffff       constant
0xffff582f6a48   136  22522889       constant
0xffff582f6a4c   140  00000000       constant
0xffff582f6a50   144  58222420       constant
0xffff582f6a54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f69d0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f69e4  embedded object  (0x225d16f1 WeakCell for 0x32b381e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f6a00  embedded object  (0x22522889 <String[6]: ending>)
0xffff582f6a04  code target (HANDLER)  (0xffff5828c000)
0xffff582f6a0c  embedded object  (0x22522889 <String[6]: ending>)
0xffff582f6a18  code target (BUILTIN)  (0xffff58222420)
0xffff582f6a20  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = ended
compiler = unknown
Instructions (size = 152)
0xffff582f6ac0     0  sub csp, jssp, #0x8 (8)
0xffff582f6ac4     4  str x3, [jssp, #-8]!
0xffff582f6ac8     8  sub csp, jssp, #0x8 (8)
0xffff582f6acc    12  str x4, [jssp, #-8]!
0xffff582f6ad0    16  ldr x3, pc+88 (addr 0x0000ffff582f6b28)    ;; object: 0x225e95f9 Cell for 0
0xffff582f6ad4    20  ldur x3, [x3, #7]
0xffff582f6ad8    24  cmp x3, #0x0 (0)
0xffff582f6adc    28  b.ne #+0x30 (addr 0xffff582f6b0c)
0xffff582f6ae0    32  tbz w0, #0, #+0x2c (addr 0xffff582f6b0c)
0xffff582f6ae4    36  ldr x5, pc+76 (addr 0x0000ffff582f6b30)    ;; object: 0x225d1709 WeakCell for 0x32b38239 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f6ae8    40  ldur x5, [x5, #7]
0xffff582f6aec    44  tbz w5, #0, #+0x20 (addr 0xffff582f6b0c)
0xffff582f6af0    48  ldursw x4, [x5, #15]
0xffff582f6af4    52  tbnz w4, #23, #+0x18 (addr 0xffff582f6b0c)
0xffff582f6af8    56  ldr x4, [jssp], #8
0xffff582f6afc    60  ldr x3, [jssp], #8
0xffff582f6b00    64  ldr x2, pc+56 (addr 0x0000ffff582f6b38)    ;; object: 0x39cf92f1 <String[5]: ended>
0xffff582f6b04    68  ldr x16, pc+60 (addr 0x0000ffff582f6b40)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff582f6b08    72  br x16
0xffff582f6b0c    76  ldr x2, pc+60 (addr 0x0000ffff582f6b48)    ;; object: 0x39cf92f1 <String[5]: ended>
0xffff582f6b10    80  ldr x4, [jssp], #8
0xffff582f6b14    84  ldr x3, [jssp], #8
0xffff582f6b18    88  ldr x16, pc+56 (addr 0x0000ffff582f6b50)    ;; code: BUILTIN
0xffff582f6b1c    92  br x16
0xffff582f6b20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f6b24   100  d63f03e0       constant
0xffff582f6b28   104  225e95f9       constant
0xffff582f6b2c   108  00000000       constant
0xffff582f6b30   112  225d1709       constant
0xffff582f6b34   116  00000000       constant
0xffff582f6b38   120  39cf92f1       constant
0xffff582f6b3c   124  00000000       constant
0xffff582f6b40   128  5828c240       constant
0xffff582f6b44   132  0000ffff       constant
0xffff582f6b48   136  39cf92f1       constant
0xffff582f6b4c   140  00000000       constant
0xffff582f6b50   144  58222420       constant
0xffff582f6b54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f6ad0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f6ae4  embedded object  (0x225d1709 WeakCell for 0x32b38239 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f6b00  embedded object  (0x39cf92f1 <String[5]: ended>)
0xffff582f6b04  code target (HANDLER)  (0xffff5828c240)
0xffff582f6b0c  embedded object  (0x39cf92f1 <String[5]: ended>)
0xffff582f6b18  code target (BUILTIN)  (0xffff58222420)
0xffff582f6b20  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = finished
compiler = unknown
Instructions (size = 152)
0xffff582f6bc0     0  sub csp, jssp, #0x8 (8)
0xffff582f6bc4     4  str x3, [jssp, #-8]!
0xffff582f6bc8     8  sub csp, jssp, #0x8 (8)
0xffff582f6bcc    12  str x4, [jssp, #-8]!
0xffff582f6bd0    16  ldr x3, pc+88 (addr 0x0000ffff582f6c28)    ;; object: 0x225e95f9 Cell for 0
0xffff582f6bd4    20  ldur x3, [x3, #7]
0xffff582f6bd8    24  cmp x3, #0x0 (0)
0xffff582f6bdc    28  b.ne #+0x30 (addr 0xffff582f6c0c)
0xffff582f6be0    32  tbz w0, #0, #+0x2c (addr 0xffff582f6c0c)
0xffff582f6be4    36  ldr x5, pc+76 (addr 0x0000ffff582f6c30)    ;; object: 0x225d1721 WeakCell for 0x32b38291 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f6be8    40  ldur x5, [x5, #7]
0xffff582f6bec    44  tbz w5, #0, #+0x20 (addr 0xffff582f6c0c)
0xffff582f6bf0    48  ldursw x4, [x5, #15]
0xffff582f6bf4    52  tbnz w4, #23, #+0x18 (addr 0xffff582f6c0c)
0xffff582f6bf8    56  ldr x4, [jssp], #8
0xffff582f6bfc    60  ldr x3, [jssp], #8
0xffff582f6c00    64  ldr x2, pc+56 (addr 0x0000ffff582f6c38)    ;; object: 0x225228a9 <String[8]: finished>
0xffff582f6c04    68  ldr x16, pc+60 (addr 0x0000ffff582f6c40)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff582f6c08    72  br x16
0xffff582f6c0c    76  ldr x2, pc+60 (addr 0x0000ffff582f6c48)    ;; object: 0x225228a9 <String[8]: finished>
0xffff582f6c10    80  ldr x4, [jssp], #8
0xffff582f6c14    84  ldr x3, [jssp], #8
0xffff582f6c18    88  ldr x16, pc+56 (addr 0x0000ffff582f6c50)    ;; code: BUILTIN
0xffff582f6c1c    92  br x16
0xffff582f6c20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f6c24   100  d63f03e0       constant
0xffff582f6c28   104  225e95f9       constant
0xffff582f6c2c   108  00000000       constant
0xffff582f6c30   112  225d1721       constant
0xffff582f6c34   116  00000000       constant
0xffff582f6c38   120  225228a9       constant
0xffff582f6c3c   124  00000000       constant
0xffff582f6c40   128  582e6060       constant
0xffff582f6c44   132  0000ffff       constant
0xffff582f6c48   136  225228a9       constant
0xffff582f6c4c   140  00000000       constant
0xffff582f6c50   144  58222420       constant
0xffff582f6c54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f6bd0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f6be4  embedded object  (0x225d1721 WeakCell for 0x32b38291 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f6c00  embedded object  (0x225228a9 <String[8]: finished>)
0xffff582f6c04  code target (HANDLER)  (0xffff582e6060)
0xffff582f6c0c  embedded object  (0x225228a9 <String[8]: finished>)
0xffff582f6c18  code target (BUILTIN)  (0xffff58222420)
0xffff582f6c20  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = decodeStrings
compiler = unknown
Instructions (size = 152)
0xffff582f6cc0     0  sub csp, jssp, #0x8 (8)
0xffff582f6cc4     4  str x3, [jssp, #-8]!
0xffff582f6cc8     8  sub csp, jssp, #0x8 (8)
0xffff582f6ccc    12  str x4, [jssp, #-8]!
0xffff582f6cd0    16  ldr x3, pc+88 (addr 0x0000ffff582f6d28)    ;; object: 0x225e95f9 Cell for 0
0xffff582f6cd4    20  ldur x3, [x3, #7]
0xffff582f6cd8    24  cmp x3, #0x0 (0)
0xffff582f6cdc    28  b.ne #+0x30 (addr 0xffff582f6d0c)
0xffff582f6ce0    32  tbz w0, #0, #+0x2c (addr 0xffff582f6d0c)
0xffff582f6ce4    36  ldr x5, pc+76 (addr 0x0000ffff582f6d30)    ;; object: 0x225d1739 WeakCell for 0x32b382e9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f6ce8    40  ldur x5, [x5, #7]
0xffff582f6cec    44  tbz w5, #0, #+0x20 (addr 0xffff582f6d0c)
0xffff582f6cf0    48  ldursw x4, [x5, #15]
0xffff582f6cf4    52  tbnz w4, #23, #+0x18 (addr 0xffff582f6d0c)
0xffff582f6cf8    56  ldr x4, [jssp], #8
0xffff582f6cfc    60  ldr x3, [jssp], #8
0xffff582f6d00    64  ldr x2, pc+56 (addr 0x0000ffff582f6d38)    ;; object: 0x225228e9 <String[13]: decodeStrings>
0xffff582f6d04    68  ldr x16, pc+60 (addr 0x0000ffff582f6d40)    ;; code: HANDLER, StoreTransitionStub, minor: 198665
0xffff582f6d08    72  br x16
0xffff582f6d0c    76  ldr x2, pc+60 (addr 0x0000ffff582f6d48)    ;; object: 0x225228e9 <String[13]: decodeStrings>
0xffff582f6d10    80  ldr x4, [jssp], #8
0xffff582f6d14    84  ldr x3, [jssp], #8
0xffff582f6d18    88  ldr x16, pc+56 (addr 0x0000ffff582f6d50)    ;; code: BUILTIN
0xffff582f6d1c    92  br x16
0xffff582f6d20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f6d24   100  d63f03e0       constant
0xffff582f6d28   104  225e95f9       constant
0xffff582f6d2c   108  00000000       constant
0xffff582f6d30   112  225d1739       constant
0xffff582f6d34   116  00000000       constant
0xffff582f6d38   120  225228e9       constant
0xffff582f6d3c   124  00000000       constant
0xffff582f6d40   128  582e6400       constant
0xffff582f6d44   132  0000ffff       constant
0xffff582f6d48   136  225228e9       constant
0xffff582f6d4c   140  00000000       constant
0xffff582f6d50   144  58222420       constant
0xffff582f6d54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f6cd0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f6ce4  embedded object  (0x225d1739 WeakCell for 0x32b382e9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f6d00  embedded object  (0x225228e9 <String[13]: decodeStrings>)
0xffff582f6d04  code target (HANDLER)  (0xffff582e6400)
0xffff582f6d0c  embedded object  (0x225228e9 <String[13]: decodeStrings>)
0xffff582f6d18  code target (BUILTIN)  (0xffff58222420)
0xffff582f6d20  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = defaultEncoding
compiler = unknown
Instructions (size = 152)
0xffff582f6dc0     0  sub csp, jssp, #0x8 (8)
0xffff582f6dc4     4  str x3, [jssp, #-8]!
0xffff582f6dc8     8  sub csp, jssp, #0x8 (8)
0xffff582f6dcc    12  str x4, [jssp, #-8]!
0xffff582f6dd0    16  ldr x3, pc+88 (addr 0x0000ffff582f6e28)    ;; object: 0x225e95f9 Cell for 0
0xffff582f6dd4    20  ldur x3, [x3, #7]
0xffff582f6dd8    24  cmp x3, #0x0 (0)
0xffff582f6ddc    28  b.ne #+0x30 (addr 0xffff582f6e0c)
0xffff582f6de0    32  tbz w0, #0, #+0x2c (addr 0xffff582f6e0c)
0xffff582f6de4    36  ldr x5, pc+76 (addr 0x0000ffff582f6e30)    ;; object: 0x225d1751 WeakCell for 0x32b38341 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f6de8    40  ldur x5, [x5, #7]
0xffff582f6dec    44  tbz w5, #0, #+0x20 (addr 0xffff582f6e0c)
0xffff582f6df0    48  ldursw x4, [x5, #15]
0xffff582f6df4    52  tbnz w4, #23, #+0x18 (addr 0xffff582f6e0c)
0xffff582f6df8    56  ldr x4, [jssp], #8
0xffff582f6dfc    60  ldr x3, [jssp], #8
0xffff582f6e00    64  ldr x2, pc+56 (addr 0x0000ffff582f6e38)    ;; object: 0x2251da19 <String[15]: defaultEncoding>
0xffff582f6e04    68  ldr x16, pc+60 (addr 0x0000ffff582f6e40)    ;; code: HANDLER, StoreTransitionStub, minor: 198666
0xffff582f6e08    72  br x16
0xffff582f6e0c    76  ldr x2, pc+60 (addr 0x0000ffff582f6e48)    ;; object: 0x2251da19 <String[15]: defaultEncoding>
0xffff582f6e10    80  ldr x4, [jssp], #8
0xffff582f6e14    84  ldr x3, [jssp], #8
0xffff582f6e18    88  ldr x16, pc+56 (addr 0x0000ffff582f6e50)    ;; code: BUILTIN
0xffff582f6e1c    92  br x16
0xffff582f6e20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f6e24   100  d63f03e0       constant
0xffff582f6e28   104  225e95f9       constant
0xffff582f6e2c   108  00000000       constant
0xffff582f6e30   112  225d1751       constant
0xffff582f6e34   116  00000000       constant
0xffff582f6e38   120  2251da19       constant
0xffff582f6e3c   124  00000000       constant
0xffff582f6e40   128  582f5ba0       constant
0xffff582f6e44   132  0000ffff       constant
0xffff582f6e48   136  2251da19       constant
0xffff582f6e4c   140  00000000       constant
0xffff582f6e50   144  58222420       constant
0xffff582f6e54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f6dd0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f6de4  embedded object  (0x225d1751 WeakCell for 0x32b38341 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f6e00  embedded object  (0x2251da19 <String[15]: defaultEncoding>)
0xffff582f6e04  code target (HANDLER)  (0xffff582f5ba0)
0xffff582f6e0c  embedded object  (0x2251da19 <String[15]: defaultEncoding>)
0xffff582f6e18  code target (BUILTIN)  (0xffff58222420)
0xffff582f6e20  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f6ec0     0  mov x6, x0
0xffff582f6ec4     4  tbnz w6, #0, #+0x54 (addr 0xffff582f6f18)
0xffff582f6ec8     8  stur x6, [x1, #87]
0xffff582f6ecc    12  stur x5, [x1, #-1]
0xffff582f6ed0    16  tbz w5, #0, #+0x34 (addr 0xffff582f6f04)
0xffff582f6ed4    20  sub x2, x1, #0x1 (1)
0xffff582f6ed8    24  and x5, x5, #0xfffffffffff00000
0xffff582f6edc    28  ldr x5, [x5, #8]
0xffff582f6ee0    32  tbz w5, #1, #+0x24 (addr 0xffff582f6f04)
0xffff582f6ee4    36  and x5, x1, #0xfffffffffff00000
0xffff582f6ee8    40  ldr x5, [x5, #8]
0xffff582f6eec    44  tbz w5, #2, #+0x18 (addr 0xffff582f6f04)
0xffff582f6ef0    48  sub csp, jssp, #0x8 (8)
0xffff582f6ef4    52  str lr, [jssp, #-8]!
0xffff582f6ef8    56  ldr x16, pc+24 (addr 0x0000ffff582f6f10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f6efc    60  blr x16
0xffff582f6f00    64  ldr lr, [jssp], #8
0xffff582f6f04    68  ret
0xffff582f6f08    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f6f0c    76  d63f03e0       constant
0xffff582f6f10    80  58238080       constant
0xffff582f6f14    84  0000ffff       constant
0xffff582f6f18    88  movz x16, #0x0
0xffff582f6f1c    92  sub csp, jssp, #0x10 (16)
0xffff582f6f20    96  stp fp, lr, [jssp, #-16]!
0xffff582f6f24   100  bl #+0x4 (addr 0xffff582f6f28)
0xffff582f6f28   104  movz x17, #0xa00000000
0xffff582f6f2c   108  sub csp, jssp, #0x10 (16)
0xffff582f6f30   112  stp x17, cp, [jssp, #-16]!
0xffff582f6f34   116  add fp, jssp, #0x10 (16)
0xffff582f6f38   120  ldr x17, pc+24 (addr 0x0000ffff582f6f50)    ;; lazy deoptimization bailout 0
0xffff582f6f3c   124  add x17, x17, x16
0xffff582f6f40   128  br x17
0xffff582f6f44   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f6f48   136  d63f03e0       constant
0xffff582f6f4c   140  d503201f       constant
0xffff582f6f50   144  58006000       constant
0xffff582f6f54   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f6ef8  code target (STUB)  (0xffff58238080)
0xffff582f6f08  constant pool (size 16)
0xffff582f6f38  runtime entry
0xffff582f6f44  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f6ec0     0  mov x6, x0
0xffff582f6ec4     4  tbnz w6, #0, #+0x54 (addr 0xffff582f6f18)
0xffff582f6ec8     8  stur x6, [x1, #87]
0xffff582f6ecc    12  stur x5, [x1, #-1]
0xffff582f6ed0    16  tbz w5, #0, #+0x34 (addr 0xffff582f6f04)
0xffff582f6ed4    20  sub x2, x1, #0x1 (1)
0xffff582f6ed8    24  and x5, x5, #0xfffffffffff00000
0xffff582f6edc    28  ldr x5, [x5, #8]
0xffff582f6ee0    32  tbz w5, #1, #+0x24 (addr 0xffff582f6f04)
0xffff582f6ee4    36  and x5, x1, #0xfffffffffff00000
0xffff582f6ee8    40  ldr x5, [x5, #8]
0xffff582f6eec    44  tbz w5, #2, #+0x18 (addr 0xffff582f6f04)
0xffff582f6ef0    48  sub csp, jssp, #0x8 (8)
0xffff582f6ef4    52  str lr, [jssp, #-8]!
0xffff582f6ef8    56  ldr x16, pc+24 (addr 0x0000ffff582f6f10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f6efc    60  blr x16
0xffff582f6f00    64  ldr lr, [jssp], #8
0xffff582f6f04    68  ret
0xffff582f6f08    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f6f0c    76  d63f03e0       constant
0xffff582f6f10    80  58238080       constant
0xffff582f6f14    84  0000ffff       constant
0xffff582f6f18    88  movz x16, #0x0
0xffff582f6f1c    92  sub csp, jssp, #0x10 (16)
0xffff582f6f20    96  stp fp, lr, [jssp, #-16]!
0xffff582f6f24   100  bl #+0x4 (addr 0xffff582f6f28)
0xffff582f6f28   104  movz x17, #0xa00000000
0xffff582f6f2c   108  sub csp, jssp, #0x10 (16)
0xffff582f6f30   112  stp x17, cp, [jssp, #-16]!
0xffff582f6f34   116  add fp, jssp, #0x10 (16)
0xffff582f6f38   120  ldr x17, pc+24 (addr 0x0000ffff582f6f50)    ;; lazy deoptimization bailout 0
0xffff582f6f3c   124  add x17, x17, x16
0xffff582f6f40   128  br x17
0xffff582f6f44   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f6f48   136  d63f03e0       constant
0xffff582f6f4c   140  d503201f       constant
0xffff582f6f50   144  58006000       constant
0xffff582f6f54   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f6ef8  code target (STUB)  (0xffff58238080)
0xffff582f6f08  constant pool (size 16)
0xffff582f6f38  runtime entry
0xffff582f6f44  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = length
compiler = unknown
Instructions (size = 152)
0xffff582f6fc0     0  sub csp, jssp, #0x8 (8)
0xffff582f6fc4     4  str x3, [jssp, #-8]!
0xffff582f6fc8     8  sub csp, jssp, #0x8 (8)
0xffff582f6fcc    12  str x4, [jssp, #-8]!
0xffff582f6fd0    16  ldr x3, pc+88 (addr 0x0000ffff582f7028)    ;; object: 0x225e95f9 Cell for 0
0xffff582f6fd4    20  ldur x3, [x3, #7]
0xffff582f6fd8    24  cmp x3, #0x0 (0)
0xffff582f6fdc    28  b.ne #+0x2c (addr 0xffff582f7008)
0xffff582f6fe0    32  ldr x5, pc+80 (addr 0x0000ffff582f7030)    ;; object: 0x225d1769 WeakCell for 0x32b38399 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f6fe4    36  ldur x5, [x5, #7]
0xffff582f6fe8    40  tbz w5, #0, #+0x20 (addr 0xffff582f7008)
0xffff582f6fec    44  ldursw x4, [x5, #15]
0xffff582f6ff0    48  tbnz w4, #23, #+0x18 (addr 0xffff582f7008)
0xffff582f6ff4    52  ldr x4, [jssp], #8
0xffff582f6ff8    56  ldr x3, [jssp], #8
0xffff582f6ffc    60  ldr x2, pc+60 (addr 0x0000ffff582f7038)    ;; object: 0x39c05141 <String[6]: length>
0xffff582f7000    64  ldr x16, pc+64 (addr 0x0000ffff582f7040)    ;; code: HANDLER, StoreTransitionStub, minor: 174091
0xffff582f7004    68  br x16
0xffff582f7008    72  ldr x2, pc+64 (addr 0x0000ffff582f7048)    ;; object: 0x39c05141 <String[6]: length>
0xffff582f700c    76  ldr x4, [jssp], #8
0xffff582f7010    80  ldr x3, [jssp], #8
0xffff582f7014    84  ldr x16, pc+60 (addr 0x0000ffff582f7050)    ;; code: BUILTIN
0xffff582f7018    88  br x16
0xffff582f701c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582f7020    96  d63f03e0       constant
0xffff582f7024   100  d503201f       constant
0xffff582f7028   104  225e95f9       constant
0xffff582f702c   108  00000000       constant
0xffff582f7030   112  225d1769       constant
0xffff582f7034   116  00000000       constant
0xffff582f7038   120  39c05141       constant
0xffff582f703c   124  00000000       constant
0xffff582f7040   128  582f6ec0       constant
0xffff582f7044   132  0000ffff       constant
0xffff582f7048   136  39c05141       constant
0xffff582f704c   140  00000000       constant
0xffff582f7050   144  58222420       constant
0xffff582f7054   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f6fd0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f6fe0  embedded object  (0x225d1769 WeakCell for 0x32b38399 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f6ffc  embedded object  (0x39c05141 <String[6]: length>)
0xffff582f7000  code target (HANDLER)  (0xffff582f6ec0)
0xffff582f7008  embedded object  (0x39c05141 <String[6]: length>)
0xffff582f7014  code target (BUILTIN)  (0xffff58222420)
0xffff582f701c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f70c0     0  tbz w0, #0, #+0x90 (addr 0xffff582f7150)
0xffff582f70c4     4  mov x2, x0
0xffff582f70c8     8  stur x2, [x1, #95]
0xffff582f70cc    12  add x3, x1, #0x5f (95)
0xffff582f70d0    16  and x2, x2, #0xfffffffffff00000
0xffff582f70d4    20  ldr x2, [x2, #8]
0xffff582f70d8    24  tbz w2, #1, #+0x24 (addr 0xffff582f70fc)
0xffff582f70dc    28  and x2, x1, #0xfffffffffff00000
0xffff582f70e0    32  ldr x2, [x2, #8]
0xffff582f70e4    36  tbz w2, #2, #+0x18 (addr 0xffff582f70fc)
0xffff582f70e8    40  sub csp, jssp, #0x8 (8)
0xffff582f70ec    44  str lr, [jssp, #-8]!
0xffff582f70f0    48  ldr x16, pc+80 (addr 0x0000ffff582f7140)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f70f4    52  blr x16
0xffff582f70f8    56  ldr lr, [jssp], #8
0xffff582f70fc    60  stur x5, [x1, #-1]
0xffff582f7100    64  tbz w5, #0, #+0x34 (addr 0xffff582f7134)
0xffff582f7104    68  sub x2, x1, #0x1 (1)
0xffff582f7108    72  and x5, x5, #0xfffffffffff00000
0xffff582f710c    76  ldr x5, [x5, #8]
0xffff582f7110    80  tbz w5, #1, #+0x24 (addr 0xffff582f7134)
0xffff582f7114    84  and x5, x1, #0xfffffffffff00000
0xffff582f7118    88  ldr x5, [x5, #8]
0xffff582f711c    92  tbz w5, #2, #+0x18 (addr 0xffff582f7134)
0xffff582f7120    96  sub csp, jssp, #0x8 (8)
0xffff582f7124   100  str lr, [jssp, #-8]!
0xffff582f7128   104  ldr x16, pc+32 (addr 0x0000ffff582f7148)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f712c   108  blr x16
0xffff582f7130   112  ldr lr, [jssp], #8
0xffff582f7134   116  ret
0xffff582f7138   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f713c   124  d63f03e0       constant
0xffff582f7140   128  582170c0       constant
0xffff582f7144   132  0000ffff       constant
0xffff582f7148   136  58238080       constant
0xffff582f714c   140  0000ffff       constant
0xffff582f7150   144  movz x16, #0x0
0xffff582f7154   148  sub csp, jssp, #0x10 (16)
0xffff582f7158   152  stp fp, lr, [jssp, #-16]!
0xffff582f715c   156  bl #+0x4 (addr 0xffff582f7160)
0xffff582f7160   160  movz x17, #0xa00000000
0xffff582f7164   164  sub csp, jssp, #0x10 (16)
0xffff582f7168   168  stp x17, cp, [jssp, #-16]!
0xffff582f716c   172  add fp, jssp, #0x10 (16)
0xffff582f7170   176  ldr x17, pc+24 (addr 0x0000ffff582f7188)    ;; lazy deoptimization bailout 0
0xffff582f7174   180  add x17, x17, x16
0xffff582f7178   184  br x17
0xffff582f717c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f7180   192  d63f03e0       constant
0xffff582f7184   196  d503201f       constant
0xffff582f7188   200  58006000       constant
0xffff582f718c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f70f0  code target (STUB)  (0xffff582170c0)
0xffff582f7128  code target (STUB)  (0xffff58238080)
0xffff582f7138  constant pool (size 24)
0xffff582f7170  runtime entry
0xffff582f717c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f70c0     0  tbz w0, #0, #+0x90 (addr 0xffff582f7150)
0xffff582f70c4     4  mov x2, x0
0xffff582f70c8     8  stur x2, [x1, #95]
0xffff582f70cc    12  add x3, x1, #0x5f (95)
0xffff582f70d0    16  and x2, x2, #0xfffffffffff00000
0xffff582f70d4    20  ldr x2, [x2, #8]
0xffff582f70d8    24  tbz w2, #1, #+0x24 (addr 0xffff582f70fc)
0xffff582f70dc    28  and x2, x1, #0xfffffffffff00000
0xffff582f70e0    32  ldr x2, [x2, #8]
0xffff582f70e4    36  tbz w2, #2, #+0x18 (addr 0xffff582f70fc)
0xffff582f70e8    40  sub csp, jssp, #0x8 (8)
0xffff582f70ec    44  str lr, [jssp, #-8]!
0xffff582f70f0    48  ldr x16, pc+80 (addr 0x0000ffff582f7140)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f70f4    52  blr x16
0xffff582f70f8    56  ldr lr, [jssp], #8
0xffff582f70fc    60  stur x5, [x1, #-1]
0xffff582f7100    64  tbz w5, #0, #+0x34 (addr 0xffff582f7134)
0xffff582f7104    68  sub x2, x1, #0x1 (1)
0xffff582f7108    72  and x5, x5, #0xfffffffffff00000
0xffff582f710c    76  ldr x5, [x5, #8]
0xffff582f7110    80  tbz w5, #1, #+0x24 (addr 0xffff582f7134)
0xffff582f7114    84  and x5, x1, #0xfffffffffff00000
0xffff582f7118    88  ldr x5, [x5, #8]
0xffff582f711c    92  tbz w5, #2, #+0x18 (addr 0xffff582f7134)
0xffff582f7120    96  sub csp, jssp, #0x8 (8)
0xffff582f7124   100  str lr, [jssp, #-8]!
0xffff582f7128   104  ldr x16, pc+32 (addr 0x0000ffff582f7148)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f712c   108  blr x16
0xffff582f7130   112  ldr lr, [jssp], #8
0xffff582f7134   116  ret
0xffff582f7138   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f713c   124  d63f03e0       constant
0xffff582f7140   128  582170c0       constant
0xffff582f7144   132  0000ffff       constant
0xffff582f7148   136  58238080       constant
0xffff582f714c   140  0000ffff       constant
0xffff582f7150   144  movz x16, #0x0
0xffff582f7154   148  sub csp, jssp, #0x10 (16)
0xffff582f7158   152  stp fp, lr, [jssp, #-16]!
0xffff582f715c   156  bl #+0x4 (addr 0xffff582f7160)
0xffff582f7160   160  movz x17, #0xa00000000
0xffff582f7164   164  sub csp, jssp, #0x10 (16)
0xffff582f7168   168  stp x17, cp, [jssp, #-16]!
0xffff582f716c   172  add fp, jssp, #0x10 (16)
0xffff582f7170   176  ldr x17, pc+24 (addr 0x0000ffff582f7188)    ;; lazy deoptimization bailout 0
0xffff582f7174   180  add x17, x17, x16
0xffff582f7178   184  br x17
0xffff582f717c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f7180   192  d63f03e0       constant
0xffff582f7184   196  d503201f       constant
0xffff582f7188   200  58006000       constant
0xffff582f718c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f70f0  code target (STUB)  (0xffff582170c0)
0xffff582f7128  code target (STUB)  (0xffff58238080)
0xffff582f7138  constant pool (size 24)
0xffff582f7170  runtime entry
0xffff582f717c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = writing
compiler = unknown
Instructions (size = 152)
0xffff582f7200     0  sub csp, jssp, #0x8 (8)
0xffff582f7204     4  str x3, [jssp, #-8]!
0xffff582f7208     8  sub csp, jssp, #0x8 (8)
0xffff582f720c    12  str x4, [jssp, #-8]!
0xffff582f7210    16  ldr x3, pc+88 (addr 0x0000ffff582f7268)    ;; object: 0x225e95f9 Cell for 0
0xffff582f7214    20  ldur x3, [x3, #7]
0xffff582f7218    24  cmp x3, #0x0 (0)
0xffff582f721c    28  b.ne #+0x30 (addr 0xffff582f724c)
0xffff582f7220    32  tbz w0, #0, #+0x2c (addr 0xffff582f724c)
0xffff582f7224    36  ldr x5, pc+76 (addr 0x0000ffff582f7270)    ;; object: 0x225d1781 WeakCell for 0x32b383f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f7228    40  ldur x5, [x5, #7]
0xffff582f722c    44  tbz w5, #0, #+0x20 (addr 0xffff582f724c)
0xffff582f7230    48  ldursw x4, [x5, #15]
0xffff582f7234    52  tbnz w4, #23, #+0x18 (addr 0xffff582f724c)
0xffff582f7238    56  ldr x4, [jssp], #8
0xffff582f723c    60  ldr x3, [jssp], #8
0xffff582f7240    64  ldr x2, pc+56 (addr 0x0000ffff582f7278)    ;; object: 0x22522911 <String[7]: writing>
0xffff582f7244    68  ldr x16, pc+60 (addr 0x0000ffff582f7280)    ;; code: HANDLER, StoreTransitionStub, minor: 198668
0xffff582f7248    72  br x16
0xffff582f724c    76  ldr x2, pc+60 (addr 0x0000ffff582f7288)    ;; object: 0x22522911 <String[7]: writing>
0xffff582f7250    80  ldr x4, [jssp], #8
0xffff582f7254    84  ldr x3, [jssp], #8
0xffff582f7258    88  ldr x16, pc+56 (addr 0x0000ffff582f7290)    ;; code: BUILTIN
0xffff582f725c    92  br x16
0xffff582f7260    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f7264   100  d63f03e0       constant
0xffff582f7268   104  225e95f9       constant
0xffff582f726c   108  00000000       constant
0xffff582f7270   112  225d1781       constant
0xffff582f7274   116  00000000       constant
0xffff582f7278   120  22522911       constant
0xffff582f727c   124  00000000       constant
0xffff582f7280   128  582f70c0       constant
0xffff582f7284   132  0000ffff       constant
0xffff582f7288   136  22522911       constant
0xffff582f728c   140  00000000       constant
0xffff582f7290   144  58222420       constant
0xffff582f7294   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f7210  embedded object  (0x225e95f9 Cell for 0)
0xffff582f7224  embedded object  (0x225d1781 WeakCell for 0x32b383f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f7240  embedded object  (0x22522911 <String[7]: writing>)
0xffff582f7244  code target (HANDLER)  (0xffff582f70c0)
0xffff582f724c  embedded object  (0x22522911 <String[7]: writing>)
0xffff582f7258  code target (BUILTIN)  (0xffff58222420)
0xffff582f7260  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f7300     0  mov x6, x0
0xffff582f7304     4  tbnz w6, #0, #+0x54 (addr 0xffff582f7358)
0xffff582f7308     8  stur x6, [x1, #103]
0xffff582f730c    12  stur x5, [x1, #-1]
0xffff582f7310    16  tbz w5, #0, #+0x34 (addr 0xffff582f7344)
0xffff582f7314    20  sub x2, x1, #0x1 (1)
0xffff582f7318    24  and x5, x5, #0xfffffffffff00000
0xffff582f731c    28  ldr x5, [x5, #8]
0xffff582f7320    32  tbz w5, #1, #+0x24 (addr 0xffff582f7344)
0xffff582f7324    36  and x5, x1, #0xfffffffffff00000
0xffff582f7328    40  ldr x5, [x5, #8]
0xffff582f732c    44  tbz w5, #2, #+0x18 (addr 0xffff582f7344)
0xffff582f7330    48  sub csp, jssp, #0x8 (8)
0xffff582f7334    52  str lr, [jssp, #-8]!
0xffff582f7338    56  ldr x16, pc+24 (addr 0x0000ffff582f7350)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f733c    60  blr x16
0xffff582f7340    64  ldr lr, [jssp], #8
0xffff582f7344    68  ret
0xffff582f7348    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f734c    76  d63f03e0       constant
0xffff582f7350    80  58238080       constant
0xffff582f7354    84  0000ffff       constant
0xffff582f7358    88  movz x16, #0x0
0xffff582f735c    92  sub csp, jssp, #0x10 (16)
0xffff582f7360    96  stp fp, lr, [jssp, #-16]!
0xffff582f7364   100  bl #+0x4 (addr 0xffff582f7368)
0xffff582f7368   104  movz x17, #0xa00000000
0xffff582f736c   108  sub csp, jssp, #0x10 (16)
0xffff582f7370   112  stp x17, cp, [jssp, #-16]!
0xffff582f7374   116  add fp, jssp, #0x10 (16)
0xffff582f7378   120  ldr x17, pc+24 (addr 0x0000ffff582f7390)    ;; lazy deoptimization bailout 0
0xffff582f737c   124  add x17, x17, x16
0xffff582f7380   128  br x17
0xffff582f7384   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f7388   136  d63f03e0       constant
0xffff582f738c   140  d503201f       constant
0xffff582f7390   144  58006000       constant
0xffff582f7394   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f7338  code target (STUB)  (0xffff58238080)
0xffff582f7348  constant pool (size 16)
0xffff582f7378  runtime entry
0xffff582f7384  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f7300     0  mov x6, x0
0xffff582f7304     4  tbnz w6, #0, #+0x54 (addr 0xffff582f7358)
0xffff582f7308     8  stur x6, [x1, #103]
0xffff582f730c    12  stur x5, [x1, #-1]
0xffff582f7310    16  tbz w5, #0, #+0x34 (addr 0xffff582f7344)
0xffff582f7314    20  sub x2, x1, #0x1 (1)
0xffff582f7318    24  and x5, x5, #0xfffffffffff00000
0xffff582f731c    28  ldr x5, [x5, #8]
0xffff582f7320    32  tbz w5, #1, #+0x24 (addr 0xffff582f7344)
0xffff582f7324    36  and x5, x1, #0xfffffffffff00000
0xffff582f7328    40  ldr x5, [x5, #8]
0xffff582f732c    44  tbz w5, #2, #+0x18 (addr 0xffff582f7344)
0xffff582f7330    48  sub csp, jssp, #0x8 (8)
0xffff582f7334    52  str lr, [jssp, #-8]!
0xffff582f7338    56  ldr x16, pc+24 (addr 0x0000ffff582f7350)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f733c    60  blr x16
0xffff582f7340    64  ldr lr, [jssp], #8
0xffff582f7344    68  ret
0xffff582f7348    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f734c    76  d63f03e0       constant
0xffff582f7350    80  58238080       constant
0xffff582f7354    84  0000ffff       constant
0xffff582f7358    88  movz x16, #0x0
0xffff582f735c    92  sub csp, jssp, #0x10 (16)
0xffff582f7360    96  stp fp, lr, [jssp, #-16]!
0xffff582f7364   100  bl #+0x4 (addr 0xffff582f7368)
0xffff582f7368   104  movz x17, #0xa00000000
0xffff582f736c   108  sub csp, jssp, #0x10 (16)
0xffff582f7370   112  stp x17, cp, [jssp, #-16]!
0xffff582f7374   116  add fp, jssp, #0x10 (16)
0xffff582f7378   120  ldr x17, pc+24 (addr 0x0000ffff582f7390)    ;; lazy deoptimization bailout 0
0xffff582f737c   124  add x17, x17, x16
0xffff582f7380   128  br x17
0xffff582f7384   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f7388   136  d63f03e0       constant
0xffff582f738c   140  d503201f       constant
0xffff582f7390   144  58006000       constant
0xffff582f7394   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f7338  code target (STUB)  (0xffff58238080)
0xffff582f7348  constant pool (size 16)
0xffff582f7378  runtime entry
0xffff582f7384  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = corked
compiler = unknown
Instructions (size = 152)
0xffff582f7400     0  sub csp, jssp, #0x8 (8)
0xffff582f7404     4  str x3, [jssp, #-8]!
0xffff582f7408     8  sub csp, jssp, #0x8 (8)
0xffff582f740c    12  str x4, [jssp, #-8]!
0xffff582f7410    16  ldr x3, pc+88 (addr 0x0000ffff582f7468)    ;; object: 0x225e95f9 Cell for 0
0xffff582f7414    20  ldur x3, [x3, #7]
0xffff582f7418    24  cmp x3, #0x0 (0)
0xffff582f741c    28  b.ne #+0x2c (addr 0xffff582f7448)
0xffff582f7420    32  ldr x5, pc+80 (addr 0x0000ffff582f7470)    ;; object: 0x225d1799 WeakCell for 0x32b38449 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f7424    36  ldur x5, [x5, #7]
0xffff582f7428    40  tbz w5, #0, #+0x20 (addr 0xffff582f7448)
0xffff582f742c    44  ldursw x4, [x5, #15]
0xffff582f7430    48  tbnz w4, #23, #+0x18 (addr 0xffff582f7448)
0xffff582f7434    52  ldr x4, [jssp], #8
0xffff582f7438    56  ldr x3, [jssp], #8
0xffff582f743c    60  ldr x2, pc+60 (addr 0x0000ffff582f7478)    ;; object: 0x22522931 <String[6]: corked>
0xffff582f7440    64  ldr x16, pc+64 (addr 0x0000ffff582f7480)    ;; code: HANDLER, StoreTransitionStub, minor: 174093
0xffff582f7444    68  br x16
0xffff582f7448    72  ldr x2, pc+64 (addr 0x0000ffff582f7488)    ;; object: 0x22522931 <String[6]: corked>
0xffff582f744c    76  ldr x4, [jssp], #8
0xffff582f7450    80  ldr x3, [jssp], #8
0xffff582f7454    84  ldr x16, pc+60 (addr 0x0000ffff582f7490)    ;; code: BUILTIN
0xffff582f7458    88  br x16
0xffff582f745c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582f7460    96  d63f03e0       constant
0xffff582f7464   100  d503201f       constant
0xffff582f7468   104  225e95f9       constant
0xffff582f746c   108  00000000       constant
0xffff582f7470   112  225d1799       constant
0xffff582f7474   116  00000000       constant
0xffff582f7478   120  22522931       constant
0xffff582f747c   124  00000000       constant
0xffff582f7480   128  582f7300       constant
0xffff582f7484   132  0000ffff       constant
0xffff582f7488   136  22522931       constant
0xffff582f748c   140  00000000       constant
0xffff582f7490   144  58222420       constant
0xffff582f7494   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f7410  embedded object  (0x225e95f9 Cell for 0)
0xffff582f7420  embedded object  (0x225d1799 WeakCell for 0x32b38449 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f743c  embedded object  (0x22522931 <String[6]: corked>)
0xffff582f7440  code target (HANDLER)  (0xffff582f7300)
0xffff582f7448  embedded object  (0x22522931 <String[6]: corked>)
0xffff582f7454  code target (BUILTIN)  (0xffff58222420)
0xffff582f745c  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = sync
compiler = unknown
Instructions (size = 152)
0xffff582f7500     0  sub csp, jssp, #0x8 (8)
0xffff582f7504     4  str x3, [jssp, #-8]!
0xffff582f7508     8  sub csp, jssp, #0x8 (8)
0xffff582f750c    12  str x4, [jssp, #-8]!
0xffff582f7510    16  ldr x3, pc+88 (addr 0x0000ffff582f7568)    ;; object: 0x225e95f9 Cell for 0
0xffff582f7514    20  ldur x3, [x3, #7]
0xffff582f7518    24  cmp x3, #0x0 (0)
0xffff582f751c    28  b.ne #+0x30 (addr 0xffff582f754c)
0xffff582f7520    32  tbz w0, #0, #+0x2c (addr 0xffff582f754c)
0xffff582f7524    36  ldr x5, pc+76 (addr 0x0000ffff582f7570)    ;; object: 0x225d17b1 WeakCell for 0x32b384a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f7528    40  ldur x5, [x5, #7]
0xffff582f752c    44  tbz w5, #0, #+0x20 (addr 0xffff582f754c)
0xffff582f7530    48  ldursw x4, [x5, #15]
0xffff582f7534    52  tbnz w4, #23, #+0x18 (addr 0xffff582f754c)
0xffff582f7538    56  ldr x4, [jssp], #8
0xffff582f753c    60  ldr x3, [jssp], #8
0xffff582f7540    64  ldr x2, pc+56 (addr 0x0000ffff582f7578)    ;; object: 0x2251d951 <String[4]: sync>
0xffff582f7544    68  ldr x16, pc+60 (addr 0x0000ffff582f7580)    ;; code: HANDLER, StoreTransitionStub, minor: 198670
0xffff582f7548    72  br x16
0xffff582f754c    76  ldr x2, pc+60 (addr 0x0000ffff582f7588)    ;; object: 0x2251d951 <String[4]: sync>
0xffff582f7550    80  ldr x4, [jssp], #8
0xffff582f7554    84  ldr x3, [jssp], #8
0xffff582f7558    88  ldr x16, pc+56 (addr 0x0000ffff582f7590)    ;; code: BUILTIN
0xffff582f755c    92  br x16
0xffff582f7560    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f7564   100  d63f03e0       constant
0xffff582f7568   104  225e95f9       constant
0xffff582f756c   108  00000000       constant
0xffff582f7570   112  225d17b1       constant
0xffff582f7574   116  00000000       constant
0xffff582f7578   120  2251d951       constant
0xffff582f757c   124  00000000       constant
0xffff582f7580   128  582d4d00       constant
0xffff582f7584   132  0000ffff       constant
0xffff582f7588   136  2251d951       constant
0xffff582f758c   140  00000000       constant
0xffff582f7590   144  58222420       constant
0xffff582f7594   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f7510  embedded object  (0x225e95f9 Cell for 0)
0xffff582f7524  embedded object  (0x225d17b1 WeakCell for 0x32b384a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f7540  embedded object  (0x2251d951 <String[4]: sync>)
0xffff582f7544  code target (HANDLER)  (0xffff582d4d00)
0xffff582f754c  embedded object  (0x2251d951 <String[4]: sync>)
0xffff582f7558  code target (BUILTIN)  (0xffff58222420)
0xffff582f7560  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = bufferProcessing
compiler = unknown
Instructions (size = 152)
0xffff582f7600     0  sub csp, jssp, #0x8 (8)
0xffff582f7604     4  str x3, [jssp, #-8]!
0xffff582f7608     8  sub csp, jssp, #0x8 (8)
0xffff582f760c    12  str x4, [jssp, #-8]!
0xffff582f7610    16  ldr x3, pc+88 (addr 0x0000ffff582f7668)    ;; object: 0x225e95f9 Cell for 0
0xffff582f7614    20  ldur x3, [x3, #7]
0xffff582f7618    24  cmp x3, #0x0 (0)
0xffff582f761c    28  b.ne #+0x30 (addr 0xffff582f764c)
0xffff582f7620    32  tbz w0, #0, #+0x2c (addr 0xffff582f764c)
0xffff582f7624    36  ldr x5, pc+76 (addr 0x0000ffff582f7670)    ;; object: 0x225d17c9 WeakCell for 0x32b384f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f7628    40  ldur x5, [x5, #7]
0xffff582f762c    44  tbz w5, #0, #+0x20 (addr 0xffff582f764c)
0xffff582f7630    48  ldursw x4, [x5, #15]
0xffff582f7634    52  tbnz w4, #23, #+0x18 (addr 0xffff582f764c)
0xffff582f7638    56  ldr x4, [jssp], #8
0xffff582f763c    60  ldr x3, [jssp], #8
0xffff582f7640    64  ldr x2, pc+56 (addr 0x0000ffff582f7678)    ;; object: 0x22522951 <String[16]: bufferProcessing>
0xffff582f7644    68  ldr x16, pc+60 (addr 0x0000ffff582f7680)    ;; code: HANDLER, StoreTransitionStub, minor: 198671
0xffff582f7648    72  br x16
0xffff582f764c    76  ldr x2, pc+60 (addr 0x0000ffff582f7688)    ;; object: 0x22522951 <String[16]: bufferProcessing>
0xffff582f7650    80  ldr x4, [jssp], #8
0xffff582f7654    84  ldr x3, [jssp], #8
0xffff582f7658    88  ldr x16, pc+56 (addr 0x0000ffff582f7690)    ;; code: BUILTIN
0xffff582f765c    92  br x16
0xffff582f7660    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f7664   100  d63f03e0       constant
0xffff582f7668   104  225e95f9       constant
0xffff582f766c   108  00000000       constant
0xffff582f7670   112  225d17c9       constant
0xffff582f7674   116  00000000       constant
0xffff582f7678   120  22522951       constant
0xffff582f767c   124  00000000       constant
0xffff582f7680   128  582d4f60       constant
0xffff582f7684   132  0000ffff       constant
0xffff582f7688   136  22522951       constant
0xffff582f768c   140  00000000       constant
0xffff582f7690   144  58222420       constant
0xffff582f7694   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f7610  embedded object  (0x225e95f9 Cell for 0)
0xffff582f7624  embedded object  (0x225d17c9 WeakCell for 0x32b384f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f7640  embedded object  (0x22522951 <String[16]: bufferProcessing>)
0xffff582f7644  code target (HANDLER)  (0xffff582d4f60)
0xffff582f764c  embedded object  (0x22522951 <String[16]: bufferProcessing>)
0xffff582f7658  code target (BUILTIN)  (0xffff58222420)
0xffff582f7660  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = onwrite
compiler = unknown
Instructions (size = 152)
0xffff582f7700     0  sub csp, jssp, #0x8 (8)
0xffff582f7704     4  str x3, [jssp, #-8]!
0xffff582f7708     8  sub csp, jssp, #0x8 (8)
0xffff582f770c    12  str x4, [jssp, #-8]!
0xffff582f7710    16  ldr x3, pc+88 (addr 0x0000ffff582f7768)    ;; object: 0x225e95f9 Cell for 0
0xffff582f7714    20  ldur x3, [x3, #7]
0xffff582f7718    24  cmp x3, #0x0 (0)
0xffff582f771c    28  b.ne #+0x30 (addr 0xffff582f774c)
0xffff582f7720    32  tbz w0, #0, #+0x2c (addr 0xffff582f774c)
0xffff582f7724    36  ldr x5, pc+76 (addr 0x0000ffff582f7770)    ;; object: 0x225e9b69 WeakCell for 0x32b40691 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f7728    40  ldur x5, [x5, #7]
0xffff582f772c    44  tbz w5, #0, #+0x20 (addr 0xffff582f774c)
0xffff582f7730    48  ldursw x4, [x5, #15]
0xffff582f7734    52  tbnz w4, #23, #+0x18 (addr 0xffff582f774c)
0xffff582f7738    56  ldr x4, [jssp], #8
0xffff582f773c    60  ldr x3, [jssp], #8
0xffff582f7740    64  ldr x2, pc+56 (addr 0x0000ffff582f7778)    ;; object: 0x39cb2dc1 <String[7]: onwrite>
0xffff582f7744    68  ldr x16, pc+60 (addr 0x0000ffff582f7780)    ;; code: HANDLER, StoreTransitionStub, minor: 198672
0xffff582f7748    72  br x16
0xffff582f774c    76  ldr x2, pc+60 (addr 0x0000ffff582f7788)    ;; object: 0x39cb2dc1 <String[7]: onwrite>
0xffff582f7750    80  ldr x4, [jssp], #8
0xffff582f7754    84  ldr x3, [jssp], #8
0xffff582f7758    88  ldr x16, pc+56 (addr 0x0000ffff582f7790)    ;; code: BUILTIN
0xffff582f775c    92  br x16
0xffff582f7760    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f7764   100  d63f03e0       constant
0xffff582f7768   104  225e95f9       constant
0xffff582f776c   108  00000000       constant
0xffff582f7770   112  225e9b69       constant
0xffff582f7774   116  00000000       constant
0xffff582f7778   120  39cb2dc1       constant
0xffff582f777c   124  00000000       constant
0xffff582f7780   128  582d51c0       constant
0xffff582f7784   132  0000ffff       constant
0xffff582f7788   136  39cb2dc1       constant
0xffff582f778c   140  00000000       constant
0xffff582f7790   144  58222420       constant
0xffff582f7794   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f7710  embedded object  (0x225e95f9 Cell for 0)
0xffff582f7724  embedded object  (0x225e9b69 WeakCell for 0x32b40691 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f7740  embedded object  (0x39cb2dc1 <String[7]: onwrite>)
0xffff582f7744  code target (HANDLER)  (0xffff582d51c0)
0xffff582f774c  embedded object  (0x39cb2dc1 <String[7]: onwrite>)
0xffff582f7758  code target (BUILTIN)  (0xffff58222420)
0xffff582f7760  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f7800     0  tbz w0, #0, #+0x90 (addr 0xffff582f7890)
0xffff582f7804     4  mov x2, x0
0xffff582f7808     8  stur x2, [x1, #135]
0xffff582f780c    12  add x3, x1, #0x87 (135)
0xffff582f7810    16  and x2, x2, #0xfffffffffff00000
0xffff582f7814    20  ldr x2, [x2, #8]
0xffff582f7818    24  tbz w2, #1, #+0x24 (addr 0xffff582f783c)
0xffff582f781c    28  and x2, x1, #0xfffffffffff00000
0xffff582f7820    32  ldr x2, [x2, #8]
0xffff582f7824    36  tbz w2, #2, #+0x18 (addr 0xffff582f783c)
0xffff582f7828    40  sub csp, jssp, #0x8 (8)
0xffff582f782c    44  str lr, [jssp, #-8]!
0xffff582f7830    48  ldr x16, pc+80 (addr 0x0000ffff582f7880)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f7834    52  blr x16
0xffff582f7838    56  ldr lr, [jssp], #8
0xffff582f783c    60  stur x5, [x1, #-1]
0xffff582f7840    64  tbz w5, #0, #+0x34 (addr 0xffff582f7874)
0xffff582f7844    68  sub x2, x1, #0x1 (1)
0xffff582f7848    72  and x5, x5, #0xfffffffffff00000
0xffff582f784c    76  ldr x5, [x5, #8]
0xffff582f7850    80  tbz w5, #1, #+0x24 (addr 0xffff582f7874)
0xffff582f7854    84  and x5, x1, #0xfffffffffff00000
0xffff582f7858    88  ldr x5, [x5, #8]
0xffff582f785c    92  tbz w5, #2, #+0x18 (addr 0xffff582f7874)
0xffff582f7860    96  sub csp, jssp, #0x8 (8)
0xffff582f7864   100  str lr, [jssp, #-8]!
0xffff582f7868   104  ldr x16, pc+32 (addr 0x0000ffff582f7888)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f786c   108  blr x16
0xffff582f7870   112  ldr lr, [jssp], #8
0xffff582f7874   116  ret
0xffff582f7878   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f787c   124  d63f03e0       constant
0xffff582f7880   128  582170c0       constant
0xffff582f7884   132  0000ffff       constant
0xffff582f7888   136  58238080       constant
0xffff582f788c   140  0000ffff       constant
0xffff582f7890   144  movz x16, #0x0
0xffff582f7894   148  sub csp, jssp, #0x10 (16)
0xffff582f7898   152  stp fp, lr, [jssp, #-16]!
0xffff582f789c   156  bl #+0x4 (addr 0xffff582f78a0)
0xffff582f78a0   160  movz x17, #0xa00000000
0xffff582f78a4   164  sub csp, jssp, #0x10 (16)
0xffff582f78a8   168  stp x17, cp, [jssp, #-16]!
0xffff582f78ac   172  add fp, jssp, #0x10 (16)
0xffff582f78b0   176  ldr x17, pc+24 (addr 0x0000ffff582f78c8)    ;; lazy deoptimization bailout 0
0xffff582f78b4   180  add x17, x17, x16
0xffff582f78b8   184  br x17
0xffff582f78bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f78c0   192  d63f03e0       constant
0xffff582f78c4   196  d503201f       constant
0xffff582f78c8   200  58006000       constant
0xffff582f78cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f7830  code target (STUB)  (0xffff582170c0)
0xffff582f7868  code target (STUB)  (0xffff58238080)
0xffff582f7878  constant pool (size 24)
0xffff582f78b0  runtime entry
0xffff582f78bc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f7800     0  tbz w0, #0, #+0x90 (addr 0xffff582f7890)
0xffff582f7804     4  mov x2, x0
0xffff582f7808     8  stur x2, [x1, #135]
0xffff582f780c    12  add x3, x1, #0x87 (135)
0xffff582f7810    16  and x2, x2, #0xfffffffffff00000
0xffff582f7814    20  ldr x2, [x2, #8]
0xffff582f7818    24  tbz w2, #1, #+0x24 (addr 0xffff582f783c)
0xffff582f781c    28  and x2, x1, #0xfffffffffff00000
0xffff582f7820    32  ldr x2, [x2, #8]
0xffff582f7824    36  tbz w2, #2, #+0x18 (addr 0xffff582f783c)
0xffff582f7828    40  sub csp, jssp, #0x8 (8)
0xffff582f782c    44  str lr, [jssp, #-8]!
0xffff582f7830    48  ldr x16, pc+80 (addr 0x0000ffff582f7880)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f7834    52  blr x16
0xffff582f7838    56  ldr lr, [jssp], #8
0xffff582f783c    60  stur x5, [x1, #-1]
0xffff582f7840    64  tbz w5, #0, #+0x34 (addr 0xffff582f7874)
0xffff582f7844    68  sub x2, x1, #0x1 (1)
0xffff582f7848    72  and x5, x5, #0xfffffffffff00000
0xffff582f784c    76  ldr x5, [x5, #8]
0xffff582f7850    80  tbz w5, #1, #+0x24 (addr 0xffff582f7874)
0xffff582f7854    84  and x5, x1, #0xfffffffffff00000
0xffff582f7858    88  ldr x5, [x5, #8]
0xffff582f785c    92  tbz w5, #2, #+0x18 (addr 0xffff582f7874)
0xffff582f7860    96  sub csp, jssp, #0x8 (8)
0xffff582f7864   100  str lr, [jssp, #-8]!
0xffff582f7868   104  ldr x16, pc+32 (addr 0x0000ffff582f7888)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f786c   108  blr x16
0xffff582f7870   112  ldr lr, [jssp], #8
0xffff582f7874   116  ret
0xffff582f7878   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f787c   124  d63f03e0       constant
0xffff582f7880   128  582170c0       constant
0xffff582f7884   132  0000ffff       constant
0xffff582f7888   136  58238080       constant
0xffff582f788c   140  0000ffff       constant
0xffff582f7890   144  movz x16, #0x0
0xffff582f7894   148  sub csp, jssp, #0x10 (16)
0xffff582f7898   152  stp fp, lr, [jssp, #-16]!
0xffff582f789c   156  bl #+0x4 (addr 0xffff582f78a0)
0xffff582f78a0   160  movz x17, #0xa00000000
0xffff582f78a4   164  sub csp, jssp, #0x10 (16)
0xffff582f78a8   168  stp x17, cp, [jssp, #-16]!
0xffff582f78ac   172  add fp, jssp, #0x10 (16)
0xffff582f78b0   176  ldr x17, pc+24 (addr 0x0000ffff582f78c8)    ;; lazy deoptimization bailout 0
0xffff582f78b4   180  add x17, x17, x16
0xffff582f78b8   184  br x17
0xffff582f78bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f78c0   192  d63f03e0       constant
0xffff582f78c4   196  d503201f       constant
0xffff582f78c8   200  58006000       constant
0xffff582f78cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f7830  code target (STUB)  (0xffff582170c0)
0xffff582f7868  code target (STUB)  (0xffff58238080)
0xffff582f7878  constant pool (size 24)
0xffff582f78b0  runtime entry
0xffff582f78bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = writecb
compiler = unknown
Instructions (size = 152)
0xffff582f7940     0  sub csp, jssp, #0x8 (8)
0xffff582f7944     4  str x3, [jssp, #-8]!
0xffff582f7948     8  sub csp, jssp, #0x8 (8)
0xffff582f794c    12  str x4, [jssp, #-8]!
0xffff582f7950    16  ldr x3, pc+88 (addr 0x0000ffff582f79a8)    ;; object: 0x225e95f9 Cell for 0
0xffff582f7954    20  ldur x3, [x3, #7]
0xffff582f7958    24  cmp x3, #0x0 (0)
0xffff582f795c    28  b.ne #+0x30 (addr 0xffff582f798c)
0xffff582f7960    32  tbz w0, #0, #+0x2c (addr 0xffff582f798c)
0xffff582f7964    36  ldr x5, pc+76 (addr 0x0000ffff582f79b0)    ;; object: 0x225e9ba1 WeakCell for 0x32b406e9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f7968    40  ldur x5, [x5, #7]
0xffff582f796c    44  tbz w5, #0, #+0x20 (addr 0xffff582f798c)
0xffff582f7970    48  ldursw x4, [x5, #15]
0xffff582f7974    52  tbnz w4, #23, #+0x18 (addr 0xffff582f798c)
0xffff582f7978    56  ldr x4, [jssp], #8
0xffff582f797c    60  ldr x3, [jssp], #8
0xffff582f7980    64  ldr x2, pc+56 (addr 0x0000ffff582f79b8)    ;; object: 0x22522979 <String[7]: writecb>
0xffff582f7984    68  ldr x16, pc+60 (addr 0x0000ffff582f79c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198673
0xffff582f7988    72  br x16
0xffff582f798c    76  ldr x2, pc+60 (addr 0x0000ffff582f79c8)    ;; object: 0x22522979 <String[7]: writecb>
0xffff582f7990    80  ldr x4, [jssp], #8
0xffff582f7994    84  ldr x3, [jssp], #8
0xffff582f7998    88  ldr x16, pc+56 (addr 0x0000ffff582f79d0)    ;; code: BUILTIN
0xffff582f799c    92  br x16
0xffff582f79a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f79a4   100  d63f03e0       constant
0xffff582f79a8   104  225e95f9       constant
0xffff582f79ac   108  00000000       constant
0xffff582f79b0   112  225e9ba1       constant
0xffff582f79b4   116  00000000       constant
0xffff582f79b8   120  22522979       constant
0xffff582f79bc   124  00000000       constant
0xffff582f79c0   128  582f7800       constant
0xffff582f79c4   132  0000ffff       constant
0xffff582f79c8   136  22522979       constant
0xffff582f79cc   140  00000000       constant
0xffff582f79d0   144  58222420       constant
0xffff582f79d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f7950  embedded object  (0x225e95f9 Cell for 0)
0xffff582f7964  embedded object  (0x225e9ba1 WeakCell for 0x32b406e9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f7980  embedded object  (0x22522979 <String[7]: writecb>)
0xffff582f7984  code target (HANDLER)  (0xffff582f7800)
0xffff582f798c  embedded object  (0x22522979 <String[7]: writecb>)
0xffff582f7998  code target (BUILTIN)  (0xffff58222420)
0xffff582f79a0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f7a40     0  mov x6, x0
0xffff582f7a44     4  tbnz w6, #0, #+0x54 (addr 0xffff582f7a98)
0xffff582f7a48     8  stur x6, [x1, #143]
0xffff582f7a4c    12  stur x5, [x1, #-1]
0xffff582f7a50    16  tbz w5, #0, #+0x34 (addr 0xffff582f7a84)
0xffff582f7a54    20  sub x2, x1, #0x1 (1)
0xffff582f7a58    24  and x5, x5, #0xfffffffffff00000
0xffff582f7a5c    28  ldr x5, [x5, #8]
0xffff582f7a60    32  tbz w5, #1, #+0x24 (addr 0xffff582f7a84)
0xffff582f7a64    36  and x5, x1, #0xfffffffffff00000
0xffff582f7a68    40  ldr x5, [x5, #8]
0xffff582f7a6c    44  tbz w5, #2, #+0x18 (addr 0xffff582f7a84)
0xffff582f7a70    48  sub csp, jssp, #0x8 (8)
0xffff582f7a74    52  str lr, [jssp, #-8]!
0xffff582f7a78    56  ldr x16, pc+24 (addr 0x0000ffff582f7a90)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f7a7c    60  blr x16
0xffff582f7a80    64  ldr lr, [jssp], #8
0xffff582f7a84    68  ret
0xffff582f7a88    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f7a8c    76  d63f03e0       constant
0xffff582f7a90    80  58238080       constant
0xffff582f7a94    84  0000ffff       constant
0xffff582f7a98    88  movz x16, #0x0
0xffff582f7a9c    92  sub csp, jssp, #0x10 (16)
0xffff582f7aa0    96  stp fp, lr, [jssp, #-16]!
0xffff582f7aa4   100  bl #+0x4 (addr 0xffff582f7aa8)
0xffff582f7aa8   104  movz x17, #0xa00000000
0xffff582f7aac   108  sub csp, jssp, #0x10 (16)
0xffff582f7ab0   112  stp x17, cp, [jssp, #-16]!
0xffff582f7ab4   116  add fp, jssp, #0x10 (16)
0xffff582f7ab8   120  ldr x17, pc+24 (addr 0x0000ffff582f7ad0)    ;; lazy deoptimization bailout 0
0xffff582f7abc   124  add x17, x17, x16
0xffff582f7ac0   128  br x17
0xffff582f7ac4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f7ac8   136  d63f03e0       constant
0xffff582f7acc   140  d503201f       constant
0xffff582f7ad0   144  58006000       constant
0xffff582f7ad4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f7a78  code target (STUB)  (0xffff58238080)
0xffff582f7a88  constant pool (size 16)
0xffff582f7ab8  runtime entry
0xffff582f7ac4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f7a40     0  mov x6, x0
0xffff582f7a44     4  tbnz w6, #0, #+0x54 (addr 0xffff582f7a98)
0xffff582f7a48     8  stur x6, [x1, #143]
0xffff582f7a4c    12  stur x5, [x1, #-1]
0xffff582f7a50    16  tbz w5, #0, #+0x34 (addr 0xffff582f7a84)
0xffff582f7a54    20  sub x2, x1, #0x1 (1)
0xffff582f7a58    24  and x5, x5, #0xfffffffffff00000
0xffff582f7a5c    28  ldr x5, [x5, #8]
0xffff582f7a60    32  tbz w5, #1, #+0x24 (addr 0xffff582f7a84)
0xffff582f7a64    36  and x5, x1, #0xfffffffffff00000
0xffff582f7a68    40  ldr x5, [x5, #8]
0xffff582f7a6c    44  tbz w5, #2, #+0x18 (addr 0xffff582f7a84)
0xffff582f7a70    48  sub csp, jssp, #0x8 (8)
0xffff582f7a74    52  str lr, [jssp, #-8]!
0xffff582f7a78    56  ldr x16, pc+24 (addr 0x0000ffff582f7a90)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f7a7c    60  blr x16
0xffff582f7a80    64  ldr lr, [jssp], #8
0xffff582f7a84    68  ret
0xffff582f7a88    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f7a8c    76  d63f03e0       constant
0xffff582f7a90    80  58238080       constant
0xffff582f7a94    84  0000ffff       constant
0xffff582f7a98    88  movz x16, #0x0
0xffff582f7a9c    92  sub csp, jssp, #0x10 (16)
0xffff582f7aa0    96  stp fp, lr, [jssp, #-16]!
0xffff582f7aa4   100  bl #+0x4 (addr 0xffff582f7aa8)
0xffff582f7aa8   104  movz x17, #0xa00000000
0xffff582f7aac   108  sub csp, jssp, #0x10 (16)
0xffff582f7ab0   112  stp x17, cp, [jssp, #-16]!
0xffff582f7ab4   116  add fp, jssp, #0x10 (16)
0xffff582f7ab8   120  ldr x17, pc+24 (addr 0x0000ffff582f7ad0)    ;; lazy deoptimization bailout 0
0xffff582f7abc   124  add x17, x17, x16
0xffff582f7ac0   128  br x17
0xffff582f7ac4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f7ac8   136  d63f03e0       constant
0xffff582f7acc   140  d503201f       constant
0xffff582f7ad0   144  58006000       constant
0xffff582f7ad4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f7a78  code target (STUB)  (0xffff58238080)
0xffff582f7a88  constant pool (size 16)
0xffff582f7ab8  runtime entry
0xffff582f7ac4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = writelen
compiler = unknown
Instructions (size = 152)
0xffff582f7b40     0  sub csp, jssp, #0x8 (8)
0xffff582f7b44     4  str x3, [jssp, #-8]!
0xffff582f7b48     8  sub csp, jssp, #0x8 (8)
0xffff582f7b4c    12  str x4, [jssp, #-8]!
0xffff582f7b50    16  ldr x3, pc+88 (addr 0x0000ffff582f7ba8)    ;; object: 0x225e95f9 Cell for 0
0xffff582f7b54    20  ldur x3, [x3, #7]
0xffff582f7b58    24  cmp x3, #0x0 (0)
0xffff582f7b5c    28  b.ne #+0x2c (addr 0xffff582f7b88)
0xffff582f7b60    32  ldr x5, pc+80 (addr 0x0000ffff582f7bb0)    ;; object: 0x225e9c91 WeakCell for 0x32b40741 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f7b64    36  ldur x5, [x5, #7]
0xffff582f7b68    40  tbz w5, #0, #+0x20 (addr 0xffff582f7b88)
0xffff582f7b6c    44  ldursw x4, [x5, #15]
0xffff582f7b70    48  tbnz w4, #23, #+0x18 (addr 0xffff582f7b88)
0xffff582f7b74    52  ldr x4, [jssp], #8
0xffff582f7b78    56  ldr x3, [jssp], #8
0xffff582f7b7c    60  ldr x2, pc+60 (addr 0x0000ffff582f7bb8)    ;; object: 0x22522999 <String[8]: writelen>
0xffff582f7b80    64  ldr x16, pc+64 (addr 0x0000ffff582f7bc0)    ;; code: HANDLER, StoreTransitionStub, minor: 174098
0xffff582f7b84    68  br x16
0xffff582f7b88    72  ldr x2, pc+64 (addr 0x0000ffff582f7bc8)    ;; object: 0x22522999 <String[8]: writelen>
0xffff582f7b8c    76  ldr x4, [jssp], #8
0xffff582f7b90    80  ldr x3, [jssp], #8
0xffff582f7b94    84  ldr x16, pc+60 (addr 0x0000ffff582f7bd0)    ;; code: BUILTIN
0xffff582f7b98    88  br x16
0xffff582f7b9c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582f7ba0    96  d63f03e0       constant
0xffff582f7ba4   100  d503201f       constant
0xffff582f7ba8   104  225e95f9       constant
0xffff582f7bac   108  00000000       constant
0xffff582f7bb0   112  225e9c91       constant
0xffff582f7bb4   116  00000000       constant
0xffff582f7bb8   120  22522999       constant
0xffff582f7bbc   124  00000000       constant
0xffff582f7bc0   128  582f7a40       constant
0xffff582f7bc4   132  0000ffff       constant
0xffff582f7bc8   136  22522999       constant
0xffff582f7bcc   140  00000000       constant
0xffff582f7bd0   144  58222420       constant
0xffff582f7bd4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f7b50  embedded object  (0x225e95f9 Cell for 0)
0xffff582f7b60  embedded object  (0x225e9c91 WeakCell for 0x32b40741 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f7b7c  embedded object  (0x22522999 <String[8]: writelen>)
0xffff582f7b80  code target (HANDLER)  (0xffff582f7a40)
0xffff582f7b88  embedded object  (0x22522999 <String[8]: writelen>)
0xffff582f7b94  code target (BUILTIN)  (0xffff58222420)
0xffff582f7b9c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f7c40     0  tbz w0, #0, #+0x90 (addr 0xffff582f7cd0)
0xffff582f7c44     4  mov x2, x0
0xffff582f7c48     8  stur x2, [x1, #151]
0xffff582f7c4c    12  add x3, x1, #0x97 (151)
0xffff582f7c50    16  and x2, x2, #0xfffffffffff00000
0xffff582f7c54    20  ldr x2, [x2, #8]
0xffff582f7c58    24  tbz w2, #1, #+0x24 (addr 0xffff582f7c7c)
0xffff582f7c5c    28  and x2, x1, #0xfffffffffff00000
0xffff582f7c60    32  ldr x2, [x2, #8]
0xffff582f7c64    36  tbz w2, #2, #+0x18 (addr 0xffff582f7c7c)
0xffff582f7c68    40  sub csp, jssp, #0x8 (8)
0xffff582f7c6c    44  str lr, [jssp, #-8]!
0xffff582f7c70    48  ldr x16, pc+80 (addr 0x0000ffff582f7cc0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f7c74    52  blr x16
0xffff582f7c78    56  ldr lr, [jssp], #8
0xffff582f7c7c    60  stur x5, [x1, #-1]
0xffff582f7c80    64  tbz w5, #0, #+0x34 (addr 0xffff582f7cb4)
0xffff582f7c84    68  sub x2, x1, #0x1 (1)
0xffff582f7c88    72  and x5, x5, #0xfffffffffff00000
0xffff582f7c8c    76  ldr x5, [x5, #8]
0xffff582f7c90    80  tbz w5, #1, #+0x24 (addr 0xffff582f7cb4)
0xffff582f7c94    84  and x5, x1, #0xfffffffffff00000
0xffff582f7c98    88  ldr x5, [x5, #8]
0xffff582f7c9c    92  tbz w5, #2, #+0x18 (addr 0xffff582f7cb4)
0xffff582f7ca0    96  sub csp, jssp, #0x8 (8)
0xffff582f7ca4   100  str lr, [jssp, #-8]!
0xffff582f7ca8   104  ldr x16, pc+32 (addr 0x0000ffff582f7cc8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f7cac   108  blr x16
0xffff582f7cb0   112  ldr lr, [jssp], #8
0xffff582f7cb4   116  ret
0xffff582f7cb8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f7cbc   124  d63f03e0       constant
0xffff582f7cc0   128  582170c0       constant
0xffff582f7cc4   132  0000ffff       constant
0xffff582f7cc8   136  58238080       constant
0xffff582f7ccc   140  0000ffff       constant
0xffff582f7cd0   144  movz x16, #0x0
0xffff582f7cd4   148  sub csp, jssp, #0x10 (16)
0xffff582f7cd8   152  stp fp, lr, [jssp, #-16]!
0xffff582f7cdc   156  bl #+0x4 (addr 0xffff582f7ce0)
0xffff582f7ce0   160  movz x17, #0xa00000000
0xffff582f7ce4   164  sub csp, jssp, #0x10 (16)
0xffff582f7ce8   168  stp x17, cp, [jssp, #-16]!
0xffff582f7cec   172  add fp, jssp, #0x10 (16)
0xffff582f7cf0   176  ldr x17, pc+24 (addr 0x0000ffff582f7d08)    ;; lazy deoptimization bailout 0
0xffff582f7cf4   180  add x17, x17, x16
0xffff582f7cf8   184  br x17
0xffff582f7cfc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f7d00   192  d63f03e0       constant
0xffff582f7d04   196  d503201f       constant
0xffff582f7d08   200  58006000       constant
0xffff582f7d0c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f7c70  code target (STUB)  (0xffff582170c0)
0xffff582f7ca8  code target (STUB)  (0xffff58238080)
0xffff582f7cb8  constant pool (size 24)
0xffff582f7cf0  runtime entry
0xffff582f7cfc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f7c40     0  tbz w0, #0, #+0x90 (addr 0xffff582f7cd0)
0xffff582f7c44     4  mov x2, x0
0xffff582f7c48     8  stur x2, [x1, #151]
0xffff582f7c4c    12  add x3, x1, #0x97 (151)
0xffff582f7c50    16  and x2, x2, #0xfffffffffff00000
0xffff582f7c54    20  ldr x2, [x2, #8]
0xffff582f7c58    24  tbz w2, #1, #+0x24 (addr 0xffff582f7c7c)
0xffff582f7c5c    28  and x2, x1, #0xfffffffffff00000
0xffff582f7c60    32  ldr x2, [x2, #8]
0xffff582f7c64    36  tbz w2, #2, #+0x18 (addr 0xffff582f7c7c)
0xffff582f7c68    40  sub csp, jssp, #0x8 (8)
0xffff582f7c6c    44  str lr, [jssp, #-8]!
0xffff582f7c70    48  ldr x16, pc+80 (addr 0x0000ffff582f7cc0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f7c74    52  blr x16
0xffff582f7c78    56  ldr lr, [jssp], #8
0xffff582f7c7c    60  stur x5, [x1, #-1]
0xffff582f7c80    64  tbz w5, #0, #+0x34 (addr 0xffff582f7cb4)
0xffff582f7c84    68  sub x2, x1, #0x1 (1)
0xffff582f7c88    72  and x5, x5, #0xfffffffffff00000
0xffff582f7c8c    76  ldr x5, [x5, #8]
0xffff582f7c90    80  tbz w5, #1, #+0x24 (addr 0xffff582f7cb4)
0xffff582f7c94    84  and x5, x1, #0xfffffffffff00000
0xffff582f7c98    88  ldr x5, [x5, #8]
0xffff582f7c9c    92  tbz w5, #2, #+0x18 (addr 0xffff582f7cb4)
0xffff582f7ca0    96  sub csp, jssp, #0x8 (8)
0xffff582f7ca4   100  str lr, [jssp, #-8]!
0xffff582f7ca8   104  ldr x16, pc+32 (addr 0x0000ffff582f7cc8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f7cac   108  blr x16
0xffff582f7cb0   112  ldr lr, [jssp], #8
0xffff582f7cb4   116  ret
0xffff582f7cb8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f7cbc   124  d63f03e0       constant
0xffff582f7cc0   128  582170c0       constant
0xffff582f7cc4   132  0000ffff       constant
0xffff582f7cc8   136  58238080       constant
0xffff582f7ccc   140  0000ffff       constant
0xffff582f7cd0   144  movz x16, #0x0
0xffff582f7cd4   148  sub csp, jssp, #0x10 (16)
0xffff582f7cd8   152  stp fp, lr, [jssp, #-16]!
0xffff582f7cdc   156  bl #+0x4 (addr 0xffff582f7ce0)
0xffff582f7ce0   160  movz x17, #0xa00000000
0xffff582f7ce4   164  sub csp, jssp, #0x10 (16)
0xffff582f7ce8   168  stp x17, cp, [jssp, #-16]!
0xffff582f7cec   172  add fp, jssp, #0x10 (16)
0xffff582f7cf0   176  ldr x17, pc+24 (addr 0x0000ffff582f7d08)    ;; lazy deoptimization bailout 0
0xffff582f7cf4   180  add x17, x17, x16
0xffff582f7cf8   184  br x17
0xffff582f7cfc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f7d00   192  d63f03e0       constant
0xffff582f7d04   196  d503201f       constant
0xffff582f7d08   200  58006000       constant
0xffff582f7d0c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f7c70  code target (STUB)  (0xffff582170c0)
0xffff582f7ca8  code target (STUB)  (0xffff58238080)
0xffff582f7cb8  constant pool (size 24)
0xffff582f7cf0  runtime entry
0xffff582f7cfc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = bufferedRequest
compiler = unknown
Instructions (size = 152)
0xffff582f7d80     0  sub csp, jssp, #0x8 (8)
0xffff582f7d84     4  str x3, [jssp, #-8]!
0xffff582f7d88     8  sub csp, jssp, #0x8 (8)
0xffff582f7d8c    12  str x4, [jssp, #-8]!
0xffff582f7d90    16  ldr x3, pc+88 (addr 0x0000ffff582f7de8)    ;; object: 0x225e95f9 Cell for 0
0xffff582f7d94    20  ldur x3, [x3, #7]
0xffff582f7d98    24  cmp x3, #0x0 (0)
0xffff582f7d9c    28  b.ne #+0x30 (addr 0xffff582f7dcc)
0xffff582f7da0    32  tbz w0, #0, #+0x2c (addr 0xffff582f7dcc)
0xffff582f7da4    36  ldr x5, pc+76 (addr 0x0000ffff582f7df0)    ;; object: 0x225e9d81 WeakCell for 0x32b40799 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f7da8    40  ldur x5, [x5, #7]
0xffff582f7dac    44  tbz w5, #0, #+0x20 (addr 0xffff582f7dcc)
0xffff582f7db0    48  ldursw x4, [x5, #15]
0xffff582f7db4    52  tbnz w4, #23, #+0x18 (addr 0xffff582f7dcc)
0xffff582f7db8    56  ldr x4, [jssp], #8
0xffff582f7dbc    60  ldr x3, [jssp], #8
0xffff582f7dc0    64  ldr x2, pc+56 (addr 0x0000ffff582f7df8)    ;; object: 0x225229b9 <String[15]: bufferedRequest>
0xffff582f7dc4    68  ldr x16, pc+60 (addr 0x0000ffff582f7e00)    ;; code: HANDLER, StoreTransitionStub, minor: 198675
0xffff582f7dc8    72  br x16
0xffff582f7dcc    76  ldr x2, pc+60 (addr 0x0000ffff582f7e08)    ;; object: 0x225229b9 <String[15]: bufferedRequest>
0xffff582f7dd0    80  ldr x4, [jssp], #8
0xffff582f7dd4    84  ldr x3, [jssp], #8
0xffff582f7dd8    88  ldr x16, pc+56 (addr 0x0000ffff582f7e10)    ;; code: BUILTIN
0xffff582f7ddc    92  br x16
0xffff582f7de0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f7de4   100  d63f03e0       constant
0xffff582f7de8   104  225e95f9       constant
0xffff582f7dec   108  00000000       constant
0xffff582f7df0   112  225e9d81       constant
0xffff582f7df4   116  00000000       constant
0xffff582f7df8   120  225229b9       constant
0xffff582f7dfc   124  00000000       constant
0xffff582f7e00   128  582f7c40       constant
0xffff582f7e04   132  0000ffff       constant
0xffff582f7e08   136  225229b9       constant
0xffff582f7e0c   140  00000000       constant
0xffff582f7e10   144  58222420       constant
0xffff582f7e14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f7d90  embedded object  (0x225e95f9 Cell for 0)
0xffff582f7da4  embedded object  (0x225e9d81 WeakCell for 0x32b40799 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f7dc0  embedded object  (0x225229b9 <String[15]: bufferedRequest>)
0xffff582f7dc4  code target (HANDLER)  (0xffff582f7c40)
0xffff582f7dcc  embedded object  (0x225229b9 <String[15]: bufferedRequest>)
0xffff582f7dd8  code target (BUILTIN)  (0xffff58222420)
0xffff582f7de0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f7e80     0  tbz w0, #0, #+0x90 (addr 0xffff582f7f10)
0xffff582f7e84     4  mov x2, x0
0xffff582f7e88     8  stur x2, [x1, #159]
0xffff582f7e8c    12  add x3, x1, #0x9f (159)
0xffff582f7e90    16  and x2, x2, #0xfffffffffff00000
0xffff582f7e94    20  ldr x2, [x2, #8]
0xffff582f7e98    24  tbz w2, #1, #+0x24 (addr 0xffff582f7ebc)
0xffff582f7e9c    28  and x2, x1, #0xfffffffffff00000
0xffff582f7ea0    32  ldr x2, [x2, #8]
0xffff582f7ea4    36  tbz w2, #2, #+0x18 (addr 0xffff582f7ebc)
0xffff582f7ea8    40  sub csp, jssp, #0x8 (8)
0xffff582f7eac    44  str lr, [jssp, #-8]!
0xffff582f7eb0    48  ldr x16, pc+80 (addr 0x0000ffff582f7f00)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f7eb4    52  blr x16
0xffff582f7eb8    56  ldr lr, [jssp], #8
0xffff582f7ebc    60  stur x5, [x1, #-1]
0xffff582f7ec0    64  tbz w5, #0, #+0x34 (addr 0xffff582f7ef4)
0xffff582f7ec4    68  sub x2, x1, #0x1 (1)
0xffff582f7ec8    72  and x5, x5, #0xfffffffffff00000
0xffff582f7ecc    76  ldr x5, [x5, #8]
0xffff582f7ed0    80  tbz w5, #1, #+0x24 (addr 0xffff582f7ef4)
0xffff582f7ed4    84  and x5, x1, #0xfffffffffff00000
0xffff582f7ed8    88  ldr x5, [x5, #8]
0xffff582f7edc    92  tbz w5, #2, #+0x18 (addr 0xffff582f7ef4)
0xffff582f7ee0    96  sub csp, jssp, #0x8 (8)
0xffff582f7ee4   100  str lr, [jssp, #-8]!
0xffff582f7ee8   104  ldr x16, pc+32 (addr 0x0000ffff582f7f08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f7eec   108  blr x16
0xffff582f7ef0   112  ldr lr, [jssp], #8
0xffff582f7ef4   116  ret
0xffff582f7ef8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f7efc   124  d63f03e0       constant
0xffff582f7f00   128  582170c0       constant
0xffff582f7f04   132  0000ffff       constant
0xffff582f7f08   136  58238080       constant
0xffff582f7f0c   140  0000ffff       constant
0xffff582f7f10   144  movz x16, #0x0
0xffff582f7f14   148  sub csp, jssp, #0x10 (16)
0xffff582f7f18   152  stp fp, lr, [jssp, #-16]!
0xffff582f7f1c   156  bl #+0x4 (addr 0xffff582f7f20)
0xffff582f7f20   160  movz x17, #0xa00000000
0xffff582f7f24   164  sub csp, jssp, #0x10 (16)
0xffff582f7f28   168  stp x17, cp, [jssp, #-16]!
0xffff582f7f2c   172  add fp, jssp, #0x10 (16)
0xffff582f7f30   176  ldr x17, pc+24 (addr 0x0000ffff582f7f48)    ;; lazy deoptimization bailout 0
0xffff582f7f34   180  add x17, x17, x16
0xffff582f7f38   184  br x17
0xffff582f7f3c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f7f40   192  d63f03e0       constant
0xffff582f7f44   196  d503201f       constant
0xffff582f7f48   200  58006000       constant
0xffff582f7f4c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f7eb0  code target (STUB)  (0xffff582170c0)
0xffff582f7ee8  code target (STUB)  (0xffff58238080)
0xffff582f7ef8  constant pool (size 24)
0xffff582f7f30  runtime entry
0xffff582f7f3c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f7e80     0  tbz w0, #0, #+0x90 (addr 0xffff582f7f10)
0xffff582f7e84     4  mov x2, x0
0xffff582f7e88     8  stur x2, [x1, #159]
0xffff582f7e8c    12  add x3, x1, #0x9f (159)
0xffff582f7e90    16  and x2, x2, #0xfffffffffff00000
0xffff582f7e94    20  ldr x2, [x2, #8]
0xffff582f7e98    24  tbz w2, #1, #+0x24 (addr 0xffff582f7ebc)
0xffff582f7e9c    28  and x2, x1, #0xfffffffffff00000
0xffff582f7ea0    32  ldr x2, [x2, #8]
0xffff582f7ea4    36  tbz w2, #2, #+0x18 (addr 0xffff582f7ebc)
0xffff582f7ea8    40  sub csp, jssp, #0x8 (8)
0xffff582f7eac    44  str lr, [jssp, #-8]!
0xffff582f7eb0    48  ldr x16, pc+80 (addr 0x0000ffff582f7f00)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f7eb4    52  blr x16
0xffff582f7eb8    56  ldr lr, [jssp], #8
0xffff582f7ebc    60  stur x5, [x1, #-1]
0xffff582f7ec0    64  tbz w5, #0, #+0x34 (addr 0xffff582f7ef4)
0xffff582f7ec4    68  sub x2, x1, #0x1 (1)
0xffff582f7ec8    72  and x5, x5, #0xfffffffffff00000
0xffff582f7ecc    76  ldr x5, [x5, #8]
0xffff582f7ed0    80  tbz w5, #1, #+0x24 (addr 0xffff582f7ef4)
0xffff582f7ed4    84  and x5, x1, #0xfffffffffff00000
0xffff582f7ed8    88  ldr x5, [x5, #8]
0xffff582f7edc    92  tbz w5, #2, #+0x18 (addr 0xffff582f7ef4)
0xffff582f7ee0    96  sub csp, jssp, #0x8 (8)
0xffff582f7ee4   100  str lr, [jssp, #-8]!
0xffff582f7ee8   104  ldr x16, pc+32 (addr 0x0000ffff582f7f08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f7eec   108  blr x16
0xffff582f7ef0   112  ldr lr, [jssp], #8
0xffff582f7ef4   116  ret
0xffff582f7ef8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f7efc   124  d63f03e0       constant
0xffff582f7f00   128  582170c0       constant
0xffff582f7f04   132  0000ffff       constant
0xffff582f7f08   136  58238080       constant
0xffff582f7f0c   140  0000ffff       constant
0xffff582f7f10   144  movz x16, #0x0
0xffff582f7f14   148  sub csp, jssp, #0x10 (16)
0xffff582f7f18   152  stp fp, lr, [jssp, #-16]!
0xffff582f7f1c   156  bl #+0x4 (addr 0xffff582f7f20)
0xffff582f7f20   160  movz x17, #0xa00000000
0xffff582f7f24   164  sub csp, jssp, #0x10 (16)
0xffff582f7f28   168  stp x17, cp, [jssp, #-16]!
0xffff582f7f2c   172  add fp, jssp, #0x10 (16)
0xffff582f7f30   176  ldr x17, pc+24 (addr 0x0000ffff582f7f48)    ;; lazy deoptimization bailout 0
0xffff582f7f34   180  add x17, x17, x16
0xffff582f7f38   184  br x17
0xffff582f7f3c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f7f40   192  d63f03e0       constant
0xffff582f7f44   196  d503201f       constant
0xffff582f7f48   200  58006000       constant
0xffff582f7f4c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f7eb0  code target (STUB)  (0xffff582170c0)
0xffff582f7ee8  code target (STUB)  (0xffff58238080)
0xffff582f7ef8  constant pool (size 24)
0xffff582f7f30  runtime entry
0xffff582f7f3c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = lastBufferedRequest
compiler = unknown
Instructions (size = 152)
0xffff582f7fc0     0  sub csp, jssp, #0x8 (8)
0xffff582f7fc4     4  str x3, [jssp, #-8]!
0xffff582f7fc8     8  sub csp, jssp, #0x8 (8)
0xffff582f7fcc    12  str x4, [jssp, #-8]!
0xffff582f7fd0    16  ldr x3, pc+88 (addr 0x0000ffff582f8028)    ;; object: 0x225e95f9 Cell for 0
0xffff582f7fd4    20  ldur x3, [x3, #7]
0xffff582f7fd8    24  cmp x3, #0x0 (0)
0xffff582f7fdc    28  b.ne #+0x30 (addr 0xffff582f800c)
0xffff582f7fe0    32  tbz w0, #0, #+0x2c (addr 0xffff582f800c)
0xffff582f7fe4    36  ldr x5, pc+76 (addr 0x0000ffff582f8030)    ;; object: 0x225e9e71 WeakCell for 0x32b407f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f7fe8    40  ldur x5, [x5, #7]
0xffff582f7fec    44  tbz w5, #0, #+0x20 (addr 0xffff582f800c)
0xffff582f7ff0    48  ldursw x4, [x5, #15]
0xffff582f7ff4    52  tbnz w4, #23, #+0x18 (addr 0xffff582f800c)
0xffff582f7ff8    56  ldr x4, [jssp], #8
0xffff582f7ffc    60  ldr x3, [jssp], #8
0xffff582f8000    64  ldr x2, pc+56 (addr 0x0000ffff582f8038)    ;; object: 0x225229e1 <String[19]: lastBufferedRequest>
0xffff582f8004    68  ldr x16, pc+60 (addr 0x0000ffff582f8040)    ;; code: HANDLER, StoreTransitionStub, minor: 198676
0xffff582f8008    72  br x16
0xffff582f800c    76  ldr x2, pc+60 (addr 0x0000ffff582f8048)    ;; object: 0x225229e1 <String[19]: lastBufferedRequest>
0xffff582f8010    80  ldr x4, [jssp], #8
0xffff582f8014    84  ldr x3, [jssp], #8
0xffff582f8018    88  ldr x16, pc+56 (addr 0x0000ffff582f8050)    ;; code: BUILTIN
0xffff582f801c    92  br x16
0xffff582f8020    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f8024   100  d63f03e0       constant
0xffff582f8028   104  225e95f9       constant
0xffff582f802c   108  00000000       constant
0xffff582f8030   112  225e9e71       constant
0xffff582f8034   116  00000000       constant
0xffff582f8038   120  225229e1       constant
0xffff582f803c   124  00000000       constant
0xffff582f8040   128  582f7e80       constant
0xffff582f8044   132  0000ffff       constant
0xffff582f8048   136  225229e1       constant
0xffff582f804c   140  00000000       constant
0xffff582f8050   144  58222420       constant
0xffff582f8054   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f7fd0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f7fe4  embedded object  (0x225e9e71 WeakCell for 0x32b407f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8000  embedded object  (0x225229e1 <String[19]: lastBufferedRequest>)
0xffff582f8004  code target (HANDLER)  (0xffff582f7e80)
0xffff582f800c  embedded object  (0x225229e1 <String[19]: lastBufferedRequest>)
0xffff582f8018  code target (BUILTIN)  (0xffff58222420)
0xffff582f8020  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f80c0     0  mov x6, x0
0xffff582f80c4     4  tbnz w6, #0, #+0x54 (addr 0xffff582f8118)
0xffff582f80c8     8  stur x6, [x1, #167]
0xffff582f80cc    12  stur x5, [x1, #-1]
0xffff582f80d0    16  tbz w5, #0, #+0x34 (addr 0xffff582f8104)
0xffff582f80d4    20  sub x2, x1, #0x1 (1)
0xffff582f80d8    24  and x5, x5, #0xfffffffffff00000
0xffff582f80dc    28  ldr x5, [x5, #8]
0xffff582f80e0    32  tbz w5, #1, #+0x24 (addr 0xffff582f8104)
0xffff582f80e4    36  and x5, x1, #0xfffffffffff00000
0xffff582f80e8    40  ldr x5, [x5, #8]
0xffff582f80ec    44  tbz w5, #2, #+0x18 (addr 0xffff582f8104)
0xffff582f80f0    48  sub csp, jssp, #0x8 (8)
0xffff582f80f4    52  str lr, [jssp, #-8]!
0xffff582f80f8    56  ldr x16, pc+24 (addr 0x0000ffff582f8110)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f80fc    60  blr x16
0xffff582f8100    64  ldr lr, [jssp], #8
0xffff582f8104    68  ret
0xffff582f8108    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f810c    76  d63f03e0       constant
0xffff582f8110    80  58238080       constant
0xffff582f8114    84  0000ffff       constant
0xffff582f8118    88  movz x16, #0x0
0xffff582f811c    92  sub csp, jssp, #0x10 (16)
0xffff582f8120    96  stp fp, lr, [jssp, #-16]!
0xffff582f8124   100  bl #+0x4 (addr 0xffff582f8128)
0xffff582f8128   104  movz x17, #0xa00000000
0xffff582f812c   108  sub csp, jssp, #0x10 (16)
0xffff582f8130   112  stp x17, cp, [jssp, #-16]!
0xffff582f8134   116  add fp, jssp, #0x10 (16)
0xffff582f8138   120  ldr x17, pc+24 (addr 0x0000ffff582f8150)    ;; lazy deoptimization bailout 0
0xffff582f813c   124  add x17, x17, x16
0xffff582f8140   128  br x17
0xffff582f8144   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f8148   136  d63f03e0       constant
0xffff582f814c   140  d503201f       constant
0xffff582f8150   144  58006000       constant
0xffff582f8154   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f80f8  code target (STUB)  (0xffff58238080)
0xffff582f8108  constant pool (size 16)
0xffff582f8138  runtime entry
0xffff582f8144  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f80c0     0  mov x6, x0
0xffff582f80c4     4  tbnz w6, #0, #+0x54 (addr 0xffff582f8118)
0xffff582f80c8     8  stur x6, [x1, #167]
0xffff582f80cc    12  stur x5, [x1, #-1]
0xffff582f80d0    16  tbz w5, #0, #+0x34 (addr 0xffff582f8104)
0xffff582f80d4    20  sub x2, x1, #0x1 (1)
0xffff582f80d8    24  and x5, x5, #0xfffffffffff00000
0xffff582f80dc    28  ldr x5, [x5, #8]
0xffff582f80e0    32  tbz w5, #1, #+0x24 (addr 0xffff582f8104)
0xffff582f80e4    36  and x5, x1, #0xfffffffffff00000
0xffff582f80e8    40  ldr x5, [x5, #8]
0xffff582f80ec    44  tbz w5, #2, #+0x18 (addr 0xffff582f8104)
0xffff582f80f0    48  sub csp, jssp, #0x8 (8)
0xffff582f80f4    52  str lr, [jssp, #-8]!
0xffff582f80f8    56  ldr x16, pc+24 (addr 0x0000ffff582f8110)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f80fc    60  blr x16
0xffff582f8100    64  ldr lr, [jssp], #8
0xffff582f8104    68  ret
0xffff582f8108    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f810c    76  d63f03e0       constant
0xffff582f8110    80  58238080       constant
0xffff582f8114    84  0000ffff       constant
0xffff582f8118    88  movz x16, #0x0
0xffff582f811c    92  sub csp, jssp, #0x10 (16)
0xffff582f8120    96  stp fp, lr, [jssp, #-16]!
0xffff582f8124   100  bl #+0x4 (addr 0xffff582f8128)
0xffff582f8128   104  movz x17, #0xa00000000
0xffff582f812c   108  sub csp, jssp, #0x10 (16)
0xffff582f8130   112  stp x17, cp, [jssp, #-16]!
0xffff582f8134   116  add fp, jssp, #0x10 (16)
0xffff582f8138   120  ldr x17, pc+24 (addr 0x0000ffff582f8150)    ;; lazy deoptimization bailout 0
0xffff582f813c   124  add x17, x17, x16
0xffff582f8140   128  br x17
0xffff582f8144   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f8148   136  d63f03e0       constant
0xffff582f814c   140  d503201f       constant
0xffff582f8150   144  58006000       constant
0xffff582f8154   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f80f8  code target (STUB)  (0xffff58238080)
0xffff582f8108  constant pool (size 16)
0xffff582f8138  runtime entry
0xffff582f8144  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = pendingcb
compiler = unknown
Instructions (size = 152)
0xffff582f81c0     0  sub csp, jssp, #0x8 (8)
0xffff582f81c4     4  str x3, [jssp, #-8]!
0xffff582f81c8     8  sub csp, jssp, #0x8 (8)
0xffff582f81cc    12  str x4, [jssp, #-8]!
0xffff582f81d0    16  ldr x3, pc+88 (addr 0x0000ffff582f8228)    ;; object: 0x225e95f9 Cell for 0
0xffff582f81d4    20  ldur x3, [x3, #7]
0xffff582f81d8    24  cmp x3, #0x0 (0)
0xffff582f81dc    28  b.ne #+0x2c (addr 0xffff582f8208)
0xffff582f81e0    32  ldr x5, pc+80 (addr 0x0000ffff582f8230)    ;; object: 0x225e9f61 WeakCell for 0x32b40849 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f81e4    36  ldur x5, [x5, #7]
0xffff582f81e8    40  tbz w5, #0, #+0x20 (addr 0xffff582f8208)
0xffff582f81ec    44  ldursw x4, [x5, #15]
0xffff582f81f0    48  tbnz w4, #23, #+0x18 (addr 0xffff582f8208)
0xffff582f81f4    52  ldr x4, [jssp], #8
0xffff582f81f8    56  ldr x3, [jssp], #8
0xffff582f81fc    60  ldr x2, pc+60 (addr 0x0000ffff582f8238)    ;; object: 0x22522a11 <String[9]: pendingcb>
0xffff582f8200    64  ldr x16, pc+64 (addr 0x0000ffff582f8240)    ;; code: HANDLER, StoreTransitionStub, minor: 174101
0xffff582f8204    68  br x16
0xffff582f8208    72  ldr x2, pc+64 (addr 0x0000ffff582f8248)    ;; object: 0x22522a11 <String[9]: pendingcb>
0xffff582f820c    76  ldr x4, [jssp], #8
0xffff582f8210    80  ldr x3, [jssp], #8
0xffff582f8214    84  ldr x16, pc+60 (addr 0x0000ffff582f8250)    ;; code: BUILTIN
0xffff582f8218    88  br x16
0xffff582f821c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582f8220    96  d63f03e0       constant
0xffff582f8224   100  d503201f       constant
0xffff582f8228   104  225e95f9       constant
0xffff582f822c   108  00000000       constant
0xffff582f8230   112  225e9f61       constant
0xffff582f8234   116  00000000       constant
0xffff582f8238   120  22522a11       constant
0xffff582f823c   124  00000000       constant
0xffff582f8240   128  582f80c0       constant
0xffff582f8244   132  0000ffff       constant
0xffff582f8248   136  22522a11       constant
0xffff582f824c   140  00000000       constant
0xffff582f8250   144  58222420       constant
0xffff582f8254   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f81d0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f81e0  embedded object  (0x225e9f61 WeakCell for 0x32b40849 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f81fc  embedded object  (0x22522a11 <String[9]: pendingcb>)
0xffff582f8200  code target (HANDLER)  (0xffff582f80c0)
0xffff582f8208  embedded object  (0x22522a11 <String[9]: pendingcb>)
0xffff582f8214  code target (BUILTIN)  (0xffff58222420)
0xffff582f821c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f82c0     0  tbz w0, #0, #+0x90 (addr 0xffff582f8350)
0xffff582f82c4     4  mov x2, x0
0xffff582f82c8     8  stur x2, [x1, #175]
0xffff582f82cc    12  add x3, x1, #0xaf (175)
0xffff582f82d0    16  and x2, x2, #0xfffffffffff00000
0xffff582f82d4    20  ldr x2, [x2, #8]
0xffff582f82d8    24  tbz w2, #1, #+0x24 (addr 0xffff582f82fc)
0xffff582f82dc    28  and x2, x1, #0xfffffffffff00000
0xffff582f82e0    32  ldr x2, [x2, #8]
0xffff582f82e4    36  tbz w2, #2, #+0x18 (addr 0xffff582f82fc)
0xffff582f82e8    40  sub csp, jssp, #0x8 (8)
0xffff582f82ec    44  str lr, [jssp, #-8]!
0xffff582f82f0    48  ldr x16, pc+80 (addr 0x0000ffff582f8340)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f82f4    52  blr x16
0xffff582f82f8    56  ldr lr, [jssp], #8
0xffff582f82fc    60  stur x5, [x1, #-1]
0xffff582f8300    64  tbz w5, #0, #+0x34 (addr 0xffff582f8334)
0xffff582f8304    68  sub x2, x1, #0x1 (1)
0xffff582f8308    72  and x5, x5, #0xfffffffffff00000
0xffff582f830c    76  ldr x5, [x5, #8]
0xffff582f8310    80  tbz w5, #1, #+0x24 (addr 0xffff582f8334)
0xffff582f8314    84  and x5, x1, #0xfffffffffff00000
0xffff582f8318    88  ldr x5, [x5, #8]
0xffff582f831c    92  tbz w5, #2, #+0x18 (addr 0xffff582f8334)
0xffff582f8320    96  sub csp, jssp, #0x8 (8)
0xffff582f8324   100  str lr, [jssp, #-8]!
0xffff582f8328   104  ldr x16, pc+32 (addr 0x0000ffff582f8348)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f832c   108  blr x16
0xffff582f8330   112  ldr lr, [jssp], #8
0xffff582f8334   116  ret
0xffff582f8338   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f833c   124  d63f03e0       constant
0xffff582f8340   128  582170c0       constant
0xffff582f8344   132  0000ffff       constant
0xffff582f8348   136  58238080       constant
0xffff582f834c   140  0000ffff       constant
0xffff582f8350   144  movz x16, #0x0
0xffff582f8354   148  sub csp, jssp, #0x10 (16)
0xffff582f8358   152  stp fp, lr, [jssp, #-16]!
0xffff582f835c   156  bl #+0x4 (addr 0xffff582f8360)
0xffff582f8360   160  movz x17, #0xa00000000
0xffff582f8364   164  sub csp, jssp, #0x10 (16)
0xffff582f8368   168  stp x17, cp, [jssp, #-16]!
0xffff582f836c   172  add fp, jssp, #0x10 (16)
0xffff582f8370   176  ldr x17, pc+24 (addr 0x0000ffff582f8388)    ;; lazy deoptimization bailout 0
0xffff582f8374   180  add x17, x17, x16
0xffff582f8378   184  br x17
0xffff582f837c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f8380   192  d63f03e0       constant
0xffff582f8384   196  d503201f       constant
0xffff582f8388   200  58006000       constant
0xffff582f838c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f82f0  code target (STUB)  (0xffff582170c0)
0xffff582f8328  code target (STUB)  (0xffff58238080)
0xffff582f8338  constant pool (size 24)
0xffff582f8370  runtime entry
0xffff582f837c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f82c0     0  tbz w0, #0, #+0x90 (addr 0xffff582f8350)
0xffff582f82c4     4  mov x2, x0
0xffff582f82c8     8  stur x2, [x1, #175]
0xffff582f82cc    12  add x3, x1, #0xaf (175)
0xffff582f82d0    16  and x2, x2, #0xfffffffffff00000
0xffff582f82d4    20  ldr x2, [x2, #8]
0xffff582f82d8    24  tbz w2, #1, #+0x24 (addr 0xffff582f82fc)
0xffff582f82dc    28  and x2, x1, #0xfffffffffff00000
0xffff582f82e0    32  ldr x2, [x2, #8]
0xffff582f82e4    36  tbz w2, #2, #+0x18 (addr 0xffff582f82fc)
0xffff582f82e8    40  sub csp, jssp, #0x8 (8)
0xffff582f82ec    44  str lr, [jssp, #-8]!
0xffff582f82f0    48  ldr x16, pc+80 (addr 0x0000ffff582f8340)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f82f4    52  blr x16
0xffff582f82f8    56  ldr lr, [jssp], #8
0xffff582f82fc    60  stur x5, [x1, #-1]
0xffff582f8300    64  tbz w5, #0, #+0x34 (addr 0xffff582f8334)
0xffff582f8304    68  sub x2, x1, #0x1 (1)
0xffff582f8308    72  and x5, x5, #0xfffffffffff00000
0xffff582f830c    76  ldr x5, [x5, #8]
0xffff582f8310    80  tbz w5, #1, #+0x24 (addr 0xffff582f8334)
0xffff582f8314    84  and x5, x1, #0xfffffffffff00000
0xffff582f8318    88  ldr x5, [x5, #8]
0xffff582f831c    92  tbz w5, #2, #+0x18 (addr 0xffff582f8334)
0xffff582f8320    96  sub csp, jssp, #0x8 (8)
0xffff582f8324   100  str lr, [jssp, #-8]!
0xffff582f8328   104  ldr x16, pc+32 (addr 0x0000ffff582f8348)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f832c   108  blr x16
0xffff582f8330   112  ldr lr, [jssp], #8
0xffff582f8334   116  ret
0xffff582f8338   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f833c   124  d63f03e0       constant
0xffff582f8340   128  582170c0       constant
0xffff582f8344   132  0000ffff       constant
0xffff582f8348   136  58238080       constant
0xffff582f834c   140  0000ffff       constant
0xffff582f8350   144  movz x16, #0x0
0xffff582f8354   148  sub csp, jssp, #0x10 (16)
0xffff582f8358   152  stp fp, lr, [jssp, #-16]!
0xffff582f835c   156  bl #+0x4 (addr 0xffff582f8360)
0xffff582f8360   160  movz x17, #0xa00000000
0xffff582f8364   164  sub csp, jssp, #0x10 (16)
0xffff582f8368   168  stp x17, cp, [jssp, #-16]!
0xffff582f836c   172  add fp, jssp, #0x10 (16)
0xffff582f8370   176  ldr x17, pc+24 (addr 0x0000ffff582f8388)    ;; lazy deoptimization bailout 0
0xffff582f8374   180  add x17, x17, x16
0xffff582f8378   184  br x17
0xffff582f837c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f8380   192  d63f03e0       constant
0xffff582f8384   196  d503201f       constant
0xffff582f8388   200  58006000       constant
0xffff582f838c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f82f0  code target (STUB)  (0xffff582170c0)
0xffff582f8328  code target (STUB)  (0xffff58238080)
0xffff582f8338  constant pool (size 24)
0xffff582f8370  runtime entry
0xffff582f837c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = prefinished
compiler = unknown
Instructions (size = 152)
0xffff582f8400     0  sub csp, jssp, #0x8 (8)
0xffff582f8404     4  str x3, [jssp, #-8]!
0xffff582f8408     8  sub csp, jssp, #0x8 (8)
0xffff582f840c    12  str x4, [jssp, #-8]!
0xffff582f8410    16  ldr x3, pc+88 (addr 0x0000ffff582f8468)    ;; object: 0x225e95f9 Cell for 0
0xffff582f8414    20  ldur x3, [x3, #7]
0xffff582f8418    24  cmp x3, #0x0 (0)
0xffff582f841c    28  b.ne #+0x30 (addr 0xffff582f844c)
0xffff582f8420    32  tbz w0, #0, #+0x2c (addr 0xffff582f844c)
0xffff582f8424    36  ldr x5, pc+76 (addr 0x0000ffff582f8470)    ;; object: 0x225ea051 WeakCell for 0x32b408a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8428    40  ldur x5, [x5, #7]
0xffff582f842c    44  tbz w5, #0, #+0x20 (addr 0xffff582f844c)
0xffff582f8430    48  ldursw x4, [x5, #15]
0xffff582f8434    52  tbnz w4, #23, #+0x18 (addr 0xffff582f844c)
0xffff582f8438    56  ldr x4, [jssp], #8
0xffff582f843c    60  ldr x3, [jssp], #8
0xffff582f8440    64  ldr x2, pc+56 (addr 0x0000ffff582f8478)    ;; object: 0x22522a39 <String[11]: prefinished>
0xffff582f8444    68  ldr x16, pc+60 (addr 0x0000ffff582f8480)    ;; code: HANDLER, StoreTransitionStub, minor: 198678
0xffff582f8448    72  br x16
0xffff582f844c    76  ldr x2, pc+60 (addr 0x0000ffff582f8488)    ;; object: 0x22522a39 <String[11]: prefinished>
0xffff582f8450    80  ldr x4, [jssp], #8
0xffff582f8454    84  ldr x3, [jssp], #8
0xffff582f8458    88  ldr x16, pc+56 (addr 0x0000ffff582f8490)    ;; code: BUILTIN
0xffff582f845c    92  br x16
0xffff582f8460    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f8464   100  d63f03e0       constant
0xffff582f8468   104  225e95f9       constant
0xffff582f846c   108  00000000       constant
0xffff582f8470   112  225ea051       constant
0xffff582f8474   116  00000000       constant
0xffff582f8478   120  22522a39       constant
0xffff582f847c   124  00000000       constant
0xffff582f8480   128  582f82c0       constant
0xffff582f8484   132  0000ffff       constant
0xffff582f8488   136  22522a39       constant
0xffff582f848c   140  00000000       constant
0xffff582f8490   144  58222420       constant
0xffff582f8494   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f8410  embedded object  (0x225e95f9 Cell for 0)
0xffff582f8424  embedded object  (0x225ea051 WeakCell for 0x32b408a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8440  embedded object  (0x22522a39 <String[11]: prefinished>)
0xffff582f8444  code target (HANDLER)  (0xffff582f82c0)
0xffff582f844c  embedded object  (0x22522a39 <String[11]: prefinished>)
0xffff582f8458  code target (BUILTIN)  (0xffff58222420)
0xffff582f8460  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f8500     0  tbz w0, #0, #+0x90 (addr 0xffff582f8590)
0xffff582f8504     4  mov x2, x0
0xffff582f8508     8  stur x2, [x1, #183]
0xffff582f850c    12  add x3, x1, #0xb7 (183)
0xffff582f8510    16  and x2, x2, #0xfffffffffff00000
0xffff582f8514    20  ldr x2, [x2, #8]
0xffff582f8518    24  tbz w2, #1, #+0x24 (addr 0xffff582f853c)
0xffff582f851c    28  and x2, x1, #0xfffffffffff00000
0xffff582f8520    32  ldr x2, [x2, #8]
0xffff582f8524    36  tbz w2, #2, #+0x18 (addr 0xffff582f853c)
0xffff582f8528    40  sub csp, jssp, #0x8 (8)
0xffff582f852c    44  str lr, [jssp, #-8]!
0xffff582f8530    48  ldr x16, pc+80 (addr 0x0000ffff582f8580)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f8534    52  blr x16
0xffff582f8538    56  ldr lr, [jssp], #8
0xffff582f853c    60  stur x5, [x1, #-1]
0xffff582f8540    64  tbz w5, #0, #+0x34 (addr 0xffff582f8574)
0xffff582f8544    68  sub x2, x1, #0x1 (1)
0xffff582f8548    72  and x5, x5, #0xfffffffffff00000
0xffff582f854c    76  ldr x5, [x5, #8]
0xffff582f8550    80  tbz w5, #1, #+0x24 (addr 0xffff582f8574)
0xffff582f8554    84  and x5, x1, #0xfffffffffff00000
0xffff582f8558    88  ldr x5, [x5, #8]
0xffff582f855c    92  tbz w5, #2, #+0x18 (addr 0xffff582f8574)
0xffff582f8560    96  sub csp, jssp, #0x8 (8)
0xffff582f8564   100  str lr, [jssp, #-8]!
0xffff582f8568   104  ldr x16, pc+32 (addr 0x0000ffff582f8588)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f856c   108  blr x16
0xffff582f8570   112  ldr lr, [jssp], #8
0xffff582f8574   116  ret
0xffff582f8578   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f857c   124  d63f03e0       constant
0xffff582f8580   128  582170c0       constant
0xffff582f8584   132  0000ffff       constant
0xffff582f8588   136  58238080       constant
0xffff582f858c   140  0000ffff       constant
0xffff582f8590   144  movz x16, #0x0
0xffff582f8594   148  sub csp, jssp, #0x10 (16)
0xffff582f8598   152  stp fp, lr, [jssp, #-16]!
0xffff582f859c   156  bl #+0x4 (addr 0xffff582f85a0)
0xffff582f85a0   160  movz x17, #0xa00000000
0xffff582f85a4   164  sub csp, jssp, #0x10 (16)
0xffff582f85a8   168  stp x17, cp, [jssp, #-16]!
0xffff582f85ac   172  add fp, jssp, #0x10 (16)
0xffff582f85b0   176  ldr x17, pc+24 (addr 0x0000ffff582f85c8)    ;; lazy deoptimization bailout 0
0xffff582f85b4   180  add x17, x17, x16
0xffff582f85b8   184  br x17
0xffff582f85bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f85c0   192  d63f03e0       constant
0xffff582f85c4   196  d503201f       constant
0xffff582f85c8   200  58006000       constant
0xffff582f85cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f8530  code target (STUB)  (0xffff582170c0)
0xffff582f8568  code target (STUB)  (0xffff58238080)
0xffff582f8578  constant pool (size 24)
0xffff582f85b0  runtime entry
0xffff582f85bc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f8500     0  tbz w0, #0, #+0x90 (addr 0xffff582f8590)
0xffff582f8504     4  mov x2, x0
0xffff582f8508     8  stur x2, [x1, #183]
0xffff582f850c    12  add x3, x1, #0xb7 (183)
0xffff582f8510    16  and x2, x2, #0xfffffffffff00000
0xffff582f8514    20  ldr x2, [x2, #8]
0xffff582f8518    24  tbz w2, #1, #+0x24 (addr 0xffff582f853c)
0xffff582f851c    28  and x2, x1, #0xfffffffffff00000
0xffff582f8520    32  ldr x2, [x2, #8]
0xffff582f8524    36  tbz w2, #2, #+0x18 (addr 0xffff582f853c)
0xffff582f8528    40  sub csp, jssp, #0x8 (8)
0xffff582f852c    44  str lr, [jssp, #-8]!
0xffff582f8530    48  ldr x16, pc+80 (addr 0x0000ffff582f8580)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f8534    52  blr x16
0xffff582f8538    56  ldr lr, [jssp], #8
0xffff582f853c    60  stur x5, [x1, #-1]
0xffff582f8540    64  tbz w5, #0, #+0x34 (addr 0xffff582f8574)
0xffff582f8544    68  sub x2, x1, #0x1 (1)
0xffff582f8548    72  and x5, x5, #0xfffffffffff00000
0xffff582f854c    76  ldr x5, [x5, #8]
0xffff582f8550    80  tbz w5, #1, #+0x24 (addr 0xffff582f8574)
0xffff582f8554    84  and x5, x1, #0xfffffffffff00000
0xffff582f8558    88  ldr x5, [x5, #8]
0xffff582f855c    92  tbz w5, #2, #+0x18 (addr 0xffff582f8574)
0xffff582f8560    96  sub csp, jssp, #0x8 (8)
0xffff582f8564   100  str lr, [jssp, #-8]!
0xffff582f8568   104  ldr x16, pc+32 (addr 0x0000ffff582f8588)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f856c   108  blr x16
0xffff582f8570   112  ldr lr, [jssp], #8
0xffff582f8574   116  ret
0xffff582f8578   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f857c   124  d63f03e0       constant
0xffff582f8580   128  582170c0       constant
0xffff582f8584   132  0000ffff       constant
0xffff582f8588   136  58238080       constant
0xffff582f858c   140  0000ffff       constant
0xffff582f8590   144  movz x16, #0x0
0xffff582f8594   148  sub csp, jssp, #0x10 (16)
0xffff582f8598   152  stp fp, lr, [jssp, #-16]!
0xffff582f859c   156  bl #+0x4 (addr 0xffff582f85a0)
0xffff582f85a0   160  movz x17, #0xa00000000
0xffff582f85a4   164  sub csp, jssp, #0x10 (16)
0xffff582f85a8   168  stp x17, cp, [jssp, #-16]!
0xffff582f85ac   172  add fp, jssp, #0x10 (16)
0xffff582f85b0   176  ldr x17, pc+24 (addr 0x0000ffff582f85c8)    ;; lazy deoptimization bailout 0
0xffff582f85b4   180  add x17, x17, x16
0xffff582f85b8   184  br x17
0xffff582f85bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f85c0   192  d63f03e0       constant
0xffff582f85c4   196  d503201f       constant
0xffff582f85c8   200  58006000       constant
0xffff582f85cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f8530  code target (STUB)  (0xffff582170c0)
0xffff582f8568  code target (STUB)  (0xffff58238080)
0xffff582f8578  constant pool (size 24)
0xffff582f85b0  runtime entry
0xffff582f85bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = errorEmitted
compiler = unknown
Instructions (size = 152)
0xffff582f8640     0  sub csp, jssp, #0x8 (8)
0xffff582f8644     4  str x3, [jssp, #-8]!
0xffff582f8648     8  sub csp, jssp, #0x8 (8)
0xffff582f864c    12  str x4, [jssp, #-8]!
0xffff582f8650    16  ldr x3, pc+88 (addr 0x0000ffff582f86a8)    ;; object: 0x225e95f9 Cell for 0
0xffff582f8654    20  ldur x3, [x3, #7]
0xffff582f8658    24  cmp x3, #0x0 (0)
0xffff582f865c    28  b.ne #+0x30 (addr 0xffff582f868c)
0xffff582f8660    32  tbz w0, #0, #+0x2c (addr 0xffff582f868c)
0xffff582f8664    36  ldr x5, pc+76 (addr 0x0000ffff582f86b0)    ;; object: 0x225ea141 WeakCell for 0x32b408f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8668    40  ldur x5, [x5, #7]
0xffff582f866c    44  tbz w5, #0, #+0x20 (addr 0xffff582f868c)
0xffff582f8670    48  ldursw x4, [x5, #15]
0xffff582f8674    52  tbnz w4, #23, #+0x18 (addr 0xffff582f868c)
0xffff582f8678    56  ldr x4, [jssp], #8
0xffff582f867c    60  ldr x3, [jssp], #8
0xffff582f8680    64  ldr x2, pc+56 (addr 0x0000ffff582f86b8)    ;; object: 0x22522a61 <String[12]: errorEmitted>
0xffff582f8684    68  ldr x16, pc+60 (addr 0x0000ffff582f86c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198679
0xffff582f8688    72  br x16
0xffff582f868c    76  ldr x2, pc+60 (addr 0x0000ffff582f86c8)    ;; object: 0x22522a61 <String[12]: errorEmitted>
0xffff582f8690    80  ldr x4, [jssp], #8
0xffff582f8694    84  ldr x3, [jssp], #8
0xffff582f8698    88  ldr x16, pc+56 (addr 0x0000ffff582f86d0)    ;; code: BUILTIN
0xffff582f869c    92  br x16
0xffff582f86a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f86a4   100  d63f03e0       constant
0xffff582f86a8   104  225e95f9       constant
0xffff582f86ac   108  00000000       constant
0xffff582f86b0   112  225ea141       constant
0xffff582f86b4   116  00000000       constant
0xffff582f86b8   120  22522a61       constant
0xffff582f86bc   124  00000000       constant
0xffff582f86c0   128  582f8500       constant
0xffff582f86c4   132  0000ffff       constant
0xffff582f86c8   136  22522a61       constant
0xffff582f86cc   140  00000000       constant
0xffff582f86d0   144  58222420       constant
0xffff582f86d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f8650  embedded object  (0x225e95f9 Cell for 0)
0xffff582f8664  embedded object  (0x225ea141 WeakCell for 0x32b408f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8680  embedded object  (0x22522a61 <String[12]: errorEmitted>)
0xffff582f8684  code target (HANDLER)  (0xffff582f8500)
0xffff582f868c  embedded object  (0x22522a61 <String[12]: errorEmitted>)
0xffff582f8698  code target (BUILTIN)  (0xffff58222420)
0xffff582f86a0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f8740     0  mov x6, x0
0xffff582f8744     4  tbnz w6, #0, #+0x54 (addr 0xffff582f8798)
0xffff582f8748     8  stur x6, [x1, #191]
0xffff582f874c    12  stur x5, [x1, #-1]
0xffff582f8750    16  tbz w5, #0, #+0x34 (addr 0xffff582f8784)
0xffff582f8754    20  sub x2, x1, #0x1 (1)
0xffff582f8758    24  and x5, x5, #0xfffffffffff00000
0xffff582f875c    28  ldr x5, [x5, #8]
0xffff582f8760    32  tbz w5, #1, #+0x24 (addr 0xffff582f8784)
0xffff582f8764    36  and x5, x1, #0xfffffffffff00000
0xffff582f8768    40  ldr x5, [x5, #8]
0xffff582f876c    44  tbz w5, #2, #+0x18 (addr 0xffff582f8784)
0xffff582f8770    48  sub csp, jssp, #0x8 (8)
0xffff582f8774    52  str lr, [jssp, #-8]!
0xffff582f8778    56  ldr x16, pc+24 (addr 0x0000ffff582f8790)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f877c    60  blr x16
0xffff582f8780    64  ldr lr, [jssp], #8
0xffff582f8784    68  ret
0xffff582f8788    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f878c    76  d63f03e0       constant
0xffff582f8790    80  58238080       constant
0xffff582f8794    84  0000ffff       constant
0xffff582f8798    88  movz x16, #0x0
0xffff582f879c    92  sub csp, jssp, #0x10 (16)
0xffff582f87a0    96  stp fp, lr, [jssp, #-16]!
0xffff582f87a4   100  bl #+0x4 (addr 0xffff582f87a8)
0xffff582f87a8   104  movz x17, #0xa00000000
0xffff582f87ac   108  sub csp, jssp, #0x10 (16)
0xffff582f87b0   112  stp x17, cp, [jssp, #-16]!
0xffff582f87b4   116  add fp, jssp, #0x10 (16)
0xffff582f87b8   120  ldr x17, pc+24 (addr 0x0000ffff582f87d0)    ;; lazy deoptimization bailout 0
0xffff582f87bc   124  add x17, x17, x16
0xffff582f87c0   128  br x17
0xffff582f87c4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f87c8   136  d63f03e0       constant
0xffff582f87cc   140  d503201f       constant
0xffff582f87d0   144  58006000       constant
0xffff582f87d4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f8778  code target (STUB)  (0xffff58238080)
0xffff582f8788  constant pool (size 16)
0xffff582f87b8  runtime entry
0xffff582f87c4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f8740     0  mov x6, x0
0xffff582f8744     4  tbnz w6, #0, #+0x54 (addr 0xffff582f8798)
0xffff582f8748     8  stur x6, [x1, #191]
0xffff582f874c    12  stur x5, [x1, #-1]
0xffff582f8750    16  tbz w5, #0, #+0x34 (addr 0xffff582f8784)
0xffff582f8754    20  sub x2, x1, #0x1 (1)
0xffff582f8758    24  and x5, x5, #0xfffffffffff00000
0xffff582f875c    28  ldr x5, [x5, #8]
0xffff582f8760    32  tbz w5, #1, #+0x24 (addr 0xffff582f8784)
0xffff582f8764    36  and x5, x1, #0xfffffffffff00000
0xffff582f8768    40  ldr x5, [x5, #8]
0xffff582f876c    44  tbz w5, #2, #+0x18 (addr 0xffff582f8784)
0xffff582f8770    48  sub csp, jssp, #0x8 (8)
0xffff582f8774    52  str lr, [jssp, #-8]!
0xffff582f8778    56  ldr x16, pc+24 (addr 0x0000ffff582f8790)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f877c    60  blr x16
0xffff582f8780    64  ldr lr, [jssp], #8
0xffff582f8784    68  ret
0xffff582f8788    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f878c    76  d63f03e0       constant
0xffff582f8790    80  58238080       constant
0xffff582f8794    84  0000ffff       constant
0xffff582f8798    88  movz x16, #0x0
0xffff582f879c    92  sub csp, jssp, #0x10 (16)
0xffff582f87a0    96  stp fp, lr, [jssp, #-16]!
0xffff582f87a4   100  bl #+0x4 (addr 0xffff582f87a8)
0xffff582f87a8   104  movz x17, #0xa00000000
0xffff582f87ac   108  sub csp, jssp, #0x10 (16)
0xffff582f87b0   112  stp x17, cp, [jssp, #-16]!
0xffff582f87b4   116  add fp, jssp, #0x10 (16)
0xffff582f87b8   120  ldr x17, pc+24 (addr 0x0000ffff582f87d0)    ;; lazy deoptimization bailout 0
0xffff582f87bc   124  add x17, x17, x16
0xffff582f87c0   128  br x17
0xffff582f87c4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f87c8   136  d63f03e0       constant
0xffff582f87cc   140  d503201f       constant
0xffff582f87d0   144  58006000       constant
0xffff582f87d4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f8778  code target (STUB)  (0xffff58238080)
0xffff582f8788  constant pool (size 16)
0xffff582f87b8  runtime entry
0xffff582f87c4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = bufferedRequestCount
compiler = unknown
Instructions (size = 152)
0xffff582f8840     0  sub csp, jssp, #0x8 (8)
0xffff582f8844     4  str x3, [jssp, #-8]!
0xffff582f8848     8  sub csp, jssp, #0x8 (8)
0xffff582f884c    12  str x4, [jssp, #-8]!
0xffff582f8850    16  ldr x3, pc+88 (addr 0x0000ffff582f88a8)    ;; object: 0x225e95f9 Cell for 0
0xffff582f8854    20  ldur x3, [x3, #7]
0xffff582f8858    24  cmp x3, #0x0 (0)
0xffff582f885c    28  b.ne #+0x2c (addr 0xffff582f8888)
0xffff582f8860    32  ldr x5, pc+80 (addr 0x0000ffff582f88b0)    ;; object: 0x225ea231 WeakCell for 0x32b40951 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8864    36  ldur x5, [x5, #7]
0xffff582f8868    40  tbz w5, #0, #+0x20 (addr 0xffff582f8888)
0xffff582f886c    44  ldursw x4, [x5, #15]
0xffff582f8870    48  tbnz w4, #23, #+0x18 (addr 0xffff582f8888)
0xffff582f8874    52  ldr x4, [jssp], #8
0xffff582f8878    56  ldr x3, [jssp], #8
0xffff582f887c    60  ldr x2, pc+60 (addr 0x0000ffff582f88b8)    ;; object: 0x22522a89 <String[20]: bufferedRequestCount>
0xffff582f8880    64  ldr x16, pc+64 (addr 0x0000ffff582f88c0)    ;; code: HANDLER, StoreTransitionStub, minor: 174104
0xffff582f8884    68  br x16
0xffff582f8888    72  ldr x2, pc+64 (addr 0x0000ffff582f88c8)    ;; object: 0x22522a89 <String[20]: bufferedRequestCount>
0xffff582f888c    76  ldr x4, [jssp], #8
0xffff582f8890    80  ldr x3, [jssp], #8
0xffff582f8894    84  ldr x16, pc+60 (addr 0x0000ffff582f88d0)    ;; code: BUILTIN
0xffff582f8898    88  br x16
0xffff582f889c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582f88a0    96  d63f03e0       constant
0xffff582f88a4   100  d503201f       constant
0xffff582f88a8   104  225e95f9       constant
0xffff582f88ac   108  00000000       constant
0xffff582f88b0   112  225ea231       constant
0xffff582f88b4   116  00000000       constant
0xffff582f88b8   120  22522a89       constant
0xffff582f88bc   124  00000000       constant
0xffff582f88c0   128  582f8740       constant
0xffff582f88c4   132  0000ffff       constant
0xffff582f88c8   136  22522a89       constant
0xffff582f88cc   140  00000000       constant
0xffff582f88d0   144  58222420       constant
0xffff582f88d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f8850  embedded object  (0x225e95f9 Cell for 0)
0xffff582f8860  embedded object  (0x225ea231 WeakCell for 0x32b40951 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f887c  embedded object  (0x22522a89 <String[20]: bufferedRequestCount>)
0xffff582f8880  code target (HANDLER)  (0xffff582f8740)
0xffff582f8888  embedded object  (0x22522a89 <String[20]: bufferedRequestCount>)
0xffff582f8894  code target (BUILTIN)  (0xffff58222420)
0xffff582f889c  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff582f8940     0  sub csp, jssp, #0x8 (8)
0xffff582f8944     4  str x3, [jssp, #-8]!
0xffff582f8948     8  sub csp, jssp, #0x8 (8)
0xffff582f894c    12  str x4, [jssp, #-8]!
0xffff582f8950    16  ldr x3, pc+88 (addr 0x0000ffff582f89a8)    ;; object: 0x225ea361 Cell for 0
0xffff582f8954    20  ldur x3, [x3, #7]
0xffff582f8958    24  cmp x3, #0x0 (0)
0xffff582f895c    28  b.ne #+0x30 (addr 0xffff582f898c)
0xffff582f8960    32  tbz w0, #0, #+0x2c (addr 0xffff582f898c)
0xffff582f8964    36  ldr x5, pc+76 (addr 0x0000ffff582f89b0)    ;; object: 0x225d1bc9 WeakCell for 0x32b38919 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8968    40  ldur x5, [x5, #7]
0xffff582f896c    44  tbz w5, #0, #+0x20 (addr 0xffff582f898c)
0xffff582f8970    48  ldursw x4, [x5, #15]
0xffff582f8974    52  tbnz w4, #23, #+0x18 (addr 0xffff582f898c)
0xffff582f8978    56  ldr x4, [jssp], #8
0xffff582f897c    60  ldr x3, [jssp], #8
0xffff582f8980    64  ldr x2, pc+56 (addr 0x0000ffff582f89b8)    ;; object: 0x39c05209 <String[4]: next>
0xffff582f8984    68  ldr x16, pc+60 (addr 0x0000ffff582f89c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff582f8988    72  br x16
0xffff582f898c    76  ldr x2, pc+60 (addr 0x0000ffff582f89c8)    ;; object: 0x39c05209 <String[4]: next>
0xffff582f8990    80  ldr x4, [jssp], #8
0xffff582f8994    84  ldr x3, [jssp], #8
0xffff582f8998    88  ldr x16, pc+56 (addr 0x0000ffff582f89d0)    ;; code: BUILTIN
0xffff582f899c    92  br x16
0xffff582f89a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f89a4   100  d63f03e0       constant
0xffff582f89a8   104  225ea361       constant
0xffff582f89ac   108  00000000       constant
0xffff582f89b0   112  225d1bc9       constant
0xffff582f89b4   116  00000000       constant
0xffff582f89b8   120  39c05209       constant
0xffff582f89bc   124  00000000       constant
0xffff582f89c0   128  5828b940       constant
0xffff582f89c4   132  0000ffff       constant
0xffff582f89c8   136  39c05209       constant
0xffff582f89cc   140  00000000       constant
0xffff582f89d0   144  58222420       constant
0xffff582f89d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f8950  embedded object  (0x225ea361 Cell for 0)
0xffff582f8964  embedded object  (0x225d1bc9 WeakCell for 0x32b38919 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8980  embedded object  (0x39c05209 <String[4]: next>)
0xffff582f8984  code target (HANDLER)  (0xffff5828b940)
0xffff582f898c  embedded object  (0x39c05209 <String[4]: next>)
0xffff582f8998  code target (BUILTIN)  (0xffff58222420)
0xffff582f89a0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = entry
compiler = unknown
Instructions (size = 152)
0xffff582f8a40     0  sub csp, jssp, #0x8 (8)
0xffff582f8a44     4  str x3, [jssp, #-8]!
0xffff582f8a48     8  sub csp, jssp, #0x8 (8)
0xffff582f8a4c    12  str x4, [jssp, #-8]!
0xffff582f8a50    16  ldr x3, pc+88 (addr 0x0000ffff582f8aa8)    ;; object: 0x225ea361 Cell for 0
0xffff582f8a54    20  ldur x3, [x3, #7]
0xffff582f8a58    24  cmp x3, #0x0 (0)
0xffff582f8a5c    28  b.ne #+0x30 (addr 0xffff582f8a8c)
0xffff582f8a60    32  tbz w0, #0, #+0x2c (addr 0xffff582f8a8c)
0xffff582f8a64    36  ldr x5, pc+76 (addr 0x0000ffff582f8ab0)    ;; object: 0x225d1be1 WeakCell for 0x32b38971 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8a68    40  ldur x5, [x5, #7]
0xffff582f8a6c    44  tbz w5, #0, #+0x20 (addr 0xffff582f8a8c)
0xffff582f8a70    48  ldursw x4, [x5, #15]
0xffff582f8a74    52  tbnz w4, #23, #+0x18 (addr 0xffff582f8a8c)
0xffff582f8a78    56  ldr x4, [jssp], #8
0xffff582f8a7c    60  ldr x3, [jssp], #8
0xffff582f8a80    64  ldr x2, pc+56 (addr 0x0000ffff582f8ab8)    ;; object: 0x22520e89 <String[5]: entry>
0xffff582f8a84    68  ldr x16, pc+60 (addr 0x0000ffff582f8ac0)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff582f8a88    72  br x16
0xffff582f8a8c    76  ldr x2, pc+60 (addr 0x0000ffff582f8ac8)    ;; object: 0x22520e89 <String[5]: entry>
0xffff582f8a90    80  ldr x4, [jssp], #8
0xffff582f8a94    84  ldr x3, [jssp], #8
0xffff582f8a98    88  ldr x16, pc+56 (addr 0x0000ffff582f8ad0)    ;; code: BUILTIN
0xffff582f8a9c    92  br x16
0xffff582f8aa0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f8aa4   100  d63f03e0       constant
0xffff582f8aa8   104  225ea361       constant
0xffff582f8aac   108  00000000       constant
0xffff582f8ab0   112  225d1be1       constant
0xffff582f8ab4   116  00000000       constant
0xffff582f8ab8   120  22520e89       constant
0xffff582f8abc   124  00000000       constant
0xffff582f8ac0   128  5828bb80       constant
0xffff582f8ac4   132  0000ffff       constant
0xffff582f8ac8   136  22520e89       constant
0xffff582f8acc   140  00000000       constant
0xffff582f8ad0   144  58222420       constant
0xffff582f8ad4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f8a50  embedded object  (0x225ea361 Cell for 0)
0xffff582f8a64  embedded object  (0x225d1be1 WeakCell for 0x32b38971 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8a80  embedded object  (0x22520e89 <String[5]: entry>)
0xffff582f8a84  code target (HANDLER)  (0xffff5828bb80)
0xffff582f8a8c  embedded object  (0x22520e89 <String[5]: entry>)
0xffff582f8a98  code target (BUILTIN)  (0xffff58222420)
0xffff582f8aa0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = finish
compiler = unknown
Instructions (size = 184)
0xffff582f8b40     0  sub csp, jssp, #0x8 (8)
0xffff582f8b44     4  str x3, [jssp, #-8]!
0xffff582f8b48     8  sub csp, jssp, #0x8 (8)
0xffff582f8b4c    12  str x4, [jssp, #-8]!
0xffff582f8b50    16  ldr x3, pc+112 (addr 0x0000ffff582f8bc0)    ;; object: 0x225ea361 Cell for 0
0xffff582f8b54    20  ldur x3, [x3, #7]
0xffff582f8b58    24  cmp x3, #0x0 (0)
0xffff582f8b5c    28  b.ne #+0x44 (addr 0xffff582f8ba0)
0xffff582f8b60    32  tbz w0, #0, #+0x40 (addr 0xffff582f8ba0)
0xffff582f8b64    36  ldur x3, [x0, #-1]
0xffff582f8b68    40  ldr x4, pc+96 (addr 0x0000ffff582f8bc8)    ;; object: 0x39cc71e1 WeakCell for 0x32b06989 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8b6c    44  ldur x4, [x4, #7]
0xffff582f8b70    48  cmp x3, x4
0xffff582f8b74    52  b.ne #+0x2c (addr 0xffff582f8ba0)
0xffff582f8b78    56  ldr x5, pc+88 (addr 0x0000ffff582f8bd0)    ;; object: 0x225ea411 WeakCell for 0x32b409a9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8b7c    60  ldur x5, [x5, #7]
0xffff582f8b80    64  tbz w5, #0, #+0x20 (addr 0xffff582f8ba0)
0xffff582f8b84    68  ldursw x4, [x5, #15]
0xffff582f8b88    72  tbnz w4, #23, #+0x18 (addr 0xffff582f8ba0)
0xffff582f8b8c    76  ldr x4, [jssp], #8
0xffff582f8b90    80  ldr x3, [jssp], #8
0xffff582f8b94    84  ldr x2, pc+68 (addr 0x0000ffff582f8bd8)    ;; object: 0x2250f0e9 <String[6]: finish>
0xffff582f8b98    88  ldr x16, pc+72 (addr 0x0000ffff582f8be0)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff582f8b9c    92  br x16
0xffff582f8ba0    96  ldr x2, pc+72 (addr 0x0000ffff582f8be8)    ;; object: 0x2250f0e9 <String[6]: finish>
0xffff582f8ba4   100  ldr x4, [jssp], #8
0xffff582f8ba8   104  ldr x3, [jssp], #8
0xffff582f8bac   108  ldr x16, pc+68 (addr 0x0000ffff582f8bf0)    ;; code: BUILTIN
0xffff582f8bb0   112  br x16
0xffff582f8bb4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582f8bb8   120  d63f03e0       constant
0xffff582f8bbc   124  d503201f       constant
0xffff582f8bc0   128  225ea361       constant
0xffff582f8bc4   132  00000000       constant
0xffff582f8bc8   136  39cc71e1       constant
0xffff582f8bcc   140  00000000       constant
0xffff582f8bd0   144  225ea411       constant
0xffff582f8bd4   148  00000000       constant
0xffff582f8bd8   152  2250f0e9       constant
0xffff582f8bdc   156  00000000       constant
0xffff582f8be0   160  5828bdc0       constant
0xffff582f8be4   164  0000ffff       constant
0xffff582f8be8   168  2250f0e9       constant
0xffff582f8bec   172  00000000       constant
0xffff582f8bf0   176  58222420       constant
0xffff582f8bf4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582f8b50  embedded object  (0x225ea361 Cell for 0)
0xffff582f8b68  embedded object  (0x39cc71e1 WeakCell for 0x32b06989 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8b78  embedded object  (0x225ea411 WeakCell for 0x32b409a9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8b94  embedded object  (0x2250f0e9 <String[6]: finish>)
0xffff582f8b98  code target (HANDLER)  (0xffff5828bdc0)
0xffff582f8ba0  embedded object  (0x2250f0e9 <String[6]: finish>)
0xffff582f8bac  code target (BUILTIN)  (0xffff58222420)
0xffff582f8bb4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f8c60     0  tbz w0, #0, #+0x90 (addr 0xffff582f8cf0)
0xffff582f8c64     4  mov x2, x0
0xffff582f8c68     8  stur x2, [x1, #199]
0xffff582f8c6c    12  add x3, x1, #0xc7 (199)
0xffff582f8c70    16  and x2, x2, #0xfffffffffff00000
0xffff582f8c74    20  ldr x2, [x2, #8]
0xffff582f8c78    24  tbz w2, #1, #+0x24 (addr 0xffff582f8c9c)
0xffff582f8c7c    28  and x2, x1, #0xfffffffffff00000
0xffff582f8c80    32  ldr x2, [x2, #8]
0xffff582f8c84    36  tbz w2, #2, #+0x18 (addr 0xffff582f8c9c)
0xffff582f8c88    40  sub csp, jssp, #0x8 (8)
0xffff582f8c8c    44  str lr, [jssp, #-8]!
0xffff582f8c90    48  ldr x16, pc+80 (addr 0x0000ffff582f8ce0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f8c94    52  blr x16
0xffff582f8c98    56  ldr lr, [jssp], #8
0xffff582f8c9c    60  stur x5, [x1, #-1]
0xffff582f8ca0    64  tbz w5, #0, #+0x34 (addr 0xffff582f8cd4)
0xffff582f8ca4    68  sub x2, x1, #0x1 (1)
0xffff582f8ca8    72  and x5, x5, #0xfffffffffff00000
0xffff582f8cac    76  ldr x5, [x5, #8]
0xffff582f8cb0    80  tbz w5, #1, #+0x24 (addr 0xffff582f8cd4)
0xffff582f8cb4    84  and x5, x1, #0xfffffffffff00000
0xffff582f8cb8    88  ldr x5, [x5, #8]
0xffff582f8cbc    92  tbz w5, #2, #+0x18 (addr 0xffff582f8cd4)
0xffff582f8cc0    96  sub csp, jssp, #0x8 (8)
0xffff582f8cc4   100  str lr, [jssp, #-8]!
0xffff582f8cc8   104  ldr x16, pc+32 (addr 0x0000ffff582f8ce8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f8ccc   108  blr x16
0xffff582f8cd0   112  ldr lr, [jssp], #8
0xffff582f8cd4   116  ret
0xffff582f8cd8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f8cdc   124  d63f03e0       constant
0xffff582f8ce0   128  582170c0       constant
0xffff582f8ce4   132  0000ffff       constant
0xffff582f8ce8   136  58238080       constant
0xffff582f8cec   140  0000ffff       constant
0xffff582f8cf0   144  movz x16, #0x0
0xffff582f8cf4   148  sub csp, jssp, #0x10 (16)
0xffff582f8cf8   152  stp fp, lr, [jssp, #-16]!
0xffff582f8cfc   156  bl #+0x4 (addr 0xffff582f8d00)
0xffff582f8d00   160  movz x17, #0xa00000000
0xffff582f8d04   164  sub csp, jssp, #0x10 (16)
0xffff582f8d08   168  stp x17, cp, [jssp, #-16]!
0xffff582f8d0c   172  add fp, jssp, #0x10 (16)
0xffff582f8d10   176  ldr x17, pc+24 (addr 0x0000ffff582f8d28)    ;; lazy deoptimization bailout 0
0xffff582f8d14   180  add x17, x17, x16
0xffff582f8d18   184  br x17
0xffff582f8d1c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f8d20   192  d63f03e0       constant
0xffff582f8d24   196  d503201f       constant
0xffff582f8d28   200  58006000       constant
0xffff582f8d2c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f8c90  code target (STUB)  (0xffff582170c0)
0xffff582f8cc8  code target (STUB)  (0xffff58238080)
0xffff582f8cd8  constant pool (size 24)
0xffff582f8d10  runtime entry
0xffff582f8d1c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff582f8c60     0  tbz w0, #0, #+0x90 (addr 0xffff582f8cf0)
0xffff582f8c64     4  mov x2, x0
0xffff582f8c68     8  stur x2, [x1, #199]
0xffff582f8c6c    12  add x3, x1, #0xc7 (199)
0xffff582f8c70    16  and x2, x2, #0xfffffffffff00000
0xffff582f8c74    20  ldr x2, [x2, #8]
0xffff582f8c78    24  tbz w2, #1, #+0x24 (addr 0xffff582f8c9c)
0xffff582f8c7c    28  and x2, x1, #0xfffffffffff00000
0xffff582f8c80    32  ldr x2, [x2, #8]
0xffff582f8c84    36  tbz w2, #2, #+0x18 (addr 0xffff582f8c9c)
0xffff582f8c88    40  sub csp, jssp, #0x8 (8)
0xffff582f8c8c    44  str lr, [jssp, #-8]!
0xffff582f8c90    48  ldr x16, pc+80 (addr 0x0000ffff582f8ce0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f8c94    52  blr x16
0xffff582f8c98    56  ldr lr, [jssp], #8
0xffff582f8c9c    60  stur x5, [x1, #-1]
0xffff582f8ca0    64  tbz w5, #0, #+0x34 (addr 0xffff582f8cd4)
0xffff582f8ca4    68  sub x2, x1, #0x1 (1)
0xffff582f8ca8    72  and x5, x5, #0xfffffffffff00000
0xffff582f8cac    76  ldr x5, [x5, #8]
0xffff582f8cb0    80  tbz w5, #1, #+0x24 (addr 0xffff582f8cd4)
0xffff582f8cb4    84  and x5, x1, #0xfffffffffff00000
0xffff582f8cb8    88  ldr x5, [x5, #8]
0xffff582f8cbc    92  tbz w5, #2, #+0x18 (addr 0xffff582f8cd4)
0xffff582f8cc0    96  sub csp, jssp, #0x8 (8)
0xffff582f8cc4   100  str lr, [jssp, #-8]!
0xffff582f8cc8   104  ldr x16, pc+32 (addr 0x0000ffff582f8ce8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582f8ccc   108  blr x16
0xffff582f8cd0   112  ldr lr, [jssp], #8
0xffff582f8cd4   116  ret
0xffff582f8cd8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff582f8cdc   124  d63f03e0       constant
0xffff582f8ce0   128  582170c0       constant
0xffff582f8ce4   132  0000ffff       constant
0xffff582f8ce8   136  58238080       constant
0xffff582f8cec   140  0000ffff       constant
0xffff582f8cf0   144  movz x16, #0x0
0xffff582f8cf4   148  sub csp, jssp, #0x10 (16)
0xffff582f8cf8   152  stp fp, lr, [jssp, #-16]!
0xffff582f8cfc   156  bl #+0x4 (addr 0xffff582f8d00)
0xffff582f8d00   160  movz x17, #0xa00000000
0xffff582f8d04   164  sub csp, jssp, #0x10 (16)
0xffff582f8d08   168  stp x17, cp, [jssp, #-16]!
0xffff582f8d0c   172  add fp, jssp, #0x10 (16)
0xffff582f8d10   176  ldr x17, pc+24 (addr 0x0000ffff582f8d28)    ;; lazy deoptimization bailout 0
0xffff582f8d14   180  add x17, x17, x16
0xffff582f8d18   184  br x17
0xffff582f8d1c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f8d20   192  d63f03e0       constant
0xffff582f8d24   196  d503201f       constant
0xffff582f8d28   200  58006000       constant
0xffff582f8d2c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582f8c90  code target (STUB)  (0xffff582170c0)
0xffff582f8cc8  code target (STUB)  (0xffff58238080)
0xffff582f8cd8  constant pool (size 24)
0xffff582f8d10  runtime entry
0xffff582f8d1c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = corkedRequestsFree
compiler = unknown
Instructions (size = 184)
0xffff582f8da0     0  sub csp, jssp, #0x8 (8)
0xffff582f8da4     4  str x3, [jssp, #-8]!
0xffff582f8da8     8  sub csp, jssp, #0x8 (8)
0xffff582f8dac    12  str x4, [jssp, #-8]!
0xffff582f8db0    16  ldr x3, pc+112 (addr 0x0000ffff582f8e20)    ;; object: 0x225e95f9 Cell for 0
0xffff582f8db4    20  ldur x3, [x3, #7]
0xffff582f8db8    24  cmp x3, #0x0 (0)
0xffff582f8dbc    28  b.ne #+0x44 (addr 0xffff582f8e00)
0xffff582f8dc0    32  tbz w0, #0, #+0x40 (addr 0xffff582f8e00)
0xffff582f8dc4    36  ldur x3, [x0, #-1]
0xffff582f8dc8    40  ldr x4, pc+96 (addr 0x0000ffff582f8e28)    ;; object: 0x225ea411 WeakCell for 0x32b409a9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8dcc    44  ldur x4, [x4, #7]
0xffff582f8dd0    48  cmp x3, x4
0xffff582f8dd4    52  b.ne #+0x2c (addr 0xffff582f8e00)
0xffff582f8dd8    56  ldr x5, pc+88 (addr 0x0000ffff582f8e30)    ;; object: 0x225ea449 WeakCell for 0x32b40a01 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8ddc    60  ldur x5, [x5, #7]
0xffff582f8de0    64  tbz w5, #0, #+0x20 (addr 0xffff582f8e00)
0xffff582f8de4    68  ldursw x4, [x5, #15]
0xffff582f8de8    72  tbnz w4, #23, #+0x18 (addr 0xffff582f8e00)
0xffff582f8dec    76  ldr x4, [jssp], #8
0xffff582f8df0    80  ldr x3, [jssp], #8
0xffff582f8df4    84  ldr x2, pc+68 (addr 0x0000ffff582f8e38)    ;; object: 0x22522ab9 <String[18]: corkedRequestsFree>
0xffff582f8df8    88  ldr x16, pc+72 (addr 0x0000ffff582f8e40)    ;; code: HANDLER, StoreTransitionStub, minor: 198681
0xffff582f8dfc    92  br x16
0xffff582f8e00    96  ldr x2, pc+72 (addr 0x0000ffff582f8e48)    ;; object: 0x22522ab9 <String[18]: corkedRequestsFree>
0xffff582f8e04   100  ldr x4, [jssp], #8
0xffff582f8e08   104  ldr x3, [jssp], #8
0xffff582f8e0c   108  ldr x16, pc+68 (addr 0x0000ffff582f8e50)    ;; code: BUILTIN
0xffff582f8e10   112  br x16
0xffff582f8e14   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582f8e18   120  d63f03e0       constant
0xffff582f8e1c   124  d503201f       constant
0xffff582f8e20   128  225e95f9       constant
0xffff582f8e24   132  00000000       constant
0xffff582f8e28   136  225ea411       constant
0xffff582f8e2c   140  00000000       constant
0xffff582f8e30   144  225ea449       constant
0xffff582f8e34   148  00000000       constant
0xffff582f8e38   152  22522ab9       constant
0xffff582f8e3c   156  00000000       constant
0xffff582f8e40   160  582f8c60       constant
0xffff582f8e44   164  0000ffff       constant
0xffff582f8e48   168  22522ab9       constant
0xffff582f8e4c   172  00000000       constant
0xffff582f8e50   176  58222420       constant
0xffff582f8e54   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582f8db0  embedded object  (0x225e95f9 Cell for 0)
0xffff582f8dc8  embedded object  (0x225ea411 WeakCell for 0x32b409a9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8dd8  embedded object  (0x225ea449 WeakCell for 0x32b40a01 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8df4  embedded object  (0x22522ab9 <String[18]: corkedRequestsFree>)
0xffff582f8df8  code target (HANDLER)  (0xffff582f8c60)
0xffff582f8e00  embedded object  (0x22522ab9 <String[18]: corkedRequestsFree>)
0xffff582f8e0c  code target (BUILTIN)  (0xffff58222420)
0xffff582f8e14  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = _writableState
compiler = unknown
Instructions (size = 184)
0xffff582f8ec0     0  sub csp, jssp, #0x8 (8)
0xffff582f8ec4     4  str x3, [jssp, #-8]!
0xffff582f8ec8     8  sub csp, jssp, #0x8 (8)
0xffff582f8ecc    12  str x4, [jssp, #-8]!
0xffff582f8ed0    16  ldr x3, pc+112 (addr 0x0000ffff582f8f40)    ;; object: 0x225e9219 Cell for 0
0xffff582f8ed4    20  ldur x3, [x3, #7]
0xffff582f8ed8    24  cmp x3, #0x0 (0)
0xffff582f8edc    28  b.ne #+0x44 (addr 0xffff582f8f20)
0xffff582f8ee0    32  tbz w0, #0, #+0x40 (addr 0xffff582f8f20)
0xffff582f8ee4    36  ldur x3, [x0, #-1]
0xffff582f8ee8    40  ldr x4, pc+96 (addr 0x0000ffff582f8f48)    ;; object: 0x225ea449 WeakCell for 0x32b40a01 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8eec    44  ldur x4, [x4, #7]
0xffff582f8ef0    48  cmp x3, x4
0xffff582f8ef4    52  b.ne #+0x2c (addr 0xffff582f8f20)
0xffff582f8ef8    56  ldr x5, pc+88 (addr 0x0000ffff582f8f50)    ;; object: 0x225ea539 WeakCell for 0x32b40a59 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f8efc    60  ldur x5, [x5, #7]
0xffff582f8f00    64  tbz w5, #0, #+0x20 (addr 0xffff582f8f20)
0xffff582f8f04    68  ldursw x4, [x5, #15]
0xffff582f8f08    72  tbnz w4, #23, #+0x18 (addr 0xffff582f8f20)
0xffff582f8f0c    76  ldr x4, [jssp], #8
0xffff582f8f10    80  ldr x3, [jssp], #8
0xffff582f8f14    84  ldr x2, pc+68 (addr 0x0000ffff582f8f58)    ;; object: 0x39cf92c9 <String[14]: _writableState>
0xffff582f8f18    88  ldr x16, pc+72 (addr 0x0000ffff582f8f60)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff582f8f1c    92  br x16
0xffff582f8f20    96  ldr x2, pc+72 (addr 0x0000ffff582f8f68)    ;; object: 0x39cf92c9 <String[14]: _writableState>
0xffff582f8f24   100  ldr x4, [jssp], #8
0xffff582f8f28   104  ldr x3, [jssp], #8
0xffff582f8f2c   108  ldr x16, pc+68 (addr 0x0000ffff582f8f70)    ;; code: BUILTIN
0xffff582f8f30   112  br x16
0xffff582f8f34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582f8f38   120  d63f03e0       constant
0xffff582f8f3c   124  d503201f       constant
0xffff582f8f40   128  225e9219       constant
0xffff582f8f44   132  00000000       constant
0xffff582f8f48   136  225ea449       constant
0xffff582f8f4c   140  00000000       constant
0xffff582f8f50   144  225ea539       constant
0xffff582f8f54   148  00000000       constant
0xffff582f8f58   152  39cf92c9       constant
0xffff582f8f5c   156  00000000       constant
0xffff582f8f60   160  58299940       constant
0xffff582f8f64   164  0000ffff       constant
0xffff582f8f68   168  39cf92c9       constant
0xffff582f8f6c   172  00000000       constant
0xffff582f8f70   176  58222420       constant
0xffff582f8f74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582f8ed0  embedded object  (0x225e9219 Cell for 0)
0xffff582f8ee8  embedded object  (0x225ea449 WeakCell for 0x32b40a01 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8ef8  embedded object  (0x225ea539 WeakCell for 0x32b40a59 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f8f14  embedded object  (0x39cf92c9 <String[14]: _writableState>)
0xffff582f8f18  code target (HANDLER)  (0xffff58299940)
0xffff582f8f20  embedded object  (0x39cf92c9 <String[14]: _writableState>)
0xffff582f8f2c  code target (BUILTIN)  (0xffff58222420)
0xffff582f8f34  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = writable
compiler = unknown
Instructions (size = 152)
0xffff582f8fe0     0  sub csp, jssp, #0x8 (8)
0xffff582f8fe4     4  str x3, [jssp, #-8]!
0xffff582f8fe8     8  sub csp, jssp, #0x8 (8)
0xffff582f8fec    12  str x4, [jssp, #-8]!
0xffff582f8ff0    16  ldr x3, pc+88 (addr 0x0000ffff582f9048)    ;; object: 0x225e9219 Cell for 0
0xffff582f8ff4    20  ldur x3, [x3, #7]
0xffff582f8ff8    24  cmp x3, #0x0 (0)
0xffff582f8ffc    28  b.ne #+0x30 (addr 0xffff582f902c)
0xffff582f9000    32  tbz w0, #0, #+0x2c (addr 0xffff582f902c)
0xffff582f9004    36  ldr x5, pc+76 (addr 0x0000ffff582f9050)    ;; object: 0x225ea571 WeakCell for 0x32b40ab1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582f9008    40  ldur x5, [x5, #7]
0xffff582f900c    44  tbz w5, #0, #+0x20 (addr 0xffff582f902c)
0xffff582f9010    48  ldursw x4, [x5, #15]
0xffff582f9014    52  tbnz w4, #23, #+0x18 (addr 0xffff582f902c)
0xffff582f9018    56  ldr x4, [jssp], #8
0xffff582f901c    60  ldr x3, [jssp], #8
0xffff582f9020    64  ldr x2, pc+56 (addr 0x0000ffff582f9058)    ;; object: 0x39c057a9 <String[8]: writable>
0xffff582f9024    68  ldr x16, pc+60 (addr 0x0000ffff582f9060)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff582f9028    72  br x16
0xffff582f902c    76  ldr x2, pc+60 (addr 0x0000ffff582f9068)    ;; object: 0x39c057a9 <String[8]: writable>
0xffff582f9030    80  ldr x4, [jssp], #8
0xffff582f9034    84  ldr x3, [jssp], #8
0xffff582f9038    88  ldr x16, pc+56 (addr 0x0000ffff582f9070)    ;; code: BUILTIN
0xffff582f903c    92  br x16
0xffff582f9040    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582f9044   100  d63f03e0       constant
0xffff582f9048   104  225e9219       constant
0xffff582f904c   108  00000000       constant
0xffff582f9050   112  225ea571       constant
0xffff582f9054   116  00000000       constant
0xffff582f9058   120  39c057a9       constant
0xffff582f905c   124  00000000       constant
0xffff582f9060   128  5829a100       constant
0xffff582f9064   132  0000ffff       constant
0xffff582f9068   136  39c057a9       constant
0xffff582f906c   140  00000000       constant
0xffff582f9070   144  58222420       constant
0xffff582f9074   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582f8ff0  embedded object  (0x225e9219 Cell for 0)
0xffff582f9004  embedded object  (0x225ea571 WeakCell for 0x32b40ab1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582f9020  embedded object  (0x39c057a9 <String[8]: writable>)
0xffff582f9024  code target (HANDLER)  (0xffff5829a100)
0xffff582f902c  embedded object  (0x39c057a9 <String[8]: writable>)
0xffff582f9038  code target (BUILTIN)  (0xffff58222420)
0xffff582f9040  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff582f90e0     0  tbz w0, #0, #+0x50 (addr 0xffff582f9130)
0xffff582f90e4     4  mov x2, x0
0xffff582f90e8     8  stur x2, [x1, #79]
0xffff582f90ec    12  add x3, x1, #0x4f (79)
0xffff582f90f0    16  and x2, x2, #0xfffffffffff00000
0xffff582f90f4    20  ldr x2, [x2, #8]
0xffff582f90f8    24  tbz w2, #1, #+0x24 (addr 0xffff582f911c)
0xffff582f90fc    28  and x2, x1, #0xfffffffffff00000
0xffff582f9100    32  ldr x2, [x2, #8]
0xffff582f9104    36  tbz w2, #2, #+0x18 (addr 0xffff582f911c)
0xffff582f9108    40  sub csp, jssp, #0x8 (8)
0xffff582f910c    44  str lr, [jssp, #-8]!
0xffff582f9110    48  ldr x16, pc+24 (addr 0x0000ffff582f9128)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f9114    52  blr x16
0xffff582f9118    56  ldr lr, [jssp], #8
0xffff582f911c    60  ret
0xffff582f9120    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f9124    68  d63f03e0       constant
0xffff582f9128    72  582170c0       constant
0xffff582f912c    76  0000ffff       constant
0xffff582f9130    80  movz x16, #0x0
0xffff582f9134    84  sub csp, jssp, #0x10 (16)
0xffff582f9138    88  stp fp, lr, [jssp, #-16]!
0xffff582f913c    92  bl #+0x4 (addr 0xffff582f9140)
0xffff582f9140    96  movz x17, #0xa00000000
0xffff582f9144   100  sub csp, jssp, #0x10 (16)
0xffff582f9148   104  stp x17, cp, [jssp, #-16]!
0xffff582f914c   108  add fp, jssp, #0x10 (16)
0xffff582f9150   112  ldr x17, pc+24 (addr 0x0000ffff582f9168)    ;; lazy deoptimization bailout 0
0xffff582f9154   116  add x17, x17, x16
0xffff582f9158   120  br x17
0xffff582f915c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f9160   128  d63f03e0       constant
0xffff582f9164   132  d503201f       constant
0xffff582f9168   136  58006000       constant
0xffff582f916c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f9110  code target (STUB)  (0xffff582170c0)
0xffff582f9120  constant pool (size 16)
0xffff582f9150  runtime entry
0xffff582f915c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff582f90e0     0  tbz w0, #0, #+0x50 (addr 0xffff582f9130)
0xffff582f90e4     4  mov x2, x0
0xffff582f90e8     8  stur x2, [x1, #79]
0xffff582f90ec    12  add x3, x1, #0x4f (79)
0xffff582f90f0    16  and x2, x2, #0xfffffffffff00000
0xffff582f90f4    20  ldr x2, [x2, #8]
0xffff582f90f8    24  tbz w2, #1, #+0x24 (addr 0xffff582f911c)
0xffff582f90fc    28  and x2, x1, #0xfffffffffff00000
0xffff582f9100    32  ldr x2, [x2, #8]
0xffff582f9104    36  tbz w2, #2, #+0x18 (addr 0xffff582f911c)
0xffff582f9108    40  sub csp, jssp, #0x8 (8)
0xffff582f910c    44  str lr, [jssp, #-8]!
0xffff582f9110    48  ldr x16, pc+24 (addr 0x0000ffff582f9128)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff582f9114    52  blr x16
0xffff582f9118    56  ldr lr, [jssp], #8
0xffff582f911c    60  ret
0xffff582f9120    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582f9124    68  d63f03e0       constant
0xffff582f9128    72  582170c0       constant
0xffff582f912c    76  0000ffff       constant
0xffff582f9130    80  movz x16, #0x0
0xffff582f9134    84  sub csp, jssp, #0x10 (16)
0xffff582f9138    88  stp fp, lr, [jssp, #-16]!
0xffff582f913c    92  bl #+0x4 (addr 0xffff582f9140)
0xffff582f9140    96  movz x17, #0xa00000000
0xffff582f9144   100  sub csp, jssp, #0x10 (16)
0xffff582f9148   104  stp x17, cp, [jssp, #-16]!
0xffff582f914c   108  add fp, jssp, #0x10 (16)
0xffff582f9150   112  ldr x17, pc+24 (addr 0x0000ffff582f9168)    ;; lazy deoptimization bailout 0
0xffff582f9154   116  add x17, x17, x16
0xffff582f9158   120  br x17
0xffff582f915c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f9160   128  d63f03e0       constant
0xffff582f9164   132  d503201f       constant
0xffff582f9168   136  58006000       constant
0xffff582f916c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f9110  code target (STUB)  (0xffff582170c0)
0xffff582f9120  constant pool (size 16)
0xffff582f9150  runtime entry
0xffff582f915c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 120)
0xffff582f91e0     0  sub csp, jssp, #0x8 (8)
0xffff582f91e4     4  str x3, [jssp, #-8]!
0xffff582f91e8     8  sub csp, jssp, #0x8 (8)
0xffff582f91ec    12  str x0, [jssp, #-8]!
0xffff582f91f0    16  ldr x0, pc+72 (addr 0x0000ffff582f9238)    ;; object: 0x225ea679 Cell for 0
0xffff582f91f4    20  ldur x0, [x0, #7]
0xffff582f91f8    24  cmp x0, #0x0 (0)
0xffff582f91fc    28  b.ne #+0x14 (addr 0xffff582f9210)
0xffff582f9200    32  ldr x3, pc+64 (addr 0x0000ffff582f9240)    ;; object: 0x225ea689 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>
0xffff582f9204    36  ldur x3, [x3, #7]
0xffff582f9208    40  tbz w3, #0, #+0x8 (addr 0xffff582f9210)
0xffff582f920c    44  b #+0x14 (addr 0xffff582f9220)
0xffff582f9210    48  ldr x0, [jssp], #8
0xffff582f9214    52  ldr x3, [jssp], #8
0xffff582f9218    56  ldr x16, pc+48 (addr 0x0000ffff582f9248)    ;; code: BUILTIN
0xffff582f921c    60  br x16
0xffff582f9220    64  add jssp, jssp, #0x10 (16)
0xffff582f9224    68  mov x1, x3
0xffff582f9228    72  ldr x16, pc+40 (addr 0x0000ffff582f9250)    ;; code: HANDLER, LoadFieldStub, minor: 2052
0xffff582f922c    76  br x16
0xffff582f9230    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582f9234    84  d63f03e0       constant
0xffff582f9238    88  225ea679       constant
0xffff582f923c    92  00000000       constant
0xffff582f9240    96  225ea689       constant
0xffff582f9244   100  00000000       constant
0xffff582f9248   104  582222e0       constant
0xffff582f924c   108  0000ffff       constant
0xffff582f9250   112  58278da0       constant
0xffff582f9254   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582f91f0  embedded object  (0x225ea679 Cell for 0)
0xffff582f9200  embedded object  (0x225ea689 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>)
0xffff582f9218  code target (BUILTIN)  (0xffff582222e0)
0xffff582f9228  code target (HANDLER)  (0xffff58278da0)
0xffff582f9230  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f92c0     0  tbz w0, #0, #+0x58 (addr 0xffff582f9318)
0xffff582f92c4     4  mov x2, x0
0xffff582f92c8     8  ldur x4, [x1, #7]
0xffff582f92cc    12  stur x2, [x4, #15]
0xffff582f92d0    16  add x3, x4, #0xf (15)
0xffff582f92d4    20  and x2, x2, #0xfffffffffff00000
0xffff582f92d8    24  ldr x2, [x2, #8]
0xffff582f92dc    28  tbz w2, #1, #+0x24 (addr 0xffff582f9300)
0xffff582f92e0    32  and x2, x4, #0xfffffffffff00000
0xffff582f92e4    36  ldr x2, [x2, #8]
0xffff582f92e8    40  tbz w2, #2, #+0x18 (addr 0xffff582f9300)
0xffff582f92ec    44  sub csp, jssp, #0x8 (8)
0xffff582f92f0    48  str lr, [jssp, #-8]!
0xffff582f92f4    52  ldr x16, pc+28 (addr 0x0000ffff582f9310)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582f92f8    56  blr x16
0xffff582f92fc    60  ldr lr, [jssp], #8
0xffff582f9300    64  ret
0xffff582f9304    68  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f9308    72  d63f03e0       constant
0xffff582f930c    76  d503201f       constant
0xffff582f9310    80  582378a0       constant
0xffff582f9314    84  0000ffff       constant
0xffff582f9318    88  movz x16, #0x0
0xffff582f931c    92  sub csp, jssp, #0x10 (16)
0xffff582f9320    96  stp fp, lr, [jssp, #-16]!
0xffff582f9324   100  bl #+0x4 (addr 0xffff582f9328)
0xffff582f9328   104  movz x17, #0xa00000000
0xffff582f932c   108  sub csp, jssp, #0x10 (16)
0xffff582f9330   112  stp x17, cp, [jssp, #-16]!
0xffff582f9334   116  add fp, jssp, #0x10 (16)
0xffff582f9338   120  ldr x17, pc+24 (addr 0x0000ffff582f9350)    ;; lazy deoptimization bailout 0
0xffff582f933c   124  add x17, x17, x16
0xffff582f9340   128  br x17
0xffff582f9344   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f9348   136  d63f03e0       constant
0xffff582f934c   140  d503201f       constant
0xffff582f9350   144  58006000       constant
0xffff582f9354   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f92f4  code target (STUB)  (0xffff582378a0)
0xffff582f9304  constant pool (size 20)
0xffff582f9338  runtime entry
0xffff582f9344  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 160)
0xffff582f92c0     0  tbz w0, #0, #+0x58 (addr 0xffff582f9318)
0xffff582f92c4     4  mov x2, x0
0xffff582f92c8     8  ldur x4, [x1, #7]
0xffff582f92cc    12  stur x2, [x4, #15]
0xffff582f92d0    16  add x3, x4, #0xf (15)
0xffff582f92d4    20  and x2, x2, #0xfffffffffff00000
0xffff582f92d8    24  ldr x2, [x2, #8]
0xffff582f92dc    28  tbz w2, #1, #+0x24 (addr 0xffff582f9300)
0xffff582f92e0    32  and x2, x4, #0xfffffffffff00000
0xffff582f92e4    36  ldr x2, [x2, #8]
0xffff582f92e8    40  tbz w2, #2, #+0x18 (addr 0xffff582f9300)
0xffff582f92ec    44  sub csp, jssp, #0x8 (8)
0xffff582f92f0    48  str lr, [jssp, #-8]!
0xffff582f92f4    52  ldr x16, pc+28 (addr 0x0000ffff582f9310)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582f92f8    56  blr x16
0xffff582f92fc    60  ldr lr, [jssp], #8
0xffff582f9300    64  ret
0xffff582f9304    68  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f9308    72  d63f03e0       constant
0xffff582f930c    76  d503201f       constant
0xffff582f9310    80  582378a0       constant
0xffff582f9314    84  0000ffff       constant
0xffff582f9318    88  movz x16, #0x0
0xffff582f931c    92  sub csp, jssp, #0x10 (16)
0xffff582f9320    96  stp fp, lr, [jssp, #-16]!
0xffff582f9324   100  bl #+0x4 (addr 0xffff582f9328)
0xffff582f9328   104  movz x17, #0xa00000000
0xffff582f932c   108  sub csp, jssp, #0x10 (16)
0xffff582f9330   112  stp x17, cp, [jssp, #-16]!
0xffff582f9334   116  add fp, jssp, #0x10 (16)
0xffff582f9338   120  ldr x17, pc+24 (addr 0x0000ffff582f9350)    ;; lazy deoptimization bailout 0
0xffff582f933c   124  add x17, x17, x16
0xffff582f9340   128  br x17
0xffff582f9344   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582f9348   136  d63f03e0       constant
0xffff582f934c   140  d503201f       constant
0xffff582f9350   144  58006000       constant
0xffff582f9354   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582f92f4  code target (STUB)  (0xffff582378a0)
0xffff582f9304  constant pool (size 20)
0xffff582f9338  runtime entry
0xffff582f9344  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = BOOLEAN*BOOLEAN -> BOOLEAN
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 184)
0xffff582f93c0     0  tbz w1, #0, #+0x30 (addr 0xffff582f93f0)
0xffff582f93c4     4  ldur x2, [x1, #-1]
0xffff582f93c8     8  ldr x16, [x26, #840]
0xffff582f93cc    12  cmp x2, x16
0xffff582f93d0    16  b.ne #+0x20 (addr 0xffff582f93f0)
0xffff582f93d4    20  tbz w0, #0, #+0x1c (addr 0xffff582f93f0)
0xffff582f93d8    24  ldur x3, [x0, #-1]
0xffff582f93dc    28  ldr x16, [x26, #840]
0xffff582f93e0    32  cmp x3, x16
0xffff582f93e4    36  b.ne #+0xc (addr 0xffff582f93f0)
0xffff582f93e8    40  sub x0, x1, x0
0xffff582f93ec    44  ret
0xffff582f93f0    48  movz x16, #0xc00000000
0xffff582f93f4    52  sub csp, jssp, #0x10 (16)
0xffff582f93f8    56  stp fp, lr, [jssp, #-16]!
0xffff582f93fc    60  sub csp, jssp, #0x10 (16)
0xffff582f9400    64  str x16, [jssp, #-8]!
0xffff582f9404    68  ldr x17, pc+92 (addr 0x0000ffff582f9460)    ;; object: 0xffff582f9361 <Code: COMPARE_IC>
0xffff582f9408    72  sub csp, jssp, #0x10 (16)
0xffff582f940c    76  str x17, [jssp, #-8]!
0xffff582f9410    80  add fp, jssp, #0x10 (16)
0xffff582f9414    84  sub csp, jssp, #0x18 (24)
0xffff582f9418    88  stp lr, x0, [jssp, #-24]!
0xffff582f941c    92  str x1, [jssp, #16]
0xffff582f9420    96  movz x10, #0x2f00000000
0xffff582f9424   100  sub csp, jssp, #0x18 (24)
0xffff582f9428   104  stp x10, x0, [jssp, #-24]!
0xffff582f942c   108  str x1, [jssp, #16]
0xffff582f9430   112  movz x0, #0x3
0xffff582f9434   116  ldr x1, pc+52 (addr 0x0000ffff582f9468)    ;; external reference (Runtime::CompareIC_Miss)
0xffff582f9438   120  ldr x16, pc+56 (addr 0x0000ffff582f9470)    ;; code: STUB, CEntryStub, minor: 4
0xffff582f943c   124  blr x16
0xffff582f9440   128  add x11, x0, #0x5f (95)
0xffff582f9444   132  ldr x1, [jssp, #16]
0xffff582f9448   136  ldp lr, x0, [jssp], #24
0xffff582f944c   140  mov jssp, fp
0xffff582f9450   144  ldp fp, lr, [jssp], #16
0xffff582f9454   148  br x11
0xffff582f9458   152  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582f945c   156  d63f03e0       constant
0xffff582f9460   160  582f9361       constant
0xffff582f9464   164  0000ffff       constant
0xffff582f9468   168  00c8a980       constant
0xffff582f946c   172  00000000       constant
0xffff582f9470   176  58206060       constant
0xffff582f9474   180  0000ffff       constant


RelocInfo (size = 12)
0xffff582f9404  embedded object  (0xffff582f9361 <Code: COMPARE_IC>)
0xffff582f9434  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff582f9438  code target (STUB)  (0xffff58206060)
0xffff582f9458  constant pool (size 32)


kind = HANDLER
major_key = <NoCache>Stub
name = end
compiler = unknown
Instructions (size = 152)
0xffff582fa080     0  sub csp, jssp, #0x8 (8)
0xffff582fa084     4  str x3, [jssp, #-8]!
0xffff582fa088     8  sub csp, jssp, #0x8 (8)
0xffff582fa08c    12  str x4, [jssp, #-8]!
0xffff582fa090    16  ldr x3, pc+88 (addr 0x0000ffff582fa0e8)    ;; object: 0x225d2199 Cell for 0
0xffff582fa094    20  ldur x3, [x3, #7]
0xffff582fa098    24  cmp x3, #0x0 (0)
0xffff582fa09c    28  b.ne #+0x30 (addr 0xffff582fa0cc)
0xffff582fa0a0    32  tbz w0, #0, #+0x2c (addr 0xffff582fa0cc)
0xffff582fa0a4    36  ldr x5, pc+76 (addr 0x0000ffff582fa0f0)    ;; object: 0x225eaee1 WeakCell for 0x32b40bb9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fa0a8    40  ldur x5, [x5, #7]
0xffff582fa0ac    44  tbz w5, #0, #+0x20 (addr 0xffff582fa0cc)
0xffff582fa0b0    48  ldursw x4, [x5, #15]
0xffff582fa0b4    52  tbnz w4, #23, #+0x18 (addr 0xffff582fa0cc)
0xffff582fa0b8    56  ldr x4, [jssp], #8
0xffff582fa0bc    60  ldr x3, [jssp], #8
0xffff582fa0c0    64  ldr x2, pc+56 (addr 0x0000ffff582fa0f8)    ;; object: 0x39c93989 <String[3]: end>
0xffff582fa0c4    68  ldr x16, pc+60 (addr 0x0000ffff582fa100)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff582fa0c8    72  br x16
0xffff582fa0cc    76  ldr x2, pc+60 (addr 0x0000ffff582fa108)    ;; object: 0x39c93989 <String[3]: end>
0xffff582fa0d0    80  ldr x4, [jssp], #8
0xffff582fa0d4    84  ldr x3, [jssp], #8
0xffff582fa0d8    88  ldr x16, pc+56 (addr 0x0000ffff582fa110)    ;; code: BUILTIN
0xffff582fa0dc    92  br x16
0xffff582fa0e0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582fa0e4   100  d63f03e0       constant
0xffff582fa0e8   104  225d2199       constant
0xffff582fa0ec   108  00000000       constant
0xffff582fa0f0   112  225eaee1       constant
0xffff582fa0f4   116  00000000       constant
0xffff582fa0f8   120  39c93989       constant
0xffff582fa0fc   124  00000000       constant
0xffff582fa100   128  5828b940       constant
0xffff582fa104   132  0000ffff       constant
0xffff582fa108   136  39c93989       constant
0xffff582fa10c   140  00000000       constant
0xffff582fa110   144  58222420       constant
0xffff582fa114   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582fa090  embedded object  (0x225d2199 Cell for 0)
0xffff582fa0a4  embedded object  (0x225eaee1 WeakCell for 0x32b40bb9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fa0c0  embedded object  (0x39c93989 <String[3]: end>)
0xffff582fa0c4  code target (HANDLER)  (0xffff5828b940)
0xffff582fa0cc  embedded object  (0x39c93989 <String[3]: end>)
0xffff582fa0d8  code target (BUILTIN)  (0xffff58222420)
0xffff582fa0e0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582fa180     0  ldur x0, [x1, #95]
0xffff582fa184     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff582fa180     0  ldur x0, [x1, #95]
0xffff582fa184     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff582fa200     0  mov x5, x0
0xffff582fa204     4  tbnz w5, #0, #+0xc (addr 0xffff582fa210)
0xffff582fa208     8  stur x5, [x1, #95]
0xffff582fa20c    12  ret
0xffff582fa210    16  movz x16, #0x0
0xffff582fa214    20  sub csp, jssp, #0x10 (16)
0xffff582fa218    24  stp fp, lr, [jssp, #-16]!
0xffff582fa21c    28  bl #+0x4 (addr 0xffff582fa220)
0xffff582fa220    32  movz x17, #0xa00000000
0xffff582fa224    36  sub csp, jssp, #0x10 (16)
0xffff582fa228    40  stp x17, cp, [jssp, #-16]!
0xffff582fa22c    44  add fp, jssp, #0x10 (16)
0xffff582fa230    48  ldr x17, pc+24 (addr 0x0000ffff582fa248)    ;; lazy deoptimization bailout 0
0xffff582fa234    52  add x17, x17, x16
0xffff582fa238    56  br x17
0xffff582fa23c    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582fa240    64  d63f03e0       constant
0xffff582fa244    68  d503201f       constant
0xffff582fa248    72  58006000       constant
0xffff582fa24c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff582fa230  runtime entry
0xffff582fa23c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff582fa200     0  mov x5, x0
0xffff582fa204     4  tbnz w5, #0, #+0xc (addr 0xffff582fa210)
0xffff582fa208     8  stur x5, [x1, #95]
0xffff582fa20c    12  ret
0xffff582fa210    16  movz x16, #0x0
0xffff582fa214    20  sub csp, jssp, #0x10 (16)
0xffff582fa218    24  stp fp, lr, [jssp, #-16]!
0xffff582fa21c    28  bl #+0x4 (addr 0xffff582fa220)
0xffff582fa220    32  movz x17, #0xa00000000
0xffff582fa224    36  sub csp, jssp, #0x10 (16)
0xffff582fa228    40  stp x17, cp, [jssp, #-16]!
0xffff582fa22c    44  add fp, jssp, #0x10 (16)
0xffff582fa230    48  ldr x17, pc+24 (addr 0x0000ffff582fa248)    ;; lazy deoptimization bailout 0
0xffff582fa234    52  add x17, x17, x16
0xffff582fa238    56  br x17
0xffff582fa23c    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582fa240    64  d63f03e0       constant
0xffff582fa244    68  d503201f       constant
0xffff582fa248    72  58006000       constant
0xffff582fa24c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff582fa230  runtime entry
0xffff582fa23c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = on
compiler = unknown
Instructions (size = 120)
0xffff582fa2c0     0  sub csp, jssp, #0x8 (8)
0xffff582fa2c4     4  str x3, [jssp, #-8]!
0xffff582fa2c8     8  sub csp, jssp, #0x8 (8)
0xffff582fa2cc    12  str x0, [jssp, #-8]!
0xffff582fa2d0    16  ldr x0, pc+72 (addr 0x0000ffff582fa318)    ;; object: 0x225eaff1 Cell for 0
0xffff582fa2d4    20  ldur x0, [x0, #7]
0xffff582fa2d8    24  cmp x0, #0x0 (0)
0xffff582fa2dc    28  b.ne #+0x14 (addr 0xffff582fa2f0)
0xffff582fa2e0    32  ldr x3, pc+64 (addr 0x0000ffff582fa320)    ;; object: 0x225eb001 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>
0xffff582fa2e4    36  ldur x3, [x3, #7]
0xffff582fa2e8    40  tbz w3, #0, #+0x8 (addr 0xffff582fa2f0)
0xffff582fa2ec    44  b #+0x14 (addr 0xffff582fa300)
0xffff582fa2f0    48  ldr x0, [jssp], #8
0xffff582fa2f4    52  ldr x3, [jssp], #8
0xffff582fa2f8    56  ldr x16, pc+48 (addr 0x0000ffff582fa328)    ;; code: BUILTIN
0xffff582fa2fc    60  br x16
0xffff582fa300    64  add jssp, jssp, #0x10 (16)
0xffff582fa304    68  mov x1, x3
0xffff582fa308    72  ldr x16, pc+40 (addr 0x0000ffff582fa330)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff582fa30c    76  br x16
0xffff582fa310    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582fa314    84  d63f03e0       constant
0xffff582fa318    88  225eaff1       constant
0xffff582fa31c    92  00000000       constant
0xffff582fa320    96  225eb001       constant
0xffff582fa324   100  00000000       constant
0xffff582fa328   104  582222e0       constant
0xffff582fa32c   108  0000ffff       constant
0xffff582fa330   112  5824c160       constant
0xffff582fa334   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582fa2d0  embedded object  (0x225eaff1 Cell for 0)
0xffff582fa2e0  embedded object  (0x225eb001 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>)
0xffff582fa2f8  code target (BUILTIN)  (0xffff582222e0)
0xffff582fa308  code target (HANDLER)  (0xffff5824c160)
0xffff582fa310  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = finish
compiler = unknown
Instructions (size = 168)
0xffff582fa3a0     0  sub csp, jssp, #0x8 (8)
0xffff582fa3a4     4  str x3, [jssp, #-8]!
0xffff582fa3a8     8  sub csp, jssp, #0x8 (8)
0xffff582fa3ac    12  str x4, [jssp, #-8]!
0xffff582fa3b0    16  ldr x3, pc+104 (addr 0x0000ffff582fa418)    ;; object: 0x225d2199 Cell for 0
0xffff582fa3b4    20  ldur x3, [x3, #7]
0xffff582fa3b8    24  cmp x3, #0x0 (0)
0xffff582fa3bc    28  b.ne #+0x3c (addr 0xffff582fa3f8)
0xffff582fa3c0    32  ldr x5, pc+96 (addr 0x0000ffff582fa420)    ;; object: 0x225eb051 WeakCell for 0x32b40c11 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fa3c4    36  ldur x5, [x5, #7]
0xffff582fa3c8    40  tbz w5, #0, #+0x30 (addr 0xffff582fa3f8)
0xffff582fa3cc    44  ldursw x4, [x5, #15]
0xffff582fa3d0    48  tbnz w4, #23, #+0x28 (addr 0xffff582fa3f8)
0xffff582fa3d4    52  ldur x4, [x5, #47]
0xffff582fa3d8    56  ldur x4, [x4, #71]
0xffff582fa3dc    60  cmp x0, x4
0xffff582fa3e0    64  b.ne #+0x18 (addr 0xffff582fa3f8)
0xffff582fa3e4    68  ldr x4, [jssp], #8
0xffff582fa3e8    72  ldr x3, [jssp], #8
0xffff582fa3ec    76  ldr x2, pc+60 (addr 0x0000ffff582fa428)    ;; object: 0x2250f0e9 <String[6]: finish>
0xffff582fa3f0    80  ldr x16, pc+64 (addr 0x0000ffff582fa430)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff582fa3f4    84  br x16
0xffff582fa3f8    88  ldr x2, pc+64 (addr 0x0000ffff582fa438)    ;; object: 0x2250f0e9 <String[6]: finish>
0xffff582fa3fc    92  ldr x4, [jssp], #8
0xffff582fa400    96  ldr x3, [jssp], #8
0xffff582fa404   100  ldr x16, pc+60 (addr 0x0000ffff582fa440)    ;; code: BUILTIN
0xffff582fa408   104  br x16
0xffff582fa40c   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582fa410   112  d63f03e0       constant
0xffff582fa414   116  d503201f       constant
0xffff582fa418   120  225d2199       constant
0xffff582fa41c   124  00000000       constant
0xffff582fa420   128  225eb051       constant
0xffff582fa424   132  00000000       constant
0xffff582fa428   136  2250f0e9       constant
0xffff582fa42c   140  00000000       constant
0xffff582fa430   144  5823cea0       constant
0xffff582fa434   148  0000ffff       constant
0xffff582fa438   152  2250f0e9       constant
0xffff582fa43c   156  00000000       constant
0xffff582fa440   160  58222420       constant
0xffff582fa444   164  0000ffff       constant


RelocInfo (size = 12)
0xffff582fa3b0  embedded object  (0x225d2199 Cell for 0)
0xffff582fa3c0  embedded object  (0x225eb051 WeakCell for 0x32b40c11 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fa3ec  embedded object  (0x2250f0e9 <String[6]: finish>)
0xffff582fa3f0  code target (HANDLER)  (0xffff5823cea0)
0xffff582fa3f8  embedded object  (0x2250f0e9 <String[6]: finish>)
0xffff582fa404  code target (BUILTIN)  (0xffff58222420)
0xffff582fa40c  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = _socketEnd
compiler = unknown
Instructions (size = 168)
0xffff582fa4c0     0  sub csp, jssp, #0x8 (8)
0xffff582fa4c4     4  str x3, [jssp, #-8]!
0xffff582fa4c8     8  sub csp, jssp, #0x8 (8)
0xffff582fa4cc    12  str x4, [jssp, #-8]!
0xffff582fa4d0    16  ldr x3, pc+104 (addr 0x0000ffff582fa538)    ;; object: 0x225d2199 Cell for 0
0xffff582fa4d4    20  ldur x3, [x3, #7]
0xffff582fa4d8    24  cmp x3, #0x0 (0)
0xffff582fa4dc    28  b.ne #+0x3c (addr 0xffff582fa518)
0xffff582fa4e0    32  ldr x5, pc+96 (addr 0x0000ffff582fa540)    ;; object: 0x225eb0a1 WeakCell for 0x32b40c69 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fa4e4    36  ldur x5, [x5, #7]
0xffff582fa4e8    40  tbz w5, #0, #+0x30 (addr 0xffff582fa518)
0xffff582fa4ec    44  ldursw x4, [x5, #15]
0xffff582fa4f0    48  tbnz w4, #23, #+0x28 (addr 0xffff582fa518)
0xffff582fa4f4    52  ldur x4, [x5, #47]
0xffff582fa4f8    56  ldur x4, [x4, #95]
0xffff582fa4fc    60  cmp x0, x4
0xffff582fa500    64  b.ne #+0x18 (addr 0xffff582fa518)
0xffff582fa504    68  ldr x4, [jssp], #8
0xffff582fa508    72  ldr x3, [jssp], #8
0xffff582fa50c    76  ldr x2, pc+60 (addr 0x0000ffff582fa548)    ;; object: 0x225d4071 <String[10]: _socketEnd>
0xffff582fa510    80  ldr x16, pc+64 (addr 0x0000ffff582fa550)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff582fa514    84  br x16
0xffff582fa518    88  ldr x2, pc+64 (addr 0x0000ffff582fa558)    ;; object: 0x225d4071 <String[10]: _socketEnd>
0xffff582fa51c    92  ldr x4, [jssp], #8
0xffff582fa520    96  ldr x3, [jssp], #8
0xffff582fa524   100  ldr x16, pc+60 (addr 0x0000ffff582fa560)    ;; code: BUILTIN
0xffff582fa528   104  br x16
0xffff582fa52c   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582fa530   112  d63f03e0       constant
0xffff582fa534   116  d503201f       constant
0xffff582fa538   120  225d2199       constant
0xffff582fa53c   124  00000000       constant
0xffff582fa540   128  225eb0a1       constant
0xffff582fa544   132  00000000       constant
0xffff582fa548   136  225d4071       constant
0xffff582fa54c   140  00000000       constant
0xffff582fa550   144  5823cea0       constant
0xffff582fa554   148  0000ffff       constant
0xffff582fa558   152  225d4071       constant
0xffff582fa55c   156  00000000       constant
0xffff582fa560   160  58222420       constant
0xffff582fa564   164  0000ffff       constant


RelocInfo (size = 12)
0xffff582fa4d0  embedded object  (0x225d2199 Cell for 0)
0xffff582fa4e0  embedded object  (0x225eb0a1 WeakCell for 0x32b40c69 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fa50c  embedded object  (0x225d4071 <String[10]: _socketEnd>)
0xffff582fa510  code target (HANDLER)  (0xffff5823cea0)
0xffff582fa518  embedded object  (0x225d4071 <String[10]: _socketEnd>)
0xffff582fa524  code target (BUILTIN)  (0xffff58222420)
0xffff582fa52c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 184)
0xffff582fa940     0  ldur x4, [x1, #15]
0xffff582fa944     4  ldur w5, [x1, #27]
0xffff582fa948     8  tbnz w2, #0, #+0x24 (addr 0xffff582fa96c)
0xffff582fa94c    12  asr x7, x2, #32
0xffff582fa950    16  cmp w7, w5
0xffff582fa954    20  b.hs #+0x40 (addr 0xffff582fa994)
0xffff582fa958    24  add x5, x4, #0xf (15)
0xffff582fa95c    28  ldr x6, [x5, w7, sxtw #3]
0xffff582fa960    32  tbnz w6, #0, #+0x44 (addr 0xffff582fa9a4)
0xffff582fa964    36  mov x0, x6
0xffff582fa968    40  ret
0xffff582fa96c    44  ldur x16, [x2, #-1]
0xffff582fa970    48  ldr x17, [x26, #120]
0xffff582fa974    52  cmp x16, x17
0xffff582fa978    56  b.ne #+0x3c (addr 0xffff582fa9b4)
0xffff582fa97c    60  ldur d29, [x2, #7]
0xffff582fa980    64  fcvtzs w7, d29
0xffff582fa984    68  scvtf d0, w7
0xffff582fa988    72  fcmp d29, d0
0xffff582fa98c    76  b.ne #+0x28 (addr 0xffff582fa9b4)
0xffff582fa990    80  b #-0x40 (addr 0xffff582fa950)
0xffff582fa994    84  movz x16, #0x0
0xffff582fa998    88  sub csp, jssp, #0x10 (16)
0xffff582fa99c    92  stp fp, lr, [jssp, #-16]!
0xffff582fa9a0    96  bl #+0x24 (addr 0xffff582fa9c4)
0xffff582fa9a4   100  movz x16, #0x8
0xffff582fa9a8   104  sub csp, jssp, #0x10 (16)
0xffff582fa9ac   108  stp fp, lr, [jssp, #-16]!
0xffff582fa9b0   112  bl #+0x14 (addr 0xffff582fa9c4)
0xffff582fa9b4   116  movz x16, #0x10
0xffff582fa9b8   120  sub csp, jssp, #0x10 (16)
0xffff582fa9bc   124  stp fp, lr, [jssp, #-16]!
0xffff582fa9c0   128  bl #+0x4 (addr 0xffff582fa9c4)
0xffff582fa9c4   132  movz x17, #0xa00000000
0xffff582fa9c8   136  sub csp, jssp, #0x10 (16)
0xffff582fa9cc   140  stp x17, cp, [jssp, #-16]!
0xffff582fa9d0   144  add fp, jssp, #0x10 (16)
0xffff582fa9d4   148  ldr x17, pc+20 (addr 0x0000ffff582fa9e8)    ;; lazy deoptimization bailout 0
0xffff582fa9d8   152  add x17, x17, x16
0xffff582fa9dc   156  br x17
0xffff582fa9e0   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582fa9e4   164  d63f03e0       constant
0xffff582fa9e8   168  58006000       constant
0xffff582fa9ec   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582fa9d4  runtime entry
0xffff582fa9e0  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 184)
0xffff582fa940     0  ldur x4, [x1, #15]
0xffff582fa944     4  ldur w5, [x1, #27]
0xffff582fa948     8  tbnz w2, #0, #+0x24 (addr 0xffff582fa96c)
0xffff582fa94c    12  asr x7, x2, #32
0xffff582fa950    16  cmp w7, w5
0xffff582fa954    20  b.hs #+0x40 (addr 0xffff582fa994)
0xffff582fa958    24  add x5, x4, #0xf (15)
0xffff582fa95c    28  ldr x6, [x5, w7, sxtw #3]
0xffff582fa960    32  tbnz w6, #0, #+0x44 (addr 0xffff582fa9a4)
0xffff582fa964    36  mov x0, x6
0xffff582fa968    40  ret
0xffff582fa96c    44  ldur x16, [x2, #-1]
0xffff582fa970    48  ldr x17, [x26, #120]
0xffff582fa974    52  cmp x16, x17
0xffff582fa978    56  b.ne #+0x3c (addr 0xffff582fa9b4)
0xffff582fa97c    60  ldur d29, [x2, #7]
0xffff582fa980    64  fcvtzs w7, d29
0xffff582fa984    68  scvtf d0, w7
0xffff582fa988    72  fcmp d29, d0
0xffff582fa98c    76  b.ne #+0x28 (addr 0xffff582fa9b4)
0xffff582fa990    80  b #-0x40 (addr 0xffff582fa950)
0xffff582fa994    84  movz x16, #0x0
0xffff582fa998    88  sub csp, jssp, #0x10 (16)
0xffff582fa99c    92  stp fp, lr, [jssp, #-16]!
0xffff582fa9a0    96  bl #+0x24 (addr 0xffff582fa9c4)
0xffff582fa9a4   100  movz x16, #0x8
0xffff582fa9a8   104  sub csp, jssp, #0x10 (16)
0xffff582fa9ac   108  stp fp, lr, [jssp, #-16]!
0xffff582fa9b0   112  bl #+0x14 (addr 0xffff582fa9c4)
0xffff582fa9b4   116  movz x16, #0x10
0xffff582fa9b8   120  sub csp, jssp, #0x10 (16)
0xffff582fa9bc   124  stp fp, lr, [jssp, #-16]!
0xffff582fa9c0   128  bl #+0x4 (addr 0xffff582fa9c4)
0xffff582fa9c4   132  movz x17, #0xa00000000
0xffff582fa9c8   136  sub csp, jssp, #0x10 (16)
0xffff582fa9cc   140  stp x17, cp, [jssp, #-16]!
0xffff582fa9d0   144  add fp, jssp, #0x10 (16)
0xffff582fa9d4   148  ldr x17, pc+20 (addr 0x0000ffff582fa9e8)    ;; lazy deoptimization bailout 0
0xffff582fa9d8   152  add x17, x17, x16
0xffff582fa9dc   156  br x17
0xffff582fa9e0   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff582fa9e4   164  d63f03e0       constant
0xffff582fa9e8   168  58006000       constant
0xffff582fa9ec   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff582fa9d4  runtime entry
0xffff582fa9e0  constant pool (size 16)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff582faa60     0  mov x6, x0
0xffff582faa64     4  tbnz w6, #0, #+0x5c (addr 0xffff582faac0)
0xffff582faa68     8  ldur x3, [x1, #7]
0xffff582faa6c    12  stur x6, [x3, #143]
0xffff582faa70    16  stur x5, [x1, #-1]
0xffff582faa74    20  tbz w5, #0, #+0x34 (addr 0xffff582faaa8)
0xffff582faa78    24  sub x2, x1, #0x1 (1)
0xffff582faa7c    28  and x5, x5, #0xfffffffffff00000
0xffff582faa80    32  ldr x5, [x5, #8]
0xffff582faa84    36  tbz w5, #1, #+0x24 (addr 0xffff582faaa8)
0xffff582faa88    40  and x5, x1, #0xfffffffffff00000
0xffff582faa8c    44  ldr x5, [x5, #8]
0xffff582faa90    48  tbz w5, #2, #+0x18 (addr 0xffff582faaa8)
0xffff582faa94    52  sub csp, jssp, #0x8 (8)
0xffff582faa98    56  str lr, [jssp, #-8]!
0xffff582faa9c    60  ldr x16, pc+28 (addr 0x0000ffff582faab8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582faaa0    64  blr x16
0xffff582faaa4    68  ldr lr, [jssp], #8
0xffff582faaa8    72  ret
0xffff582faaac    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582faab0    80  d63f03e0       constant
0xffff582faab4    84  d503201f       constant
0xffff582faab8    88  58238080       constant
0xffff582faabc    92  0000ffff       constant
0xffff582faac0    96  movz x16, #0x0
0xffff582faac4   100  sub csp, jssp, #0x10 (16)
0xffff582faac8   104  stp fp, lr, [jssp, #-16]!
0xffff582faacc   108  bl #+0x4 (addr 0xffff582faad0)
0xffff582faad0   112  movz x17, #0xa00000000
0xffff582faad4   116  sub csp, jssp, #0x10 (16)
0xffff582faad8   120  stp x17, cp, [jssp, #-16]!
0xffff582faadc   124  add fp, jssp, #0x10 (16)
0xffff582faae0   128  ldr x17, pc+24 (addr 0x0000ffff582faaf8)    ;; lazy deoptimization bailout 0
0xffff582faae4   132  add x17, x17, x16
0xffff582faae8   136  br x17
0xffff582faaec   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582faaf0   144  d63f03e0       constant
0xffff582faaf4   148  d503201f       constant
0xffff582faaf8   152  58006000       constant
0xffff582faafc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582faa9c  code target (STUB)  (0xffff58238080)
0xffff582faaac  constant pool (size 20)
0xffff582faae0  runtime entry
0xffff582faaec  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff582faa60     0  mov x6, x0
0xffff582faa64     4  tbnz w6, #0, #+0x5c (addr 0xffff582faac0)
0xffff582faa68     8  ldur x3, [x1, #7]
0xffff582faa6c    12  stur x6, [x3, #143]
0xffff582faa70    16  stur x5, [x1, #-1]
0xffff582faa74    20  tbz w5, #0, #+0x34 (addr 0xffff582faaa8)
0xffff582faa78    24  sub x2, x1, #0x1 (1)
0xffff582faa7c    28  and x5, x5, #0xfffffffffff00000
0xffff582faa80    32  ldr x5, [x5, #8]
0xffff582faa84    36  tbz w5, #1, #+0x24 (addr 0xffff582faaa8)
0xffff582faa88    40  and x5, x1, #0xfffffffffff00000
0xffff582faa8c    44  ldr x5, [x5, #8]
0xffff582faa90    48  tbz w5, #2, #+0x18 (addr 0xffff582faaa8)
0xffff582faa94    52  sub csp, jssp, #0x8 (8)
0xffff582faa98    56  str lr, [jssp, #-8]!
0xffff582faa9c    60  ldr x16, pc+28 (addr 0x0000ffff582faab8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582faaa0    64  blr x16
0xffff582faaa4    68  ldr lr, [jssp], #8
0xffff582faaa8    72  ret
0xffff582faaac    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582faab0    80  d63f03e0       constant
0xffff582faab4    84  d503201f       constant
0xffff582faab8    88  58238080       constant
0xffff582faabc    92  0000ffff       constant
0xffff582faac0    96  movz x16, #0x0
0xffff582faac4   100  sub csp, jssp, #0x10 (16)
0xffff582faac8   104  stp fp, lr, [jssp, #-16]!
0xffff582faacc   108  bl #+0x4 (addr 0xffff582faad0)
0xffff582faad0   112  movz x17, #0xa00000000
0xffff582faad4   116  sub csp, jssp, #0x10 (16)
0xffff582faad8   120  stp x17, cp, [jssp, #-16]!
0xffff582faadc   124  add fp, jssp, #0x10 (16)
0xffff582faae0   128  ldr x17, pc+24 (addr 0x0000ffff582faaf8)    ;; lazy deoptimization bailout 0
0xffff582faae4   132  add x17, x17, x16
0xffff582faae8   136  br x17
0xffff582faaec   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582faaf0   144  d63f03e0       constant
0xffff582faaf4   148  d503201f       constant
0xffff582faaf8   152  58006000       constant
0xffff582faafc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff582faa9c  code target (STUB)  (0xffff58238080)
0xffff582faaac  constant pool (size 20)
0xffff582faae0  runtime entry
0xffff582faaec  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = fd
compiler = unknown
Instructions (size = 152)
0xffff582fab80     0  sub csp, jssp, #0x8 (8)
0xffff582fab84     4  str x3, [jssp, #-8]!
0xffff582fab88     8  sub csp, jssp, #0x8 (8)
0xffff582fab8c    12  str x4, [jssp, #-8]!
0xffff582fab90    16  ldr x3, pc+88 (addr 0x0000ffff582fabe8)    ;; object: 0x225e9219 Cell for 0
0xffff582fab94    20  ldur x3, [x3, #7]
0xffff582fab98    24  cmp x3, #0x0 (0)
0xffff582fab9c    28  b.ne #+0x2c (addr 0xffff582fabc8)
0xffff582faba0    32  ldr x5, pc+80 (addr 0x0000ffff582fabf0)    ;; object: 0x225eb5d1 WeakCell for 0x32b41191 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582faba4    36  ldur x5, [x5, #7]
0xffff582faba8    40  tbz w5, #0, #+0x20 (addr 0xffff582fabc8)
0xffff582fabac    44  ldursw x4, [x5, #15]
0xffff582fabb0    48  tbnz w4, #23, #+0x18 (addr 0xffff582fabc8)
0xffff582fabb4    52  ldr x4, [jssp], #8
0xffff582fabb8    56  ldr x3, [jssp], #8
0xffff582fabbc    60  ldr x2, pc+60 (addr 0x0000ffff582fabf8)    ;; object: 0x39cb2709 <String[2]: fd>
0xffff582fabc0    64  ldr x16, pc+64 (addr 0x0000ffff582fac00)    ;; code: HANDLER, StoreTransitionStub, minor: 172050
0xffff582fabc4    68  br x16
0xffff582fabc8    72  ldr x2, pc+64 (addr 0x0000ffff582fac08)    ;; object: 0x39cb2709 <String[2]: fd>
0xffff582fabcc    76  ldr x4, [jssp], #8
0xffff582fabd0    80  ldr x3, [jssp], #8
0xffff582fabd4    84  ldr x16, pc+60 (addr 0x0000ffff582fac10)    ;; code: BUILTIN
0xffff582fabd8    88  br x16
0xffff582fabdc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff582fabe0    96  d63f03e0       constant
0xffff582fabe4   100  d503201f       constant
0xffff582fabe8   104  225e9219       constant
0xffff582fabec   108  00000000       constant
0xffff582fabf0   112  225eb5d1       constant
0xffff582fabf4   116  00000000       constant
0xffff582fabf8   120  39cb2709       constant
0xffff582fabfc   124  00000000       constant
0xffff582fac00   128  582faa60       constant
0xffff582fac04   132  0000ffff       constant
0xffff582fac08   136  39cb2709       constant
0xffff582fac0c   140  00000000       constant
0xffff582fac10   144  58222420       constant
0xffff582fac14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582fab90  embedded object  (0x225e9219 Cell for 0)
0xffff582faba0  embedded object  (0x225eb5d1 WeakCell for 0x32b41191 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fabbc  embedded object  (0x39cb2709 <String[2]: fd>)
0xffff582fabc0  code target (HANDLER)  (0xffff582faa60)
0xffff582fabc8  embedded object  (0x39cb2709 <String[2]: fd>)
0xffff582fabd4  code target (BUILTIN)  (0xffff58222420)
0xffff582fabdc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582fac80     0  tbz w0, #0, #+0x98 (addr 0xffff582fad18)
0xffff582fac84     4  mov x2, x0
0xffff582fac88     8  ldur x4, [x1, #7]
0xffff582fac8c    12  stur x2, [x4, #151]
0xffff582fac90    16  add x3, x4, #0x97 (151)
0xffff582fac94    20  and x2, x2, #0xfffffffffff00000
0xffff582fac98    24  ldr x2, [x2, #8]
0xffff582fac9c    28  tbz w2, #1, #+0x24 (addr 0xffff582facc0)
0xffff582faca0    32  and x2, x4, #0xfffffffffff00000
0xffff582faca4    36  ldr x2, [x2, #8]
0xffff582faca8    40  tbz w2, #2, #+0x18 (addr 0xffff582facc0)
0xffff582facac    44  sub csp, jssp, #0x8 (8)
0xffff582facb0    48  str lr, [jssp, #-8]!
0xffff582facb4    52  ldr x16, pc+84 (addr 0x0000ffff582fad08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582facb8    56  blr x16
0xffff582facbc    60  ldr lr, [jssp], #8
0xffff582facc0    64  stur x5, [x1, #-1]
0xffff582facc4    68  tbz w5, #0, #+0x34 (addr 0xffff582facf8)
0xffff582facc8    72  sub x2, x1, #0x1 (1)
0xffff582faccc    76  and x5, x5, #0xfffffffffff00000
0xffff582facd0    80  ldr x5, [x5, #8]
0xffff582facd4    84  tbz w5, #1, #+0x24 (addr 0xffff582facf8)
0xffff582facd8    88  and x5, x1, #0xfffffffffff00000
0xffff582facdc    92  ldr x5, [x5, #8]
0xffff582face0    96  tbz w5, #2, #+0x18 (addr 0xffff582facf8)
0xffff582face4   100  sub csp, jssp, #0x8 (8)
0xffff582face8   104  str lr, [jssp, #-8]!
0xffff582facec   108  ldr x16, pc+36 (addr 0x0000ffff582fad10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582facf0   112  blr x16
0xffff582facf4   116  ldr lr, [jssp], #8
0xffff582facf8   120  ret
0xffff582facfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582fad00   128  d63f03e0       constant
0xffff582fad04   132  d503201f       constant
0xffff582fad08   136  582378a0       constant
0xffff582fad0c   140  0000ffff       constant
0xffff582fad10   144  58238080       constant
0xffff582fad14   148  0000ffff       constant
0xffff582fad18   152  movz x16, #0x0
0xffff582fad1c   156  sub csp, jssp, #0x10 (16)
0xffff582fad20   160  stp fp, lr, [jssp, #-16]!
0xffff582fad24   164  bl #+0x4 (addr 0xffff582fad28)
0xffff582fad28   168  movz x17, #0xa00000000
0xffff582fad2c   172  sub csp, jssp, #0x10 (16)
0xffff582fad30   176  stp x17, cp, [jssp, #-16]!
0xffff582fad34   180  add fp, jssp, #0x10 (16)
0xffff582fad38   184  ldr x17, pc+24 (addr 0x0000ffff582fad50)    ;; lazy deoptimization bailout 0
0xffff582fad3c   188  add x17, x17, x16
0xffff582fad40   192  br x17
0xffff582fad44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582fad48   200  d63f03e0       constant
0xffff582fad4c   204  d503201f       constant
0xffff582fad50   208  58006000       constant
0xffff582fad54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582facb4  code target (STUB)  (0xffff582378a0)
0xffff582facec  code target (STUB)  (0xffff58238080)
0xffff582facfc  constant pool (size 28)
0xffff582fad38  runtime entry
0xffff582fad44  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff582fac80     0  tbz w0, #0, #+0x98 (addr 0xffff582fad18)
0xffff582fac84     4  mov x2, x0
0xffff582fac88     8  ldur x4, [x1, #7]
0xffff582fac8c    12  stur x2, [x4, #151]
0xffff582fac90    16  add x3, x4, #0x97 (151)
0xffff582fac94    20  and x2, x2, #0xfffffffffff00000
0xffff582fac98    24  ldr x2, [x2, #8]
0xffff582fac9c    28  tbz w2, #1, #+0x24 (addr 0xffff582facc0)
0xffff582faca0    32  and x2, x4, #0xfffffffffff00000
0xffff582faca4    36  ldr x2, [x2, #8]
0xffff582faca8    40  tbz w2, #2, #+0x18 (addr 0xffff582facc0)
0xffff582facac    44  sub csp, jssp, #0x8 (8)
0xffff582facb0    48  str lr, [jssp, #-8]!
0xffff582facb4    52  ldr x16, pc+84 (addr 0x0000ffff582fad08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff582facb8    56  blr x16
0xffff582facbc    60  ldr lr, [jssp], #8
0xffff582facc0    64  stur x5, [x1, #-1]
0xffff582facc4    68  tbz w5, #0, #+0x34 (addr 0xffff582facf8)
0xffff582facc8    72  sub x2, x1, #0x1 (1)
0xffff582faccc    76  and x5, x5, #0xfffffffffff00000
0xffff582facd0    80  ldr x5, [x5, #8]
0xffff582facd4    84  tbz w5, #1, #+0x24 (addr 0xffff582facf8)
0xffff582facd8    88  and x5, x1, #0xfffffffffff00000
0xffff582facdc    92  ldr x5, [x5, #8]
0xffff582face0    96  tbz w5, #2, #+0x18 (addr 0xffff582facf8)
0xffff582face4   100  sub csp, jssp, #0x8 (8)
0xffff582face8   104  str lr, [jssp, #-8]!
0xffff582facec   108  ldr x16, pc+36 (addr 0x0000ffff582fad10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff582facf0   112  blr x16
0xffff582facf4   116  ldr lr, [jssp], #8
0xffff582facf8   120  ret
0xffff582facfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff582fad00   128  d63f03e0       constant
0xffff582fad04   132  d503201f       constant
0xffff582fad08   136  582378a0       constant
0xffff582fad0c   140  0000ffff       constant
0xffff582fad10   144  58238080       constant
0xffff582fad14   148  0000ffff       constant
0xffff582fad18   152  movz x16, #0x0
0xffff582fad1c   156  sub csp, jssp, #0x10 (16)
0xffff582fad20   160  stp fp, lr, [jssp, #-16]!
0xffff582fad24   164  bl #+0x4 (addr 0xffff582fad28)
0xffff582fad28   168  movz x17, #0xa00000000
0xffff582fad2c   172  sub csp, jssp, #0x10 (16)
0xffff582fad30   176  stp x17, cp, [jssp, #-16]!
0xffff582fad34   180  add fp, jssp, #0x10 (16)
0xffff582fad38   184  ldr x17, pc+24 (addr 0x0000ffff582fad50)    ;; lazy deoptimization bailout 0
0xffff582fad3c   188  add x17, x17, x16
0xffff582fad40   192  br x17
0xffff582fad44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582fad48   200  d63f03e0       constant
0xffff582fad4c   204  d503201f       constant
0xffff582fad50   208  58006000       constant
0xffff582fad54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff582facb4  code target (STUB)  (0xffff582378a0)
0xffff582facec  code target (STUB)  (0xffff58238080)
0xffff582facfc  constant pool (size 28)
0xffff582fad38  runtime entry
0xffff582fad44  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _isStdio
compiler = unknown
Instructions (size = 152)
0xffff582fadc0     0  sub csp, jssp, #0x8 (8)
0xffff582fadc4     4  str x3, [jssp, #-8]!
0xffff582fadc8     8  sub csp, jssp, #0x8 (8)
0xffff582fadcc    12  str x4, [jssp, #-8]!
0xffff582fadd0    16  ldr x3, pc+88 (addr 0x0000ffff582fae28)    ;; object: 0x225e9219 Cell for 0
0xffff582fadd4    20  ldur x3, [x3, #7]
0xffff582fadd8    24  cmp x3, #0x0 (0)
0xffff582faddc    28  b.ne #+0x30 (addr 0xffff582fae0c)
0xffff582fade0    32  tbz w0, #0, #+0x2c (addr 0xffff582fae0c)
0xffff582fade4    36  ldr x5, pc+76 (addr 0x0000ffff582fae30)    ;; object: 0x225eb6c1 WeakCell for 0x32b411e9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fade8    40  ldur x5, [x5, #7]
0xffff582fadec    44  tbz w5, #0, #+0x20 (addr 0xffff582fae0c)
0xffff582fadf0    48  ldursw x4, [x5, #15]
0xffff582fadf4    52  tbnz w4, #23, #+0x18 (addr 0xffff582fae0c)
0xffff582fadf8    56  ldr x4, [jssp], #8
0xffff582fadfc    60  ldr x3, [jssp], #8
0xffff582fae00    64  ldr x2, pc+56 (addr 0x0000ffff582fae38)    ;; object: 0x39cf94b1 <String[8]: _isStdio>
0xffff582fae04    68  ldr x16, pc+60 (addr 0x0000ffff582fae40)    ;; code: HANDLER, StoreTransitionStub, minor: 196627
0xffff582fae08    72  br x16
0xffff582fae0c    76  ldr x2, pc+60 (addr 0x0000ffff582fae48)    ;; object: 0x39cf94b1 <String[8]: _isStdio>
0xffff582fae10    80  ldr x4, [jssp], #8
0xffff582fae14    84  ldr x3, [jssp], #8
0xffff582fae18    88  ldr x16, pc+56 (addr 0x0000ffff582fae50)    ;; code: BUILTIN
0xffff582fae1c    92  br x16
0xffff582fae20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff582fae24   100  d63f03e0       constant
0xffff582fae28   104  225e9219       constant
0xffff582fae2c   108  00000000       constant
0xffff582fae30   112  225eb6c1       constant
0xffff582fae34   116  00000000       constant
0xffff582fae38   120  39cf94b1       constant
0xffff582fae3c   124  00000000       constant
0xffff582fae40   128  582fac80       constant
0xffff582fae44   132  0000ffff       constant
0xffff582fae48   136  39cf94b1       constant
0xffff582fae4c   140  00000000       constant
0xffff582fae50   144  58222420       constant
0xffff582fae54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff582fadd0  embedded object  (0x225e9219 Cell for 0)
0xffff582fade4  embedded object  (0x225eb6c1 WeakCell for 0x32b411e9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fae00  embedded object  (0x39cf94b1 <String[8]: _isStdio>)
0xffff582fae04  code target (HANDLER)  (0xffff582fac80)
0xffff582fae0c  embedded object  (0x39cf94b1 <String[8]: _isStdio>)
0xffff582fae18  code target (BUILTIN)  (0xffff58222420)
0xffff582fae20  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = emit
compiler = unknown
Instructions (size = 656)
0xffff582faec0     0  sub csp, jssp, #0x8 (8)
0xffff582faec4     4  str x3, [jssp, #-8]!
0xffff582faec8     8  sub csp, jssp, #0x8 (8)
0xffff582faecc    12  str x0, [jssp, #-8]!
0xffff582faed0    16  ldr x0, pc+560 (addr 0x0000ffff582fb100)    ;; object: 0x39ce3709 Cell for 0
0xffff582faed4    20  ldur x0, [x0, #7]
0xffff582faed8    24  cmp x0, #0x0 (0)
0xffff582faedc    28  b.ne #+0x1f8 (addr 0xffff582fb0d4)
0xffff582faee0    32  ldur x4, [x1, #-1]
0xffff582faee4    36  ldrb w0, [x4, #12]
0xffff582faee8    40  movz x16, #0x44
0xffff582faeec    44  tst x0, x16
0xffff582faef0    48  b.ne #+0x1e4 (addr 0xffff582fb0d4)
0xffff582faef4    52  ldrb w0, [x4, #11]
0xffff582faef8    56  cmp x0, #0xb1 (177)
0xffff582faefc    60  b.lt #+0x1d8 (addr 0xffff582fb0d4)
0xffff582faf00    64  ldur x0, [x1, #7]
0xffff582faf04    68  ldur x4, [x0, #-1]
0xffff582faf08    72  ldr x16, [x26, #432]
0xffff582faf0c    76  cmp x4, x16
0xffff582faf10    80  b.ne #+0x1c4 (addr 0xffff582fb0d4)
0xffff582faf14    84  ldursw x4, [x0, #35]
0xffff582faf18    88  sub x4, x4, #0x1 (1)
0xffff582faf1c    92  movz x16, #0x7332
0xffff582faf20    96  movk x16, #0x402, lsl #16
0xffff582faf24   100  and x4, x4, x16
0xffff582faf28   104  add x4, x4, x4, lsl #1
0xffff582faf2c   108  add x4, x0, x4, lsl #3
0xffff582faf30   112  ldur x4, [x4, #55]
0xffff582faf34   116  ldr x16, [x26, #40]
0xffff582faf38   120  cmp x4, x16
0xffff582faf3c   124  b.eq #+0x188 (addr 0xffff582fb0c4)
0xffff582faf40   128  ldr x16, pc+456 (addr 0x0000ffff582fb108)    ;; object: 0x39cba409 <String[4]: emit>
0xffff582faf44   132  cmp x4, x16
0xffff582faf48   136  b.eq #+0x18c (addr 0xffff582fb0d4)
0xffff582faf4c   140  ldr x16, [x26, #88]
0xffff582faf50   144  cmp x4, x16
0xffff582faf54   148  b.eq #+0x1c (addr 0xffff582faf70)
0xffff582faf58   152  ldur x4, [x4, #-1]
0xffff582faf5c   156  ldrb w4, [x4, #11]
0xffff582faf60   160  tst x4, #0xc0
0xffff582faf64   164  movz x16, #0x80
0xffff582faf68   168  ccmp x4, x16, #nZcv, ne
0xffff582faf6c   172  b.ne #+0x168 (addr 0xffff582fb0d4)
0xffff582faf70   176  ldursw x4, [x0, #35]
0xffff582faf74   180  sub x4, x4, #0x1 (1)
0xffff582faf78   184  movz x16, #0x7333
0xffff582faf7c   188  movk x16, #0x402, lsl #16
0xffff582faf80   192  and x4, x4, x16
0xffff582faf84   196  add x4, x4, x4, lsl #1
0xffff582faf88   200  add x4, x0, x4, lsl #3
0xffff582faf8c   204  ldur x4, [x4, #55]
0xffff582faf90   208  ldr x16, [x26, #40]
0xffff582faf94   212  cmp x4, x16
0xffff582faf98   216  b.eq #+0x12c (addr 0xffff582fb0c4)
0xffff582faf9c   220  ldr x16, pc+372 (addr 0x0000ffff582fb110)    ;; object: 0x39cba409 <String[4]: emit>
0xffff582fafa0   224  cmp x4, x16
0xffff582fafa4   228  b.eq #+0x130 (addr 0xffff582fb0d4)
0xffff582fafa8   232  ldr x16, [x26, #88]
0xffff582fafac   236  cmp x4, x16
0xffff582fafb0   240  b.eq #+0x1c (addr 0xffff582fafcc)
0xffff582fafb4   244  ldur x4, [x4, #-1]
0xffff582fafb8   248  ldrb w4, [x4, #11]
0xffff582fafbc   252  tst x4, #0xc0
0xffff582fafc0   256  movz x16, #0x80
0xffff582fafc4   260  ccmp x4, x16, #nZcv, ne
0xffff582fafc8   264  b.ne #+0x10c (addr 0xffff582fb0d4)
0xffff582fafcc   268  ldursw x4, [x0, #35]
0xffff582fafd0   272  sub x4, x4, #0x1 (1)
0xffff582fafd4   276  movz x16, #0x7335
0xffff582fafd8   280  movk x16, #0x402, lsl #16
0xffff582fafdc   284  and x4, x4, x16
0xffff582fafe0   288  add x4, x4, x4, lsl #1
0xffff582fafe4   292  add x4, x0, x4, lsl #3
0xffff582fafe8   296  ldur x4, [x4, #55]
0xffff582fafec   300  ldr x16, [x26, #40]
0xffff582faff0   304  cmp x4, x16
0xffff582faff4   308  b.eq #+0xd0 (addr 0xffff582fb0c4)
0xffff582faff8   312  ldr x16, pc+288 (addr 0x0000ffff582fb118)    ;; object: 0x39cba409 <String[4]: emit>
0xffff582faffc   316  cmp x4, x16
0xffff582fb000   320  b.eq #+0xd4 (addr 0xffff582fb0d4)
0xffff582fb004   324  ldr x16, [x26, #88]
0xffff582fb008   328  cmp x4, x16
0xffff582fb00c   332  b.eq #+0x1c (addr 0xffff582fb028)
0xffff582fb010   336  ldur x4, [x4, #-1]
0xffff582fb014   340  ldrb w4, [x4, #11]
0xffff582fb018   344  tst x4, #0xc0
0xffff582fb01c   348  movz x16, #0x80
0xffff582fb020   352  ccmp x4, x16, #nZcv, ne
0xffff582fb024   356  b.ne #+0xb0 (addr 0xffff582fb0d4)
0xffff582fb028   360  ldursw x4, [x0, #35]
0xffff582fb02c   364  sub x4, x4, #0x1 (1)
0xffff582fb030   368  movz x16, #0x7338
0xffff582fb034   372  movk x16, #0x402, lsl #16
0xffff582fb038   376  and x4, x4, x16
0xffff582fb03c   380  add x4, x4, x4, lsl #1
0xffff582fb040   384  add x4, x0, x4, lsl #3
0xffff582fb044   388  ldur x4, [x4, #55]
0xffff582fb048   392  ldr x16, [x26, #40]
0xffff582fb04c   396  cmp x4, x16
0xffff582fb050   400  b.eq #+0x74 (addr 0xffff582fb0c4)
0xffff582fb054   404  ldr x16, pc+204 (addr 0x0000ffff582fb120)    ;; object: 0x39cba409 <String[4]: emit>
0xffff582fb058   408  cmp x4, x16
0xffff582fb05c   412  b.eq #+0x78 (addr 0xffff582fb0d4)
0xffff582fb060   416  ldr x16, [x26, #88]
0xffff582fb064   420  cmp x4, x16
0xffff582fb068   424  b.eq #+0x1c (addr 0xffff582fb084)
0xffff582fb06c   428  ldur x4, [x4, #-1]
0xffff582fb070   432  ldrb w4, [x4, #11]
0xffff582fb074   436  tst x4, #0xc0
0xffff582fb078   440  movz x16, #0x80
0xffff582fb07c   444  ccmp x4, x16, #nZcv, ne
0xffff582fb080   448  b.ne #+0x54 (addr 0xffff582fb0d4)
0xffff582fb084   452  sub csp, jssp, #0x38 (56)
0xffff582fb088   456  stp x3, x5, [jssp, #-32]!
0xffff582fb08c   460  stp x6, lr, [jssp, #16]
0xffff582fb090   464  stp x0, x1, [jssp, #-24]!
0xffff582fb094   468  str x2, [jssp, #16]
0xffff582fb098   472  ldur x0, [x1, #7]
0xffff582fb09c   476  ldr x1, pc+140 (addr 0x0000ffff582fb128)    ;; object: 0x39cba409 <String[4]: emit>
0xffff582fb0a0   480  ldr x16, pc+144 (addr 0x0000ffff582fb130)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff582fb0a4   484  blr x16
0xffff582fb0a8   488  mov x4, x0
0xffff582fb0ac   492  ldp x2, x3, [jssp, #16]
0xffff582fb0b0   496  ldp x0, x1, [jssp], #32
0xffff582fb0b4   500  ldr lr, [jssp, #16]
0xffff582fb0b8   504  ldp x5, x6, [jssp], #24
0xffff582fb0bc   508  cbz x4, #+0x8 (addr 0xffff582fb0c4)
0xffff582fb0c0   512  b #+0x14 (addr 0xffff582fb0d4)
0xffff582fb0c4   516  ldr x3, pc+116 (addr 0x0000ffff582fb138)    ;; object: 0x225eb8c1 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>
0xffff582fb0c8   520  ldur x3, [x3, #7]
0xffff582fb0cc   524  tbz w3, #0, #+0x8 (addr 0xffff582fb0d4)
0xffff582fb0d0   528  b #+0x14 (addr 0xffff582fb0e4)
0xffff582fb0d4   532  ldr x0, [jssp], #8
0xffff582fb0d8   536  ldr x3, [jssp], #8
0xffff582fb0dc   540  ldr x16, pc+100 (addr 0x0000ffff582fb140)    ;; code: BUILTIN
0xffff582fb0e0   544  br x16
0xffff582fb0e4   548  add jssp, jssp, #0x10 (16)
0xffff582fb0e8   552  mov x1, x3
0xffff582fb0ec   556  ldr x16, pc+92 (addr 0x0000ffff582fb148)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff582fb0f0   560  br x16
0xffff582fb0f4   564  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff582fb0f8   568  d63f03e0       constant
0xffff582fb0fc   572  d503201f       constant
0xffff582fb100   576  39ce3709       constant
0xffff582fb104   580  00000000       constant
0xffff582fb108   584  39cba409       constant
0xffff582fb10c   588  00000000       constant
0xffff582fb110   592  39cba409       constant
0xffff582fb114   596  00000000       constant
0xffff582fb118   600  39cba409       constant
0xffff582fb11c   604  00000000       constant
0xffff582fb120   608  39cba409       constant
0xffff582fb124   612  00000000       constant
0xffff582fb128   616  39cba409       constant
0xffff582fb12c   620  00000000       constant
0xffff582fb130   624  5828b120       constant
0xffff582fb134   628  0000ffff       constant
0xffff582fb138   632  225eb8c1       constant
0xffff582fb13c   636  00000000       constant
0xffff582fb140   640  582222e0       constant
0xffff582fb144   644  0000ffff       constant
0xffff582fb148   648  5828b020       constant
0xffff582fb14c   652  0000ffff       constant


RelocInfo (size = 26)
0xffff582faed0  embedded object  (0x39ce3709 Cell for 0)
0xffff582faf40  embedded object  (0x39cba409 <String[4]: emit>)
0xffff582faf9c  embedded object  (0x39cba409 <String[4]: emit>)
0xffff582faff8  embedded object  (0x39cba409 <String[4]: emit>)
0xffff582fb054  embedded object  (0x39cba409 <String[4]: emit>)
0xffff582fb09c  embedded object  (0x39cba409 <String[4]: emit>)
0xffff582fb0a0  code target (STUB)  (0xffff5828b120)
0xffff582fb0c4  embedded object  (0x225eb8c1 WeakCell for 0x225acd21 <an Object with map 0x32b1bf39>)
0xffff582fb0dc  code target (BUILTIN)  (0xffff582222e0)
0xffff582fb0ec  code target (HANDLER)  (0xffff5828b020)
0xffff582fb0f4  constant pool (size 92)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 96)
0xffff582fb1c0     0  sub csp, jssp, #0x8 (8)
0xffff582fb1c4     4  str x3, [jssp, #-8]!
0xffff582fb1c8     8  sub csp, jssp, #0x8 (8)
0xffff582fb1cc    12  str x0, [jssp, #-8]!
0xffff582fb1d0    16  ldr x0, pc+56 (addr 0x0000ffff582fb208)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582fb1d4    20  ldur x0, [x0, #7]
0xffff582fb1d8    24  cmp x0, #0x0 (0)
0xffff582fb1dc    28  b.ne #+0x14 (addr 0xffff582fb1f0)
0xffff582fb1e0    32  add jssp, jssp, #0x10 (16)
0xffff582fb1e4    36  ldr x0, pc+44 (addr 0x0000ffff582fb210)    ;; object: 0x39c04241 <undefined>
0xffff582fb1e8    40  ret
0xffff582fb1ec    44  b #+0x14 (addr 0xffff582fb200)
0xffff582fb1f0    48  ldr x0, [jssp], #8
0xffff582fb1f4    52  ldr x3, [jssp], #8
0xffff582fb1f8    56  ldr x16, pc+32 (addr 0x0000ffff582fb218)    ;; code: BUILTIN
0xffff582fb1fc    60  br x16
0xffff582fb200    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff582fb204    68  d63f03e0       constant
0xffff582fb208    72  39c5b0f1       constant
0xffff582fb20c    76  00000000       constant
0xffff582fb210    80  39c04241       constant
0xffff582fb214    84  00000000       constant
0xffff582fb218    88  582222e0       constant
0xffff582fb21c    92  0000ffff       constant


RelocInfo (size = 9)
0xffff582fb1d0  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582fb1e4  embedded object  (0x39c04241 <undefined>)
0xffff582fb1f8  code target (BUILTIN)  (0xffff582222e0)
0xffff582fb200  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = SIGWINCH
compiler = unknown
Instructions (size = 144)
0xffff582fb280     0  sub csp, jssp, #0x8 (8)
0xffff582fb284     4  str x3, [jssp, #-8]!
0xffff582fb288     8  sub csp, jssp, #0x8 (8)
0xffff582fb28c    12  str x4, [jssp, #-8]!
0xffff582fb290    16  ldr x5, pc+88 (addr 0x0000ffff582fb2e8)    ;; object: 0x225ec969 WeakCell for 0x32b41b31 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fb294    20  ldur x5, [x5, #7]
0xffff582fb298    24  tbz w5, #0, #+0x30 (addr 0xffff582fb2c8)
0xffff582fb29c    28  ldursw x4, [x5, #15]
0xffff582fb2a0    32  tbnz w4, #23, #+0x28 (addr 0xffff582fb2c8)
0xffff582fb2a4    36  ldur x4, [x5, #47]
0xffff582fb2a8    40  ldur x4, [x4, #119]
0xffff582fb2ac    44  cmp x0, x4
0xffff582fb2b0    48  b.ne #+0x18 (addr 0xffff582fb2c8)
0xffff582fb2b4    52  ldr x4, [jssp], #8
0xffff582fb2b8    56  ldr x3, [jssp], #8
0xffff582fb2bc    60  ldr x2, pc+52 (addr 0x0000ffff582fb2f0)    ;; object: 0x39cf9081 <String[8]: SIGWINCH>
0xffff582fb2c0    64  ldr x16, pc+56 (addr 0x0000ffff582fb2f8)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff582fb2c4    68  br x16
0xffff582fb2c8    72  ldr x2, pc+56 (addr 0x0000ffff582fb300)    ;; object: 0x39cf9081 <String[8]: SIGWINCH>
0xffff582fb2cc    76  ldr x4, [jssp], #8
0xffff582fb2d0    80  ldr x3, [jssp], #8
0xffff582fb2d4    84  ldr x16, pc+52 (addr 0x0000ffff582fb308)    ;; code: BUILTIN
0xffff582fb2d8    88  br x16
0xffff582fb2dc    92  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff582fb2e0    96  d63f03e0       constant
0xffff582fb2e4   100  d503201f       constant
0xffff582fb2e8   104  225ec969       constant
0xffff582fb2ec   108  00000000       constant
0xffff582fb2f0   112  39cf9081       constant
0xffff582fb2f4   116  00000000       constant
0xffff582fb2f8   120  5823cea0       constant
0xffff582fb2fc   124  0000ffff       constant
0xffff582fb300   128  39cf9081       constant
0xffff582fb304   132  00000000       constant
0xffff582fb308   136  58222420       constant
0xffff582fb30c   140  0000ffff       constant


RelocInfo (size = 11)
0xffff582fb290  embedded object  (0x225ec969 WeakCell for 0x32b41b31 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fb2bc  embedded object  (0x39cf9081 <String[8]: SIGWINCH>)
0xffff582fb2c0  code target (HANDLER)  (0xffff5823cea0)
0xffff582fb2c8  embedded object  (0x39cf9081 <String[8]: SIGWINCH>)
0xffff582fb2d4  code target (BUILTIN)  (0xffff58222420)
0xffff582fb2dc  constant pool (size 52)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 485)
0xffff582fb380     0  ldur x4, [x3, #47]
0xffff582fb384     4  tbnz w2, #0, #+0xa8 (addr 0xffff582fb42c)
0xffff582fb388     8  asr x6, x2, #32
0xffff582fb38c    12  add x5, x4, #0x17 (23)
0xffff582fb390    16  ldr x7, [x5, w6, sxtw #3]
0xffff582fb394    20  ldr x4, pc+332 (addr 0x0000ffff582fb4e0)    ;; object: 0x39c04241 <undefined>
0xffff582fb398    24  cmp x7, x4
0xffff582fb39c    28  b.eq #+0x8c (addr 0xffff582fb428)
0xffff582fb3a0    32  ldur x4, [x7, #7]
0xffff582fb3a4    36  ldur x5, [x4, #-1]
0xffff582fb3a8    40  ldrb w6, [x5, #7]
0xffff582fb3ac    44  cmp w6, #0x6 (6)
0xffff582fb3b0    48  b.ne #+0x78 (addr 0xffff582fb428)
0xffff582fb3b4    52  movz x1, #0x92c0
0xffff582fb3b8    56  movk x1, #0x16e7, lsl #16
0xffff582fb3bc    60  ldp x2, x0, [x1]
0xffff582fb3c0    64  adds x16, x2, #0x40 (64)
0xffff582fb3c4    68  ccmp x16, x0, #nzCv, lo
0xffff582fb3c8    72  b.hi #+0xac (addr 0xffff582fb474)
0xffff582fb3cc    76  str x16, [x1]
0xffff582fb3d0    80  orr x2, x2, #0x1
0xffff582fb3d4    84  stur x5, [x2, #-1]
0xffff582fb3d8    88  ldur x0, [x4, #7]
0xffff582fb3dc    92  stur x0, [x2, #7]
0xffff582fb3e0    96  ldur x0, [x4, #15]
0xffff582fb3e4   100  stur x0, [x2, #15]
0xffff582fb3e8   104  ldur x0, [x4, #23]
0xffff582fb3ec   108  stur x0, [x2, #23]
0xffff582fb3f0   112  ldur x0, [x4, #31]
0xffff582fb3f4   116  stur x0, [x2, #31]
0xffff582fb3f8   120  ldur x0, [x4, #39]
0xffff582fb3fc   124  stur x0, [x2, #39]
0xffff582fb400   128  add x0, x2, #0x30 (48)
0xffff582fb404   132  ldr x1, pc+228 (addr 0x0000ffff582fb4e8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fb408   136  stur x1, [x0, #-1]
0xffff582fb40c   140  stur x7, [x0, #7]
0xffff582fb410   144  ldur w0, [x7, #35]
0xffff582fb414   148  add w0, w0, #0x1 (1)
0xffff582fb418   152  lsl x0, x0, #32
0xffff582fb41c   156  stur x0, [x7, #31]
0xffff582fb420   160  mov x0, x2
0xffff582fb424   164  ret
0xffff582fb428   168  b #+0xe0 (addr 0xffff582fb508)
0xffff582fb42c   172  sub csp, jssp, #0x10 (16)
0xffff582fb430   176  stp fp, lr, [jssp, #-16]!
0xffff582fb434   180  movz fp, #0xa00000000
0xffff582fb438   184  sub csp, jssp, #0x8 (8)
0xffff582fb43c   188  str fp, [jssp, #-8]!
0xffff582fb440   192  add fp, jssp, #0x8 (8)
0xffff582fb444   196  ldur x16, [x2, #-1]
0xffff582fb448   200  ldr x17, [x26, #120]
0xffff582fb44c   204  cmp x16, x17
0xffff582fb450   208  b.ne #+0xc8 (addr 0xffff582fb518)
0xffff582fb454   212  ldur d29, [x2, #7]
0xffff582fb458   216  fcvtzs w6, d29
0xffff582fb45c   220  scvtf d0, w6
0xffff582fb460   224  fcmp d29, d0
0xffff582fb464   228  b.ne #+0xb4 (addr 0xffff582fb518)
0xffff582fb468   232  ldr lr, [jssp, #16]
0xffff582fb46c   236  ldp xzr, fp, [jssp], #24
0xffff582fb470   240  b #-0xe4 (addr 0xffff582fb38c)
0xffff582fb474   244  sub csp, jssp, #0x10 (16)
0xffff582fb478   248  stp fp, lr, [jssp, #-16]!
0xffff582fb47c   252  movz fp, #0xa00000000
0xffff582fb480   256  sub csp, jssp, #0x8 (8)
0xffff582fb484   260  str fp, [jssp, #-8]!
0xffff582fb488   264  add fp, jssp, #0x8 (8)
0xffff582fb48c   268  movz x2, #0x0
0xffff582fb490   272  mov x16, lr
0xffff582fb494   276  ldr x17, pc+92 (addr 0x0000ffff582fb4f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582fb498   280  blr x17
0xffff582fb49c   284  movz x0, #0x4000000000
0xffff582fb4a0   288  movz x10, #0x0
0xffff582fb4a4   292  sub csp, jssp, #0x10 (16)
0xffff582fb4a8   296  stp x10, x0, [jssp, #-16]!
0xffff582fb4ac   300  movz x0, #0x2
0xffff582fb4b0   304  movz x1, #0x5b88
0xffff582fb4b4   308  movk x1, #0xe2, lsl #16
0xffff582fb4b8   312  ldr x16, pc+64 (addr 0x0000ffff582fb4f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582fb4bc   316  blr x16
0xffff582fb4c0   320  str x0, [jssp, #16]
0xffff582fb4c4   324  ldr x16, pc+60 (addr 0x0000ffff582fb500)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582fb4c8   328  blr x16
0xffff582fb4cc   332  ldr lr, [jssp, #16]
0xffff582fb4d0   336  ldp xzr, fp, [jssp], #24
0xffff582fb4d4   340  b #-0x100 (addr 0xffff582fb3d4)
0xffff582fb4d8   344  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff582fb4dc   348  d63f03e0       constant
0xffff582fb4e0   352  39c04241       constant
0xffff582fb4e4   356  00000000       constant
0xffff582fb4e8   360  32b05d81       constant
0xffff582fb4ec   364  00000000       constant
0xffff582fb4f0   368  58206820       constant
0xffff582fb4f4   372  0000ffff       constant
0xffff582fb4f8   376  58206260       constant
0xffff582fb4fc   380  0000ffff       constant
0xffff582fb500   384  582068e0       constant
0xffff582fb504   388  0000ffff       constant
0xffff582fb508   392  movz x16, #0x0
0xffff582fb50c   396  sub csp, jssp, #0x10 (16)
0xffff582fb510   400  stp fp, lr, [jssp, #-16]!
0xffff582fb514   404  bl #+0xc (addr 0xffff582fb520)
0xffff582fb518   408  movz x16, #0x8
0xffff582fb51c   412  bl #+0x14 (addr 0xffff582fb530)
0xffff582fb520   416  movz x17, #0xa00000000
0xffff582fb524   420  sub csp, jssp, #0x10 (16)
0xffff582fb528   424  stp x17, cp, [jssp, #-16]!
0xffff582fb52c   428  add fp, jssp, #0x10 (16)
0xffff582fb530   432  ldr x17, pc+24 (addr 0x0000ffff582fb548)    ;; lazy deoptimization bailout 0
0xffff582fb534   436  add x17, x17, x16
0xffff582fb538   440  br x17
0xffff582fb53c   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582fb540   448  d63f03e0       constant
0xffff582fb544   452  d503201f       constant
0xffff582fb548   456  58006000       constant
0xffff582fb54c   460  0000ffff       constant


Safepoints (size = 21)
0xffff582fb4c0   320  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff582fb394  embedded object  (0x39c04241 <undefined>)
0xffff582fb404  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fb494  code target (STUB)  (0xffff58206820)
0xffff582fb4b8  code target (STUB)  (0xffff58206260)
0xffff582fb4c4  code target (STUB)  (0xffff582068e0)
0xffff582fb4d8  constant pool (size 48)
0xffff582fb530  runtime entry
0xffff582fb53c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 485)
0xffff582fb380     0  ldur x4, [x3, #47]
0xffff582fb384     4  tbnz w2, #0, #+0xa8 (addr 0xffff582fb42c)
0xffff582fb388     8  asr x6, x2, #32
0xffff582fb38c    12  add x5, x4, #0x17 (23)
0xffff582fb390    16  ldr x7, [x5, w6, sxtw #3]
0xffff582fb394    20  ldr x4, pc+332 (addr 0x0000ffff582fb4e0)    ;; object: 0x39c04241 <undefined>
0xffff582fb398    24  cmp x7, x4
0xffff582fb39c    28  b.eq #+0x8c (addr 0xffff582fb428)
0xffff582fb3a0    32  ldur x4, [x7, #7]
0xffff582fb3a4    36  ldur x5, [x4, #-1]
0xffff582fb3a8    40  ldrb w6, [x5, #7]
0xffff582fb3ac    44  cmp w6, #0x6 (6)
0xffff582fb3b0    48  b.ne #+0x78 (addr 0xffff582fb428)
0xffff582fb3b4    52  movz x1, #0x92c0
0xffff582fb3b8    56  movk x1, #0x16e7, lsl #16
0xffff582fb3bc    60  ldp x2, x0, [x1]
0xffff582fb3c0    64  adds x16, x2, #0x40 (64)
0xffff582fb3c4    68  ccmp x16, x0, #nzCv, lo
0xffff582fb3c8    72  b.hi #+0xac (addr 0xffff582fb474)
0xffff582fb3cc    76  str x16, [x1]
0xffff582fb3d0    80  orr x2, x2, #0x1
0xffff582fb3d4    84  stur x5, [x2, #-1]
0xffff582fb3d8    88  ldur x0, [x4, #7]
0xffff582fb3dc    92  stur x0, [x2, #7]
0xffff582fb3e0    96  ldur x0, [x4, #15]
0xffff582fb3e4   100  stur x0, [x2, #15]
0xffff582fb3e8   104  ldur x0, [x4, #23]
0xffff582fb3ec   108  stur x0, [x2, #23]
0xffff582fb3f0   112  ldur x0, [x4, #31]
0xffff582fb3f4   116  stur x0, [x2, #31]
0xffff582fb3f8   120  ldur x0, [x4, #39]
0xffff582fb3fc   124  stur x0, [x2, #39]
0xffff582fb400   128  add x0, x2, #0x30 (48)
0xffff582fb404   132  ldr x1, pc+228 (addr 0x0000ffff582fb4e8)    ;; object: 0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fb408   136  stur x1, [x0, #-1]
0xffff582fb40c   140  stur x7, [x0, #7]
0xffff582fb410   144  ldur w0, [x7, #35]
0xffff582fb414   148  add w0, w0, #0x1 (1)
0xffff582fb418   152  lsl x0, x0, #32
0xffff582fb41c   156  stur x0, [x7, #31]
0xffff582fb420   160  mov x0, x2
0xffff582fb424   164  ret
0xffff582fb428   168  b #+0xe0 (addr 0xffff582fb508)
0xffff582fb42c   172  sub csp, jssp, #0x10 (16)
0xffff582fb430   176  stp fp, lr, [jssp, #-16]!
0xffff582fb434   180  movz fp, #0xa00000000
0xffff582fb438   184  sub csp, jssp, #0x8 (8)
0xffff582fb43c   188  str fp, [jssp, #-8]!
0xffff582fb440   192  add fp, jssp, #0x8 (8)
0xffff582fb444   196  ldur x16, [x2, #-1]
0xffff582fb448   200  ldr x17, [x26, #120]
0xffff582fb44c   204  cmp x16, x17
0xffff582fb450   208  b.ne #+0xc8 (addr 0xffff582fb518)
0xffff582fb454   212  ldur d29, [x2, #7]
0xffff582fb458   216  fcvtzs w6, d29
0xffff582fb45c   220  scvtf d0, w6
0xffff582fb460   224  fcmp d29, d0
0xffff582fb464   228  b.ne #+0xb4 (addr 0xffff582fb518)
0xffff582fb468   232  ldr lr, [jssp, #16]
0xffff582fb46c   236  ldp xzr, fp, [jssp], #24
0xffff582fb470   240  b #-0xe4 (addr 0xffff582fb38c)
0xffff582fb474   244  sub csp, jssp, #0x10 (16)
0xffff582fb478   248  stp fp, lr, [jssp, #-16]!
0xffff582fb47c   252  movz fp, #0xa00000000
0xffff582fb480   256  sub csp, jssp, #0x8 (8)
0xffff582fb484   260  str fp, [jssp, #-8]!
0xffff582fb488   264  add fp, jssp, #0x8 (8)
0xffff582fb48c   268  movz x2, #0x0
0xffff582fb490   272  mov x16, lr
0xffff582fb494   276  ldr x17, pc+92 (addr 0x0000ffff582fb4f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff582fb498   280  blr x17
0xffff582fb49c   284  movz x0, #0x4000000000
0xffff582fb4a0   288  movz x10, #0x0
0xffff582fb4a4   292  sub csp, jssp, #0x10 (16)
0xffff582fb4a8   296  stp x10, x0, [jssp, #-16]!
0xffff582fb4ac   300  movz x0, #0x2
0xffff582fb4b0   304  movz x1, #0x5b88
0xffff582fb4b4   308  movk x1, #0xe2, lsl #16
0xffff582fb4b8   312  ldr x16, pc+64 (addr 0x0000ffff582fb4f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff582fb4bc   316  blr x16
0xffff582fb4c0   320  str x0, [jssp, #16]
0xffff582fb4c4   324  ldr x16, pc+60 (addr 0x0000ffff582fb500)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff582fb4c8   328  blr x16
0xffff582fb4cc   332  ldr lr, [jssp, #16]
0xffff582fb4d0   336  ldp xzr, fp, [jssp], #24
0xffff582fb4d4   340  b #-0x100 (addr 0xffff582fb3d4)
0xffff582fb4d8   344  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff582fb4dc   348  d63f03e0       constant
0xffff582fb4e0   352  39c04241       constant
0xffff582fb4e4   356  00000000       constant
0xffff582fb4e8   360  32b05d81       constant
0xffff582fb4ec   364  00000000       constant
0xffff582fb4f0   368  58206820       constant
0xffff582fb4f4   372  0000ffff       constant
0xffff582fb4f8   376  58206260       constant
0xffff582fb4fc   380  0000ffff       constant
0xffff582fb500   384  582068e0       constant
0xffff582fb504   388  0000ffff       constant
0xffff582fb508   392  movz x16, #0x0
0xffff582fb50c   396  sub csp, jssp, #0x10 (16)
0xffff582fb510   400  stp fp, lr, [jssp, #-16]!
0xffff582fb514   404  bl #+0xc (addr 0xffff582fb520)
0xffff582fb518   408  movz x16, #0x8
0xffff582fb51c   412  bl #+0x14 (addr 0xffff582fb530)
0xffff582fb520   416  movz x17, #0xa00000000
0xffff582fb524   420  sub csp, jssp, #0x10 (16)
0xffff582fb528   424  stp x17, cp, [jssp, #-16]!
0xffff582fb52c   428  add fp, jssp, #0x10 (16)
0xffff582fb530   432  ldr x17, pc+24 (addr 0x0000ffff582fb548)    ;; lazy deoptimization bailout 0
0xffff582fb534   436  add x17, x17, x16
0xffff582fb538   440  br x17
0xffff582fb53c   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff582fb540   448  d63f03e0       constant
0xffff582fb544   452  d503201f       constant
0xffff582fb548   456  58006000       constant
0xffff582fb54c   460  0000ffff       constant


Safepoints (size = 21)
0xffff582fb4c0   320  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff582fb394  embedded object  (0x39c04241 <undefined>)
0xffff582fb404  embedded object  (0x32b05d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fb494  code target (STUB)  (0xffff58206820)
0xffff582fb4b8  code target (STUB)  (0xffff58206260)
0xffff582fb4c4  code target (STUB)  (0xffff582068e0)
0xffff582fb4d8  constant pool (size 48)
0xffff582fb530  runtime entry
0xffff582fb53c  constant pool (size 20)


kind = STUB
major_key = FastNewRestParameterStub
name = FastNewRestParameterStub
compiler = unknown
Instructions (size = 512)
0xffff582fc220     0  mov x2, fp
0xffff582fc224     4  b #+0x8 (addr 0xffff582fc22c)
0xffff582fc228     8  ldr x2, [x2]
0xffff582fc22c    12  ldur x3, [x2, #-16]
0xffff582fc230    16  cmp x3, x1
0xffff582fc234    20  b.ne #-0xc (addr 0xffff582fc228)
0xffff582fc238    24  ldr x2, [x2]
0xffff582fc23c    28  ldur x3, [x2, #-8]
0xffff582fc240    32  movz x16, #0xe00000000
0xffff582fc244    36  cmp x3, x16
0xffff582fc248    40  b.ne #+0x18 (addr 0xffff582fc260)
0xffff582fc24c    44  ldursw x0, [x2, #-20]
0xffff582fc250    48  ldur x1, [x1, #31]
0xffff582fc254    52  ldursw x1, [x1, #99]
0xffff582fc258    56  subs x0, x0, x1
0xffff582fc25c    60  b.gt #+0x94 (addr 0xffff582fc2f0)
0xffff582fc260    64  ldr x1, pc+384 (addr 0x0000ffff582fc3e0)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff582fc264    68  ldp x0, x2, [x1]
0xffff582fc268    72  adds x16, x0, #0x20 (32)
0xffff582fc26c    76  ccmp x16, x2, #nzCv, lo
0xffff582fc270    80  b.hi #+0x34 (addr 0xffff582fc2a4)
0xffff582fc274    84  str x16, [x1]
0xffff582fc278    88  orr x0, x0, #0x1
0xffff582fc27c    92  ldur x1, [cp, #39]
0xffff582fc280    96  movz x16, #0x187
0xffff582fc284   100  ldr x1, [x1, x16]
0xffff582fc288   104  stur x1, [x0, #-1]
0xffff582fc28c   108  ldr x1, [x26, #304]
0xffff582fc290   112  stur x1, [x0, #7]
0xffff582fc294   116  stur x1, [x0, #15]
0xffff582fc298   120  movz x1, #0x0
0xffff582fc29c   124  stur x1, [x0, #23]
0xffff582fc2a0   128  ret
0xffff582fc2a4   132  movz x16, #0xc00000000
0xffff582fc2a8   136  sub csp, jssp, #0x10 (16)
0xffff582fc2ac   140  stp fp, lr, [jssp, #-16]!
0xffff582fc2b0   144  sub csp, jssp, #0x10 (16)
0xffff582fc2b4   148  str x16, [jssp, #-8]!
0xffff582fc2b8   152  ldr x17, pc+304 (addr 0x0000ffff582fc3e8)    ;; object: 0xffff582fc1c1 <Code: STUB>
0xffff582fc2bc   156  sub csp, jssp, #0x10 (16)
0xffff582fc2c0   160  str x17, [jssp, #-8]!
0xffff582fc2c4   164  add fp, jssp, #0x10 (16)
0xffff582fc2c8   168  movz x16, #0x2000000000
0xffff582fc2cc   172  sub csp, jssp, #0x8 (8)
0xffff582fc2d0   176  str x16, [jssp, #-8]!
0xffff582fc2d4   180  movz x0, #0x1
0xffff582fc2d8   184  ldr x1, pc+280 (addr 0x0000ffff582fc3f0)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff582fc2dc   188  ldr x16, pc+284 (addr 0x0000ffff582fc3f8)    ;; code: STUB, CEntryStub, minor: 4
0xffff582fc2e0   192  blr x16
0xffff582fc2e4   196  mov jssp, fp
0xffff582fc2e8   200  ldp fp, lr, [jssp], #16
0xffff582fc2ec   204  b #-0x70 (addr 0xffff582fc27c)
0xffff582fc2f0   208  add x2, x2, x0, lsl #3
0xffff582fc2f4   212  add x2, x2, #0x8 (8)
0xffff582fc2f8   216  movz x1, #0x30
0xffff582fc2fc   220  add x1, x1, x0, lsl #3
0xffff582fc300   224  ldr x5, pc+256 (addr 0x0000ffff582fc400)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff582fc304   228  ldp x3, x16, [x5]
0xffff582fc308   232  adds x4, x3, x1
0xffff582fc30c   236  ccmp x4, x16, #nzCv, lo
0xffff582fc310   240  b.hi #+0x64 (addr 0xffff582fc374)
0xffff582fc314   244  str x4, [x5]
0xffff582fc318   248  orr x3, x3, #0x1
0xffff582fc31c   252  lsl x6, x0, #32
0xffff582fc320   256  ldr x1, [x26, #224]
0xffff582fc324   260  stur x1, [x3, #-1]
0xffff582fc328   264  stur x6, [x3, #7]
0xffff582fc32c   268  add x4, x3, #0x10 (16)
0xffff582fc330   272  add x0, x4, x0, lsl #3
0xffff582fc334   276  cmp x4, x0
0xffff582fc338   280  b.eq #+0x18 (addr 0xffff582fc350)
0xffff582fc33c   284  ldr x5, [x2]
0xffff582fc340   288  stur x5, [x4, #-1]
0xffff582fc344   292  sub x2, x2, #0x8 (8)
0xffff582fc348   296  add x4, x4, #0x8 (8)
0xffff582fc34c   300  b #-0x18 (addr 0xffff582fc334)
0xffff582fc350   304  ldur x1, [cp, #39]
0xffff582fc354   308  movz x16, #0x187
0xffff582fc358   312  ldr x1, [x1, x16]
0xffff582fc35c   316  stur x1, [x0, #-1]
0xffff582fc360   320  ldr x1, [x26, #304]
0xffff582fc364   324  stur x1, [x0, #7]
0xffff582fc368   328  stur x3, [x0, #15]
0xffff582fc36c   332  stur x6, [x0, #23]
0xffff582fc370   336  ret
0xffff582fc374   340  movz x16, #0xc00000000
0xffff582fc378   344  sub csp, jssp, #0x10 (16)
0xffff582fc37c   348  stp fp, lr, [jssp, #-16]!
0xffff582fc380   352  sub csp, jssp, #0x10 (16)
0xffff582fc384   356  str x16, [jssp, #-8]!
0xffff582fc388   360  ldr x17, pc+128 (addr 0x0000ffff582fc408)    ;; object: 0xffff582fc1c1 <Code: STUB>
0xffff582fc38c   364  sub csp, jssp, #0x10 (16)
0xffff582fc390   368  str x17, [jssp, #-8]!
0xffff582fc394   372  add fp, jssp, #0x10 (16)
0xffff582fc398   376  lsl x0, x0, #32
0xffff582fc39c   380  lsl x1, x1, #32
0xffff582fc3a0   384  sub csp, jssp, #0x18 (24)
0xffff582fc3a4   388  stp x1, x2, [jssp, #-24]!
0xffff582fc3a8   392  str x0, [jssp, #16]
0xffff582fc3ac   396  movz x0, #0x1
0xffff582fc3b0   400  ldr x1, pc+96 (addr 0x0000ffff582fc410)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff582fc3b4   404  ldr x16, pc+100 (addr 0x0000ffff582fc418)    ;; code: STUB, CEntryStub, minor: 4
0xffff582fc3b8   408  blr x16
0xffff582fc3bc   412  mov x3, x0
0xffff582fc3c0   416  ldp x2, x0, [jssp], #16
0xffff582fc3c4   420  asr x0, x0, #32
0xffff582fc3c8   424  mov jssp, fp
0xffff582fc3cc   428  ldp fp, lr, [jssp], #16
0xffff582fc3d0   432  b #-0xb4 (addr 0xffff582fc31c)
0xffff582fc3d4   436  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff582fc3d8   440  d63f03e0       constant
0xffff582fc3dc   444  d503201f       constant
0xffff582fc3e0   448  16e792c0       constant
0xffff582fc3e4   452  00000000       constant
0xffff582fc3e8   456  582fc1c1       constant
0xffff582fc3ec   460  0000ffff       constant
0xffff582fc3f0   464  00e25898       constant
0xffff582fc3f4   468  00000000       constant
0xffff582fc3f8   472  58206060       constant
0xffff582fc3fc   476  0000ffff       constant
0xffff582fc400   480  16e792c0       constant
0xffff582fc404   484  00000000       constant
0xffff582fc408   488  582fc1c1       constant
0xffff582fc40c   492  0000ffff       constant
0xffff582fc410   496  00e25898       constant
0xffff582fc414   500  00000000       constant
0xffff582fc418   504  58206060       constant
0xffff582fc41c   508  0000ffff       constant


RelocInfo (size = 24)
0xffff582fc260  external reference (Heap::NewSpaceAllocationTopAddress())  (0x16e792c0)
0xffff582fc2b8  embedded object  (0xffff582fc1c1 <Code: STUB>)
0xffff582fc2d8  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff582fc2dc  code target (STUB)  (0xffff58206060)
0xffff582fc300  external reference (Heap::NewSpaceAllocationTopAddress())  (0x16e792c0)
0xffff582fc388  embedded object  (0xffff582fc1c1 <Code: STUB>)
0xffff582fc3b0  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff582fc3b4  code target (STUB)  (0xffff58206060)
0xffff582fc3d4  constant pool (size 76)


kind = HANDLER
major_key = <NoCache>Stub
name = info
compiler = unknown
Instructions (size = 120)
0xffff582fc7a0     0  sub csp, jssp, #0x8 (8)
0xffff582fc7a4     4  str x3, [jssp, #-8]!
0xffff582fc7a8     8  sub csp, jssp, #0x8 (8)
0xffff582fc7ac    12  str x0, [jssp, #-8]!
0xffff582fc7b0    16  ldr x0, pc+72 (addr 0x0000ffff582fc7f8)    ;; object: 0x225ed321 Cell for 0
0xffff582fc7b4    20  ldur x0, [x0, #7]
0xffff582fc7b8    24  cmp x0, #0x0 (0)
0xffff582fc7bc    28  b.ne #+0x14 (addr 0xffff582fc7d0)
0xffff582fc7c0    32  ldr x3, pc+64 (addr 0x0000ffff582fc800)    ;; object: 0x225ed331 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>
0xffff582fc7c4    36  ldur x3, [x3, #7]
0xffff582fc7c8    40  tbz w3, #0, #+0x8 (addr 0xffff582fc7d0)
0xffff582fc7cc    44  b #+0x14 (addr 0xffff582fc7e0)
0xffff582fc7d0    48  ldr x0, [jssp], #8
0xffff582fc7d4    52  ldr x3, [jssp], #8
0xffff582fc7d8    56  ldr x16, pc+48 (addr 0x0000ffff582fc808)    ;; code: BUILTIN
0xffff582fc7dc    60  br x16
0xffff582fc7e0    64  add jssp, jssp, #0x10 (16)
0xffff582fc7e4    68  mov x1, x3
0xffff582fc7e8    72  ldr x16, pc+40 (addr 0x0000ffff582fc810)    ;; code: HANDLER, LoadConstantStub, minor: 2
0xffff582fc7ec    76  br x16
0xffff582fc7f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582fc7f4    84  d63f03e0       constant
0xffff582fc7f8    88  225ed321       constant
0xffff582fc7fc    92  00000000       constant
0xffff582fc800    96  225ed331       constant
0xffff582fc804   100  00000000       constant
0xffff582fc808   104  582222e0       constant
0xffff582fc80c   108  0000ffff       constant
0xffff582fc810   112  58243380       constant
0xffff582fc814   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582fc7b0  embedded object  (0x225ed321 Cell for 0)
0xffff582fc7c0  embedded object  (0x225ed331 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>)
0xffff582fc7d8  code target (BUILTIN)  (0xffff582222e0)
0xffff582fc7e8  code target (HANDLER)  (0xffff58243380)
0xffff582fc7f0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = bind
compiler = unknown
Instructions (size = 120)
0xffff582fc880     0  sub csp, jssp, #0x8 (8)
0xffff582fc884     4  str x3, [jssp, #-8]!
0xffff582fc888     8  sub csp, jssp, #0x8 (8)
0xffff582fc88c    12  str x0, [jssp, #-8]!
0xffff582fc890    16  ldr x0, pc+72 (addr 0x0000ffff582fc8d8)    ;; object: 0x39c5b0f1 Cell for 0
0xffff582fc894    20  ldur x0, [x0, #7]
0xffff582fc898    24  cmp x0, #0x0 (0)
0xffff582fc89c    28  b.ne #+0x14 (addr 0xffff582fc8b0)
0xffff582fc8a0    32  ldr x3, pc+64 (addr 0x0000ffff582fc8e0)    ;; object: 0x225ed381 WeakCell for 0x39c40019 <JS Function (SharedFunctionInfo 0x39c3ff71)>
0xffff582fc8a4    36  ldur x3, [x3, #7]
0xffff582fc8a8    40  tbz w3, #0, #+0x8 (addr 0xffff582fc8b0)
0xffff582fc8ac    44  b #+0x14 (addr 0xffff582fc8c0)
0xffff582fc8b0    48  ldr x0, [jssp], #8
0xffff582fc8b4    52  ldr x3, [jssp], #8
0xffff582fc8b8    56  ldr x16, pc+48 (addr 0x0000ffff582fc8e8)    ;; code: BUILTIN
0xffff582fc8bc    60  br x16
0xffff582fc8c0    64  add jssp, jssp, #0x10 (16)
0xffff582fc8c4    68  mov x1, x3
0xffff582fc8c8    72  ldr x16, pc+40 (addr 0x0000ffff582fc8f0)    ;; code: HANDLER, LoadConstantStub, minor: 5
0xffff582fc8cc    76  br x16
0xffff582fc8d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582fc8d4    84  d63f03e0       constant
0xffff582fc8d8    88  39c5b0f1       constant
0xffff582fc8dc    92  00000000       constant
0xffff582fc8e0    96  225ed381       constant
0xffff582fc8e4   100  00000000       constant
0xffff582fc8e8   104  582222e0       constant
0xffff582fc8ec   108  0000ffff       constant
0xffff582fc8f0   112  58243500       constant
0xffff582fc8f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582fc890  embedded object  (0x39c5b0f1 Cell for 0)
0xffff582fc8a0  embedded object  (0x225ed381 WeakCell for 0x39c40019 <JS Function (SharedFunctionInfo 0x39c3ff71)>)
0xffff582fc8b8  code target (BUILTIN)  (0xffff582222e0)
0xffff582fc8c8  code target (HANDLER)  (0xffff58243500)
0xffff582fc8d0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = info
compiler = unknown
Instructions (size = 184)
0xffff582fc960     0  sub csp, jssp, #0x8 (8)
0xffff582fc964     4  str x3, [jssp, #-8]!
0xffff582fc968     8  sub csp, jssp, #0x8 (8)
0xffff582fc96c    12  str x4, [jssp, #-8]!
0xffff582fc970    16  ldr x3, pc+112 (addr 0x0000ffff582fc9e0)    ;; object: 0x225ed321 Cell for 0
0xffff582fc974    20  ldur x3, [x3, #7]
0xffff582fc978    24  cmp x3, #0x0 (0)
0xffff582fc97c    28  b.ne #+0x44 (addr 0xffff582fc9c0)
0xffff582fc980    32  tbz w0, #0, #+0x40 (addr 0xffff582fc9c0)
0xffff582fc984    36  ldur x3, [x0, #-1]
0xffff582fc988    40  ldr x4, pc+96 (addr 0x0000ffff582fc9e8)    ;; object: 0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fc98c    44  ldur x4, [x4, #7]
0xffff582fc990    48  cmp x3, x4
0xffff582fc994    52  b.ne #+0x2c (addr 0xffff582fc9c0)
0xffff582fc998    56  ldr x5, pc+88 (addr 0x0000ffff582fc9f0)    ;; object: 0x225ed3b9 WeakCell for 0x32b41ea1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fc99c    60  ldur x5, [x5, #7]
0xffff582fc9a0    64  tbz w5, #0, #+0x20 (addr 0xffff582fc9c0)
0xffff582fc9a4    68  ldursw x4, [x5, #15]
0xffff582fc9a8    72  tbnz w4, #23, #+0x18 (addr 0xffff582fc9c0)
0xffff582fc9ac    76  ldr x4, [jssp], #8
0xffff582fc9b0    80  ldr x3, [jssp], #8
0xffff582fc9b4    84  ldr x2, pc+68 (addr 0x0000ffff582fc9f8)    ;; object: 0x225ccaf1 <String[4]: info>
0xffff582fc9b8    88  ldr x16, pc+72 (addr 0x0000ffff582fca00)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff582fc9bc    92  br x16
0xffff582fc9c0    96  ldr x2, pc+72 (addr 0x0000ffff582fca08)    ;; object: 0x225ccaf1 <String[4]: info>
0xffff582fc9c4   100  ldr x4, [jssp], #8
0xffff582fc9c8   104  ldr x3, [jssp], #8
0xffff582fc9cc   108  ldr x16, pc+68 (addr 0x0000ffff582fca10)    ;; code: BUILTIN
0xffff582fc9d0   112  br x16
0xffff582fc9d4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582fc9d8   120  d63f03e0       constant
0xffff582fc9dc   124  d503201f       constant
0xffff582fc9e0   128  225ed321       constant
0xffff582fc9e4   132  00000000       constant
0xffff582fc9e8   136  225ed2b1       constant
0xffff582fc9ec   140  00000000       constant
0xffff582fc9f0   144  225ed3b9       constant
0xffff582fc9f4   148  00000000       constant
0xffff582fc9f8   152  225ccaf1       constant
0xffff582fc9fc   156  00000000       constant
0xffff582fca00   160  5828c240       constant
0xffff582fca04   164  0000ffff       constant
0xffff582fca08   168  225ccaf1       constant
0xffff582fca0c   172  00000000       constant
0xffff582fca10   176  58222420       constant
0xffff582fca14   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582fc970  embedded object  (0x225ed321 Cell for 0)
0xffff582fc988  embedded object  (0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fc998  embedded object  (0x225ed3b9 WeakCell for 0x32b41ea1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fc9b4  embedded object  (0x225ccaf1 <String[4]: info>)
0xffff582fc9b8  code target (HANDLER)  (0xffff5828c240)
0xffff582fc9c0  embedded object  (0x225ccaf1 <String[4]: info>)
0xffff582fc9cc  code target (BUILTIN)  (0xffff58222420)
0xffff582fc9d4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = warn
compiler = unknown
Instructions (size = 120)
0xffff582fca80     0  sub csp, jssp, #0x8 (8)
0xffff582fca84     4  str x3, [jssp, #-8]!
0xffff582fca88     8  sub csp, jssp, #0x8 (8)
0xffff582fca8c    12  str x0, [jssp, #-8]!
0xffff582fca90    16  ldr x0, pc+72 (addr 0x0000ffff582fcad8)    ;; object: 0x225ed321 Cell for 0
0xffff582fca94    20  ldur x0, [x0, #7]
0xffff582fca98    24  cmp x0, #0x0 (0)
0xffff582fca9c    28  b.ne #+0x14 (addr 0xffff582fcab0)
0xffff582fcaa0    32  ldr x3, pc+64 (addr 0x0000ffff582fcae0)    ;; object: 0x225ed3f1 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>
0xffff582fcaa4    36  ldur x3, [x3, #7]
0xffff582fcaa8    40  tbz w3, #0, #+0x8 (addr 0xffff582fcab0)
0xffff582fcaac    44  b #+0x14 (addr 0xffff582fcac0)
0xffff582fcab0    48  ldr x0, [jssp], #8
0xffff582fcab4    52  ldr x3, [jssp], #8
0xffff582fcab8    56  ldr x16, pc+48 (addr 0x0000ffff582fcae8)    ;; code: BUILTIN
0xffff582fcabc    60  br x16
0xffff582fcac0    64  add jssp, jssp, #0x10 (16)
0xffff582fcac4    68  mov x1, x3
0xffff582fcac8    72  ldr x16, pc+40 (addr 0x0000ffff582fcaf0)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff582fcacc    76  br x16
0xffff582fcad0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582fcad4    84  d63f03e0       constant
0xffff582fcad8    88  225ed321       constant
0xffff582fcadc    92  00000000       constant
0xffff582fcae0    96  225ed3f1       constant
0xffff582fcae4   100  00000000       constant
0xffff582fcae8   104  582222e0       constant
0xffff582fcaec   108  0000ffff       constant
0xffff582fcaf0   112  58243400       constant
0xffff582fcaf4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582fca90  embedded object  (0x225ed321 Cell for 0)
0xffff582fcaa0  embedded object  (0x225ed3f1 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>)
0xffff582fcab8  code target (BUILTIN)  (0xffff582222e0)
0xffff582fcac8  code target (HANDLER)  (0xffff58243400)
0xffff582fcad0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = warn
compiler = unknown
Instructions (size = 184)
0xffff582fce80     0  sub csp, jssp, #0x8 (8)
0xffff582fce84     4  str x3, [jssp, #-8]!
0xffff582fce88     8  sub csp, jssp, #0x8 (8)
0xffff582fce8c    12  str x4, [jssp, #-8]!
0xffff582fce90    16  ldr x3, pc+112 (addr 0x0000ffff582fcf00)    ;; object: 0x225ed321 Cell for 0
0xffff582fce94    20  ldur x3, [x3, #7]
0xffff582fce98    24  cmp x3, #0x0 (0)
0xffff582fce9c    28  b.ne #+0x44 (addr 0xffff582fcee0)
0xffff582fcea0    32  tbz w0, #0, #+0x40 (addr 0xffff582fcee0)
0xffff582fcea4    36  ldur x3, [x0, #-1]
0xffff582fcea8    40  ldr x4, pc+96 (addr 0x0000ffff582fcf08)    ;; object: 0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fceac    44  ldur x4, [x4, #7]
0xffff582fceb0    48  cmp x3, x4
0xffff582fceb4    52  b.ne #+0x2c (addr 0xffff582fcee0)
0xffff582fceb8    56  ldr x5, pc+88 (addr 0x0000ffff582fcf10)    ;; object: 0x225ed5a1 WeakCell for 0x32b41ef9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fcebc    60  ldur x5, [x5, #7]
0xffff582fcec0    64  tbz w5, #0, #+0x20 (addr 0xffff582fcee0)
0xffff582fcec4    68  ldursw x4, [x5, #15]
0xffff582fcec8    72  tbnz w4, #23, #+0x18 (addr 0xffff582fcee0)
0xffff582fcecc    76  ldr x4, [jssp], #8
0xffff582fced0    80  ldr x3, [jssp], #8
0xffff582fced4    84  ldr x2, pc+68 (addr 0x0000ffff582fcf18)    ;; object: 0x225ccb11 <String[4]: warn>
0xffff582fced8    88  ldr x16, pc+72 (addr 0x0000ffff582fcf20)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff582fcedc    92  br x16
0xffff582fcee0    96  ldr x2, pc+72 (addr 0x0000ffff582fcf28)    ;; object: 0x225ccb11 <String[4]: warn>
0xffff582fcee4   100  ldr x4, [jssp], #8
0xffff582fcee8   104  ldr x3, [jssp], #8
0xffff582fceec   108  ldr x16, pc+68 (addr 0x0000ffff582fcf30)    ;; code: BUILTIN
0xffff582fcef0   112  br x16
0xffff582fcef4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582fcef8   120  d63f03e0       constant
0xffff582fcefc   124  d503201f       constant
0xffff582fcf00   128  225ed321       constant
0xffff582fcf04   132  00000000       constant
0xffff582fcf08   136  225ed2b1       constant
0xffff582fcf0c   140  00000000       constant
0xffff582fcf10   144  225ed5a1       constant
0xffff582fcf14   148  00000000       constant
0xffff582fcf18   152  225ccb11       constant
0xffff582fcf1c   156  00000000       constant
0xffff582fcf20   160  582e6060       constant
0xffff582fcf24   164  0000ffff       constant
0xffff582fcf28   168  225ccb11       constant
0xffff582fcf2c   172  00000000       constant
0xffff582fcf30   176  58222420       constant
0xffff582fcf34   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582fce90  embedded object  (0x225ed321 Cell for 0)
0xffff582fcea8  embedded object  (0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fceb8  embedded object  (0x225ed5a1 WeakCell for 0x32b41ef9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fced4  embedded object  (0x225ccb11 <String[4]: warn>)
0xffff582fced8  code target (HANDLER)  (0xffff582e6060)
0xffff582fcee0  embedded object  (0x225ccb11 <String[4]: warn>)
0xffff582fceec  code target (BUILTIN)  (0xffff58222420)
0xffff582fcef4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = error
compiler = unknown
Instructions (size = 120)
0xffff582fcfa0     0  sub csp, jssp, #0x8 (8)
0xffff582fcfa4     4  str x3, [jssp, #-8]!
0xffff582fcfa8     8  sub csp, jssp, #0x8 (8)
0xffff582fcfac    12  str x0, [jssp, #-8]!
0xffff582fcfb0    16  ldr x0, pc+72 (addr 0x0000ffff582fcff8)    ;; object: 0x225ed321 Cell for 0
0xffff582fcfb4    20  ldur x0, [x0, #7]
0xffff582fcfb8    24  cmp x0, #0x0 (0)
0xffff582fcfbc    28  b.ne #+0x14 (addr 0xffff582fcfd0)
0xffff582fcfc0    32  ldr x3, pc+64 (addr 0x0000ffff582fd000)    ;; object: 0x225ed5d9 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>
0xffff582fcfc4    36  ldur x3, [x3, #7]
0xffff582fcfc8    40  tbz w3, #0, #+0x8 (addr 0xffff582fcfd0)
0xffff582fcfcc    44  b #+0x14 (addr 0xffff582fcfe0)
0xffff582fcfd0    48  ldr x0, [jssp], #8
0xffff582fcfd4    52  ldr x3, [jssp], #8
0xffff582fcfd8    56  ldr x16, pc+48 (addr 0x0000ffff582fd008)    ;; code: BUILTIN
0xffff582fcfdc    60  br x16
0xffff582fcfe0    64  add jssp, jssp, #0x10 (16)
0xffff582fcfe4    68  mov x1, x3
0xffff582fcfe8    72  ldr x16, pc+40 (addr 0x0000ffff582fd010)    ;; code: HANDLER, LoadConstantStub, minor: 4
0xffff582fcfec    76  br x16
0xffff582fcff0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582fcff4    84  d63f03e0       constant
0xffff582fcff8    88  225ed321       constant
0xffff582fcffc    92  00000000       constant
0xffff582fd000    96  225ed5d9       constant
0xffff582fd004   100  00000000       constant
0xffff582fd008   104  582222e0       constant
0xffff582fd00c   108  0000ffff       constant
0xffff582fd010   112  58243480       constant
0xffff582fd014   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582fcfb0  embedded object  (0x225ed321 Cell for 0)
0xffff582fcfc0  embedded object  (0x225ed5d9 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>)
0xffff582fcfd8  code target (BUILTIN)  (0xffff582222e0)
0xffff582fcfe8  code target (HANDLER)  (0xffff58243480)
0xffff582fcff0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = error
compiler = unknown
Instructions (size = 184)
0xffff582fd080     0  sub csp, jssp, #0x8 (8)
0xffff582fd084     4  str x3, [jssp, #-8]!
0xffff582fd088     8  sub csp, jssp, #0x8 (8)
0xffff582fd08c    12  str x4, [jssp, #-8]!
0xffff582fd090    16  ldr x3, pc+112 (addr 0x0000ffff582fd100)    ;; object: 0x225ed321 Cell for 0
0xffff582fd094    20  ldur x3, [x3, #7]
0xffff582fd098    24  cmp x3, #0x0 (0)
0xffff582fd09c    28  b.ne #+0x44 (addr 0xffff582fd0e0)
0xffff582fd0a0    32  tbz w0, #0, #+0x40 (addr 0xffff582fd0e0)
0xffff582fd0a4    36  ldur x3, [x0, #-1]
0xffff582fd0a8    40  ldr x4, pc+96 (addr 0x0000ffff582fd108)    ;; object: 0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fd0ac    44  ldur x4, [x4, #7]
0xffff582fd0b0    48  cmp x3, x4
0xffff582fd0b4    52  b.ne #+0x2c (addr 0xffff582fd0e0)
0xffff582fd0b8    56  ldr x5, pc+88 (addr 0x0000ffff582fd110)    ;; object: 0x225ed611 WeakCell for 0x32b41f51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fd0bc    60  ldur x5, [x5, #7]
0xffff582fd0c0    64  tbz w5, #0, #+0x20 (addr 0xffff582fd0e0)
0xffff582fd0c4    68  ldursw x4, [x5, #15]
0xffff582fd0c8    72  tbnz w4, #23, #+0x18 (addr 0xffff582fd0e0)
0xffff582fd0cc    76  ldr x4, [jssp], #8
0xffff582fd0d0    80  ldr x3, [jssp], #8
0xffff582fd0d4    84  ldr x2, pc+68 (addr 0x0000ffff582fd118)    ;; object: 0x39cb2571 <String[5]: error>
0xffff582fd0d8    88  ldr x16, pc+72 (addr 0x0000ffff582fd120)    ;; code: HANDLER, StoreTransitionStub, minor: 198665
0xffff582fd0dc    92  br x16
0xffff582fd0e0    96  ldr x2, pc+72 (addr 0x0000ffff582fd128)    ;; object: 0x39cb2571 <String[5]: error>
0xffff582fd0e4   100  ldr x4, [jssp], #8
0xffff582fd0e8   104  ldr x3, [jssp], #8
0xffff582fd0ec   108  ldr x16, pc+68 (addr 0x0000ffff582fd130)    ;; code: BUILTIN
0xffff582fd0f0   112  br x16
0xffff582fd0f4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582fd0f8   120  d63f03e0       constant
0xffff582fd0fc   124  d503201f       constant
0xffff582fd100   128  225ed321       constant
0xffff582fd104   132  00000000       constant
0xffff582fd108   136  225ed2b1       constant
0xffff582fd10c   140  00000000       constant
0xffff582fd110   144  225ed611       constant
0xffff582fd114   148  00000000       constant
0xffff582fd118   152  39cb2571       constant
0xffff582fd11c   156  00000000       constant
0xffff582fd120   160  582e6400       constant
0xffff582fd124   164  0000ffff       constant
0xffff582fd128   168  39cb2571       constant
0xffff582fd12c   172  00000000       constant
0xffff582fd130   176  58222420       constant
0xffff582fd134   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582fd090  embedded object  (0x225ed321 Cell for 0)
0xffff582fd0a8  embedded object  (0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fd0b8  embedded object  (0x225ed611 WeakCell for 0x32b41f51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fd0d4  embedded object  (0x39cb2571 <String[5]: error>)
0xffff582fd0d8  code target (HANDLER)  (0xffff582e6400)
0xffff582fd0e0  embedded object  (0x39cb2571 <String[5]: error>)
0xffff582fd0ec  code target (BUILTIN)  (0xffff58222420)
0xffff582fd0f4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = dir
compiler = unknown
Instructions (size = 120)
0xffff582fd1a0     0  sub csp, jssp, #0x8 (8)
0xffff582fd1a4     4  str x3, [jssp, #-8]!
0xffff582fd1a8     8  sub csp, jssp, #0x8 (8)
0xffff582fd1ac    12  str x0, [jssp, #-8]!
0xffff582fd1b0    16  ldr x0, pc+72 (addr 0x0000ffff582fd1f8)    ;; object: 0x225ed321 Cell for 0
0xffff582fd1b4    20  ldur x0, [x0, #7]
0xffff582fd1b8    24  cmp x0, #0x0 (0)
0xffff582fd1bc    28  b.ne #+0x14 (addr 0xffff582fd1d0)
0xffff582fd1c0    32  ldr x3, pc+64 (addr 0x0000ffff582fd200)    ;; object: 0x225ed649 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>
0xffff582fd1c4    36  ldur x3, [x3, #7]
0xffff582fd1c8    40  tbz w3, #0, #+0x8 (addr 0xffff582fd1d0)
0xffff582fd1cc    44  b #+0x14 (addr 0xffff582fd1e0)
0xffff582fd1d0    48  ldr x0, [jssp], #8
0xffff582fd1d4    52  ldr x3, [jssp], #8
0xffff582fd1d8    56  ldr x16, pc+48 (addr 0x0000ffff582fd208)    ;; code: BUILTIN
0xffff582fd1dc    60  br x16
0xffff582fd1e0    64  add jssp, jssp, #0x10 (16)
0xffff582fd1e4    68  mov x1, x3
0xffff582fd1e8    72  ldr x16, pc+40 (addr 0x0000ffff582fd210)    ;; code: HANDLER, LoadConstantStub, minor: 5
0xffff582fd1ec    76  br x16
0xffff582fd1f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582fd1f4    84  d63f03e0       constant
0xffff582fd1f8    88  225ed321       constant
0xffff582fd1fc    92  00000000       constant
0xffff582fd200    96  225ed649       constant
0xffff582fd204   100  00000000       constant
0xffff582fd208   104  582222e0       constant
0xffff582fd20c   108  0000ffff       constant
0xffff582fd210   112  58243500       constant
0xffff582fd214   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582fd1b0  embedded object  (0x225ed321 Cell for 0)
0xffff582fd1c0  embedded object  (0x225ed649 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>)
0xffff582fd1d8  code target (BUILTIN)  (0xffff582222e0)
0xffff582fd1e8  code target (HANDLER)  (0xffff58243500)
0xffff582fd1f0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = dir
compiler = unknown
Instructions (size = 184)
0xffff582fd600     0  sub csp, jssp, #0x8 (8)
0xffff582fd604     4  str x3, [jssp, #-8]!
0xffff582fd608     8  sub csp, jssp, #0x8 (8)
0xffff582fd60c    12  str x4, [jssp, #-8]!
0xffff582fd610    16  ldr x3, pc+112 (addr 0x0000ffff582fd680)    ;; object: 0x225ed321 Cell for 0
0xffff582fd614    20  ldur x3, [x3, #7]
0xffff582fd618    24  cmp x3, #0x0 (0)
0xffff582fd61c    28  b.ne #+0x44 (addr 0xffff582fd660)
0xffff582fd620    32  tbz w0, #0, #+0x40 (addr 0xffff582fd660)
0xffff582fd624    36  ldur x3, [x0, #-1]
0xffff582fd628    40  ldr x4, pc+96 (addr 0x0000ffff582fd688)    ;; object: 0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fd62c    44  ldur x4, [x4, #7]
0xffff582fd630    48  cmp x3, x4
0xffff582fd634    52  b.ne #+0x2c (addr 0xffff582fd660)
0xffff582fd638    56  ldr x5, pc+88 (addr 0x0000ffff582fd690)    ;; object: 0x225ed859 WeakCell for 0x32b41fa9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fd63c    60  ldur x5, [x5, #7]
0xffff582fd640    64  tbz w5, #0, #+0x20 (addr 0xffff582fd660)
0xffff582fd644    68  ldursw x4, [x5, #15]
0xffff582fd648    72  tbnz w4, #23, #+0x18 (addr 0xffff582fd660)
0xffff582fd64c    76  ldr x4, [jssp], #8
0xffff582fd650    80  ldr x3, [jssp], #8
0xffff582fd654    84  ldr x2, pc+68 (addr 0x0000ffff582fd698)    ;; object: 0x39ccffd1 <String[3]: dir>
0xffff582fd658    88  ldr x16, pc+72 (addr 0x0000ffff582fd6a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198666
0xffff582fd65c    92  br x16
0xffff582fd660    96  ldr x2, pc+72 (addr 0x0000ffff582fd6a8)    ;; object: 0x39ccffd1 <String[3]: dir>
0xffff582fd664   100  ldr x4, [jssp], #8
0xffff582fd668   104  ldr x3, [jssp], #8
0xffff582fd66c   108  ldr x16, pc+68 (addr 0x0000ffff582fd6b0)    ;; code: BUILTIN
0xffff582fd670   112  br x16
0xffff582fd674   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582fd678   120  d63f03e0       constant
0xffff582fd67c   124  d503201f       constant
0xffff582fd680   128  225ed321       constant
0xffff582fd684   132  00000000       constant
0xffff582fd688   136  225ed2b1       constant
0xffff582fd68c   140  00000000       constant
0xffff582fd690   144  225ed859       constant
0xffff582fd694   148  00000000       constant
0xffff582fd698   152  39ccffd1       constant
0xffff582fd69c   156  00000000       constant
0xffff582fd6a0   160  582f5ba0       constant
0xffff582fd6a4   164  0000ffff       constant
0xffff582fd6a8   168  39ccffd1       constant
0xffff582fd6ac   172  00000000       constant
0xffff582fd6b0   176  58222420       constant
0xffff582fd6b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582fd610  embedded object  (0x225ed321 Cell for 0)
0xffff582fd628  embedded object  (0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fd638  embedded object  (0x225ed859 WeakCell for 0x32b41fa9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fd654  embedded object  (0x39ccffd1 <String[3]: dir>)
0xffff582fd658  code target (HANDLER)  (0xffff582f5ba0)
0xffff582fd660  embedded object  (0x39ccffd1 <String[3]: dir>)
0xffff582fd66c  code target (BUILTIN)  (0xffff58222420)
0xffff582fd674  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = time
compiler = unknown
Instructions (size = 120)
0xffff582fd720     0  sub csp, jssp, #0x8 (8)
0xffff582fd724     4  str x3, [jssp, #-8]!
0xffff582fd728     8  sub csp, jssp, #0x8 (8)
0xffff582fd72c    12  str x0, [jssp, #-8]!
0xffff582fd730    16  ldr x0, pc+72 (addr 0x0000ffff582fd778)    ;; object: 0x225ed321 Cell for 0
0xffff582fd734    20  ldur x0, [x0, #7]
0xffff582fd738    24  cmp x0, #0x0 (0)
0xffff582fd73c    28  b.ne #+0x14 (addr 0xffff582fd750)
0xffff582fd740    32  ldr x3, pc+64 (addr 0x0000ffff582fd780)    ;; object: 0x225ed891 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>
0xffff582fd744    36  ldur x3, [x3, #7]
0xffff582fd748    40  tbz w3, #0, #+0x8 (addr 0xffff582fd750)
0xffff582fd74c    44  b #+0x14 (addr 0xffff582fd760)
0xffff582fd750    48  ldr x0, [jssp], #8
0xffff582fd754    52  ldr x3, [jssp], #8
0xffff582fd758    56  ldr x16, pc+48 (addr 0x0000ffff582fd788)    ;; code: BUILTIN
0xffff582fd75c    60  br x16
0xffff582fd760    64  add jssp, jssp, #0x10 (16)
0xffff582fd764    68  mov x1, x3
0xffff582fd768    72  ldr x16, pc+40 (addr 0x0000ffff582fd790)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff582fd76c    76  br x16
0xffff582fd770    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582fd774    84  d63f03e0       constant
0xffff582fd778    88  225ed321       constant
0xffff582fd77c    92  00000000       constant
0xffff582fd780    96  225ed891       constant
0xffff582fd784   100  00000000       constant
0xffff582fd788   104  582222e0       constant
0xffff582fd78c   108  0000ffff       constant
0xffff582fd790   112  5828b020       constant
0xffff582fd794   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582fd730  embedded object  (0x225ed321 Cell for 0)
0xffff582fd740  embedded object  (0x225ed891 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>)
0xffff582fd758  code target (BUILTIN)  (0xffff582222e0)
0xffff582fd768  code target (HANDLER)  (0xffff5828b020)
0xffff582fd770  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = time
compiler = unknown
Instructions (size = 184)
0xffff582fda20     0  sub csp, jssp, #0x8 (8)
0xffff582fda24     4  str x3, [jssp, #-8]!
0xffff582fda28     8  sub csp, jssp, #0x8 (8)
0xffff582fda2c    12  str x4, [jssp, #-8]!
0xffff582fda30    16  ldr x3, pc+112 (addr 0x0000ffff582fdaa0)    ;; object: 0x225ed321 Cell for 0
0xffff582fda34    20  ldur x3, [x3, #7]
0xffff582fda38    24  cmp x3, #0x0 (0)
0xffff582fda3c    28  b.ne #+0x44 (addr 0xffff582fda80)
0xffff582fda40    32  tbz w0, #0, #+0x40 (addr 0xffff582fda80)
0xffff582fda44    36  ldur x3, [x0, #-1]
0xffff582fda48    40  ldr x4, pc+96 (addr 0x0000ffff582fdaa8)    ;; object: 0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fda4c    44  ldur x4, [x4, #7]
0xffff582fda50    48  cmp x3, x4
0xffff582fda54    52  b.ne #+0x2c (addr 0xffff582fda80)
0xffff582fda58    56  ldr x5, pc+88 (addr 0x0000ffff582fdab0)    ;; object: 0x225eda29 WeakCell for 0x32b42001 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fda5c    60  ldur x5, [x5, #7]
0xffff582fda60    64  tbz w5, #0, #+0x20 (addr 0xffff582fda80)
0xffff582fda64    68  ldursw x4, [x5, #15]
0xffff582fda68    72  tbnz w4, #23, #+0x18 (addr 0xffff582fda80)
0xffff582fda6c    76  ldr x4, [jssp], #8
0xffff582fda70    80  ldr x3, [jssp], #8
0xffff582fda74    84  ldr x2, pc+68 (addr 0x0000ffff582fdab8)    ;; object: 0x39ca2941 <String[4]: time>
0xffff582fda78    88  ldr x16, pc+72 (addr 0x0000ffff582fdac0)    ;; code: HANDLER, StoreTransitionStub, minor: 198667
0xffff582fda7c    92  br x16
0xffff582fda80    96  ldr x2, pc+72 (addr 0x0000ffff582fdac8)    ;; object: 0x39ca2941 <String[4]: time>
0xffff582fda84   100  ldr x4, [jssp], #8
0xffff582fda88   104  ldr x3, [jssp], #8
0xffff582fda8c   108  ldr x16, pc+68 (addr 0x0000ffff582fdad0)    ;; code: BUILTIN
0xffff582fda90   112  br x16
0xffff582fda94   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582fda98   120  d63f03e0       constant
0xffff582fda9c   124  d503201f       constant
0xffff582fdaa0   128  225ed321       constant
0xffff582fdaa4   132  00000000       constant
0xffff582fdaa8   136  225ed2b1       constant
0xffff582fdaac   140  00000000       constant
0xffff582fdab0   144  225eda29       constant
0xffff582fdab4   148  00000000       constant
0xffff582fdab8   152  39ca2941       constant
0xffff582fdabc   156  00000000       constant
0xffff582fdac0   160  582f5ec0       constant
0xffff582fdac4   164  0000ffff       constant
0xffff582fdac8   168  39ca2941       constant
0xffff582fdacc   172  00000000       constant
0xffff582fdad0   176  58222420       constant
0xffff582fdad4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582fda30  embedded object  (0x225ed321 Cell for 0)
0xffff582fda48  embedded object  (0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fda58  embedded object  (0x225eda29 WeakCell for 0x32b42001 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fda74  embedded object  (0x39ca2941 <String[4]: time>)
0xffff582fda78  code target (HANDLER)  (0xffff582f5ec0)
0xffff582fda80  embedded object  (0x39ca2941 <String[4]: time>)
0xffff582fda8c  code target (BUILTIN)  (0xffff58222420)
0xffff582fda94  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = timeEnd
compiler = unknown
Instructions (size = 120)
0xffff582fdb40     0  sub csp, jssp, #0x8 (8)
0xffff582fdb44     4  str x3, [jssp, #-8]!
0xffff582fdb48     8  sub csp, jssp, #0x8 (8)
0xffff582fdb4c    12  str x0, [jssp, #-8]!
0xffff582fdb50    16  ldr x0, pc+72 (addr 0x0000ffff582fdb98)    ;; object: 0x225ed321 Cell for 0
0xffff582fdb54    20  ldur x0, [x0, #7]
0xffff582fdb58    24  cmp x0, #0x0 (0)
0xffff582fdb5c    28  b.ne #+0x14 (addr 0xffff582fdb70)
0xffff582fdb60    32  ldr x3, pc+64 (addr 0x0000ffff582fdba0)    ;; object: 0x225eda61 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>
0xffff582fdb64    36  ldur x3, [x3, #7]
0xffff582fdb68    40  tbz w3, #0, #+0x8 (addr 0xffff582fdb70)
0xffff582fdb6c    44  b #+0x14 (addr 0xffff582fdb80)
0xffff582fdb70    48  ldr x0, [jssp], #8
0xffff582fdb74    52  ldr x3, [jssp], #8
0xffff582fdb78    56  ldr x16, pc+48 (addr 0x0000ffff582fdba8)    ;; code: BUILTIN
0xffff582fdb7c    60  br x16
0xffff582fdb80    64  add jssp, jssp, #0x10 (16)
0xffff582fdb84    68  mov x1, x3
0xffff582fdb88    72  ldr x16, pc+40 (addr 0x0000ffff582fdbb0)    ;; code: HANDLER, LoadConstantStub, minor: 7
0xffff582fdb8c    76  br x16
0xffff582fdb90    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582fdb94    84  d63f03e0       constant
0xffff582fdb98    88  225ed321       constant
0xffff582fdb9c    92  00000000       constant
0xffff582fdba0    96  225eda61       constant
0xffff582fdba4   100  00000000       constant
0xffff582fdba8   104  582222e0       constant
0xffff582fdbac   108  0000ffff       constant
0xffff582fdbb0   112  5828b0a0       constant
0xffff582fdbb4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582fdb50  embedded object  (0x225ed321 Cell for 0)
0xffff582fdb60  embedded object  (0x225eda61 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>)
0xffff582fdb78  code target (BUILTIN)  (0xffff582222e0)
0xffff582fdb88  code target (HANDLER)  (0xffff5828b0a0)
0xffff582fdb90  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = timeEnd
compiler = unknown
Instructions (size = 184)
0xffff582fe1e0     0  sub csp, jssp, #0x8 (8)
0xffff582fe1e4     4  str x3, [jssp, #-8]!
0xffff582fe1e8     8  sub csp, jssp, #0x8 (8)
0xffff582fe1ec    12  str x4, [jssp, #-8]!
0xffff582fe1f0    16  ldr x3, pc+112 (addr 0x0000ffff582fe260)    ;; object: 0x225ed321 Cell for 0
0xffff582fe1f4    20  ldur x3, [x3, #7]
0xffff582fe1f8    24  cmp x3, #0x0 (0)
0xffff582fe1fc    28  b.ne #+0x44 (addr 0xffff582fe240)
0xffff582fe200    32  tbz w0, #0, #+0x40 (addr 0xffff582fe240)
0xffff582fe204    36  ldur x3, [x0, #-1]
0xffff582fe208    40  ldr x4, pc+96 (addr 0x0000ffff582fe268)    ;; object: 0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fe20c    44  ldur x4, [x4, #7]
0xffff582fe210    48  cmp x3, x4
0xffff582fe214    52  b.ne #+0x2c (addr 0xffff582fe240)
0xffff582fe218    56  ldr x5, pc+88 (addr 0x0000ffff582fe270)    ;; object: 0x225edd59 WeakCell for 0x32b42059 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fe21c    60  ldur x5, [x5, #7]
0xffff582fe220    64  tbz w5, #0, #+0x20 (addr 0xffff582fe240)
0xffff582fe224    68  ldursw x4, [x5, #15]
0xffff582fe228    72  tbnz w4, #23, #+0x18 (addr 0xffff582fe240)
0xffff582fe22c    76  ldr x4, [jssp], #8
0xffff582fe230    80  ldr x3, [jssp], #8
0xffff582fe234    84  ldr x2, pc+68 (addr 0x0000ffff582fe278)    ;; object: 0x225ccb51 <String[7]: timeEnd>
0xffff582fe238    88  ldr x16, pc+72 (addr 0x0000ffff582fe280)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff582fe23c    92  br x16
0xffff582fe240    96  ldr x2, pc+72 (addr 0x0000ffff582fe288)    ;; object: 0x225ccb51 <String[7]: timeEnd>
0xffff582fe244   100  ldr x4, [jssp], #8
0xffff582fe248   104  ldr x3, [jssp], #8
0xffff582fe24c   108  ldr x16, pc+68 (addr 0x0000ffff582fe290)    ;; code: BUILTIN
0xffff582fe250   112  br x16
0xffff582fe254   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582fe258   120  d63f03e0       constant
0xffff582fe25c   124  d503201f       constant
0xffff582fe260   128  225ed321       constant
0xffff582fe264   132  00000000       constant
0xffff582fe268   136  225ed2b1       constant
0xffff582fe26c   140  00000000       constant
0xffff582fe270   144  225edd59       constant
0xffff582fe274   148  00000000       constant
0xffff582fe278   152  225ccb51       constant
0xffff582fe27c   156  00000000       constant
0xffff582fe280   160  58238860       constant
0xffff582fe284   164  0000ffff       constant
0xffff582fe288   168  225ccb51       constant
0xffff582fe28c   172  00000000       constant
0xffff582fe290   176  58222420       constant
0xffff582fe294   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582fe1f0  embedded object  (0x225ed321 Cell for 0)
0xffff582fe208  embedded object  (0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fe218  embedded object  (0x225edd59 WeakCell for 0x32b42059 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fe234  embedded object  (0x225ccb51 <String[7]: timeEnd>)
0xffff582fe238  code target (HANDLER)  (0xffff58238860)
0xffff582fe240  embedded object  (0x225ccb51 <String[7]: timeEnd>)
0xffff582fe24c  code target (BUILTIN)  (0xffff58222420)
0xffff582fe254  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = trace
compiler = unknown
Instructions (size = 120)
0xffff582fe300     0  sub csp, jssp, #0x8 (8)
0xffff582fe304     4  str x3, [jssp, #-8]!
0xffff582fe308     8  sub csp, jssp, #0x8 (8)
0xffff582fe30c    12  str x0, [jssp, #-8]!
0xffff582fe310    16  ldr x0, pc+72 (addr 0x0000ffff582fe358)    ;; object: 0x225ed321 Cell for 0
0xffff582fe314    20  ldur x0, [x0, #7]
0xffff582fe318    24  cmp x0, #0x0 (0)
0xffff582fe31c    28  b.ne #+0x14 (addr 0xffff582fe330)
0xffff582fe320    32  ldr x3, pc+64 (addr 0x0000ffff582fe360)    ;; object: 0x225edd91 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>
0xffff582fe324    36  ldur x3, [x3, #7]
0xffff582fe328    40  tbz w3, #0, #+0x8 (addr 0xffff582fe330)
0xffff582fe32c    44  b #+0x14 (addr 0xffff582fe340)
0xffff582fe330    48  ldr x0, [jssp], #8
0xffff582fe334    52  ldr x3, [jssp], #8
0xffff582fe338    56  ldr x16, pc+48 (addr 0x0000ffff582fe368)    ;; code: BUILTIN
0xffff582fe33c    60  br x16
0xffff582fe340    64  add jssp, jssp, #0x10 (16)
0xffff582fe344    68  mov x1, x3
0xffff582fe348    72  ldr x16, pc+40 (addr 0x0000ffff582fe370)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff582fe34c    76  br x16
0xffff582fe350    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582fe354    84  d63f03e0       constant
0xffff582fe358    88  225ed321       constant
0xffff582fe35c    92  00000000       constant
0xffff582fe360    96  225edd91       constant
0xffff582fe364   100  00000000       constant
0xffff582fe368   104  582222e0       constant
0xffff582fe36c   108  0000ffff       constant
0xffff582fe370   112  5824c160       constant
0xffff582fe374   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582fe310  embedded object  (0x225ed321 Cell for 0)
0xffff582fe320  embedded object  (0x225edd91 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>)
0xffff582fe338  code target (BUILTIN)  (0xffff582222e0)
0xffff582fe348  code target (HANDLER)  (0xffff5824c160)
0xffff582fe350  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = trace
compiler = unknown
Instructions (size = 184)
0xffff582fe800     0  sub csp, jssp, #0x8 (8)
0xffff582fe804     4  str x3, [jssp, #-8]!
0xffff582fe808     8  sub csp, jssp, #0x8 (8)
0xffff582fe80c    12  str x4, [jssp, #-8]!
0xffff582fe810    16  ldr x3, pc+112 (addr 0x0000ffff582fe880)    ;; object: 0x225ed321 Cell for 0
0xffff582fe814    20  ldur x3, [x3, #7]
0xffff582fe818    24  cmp x3, #0x0 (0)
0xffff582fe81c    28  b.ne #+0x44 (addr 0xffff582fe860)
0xffff582fe820    32  tbz w0, #0, #+0x40 (addr 0xffff582fe860)
0xffff582fe824    36  ldur x3, [x0, #-1]
0xffff582fe828    40  ldr x4, pc+96 (addr 0x0000ffff582fe888)    ;; object: 0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fe82c    44  ldur x4, [x4, #7]
0xffff582fe830    48  cmp x3, x4
0xffff582fe834    52  b.ne #+0x2c (addr 0xffff582fe860)
0xffff582fe838    56  ldr x5, pc+88 (addr 0x0000ffff582fe890)    ;; object: 0x225edfd9 WeakCell for 0x32b420b1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fe83c    60  ldur x5, [x5, #7]
0xffff582fe840    64  tbz w5, #0, #+0x20 (addr 0xffff582fe860)
0xffff582fe844    68  ldursw x4, [x5, #15]
0xffff582fe848    72  tbnz w4, #23, #+0x18 (addr 0xffff582fe860)
0xffff582fe84c    76  ldr x4, [jssp], #8
0xffff582fe850    80  ldr x3, [jssp], #8
0xffff582fe854    84  ldr x2, pc+68 (addr 0x0000ffff582fe898)    ;; object: 0x39cdaea9 <String[5]: trace>
0xffff582fe858    88  ldr x16, pc+72 (addr 0x0000ffff582fe8a0)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff582fe85c    92  br x16
0xffff582fe860    96  ldr x2, pc+72 (addr 0x0000ffff582fe8a8)    ;; object: 0x39cdaea9 <String[5]: trace>
0xffff582fe864   100  ldr x4, [jssp], #8
0xffff582fe868   104  ldr x3, [jssp], #8
0xffff582fe86c   108  ldr x16, pc+68 (addr 0x0000ffff582fe8b0)    ;; code: BUILTIN
0xffff582fe870   112  br x16
0xffff582fe874   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582fe878   120  d63f03e0       constant
0xffff582fe87c   124  d503201f       constant
0xffff582fe880   128  225ed321       constant
0xffff582fe884   132  00000000       constant
0xffff582fe888   136  225ed2b1       constant
0xffff582fe88c   140  00000000       constant
0xffff582fe890   144  225edfd9       constant
0xffff582fe894   148  00000000       constant
0xffff582fe898   152  39cdaea9       constant
0xffff582fe89c   156  00000000       constant
0xffff582fe8a0   160  58299940       constant
0xffff582fe8a4   164  0000ffff       constant
0xffff582fe8a8   168  39cdaea9       constant
0xffff582fe8ac   172  00000000       constant
0xffff582fe8b0   176  58222420       constant
0xffff582fe8b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582fe810  embedded object  (0x225ed321 Cell for 0)
0xffff582fe828  embedded object  (0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fe838  embedded object  (0x225edfd9 WeakCell for 0x32b420b1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fe854  embedded object  (0x39cdaea9 <String[5]: trace>)
0xffff582fe858  code target (HANDLER)  (0xffff58299940)
0xffff582fe860  embedded object  (0x39cdaea9 <String[5]: trace>)
0xffff582fe86c  code target (BUILTIN)  (0xffff58222420)
0xffff582fe874  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582fe920     0  ldur x0, [x1, #-1]
0xffff582fe924     4  ldur x0, [x0, #47]
0xffff582fe928     8  movz x16, #0x107
0xffff582fe92c    12  ldr x0, [x0, x16]
0xffff582fe930    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff582fe920     0  ldur x0, [x1, #-1]
0xffff582fe924     4  ldur x0, [x0, #47]
0xffff582fe928     8  movz x16, #0x107
0xffff582fe92c    12  ldr x0, [x0, x16]
0xffff582fe930    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = assert
compiler = unknown
Instructions (size = 120)
0xffff582fe9a0     0  sub csp, jssp, #0x8 (8)
0xffff582fe9a4     4  str x3, [jssp, #-8]!
0xffff582fe9a8     8  sub csp, jssp, #0x8 (8)
0xffff582fe9ac    12  str x0, [jssp, #-8]!
0xffff582fe9b0    16  ldr x0, pc+72 (addr 0x0000ffff582fe9f8)    ;; object: 0x225ed321 Cell for 0
0xffff582fe9b4    20  ldur x0, [x0, #7]
0xffff582fe9b8    24  cmp x0, #0x0 (0)
0xffff582fe9bc    28  b.ne #+0x14 (addr 0xffff582fe9d0)
0xffff582fe9c0    32  ldr x3, pc+64 (addr 0x0000ffff582fea00)    ;; object: 0x225ee011 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>
0xffff582fe9c4    36  ldur x3, [x3, #7]
0xffff582fe9c8    40  tbz w3, #0, #+0x8 (addr 0xffff582fe9d0)
0xffff582fe9cc    44  b #+0x14 (addr 0xffff582fe9e0)
0xffff582fe9d0    48  ldr x0, [jssp], #8
0xffff582fe9d4    52  ldr x3, [jssp], #8
0xffff582fe9d8    56  ldr x16, pc+48 (addr 0x0000ffff582fea08)    ;; code: BUILTIN
0xffff582fe9dc    60  br x16
0xffff582fe9e0    64  add jssp, jssp, #0x10 (16)
0xffff582fe9e4    68  mov x1, x3
0xffff582fe9e8    72  ldr x16, pc+40 (addr 0x0000ffff582fea10)    ;; code: HANDLER, LoadConstantStub, minor: 9
0xffff582fe9ec    76  br x16
0xffff582fe9f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff582fe9f4    84  d63f03e0       constant
0xffff582fe9f8    88  225ed321       constant
0xffff582fe9fc    92  00000000       constant
0xffff582fea00    96  225ee011       constant
0xffff582fea04   100  00000000       constant
0xffff582fea08   104  582222e0       constant
0xffff582fea0c   108  0000ffff       constant
0xffff582fea10   112  582fe920       constant
0xffff582fea14   116  0000ffff       constant


RelocInfo (size = 10)
0xffff582fe9b0  embedded object  (0x225ed321 Cell for 0)
0xffff582fe9c0  embedded object  (0x225ee011 WeakCell for 0x4f94f811 <an Object with map 0x32b36e49>)
0xffff582fe9d8  code target (BUILTIN)  (0xffff582222e0)
0xffff582fe9e8  code target (HANDLER)  (0xffff582fe920)
0xffff582fe9f0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = assert
compiler = unknown
Instructions (size = 184)
0xffff582fedc0     0  sub csp, jssp, #0x8 (8)
0xffff582fedc4     4  str x3, [jssp, #-8]!
0xffff582fedc8     8  sub csp, jssp, #0x8 (8)
0xffff582fedcc    12  str x4, [jssp, #-8]!
0xffff582fedd0    16  ldr x3, pc+112 (addr 0x0000ffff582fee40)    ;; object: 0x225ed321 Cell for 0
0xffff582fedd4    20  ldur x3, [x3, #7]
0xffff582fedd8    24  cmp x3, #0x0 (0)
0xffff582feddc    28  b.ne #+0x44 (addr 0xffff582fee20)
0xffff582fede0    32  tbz w0, #0, #+0x40 (addr 0xffff582fee20)
0xffff582fede4    36  ldur x3, [x0, #-1]
0xffff582fede8    40  ldr x4, pc+96 (addr 0x0000ffff582fee48)    ;; object: 0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fedec    44  ldur x4, [x4, #7]
0xffff582fedf0    48  cmp x3, x4
0xffff582fedf4    52  b.ne #+0x2c (addr 0xffff582fee20)
0xffff582fedf8    56  ldr x5, pc+88 (addr 0x0000ffff582fee50)    ;; object: 0x225ee1d9 WeakCell for 0x32b42109 <Map(FAST_HOLEY_ELEMENTS)>
0xffff582fedfc    60  ldur x5, [x5, #7]
0xffff582fee00    64  tbz w5, #0, #+0x20 (addr 0xffff582fee20)
0xffff582fee04    68  ldursw x4, [x5, #15]
0xffff582fee08    72  tbnz w4, #23, #+0x18 (addr 0xffff582fee20)
0xffff582fee0c    76  ldr x4, [jssp], #8
0xffff582fee10    80  ldr x3, [jssp], #8
0xffff582fee14    84  ldr x2, pc+68 (addr 0x0000ffff582fee58)    ;; object: 0x39cbdc41 <String[6]: assert>
0xffff582fee18    88  ldr x16, pc+72 (addr 0x0000ffff582fee60)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff582fee1c    92  br x16
0xffff582fee20    96  ldr x2, pc+72 (addr 0x0000ffff582fee68)    ;; object: 0x39cbdc41 <String[6]: assert>
0xffff582fee24   100  ldr x4, [jssp], #8
0xffff582fee28   104  ldr x3, [jssp], #8
0xffff582fee2c   108  ldr x16, pc+68 (addr 0x0000ffff582fee70)    ;; code: BUILTIN
0xffff582fee30   112  br x16
0xffff582fee34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff582fee38   120  d63f03e0       constant
0xffff582fee3c   124  d503201f       constant
0xffff582fee40   128  225ed321       constant
0xffff582fee44   132  00000000       constant
0xffff582fee48   136  225ed2b1       constant
0xffff582fee4c   140  00000000       constant
0xffff582fee50   144  225ee1d9       constant
0xffff582fee54   148  00000000       constant
0xffff582fee58   152  39cbdc41       constant
0xffff582fee5c   156  00000000       constant
0xffff582fee60   160  5829a100       constant
0xffff582fee64   164  0000ffff       constant
0xffff582fee68   168  39cbdc41       constant
0xffff582fee6c   172  00000000       constant
0xffff582fee70   176  58222420       constant
0xffff582fee74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff582fedd0  embedded object  (0x225ed321 Cell for 0)
0xffff582fede8  embedded object  (0x225ed2b1 WeakCell for 0x32b0a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fedf8  embedded object  (0x225ee1d9 WeakCell for 0x32b42109 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff582fee14  embedded object  (0x39cbdc41 <String[6]: assert>)
0xffff582fee18  code target (HANDLER)  (0xffff5829a100)
0xffff582fee20  embedded object  (0x39cbdc41 <String[6]: assert>)
0xffff582fee2c  code target (BUILTIN)  (0xffff58222420)
0xffff582fee34  constant pool (size 68)

kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393223
name = CallICStub(args(7), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff583097a0     0  add x4, x2, x3, asr #29
0xffff583097a4     4  ldur x4, [x4, #15]
0xffff583097a8     8  ldur x5, [x4, #7]
0xffff583097ac    12  cmp x5, x1
0xffff583097b0    16  b.ne #+0x2c (addr 0xffff583097dc)
0xffff583097b4    20  tbz w1, #0, #+0x28 (addr 0xffff583097dc)
0xffff583097b8    24  add x2, x2, x3, asr #29
0xffff583097bc    28  add x2, x2, #0x18 (24)
0xffff583097c0    32  ldur x3, [x2, #-1]
0xffff583097c4    36  movz x16, #0x200000000
0xffff583097c8    40  add x3, x3, x16
0xffff583097cc    44  stur x3, [x2, #-1]
0xffff583097d0    48  movz x0, #0x7
0xffff583097d4    52  ldr x16, pc+372 (addr 0x0000ffff58309948)    ;; code: BUILTIN
0xffff583097d8    56  br x16
0xffff583097dc    60  ldr x16, [x26, #2400]
0xffff583097e0    64  cmp x4, x16
0xffff583097e4    68  b.eq #+0x78 (addr 0xffff5830985c)
0xffff583097e8    72  ldur x5, [x4, #-1]
0xffff583097ec    76  ldr x16, [x26, #2736]
0xffff583097f0    80  cmp x5, x16
0xffff583097f4    84  b.ne #+0x40 (addr 0xffff58309834)
0xffff583097f8    88  ldur x5, [cp, #39]
0xffff583097fc    92  ldur x5, [x5, #95]
0xffff58309800    96  cmp x1, x5
0xffff58309804   100  b.ne #+0xec (addr 0xffff583098f0)
0xffff58309808   104  movz x0, #0x7
0xffff5830980c   108  add x2, x2, x3, asr #29
0xffff58309810   112  add x2, x2, #0x18 (24)
0xffff58309814   116  ldur x3, [x2, #-1]
0xffff58309818   120  movz x16, #0x200000000
0xffff5830981c   124  add x3, x3, x16
0xffff58309820   128  stur x3, [x2, #-1]
0xffff58309824   132  mov x2, x4
0xffff58309828   136  mov x3, x1
0xffff5830982c   140  ldr x16, pc+292 (addr 0x0000ffff58309950)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff58309830   144  br x16
0xffff58309834   148  ldr x16, [x26, #2568]
0xffff58309838   152  cmp x4, x16
0xffff5830983c   156  b.eq #+0xb4 (addr 0xffff583098f0)
0xffff58309840   160  ldur x5, [x4, #-1]
0xffff58309844   164  ldrb w5, [x5, #11]
0xffff58309848   168  cmp x5, #0xc9 (201)
0xffff5830984c   172  b.ne #+0xa4 (addr 0xffff583098f0)
0xffff58309850   176  add x4, x2, x3, asr #29
0xffff58309854   180  ldr x5, [x26, #2400]
0xffff58309858   184  stur x5, [x4, #15]
0xffff5830985c   188  movz x0, #0x7
0xffff58309860   192  ldr x16, pc+248 (addr 0x0000ffff58309958)    ;; code: BUILTIN
0xffff58309864   196  br x16
0xffff58309868   200  tbz w1, #0, #+0x88 (addr 0xffff583098f0)
0xffff5830986c   204  ldur x5, [x1, #-1]
0xffff58309870   208  ldrb w5, [x5, #11]
0xffff58309874   212  cmp x5, #0xc9 (201)
0xffff58309878   216  b.ne #+0x78 (addr 0xffff583098f0)
0xffff5830987c   220  ldur x5, [cp, #39]
0xffff58309880   224  ldur x5, [x5, #95]
0xffff58309884   228  cmp x1, x5
0xffff58309888   232  b.eq #+0x68 (addr 0xffff583098f0)
0xffff5830988c   236  ldur x4, [x1, #39]
0xffff58309890   240  ldur x4, [x4, #39]
0xffff58309894   244  ldur x5, [cp, #39]
0xffff58309898   248  cmp x4, x5
0xffff5830989c   252  b.ne #+0x54 (addr 0xffff583098f0)
0xffff583098a0   256  movz x5, #0x200000000
0xffff583098a4   260  adds x4, x2, x3, asr #29
0xffff583098a8   264  stur x5, [x4, #23]
0xffff583098ac   268  movz x16, #0xc00000000
0xffff583098b0   272  sub csp, jssp, #0x10 (16)
0xffff583098b4   276  stp fp, lr, [jssp, #-16]!
0xffff583098b8   280  sub csp, jssp, #0x10 (16)
0xffff583098bc   284  str x16, [jssp, #-8]!
0xffff583098c0   288  ldr x17, pc+160 (addr 0x0000ffff58309960)    ;; object: 0xffff58309741 <Code: CALL_IC>
0xffff583098c4   292  sub csp, jssp, #0x10 (16)
0xffff583098c8   296  str x17, [jssp, #-8]!
0xffff583098cc   300  add fp, jssp, #0x10 (16)
0xffff583098d0   304  sub csp, jssp, #0x8 (8)
0xffff583098d4   308  str x1, [jssp, #-8]!
0xffff583098d8   312  ldr x16, pc+144 (addr 0x0000ffff58309968)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff583098dc   316  blr x16
0xffff583098e0   320  ldr x1, [jssp], #8
0xffff583098e4   324  mov jssp, fp
0xffff583098e8   328  ldp fp, lr, [jssp], #16
0xffff583098ec   332  b #-0x11c (addr 0xffff583097d0)
0xffff583098f0   336  movz x16, #0xc00000000
0xffff583098f4   340  sub csp, jssp, #0x10 (16)
0xffff583098f8   344  stp fp, lr, [jssp, #-16]!
0xffff583098fc   348  sub csp, jssp, #0x10 (16)
0xffff58309900   352  str x16, [jssp, #-8]!
0xffff58309904   356  ldr x17, pc+108 (addr 0x0000ffff58309970)    ;; object: 0xffff58309741 <Code: CALL_IC>
0xffff58309908   360  sub csp, jssp, #0x10 (16)
0xffff5830990c   364  str x17, [jssp, #-8]!
0xffff58309910   368  add fp, jssp, #0x10 (16)
0xffff58309914   372  sub csp, jssp, #0x18 (24)
0xffff58309918   376  stp x3, x2, [jssp, #-24]!
0xffff5830991c   380  str x1, [jssp, #16]
0xffff58309920   384  movz x0, #0x3
0xffff58309924   388  ldr x1, pc+84 (addr 0x0000ffff58309978)    ;; external reference (Runtime::CallIC_Miss)
0xffff58309928   392  ldr x16, pc+88 (addr 0x0000ffff58309980)    ;; code: STUB, CEntryStub, minor: 4
0xffff5830992c   396  blr x16
0xffff58309930   400  mov x1, x0
0xffff58309934   404  mov jssp, fp
0xffff58309938   408  ldp fp, lr, [jssp], #16
0xffff5830993c   412  b #-0xe0 (addr 0xffff5830985c)
0xffff58309940   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff58309944   420  d63f03e0       constant
0xffff58309948   424  5821e820       constant
0xffff5830994c   428  0000ffff       constant
0xffff58309950   432  58233b00       constant
0xffff58309954   436  0000ffff       constant
0xffff58309958   440  5821f820       constant
0xffff5830995c   444  0000ffff       constant
0xffff58309960   448  58309741       constant
0xffff58309964   452  0000ffff       constant
0xffff58309968   456  5820ddc0       constant
0xffff5830996c   460  0000ffff       constant
0xffff58309970   464  58309741       constant
0xffff58309974   468  0000ffff       constant
0xffff58309978   472  00c86928       constant
0xffff5830997c   476  00000000       constant
0xffff58309980   480  58206060       constant
0xffff58309984   484  0000ffff       constant


RelocInfo (size = 19)
0xffff583097d4  code target (BUILTIN)  (0xffff5821e820)
0xffff5830982c  code target (STUB)  (0xffff58233b00)
0xffff58309860  code target (BUILTIN)  (0xffff5821f820)
0xffff583098c0  embedded object  (0xffff58309741 <Code: CALL_IC>)
0xffff583098d8  code target (STUB)  (0xffff5820ddc0)
0xffff58309904  embedded object  (0xffff58309741 <Code: CALL_IC>)
0xffff58309924  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff58309928  code target (STUB)  (0xffff58206060)
0xffff58309940  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393223
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff58309a00     0  ldur x2, [fp, #-16]
0xffff58309a04     4  ldur x2, [x2, #31]
0xffff58309a08     8  ldur x2, [x2, #87]
0xffff58309a0c    12  ldr x16, pc+20 (addr 0x0000ffff58309a20)    ;; code: CALL_IC, GENERIC
0xffff58309a10    16  br x16
0xffff58309a14    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff58309a18    24  d63f03e0       constant
0xffff58309a1c    28  d503201f       constant
0xffff58309a20    32  583097a0       constant
0xffff58309a24    36  0000ffff       constant


RelocInfo (size = 7)
0xffff58309a0c  code target (CALL_IC)  (0xffff583097a0)
0xffff58309a14  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = isFinite
compiler = unknown
Instructions (size = 120)
0xffff5830d2e0     0  sub csp, jssp, #0x8 (8)
0xffff5830d2e4     4  str x3, [jssp, #-8]!
0xffff5830d2e8     8  sub csp, jssp, #0x8 (8)
0xffff5830d2ec    12  str x0, [jssp, #-8]!
0xffff5830d2f0    16  ldr x0, pc+80 (addr 0x0000ffff5830d340)    ;; object: 0x39cc5d51 Cell for 0
0xffff5830d2f4    20  ldur x0, [x0, #7]
0xffff5830d2f8    24  cmp x0, #0x0 (0)
0xffff5830d2fc    28  b.ne #+0x2c (addr 0xffff5830d328)
0xffff5830d300    32  ldr x0, pc+72 (addr 0x0000ffff5830d348)    ;; object: 0x225f08f9 WeakCell for 0x39c584e1 PropertyCell for 0x22568b09 <JS Function isFinite (SharedFunctionInfo 0x39c539f1)>
0xffff5830d304    36  ldur x0, [x0, #7]
0xffff5830d308    40  tbz w0, #0, #+0x20 (addr 0xffff5830d328)
0xffff5830d30c    44  ldur x0, [x0, #15]
0xffff5830d310    48  ldr x16, [x26, #88]
0xffff5830d314    52  cmp x0, x16
0xffff5830d318    56  b.eq #+0x10 (addr 0xffff5830d328)
0xffff5830d31c    60  add jssp, jssp, #0x10 (16)
0xffff5830d320    64  ret
0xffff5830d324    68  b #+0x14 (addr 0xffff5830d338)
0xffff5830d328    72  ldr x0, [jssp], #8
0xffff5830d32c    76  ldr x3, [jssp], #8
0xffff5830d330    80  ldr x16, pc+32 (addr 0x0000ffff5830d350)    ;; code: BUILTIN
0xffff5830d334    84  br x16
0xffff5830d338    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff5830d33c    92  d63f03e0       constant
0xffff5830d340    96  39cc5d51       constant
0xffff5830d344   100  00000000       constant
0xffff5830d348   104  225f08f9       constant
0xffff5830d34c   108  00000000       constant
0xffff5830d350   112  582222e0       constant
0xffff5830d354   116  0000ffff       constant


RelocInfo (size = 9)
0xffff5830d2f0  embedded object  (0x39cc5d51 Cell for 0)
0xffff5830d300  embedded object  (0x225f08f9 WeakCell for 0x39c584e1 PropertyCell for 0x22568b09 <JS Function isFinite (SharedFunctionInfo 0x39c539f1)>)
0xffff5830d330  code target (BUILTIN)  (0xffff582222e0)
0xffff5830d338  constant pool (size 32)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 664)
0xffff5830d3c0     0  orr x16, x1, x0
0xffff5830d3c4     4  tbnz w16, #0, #+0x10 (addr 0xffff5830d3d4)
0xffff5830d3c8     8  asr x1, x1, #32
0xffff5830d3cc    12  sub x0, x1, x0, asr #32
0xffff5830d3d0    16  ret
0xffff5830d3d4    20  cmp x0, x1
0xffff5830d3d8    24  b.ne #+0x30 (addr 0xffff5830d408)
0xffff5830d3dc    28  ldur x16, [x0, #-1]
0xffff5830d3e0    32  ldr x17, [x26, #120]
0xffff5830d3e4    36  cmp x16, x17
0xffff5830d3e8    40  b.eq #+0xc (addr 0xffff5830d3f4)
0xffff5830d3ec    44  movz x0, #0x0
0xffff5830d3f0    48  ret
0xffff5830d3f4    52  ldur d0, [x0, #7]
0xffff5830d3f8    56  fcmp d0, d0
0xffff5830d3fc    60  b.vc #-0x10 (addr 0xffff5830d3ec)
0xffff5830d400    64  movn x0, #0x0
0xffff5830d404    68  ret
0xffff5830d408    72  and x16, x1, x0
0xffff5830d40c    76  tbnz w16, #0, #+0x58 (addr 0xffff5830d464)
0xffff5830d410    80  tbz w0, #0, #+0x20 (addr 0xffff5830d430)
0xffff5830d414    84  ldur x16, [x0, #-1]
0xffff5830d418    88  ldr x17, [x26, #120]
0xffff5830d41c    92  cmp x16, x17
0xffff5830d420    96  b.ne #+0x148 (addr 0xffff5830d568)
0xffff5830d424   100  ldur d0, [x0, #7]
0xffff5830d428   104  scvtf d1, x1, #32
0xffff5830d42c   108  b #+0x1c (addr 0xffff5830d448)
0xffff5830d430   112  ldur x16, [x1, #-1]
0xffff5830d434   116  ldr x17, [x26, #120]
0xffff5830d438   120  cmp x16, x17
0xffff5830d43c   124  b.ne #+0x12c (addr 0xffff5830d568)
0xffff5830d440   128  ldur d1, [x1, #7]
0xffff5830d444   132  scvtf d0, x0, #32
0xffff5830d448   136  fcmp d1, d0
0xffff5830d44c   140  b.vs #+0x10 (addr 0xffff5830d45c)
0xffff5830d450   144  cset x0, gt
0xffff5830d454   148  csinv x0, x0, xzr, ge
0xffff5830d458   152  ret
0xffff5830d45c   156  movn x0, #0x0
0xffff5830d460   160  ret
0xffff5830d464   164  ldur x10, [x0, #-1]
0xffff5830d468   168  ldur x12, [x1, #-1]
0xffff5830d46c   172  ldrb w11, [x10, #11]
0xffff5830d470   176  ldrb w13, [x12, #11]
0xffff5830d474   180  cmp x11, #0x81 (129)
0xffff5830d478   184  b.ne #+0x18 (addr 0xffff5830d490)
0xffff5830d47c   188  cmp x12, x10
0xffff5830d480   192  b.ne #+0x74 (addr 0xffff5830d4f4)
0xffff5830d484   196  ldur d1, [x1, #7]
0xffff5830d488   200  ldur d0, [x0, #7]
0xffff5830d48c   204  b #-0x44 (addr 0xffff5830d448)
0xffff5830d490   208  tbnz w11, #7, #+0x14 (addr 0xffff5830d4a4)
0xffff5830d494   212  tbnz w11, #6, #+0x60 (addr 0xffff5830d4f4)
0xffff5830d498   216  tbnz w13, #7, #+0xd0 (addr 0xffff5830d568)
0xffff5830d49c   220  tbnz w13, #6, #+0x58 (addr 0xffff5830d4f4)
0xffff5830d4a0   224  ret
0xffff5830d4a4   228  ldrb w11, [x10, #12]
0xffff5830d4a8   232  ldrb w13, [x12, #12]
0xffff5830d4ac   236  tbnz w11, #4, #+0x24 (addr 0xffff5830d4d0)
0xffff5830d4b0   240  tbnz w13, #4, #+0x1c (addr 0xffff5830d4cc)
0xffff5830d4b4   244  ldrb w11, [x10, #11]
0xffff5830d4b8   248  cmp x11, #0xb1 (177)
0xffff5830d4bc   252  b.lt #+0xac (addr 0xffff5830d568)
0xffff5830d4c0   256  ldrb w13, [x12, #11]
0xffff5830d4c4   260  cmp x13, #0xb1 (177)
0xffff5830d4c8   264  b.lt #+0xa0 (addr 0xffff5830d568)
0xffff5830d4cc   268  ret
0xffff5830d4d0   272  tbz w13, #4, #-0x4 (addr 0xffff5830d4cc)
0xffff5830d4d4   276  ldrb w11, [x10, #11]
0xffff5830d4d8   280  cmp x11, #0x83 (131)
0xffff5830d4dc   284  b.eq #+0x10 (addr 0xffff5830d4ec)
0xffff5830d4e0   288  ldrb w13, [x12, #11]
0xffff5830d4e4   292  cmp x13, #0x83 (131)
0xffff5830d4e8   296  b.ne #-0x1c (addr 0xffff5830d4cc)
0xffff5830d4ec   300  movz x0, #0x0
0xffff5830d4f0   304  ret
0xffff5830d4f4   308  movz x16, #0x87
0xffff5830d4f8   312  and x14, x13, x16
0xffff5830d4fc   316  movz x16, #0x87
0xffff5830d500   320  and x15, x11, x16
0xffff5830d504   324  cmp x14, #0x4 (4)
0xffff5830d508   328  ccmp x15, #4, #nzcv, eq
0xffff5830d50c   332  b.ne #+0x5c (addr 0xffff5830d568)
0xffff5830d510   336  ldur x10, [x1, #15]
0xffff5830d514   340  ldur x11, [x0, #15]
0xffff5830d518   344  cmp x10, x11
0xffff5830d51c   348  b.eq #+0xc (addr 0xffff5830d528)
0xffff5830d520   352  movz x0, #0x100000000
0xffff5830d524   356  ret
0xffff5830d528   360  cbnz x10, #+0xc (addr 0xffff5830d534)
0xffff5830d52c   364  movz x0, #0x0
0xffff5830d530   368  ret
0xffff5830d534   372  asr x10, x10, #32
0xffff5830d538   376  add x11, x10, #0x17 (23)
0xffff5830d53c   380  add x1, x1, x11
0xffff5830d540   384  add x0, x0, x11
0xffff5830d544   388  neg x10, x10
0xffff5830d548   392  ldrb w11, [x1, x10]
0xffff5830d54c   396  ldrb w12, [x0, x10]
0xffff5830d550   400  cmp x11, x12
0xffff5830d554   404  b.ne #-0x34 (addr 0xffff5830d520)
0xffff5830d558   408  add x10, x10, #0x1 (1)
0xffff5830d55c   412  cbnz x10, #-0x14 (addr 0xffff5830d548)
0xffff5830d560   416  movz x0, #0x0
0xffff5830d564   420  ret
0xffff5830d568   424  movz x16, #0xc00000000
0xffff5830d56c   428  sub csp, jssp, #0x10 (16)
0xffff5830d570   432  stp fp, lr, [jssp, #-16]!
0xffff5830d574   436  sub csp, jssp, #0x10 (16)
0xffff5830d578   440  str x16, [jssp, #-8]!
0xffff5830d57c   444  ldr x17, pc+172 (addr 0x0000ffff5830d628)    ;; object: 0xffff5830d361 <Code: COMPARE_IC>
0xffff5830d580   448  sub csp, jssp, #0x10 (16)
0xffff5830d584   452  str x17, [jssp, #-8]!
0xffff5830d588   456  add fp, jssp, #0x10 (16)
0xffff5830d58c   460  sub csp, jssp, #0x10 (16)
0xffff5830d590   464  stp x0, x1, [jssp, #-16]!
0xffff5830d594   468  movz x0, #0x2
0xffff5830d598   472  ldr x1, pc+152 (addr 0x0000ffff5830d630)    ;; external reference (Runtime::Equal)
0xffff5830d59c   476  ldr x16, pc+156 (addr 0x0000ffff5830d638)    ;; code: STUB, CEntryStub, minor: 4
0xffff5830d5a0   480  blr x16
0xffff5830d5a4   484  mov jssp, fp
0xffff5830d5a8   488  ldp fp, lr, [jssp], #16
0xffff5830d5ac   492  ldr x1, [x26, #64]
0xffff5830d5b0   496  sub x0, x0, x1
0xffff5830d5b4   500  ret
0xffff5830d5b8   504  movz x16, #0xc00000000
0xffff5830d5bc   508  sub csp, jssp, #0x10 (16)
0xffff5830d5c0   512  stp fp, lr, [jssp, #-16]!
0xffff5830d5c4   516  sub csp, jssp, #0x10 (16)
0xffff5830d5c8   520  str x16, [jssp, #-8]!
0xffff5830d5cc   524  ldr x17, pc+116 (addr 0x0000ffff5830d640)    ;; object: 0xffff5830d361 <Code: COMPARE_IC>
0xffff5830d5d0   528  sub csp, jssp, #0x10 (16)
0xffff5830d5d4   532  str x17, [jssp, #-8]!
0xffff5830d5d8   536  add fp, jssp, #0x10 (16)
0xffff5830d5dc   540  sub csp, jssp, #0x18 (24)
0xffff5830d5e0   544  stp lr, x0, [jssp, #-24]!
0xffff5830d5e4   548  str x1, [jssp, #16]
0xffff5830d5e8   552  movz x10, #0x2d00000000
0xffff5830d5ec   556  sub csp, jssp, #0x18 (24)
0xffff5830d5f0   560  stp x10, x0, [jssp, #-24]!
0xffff5830d5f4   564  str x1, [jssp, #16]
0xffff5830d5f8   568  movz x0, #0x3
0xffff5830d5fc   572  ldr x1, pc+76 (addr 0x0000ffff5830d648)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5830d600   576  ldr x16, pc+80 (addr 0x0000ffff5830d650)    ;; code: STUB, CEntryStub, minor: 4
0xffff5830d604   580  blr x16
0xffff5830d608   584  add x11, x0, #0x5f (95)
0xffff5830d60c   588  ldr x1, [jssp, #16]
0xffff5830d610   592  ldp lr, x0, [jssp], #24
0xffff5830d614   596  mov jssp, fp
0xffff5830d618   600  ldp fp, lr, [jssp], #16
0xffff5830d61c   604  br x11
0xffff5830d620   608  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff5830d624   612  d63f03e0       constant
0xffff5830d628   616  5830d361       constant
0xffff5830d62c   620  0000ffff       constant
0xffff5830d630   624  00e503b8       constant
0xffff5830d634   628  00000000       constant
0xffff5830d638   632  58206060       constant
0xffff5830d63c   636  0000ffff       constant
0xffff5830d640   640  5830d361       constant
0xffff5830d644   644  0000ffff       constant
0xffff5830d648   648  00c8a980       constant
0xffff5830d64c   652  00000000       constant
0xffff5830d650   656  58206060       constant
0xffff5830d654   660  0000ffff       constant


RelocInfo (size = 16)
0xffff5830d57c  embedded object  (0xffff5830d361 <Code: COMPARE_IC>)
0xffff5830d598  external reference (Runtime::Equal)  (0xe503b8)
0xffff5830d59c  code target (STUB)  (0xffff58206060)
0xffff5830d5cc  embedded object  (0xffff5830d361 <Code: COMPARE_IC>)
0xffff5830d5fc  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5830d600  code target (STUB)  (0xffff58206060)
0xffff5830d620  constant pool (size 56)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*NUMBER -> NUMBER
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 232)
0xffff5830d6c0     0  scvtf d0, x0, #32
0xffff5830d6c4     4  scvtf d1, x1, #32
0xffff5830d6c8     8  tbz w0, #0, #+0x18 (addr 0xffff5830d6e0)
0xffff5830d6cc    12  ldur x16, [x0, #-1]
0xffff5830d6d0    16  ldr x17, [x26, #120]
0xffff5830d6d4    20  cmp x16, x17
0xffff5830d6d8    24  b.ne #+0x3c (addr 0xffff5830d714)
0xffff5830d6dc    28  ldur d0, [x0, #7]
0xffff5830d6e0    32  tbz w1, #0, #+0x18 (addr 0xffff5830d6f8)
0xffff5830d6e4    36  ldur x16, [x1, #-1]
0xffff5830d6e8    40  ldr x17, [x26, #120]
0xffff5830d6ec    44  cmp x16, x17
0xffff5830d6f0    48  b.ne #+0x24 (addr 0xffff5830d714)
0xffff5830d6f4    52  ldur d1, [x1, #7]
0xffff5830d6f8    56  fcmp d1, d0
0xffff5830d6fc    60  b.vs #+0x10 (addr 0xffff5830d70c)
0xffff5830d700    64  cset x0, gt
0xffff5830d704    68  csinv x0, x0, xzr, ge
0xffff5830d708    72  ret
0xffff5830d70c    76  ldr x16, pc+124 (addr 0x0000ffff5830d788)    ;; code: COMPARE_IC, GENERIC
0xffff5830d710    80  br x16
0xffff5830d714    84  movz x16, #0xc00000000
0xffff5830d718    88  sub csp, jssp, #0x10 (16)
0xffff5830d71c    92  stp fp, lr, [jssp, #-16]!
0xffff5830d720    96  sub csp, jssp, #0x10 (16)
0xffff5830d724   100  str x16, [jssp, #-8]!
0xffff5830d728   104  ldr x17, pc+104 (addr 0x0000ffff5830d790)    ;; object: 0xffff5830d661 <Code: COMPARE_IC>
0xffff5830d72c   108  sub csp, jssp, #0x10 (16)
0xffff5830d730   112  str x17, [jssp, #-8]!
0xffff5830d734   116  add fp, jssp, #0x10 (16)
0xffff5830d738   120  sub csp, jssp, #0x18 (24)
0xffff5830d73c   124  stp lr, x0, [jssp, #-24]!
0xffff5830d740   128  str x1, [jssp, #16]
0xffff5830d744   132  movz x10, #0x2d00000000
0xffff5830d748   136  sub csp, jssp, #0x18 (24)
0xffff5830d74c   140  stp x10, x0, [jssp, #-24]!
0xffff5830d750   144  str x1, [jssp, #16]
0xffff5830d754   148  movz x0, #0x3
0xffff5830d758   152  ldr x1, pc+64 (addr 0x0000ffff5830d798)    ;; external reference (Runtime::CompareIC_Miss)
0xffff5830d75c   156  ldr x16, pc+68 (addr 0x0000ffff5830d7a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff5830d760   160  blr x16
0xffff5830d764   164  add x11, x0, #0x5f (95)
0xffff5830d768   168  ldr x1, [jssp, #16]
0xffff5830d76c   172  ldp lr, x0, [jssp], #24
0xffff5830d770   176  mov jssp, fp
0xffff5830d774   180  ldp fp, lr, [jssp], #16
0xffff5830d778   184  br x11
0xffff5830d77c   188  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff5830d780   192  d63f03e0       constant
0xffff5830d784   196  d503201f       constant
0xffff5830d788   200  5830d3c0       constant
0xffff5830d78c   204  0000ffff       constant
0xffff5830d790   208  5830d661       constant
0xffff5830d794   212  0000ffff       constant
0xffff5830d798   216  00c8a980       constant
0xffff5830d79c   220  00000000       constant
0xffff5830d7a0   224  58206060       constant
0xffff5830d7a4   228  0000ffff       constant


RelocInfo (size = 13)
0xffff5830d70c  code target (COMPARE_IC)  (0xffff5830d3c0)
0xffff5830d728  embedded object  (0xffff5830d661 <Code: COMPARE_IC>)
0xffff5830d758  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff5830d75c  code target (STUB)  (0xffff58206060)
0xffff5830d77c  constant pool (size 44)


secret
--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 437)
0xffff5830f920     0  ldur x4, [x1, #15]
0xffff5830f924     4  ldur w5, [x4, #11]
0xffff5830f928     8  ldur x16, [x1, #23]
0xffff5830f92c    12  ldur x16, [x16, #39]
0xffff5830f930    16  tst x16, #0x8
0xffff5830f934    20  b.ne #+0x134 (addr 0xffff5830fa68)
0xffff5830f938    24  ldur x6, [x4, #23]
0xffff5830f93c    28  ldur x4, [x4, #15]
0xffff5830f940    32  add x4, x6, x4
0xffff5830f944    36  tbnz w2, #0, #+0x2c (addr 0xffff5830f970)
0xffff5830f948    40  asr x7, x2, #32
0xffff5830f94c    44  cmp w7, w5
0xffff5830f950    48  b.hs #+0x128 (addr 0xffff5830fa78)
0xffff5830f954    52  ldr w2, [x4, w7, sxtw #2]
0xffff5830f958    56  movn w16, #0x80000000
0xffff5830f95c    60  cmp w2, w16
0xffff5830f960    64  b.hi #+0x58 (addr 0xffff5830f9b8)
0xffff5830f964    68  lsl x3, x2, #32
0xffff5830f968    72  mov x0, x3
0xffff5830f96c    76  ret
0xffff5830f970    80  sub csp, jssp, #0x10 (16)
0xffff5830f974    84  stp fp, lr, [jssp, #-16]!
0xffff5830f978    88  movz fp, #0xa00000000
0xffff5830f97c    92  sub csp, jssp, #0x8 (8)
0xffff5830f980    96  str fp, [jssp, #-8]!
0xffff5830f984   100  add fp, jssp, #0x8 (8)
0xffff5830f988   104  ldur x16, [x2, #-1]
0xffff5830f98c   108  ldr x17, [x26, #120]
0xffff5830f990   112  cmp x16, x17
0xffff5830f994   116  b.ne #+0xf4 (addr 0xffff5830fa88)
0xffff5830f998   120  ldur d29, [x2, #7]
0xffff5830f99c   124  fcvtzs w7, d29
0xffff5830f9a0   128  scvtf d0, w7
0xffff5830f9a4   132  fcmp d29, d0
0xffff5830f9a8   136  b.ne #+0xe0 (addr 0xffff5830fa88)
0xffff5830f9ac   140  ldr lr, [jssp, #16]
0xffff5830f9b0   144  ldp xzr, fp, [jssp], #24
0xffff5830f9b4   148  b #-0x68 (addr 0xffff5830f94c)
0xffff5830f9b8   152  sub csp, jssp, #0x10 (16)
0xffff5830f9bc   156  stp fp, lr, [jssp, #-16]!
0xffff5830f9c0   160  movz fp, #0xa00000000
0xffff5830f9c4   164  sub csp, jssp, #0x8 (8)
0xffff5830f9c8   168  str fp, [jssp, #-8]!
0xffff5830f9cc   172  add fp, jssp, #0x8 (8)
0xffff5830f9d0   176  movz x1, #0x92c0
0xffff5830f9d4   180  movk x1, #0x16e7, lsl #16
0xffff5830f9d8   184  ldp x3, x0, [x1]
0xffff5830f9dc   188  adds x16, x3, #0x10 (16)
0xffff5830f9e0   192  ccmp x16, x0, #nzCv, lo
0xffff5830f9e4   196  b.hi #+0x18 (addr 0xffff5830f9fc)
0xffff5830f9e8   200  str x16, [x1]
0xffff5830f9ec   204  ldr x1, [x26, #120]
0xffff5830f9f0   208  str x1, [x3]
0xffff5830f9f4   212  orr x3, x3, #0x1
0xffff5830f9f8   216  b #+0x38 (addr 0xffff5830fa30)
0xffff5830f9fc   220  movz x3, #0x0
0xffff5830fa00   224  mov x16, lr
0xffff5830fa04   228  ldr x17, pc+76 (addr 0x0000ffff5830fa50)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5830fa08   232  blr x17
0xffff5830fa0c   236  ldur cp, [fp, #-8]
0xffff5830fa10   240  movz x0, #0x0
0xffff5830fa14   244  movz x1, #0x4b48
0xffff5830fa18   248  movk x1, #0xe4, lsl #16
0xffff5830fa1c   252  ldr x16, pc+60 (addr 0x0000ffff5830fa58)    ;; code: STUB, CEntryStub, minor: 5
0xffff5830fa20   256  blr x16
0xffff5830fa24   260  str x0, [jssp, #24]
0xffff5830fa28   264  ldr x16, pc+56 (addr 0x0000ffff5830fa60)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5830fa2c   268  blr x16
0xffff5830fa30   272  ucvtf d29, w2
0xffff5830fa34   276  stur d29, [x3, #7]
0xffff5830fa38   280  ldr lr, [jssp, #16]
0xffff5830fa3c   284  ldp xzr, fp, [jssp], #24
0xffff5830fa40   288  b #-0xd8 (addr 0xffff5830f968)
0xffff5830fa44   292  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5830fa48   296  d63f03e0       constant
0xffff5830fa4c   300  d503201f       constant
0xffff5830fa50   304  58206820       constant
0xffff5830fa54   308  0000ffff       constant
0xffff5830fa58   312  58206260       constant
0xffff5830fa5c   316  0000ffff       constant
0xffff5830fa60   320  582068e0       constant
0xffff5830fa64   324  0000ffff       constant
0xffff5830fa68   328  movz x16, #0x0
0xffff5830fa6c   332  sub csp, jssp, #0x10 (16)
0xffff5830fa70   336  stp fp, lr, [jssp, #-16]!
0xffff5830fa74   340  bl #+0x1c (addr 0xffff5830fa90)
0xffff5830fa78   344  movz x16, #0x8
0xffff5830fa7c   348  sub csp, jssp, #0x10 (16)
0xffff5830fa80   352  stp fp, lr, [jssp, #-16]!
0xffff5830fa84   356  bl #+0xc (addr 0xffff5830fa90)
0xffff5830fa88   360  movz x16, #0x10
0xffff5830fa8c   364  bl #+0x14 (addr 0xffff5830faa0)
0xffff5830fa90   368  movz x17, #0xa00000000
0xffff5830fa94   372  sub csp, jssp, #0x10 (16)
0xffff5830fa98   376  stp x17, cp, [jssp, #-16]!
0xffff5830fa9c   380  add fp, jssp, #0x10 (16)
0xffff5830faa0   384  ldr x17, pc+24 (addr 0x0000ffff5830fab8)    ;; lazy deoptimization bailout 0
0xffff5830faa4   388  add x17, x17, x16
0xffff5830faa8   392  br x17
0xffff5830faac   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5830fab0   400  d63f03e0       constant
0xffff5830fab4   404  d503201f       constant
0xffff5830fab8   408  58006000       constant
0xffff5830fabc   412  0000ffff       constant


Safepoints (size = 21)
0xffff5830fa24   260  000 | x3 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5830fa04  code target (STUB)  (0xffff58206820)
0xffff5830fa1c  code target (STUB)  (0xffff58206260)
0xffff5830fa28  code target (STUB)  (0xffff582068e0)
0xffff5830fa44  constant pool (size 36)
0xffff5830faa0  runtime entry
0xffff5830faac  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 437)
0xffff5830f920     0  ldur x4, [x1, #15]
0xffff5830f924     4  ldur w5, [x4, #11]
0xffff5830f928     8  ldur x16, [x1, #23]
0xffff5830f92c    12  ldur x16, [x16, #39]
0xffff5830f930    16  tst x16, #0x8
0xffff5830f934    20  b.ne #+0x134 (addr 0xffff5830fa68)
0xffff5830f938    24  ldur x6, [x4, #23]
0xffff5830f93c    28  ldur x4, [x4, #15]
0xffff5830f940    32  add x4, x6, x4
0xffff5830f944    36  tbnz w2, #0, #+0x2c (addr 0xffff5830f970)
0xffff5830f948    40  asr x7, x2, #32
0xffff5830f94c    44  cmp w7, w5
0xffff5830f950    48  b.hs #+0x128 (addr 0xffff5830fa78)
0xffff5830f954    52  ldr w2, [x4, w7, sxtw #2]
0xffff5830f958    56  movn w16, #0x80000000
0xffff5830f95c    60  cmp w2, w16
0xffff5830f960    64  b.hi #+0x58 (addr 0xffff5830f9b8)
0xffff5830f964    68  lsl x3, x2, #32
0xffff5830f968    72  mov x0, x3
0xffff5830f96c    76  ret
0xffff5830f970    80  sub csp, jssp, #0x10 (16)
0xffff5830f974    84  stp fp, lr, [jssp, #-16]!
0xffff5830f978    88  movz fp, #0xa00000000
0xffff5830f97c    92  sub csp, jssp, #0x8 (8)
0xffff5830f980    96  str fp, [jssp, #-8]!
0xffff5830f984   100  add fp, jssp, #0x8 (8)
0xffff5830f988   104  ldur x16, [x2, #-1]
0xffff5830f98c   108  ldr x17, [x26, #120]
0xffff5830f990   112  cmp x16, x17
0xffff5830f994   116  b.ne #+0xf4 (addr 0xffff5830fa88)
0xffff5830f998   120  ldur d29, [x2, #7]
0xffff5830f99c   124  fcvtzs w7, d29
0xffff5830f9a0   128  scvtf d0, w7
0xffff5830f9a4   132  fcmp d29, d0
0xffff5830f9a8   136  b.ne #+0xe0 (addr 0xffff5830fa88)
0xffff5830f9ac   140  ldr lr, [jssp, #16]
0xffff5830f9b0   144  ldp xzr, fp, [jssp], #24
0xffff5830f9b4   148  b #-0x68 (addr 0xffff5830f94c)
0xffff5830f9b8   152  sub csp, jssp, #0x10 (16)
0xffff5830f9bc   156  stp fp, lr, [jssp, #-16]!
0xffff5830f9c0   160  movz fp, #0xa00000000
0xffff5830f9c4   164  sub csp, jssp, #0x8 (8)
0xffff5830f9c8   168  str fp, [jssp, #-8]!
0xffff5830f9cc   172  add fp, jssp, #0x8 (8)
0xffff5830f9d0   176  movz x1, #0x92c0
0xffff5830f9d4   180  movk x1, #0x16e7, lsl #16
0xffff5830f9d8   184  ldp x3, x0, [x1]
0xffff5830f9dc   188  adds x16, x3, #0x10 (16)
0xffff5830f9e0   192  ccmp x16, x0, #nzCv, lo
0xffff5830f9e4   196  b.hi #+0x18 (addr 0xffff5830f9fc)
0xffff5830f9e8   200  str x16, [x1]
0xffff5830f9ec   204  ldr x1, [x26, #120]
0xffff5830f9f0   208  str x1, [x3]
0xffff5830f9f4   212  orr x3, x3, #0x1
0xffff5830f9f8   216  b #+0x38 (addr 0xffff5830fa30)
0xffff5830f9fc   220  movz x3, #0x0
0xffff5830fa00   224  mov x16, lr
0xffff5830fa04   228  ldr x17, pc+76 (addr 0x0000ffff5830fa50)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff5830fa08   232  blr x17
0xffff5830fa0c   236  ldur cp, [fp, #-8]
0xffff5830fa10   240  movz x0, #0x0
0xffff5830fa14   244  movz x1, #0x4b48
0xffff5830fa18   248  movk x1, #0xe4, lsl #16
0xffff5830fa1c   252  ldr x16, pc+60 (addr 0x0000ffff5830fa58)    ;; code: STUB, CEntryStub, minor: 5
0xffff5830fa20   256  blr x16
0xffff5830fa24   260  str x0, [jssp, #24]
0xffff5830fa28   264  ldr x16, pc+56 (addr 0x0000ffff5830fa60)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff5830fa2c   268  blr x16
0xffff5830fa30   272  ucvtf d29, w2
0xffff5830fa34   276  stur d29, [x3, #7]
0xffff5830fa38   280  ldr lr, [jssp, #16]
0xffff5830fa3c   284  ldp xzr, fp, [jssp], #24
0xffff5830fa40   288  b #-0xd8 (addr 0xffff5830f968)
0xffff5830fa44   292  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff5830fa48   296  d63f03e0       constant
0xffff5830fa4c   300  d503201f       constant
0xffff5830fa50   304  58206820       constant
0xffff5830fa54   308  0000ffff       constant
0xffff5830fa58   312  58206260       constant
0xffff5830fa5c   316  0000ffff       constant
0xffff5830fa60   320  582068e0       constant
0xffff5830fa64   324  0000ffff       constant
0xffff5830fa68   328  movz x16, #0x0
0xffff5830fa6c   332  sub csp, jssp, #0x10 (16)
0xffff5830fa70   336  stp fp, lr, [jssp, #-16]!
0xffff5830fa74   340  bl #+0x1c (addr 0xffff5830fa90)
0xffff5830fa78   344  movz x16, #0x8
0xffff5830fa7c   348  sub csp, jssp, #0x10 (16)
0xffff5830fa80   352  stp fp, lr, [jssp, #-16]!
0xffff5830fa84   356  bl #+0xc (addr 0xffff5830fa90)
0xffff5830fa88   360  movz x16, #0x10
0xffff5830fa8c   364  bl #+0x14 (addr 0xffff5830faa0)
0xffff5830fa90   368  movz x17, #0xa00000000
0xffff5830fa94   372  sub csp, jssp, #0x10 (16)
0xffff5830fa98   376  stp x17, cp, [jssp, #-16]!
0xffff5830fa9c   380  add fp, jssp, #0x10 (16)
0xffff5830faa0   384  ldr x17, pc+24 (addr 0x0000ffff5830fab8)    ;; lazy deoptimization bailout 0
0xffff5830faa4   388  add x17, x17, x16
0xffff5830faa8   392  br x17
0xffff5830faac   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff5830fab0   400  d63f03e0       constant
0xffff5830fab4   404  d503201f       constant
0xffff5830fab8   408  58006000       constant
0xffff5830fabc   412  0000ffff       constant


Safepoints (size = 21)
0xffff5830fa24   260  000 | x3 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff5830fa04  code target (STUB)  (0xffff58206820)
0xffff5830fa1c  code target (STUB)  (0xffff58206260)
0xffff5830fa28  code target (STUB)  (0xffff582068e0)
0xffff5830fa44  constant pool (size 36)
0xffff5830faa0  runtime entry
0xffff5830faac  constant pool (size 20)


